import { iO as Xp, bC as Ye, bR as vn, og as Qp, oh as fC, ha as lo, kM as ca, bE as co, bD as Et, bJ as fa, bN as ae, bL as ga, bM as uo, fC as V, bT as he, bV as ic, bO as Ct, bP as He, fI as Ke, bQ as ee, bU as nc, fA as oi, bF as ne, fG as ii, bS as Re, iu as po, fD as Nt, ii as dt, ij as ht, i4 as ni, oi as gC, bG as ho, mq as gn, bH as Ar, bK as Gt, fK as Or, oj as vC, lu as mC, bI as xt, iB as yC, nM as CC, nL as wC, ok as sc, ol as so, hd as ac, fF as Zp, om as Jp, fH as da, i3 as ao, mu as EC, ls as fn, on as RC } from "./main-BEi6lHs4.js";
import { T as SC, C as _C } from "./table-state-manager-CQv-OGS1.js";
var wt = {};
(function(c) {
  Object.defineProperty(c, "__esModule", { value: !0 });
  function w(n) {
    return n == null || n === "" ? null : n;
  }
  function g(n, t) {
    return t === void 0 && (t = !1), n != null && (n !== "" || t);
  }
  function C(n) {
    return !g(n);
  }
  function S(n) {
    return n == null || n.length === 0;
  }
  function O(n) {
    return n != null && typeof n.toString == "function" ? n.toString() : null;
  }
  function L(n) {
    if (n !== void 0) {
      if (n === null || n === "")
        return null;
      if (typeof n == "number")
        return isNaN(n) ? void 0 : n;
      var t = parseInt(n, 10);
      return isNaN(t) ? void 0 : t;
    }
  }
  function x(n) {
    if (n !== void 0)
      return n === null || n === "" ? !1 : typeof n == "boolean" ? n : /true/i.test(n);
  }
  function G(n) {
    if (!(n == null || n === ""))
      return n;
  }
  function se(n, t) {
    return n == null && t == null ? !0 : n == null && t != null || n != null && t == null ? !1 : n === t;
  }
  function Q(n, t) {
    var e = n ? JSON.stringify(n) : null, r = t ? JSON.stringify(t) : null;
    return e === r;
  }
  function $(n, t, e) {
    e === void 0 && (e = !1);
    var r = n == null, o = t == null;
    if (n && n.toNumber && (n = n.toNumber()), t && t.toNumber && (t = t.toNumber()), r && o)
      return 0;
    if (r)
      return -1;
    if (o)
      return 1;
    function i(s, a) {
      return s > a ? 1 : s < a ? -1 : 0;
    }
    if (typeof n != "string" || !e)
      return i(n, t);
    try {
      return n.localeCompare(t);
    } catch {
      return i(n, t);
    }
  }
  function W(n) {
    if (n instanceof Set || n instanceof Map) {
      var t = [];
      return n.forEach(function(e) {
        return t.push(e);
      }), t;
    }
    return Object.values(n);
  }
  var we = /* @__PURE__ */ Object.freeze({
    makeNull: w,
    exists: g,
    missing: C,
    missingOrEmpty: S,
    toStringOrNull: O,
    attrToNumber: L,
    attrToBoolean: x,
    attrToString: G,
    referenceCompare: se,
    jsonEquals: Q,
    defaultComparator: $,
    values: W
  });
  var te = (
    /** @class */
    function() {
      function n() {
        this.existingKeys = {};
      }
      return n.prototype.addExistingKeys = function(t) {
        for (var e = 0; e < t.length; e++)
          this.existingKeys[t[e]] = !0;
      }, n.prototype.getUniqueKey = function(t, e) {
        t = O(t);
        for (var r = 0; ; ) {
          var o = void 0;
          if (t ? (o = t, r !== 0 && (o += "_" + r)) : e ? (o = e, r !== 0 && (o += "_" + r)) : o = "" + r, !this.existingKeys[o])
            return this.existingKeys[o] = !0, o;
          r++;
        }
      }, n;
    }()
  );
  function ie(n, t) {
    n != null && (Array.isArray(n) ? n.forEach(function(e, r) {
      return t("" + r, e);
    }) : Object.keys(n).forEach(function(e) {
      return t(e, n[e]);
    }));
  }
  function Rt(n) {
    for (var t = {}, e = Object.keys(n), r = 0; r < e.length; r++) {
      var o = e[r], i = n[o];
      t[o] = i;
    }
    return t;
  }
  function ze(n) {
    return JSON.parse(JSON.stringify(n));
  }
  function ft(n, t) {
    if (n) {
      var e = n, r = {};
      return Object.keys(e).forEach(function(o) {
        if (!(t && t.indexOf(o) >= 0)) {
          var i = e[o], s = $t(i) && i.constructor === Object;
          s ? r[o] = ft(i) : r[o] = i;
        }
      }), r;
    }
  }
  function zt(n, t) {
    return n[t];
  }
  function Pr(n, t, e) {
    n[t] = e;
  }
  function Ht(n, t) {
    for (var e = [], r = 2; r < arguments.length; r++)
      e[r - 2] = arguments[r];
    e.forEach(function(o) {
      return nr(n, t, o);
    });
  }
  function nr(n, t, e, r) {
    var o = zt(n, e);
    o !== void 0 && Pr(t, e, r ? r(o) : o);
  }
  function Tr(n) {
    var t = {};
    return n.filter(function(e) {
      return e != null;
    }).forEach(function(e) {
      Object.keys(e).forEach(function(r) {
        return t[r] = null;
      });
    }), Object.keys(t);
  }
  function Se(n) {
    if (!n)
      return [];
    var t = Object;
    if (typeof t.values == "function")
      return t.values(n);
    var e = [];
    for (var r in n)
      n.hasOwnProperty(r) && n.propertyIsEnumerable(r) && e.push(n[r]);
    return e;
  }
  function Fe(n, t, e, r) {
    e === void 0 && (e = !0), r === void 0 && (r = !1), g(t) && ie(t, function(o, i) {
      var s = n[o];
      if (s !== i) {
        if (r) {
          var a = s == null && i != null;
          if (a) {
            var l = typeof i == "object" && i.constructor === Object, u = l;
            u && (s = {}, n[o] = s);
          }
        }
        $t(i) && $t(s) && !Array.isArray(s) ? Fe(s, i, e, r) : (e || i !== void 0) && (n[o] = i);
      }
    });
  }
  function sr(n) {
    return C(n) || Object.keys(n).length === 0;
  }
  function Dr(n, t, e) {
    if (n == null)
      return e;
    for (var r = t.split("."), o = n; r.length > 1; )
      if (o = o[r.shift()], o == null)
        return e;
    var i = o[r[0]];
    return i ?? e;
  }
  function fo(n, t, e) {
    if (n != null) {
      for (var r = t.split("."), o = n; r.length > 1; )
        if (o = o[r.shift()], o == null)
          return;
      o[r[0]] = e;
    }
  }
  function si(n) {
    return Object.freeze(n), W(n).forEach(function(t) {
      ($t(t) || typeof t == "function") && si(t);
    }), n;
  }
  function qe(n, t, e) {
    if (!(!t || !n)) {
      if (!e)
        return n[t];
      for (var r = t.split("."), o = n, i = 0; i < r.length; i++) {
        if (o == null)
          return;
        o = o[r[i]];
      }
      return o;
    }
  }
  function ar(n, t) {
    Object.keys(n).forEach(function(o) {
      var i = n[o];
      typeof i == "object" && (n[o] = void 0);
    });
    var e = Object.getPrototypeOf(n), r = {};
    Object.keys(e).forEach(function(o) {
      var i = e[o];
      if (typeof i == "function") {
        var s = function() {
          console.warn("AG Grid: " + t + " function " + o + `() cannot be called as the grid has been destroyed.
                     Please don't call grid API functions on destroyed grids - as a matter of fact you shouldn't
                     be keeping the API reference, your application has a memory leak! Remove the API reference
                     when the grid is destroyed.`);
        };
        r[o] = { value: s, writable: !0 };
      }
    }), Object.defineProperties(n, r);
  }
  function $t(n) {
    return typeof n == "object" && n !== null;
  }
  var lr = /* @__PURE__ */ Object.freeze({
    iterateObject: ie,
    cloneObject: Rt,
    deepCloneObject: ze,
    deepCloneDefinition: ft,
    getProperty: zt,
    setProperty: Pr,
    copyPropertiesIfPresent: Ht,
    copyPropertyIfPresent: nr,
    getAllKeysInObjects: Tr,
    getAllValuesInObject: Se,
    mergeDeep: Fe,
    missingOrEmptyObject: sr,
    get: Dr,
    set: fo,
    deepFreeze: si,
    getValueUsingField: qe,
    removeAllReferences: ar,
    isNonNullObject: $t
  });
  var yn = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg, Xe = /([^\s,]+)/g, br = {};
  function me(n, t) {
    br[t] || (n(), br[t] = !0);
  }
  function Fr(n) {
    if (n.name)
      return n.name;
    var t = /function\s+([^\(]+)/.exec(n.toString());
    return t && t.length === 2 ? t[1].trim() : null;
  }
  function Cn(n) {
    var t = n.toString().replace(yn, "");
    return t.slice(t.indexOf("(") + 1, t.indexOf(")")).match(Xe) || [];
  }
  function ur(n) {
    return !!(n && n.constructor && n.call && n.apply);
  }
  function go(n) {
    Lr(n, 400);
  }
  var vo = [], mo = !1;
  function yo(n) {
    vo.push(n), !mo && (mo = !0, window.setTimeout(function() {
      var t = vo.slice();
      vo.length = 0, mo = !1, t.forEach(function(e) {
        return e();
      });
    }, 0));
  }
  function Lr(n, t) {
    t === void 0 && (t = 0), n.length > 0 && window.setTimeout(function() {
      return n.forEach(function(e) {
        return e();
      });
    }, t);
  }
  function it(n, t, e) {
    e === void 0 && (e = !1);
    var r;
    return function() {
      for (var o = [], i = 0; i < arguments.length; i++)
        o[i] = arguments[i];
      var s = this, a = e && !r;
      window.clearTimeout(r), r = window.setTimeout(function() {
        r = null, e || n.apply(s, o);
      }, t), a && n.apply(s, o);
    };
  }
  function Mr(n, t) {
    var e = 0;
    return function() {
      for (var r = [], o = 0; o < arguments.length; o++)
        r[o] = arguments[o];
      var i = this, s = (/* @__PURE__ */ new Date()).getTime();
      s - e < t || (e = s, n.apply(i, r));
    };
  }
  function ai(n, t, e, r) {
    e === void 0 && (e = 100);
    var o = (/* @__PURE__ */ new Date()).getTime(), i = null, s = !1, a = function() {
      var l = (/* @__PURE__ */ new Date()).getTime() - o > e;
      (n() || l) && (t(), s = !0, i != null && (window.clearInterval(i), i = null), l && r && console.warn(r));
    };
    a(), s || (i = window.setInterval(a, 10));
  }
  function wn() {
    for (var n = [], t = 0; t < arguments.length; t++)
      n[t] = arguments[t];
    return function(e) {
      return n.reduce(function(r, o) {
        return o(r);
      }, e);
    };
  }
  function li(n) {
    n && n();
  }
  var En = /* @__PURE__ */ Object.freeze({
    doOnce: me,
    getFunctionName: Fr,
    getFunctionParameters: Cn,
    isFunction: ur,
    executeInAWhile: go,
    executeNextVMTurn: yo,
    executeAfter: Lr,
    debounce: it,
    throttle: Mr,
    waitUntil: ai,
    compose: wn,
    callIfPresent: li
  });
  var ui = (
    /** @class */
    function() {
      function n(t, e) {
        if (this.beanWrappers = {}, this.destroyed = !1, !(!t || !t.beanClasses)) {
          this.contextParams = t, this.logger = e, this.logger.log(">> creating ag-Application Context"), this.createBeans();
          var r = this.getBeanInstances();
          this.wireBeans(r), this.logger.log(">> ag-Application Context ready - component is alive");
        }
      }
      return n.prototype.getBeanInstances = function() {
        return W(this.beanWrappers).map(function(t) {
          return t.beanInstance;
        });
      }, n.prototype.createBean = function(t, e) {
        if (!t)
          throw Error("Can't wire to bean since it is null");
        return this.wireBeans([t], e), t;
      }, n.prototype.wireBeans = function(t, e) {
        this.autoWireBeans(t), this.methodWireBeans(t), this.callLifeCycleMethods(t, "preConstructMethods"), g(e) && t.forEach(e), this.callLifeCycleMethods(t, "postConstructMethods");
      }, n.prototype.createBeans = function() {
        var t = this;
        this.contextParams.beanClasses.forEach(this.createBeanWrapper.bind(this)), ie(this.beanWrappers, function(r, o) {
          var i;
          o.bean.__agBeanMetaData && o.bean.__agBeanMetaData.autowireMethods && o.bean.__agBeanMetaData.autowireMethods.agConstructor && (i = o.bean.__agBeanMetaData.autowireMethods.agConstructor);
          var s = t.getBeansForParameters(i, o.bean.name), a = Rn(o.bean, s);
          o.beanInstance = a;
        });
        var e = Object.keys(this.beanWrappers).join(", ");
        this.logger.log("created beans: " + e);
      }, n.prototype.createBeanWrapper = function(t) {
        var e = t.__agBeanMetaData;
        if (!e) {
          var r = void 0;
          t.prototype.constructor ? r = Fr(t.prototype.constructor) : r = "" + t, console.error("Context item " + r + " is not a bean");
          return;
        }
        var o = {
          bean: t,
          beanInstance: null,
          beanName: e.beanName
        };
        this.beanWrappers[e.beanName] = o;
      }, n.prototype.autoWireBeans = function(t) {
        var e = this;
        t.forEach(function(r) {
          e.forEachMetaDataInHierarchy(r, function(o, i) {
            var s = o.agClassAttributes;
            s && s.forEach(function(a) {
              var l = e.lookupBeanInstance(i, a.beanName, a.optional);
              r[a.attributeName] = l;
            });
          });
        });
      }, n.prototype.methodWireBeans = function(t) {
        var e = this;
        t.forEach(function(r) {
          e.forEachMetaDataInHierarchy(r, function(o, i) {
            ie(o.autowireMethods, function(s, a) {
              if (s !== "agConstructor") {
                var l = e.getBeansForParameters(a, i);
                r[s].apply(r, l);
              }
            });
          });
        });
      }, n.prototype.forEachMetaDataInHierarchy = function(t, e) {
        for (var r = Object.getPrototypeOf(t); r != null; ) {
          var o = r.constructor;
          if (o.hasOwnProperty("__agBeanMetaData")) {
            var i = o.__agBeanMetaData, s = this.getBeanName(o);
            e(i, s);
          }
          r = Object.getPrototypeOf(r);
        }
      }, n.prototype.getBeanName = function(t) {
        if (t.__agBeanMetaData && t.__agBeanMetaData.beanName)
          return t.__agBeanMetaData.beanName;
        var e = t.toString(), r = e.substring(9, e.indexOf("("));
        return r;
      }, n.prototype.getBeansForParameters = function(t, e) {
        var r = this, o = [];
        return t && ie(t, function(i, s) {
          var a = r.lookupBeanInstance(e, s);
          o[Number(i)] = a;
        }), o;
      }, n.prototype.lookupBeanInstance = function(t, e, r) {
        if (r === void 0 && (r = !1), e === "context")
          return this;
        if (this.contextParams.providedBeanInstances && this.contextParams.providedBeanInstances.hasOwnProperty(e))
          return this.contextParams.providedBeanInstances[e];
        var o = this.beanWrappers[e];
        return o ? o.beanInstance : (r || console.error("AG Grid: unable to find bean reference " + e + " while initialising " + t), null);
      }, n.prototype.callLifeCycleMethods = function(t, e) {
        var r = this;
        t.forEach(function(o) {
          return r.callLifeCycleMethodsOnBean(o, e);
        });
      }, n.prototype.callLifeCycleMethodsOnBean = function(t, e, r) {
        var o = {};
        this.forEachMetaDataInHierarchy(t, function(s) {
          var a = s[e];
          a && a.forEach(function(l) {
            l != r && (o[l] = !0);
          });
        });
        var i = Object.keys(o);
        i.forEach(function(s) {
          return t[s]();
        });
      }, n.prototype.getBean = function(t) {
        return this.lookupBeanInstance("getBean", t, !0);
      }, n.prototype.destroy = function() {
        if (!this.destroyed) {
          this.logger.log(">> Shutting down ag-Application Context");
          var t = this.getBeanInstances();
          this.destroyBeans(t), this.contextParams.providedBeanInstances = null, this.destroyed = !0, this.logger.log(">> ag-Application Context shut down - component is dead");
        }
      }, n.prototype.destroyBean = function(t) {
        t && this.destroyBeans([t]);
      }, n.prototype.destroyBeans = function(t) {
        var e = this;
        return t ? (t.forEach(function(r) {
          e.callLifeCycleMethodsOnBean(r, "preDestroyMethods", "destroy");
          var o = r;
          typeof o.destroy == "function" && o.destroy();
        }), []) : [];
      }, n;
    }()
  );
  function Rn(n, t) {
    var e = [null].concat(t), r = n.bind.apply(n, e);
    return new r();
  }
  function Co(n, t, e) {
    var r = Vt(n.constructor);
    r.preConstructMethods || (r.preConstructMethods = []), r.preConstructMethods.push(t);
  }
  function B(n, t, e) {
    var r = Vt(n.constructor);
    r.postConstructMethods || (r.postConstructMethods = []), r.postConstructMethods.push(t);
  }
  function De(n, t, e) {
    var r = Vt(n.constructor);
    r.preDestroyMethods || (r.preDestroyMethods = []), r.preDestroyMethods.push(t);
  }
  function j(n) {
    return function(t) {
      var e = Vt(t);
      e.beanName = n;
    };
  }
  function h(n) {
    return function(t, e, r) {
      pi(t, n, !1, t, e);
    };
  }
  function ve(n) {
    return function(t, e, r) {
      pi(t, n, !0, t, e);
    };
  }
  function pi(n, t, e, r, o, i) {
    if (t === null) {
      console.error("AG Grid: Autowired name should not be null");
      return;
    }
    var s = Vt(n.constructor);
    s.agClassAttributes || (s.agClassAttributes = []), s.agClassAttributes.push({
      attributeName: o,
      beanName: t,
      optional: e
    });
  }
  function Ne(n) {
    return function(t, e, r) {
      var o = typeof t == "function" ? t : t.constructor, i;
      if (typeof r == "number") {
        var s = void 0;
        e ? (i = Vt(o), s = e) : (i = Vt(o), s = "agConstructor"), i.autowireMethods || (i.autowireMethods = {}), i.autowireMethods[s] || (i.autowireMethods[s] = {}), i.autowireMethods[s][r] = n;
      }
    };
  }
  function Vt(n) {
    return n.hasOwnProperty("__agBeanMetaData") || (n.__agBeanMetaData = {}), n.__agBeanMetaData;
  }
  var ci = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, pr = function(n, t) {
    return function(e, r) {
      t(e, r, n);
    };
  }, nt = (
    /** @class */
    function() {
      function n() {
        this.allSyncListeners = /* @__PURE__ */ new Map(), this.allAsyncListeners = /* @__PURE__ */ new Map(), this.globalSyncListeners = /* @__PURE__ */ new Set(), this.globalAsyncListeners = /* @__PURE__ */ new Set(), this.asyncFunctionsQueue = [], this.scheduled = !1, this.firedEvents = {};
      }
      return n.prototype.setBeans = function(t, e, r, o) {
        if (o === void 0 && (o = null), this.frameworkOverrides = r, o) {
          var i = e.useAsyncEvents();
          this.addGlobalListener(o, i);
        }
      }, n.prototype.getListeners = function(t, e, r) {
        var o = e ? this.allAsyncListeners : this.allSyncListeners, i = o.get(t);
        return !i && r && (i = /* @__PURE__ */ new Set(), o.set(t, i)), i;
      }, n.prototype.noRegisteredListenersExist = function() {
        return this.allSyncListeners.size === 0 && this.allAsyncListeners.size === 0 && this.globalSyncListeners.size === 0 && this.globalAsyncListeners.size === 0;
      }, n.prototype.addEventListener = function(t, e, r) {
        r === void 0 && (r = !1), this.getListeners(t, r, !0).add(e);
      }, n.prototype.removeEventListener = function(t, e, r) {
        r === void 0 && (r = !1);
        var o = this.getListeners(t, r, !1);
        if (o && (o.delete(e), o.size === 0)) {
          var i = r ? this.allAsyncListeners : this.allSyncListeners;
          i.delete(t);
        }
      }, n.prototype.addGlobalListener = function(t, e) {
        e === void 0 && (e = !1), (e ? this.globalAsyncListeners : this.globalSyncListeners).add(t);
      }, n.prototype.removeGlobalListener = function(t, e) {
        e === void 0 && (e = !1), (e ? this.globalAsyncListeners : this.globalSyncListeners).delete(t);
      }, n.prototype.dispatchEvent = function(t) {
        this.dispatchToListeners(t, !0), this.dispatchToListeners(t, !1), this.firedEvents[t.type] = !0;
      }, n.prototype.dispatchEventOnce = function(t) {
        this.firedEvents[t.type] || this.dispatchEvent(t);
      }, n.prototype.dispatchToListeners = function(t, e) {
        var r = this, o = t.type, i = function(l) {
          return l.forEach(function(u) {
            e ? r.dispatchAsync(function() {
              return u(t);
            }) : u(t);
          });
        }, s = this.getListeners(o, e, !1);
        s && i(s);
        var a = e ? this.globalAsyncListeners : this.globalSyncListeners;
        a.forEach(function(l) {
          e ? r.dispatchAsync(function() {
            return r.frameworkOverrides.dispatchEvent(o, function() {
              return l(o, t);
            }, !0);
          }) : r.frameworkOverrides.dispatchEvent(o, function() {
            return l(o, t);
          }, !0);
        });
      }, n.prototype.dispatchAsync = function(t) {
        this.asyncFunctionsQueue.push(t), this.scheduled || (window.setTimeout(this.flushAsyncQueue.bind(this), 0), this.scheduled = !0);
      }, n.prototype.flushAsyncQueue = function() {
        this.scheduled = !1;
        var t = this.asyncFunctionsQueue.slice();
        this.asyncFunctionsQueue = [], t.forEach(function(e) {
          return e();
        });
      }, ci([
        pr(0, Ne("loggerFactory")),
        pr(1, Ne("gridOptionsWrapper")),
        pr(2, Ne("frameworkOverrides")),
        pr(3, Ne("globalEventListener"))
      ], n.prototype, "setBeans", null), n = ci([
        j("eventService")
      ], n), n;
    }()
  );
  var E = (
    /** @class */
    function() {
      function n() {
      }
      return n.ROW_BUFFER_SIZE = 10, n.LAYOUT_INTERVAL = 500, n.BATCH_WAIT_MILLIS = 50, n.EXPORT_TYPE_DRAG_COPY = "dragCopy", n.EXPORT_TYPE_CLIPBOARD = "clipboard", n.EXPORT_TYPE_EXCEL = "excel", n.EXPORT_TYPE_CSV = "csv", n.ROW_MODEL_TYPE_INFINITE = "infinite", n.ROW_MODEL_TYPE_VIEWPORT = "viewport", n.ROW_MODEL_TYPE_CLIENT_SIDE = "clientSide", n.ROW_MODEL_TYPE_SERVER_SIDE = "serverSide", n.ALWAYS = "always", n.ONLY_WHEN_GROUPING = "onlyWhenGrouping", n.PINNED_TOP = "top", n.PINNED_BOTTOM = "bottom", n.DOM_LAYOUT_NORMAL = "normal", n.DOM_LAYOUT_PRINT = "print", n.DOM_LAYOUT_AUTO_HEIGHT = "autoHeight", n.GROUP_AUTO_COLUMN_ID = "ag-Grid-AutoColumn", n.SOURCE_PASTE = "paste", n.PINNED_RIGHT = "right", n.PINNED_LEFT = "left", n.SORT_ASC = "asc", n.SORT_DESC = "desc", n.INPUT_SELECTOR = "input, select, button, textarea", n.FOCUSABLE_SELECTOR = "[tabindex], input, select, button, textarea", n.FOCUSABLE_EXCLUDE = ".ag-hidden, .ag-hidden *, [disabled], .ag-disabled, .ag-disabled *", n;
    }()
  );
  (function(n) {
    n.CommunityCoreModule = "@ag-grid-community/core", n.CommunityAllModules = "@ag-grid-community/all", n.InfiniteRowModelModule = "@ag-grid-community/infinite-row-model", n.ClientSideRowModelModule = "@ag-grid-community/client-side-row-model", n.CsvExportModule = "@ag-grid-community/csv-export", n.EnterpriseCoreModule = "@ag-grid-enterprise/core", n.EnterpriseAllModules = "@ag-grid-enterprise/all", n.RowGroupingModule = "@ag-grid-enterprise/row-grouping", n.ColumnToolPanelModule = "@ag-grid-enterprise/column-tool-panel", n.FiltersToolPanelModule = "@ag-grid-enterprise/filter-tool-panel", n.MenuModule = "@ag-grid-enterprise/menu", n.SetFilterModule = "@ag-grid-enterprise/set-filter", n.MultiFilterModule = "@ag-grid-enterprise/multi-filter", n.StatusBarModule = "@ag-grid-enterprise/status-bar", n.SideBarModule = "@ag-grid-enterprise/side-bar", n.RangeSelectionModule = "@ag-grid-enterprise/range-selection", n.MasterDetailModule = "@ag-grid-enterprise/master-detail", n.RichSelectModule = "@ag-grid-enterprise/rich-select", n.GridChartsModule = "@ag-grid-enterprise/charts", n.ViewportRowModelModule = "@ag-grid-enterprise/viewport-row-model", n.ServerSideRowModelModule = "@ag-grid-enterprise/server-side-row-model", n.ExcelExportModule = "@ag-grid-enterprise/excel-export", n.ClipboardModule = "@ag-grid-enterprise/clipboard", n.SparklinesModule = "@ag-grid-enterprise/sparklines", n.AngularModule = "@ag-grid-community/angular", n.ReactModule = "@ag-grid-community/react", n.VueModule = "@ag-grid-community/vue", n.PolymerModule = "@ag-grid-community/polymer";
  })(c.ModuleNames || (c.ModuleNames = {}));
  var oe = (
    /** @class */
    function() {
      function n() {
      }
      return n.register = function(t, e) {
        e === void 0 && (e = !0), n.modulesMap[t.moduleName] = t, n.moduleBased === void 0 ? n.moduleBased = e : n.moduleBased !== e && me(function() {
          console.warn("AG Grid: You are mixing modules (i.e. @ag-grid-community/core) and packages (ag-grid-community) - you can only use one or the other of these mechanisms."), console.warn("Please see https://www.ag-grid.com/javascript-grid/packages-modules/ for more information.");
        }, "ModulePackageCheck");
      }, n.registerModules = function(t, e) {
        e === void 0 && (e = !0), t && t.forEach(function(r) {
          return n.register(r, e);
        });
      }, n.assertRegistered = function(t, e) {
        if (this.isRegistered(t))
          return !0;
        var r = e + t, o;
        return n.moduleBased ? o = "AG Grid: unable to use " + e + " as module " + t + " is not present. Please see: https://www.ag-grid.com/javascript-grid/modules/" : o = "AG Grid: unable to use " + e + " as package 'ag-grid-enterprise' is not present. Please see: https://www.ag-grid.com/javascript-grid/packages/", me(function() {
          console.warn(o);
        }, r), !1;
      }, n.isRegistered = function(t) {
        return !!n.modulesMap[t];
      }, n.getRegisteredModules = function() {
        return W(n.modulesMap);
      }, n.isPackageBased = function() {
        return !n.moduleBased;
      }, n.modulesMap = {}, n;
    }()
  );
  var St = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, di = 0, A = (
    /** @class */
    function() {
      function n(t, e, r, o) {
        this.instanceId = di++, this.moving = !1, this.menuVisible = !1, this.filterActive = !1, this.eventService = new nt(), this.rowGroupActive = !1, this.pivotActive = !1, this.aggregationActive = !1, this.colDef = t, this.userProvidedColDef = e, this.colId = r, this.primary = o, this.setState(t);
      }
      return n.prototype.getInstanceId = function() {
        return this.instanceId;
      }, n.prototype.setState = function(t) {
        t.sort !== void 0 ? (t.sort === E.SORT_ASC || t.sort === E.SORT_DESC) && (this.sort = t.sort) : (t.initialSort === E.SORT_ASC || t.initialSort === E.SORT_DESC) && (this.sort = t.initialSort);
        var e = L(t.sortIndex), r = L(t.initialSortIndex);
        e !== void 0 ? e !== null && (this.sortIndex = e) : r !== null && (this.sortIndex = r);
        var o = x(t.hide), i = x(t.initialHide);
        o !== void 0 ? this.visible = !o : this.visible = !i, t.pinned !== void 0 ? this.setPinned(t.pinned) : this.setPinned(t.initialPinned);
        var s = L(t.flex), a = L(t.initialFlex);
        s !== void 0 ? this.flex = s : a !== void 0 && (this.flex = a);
      }, n.prototype.setColDef = function(t, e) {
        this.colDef = t, this.userProvidedColDef = e, this.initMinAndMaxWidths(), this.initDotNotation();
      }, n.prototype.getUserProvidedColDef = function() {
        return this.userProvidedColDef;
      }, n.prototype.setParent = function(t) {
        this.parent = t;
      }, n.prototype.getParent = function() {
        return this.parent;
      }, n.prototype.setOriginalParent = function(t) {
        this.originalParent = t;
      }, n.prototype.getOriginalParent = function() {
        return this.originalParent;
      }, n.prototype.initialise = function() {
        this.initMinAndMaxWidths(), this.resetActualWidth("gridInitializing"), this.initDotNotation(), this.validate();
      }, n.prototype.initDotNotation = function() {
        var t = this.gridOptionsWrapper.isSuppressFieldDotNotation();
        this.fieldContainsDots = g(this.colDef.field) && this.colDef.field.indexOf(".") >= 0 && !t, this.tooltipFieldContainsDots = g(this.colDef.tooltipField) && this.colDef.tooltipField.indexOf(".") >= 0 && !t;
      }, n.prototype.initMinAndMaxWidths = function() {
        var t = this.colDef;
        this.minWidth = this.columnUtils.calculateColMinWidth(t), this.maxWidth = this.columnUtils.calculateColMaxWidth(t);
      }, n.prototype.resetActualWidth = function(t) {
        t === void 0 && (t = "api");
        var e = this.columnUtils.calculateColInitialWidth(this.colDef);
        this.setActualWidth(e, t, !0);
      }, n.prototype.isEmptyGroup = function() {
        return !1;
      }, n.prototype.isRowGroupDisplayed = function(t) {
        if (C(this.colDef) || C(this.colDef.showRowGroup))
          return !1;
        var e = this.colDef.showRowGroup === !0, r = this.colDef.showRowGroup === t;
        return e || r;
      }, n.prototype.isPrimary = function() {
        return this.primary;
      }, n.prototype.isFilterAllowed = function() {
        var t = !!this.colDef.filter || !!this.colDef.filterFramework;
        return t;
      }, n.prototype.isFieldContainsDots = function() {
        return this.fieldContainsDots;
      }, n.prototype.isTooltipFieldContainsDots = function() {
        return this.tooltipFieldContainsDots;
      }, n.prototype.validate = function() {
        var t = this.colDef;
        function e(s, a, l) {
          me(function() {
            me(function() {
              return console.warn(s);
            }, a);
          }, a);
        }
        var r = this.gridOptionsWrapper.isRowModelDefault();
        if (r && !oe.isRegistered(c.ModuleNames.RowGroupingModule)) {
          var o = ["enableRowGroup", "rowGroup", "rowGroupIndex", "enablePivot", "enableValue", "pivot", "pivotIndex", "aggFunc"];
          o.forEach(function(s) {
            g(t[s]) && (oe.isPackageBased() ? e("AG Grid: " + s + " is only valid in ag-grid-enterprise, your column definition should not have " + s, "ColumnRowGroupingMissing" + s) : e("AG Grid: " + s + " is only valid with AG Grid Enterprise Module " + c.ModuleNames.RowGroupingModule + " - your column definition should not have " + s, "ColumnRowGroupingMissing" + s));
          });
        }
        if (oe.isRegistered(c.ModuleNames.RichSelectModule) || this.colDef.cellEditor === "agRichSelect" && (oe.isPackageBased() ? e("AG Grid: " + this.colDef.cellEditor + " can only be used with ag-grid-enterprise", "ColumnRichSelectMissing") : e("AG Grid: " + this.colDef.cellEditor + " can only be used with AG Grid Enterprise Module " + c.ModuleNames.RichSelectModule, "ColumnRichSelectMissing")), this.gridOptionsWrapper.isTreeData()) {
          var i = ["rowGroup", "rowGroupIndex", "pivot", "pivotIndex"];
          i.forEach(function(s) {
            g(t[s]) && e("AG Grid: " + s + " is not possible when doing tree data, your column definition should not have " + s, "TreeDataCannotRowGroup");
          });
        }
        g(this.colDef.width) && typeof this.colDef.width != "number" && e("AG Grid: colDef.width should be a number, not " + typeof this.colDef.width, "ColumnCheck_asdfawef"), t.pinnedRowCellRenderer && e("AG Grid: pinnedRowCellRenderer no longer exists, use cellRendererSelector if you want a different Cell Renderer for pinned rows. Check params.node.rowPinned. This was an unfortunate (but necessary) change we had to do to allow future plans we have of re-skinng the data grid in frameworks such as React, Angular and Vue. See https://www.ag-grid.com/javascript-grid/cell-rendering/#many-renderers-one-column", "colDef.pinnedRowCellRenderer-deprecated"), t.pinnedRowCellRendererParams && e("AG Grid: pinnedRowCellRenderer no longer exists, use cellRendererSelector if you want a different Cell Renderer for pinned rows. Check params.node.rowPinned. This was an unfortunate (but necessary) change we had to do to allow future plans we have of re-skinng the data grid in frameworks such as React, Angular and Vue. See https://www.ag-grid.com/javascript-grid/cell-rendering/#many-renderers-one-column", "colDef.pinnedRowCellRenderer-deprecated"), t.pinnedRowCellRendererFramework && e("AG Grid: pinnedRowCellRenderer no longer exists, use cellRendererSelector if you want a different Cell Renderer for pinned rows. Check params.node.rowPinned. This was an unfortunate (but necessary) change we had to do to allow future plans we have of re-skinng the data grid in frameworks such as React, Angular and Vue. See https://www.ag-grid.com/javascript-grid/cell-rendering/#many-renderers-one-column", "colDef.pinnedRowCellRenderer-deprecated"), t.pinnedRowValueGetter && e("AG Grid: pinnedRowCellRenderer is deprecated, use cellRendererSelector if you want a different Cell Renderer for pinned rows. Check params.node.rowPinned. This was an unfortunate (but necessary) change we had to do to allow future plans we have of re-skinng the data grid in frameworks such as React, Angular and Vue.", "colDef.pinnedRowCellRenderer-deprecated");
      }, n.prototype.addEventListener = function(t, e) {
        this.eventService.addEventListener(t, e);
      }, n.prototype.removeEventListener = function(t, e) {
        this.eventService.removeEventListener(t, e);
      }, n.prototype.createColumnFunctionCallbackParams = function(t) {
        return {
          node: t,
          data: t.data,
          column: this,
          colDef: this.colDef,
          context: this.gridOptionsWrapper.getContext(),
          api: this.gridOptionsWrapper.getApi(),
          columnApi: this.gridOptionsWrapper.getColumnApi()
        };
      }, n.prototype.isSuppressNavigable = function(t) {
        if (typeof this.colDef.suppressNavigable == "boolean")
          return this.colDef.suppressNavigable;
        if (typeof this.colDef.suppressNavigable == "function") {
          var e = this.createColumnFunctionCallbackParams(t), r = this.colDef.suppressNavigable;
          return r(e);
        }
        return !1;
      }, n.prototype.isCellEditable = function(t) {
        return t.group && !this.gridOptionsWrapper.isEnableGroupEdit() ? !1 : this.isColumnFunc(t, this.colDef.editable);
      }, n.prototype.isSuppressFillHandle = function() {
        return !!x(this.colDef.suppressFillHandle);
      }, n.prototype.isAutoHeight = function() {
        return !!x(this.colDef.autoHeight);
      }, n.prototype.isRowDrag = function(t) {
        return this.isColumnFunc(t, this.colDef.rowDrag);
      }, n.prototype.isDndSource = function(t) {
        return this.isColumnFunc(t, this.colDef.dndSource);
      }, n.prototype.isCellCheckboxSelection = function(t) {
        return this.isColumnFunc(t, this.colDef.checkboxSelection);
      }, n.prototype.isSuppressPaste = function(t) {
        return this.isColumnFunc(t, this.colDef ? this.colDef.suppressPaste : null);
      }, n.prototype.isResizable = function() {
        return !!x(this.colDef.resizable);
      }, n.prototype.isColumnFunc = function(t, e) {
        if (typeof e == "boolean")
          return e;
        if (typeof e == "function") {
          var r = this.createColumnFunctionCallbackParams(t), o = e;
          return o(r);
        }
        return !1;
      }, n.prototype.setMoving = function(t, e) {
        e === void 0 && (e = "api"), this.moving = t, this.eventService.dispatchEvent(this.createColumnEvent(n.EVENT_MOVING_CHANGED, e));
      }, n.prototype.createColumnEvent = function(t, e) {
        return {
          api: this.gridApi,
          columnApi: this.columnApi,
          type: t,
          column: this,
          columns: [this],
          source: e
        };
      }, n.prototype.isMoving = function() {
        return this.moving;
      }, n.prototype.getSort = function() {
        return this.sort;
      }, n.prototype.setSort = function(t, e) {
        e === void 0 && (e = "api"), this.sort !== t && (this.sort = t, this.eventService.dispatchEvent(this.createColumnEvent(n.EVENT_SORT_CHANGED, e)));
      }, n.prototype.setMenuVisible = function(t, e) {
        e === void 0 && (e = "api"), this.menuVisible !== t && (this.menuVisible = t, this.eventService.dispatchEvent(this.createColumnEvent(n.EVENT_MENU_VISIBLE_CHANGED, e)));
      }, n.prototype.isMenuVisible = function() {
        return this.menuVisible;
      }, n.prototype.isSortAscending = function() {
        return this.sort === E.SORT_ASC;
      }, n.prototype.isSortDescending = function() {
        return this.sort === E.SORT_DESC;
      }, n.prototype.isSortNone = function() {
        return C(this.sort);
      }, n.prototype.isSorting = function() {
        return g(this.sort);
      }, n.prototype.getSortIndex = function() {
        return this.sortIndex;
      }, n.prototype.setSortIndex = function(t) {
        this.sortIndex = t;
      }, n.prototype.setAggFunc = function(t) {
        this.aggFunc = t;
      }, n.prototype.getAggFunc = function() {
        return this.aggFunc;
      }, n.prototype.getLeft = function() {
        return this.left;
      }, n.prototype.getOldLeft = function() {
        return this.oldLeft;
      }, n.prototype.getRight = function() {
        return this.left + this.actualWidth;
      }, n.prototype.setLeft = function(t, e) {
        e === void 0 && (e = "api"), this.oldLeft = this.left, this.left !== t && (this.left = t, this.eventService.dispatchEvent(this.createColumnEvent(n.EVENT_LEFT_CHANGED, e)));
      }, n.prototype.isFilterActive = function() {
        return this.filterActive;
      }, n.prototype.setFilterActive = function(t, e, r) {
        e === void 0 && (e = "api"), this.filterActive !== t && (this.filterActive = t, this.eventService.dispatchEvent(this.createColumnEvent(n.EVENT_FILTER_ACTIVE_CHANGED, e)));
        var o = this.createColumnEvent(n.EVENT_FILTER_CHANGED, e);
        r && Fe(o, r), this.eventService.dispatchEvent(o);
      }, n.prototype.setPinned = function(t) {
        t === !0 || t === E.PINNED_LEFT ? this.pinned = E.PINNED_LEFT : t === E.PINNED_RIGHT ? this.pinned = E.PINNED_RIGHT : this.pinned = null;
      }, n.prototype.setFirstRightPinned = function(t, e) {
        e === void 0 && (e = "api"), this.firstRightPinned !== t && (this.firstRightPinned = t, this.eventService.dispatchEvent(this.createColumnEvent(n.EVENT_FIRST_RIGHT_PINNED_CHANGED, e)));
      }, n.prototype.setLastLeftPinned = function(t, e) {
        e === void 0 && (e = "api"), this.lastLeftPinned !== t && (this.lastLeftPinned = t, this.eventService.dispatchEvent(this.createColumnEvent(n.EVENT_LAST_LEFT_PINNED_CHANGED, e)));
      }, n.prototype.isFirstRightPinned = function() {
        return this.firstRightPinned;
      }, n.prototype.isLastLeftPinned = function() {
        return this.lastLeftPinned;
      }, n.prototype.isPinned = function() {
        return this.pinned === E.PINNED_LEFT || this.pinned === E.PINNED_RIGHT;
      }, n.prototype.isPinnedLeft = function() {
        return this.pinned === E.PINNED_LEFT;
      }, n.prototype.isPinnedRight = function() {
        return this.pinned === E.PINNED_RIGHT;
      }, n.prototype.getPinned = function() {
        return this.pinned;
      }, n.prototype.setVisible = function(t, e) {
        e === void 0 && (e = "api");
        var r = t === !0;
        this.visible !== r && (this.visible = r, this.eventService.dispatchEvent(this.createColumnEvent(n.EVENT_VISIBLE_CHANGED, e)));
      }, n.prototype.isVisible = function() {
        return this.visible;
      }, n.prototype.getColDef = function() {
        return this.colDef;
      }, n.prototype.getColumnGroupShow = function() {
        return this.colDef.columnGroupShow;
      }, n.prototype.getColId = function() {
        return this.colId;
      }, n.prototype.getId = function() {
        return this.getColId();
      }, n.prototype.getUniqueId = function() {
        return this.getId();
      }, n.prototype.getDefinition = function() {
        return this.colDef;
      }, n.prototype.getActualWidth = function() {
        return this.actualWidth;
      }, n.prototype.createBaseColDefParams = function(t) {
        var e = {
          node: t,
          data: t.data,
          colDef: this.colDef,
          column: this,
          api: this.gridOptionsWrapper.getApi(),
          columnApi: this.gridOptionsWrapper.getColumnApi(),
          context: this.gridOptionsWrapper.getContext()
        };
        return e;
      }, n.prototype.getColSpan = function(t) {
        if (C(this.colDef.colSpan))
          return 1;
        var e = this.createBaseColDefParams(t), r = this.colDef.colSpan(e);
        return Math.max(r, 1);
      }, n.prototype.getRowSpan = function(t) {
        if (C(this.colDef.rowSpan))
          return 1;
        var e = this.createBaseColDefParams(t), r = this.colDef.rowSpan(e);
        return Math.max(r, 1);
      }, n.prototype.setActualWidth = function(t, e, r) {
        e === void 0 && (e = "api"), r === void 0 && (r = !1), this.minWidth != null && (t = Math.max(t, this.minWidth)), this.maxWidth != null && (t = Math.min(t, this.maxWidth)), this.actualWidth !== t && (this.actualWidth = t, this.flex && e !== "flex" && e !== "gridInitializing" && (this.flex = null), r || this.fireColumnWidthChangedEvent(e));
      }, n.prototype.fireColumnWidthChangedEvent = function(t) {
        this.eventService.dispatchEvent(this.createColumnEvent(n.EVENT_WIDTH_CHANGED, t));
      }, n.prototype.isGreaterThanMax = function(t) {
        return this.maxWidth != null ? t > this.maxWidth : !1;
      }, n.prototype.getMinWidth = function() {
        return this.minWidth;
      }, n.prototype.getMaxWidth = function() {
        return this.maxWidth;
      }, n.prototype.getFlex = function() {
        return this.flex || 0;
      }, n.prototype.setFlex = function(t) {
        this.flex !== t && (this.flex = t);
      }, n.prototype.setMinimum = function(t) {
        t === void 0 && (t = "api"), g(this.minWidth) && this.setActualWidth(this.minWidth, t);
      }, n.prototype.setRowGroupActive = function(t, e) {
        e === void 0 && (e = "api"), this.rowGroupActive !== t && (this.rowGroupActive = t, this.eventService.dispatchEvent(this.createColumnEvent(n.EVENT_ROW_GROUP_CHANGED, e)));
      }, n.prototype.isRowGroupActive = function() {
        return this.rowGroupActive;
      }, n.prototype.setPivotActive = function(t, e) {
        e === void 0 && (e = "api"), this.pivotActive !== t && (this.pivotActive = t, this.eventService.dispatchEvent(this.createColumnEvent(n.EVENT_PIVOT_CHANGED, e)));
      }, n.prototype.isPivotActive = function() {
        return this.pivotActive;
      }, n.prototype.isAnyFunctionActive = function() {
        return this.isPivotActive() || this.isRowGroupActive() || this.isValueActive();
      }, n.prototype.isAnyFunctionAllowed = function() {
        return this.isAllowPivot() || this.isAllowRowGroup() || this.isAllowValue();
      }, n.prototype.setValueActive = function(t, e) {
        e === void 0 && (e = "api"), this.aggregationActive !== t && (this.aggregationActive = t, this.eventService.dispatchEvent(this.createColumnEvent(n.EVENT_VALUE_CHANGED, e)));
      }, n.prototype.isValueActive = function() {
        return this.aggregationActive;
      }, n.prototype.isAllowPivot = function() {
        return this.colDef.enablePivot === !0;
      }, n.prototype.isAllowValue = function() {
        return this.colDef.enableValue === !0;
      }, n.prototype.isAllowRowGroup = function() {
        return this.colDef.enableRowGroup === !0;
      }, n.prototype.getMenuTabs = function(t) {
        var e = this.getColDef().menuTabs;
        return e == null && (e = t), e;
      }, n.prototype.isLockPosition = function() {
        return console.warn("AG Grid: since v21, col.isLockPosition() should not be used, please use col.getColDef().lockPosition instead."), this.colDef ? !!this.colDef.lockPosition : !1;
      }, n.prototype.isLockVisible = function() {
        return console.warn("AG Grid: since v21, col.isLockVisible() should not be used, please use col.getColDef().lockVisible instead."), this.colDef ? !!this.colDef.lockVisible : !1;
      }, n.prototype.isLockPinned = function() {
        return console.warn("AG Grid: since v21, col.isLockPinned() should not be used, please use col.getColDef().lockPinned instead."), this.colDef ? !!this.colDef.lockPinned : !1;
      }, n.EVENT_MOVING_CHANGED = "movingChanged", n.EVENT_LEFT_CHANGED = "leftChanged", n.EVENT_WIDTH_CHANGED = "widthChanged", n.EVENT_LAST_LEFT_PINNED_CHANGED = "lastLeftPinnedChanged", n.EVENT_FIRST_RIGHT_PINNED_CHANGED = "firstRightPinnedChanged", n.EVENT_VISIBLE_CHANGED = "visibleChanged", n.EVENT_FILTER_CHANGED = "filterChanged", n.EVENT_FILTER_ACTIVE_CHANGED = "filterActiveChanged", n.EVENT_SORT_CHANGED = "sortChanged", n.EVENT_MENU_VISIBLE_CHANGED = "menuVisibleChanged", n.EVENT_ROW_GROUP_CHANGED = "columnRowGroupChanged", n.EVENT_PIVOT_CHANGED = "columnPivotChanged", n.EVENT_VALUE_CHANGED = "columnValueChanged", St([
        h("gridOptionsWrapper")
      ], n.prototype, "gridOptionsWrapper", void 0), St([
        h("columnUtils")
      ], n.prototype, "columnUtils", void 0), St([
        h("columnApi")
      ], n.prototype, "columnApi", void 0), St([
        h("gridApi")
      ], n.prototype, "gridApi", void 0), St([
        h("context")
      ], n.prototype, "context", void 0), St([
        B
      ], n.prototype, "initialise", null), n;
    }()
  );
  function b() {
    for (var n = [], t = 0; t < arguments.length; t++)
      n[t] = arguments[t];
    for (var e = 0; e < n.length; e++) {
      var r = n[e];
      if (g(r))
        return r;
    }
    return null;
  }
  function K(n) {
    return n != null && n.length > 0;
  }
  function M(n) {
    if (!(!n || !n.length))
      return n[n.length - 1];
  }
  function k(n, t, e) {
    return n == null && t == null ? !0 : n != null && t != null && n.length === t.length && n.every(function(r, o) {
      return e ? e(r, t[o]) : t[o] === r;
    });
  }
  function Y(n, t) {
    return k(n, t);
  }
  function Z(n, t) {
    return k(n, t);
  }
  function Ve(n) {
    return n.sort(function(t, e) {
      return t - e;
    });
  }
  function q(n, t) {
    if (n)
      for (var e = n.length - 2; e >= 0; e--) {
        var r = n[e] === t, o = n[e + 1] === t;
        r && o && n.splice(e + 1, 1);
      }
  }
  function Ce(n, t) {
    var e = n.indexOf(t);
    e >= 0 && n.splice(e, 1);
  }
  function Wt(n, t) {
    t.forEach(function(e) {
      return Ce(n, e);
    });
  }
  function Kt(n, t, e) {
    n.splice(e, 0, t);
  }
  function Yt(n, t, e) {
    if (!(n == null || t == null))
      for (var r = t.length - 1; r >= 0; r--) {
        var o = t[r];
        Kt(n, o, e);
      }
  }
  function cr(n, t, e) {
    Wt(n, t), t.slice().reverse().forEach(function(r) {
      return Kt(n, r, e);
    });
  }
  function Le(n, t) {
    return n.indexOf(t) > -1;
  }
  function Ir(n) {
    return [].concat.apply([], n);
  }
  function Nr(n, t) {
    t == null || n == null || t.forEach(function(e) {
      return n.push(e);
    });
  }
  function Bt(n) {
    return n.map(O);
  }
  function pc(n, t) {
    if (n != null)
      for (var e = n.length - 1; e >= 0; e--)
        t(n[e], e);
  }
  var cc = /* @__PURE__ */ Object.freeze({
    firstExistingValue: b,
    existsAndNotEmpty: K,
    last: M,
    areEqual: k,
    compareArrays: Y,
    shallowCompare: Z,
    sortNumerically: Ve,
    removeRepeatsFromArray: q,
    removeFromArray: Ce,
    removeAllFromArray: Wt,
    insertIntoArray: Kt,
    insertArrayIntoArray: Yt,
    moveInArray: cr,
    includes: Le,
    flatten: Ir,
    pushAll: Nr,
    toStrings: Bt,
    forEachReverse: pc
  });
  var dc = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, We = (
    /** @class */
    function() {
      function n(t, e, r, o) {
        this.displayedChildren = [], this.localEventService = new nt(), this.groupId = e, this.instanceId = r, this.providedColumnGroup = t, this.pinned = o;
      }
      return n.createUniqueId = function(t, e) {
        return t + "_" + e;
      }, n.prototype.reset = function() {
        this.parent = null, this.children = null, this.displayedChildren = null;
      }, n.prototype.getParent = function() {
        return this.parent;
      }, n.prototype.setParent = function(t) {
        this.parent = t;
      }, n.prototype.getUniqueId = function() {
        return n.createUniqueId(this.groupId, this.instanceId);
      }, n.prototype.isEmptyGroup = function() {
        return this.displayedChildren.length === 0;
      }, n.prototype.isMoving = function() {
        var t = this.getProvidedColumnGroup().getLeafColumns();
        return !t || t.length === 0 ? !1 : t.every(function(e) {
          return e.isMoving();
        });
      }, n.prototype.checkLeft = function() {
        if (this.displayedChildren.forEach(function(o) {
          o instanceof n && o.checkLeft();
        }), this.displayedChildren.length > 0)
          if (this.gridOptionsWrapper.isEnableRtl()) {
            var t = M(this.displayedChildren), e = t.getLeft();
            this.setLeft(e);
          } else {
            var r = this.displayedChildren[0].getLeft();
            this.setLeft(r);
          }
        else
          this.setLeft(null);
      }, n.prototype.getLeft = function() {
        return this.left;
      }, n.prototype.getOldLeft = function() {
        return this.oldLeft;
      }, n.prototype.setLeft = function(t) {
        this.oldLeft = t, this.left !== t && (this.left = t, this.localEventService.dispatchEvent(this.createAgEvent(n.EVENT_LEFT_CHANGED)));
      }, n.prototype.getPinned = function() {
        return this.pinned;
      }, n.prototype.createAgEvent = function(t) {
        return { type: t };
      }, n.prototype.addEventListener = function(t, e) {
        this.localEventService.addEventListener(t, e);
      }, n.prototype.removeEventListener = function(t, e) {
        this.localEventService.removeEventListener(t, e);
      }, n.prototype.getGroupId = function() {
        return this.groupId;
      }, n.prototype.getInstanceId = function() {
        return this.instanceId;
      }, n.prototype.isChildInThisGroupDeepSearch = function(t) {
        var e = !1;
        return this.children.forEach(function(r) {
          t === r && (e = !0), r instanceof n && r.isChildInThisGroupDeepSearch(t) && (e = !0);
        }), e;
      }, n.prototype.getActualWidth = function() {
        var t = 0;
        return this.displayedChildren && this.displayedChildren.forEach(function(e) {
          t += e.getActualWidth();
        }), t;
      }, n.prototype.isResizable = function() {
        if (!this.displayedChildren)
          return !1;
        var t = !1;
        return this.displayedChildren.forEach(function(e) {
          e.isResizable() && (t = !0);
        }), t;
      }, n.prototype.getMinWidth = function() {
        var t = 0;
        return this.displayedChildren.forEach(function(e) {
          t += e.getMinWidth() || 0;
        }), t;
      }, n.prototype.addChild = function(t) {
        this.children || (this.children = []), this.children.push(t);
      }, n.prototype.getDisplayedChildren = function() {
        return this.displayedChildren;
      }, n.prototype.getLeafColumns = function() {
        var t = [];
        return this.addLeafColumns(t), t;
      }, n.prototype.getDisplayedLeafColumns = function() {
        var t = [];
        return this.addDisplayedLeafColumns(t), t;
      }, n.prototype.getDefinition = function() {
        return this.providedColumnGroup.getColGroupDef();
      }, n.prototype.getColGroupDef = function() {
        return this.providedColumnGroup.getColGroupDef();
      }, n.prototype.isPadding = function() {
        return this.providedColumnGroup.isPadding();
      }, n.prototype.isExpandable = function() {
        return this.providedColumnGroup.isExpandable();
      }, n.prototype.isExpanded = function() {
        return this.providedColumnGroup.isExpanded();
      }, n.prototype.setExpanded = function(t) {
        this.providedColumnGroup.setExpanded(t);
      }, n.prototype.addDisplayedLeafColumns = function(t) {
        this.displayedChildren.forEach(function(e) {
          e instanceof A ? t.push(e) : e instanceof n && e.addDisplayedLeafColumns(t);
        });
      }, n.prototype.addLeafColumns = function(t) {
        this.children.forEach(function(e) {
          e instanceof A ? t.push(e) : e instanceof n && e.addLeafColumns(t);
        });
      }, n.prototype.getChildren = function() {
        return this.children;
      }, n.prototype.getColumnGroupShow = function() {
        return this.providedColumnGroup.getColumnGroupShow();
      }, n.prototype.getProvidedColumnGroup = function() {
        return this.providedColumnGroup;
      }, n.prototype.getOriginalColumnGroup = function() {
        return console.warn("AG Grid: columnGroup.getOriginalColumnGroup() is deprecated due to a method rename, use columnGroup.getProvidedColumnGroup() instead"), this.getProvidedColumnGroup();
      }, n.prototype.getPaddingLevel = function() {
        var t = this.getParent();
        return !this.isPadding() || !t || !t.isPadding() ? 0 : 1 + t.getPaddingLevel();
      }, n.prototype.calculateDisplayedColumns = function() {
        var t = this;
        this.displayedChildren = [];
        for (var e = this; e != null && e.isPadding(); )
          e = e.getParent();
        var r = e ? e.providedColumnGroup.isExpandable() : !1;
        if (!r) {
          this.displayedChildren = this.children, this.localEventService.dispatchEvent(this.createAgEvent(n.EVENT_DISPLAYED_CHILDREN_CHANGED));
          return;
        }
        this.children.forEach(function(o) {
          var i = o instanceof n && (!o.displayedChildren || !o.displayedChildren.length);
          if (!i) {
            var s = o.getColumnGroupShow();
            switch (s) {
              case n.HEADER_GROUP_SHOW_OPEN:
                e.providedColumnGroup.isExpanded() && t.displayedChildren.push(o);
                break;
              case n.HEADER_GROUP_SHOW_CLOSED:
                e.providedColumnGroup.isExpanded() || t.displayedChildren.push(o);
                break;
              default:
                t.displayedChildren.push(o);
                break;
            }
          }
        }), this.localEventService.dispatchEvent(this.createAgEvent(n.EVENT_DISPLAYED_CHILDREN_CHANGED));
      }, n.HEADER_GROUP_SHOW_OPEN = "open", n.HEADER_GROUP_SHOW_CLOSED = "closed", n.EVENT_LEFT_CHANGED = "leftChanged", n.EVENT_DISPLAYED_CHILDREN_CHANGED = "displayedChildrenChanged", dc([
        h("gridOptionsWrapper")
      ], n.prototype, "gridOptionsWrapper", void 0), n;
    }()
  );
  var _e = (
    /** @class */
    function() {
      function n(t, e, r, o) {
        this.localEventService = new nt(), this.expandable = !1, this.colGroupDef = t, this.groupId = e, this.expanded = !!t && !!t.openByDefault, this.padding = r, this.level = o;
      }
      return n.prototype.setOriginalParent = function(t) {
        this.originalParent = t;
      }, n.prototype.getOriginalParent = function() {
        return this.originalParent;
      }, n.prototype.getLevel = function() {
        return this.level;
      }, n.prototype.isVisible = function() {
        return this.children ? this.children.some(function(t) {
          return t.isVisible();
        }) : !1;
      }, n.prototype.isPadding = function() {
        return this.padding;
      }, n.prototype.setExpanded = function(t) {
        this.expanded = t === void 0 ? !1 : t;
        var e = {
          type: n.EVENT_EXPANDED_CHANGED
        };
        this.localEventService.dispatchEvent(e);
      }, n.prototype.isExpandable = function() {
        return this.expandable;
      }, n.prototype.isExpanded = function() {
        return this.expanded;
      }, n.prototype.getGroupId = function() {
        return this.groupId;
      }, n.prototype.getId = function() {
        return this.getGroupId();
      }, n.prototype.setChildren = function(t) {
        this.children = t;
      }, n.prototype.getChildren = function() {
        return this.children;
      }, n.prototype.getColGroupDef = function() {
        return this.colGroupDef;
      }, n.prototype.getLeafColumns = function() {
        var t = [];
        return this.addLeafColumns(t), t;
      }, n.prototype.addLeafColumns = function(t) {
        this.children && this.children.forEach(function(e) {
          e instanceof A ? t.push(e) : e instanceof n && e.addLeafColumns(t);
        });
      }, n.prototype.getColumnGroupShow = function() {
        var t = this.colGroupDef;
        if (t)
          return t.columnGroupShow;
      }, n.prototype.setupExpandable = function() {
        var t = this;
        this.setExpandable(), this.getLeafColumns().forEach(function(e) {
          return e.addEventListener(A.EVENT_VISIBLE_CHANGED, t.onColumnVisibilityChanged.bind(t));
        });
      }, n.prototype.setExpandable = function() {
        if (!this.isPadding()) {
          for (var t = !1, e = !1, r = !1, o = this.findChildrenRemovingPadding(), i = 0, s = o.length; i < s; i++) {
            var a = o[i];
            if (a.isVisible()) {
              var l = a.getColumnGroupShow();
              l === We.HEADER_GROUP_SHOW_OPEN ? (t = !0, r = !0) : l === We.HEADER_GROUP_SHOW_CLOSED ? (e = !0, r = !0) : (t = !0, e = !0);
            }
          }
          var u = t && e && r;
          if (this.expandable !== u) {
            this.expandable = u;
            var p = {
              type: n.EVENT_EXPANDABLE_CHANGED
            };
            this.localEventService.dispatchEvent(p);
          }
        }
      }, n.prototype.findChildrenRemovingPadding = function() {
        var t = [], e = function(r) {
          r.forEach(function(o) {
            var i = o instanceof n && o.isPadding();
            i ? e(o.children) : t.push(o);
          });
        };
        return e(this.children), t;
      }, n.prototype.onColumnVisibilityChanged = function() {
        this.setExpandable();
      }, n.prototype.addEventListener = function(t, e) {
        this.localEventService.addEventListener(t, e);
      }, n.prototype.removeEventListener = function(t, e) {
        this.localEventService.removeEventListener(t, e);
      }, n.EVENT_EXPANDED_CHANGED = "expandedChanged", n.EVENT_EXPANDABLE_CHANGED = "expandableChanged", n;
    }()
  );
  var hc = {
    numericColumn: {
      headerClass: "ag-right-aligned-header",
      cellClass: "ag-right-aligned-cell"
    },
    rightAligned: {
      headerClass: "ag-right-aligned-header",
      cellClass: "ag-right-aligned-cell"
    }
  };
  var va = "__ag_Grid_Stop_Propagation", fc = ["touchstart", "touchend", "touchmove", "touchcancel"], Sn = {};
  function xr(n) {
    n[va] = !0;
  }
  function _t(n) {
    return n[va] === !0;
  }
  var _n = /* @__PURE__ */ function() {
    var n = {
      select: "input",
      change: "input",
      submit: "form",
      reset: "form",
      error: "img",
      load: "img",
      abort: "img"
    }, t = function(e) {
      if (typeof Sn[e] == "boolean")
        return Sn[e];
      var r = document.createElement(n[e] || "div");
      return e = "on" + e, Sn[e] = e in r;
    };
    return t;
  }();
  function hi(n, t, e) {
    for (var r = t.target; r; ) {
      var o = n.getDomData(r, e);
      if (o)
        return o;
      r = r.parentElement;
    }
    return null;
  }
  function gc(n, t) {
    n.addEventListener("changed", t), n.addEventListener("paste", t), n.addEventListener("input", t);
  }
  function fi(n, t) {
    return !t || !n ? !1 : On(t).indexOf(n) >= 0;
  }
  function ma(n) {
    for (var t = [], e = n.target; e; )
      t.push(e), e = e.parentElement;
    return t;
  }
  function vc(n) {
    n.__agGridEventPath = On(n);
  }
  function On(n) {
    var t = n;
    return t.path ? t.path : t.composedPath ? t.composedPath() : t.__agGridEventPath ? t.__agGridEventPath : ma(n);
  }
  function ya(n, t, e, r) {
    var o = Le(fc, e), i = o ? { passive: !0 } : void 0;
    n && n.addEventListener && n.addEventListener(t, e, r, i);
  }
  var mc = /* @__PURE__ */ Object.freeze({
    stopPropagationForAgGrid: xr,
    isStopPropagationForAgGrid: _t,
    isEventSupported: _n,
    getCtrlForEvent: hi,
    addChangeListener: gc,
    isElementInEventPath: fi,
    createEventPath: ma,
    addAgGridEventPath: vc,
    getEventPath: On,
    addSafePassiveEventListener: ya
  });
  var wo = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, H = (
    /** @class */
    function() {
      function n() {
        var t = this;
        this.destroyFunctions = [], this.destroyed = !1, this.__v_skip = !0, this.isAlive = function() {
          return !t.destroyed;
        };
      }
      return n.prototype.getFrameworkOverrides = function() {
        return this.frameworkOverrides;
      }, n.prototype.getContext = function() {
        return this.context;
      }, n.prototype.destroy = function() {
        this.destroyFunctions.forEach(function(t) {
          return t();
        }), this.destroyFunctions.length = 0, this.destroyed = !0, this.dispatchEvent({ type: n.EVENT_DESTROYED });
      }, n.prototype.addEventListener = function(t, e) {
        this.localEventService || (this.localEventService = new nt()), this.localEventService.addEventListener(t, e);
      }, n.prototype.removeEventListener = function(t, e) {
        this.localEventService && this.localEventService.removeEventListener(t, e);
      }, n.prototype.dispatchEventAsync = function(t) {
        var e = this;
        window.setTimeout(function() {
          return e.dispatchEvent(t);
        }, 0);
      }, n.prototype.dispatchEvent = function(t) {
        this.localEventService && this.localEventService.dispatchEvent(t);
      }, n.prototype.addManagedListener = function(t, e, r) {
        var o = this;
        if (!this.destroyed) {
          t instanceof HTMLElement ? ya(this.getFrameworkOverrides(), t, e, r) : t.addEventListener(e, r);
          var i = function() {
            return t.removeEventListener(e, r), o.destroyFunctions = o.destroyFunctions.filter(function(s) {
              return s !== i;
            }), null;
          };
          return this.destroyFunctions.push(i), i;
        }
      }, n.prototype.addDestroyFunc = function(t) {
        this.isAlive() ? this.destroyFunctions.push(t) : t();
      }, n.prototype.createManagedBean = function(t, e) {
        var r = this.createBean(t, e);
        return this.addDestroyFunc(this.destroyBean.bind(this, t, e)), r;
      }, n.prototype.createBean = function(t, e, r) {
        return (e || this.getContext()).createBean(t, r);
      }, n.prototype.destroyBean = function(t, e) {
        return (e || this.getContext()).destroyBean(t);
      }, n.prototype.destroyBeans = function(t, e) {
        var r = this;
        return t && t.forEach(function(o) {
          return r.destroyBean(o, e);
        }), [];
      }, n.EVENT_DESTROYED = "destroyed", wo([
        h("frameworkOverrides")
      ], n.prototype, "frameworkOverrides", void 0), wo([
        h("context")
      ], n.prototype, "context", void 0), wo([
        h("eventService")
      ], n.prototype, "eventService", void 0), wo([
        h("gridOptionsWrapper")
      ], n.prototype, "gridOptionsWrapper", void 0), wo([
        De
      ], n.prototype, "destroy", null), n;
    }()
  );
  var yc = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), An = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Cc = function(n, t) {
    return function(e, r) {
      t(e, r, n);
    };
  }, Ca = (
    /** @class */
    function(n) {
      yc(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.setBeans = function(e) {
        this.logger = e.create("ColumnFactory");
      }, t.prototype.createColumnTree = function(e, r, o) {
        var i = new te(), s = this.extractExistingTreeData(o), a = s.existingCols, l = s.existingGroups, u = s.existingColKeys;
        i.addExistingKeys(u);
        var p = this.recursivelyCreateColumns(e, 0, r, a, i, l), d = this.findMaxDept(p, 0);
        this.logger.log("Number of levels for grouped columns is " + d);
        var f = this.balanceColumnTree(p, 0, d, i), v = function(y, R) {
          y instanceof _e && y.setupExpandable(), y.setOriginalParent(R);
        };
        return this.columnUtils.depthFirstOriginalTreeSearch(null, f, v), {
          columnTree: f,
          treeDept: d
        };
      }, t.prototype.extractExistingTreeData = function(e) {
        var r = [], o = [], i = [];
        return e && this.columnUtils.depthFirstOriginalTreeSearch(null, e, function(s) {
          if (s instanceof _e) {
            var a = s;
            o.push(a);
          } else {
            var l = s;
            i.push(l.getId()), r.push(l);
          }
        }), { existingCols: r, existingGroups: o, existingColKeys: i };
      }, t.prototype.createForAutoGroups = function(e, r) {
        var o = this;
        return e.map(function(i) {
          return o.createAutoGroupTreeItem(r, i);
        });
      }, t.prototype.createAutoGroupTreeItem = function(e, r) {
        for (var o = this.findDepth(e), i = r, s = o - 1; s >= 0; s--) {
          var a = new _e(null, "FAKE_PATH_" + r.getId() + "}_" + s, !0, s);
          this.context.createBean(a), a.setChildren([i]), i.setOriginalParent(a), i = a;
        }
        return i;
      }, t.prototype.findDepth = function(e) {
        for (var r = 0, o = e; o && o[0] && o[0] instanceof _e; )
          r++, o = o[0].getChildren();
        return r;
      }, t.prototype.balanceColumnTree = function(e, r, o, i) {
        for (var s = [], a = 0; a < e.length; a++) {
          var l = e[a];
          if (l instanceof _e) {
            var u = l, p = this.balanceColumnTree(u.getChildren(), r + 1, o, i);
            u.setChildren(p), s.push(u);
          } else {
            for (var d = void 0, f = void 0, v = o - 1; v >= r; v--) {
              var y = i.getUniqueKey(null, null), R = this.createMergedColGroupDef(null), _ = new _e(R, y, !0, r);
              this.context.createBean(_), f && f.setChildren([_]), f = _, d || (d = f);
            }
            if (d && f) {
              s.push(d);
              var D = e.some(function(P) {
                return P instanceof _e;
              });
              if (D) {
                f.setChildren([l]);
                continue;
              } else {
                f.setChildren(e);
                break;
              }
            }
            s.push(l);
          }
        }
        return s;
      }, t.prototype.findMaxDept = function(e, r) {
        for (var o = r, i = 0; i < e.length; i++) {
          var s = e[i];
          if (s instanceof _e) {
            var a = s, l = this.findMaxDept(a.getChildren(), r + 1);
            o < l && (o = l);
          }
        }
        return o;
      }, t.prototype.recursivelyCreateColumns = function(e, r, o, i, s, a) {
        var l = this;
        return (e || []).map(function(u) {
          return l.isColumnGroup(u) ? l.createColumnGroup(o, u, r, i, s, a) : l.createColumn(o, u, i, s);
        });
      }, t.prototype.createColumnGroup = function(e, r, o, i, s, a) {
        var l = this.createMergedColGroupDef(r), u = s.getUniqueKey(l.groupId || null, null), p = new _e(l, u, !1, o);
        this.context.createBean(p);
        var d = this.findExistingGroup(r, a);
        d && Ce(a, d), d && d.isExpanded() && p.setExpanded(!0);
        var f = this.recursivelyCreateColumns(l.children, o + 1, e, i, s, a);
        return p.setChildren(f), p;
      }, t.prototype.createMergedColGroupDef = function(e) {
        var r = {};
        return Object.assign(r, this.gridOptionsWrapper.getDefaultColGroupDef()), Object.assign(r, e), this.checkForDeprecatedItems(r), r;
      }, t.prototype.createColumn = function(e, r, o, i) {
        var s = this.mergeColDefs(r);
        this.checkForDeprecatedItems(s);
        var a = this.findExistingColumn(r, o);
        if (o && a && Ce(o, a), a)
          a.setColDef(s, r), this.applyColumnState(a, s);
        else {
          var l = i.getUniqueKey(s.colId, s.field);
          a = new A(s, r, l, e), this.context.createBean(a);
        }
        return a;
      }, t.prototype.applyColumnState = function(e, r) {
        var o = L(r.flex);
        o !== void 0 && e.setFlex(o);
        var i = e.getFlex() <= 0;
        if (i) {
          var s = L(r.width);
          if (s != null)
            e.setActualWidth(s);
          else {
            var a = e.getActualWidth();
            e.setActualWidth(a);
          }
        }
        r.sort !== void 0 && (r.sort == E.SORT_ASC || r.sort == E.SORT_DESC ? e.setSort(r.sort) : e.setSort(void 0));
        var l = L(r.sortIndex);
        l !== void 0 && e.setSortIndex(l);
        var u = x(r.hide);
        u !== void 0 && e.setVisible(!u), r.pinned !== void 0 && e.setPinned(r.pinned);
      }, t.prototype.findExistingColumn = function(e, r) {
        return (r || []).find(function(o) {
          var i = o.getUserProvidedColDef();
          if (!i)
            return !1;
          var s = e.colId != null, a = e.field != null;
          return s ? o.getId() === e.colId : a ? i.field === e.field : i === e;
        });
      }, t.prototype.findExistingGroup = function(e, r) {
        return r.find(function(o) {
          var i = o.getColGroupDef();
          if (!i)
            return !1;
          var s = e.groupId != null;
          return s ? o.getId() === e.groupId : !1;
        });
      }, t.prototype.mergeColDefs = function(e) {
        var r = {}, o = this.gridOptionsWrapper.getDefaultColDef();
        Fe(r, o, !1, !0);
        var i = e.type;
        return i || (i = o && o.type), i && this.assignColumnTypes(i, r), Fe(r, e, !1, !0), r;
      }, t.prototype.assignColumnTypes = function(e, r) {
        var o = [];
        if (e instanceof Array) {
          var i = e.some(function(l) {
            return typeof l != "string";
          });
          i ? console.warn("AG Grid: if colDef.type is supplied an array it should be of type 'string[]'") : o = e;
        } else if (typeof e == "string")
          o = e.split(",");
        else {
          console.warn("AG Grid: colDef.type should be of type 'string' | 'string[]'");
          return;
        }
        var s = Object.assign({}, hc), a = this.gridOptionsWrapper.getColumnTypes() || {};
        ie(a, function(l, u) {
          l in s ? console.warn("AG Grid: the column type '" + l + "' is a default column type and cannot be overridden.") : s[l] = u;
        }), o.forEach(function(l) {
          var u = s[l.trim()];
          u ? Fe(r, u, !1, !0) : console.warn("AG Grid: colDef.type '" + l + "' does not correspond to defined gridOptions.columnTypes");
        });
      }, t.prototype.checkForDeprecatedItems = function(e) {
        if (e) {
          var r = e;
          r.group !== void 0 && console.warn("AG Grid: colDef.group is invalid, please check documentation on how to do grouping as it changed in version 3"), r.headerGroup !== void 0 && console.warn("AG Grid: colDef.headerGroup is invalid, please check documentation on how to do grouping as it changed in version 3"), r.headerGroupShow !== void 0 && console.warn("AG Grid: colDef.headerGroupShow is invalid, should be columnGroupShow, please check documentation on how to do grouping as it changed in version 3"), r.suppressRowGroup !== void 0 && console.warn("AG Grid: colDef.suppressRowGroup is deprecated, please use colDef.type instead"), r.suppressAggregation !== void 0 && console.warn("AG Grid: colDef.suppressAggregation is deprecated, please use colDef.type instead"), (r.suppressRowGroup || r.suppressAggregation) && console.warn("AG Grid: colDef.suppressAggregation and colDef.suppressRowGroup are deprecated, use allowRowGroup, allowPivot and allowValue instead"), r.displayName && (console.warn("AG Grid: Found displayName " + r.displayName + ", please use headerName instead, displayName is deprecated."), r.headerName = r.displayName);
        }
      }, t.prototype.isColumnGroup = function(e) {
        return e.children !== void 0;
      }, An([
        h("columnUtils")
      ], t.prototype, "columnUtils", void 0), An([
        Cc(0, Ne("loggerFactory"))
      ], t.prototype, "setBeans", null), t = An([
        j("columnFactory")
      ], t), t;
    }(H)
  );
  var m = (
    /** @class */
    function() {
      function n() {
      }
      return n.EVENT_COLUMN_EVERYTHING_CHANGED = "columnEverythingChanged", n.EVENT_NEW_COLUMNS_LOADED = "newColumnsLoaded", n.EVENT_COLUMN_PIVOT_MODE_CHANGED = "columnPivotModeChanged", n.EVENT_COLUMN_ROW_GROUP_CHANGED = "columnRowGroupChanged", n.EVENT_EXPAND_COLLAPSE_ALL = "expandOrCollapseAll", n.EVENT_COLUMN_PIVOT_CHANGED = "columnPivotChanged", n.EVENT_GRID_COLUMNS_CHANGED = "gridColumnsChanged", n.EVENT_COLUMN_VALUE_CHANGED = "columnValueChanged", n.EVENT_COLUMN_MOVED = "columnMoved", n.EVENT_COLUMN_VISIBLE = "columnVisible", n.EVENT_COLUMN_PINNED = "columnPinned", n.EVENT_COLUMN_GROUP_OPENED = "columnGroupOpened", n.EVENT_COLUMN_RESIZED = "columnResized", n.EVENT_DISPLAYED_COLUMNS_CHANGED = "displayedColumnsChanged", n.EVENT_VIRTUAL_COLUMNS_CHANGED = "virtualColumnsChanged", n.EVENT_ASYNC_TRANSACTIONS_FLUSHED = "asyncTransactionsFlushed", n.EVENT_ROW_GROUP_OPENED = "rowGroupOpened", n.EVENT_ROW_DATA_CHANGED = "rowDataChanged", n.EVENT_ROW_DATA_UPDATED = "rowDataUpdated", n.EVENT_PINNED_ROW_DATA_CHANGED = "pinnedRowDataChanged", n.EVENT_RANGE_SELECTION_CHANGED = "rangeSelectionChanged", n.EVENT_CHART_CREATED = "chartCreated", n.EVENT_CHART_RANGE_SELECTION_CHANGED = "chartRangeSelectionChanged", n.EVENT_CHART_OPTIONS_CHANGED = "chartOptionsChanged", n.EVENT_CHART_DESTROYED = "chartDestroyed", n.EVENT_TOOL_PANEL_VISIBLE_CHANGED = "toolPanelVisibleChanged", n.EVENT_COLUMN_PANEL_ITEM_DRAG_START = "columnPanelItemDragStart", n.EVENT_COLUMN_PANEL_ITEM_DRAG_END = "columnPanelItemDragEnd", n.EVENT_MODEL_UPDATED = "modelUpdated", n.EVENT_PASTE_START = "pasteStart", n.EVENT_PASTE_END = "pasteEnd", n.EVENT_FILL_START = "fillStart", n.EVENT_FILL_END = "fillEnd", n.EVENT_CELL_CLICKED = "cellClicked", n.EVENT_CELL_DOUBLE_CLICKED = "cellDoubleClicked", n.EVENT_CELL_MOUSE_DOWN = "cellMouseDown", n.EVENT_CELL_CONTEXT_MENU = "cellContextMenu", n.EVENT_CELL_VALUE_CHANGED = "cellValueChanged", n.EVENT_CELL_EDIT_REQUEST = "cellEditRequest", n.EVENT_ROW_VALUE_CHANGED = "rowValueChanged", n.EVENT_CELL_FOCUSED = "cellFocused", n.EVENT_FULL_WIDTH_ROW_FOCUSED = "fullWidthRowFocused", n.EVENT_ROW_SELECTED = "rowSelected", n.EVENT_SELECTION_CHANGED = "selectionChanged", n.EVENT_CELL_KEY_DOWN = "cellKeyDown", n.EVENT_CELL_KEY_PRESS = "cellKeyPress", n.EVENT_CELL_MOUSE_OVER = "cellMouseOver", n.EVENT_CELL_MOUSE_OUT = "cellMouseOut", n.EVENT_FILTER_CHANGED = "filterChanged", n.EVENT_FILTER_MODIFIED = "filterModified", n.EVENT_FILTER_OPENED = "filterOpened", n.EVENT_SORT_CHANGED = "sortChanged", n.EVENT_VIRTUAL_ROW_REMOVED = "virtualRowRemoved", n.EVENT_ROW_CLICKED = "rowClicked", n.EVENT_ROW_DOUBLE_CLICKED = "rowDoubleClicked", n.EVENT_GRID_READY = "gridReady", n.EVENT_GRID_SIZE_CHANGED = "gridSizeChanged", n.EVENT_VIEWPORT_CHANGED = "viewportChanged", n.EVENT_SCROLLBAR_WIDTH_CHANGED = "scrollbarWidthChanged", n.EVENT_FIRST_DATA_RENDERED = "firstDataRendered", n.EVENT_DRAG_STARTED = "dragStarted", n.EVENT_DRAG_STOPPED = "dragStopped", n.EVENT_CHECKBOX_CHANGED = "checkboxChanged", n.EVENT_ROW_EDITING_STARTED = "rowEditingStarted", n.EVENT_ROW_EDITING_STOPPED = "rowEditingStopped", n.EVENT_CELL_EDITING_STARTED = "cellEditingStarted", n.EVENT_CELL_EDITING_STOPPED = "cellEditingStopped", n.EVENT_BODY_SCROLL = "bodyScroll", n.EVENT_BODY_SCROLL_END = "bodyScrollEnd", n.EVENT_HEIGHT_SCALE_CHANGED = "heightScaleChanged", n.EVENT_PAGINATION_CHANGED = "paginationChanged", n.EVENT_COMPONENT_STATE_CHANGED = "componentStateChanged", n.EVENT_BODY_HEIGHT_CHANGED = "bodyHeightChanged", n.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED = "displayedColumnsWidthChanged", n.EVENT_SCROLL_VISIBILITY_CHANGED = "scrollVisibilityChanged", n.EVENT_COLUMN_HOVER_CHANGED = "columnHoverChanged", n.EVENT_FLASH_CELLS = "flashCells", n.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED = "paginationPixelOffsetChanged", n.EVENT_DISPLAYED_ROWS_CHANGED = "displayedRowsChanged", n.EVENT_LEFT_PINNED_WIDTH_CHANGED = "leftPinnedWidthChanged", n.EVENT_RIGHT_PINNED_WIDTH_CHANGED = "rightPinnedWidthChanged", n.EVENT_ROW_CONTAINER_HEIGHT_CHANGED = "rowContainerHeightChanged", n.EVENT_ROW_DRAG_ENTER = "rowDragEnter", n.EVENT_ROW_DRAG_MOVE = "rowDragMove", n.EVENT_ROW_DRAG_LEAVE = "rowDragLeave", n.EVENT_ROW_DRAG_END = "rowDragEnd", n.EVENT_POPUP_TO_FRONT = "popupToFront", n.EVENT_COLUMN_ROW_GROUP_CHANGE_REQUEST = "columnRowGroupChangeRequest", n.EVENT_COLUMN_PIVOT_CHANGE_REQUEST = "columnPivotChangeRequest", n.EVENT_COLUMN_VALUE_CHANGE_REQUEST = "columnValueChangeRequest", n.EVENT_COLUMN_AGG_FUNC_CHANGE_REQUEST = "columnAggFuncChangeRequest", n.EVENT_KEYBOARD_FOCUS = "keyboardFocus", n.EVENT_MOUSE_FOCUS = "mouseFocus", n.EVENT_STORE_UPDATED = "storeUpdated", n;
    }()
  );
  var Pn = (
    /** @class */
    function() {
      function n() {
        this.existingIds = {};
      }
      return n.prototype.getInstanceIdForKey = function(t) {
        var e = this.existingIds[t], r;
        return typeof e != "number" ? r = 0 : r = e + 1, this.existingIds[t] = r, r;
      }, n;
    }()
  );
  var wc = /[&<>"']/g, Ec = {
    "&": "&amp;",
    "<": "&lt;",
    ">": "&gt;",
    '"': "&quot;",
    "'": "&#39;"
  };
  function Rc(n) {
    var t = String.fromCharCode;
    function e(d) {
      var f = [];
      if (!d)
        return [];
      for (var v = d.length, y = 0, R, _; y < v; )
        R = d.charCodeAt(y++), R >= 55296 && R <= 56319 && y < v ? (_ = d.charCodeAt(y++), (_ & 64512) == 56320 ? f.push(((R & 1023) << 10) + (_ & 1023) + 65536) : (f.push(R), y--)) : f.push(R);
      return f;
    }
    function r(d) {
      if (d >= 55296 && d <= 57343)
        throw Error("Lone surrogate U+" + d.toString(16).toUpperCase() + " is not a scalar value");
    }
    function o(d, f) {
      return t(d >> f & 63 | 128);
    }
    function i(d) {
      if (d >= 0 && d <= 31 && d !== 10) {
        var f = d.toString(16).toUpperCase(), v = f.padStart(4, "0");
        return "_x" + v + "_";
      }
      if (!(d & 4294967168))
        return t(d);
      var y = "";
      return d & 4294965248 ? d & 4294901760 ? d & 4292870144 || (y = t(d >> 18 & 7 | 240), y += o(d, 12), y += o(d, 6)) : (r(d), y = t(d >> 12 & 15 | 224), y += o(d, 6)) : y = t(d >> 6 & 31 | 192), y += t(d & 63 | 128), y;
    }
    for (var s = e(n), a = s.length, l = -1, u, p = ""; ++l < a; )
      u = s[l], p += i(u);
    return p;
  }
  function wa(n) {
    return n == null ? null : n.replace(/([A-Z])/g, function(t) {
      return "-" + t[0].toLowerCase();
    });
  }
  function Ea(n) {
    return n == null ? null : n.replace(/-([a-z])/g, function(t) {
      return t[1].toUpperCase();
    });
  }
  function Tn(n) {
    return n[0].toUpperCase() + n.substr(1).toLowerCase();
  }
  function Ot(n) {
    return n == null ? null : n.toString().toString().replace(wc, function(t) {
      return Ec[t];
    });
  }
  function Dn(n) {
    if (!n || n == null)
      return null;
    var t = /([A-Z])([A-Z])([a-z])|([a-z])([A-Z])/g, e = n.replace(t, "$1$4 $2$3$5").replace(".", " ").split(" ");
    return e.map(function(r) {
      return r.substring(0, 1).toUpperCase() + (r.length > 1 ? r.substring(1, r.length) : "");
    }).join(" ");
  }
  var Sc = /* @__PURE__ */ Object.freeze({
    utf8_encode: Rc,
    camelCaseToHyphen: wa,
    hyphenToCamelCase: Ea,
    capitalise: Tn,
    escapeString: Ot,
    camelCaseToHumanText: Dn
  });
  function qt(n) {
    var t = /* @__PURE__ */ new Map();
    return n.forEach(function(e) {
      return t.set(e[0], e[1]);
    }), t;
  }
  function _c(n, t) {
    var e = /* @__PURE__ */ new Map();
    return n.forEach(function(r) {
      return e.set(t(r), r);
    }), e;
  }
  function Oc(n) {
    var t = [];
    return n.forEach(function(e, r) {
      return t.push(r);
    }), t;
  }
  var Ac = /* @__PURE__ */ Object.freeze({
    convertToMap: qt,
    mapById: _c,
    keys: Oc
  });
  var Pc = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Me = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Tc = function(n, t) {
    return function(e, r) {
      t(e, r, n);
    };
  }, Ra = function(n) {
    var t = typeof Symbol == "function" && Symbol.iterator, e = t && n[t], r = 0;
    if (e) return e.call(n);
    if (n && typeof n.length == "number") return {
      next: function() {
        return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
      }
    };
    throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
  }, Dc = function(n, t) {
    var e = typeof Symbol == "function" && n[Symbol.iterator];
    if (!e) return n;
    var r = e.call(n), o, i = [], s;
    try {
      for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
    } catch (a) {
      s = { error: a };
    } finally {
      try {
        o && !o.done && (e = r.return) && e.call(r);
      } finally {
        if (s) throw s.error;
      }
    }
    return i;
  }, Eo = function() {
    for (var n = [], t = 0; t < arguments.length; t++) n = n.concat(Dc(arguments[t]));
    return n;
  }, Sa = (
    /** @class */
    function(n) {
      Pc(t, n);
      function t() {
        var e = n !== null && n.apply(this, arguments) || this;
        return e.primaryHeaderRowCount = 0, e.secondaryHeaderRowCount = 0, e.gridHeaderRowCount = 0, e.displayedColumnsLeft = [], e.displayedColumnsRight = [], e.displayedColumnsCenter = [], e.displayedColumns = [], e.displayedColumnsAndGroupsMap = {}, e.viewportColumns = [], e.viewportColumnsCenter = [], e.autoHeightActiveAtLeastOnce = !1, e.rowGroupColumns = [], e.valueColumns = [], e.pivotColumns = [], e.ready = !1, e.autoGroupsNeedBuilding = !1, e.forceRecreateAutoGroups = !1, e.pivotMode = !1, e.bodyWidth = 0, e.leftWidth = 0, e.rightWidth = 0, e.bodyWidthDirty = !0, e.colDefVersion = 0, e.flexColsCalculatedAtLestOnce = !1, e;
      }
      return t.prototype.init = function() {
        var e = this;
        this.suppressColumnVirtualisation = this.gridOptionsWrapper.isSuppressColumnVirtualisation();
        var r = this.gridOptionsWrapper.isPivotMode();
        this.isPivotSettingAllowed(r) && (this.pivotMode = r), this.usingTreeData = this.gridOptionsWrapper.isTreeData(), this.addManagedListener(this.gridOptionsWrapper, "autoGroupColumnDef", function() {
          return e.onAutoGroupColumnDefChanged();
        }), this.addManagedListener(this.gridOptionsWrapper, "defaultColDef", function() {
          return e.onDefaultColDefChanged();
        });
      }, t.prototype.onAutoGroupColumnDefChanged = function() {
        this.autoGroupsNeedBuilding = !0, this.forceRecreateAutoGroups = !0, this.updateGridColumns(), this.updateDisplayedColumns("gridOptionsChanged");
      }, t.prototype.onDefaultColDefChanged = function() {
        this.colDefVersion++, this.forceRecreateAutoGroups = !0, this.createColumnsFromColumnDefs(!0);
      }, t.prototype.getColDefVersion = function() {
        return this.colDefVersion;
      }, t.prototype.setColumnDefs = function(e, r) {
        r === void 0 && (r = "api");
        var o = !!this.columnDefs;
        this.colDefVersion++, this.columnDefs = e, this.createColumnsFromColumnDefs(o, r);
      }, t.prototype.createColumnsFromColumnDefs = function(e, r) {
        var o = this;
        r === void 0 && (r = "api");
        var i = e ? this.compareColumnStatesAndRaiseEvents(r) : void 0;
        this.valueCache.expire(), this.autoGroupsNeedBuilding = !0;
        var s = this.primaryColumns, a = this.primaryColumnTree, l = this.columnFactory.createColumnTree(this.columnDefs, !0, a);
        this.primaryColumnTree = l.columnTree, this.primaryHeaderRowCount = l.treeDept + 1, this.primaryColumns = this.getColumnsFromTree(this.primaryColumnTree), this.primaryColumnsMap = {}, this.primaryColumns.forEach(function(d) {
          return o.primaryColumnsMap[d.getId()] = d;
        }), this.extractRowGroupColumns(r, s), this.extractPivotColumns(r, s), this.extractValueColumns(r, s), this.ready = !0;
        var u = this.gridColsArePrimary === void 0, p = this.gridColsArePrimary || u;
        p && (this.updateGridColumns(), e && !this.gridOptionsWrapper.isMaintainColumnOrder() && this.orderGridColumnsLikePrimary(), this.updateDisplayedColumns(r), this.checkViewportColumns()), this.dispatchEverythingChanged(r), i && i(), this.dispatchNewColumnsLoaded();
      }, t.prototype.dispatchNewColumnsLoaded = function() {
        var e = {
          type: m.EVENT_NEW_COLUMNS_LOADED,
          api: this.gridApi,
          columnApi: this.columnApi
        };
        this.eventService.dispatchEvent(e);
      }, t.prototype.dispatchEverythingChanged = function(e) {
        e === void 0 && (e = "api");
        var r = {
          type: m.EVENT_COLUMN_EVERYTHING_CHANGED,
          api: this.gridApi,
          columnApi: this.columnApi,
          source: e
        };
        this.eventService.dispatchEvent(r);
      }, t.prototype.orderGridColumnsLikePrimary = function() {
        var e = this, r = this.primaryColumns;
        r && this.gridColumns.sort(function(o, i) {
          var s = r.indexOf(o), a = r.indexOf(i), l = s >= 0, u = a >= 0;
          if (l && u)
            return s - a;
          if (l)
            return 1;
          if (u)
            return -1;
          var p = e.gridColumns.indexOf(o), d = e.gridColumns.indexOf(i);
          return p - d;
        });
      }, t.prototype.getAllDisplayedAutoHeightCols = function() {
        return this.displayedAutoHeightCols;
      }, t.prototype.setViewport = function() {
        this.gridOptionsWrapper.isEnableRtl() ? (this.viewportLeft = this.bodyWidth - this.scrollPosition - this.scrollWidth, this.viewportRight = this.bodyWidth - this.scrollPosition) : (this.viewportLeft = this.scrollPosition, this.viewportRight = this.scrollWidth + this.scrollPosition);
      }, t.prototype.getDisplayedColumnsStartingAt = function(e) {
        for (var r = e, o = []; r != null; )
          o.push(r), r = this.getDisplayedColAfter(r);
        return o;
      }, t.prototype.checkViewportColumns = function() {
        if (this.displayedColumnsCenter != null) {
          var e = this.viewportColumns.map(function(i) {
            return i.getId();
          }).join("#");
          this.extractViewport();
          var r = this.viewportColumns.map(function(i) {
            return i.getId();
          }).join("#");
          if (e !== r) {
            var o = {
              type: m.EVENT_VIRTUAL_COLUMNS_CHANGED,
              api: this.gridApi,
              columnApi: this.columnApi
            };
            this.eventService.dispatchEvent(o);
          }
        }
      }, t.prototype.setViewportPosition = function(e, r) {
        (e !== this.scrollWidth || r !== this.scrollPosition || this.bodyWidthDirty) && (this.scrollWidth = e, this.scrollPosition = r, this.bodyWidthDirty = !0, this.setViewport(), this.ready && this.checkViewportColumns());
      }, t.prototype.isPivotMode = function() {
        return this.pivotMode;
      }, t.prototype.isPivotSettingAllowed = function(e) {
        return e && this.gridOptionsWrapper.isTreeData() ? (console.warn("AG Grid: Pivot mode not available in conjunction Tree Data i.e. 'gridOptions.treeData: true'"), !1) : !0;
      }, t.prototype.setPivotMode = function(e, r) {
        if (r === void 0 && (r = "api"), !(e === this.pivotMode || !this.isPivotSettingAllowed(this.pivotMode))) {
          this.pivotMode = e, this.autoGroupsNeedBuilding = !0, this.updateGridColumns(), this.updateDisplayedColumns(r);
          var o = {
            type: m.EVENT_COLUMN_PIVOT_MODE_CHANGED,
            api: this.gridApi,
            columnApi: this.columnApi
          };
          this.eventService.dispatchEvent(o);
        }
      }, t.prototype.getSecondaryPivotColumn = function(e, r) {
        if (C(this.secondaryColumns))
          return null;
        var o = this.getPrimaryColumn(r), i = null;
        return this.secondaryColumns.forEach(function(s) {
          var a = s.getColDef().pivotKeys, l = s.getColDef().pivotValueColumn, u = k(a, e), p = l === o;
          u && p && (i = s);
        }), i;
      }, t.prototype.setBeans = function(e) {
        this.logger = e.create("columnModel");
      }, t.prototype.setFirstRightAndLastLeftPinned = function(e) {
        var r, o;
        this.gridOptionsWrapper.isEnableRtl() ? (r = this.displayedColumnsLeft ? this.displayedColumnsLeft[0] : null, o = this.displayedColumnsRight ? M(this.displayedColumnsRight) : null) : (r = this.displayedColumnsLeft ? M(this.displayedColumnsLeft) : null, o = this.displayedColumnsRight ? this.displayedColumnsRight[0] : null), this.gridColumns.forEach(function(i) {
          i.setLastLeftPinned(i === r, e), i.setFirstRightPinned(i === o, e);
        });
      }, t.prototype.autoSizeColumns = function(e) {
        var r = this, o = e.columns, i = e.skipHeader, s = e.skipHeaderGroups, a = e.stopAtGroup, l = e.source, u = l === void 0 ? "api" : l;
        this.animationFrameService.flushAllFrames();
        for (var p = [], d = -1, f = i ?? this.gridOptionsWrapper.isSkipHeaderOnAutoSize(), v = s ?? f; d !== 0; )
          d = 0, this.actionOnGridColumns(o, function(y) {
            if (p.indexOf(y) >= 0)
              return !1;
            var R = r.autoWidthCalculator.getPreferredWidthForColumn(y, f);
            if (R > 0) {
              var _ = r.normaliseColumnWidth(y, R);
              y.setActualWidth(_, u), p.push(y), d++;
            }
            return !0;
          }, u);
        v || this.autoSizeColumnGroupsByColumns(o, a), this.fireColumnResizedEvent(p, !0, "autosizeColumns");
      }, t.prototype.fireColumnResizedEvent = function(e, r, o, i) {
        if (i === void 0 && (i = null), e && e.length) {
          var s = {
            type: m.EVENT_COLUMN_RESIZED,
            columns: e,
            column: e.length === 1 ? e[0] : null,
            flexColumns: i,
            finished: r,
            api: this.gridApi,
            columnApi: this.columnApi,
            source: o
          };
          this.eventService.dispatchEvent(s);
        }
      }, t.prototype.autoSizeColumn = function(e, r, o) {
        o === void 0 && (o = "api"), e && this.autoSizeColumns({ columns: [e], skipHeader: r, skipHeaderGroups: !0, source: o });
      }, t.prototype.autoSizeColumnGroupsByColumns = function(e, r) {
        var o, i, s, a, l = /* @__PURE__ */ new Set(), u = this.getGridColumns(e);
        u.forEach(function(P) {
          for (var F = P.getParent(); F && F != r; )
            F.isPadding() || l.add(F), F = F.getParent();
        });
        var p, d = [];
        try {
          for (var f = Ra(l), v = f.next(); !v.done; v = f.next()) {
            var y = v.value;
            try {
              for (var R = (s = void 0, Ra(this.ctrlsService.getHeaderRowContainerCtrls())), _ = R.next(); !_.done; _ = R.next()) {
                var D = _.value;
                if (p = D.getHeaderCtrlForColumn(y), p)
                  break;
              }
            } catch (P) {
              s = { error: P };
            } finally {
              try {
                _ && !_.done && (a = R.return) && a.call(R);
              } finally {
                if (s) throw s.error;
              }
            }
            p && p.resizeLeafColumnsToFit();
          }
        } catch (P) {
          o = { error: P };
        } finally {
          try {
            v && !v.done && (i = f.return) && i.call(f);
          } finally {
            if (o) throw o.error;
          }
        }
        return d;
      }, t.prototype.autoSizeAllColumns = function(e, r) {
        r === void 0 && (r = "api");
        var o = this.getAllDisplayedColumns();
        this.autoSizeColumns({ columns: o, skipHeader: e, source: r });
      }, t.prototype.getColumnsFromTree = function(e) {
        var r = [], o = function(i) {
          for (var s = 0; s < i.length; s++) {
            var a = i[s];
            a instanceof A ? r.push(a) : a instanceof _e && o(a.getChildren());
          }
        };
        return o(e), r;
      }, t.prototype.getAllDisplayedTrees = function() {
        return this.displayedTreeLeft && this.displayedTreeRight && this.displayedTreeCentre ? this.displayedTreeLeft.concat(this.displayedTreeCentre).concat(this.displayedTreeRight) : null;
      }, t.prototype.getPrimaryColumnTree = function() {
        return this.primaryColumnTree;
      }, t.prototype.getHeaderRowCount = function() {
        return this.gridHeaderRowCount;
      }, t.prototype.getDisplayedTreeLeft = function() {
        return this.displayedTreeLeft;
      }, t.prototype.getDisplayedTreeRight = function() {
        return this.displayedTreeRight;
      }, t.prototype.getDisplayedTreeCentre = function() {
        return this.displayedTreeCentre;
      }, t.prototype.isColumnDisplayed = function(e) {
        return this.getAllDisplayedColumns().indexOf(e) >= 0;
      }, t.prototype.getAllDisplayedColumns = function() {
        return this.displayedColumns;
      }, t.prototype.getViewportColumns = function() {
        return this.viewportColumns;
      }, t.prototype.getDisplayedLeftColumnsForRow = function(e) {
        return this.colSpanActive ? this.getDisplayedColumnsForRow(e, this.displayedColumnsLeft) : this.displayedColumnsLeft;
      }, t.prototype.getDisplayedRightColumnsForRow = function(e) {
        return this.colSpanActive ? this.getDisplayedColumnsForRow(e, this.displayedColumnsRight) : this.displayedColumnsRight;
      }, t.prototype.getDisplayedColumnsForRow = function(e, r, o, i) {
        for (var s = [], a = null, l = function(d) {
          var f = r[d], v = r.length - d, y = Math.min(f.getColSpan(e), v), R = [f];
          if (y > 1) {
            for (var _ = y - 1, D = 1; D <= _; D++)
              R.push(r[d + D]);
            d += _;
          }
          var P;
          if (o ? (P = !1, R.forEach(function(U) {
            o(U) && (P = !0);
          })) : P = !0, P) {
            if (s.length === 0 && a) {
              var F = i ? i(f) : !1;
              F && s.push(a);
            }
            s.push(f);
          }
          a = f, u = d;
        }, u, p = 0; p < r.length; p++)
          l(p), p = u;
        return s;
      }, t.prototype.getViewportCenterColumnsForRow = function(e) {
        var r = this;
        if (!this.colSpanActive)
          return this.viewportColumnsCenter;
        var o = function(s) {
          var a = s.getLeft();
          return g(a) && a > r.viewportLeft;
        }, i = this.suppressColumnVirtualisation ? null : this.isColumnInViewport.bind(this);
        return this.getDisplayedColumnsForRow(e, this.displayedColumnsCenter, i, o);
      }, t.prototype.getAriaColumnIndex = function(e) {
        return this.getAllGridColumns().indexOf(e) + 1;
      }, t.prototype.isColumnInViewport = function(e) {
        if (e.isAutoHeight())
          return !0;
        var r = e.getLeft() || 0, o = r + e.getActualWidth(), i = this.viewportLeft - 200, s = this.viewportRight + 200, a = r < i && o < i, l = r > s && o > s;
        return !a && !l;
      }, t.prototype.getDisplayedColumnsLeftWidth = function() {
        return this.getWidthOfColsInList(this.displayedColumnsLeft);
      }, t.prototype.getDisplayedColumnsRightWidth = function() {
        return this.getWidthOfColsInList(this.displayedColumnsRight);
      }, t.prototype.updatePrimaryColumnList = function(e, r, o, i, s, a) {
        var l = this;
        if (a === void 0 && (a = "api"), !(!e || S(e))) {
          var u = !1;
          if (e.forEach(function(d) {
            var f = l.getPrimaryColumn(d);
            if (f) {
              if (o) {
                if (r.indexOf(f) >= 0)
                  return;
                r.push(f);
              } else {
                if (r.indexOf(f) < 0)
                  return;
                Ce(r, f);
              }
              i(f), u = !0;
            }
          }), !!u) {
            this.autoGroupsNeedBuilding && this.updateGridColumns(), this.updateDisplayedColumns(a);
            var p = {
              type: s,
              columns: r,
              column: r.length === 1 ? r[0] : null,
              api: this.gridApi,
              columnApi: this.columnApi,
              source: a
            };
            this.eventService.dispatchEvent(p);
          }
        }
      }, t.prototype.setRowGroupColumns = function(e, r) {
        r === void 0 && (r = "api"), this.autoGroupsNeedBuilding = !0, this.setPrimaryColumnList(e, this.rowGroupColumns, m.EVENT_COLUMN_ROW_GROUP_CHANGED, this.setRowGroupActive.bind(this), r);
      }, t.prototype.setRowGroupActive = function(e, r, o) {
        e !== r.isRowGroupActive() && (r.setRowGroupActive(e, o), !e && !this.gridOptionsWrapper.isSuppressMakeColumnVisibleAfterUnGroup() && r.setVisible(!0, o));
      }, t.prototype.addRowGroupColumn = function(e, r) {
        r === void 0 && (r = "api"), e && this.addRowGroupColumns([e], r);
      }, t.prototype.addRowGroupColumns = function(e, r) {
        r === void 0 && (r = "api"), this.autoGroupsNeedBuilding = !0, this.updatePrimaryColumnList(e, this.rowGroupColumns, !0, this.setRowGroupActive.bind(this, !0), m.EVENT_COLUMN_ROW_GROUP_CHANGED, r);
      }, t.prototype.removeRowGroupColumns = function(e, r) {
        r === void 0 && (r = "api"), this.autoGroupsNeedBuilding = !0, this.updatePrimaryColumnList(e, this.rowGroupColumns, !1, this.setRowGroupActive.bind(this, !1), m.EVENT_COLUMN_ROW_GROUP_CHANGED, r);
      }, t.prototype.removeRowGroupColumn = function(e, r) {
        r === void 0 && (r = "api"), e && this.removeRowGroupColumns([e], r);
      }, t.prototype.addPivotColumns = function(e, r) {
        r === void 0 && (r = "api"), this.updatePrimaryColumnList(e, this.pivotColumns, !0, function(o) {
          return o.setPivotActive(!0, r);
        }, m.EVENT_COLUMN_PIVOT_CHANGED, r);
      }, t.prototype.setPivotColumns = function(e, r) {
        r === void 0 && (r = "api"), this.setPrimaryColumnList(e, this.pivotColumns, m.EVENT_COLUMN_PIVOT_CHANGED, function(o, i) {
          i.setPivotActive(o, r);
        }, r);
      }, t.prototype.addPivotColumn = function(e, r) {
        r === void 0 && (r = "api"), this.addPivotColumns([e], r);
      }, t.prototype.removePivotColumns = function(e, r) {
        r === void 0 && (r = "api"), this.updatePrimaryColumnList(e, this.pivotColumns, !1, function(o) {
          return o.setPivotActive(!1, r);
        }, m.EVENT_COLUMN_PIVOT_CHANGED, r);
      }, t.prototype.removePivotColumn = function(e, r) {
        r === void 0 && (r = "api"), this.removePivotColumns([e], r);
      }, t.prototype.setPrimaryColumnList = function(e, r, o, i, s) {
        var a = this;
        r.length = 0, g(e) && e.forEach(function(l) {
          var u = a.getPrimaryColumn(l);
          u && r.push(u);
        }), (this.primaryColumns || []).forEach(function(l) {
          var u = r.indexOf(l) >= 0;
          i(u, l);
        }), this.autoGroupsNeedBuilding && this.updateGridColumns(), this.updateDisplayedColumns(s), this.fireColumnEvent(o, r, s);
      }, t.prototype.setValueColumns = function(e, r) {
        r === void 0 && (r = "api"), this.setPrimaryColumnList(e, this.valueColumns, m.EVENT_COLUMN_VALUE_CHANGED, this.setValueActive.bind(this), r);
      }, t.prototype.setValueActive = function(e, r, o) {
        if (e !== r.isValueActive() && (r.setValueActive(e, o), e && !r.getAggFunc())) {
          var i = this.aggFuncService.getDefaultAggFunc(r);
          r.setAggFunc(i);
        }
      }, t.prototype.addValueColumns = function(e, r) {
        r === void 0 && (r = "api"), this.updatePrimaryColumnList(e, this.valueColumns, !0, this.setValueActive.bind(this, !0), m.EVENT_COLUMN_VALUE_CHANGED, r);
      }, t.prototype.addValueColumn = function(e, r) {
        r === void 0 && (r = "api"), e && this.addValueColumns([e], r);
      }, t.prototype.removeValueColumn = function(e, r) {
        r === void 0 && (r = "api"), this.removeValueColumns([e], r);
      }, t.prototype.removeValueColumns = function(e, r) {
        r === void 0 && (r = "api"), this.updatePrimaryColumnList(e, this.valueColumns, !1, this.setValueActive.bind(this, !1), m.EVENT_COLUMN_VALUE_CHANGED, r);
      }, t.prototype.normaliseColumnWidth = function(e, r) {
        var o = e.getMinWidth();
        g(o) && r < o && (r = o);
        var i = e.getMaxWidth();
        return g(i) && e.isGreaterThanMax(r) && (r = i), r;
      }, t.prototype.getPrimaryOrGridColumn = function(e) {
        var r = this.getPrimaryColumn(e);
        return r || this.getGridColumn(e);
      }, t.prototype.setColumnWidths = function(e, r, o, i) {
        var s = this;
        i === void 0 && (i = "api");
        var a = [];
        e.forEach(function(l) {
          var u = s.getPrimaryOrGridColumn(l.key);
          if (u) {
            a.push({
              width: l.newWidth,
              ratios: [1],
              columns: [u]
            });
            var p = s.gridOptionsWrapper.getColResizeDefault() === "shift";
            if (p && (r = !r), r) {
              var d = s.getDisplayedColAfter(u);
              if (!d)
                return;
              var f = u.getActualWidth() - l.newWidth, v = d.getActualWidth() + f;
              a.push({
                width: v,
                ratios: [1],
                columns: [d]
              });
            }
          }
        }), a.length !== 0 && this.resizeColumnSets({
          resizeSets: a,
          finished: o,
          source: i
        });
      }, t.prototype.checkMinAndMaxWidthsForSet = function(e) {
        var r = e.columns, o = e.width, i = 0, s = 0, a = !0;
        r.forEach(function(p) {
          var d = p.getMinWidth();
          i += d || 0;
          var f = p.getMaxWidth();
          g(f) && f > 0 ? s += f : a = !1;
        });
        var l = o >= i, u = !a || o <= s;
        return l && u;
      }, t.prototype.resizeColumnSets = function(e) {
        var r = this, o = e.resizeSets, i = e.finished, s = e.source, a = !o || o.every(function(y) {
          return r.checkMinAndMaxWidthsForSet(y);
        });
        if (!a) {
          if (i) {
            var l = o && o.length > 0 ? o[0].columns : null;
            this.fireColumnResizedEvent(l, i, s);
          }
          return;
        }
        var u = [], p = [];
        o.forEach(function(y) {
          var R = y.width, _ = y.columns, D = y.ratios, P = {}, F = {};
          _.forEach(function(J) {
            return p.push(J);
          });
          for (var U = !0, X = 0, ce = function() {
            if (X++, X > 1e3)
              return console.error("AG Grid: infinite loop in resizeColumnSets"), "break";
            U = !1;
            var J = [], fe = 0, ge = R;
            _.forEach(function(Te, mt) {
              var yt = F[Te.getId()];
              if (yt)
                ge -= P[Te.getId()];
              else {
                J.push(Te);
                var ot = D[mt];
                fe += ot;
              }
            });
            var Pe = 1 / fe;
            J.forEach(function(Te, mt) {
              var yt = mt === J.length - 1, ot;
              yt ? ot = ge : (ot = Math.round(D[mt] * R * Pe), ge -= ot);
              var no = Te.getMinWidth(), _r = Te.getMaxWidth();
              g(no) && ot < no ? (ot = no, F[Te.getId()] = !0, U = !0) : g(_r) && _r > 0 && ot > _r && (ot = _r, F[Te.getId()] = !0, U = !0), P[Te.getId()] = ot;
            });
          }; U; ) {
            var de = ce();
            if (de === "break")
              break;
          }
          _.forEach(function(J) {
            var fe = P[J.getId()], ge = J.getActualWidth();
            ge !== fe && (J.setActualWidth(fe, s), u.push(J));
          });
        });
        var d = u.length > 0, f = [];
        d && (f = this.refreshFlexedColumns({ resizingCols: p, skipSetLeft: !0 }), this.setLeftValues(s), this.updateBodyWidths(), this.checkViewportColumns());
        var v = p.concat(f);
        (d || i) && this.fireColumnResizedEvent(v, i, s, f);
      }, t.prototype.setColumnAggFunc = function(e, r, o) {
        if (o === void 0 && (o = "api"), !!e) {
          var i = this.getPrimaryColumn(e);
          i && (i.setAggFunc(r), this.fireColumnEvent(m.EVENT_COLUMN_VALUE_CHANGED, [i], o));
        }
      }, t.prototype.fireColumnEvent = function(e, r, o) {
        var i = {
          type: e,
          columns: r,
          column: r && r.length == 1 ? r[0] : null,
          api: this.gridApi,
          columnApi: this.columnApi,
          source: o
        };
        this.eventService.dispatchEvent(i);
      }, t.prototype.moveRowGroupColumn = function(e, r, o) {
        o === void 0 && (o = "api");
        var i = this.rowGroupColumns[e];
        this.rowGroupColumns.splice(e, 1), this.rowGroupColumns.splice(r, 0, i);
        var s = {
          type: m.EVENT_COLUMN_ROW_GROUP_CHANGED,
          columns: this.rowGroupColumns,
          column: this.rowGroupColumns.length === 1 ? this.rowGroupColumns[0] : null,
          api: this.gridApi,
          columnApi: this.columnApi,
          source: o
        };
        this.eventService.dispatchEvent(s);
      }, t.prototype.moveColumns = function(e, r, o) {
        if (o === void 0 && (o = "api"), this.columnAnimationService.start(), r > this.gridColumns.length - e.length) {
          console.warn("AG Grid: tried to insert columns in invalid location, toIndex = " + r), console.warn("AG Grid: remember that you should not count the moving columns when calculating the new index");
          return;
        }
        var i = this.getGridColumns(e), s = !this.doesMovePassRules(i, r);
        if (!s) {
          cr(this.gridColumns, i, r), this.updateDisplayedColumns(o);
          var a = {
            type: m.EVENT_COLUMN_MOVED,
            columns: i,
            column: i.length === 1 ? i[0] : null,
            toIndex: r,
            api: this.gridApi,
            columnApi: this.columnApi,
            source: o
          };
          this.eventService.dispatchEvent(a), this.columnAnimationService.finish();
        }
      }, t.prototype.doesMovePassRules = function(e, r) {
        var o = this.gridColumns.slice();
        return cr(o, e, r), !(!this.doesMovePassMarryChildren(o) || !this.doesMovePassLockedPositions(o));
      }, t.prototype.sortColumnsLikeGridColumns = function(e) {
        var r = this;
        if (!(!e || e.length <= 1)) {
          var o = e.filter(function(i) {
            return r.gridColumns.indexOf(i) < 0;
          }).length > 0;
          o || e.sort(function(i, s) {
            var a = r.gridColumns.indexOf(i), l = r.gridColumns.indexOf(s);
            return a - l;
          });
        }
      }, t.prototype.doesMovePassLockedPositions = function(e) {
        var r = 0, o = !0, i = function(s) {
          return s ? s === !0 || s === "left" ? 0 : 2 : 1;
        };
        return e.forEach(function(s) {
          var a = i(s.getColDef().lockPosition);
          a < r && (o = !1), r = a;
        }), o;
      }, t.prototype.doesMovePassMarryChildren = function(e) {
        var r = !0;
        return this.columnUtils.depthFirstOriginalTreeSearch(null, this.gridBalancedTree, function(o) {
          if (o instanceof _e) {
            var i = o, s = i.getColGroupDef(), a = s && s.marryChildren;
            if (a) {
              var l = [];
              i.getLeafColumns().forEach(function(v) {
                var y = e.indexOf(v);
                l.push(y);
              });
              var u = Math.max.apply(Math, l), p = Math.min.apply(Math, l), d = u - p, f = i.getLeafColumns().length - 1;
              d > f && (r = !1);
            }
          }
        }), r;
      }, t.prototype.moveColumn = function(e, r, o) {
        o === void 0 && (o = "api"), this.moveColumns([e], r, o);
      }, t.prototype.moveColumnByIndex = function(e, r, o) {
        o === void 0 && (o = "api");
        var i = this.gridColumns[e];
        this.moveColumn(i, r, o);
      }, t.prototype.getColumnDefs = function() {
        var e = this;
        if (this.primaryColumns) {
          var r = this.primaryColumns.slice();
          return this.gridColsArePrimary ? r.sort(function(o, i) {
            return e.gridColumns.indexOf(o) - e.gridColumns.indexOf(i);
          }) : this.lastPrimaryOrder && r.sort(function(o, i) {
            return e.lastPrimaryOrder.indexOf(o) - e.lastPrimaryOrder.indexOf(i);
          }), this.columnDefFactory.buildColumnDefs(r, this.rowGroupColumns, this.pivotColumns);
        }
      }, t.prototype.getBodyContainerWidth = function() {
        return this.bodyWidth;
      }, t.prototype.getContainerWidth = function(e) {
        switch (e) {
          case E.PINNED_LEFT:
            return this.leftWidth;
          case E.PINNED_RIGHT:
            return this.rightWidth;
          default:
            return this.bodyWidth;
        }
      }, t.prototype.updateBodyWidths = function() {
        var e = this.getWidthOfColsInList(this.displayedColumnsCenter), r = this.getWidthOfColsInList(this.displayedColumnsLeft), o = this.getWidthOfColsInList(this.displayedColumnsRight);
        this.bodyWidthDirty = this.bodyWidth !== e;
        var i = this.bodyWidth !== e || this.leftWidth !== r || this.rightWidth !== o;
        if (i) {
          this.bodyWidth = e, this.leftWidth = r, this.rightWidth = o;
          var s = {
            type: m.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED,
            api: this.gridApi,
            columnApi: this.columnApi
          };
          this.eventService.dispatchEvent(s);
        }
      }, t.prototype.getValueColumns = function() {
        return this.valueColumns ? this.valueColumns : [];
      }, t.prototype.getPivotColumns = function() {
        return this.pivotColumns ? this.pivotColumns : [];
      }, t.prototype.isPivotActive = function() {
        return this.pivotColumns && this.pivotColumns.length > 0 && this.pivotMode;
      }, t.prototype.getRowGroupColumns = function() {
        return this.rowGroupColumns ? this.rowGroupColumns : [];
      }, t.prototype.getDisplayedCenterColumns = function() {
        return this.displayedColumnsCenter;
      }, t.prototype.getDisplayedLeftColumns = function() {
        return this.displayedColumnsLeft;
      }, t.prototype.getDisplayedRightColumns = function() {
        return this.displayedColumnsRight;
      }, t.prototype.getDisplayedColumns = function(e) {
        switch (e) {
          case E.PINNED_LEFT:
            return this.getDisplayedLeftColumns();
          case E.PINNED_RIGHT:
            return this.getDisplayedRightColumns();
          default:
            return this.getDisplayedCenterColumns();
        }
      }, t.prototype.getAllPrimaryColumns = function() {
        return this.primaryColumns ? this.primaryColumns.slice() : null;
      }, t.prototype.getSecondaryColumns = function() {
        return this.secondaryColumns ? this.secondaryColumns.slice() : null;
      }, t.prototype.getAllColumnsForQuickFilter = function() {
        return this.columnsForQuickFilter;
      }, t.prototype.getAllGridColumns = function() {
        return this.gridColumns;
      }, t.prototype.isEmpty = function() {
        return S(this.gridColumns);
      }, t.prototype.isRowGroupEmpty = function() {
        return S(this.rowGroupColumns);
      }, t.prototype.setColumnVisible = function(e, r, o) {
        o === void 0 && (o = "api"), this.setColumnsVisible([e], r, o);
      }, t.prototype.setColumnsVisible = function(e, r, o) {
        var i = this;
        r === void 0 && (r = !1), o === void 0 && (o = "api"), this.columnAnimationService.start(), this.actionOnGridColumns(e, function(s) {
          return s.isVisible() !== r ? (s.setVisible(r, o), !0) : !1;
        }, o, function() {
          var s = {
            type: m.EVENT_COLUMN_VISIBLE,
            visible: r,
            column: null,
            columns: null,
            api: i.gridApi,
            columnApi: i.columnApi,
            source: o
          };
          return s;
        }), this.columnAnimationService.finish();
      }, t.prototype.setColumnPinned = function(e, r, o) {
        o === void 0 && (o = "api"), e && this.setColumnsPinned([e], r, o);
      }, t.prototype.setColumnsPinned = function(e, r, o) {
        var i = this;
        if (o === void 0 && (o = "api"), this.gridOptionsWrapper.getDomLayout() === "print") {
          console.warn("Changing the column pinning status is not allowed with domLayout='print'");
          return;
        }
        this.columnAnimationService.start();
        var s;
        r === !0 || r === E.PINNED_LEFT ? s = E.PINNED_LEFT : r === E.PINNED_RIGHT ? s = E.PINNED_RIGHT : s = null, this.actionOnGridColumns(e, function(a) {
          return a.getPinned() !== s ? (a.setPinned(s), !0) : !1;
        }, o, function() {
          var a = {
            type: m.EVENT_COLUMN_PINNED,
            pinned: s,
            column: null,
            columns: null,
            api: i.gridApi,
            columnApi: i.columnApi,
            source: o
          };
          return a;
        }), this.columnAnimationService.finish();
      }, t.prototype.actionOnGridColumns = function(e, r, o, i) {
        var s = this;
        if (!S(e)) {
          var a = [];
          if (e.forEach(function(u) {
            var p = s.getGridColumn(u);
            if (p) {
              var d = r(p);
              d !== !1 && a.push(p);
            }
          }), !!a.length && (this.updateDisplayedColumns(o), g(i) && i)) {
            var l = i();
            l.columns = a, l.column = a.length === 1 ? a[0] : null, this.eventService.dispatchEvent(l);
          }
        }
      }, t.prototype.getDisplayedColBefore = function(e) {
        var r = this.getAllDisplayedColumns(), o = r.indexOf(e);
        return o > 0 ? r[o - 1] : null;
      }, t.prototype.getDisplayedColAfter = function(e) {
        var r = this.getAllDisplayedColumns(), o = r.indexOf(e);
        return o < r.length - 1 ? r[o + 1] : null;
      }, t.prototype.getDisplayedGroupAfter = function(e) {
        return this.getDisplayedGroupAtDirection(e, "After");
      }, t.prototype.getDisplayedGroupBefore = function(e) {
        return this.getDisplayedGroupAtDirection(e, "Before");
      }, t.prototype.getDisplayedGroupAtDirection = function(e, r) {
        for (var o = e.getProvidedColumnGroup().getLevel() + e.getPaddingLevel(), i = e.getDisplayedLeafColumns(), s = r === "After" ? M(i) : i[0], a = "getDisplayedCol" + r; ; ) {
          var l = this[a](s);
          if (!l)
            return null;
          var u = this.getColumnGroupAtLevel(l, o);
          if (u !== e)
            return u;
        }
      }, t.prototype.getColumnGroupAtLevel = function(e, r) {
        for (var o = e.getParent(), i, s; ; ) {
          var a = o.getProvidedColumnGroup();
          if (i = a.getLevel(), s = o.getPaddingLevel(), i + s <= r)
            break;
          o = o.getParent();
        }
        return o;
      }, t.prototype.isPinningLeft = function() {
        return this.displayedColumnsLeft.length > 0;
      }, t.prototype.isPinningRight = function() {
        return this.displayedColumnsRight.length > 0;
      }, t.prototype.getPrimaryAndSecondaryAndAutoColumns = function() {
        var e;
        return (e = []).concat.apply(e, Eo([
          this.primaryColumns || [],
          this.groupAutoColumns || [],
          this.secondaryColumns || []
        ]));
      }, t.prototype.getPrimaryAndAutoGroupCols = function() {
        var e;
        return (e = []).concat.apply(e, Eo([
          this.primaryColumns || [],
          this.groupAutoColumns || []
        ]));
      }, t.prototype.getPrimaryAndSecondaryColumns = function() {
        var e;
        return (e = []).concat.apply(e, Eo([
          this.primaryColumns || [],
          this.secondaryColumns || []
        ]));
      }, t.prototype.createStateItemFromColumn = function(e) {
        var r = e.isRowGroupActive() ? this.rowGroupColumns.indexOf(e) : null, o = e.isPivotActive() ? this.pivotColumns.indexOf(e) : null, i = e.isValueActive() ? e.getAggFunc() : null, s = e.getSort() != null ? e.getSort() : null, a = e.getSortIndex() != null ? e.getSortIndex() : null, l = e.getFlex() != null && e.getFlex() > 0 ? e.getFlex() : null, u = {
          colId: e.getColId(),
          width: e.getActualWidth(),
          hide: !e.isVisible(),
          pinned: e.getPinned(),
          sort: s,
          sortIndex: a,
          aggFunc: i,
          rowGroup: e.isRowGroupActive(),
          rowGroupIndex: r,
          pivot: e.isPivotActive(),
          pivotIndex: o,
          flex: l
        };
        return u;
      }, t.prototype.getColumnState = function() {
        if (C(this.primaryColumns) || !this.isAlive())
          return [];
        var e = this.getPrimaryAndSecondaryAndAutoColumns(), r = e.map(this.createStateItemFromColumn.bind(this));
        return this.orderColumnStateList(r), r;
      }, t.prototype.orderColumnStateList = function(e) {
        var r = qt(this.gridColumns.map(function(o, i) {
          return [o.getColId(), i];
        }));
        e.sort(function(o, i) {
          var s = r.has(o.colId) ? r.get(o.colId) : -1, a = r.has(i.colId) ? r.get(i.colId) : -1;
          return s - a;
        });
      }, t.prototype.resetColumnState = function(e) {
        e === void 0 && (e = "api");
        var r = this.getColumnsFromTree(this.primaryColumnTree), o = [], i = 1e3, s = 1e3, a = [];
        this.groupAutoColumns && (a = a.concat(this.groupAutoColumns)), r && (a = a.concat(r)), a.forEach(function(l) {
          var u = function(de, J) {
            return de ?? J ?? null;
          }, p = l.getColDef(), d = u(p.sort, p.initialSort), f = u(p.sortIndex, p.initialSortIndex), v = u(p.hide, p.initialHide), y = u(p.pinned, p.initialPinned), R = u(p.width, p.initialWidth), _ = u(p.flex, p.initialFlex), D = u(p.rowGroupIndex, p.initialRowGroupIndex), P = u(p.rowGroup, p.initialRowGroup);
          D == null && (P == null || P == !1) && (D = null, P = null);
          var F = u(p.pivotIndex, p.initialPivotIndex), U = u(p.pivot, p.initialPivot);
          F == null && (U == null || U == !1) && (F = null, U = null);
          var X = u(p.aggFunc, p.initialAggFunc), ce = {
            colId: l.getColId(),
            sort: d,
            sortIndex: f,
            hide: v,
            pinned: y,
            width: R,
            flex: _,
            rowGroup: P,
            rowGroupIndex: D,
            pivot: U,
            pivotIndex: F,
            aggFunc: X
          };
          C(D) && P && (ce.rowGroupIndex = i++), C(F) && U && (ce.pivotIndex = s++), o.push(ce);
        }), this.applyColumnState({ state: o, applyOrder: !0 }, e);
      }, t.prototype.applyColumnState = function(e, r) {
        var o = this;
        if (r === void 0 && (r = "api"), S(this.primaryColumns))
          return !1;
        if (e && e.state && !e.state.forEach)
          return console.warn("AG Grid: applyColumnState() - the state attribute should be an array, however an array was not found. Please provide an array of items (one for each col you want to change) for state."), !1;
        var i = function(u, p, d) {
          var f = o.compareColumnStatesAndRaiseEvents(r);
          o.autoGroupsNeedBuilding = !0;
          var v = p.slice(), y = {}, R = {}, _ = [], D = [], P = 0, F = o.rowGroupColumns.slice(), U = o.pivotColumns.slice();
          u.forEach(function(J) {
            var fe = J.colId || "", ge = fe.startsWith(E.GROUP_AUTO_COLUMN_ID);
            if (ge) {
              _.push(J), D.push(J);
              return;
            }
            var Pe = d(fe);
            Pe ? (o.syncColumnWithStateItem(Pe, J, e.defaultState, y, R, !1, r), Ce(v, Pe)) : (D.push(J), P += 1);
          });
          var X = function(J) {
            return o.syncColumnWithStateItem(J, null, e.defaultState, y, R, !1, r);
          };
          v.forEach(X);
          var ce = function(J, fe, ge, Pe) {
            var Te = J[ge.getId()], mt = J[Pe.getId()], yt = Te != null, ot = mt != null;
            if (yt && ot)
              return Te - mt;
            if (yt)
              return -1;
            if (ot)
              return 1;
            var no = fe.indexOf(ge), _r = fe.indexOf(Pe), qp = no >= 0, hC = _r >= 0;
            return qp && hC ? no - _r : qp ? -1 : 1;
          };
          o.rowGroupColumns.sort(ce.bind(o, y, F)), o.pivotColumns.sort(ce.bind(o, R, U)), o.updateGridColumns();
          var de = o.groupAutoColumns ? o.groupAutoColumns.slice() : [];
          return _.forEach(function(J) {
            var fe = o.getAutoColumn(J.colId);
            Ce(de, fe), o.syncColumnWithStateItem(fe, J, e.defaultState, null, null, !0, r);
          }), de.forEach(X), o.applyOrderAfterApplyState(e), o.updateDisplayedColumns(r), o.dispatchEverythingChanged(r), f(), { unmatchedAndAutoStates: D, unmatchedCount: P };
        };
        this.columnAnimationService.start();
        var s = i(e.state || [], this.primaryColumns || [], function(u) {
          return o.getPrimaryColumn(u);
        }), a = s.unmatchedAndAutoStates, l = s.unmatchedCount;
        return (a.length > 0 || g(e.defaultState)) && (l = i(a, this.secondaryColumns || [], function(u) {
          return o.getSecondaryColumn(u);
        }).unmatchedCount), this.columnAnimationService.finish(), l === 0;
      }, t.prototype.applyOrderAfterApplyState = function(e) {
        var r = this;
        if (!(!e.applyOrder || !e.state)) {
          var o = [], i = {};
          e.state.forEach(function(a) {
            if (!(!a.colId || i[a.colId])) {
              var l = r.gridColumnsMap[a.colId];
              l && (o.push(l), i[a.colId] = !0);
            }
          });
          var s = 0;
          if (this.gridColumns.forEach(function(a) {
            var l = a.getColId(), u = i[l] != null;
            if (!u) {
              var p = l.startsWith(E.GROUP_AUTO_COLUMN_ID);
              p ? Kt(o, a, s++) : o.push(a);
            }
          }), o = this.placeLockedColumns(o), !this.doesMovePassMarryChildren(o)) {
            console.warn("AG Grid: Applying column order broke a group where columns should be married together. Applying new order has been discarded.");
            return;
          }
          this.gridColumns = o;
        }
      }, t.prototype.compareColumnStatesAndRaiseEvents = function(e) {
        var r = this, o = {
          rowGroupColumns: this.rowGroupColumns.slice(),
          pivotColumns: this.pivotColumns.slice(),
          valueColumns: this.valueColumns.slice()
        }, i = this.getColumnState(), s = {};
        return i.forEach(function(a) {
          s[a.colId] = a;
        }), function() {
          if (!r.gridOptionsWrapper.isSuppressColumnStateEvents()) {
            var a = r.getPrimaryAndSecondaryAndAutoColumns(), l = function(D, P, F, U) {
              var X = P.map(U), ce = F.map(U), de = k(X, ce);
              if (!de) {
                var J = {
                  type: D,
                  columns: F,
                  column: F.length === 1 ? F[0] : null,
                  api: r.gridApi,
                  columnApi: r.columnApi,
                  source: e
                };
                r.eventService.dispatchEvent(J);
              }
            }, u = function(D) {
              var P = [];
              return a.forEach(function(F) {
                var U = s[F.getColId()];
                U && D(U, F) && P.push(F);
              }), P;
            }, p = function(D) {
              return D.getColId();
            };
            l(m.EVENT_COLUMN_ROW_GROUP_CHANGED, o.rowGroupColumns, r.rowGroupColumns, p), l(m.EVENT_COLUMN_PIVOT_CHANGED, o.pivotColumns, r.pivotColumns, p);
            var d = function(D, P) {
              var F = D.aggFunc != null, U = F != P.isValueActive(), X = F && D.aggFunc != P.getAggFunc();
              return U || X;
            }, f = u(d);
            f.length > 0 && r.fireColumnEvent(m.EVENT_COLUMN_VALUE_CHANGED, r.valueColumns, e);
            var v = function(D, P) {
              return D.width != P.getActualWidth();
            };
            r.fireColumnResizedEvent(u(v), !0, e);
            var y = function(D, P) {
              return D.pinned != P.getPinned();
            };
            r.raiseColumnPinnedEvent(u(y), e);
            var R = function(D, P) {
              return D.hide == P.isVisible();
            };
            r.raiseColumnVisibleEvent(u(R), e);
            var _ = function(D, P) {
              return D.sort != P.getSort() || D.sortIndex != P.getSortIndex();
            };
            u(_).length > 0 && r.sortController.dispatchSortChangedEvents(e), r.raiseColumnMovedEvent(i, e);
          }
        };
      }, t.prototype.raiseColumnPinnedEvent = function(e, r) {
        if (e.length) {
          var o = e.length === 1 ? e[0] : null, i = this.getCommonValue(e, function(a) {
            return a.getPinned();
          }), s = {
            type: m.EVENT_COLUMN_PINNED,
            // mistake in typing, 'undefined' should be allowed, as 'null' means 'not pinned'
            pinned: i ?? null,
            columns: e,
            column: o,
            api: this.gridApi,
            columnApi: this.columnApi,
            source: r
          };
          this.eventService.dispatchEvent(s);
        }
      }, t.prototype.getCommonValue = function(e, r) {
        if (!(!e || e.length == 0)) {
          for (var o = r(e[0]), i = 1; i < e.length; i++)
            if (o !== r(e[i]))
              return;
          return o;
        }
      }, t.prototype.raiseColumnVisibleEvent = function(e, r) {
        if (e.length) {
          var o = e.length === 1 ? e[0] : null, i = this.getCommonValue(e, function(a) {
            return a.isVisible();
          }), s = {
            type: m.EVENT_COLUMN_VISIBLE,
            visible: i,
            columns: e,
            column: o,
            api: this.gridApi,
            columnApi: this.columnApi,
            source: r
          };
          this.eventService.dispatchEvent(s);
        }
      }, t.prototype.raiseColumnMovedEvent = function(e, r) {
        var o = this, i = this.getColumnState(), s = {};
        i.forEach(function(f) {
          return s[f.colId] = f;
        });
        var a = {};
        e.forEach(function(f) {
          s[f.colId] && (a[f.colId] = !0);
        });
        var l = e.filter(function(f) {
          return a[f.colId];
        }), u = i.filter(function(f) {
          return a[f.colId];
        }), p = [];
        if (u.forEach(function(f, v) {
          var y = l && l[v];
          if (y && y.colId !== f.colId) {
            var R = o.getGridColumn(y.colId);
            R && p.push(R);
          }
        }), !!p.length) {
          var d = {
            type: m.EVENT_COLUMN_MOVED,
            columns: p,
            column: null,
            api: this.gridApi,
            columnApi: this.columnApi,
            source: r
          };
          this.eventService.dispatchEvent(d);
        }
      }, t.prototype.syncColumnWithStateItem = function(e, r, o, i, s, a, l) {
        if (e) {
          var u = function(fe, ge) {
            var Pe = { value1: void 0, value2: void 0 }, Te = !1;
            return r && (r[fe] !== void 0 && (Pe.value1 = r[fe], Te = !0), g(ge) && r[ge] !== void 0 && (Pe.value2 = r[ge], Te = !0)), !Te && o && (o[fe] !== void 0 && (Pe.value1 = o[fe]), g(ge) && o[ge] !== void 0 && (Pe.value2 = o[ge])), Pe;
          }, p = u("hide").value1;
          p !== void 0 && e.setVisible(!p, l);
          var d = u("pinned").value1;
          d !== void 0 && e.setPinned(d);
          var f = this.columnUtils.calculateColMinWidth(e.getColDef()), v = u("flex").value1;
          v !== void 0 && e.setFlex(v);
          var y = e.getFlex() <= 0;
          if (y) {
            var R = u("width").value1;
            R != null && f != null && R >= f && e.setActualWidth(R, l);
          }
          var _ = u("sort").value1;
          _ !== void 0 && (_ === E.SORT_DESC || _ === E.SORT_ASC ? e.setSort(_, l) : e.setSort(void 0, l));
          var D = u("sortIndex").value1;
          if (D !== void 0 && e.setSortIndex(D), !(a || !e.isPrimary())) {
            var P = u("aggFunc").value1;
            P !== void 0 && (typeof P == "string" ? (e.setAggFunc(P), e.isValueActive() || (e.setValueActive(!0, l), this.valueColumns.push(e))) : (g(P) && console.warn("AG Grid: stateItem.aggFunc must be a string. if using your own aggregation functions, register the functions first before using them in get/set state. This is because it is intended for the column state to be stored and retrieved as simple JSON."), e.isValueActive() && (e.setValueActive(!1, l), Ce(this.valueColumns, e))));
            var F = u("rowGroup", "rowGroupIndex"), U = F.value1, X = F.value2;
            (U !== void 0 || X !== void 0) && (typeof X == "number" || U ? (e.isRowGroupActive() || (e.setRowGroupActive(!0, l), this.rowGroupColumns.push(e)), i && typeof X == "number" && (i[e.getId()] = X)) : e.isRowGroupActive() && (e.setRowGroupActive(!1, l), Ce(this.rowGroupColumns, e)));
            var ce = u("pivot", "pivotIndex"), de = ce.value1, J = ce.value2;
            (de !== void 0 || J !== void 0) && (typeof J == "number" || de ? (e.isPivotActive() || (e.setPivotActive(!0, l), this.pivotColumns.push(e)), s && typeof J == "number" && (s[e.getId()] = J)) : e.isPivotActive() && (e.setPivotActive(!1, l), Ce(this.pivotColumns, e)));
          }
        }
      }, t.prototype.getGridColumns = function(e) {
        return this.getColumns(e, this.getGridColumn.bind(this));
      }, t.prototype.getColumns = function(e, r) {
        var o = [];
        return e && e.forEach(function(i) {
          var s = r(i);
          s && o.push(s);
        }), o;
      }, t.prototype.getColumnWithValidation = function(e) {
        if (e == null)
          return null;
        var r = this.getGridColumn(e);
        return r || console.warn("AG Grid: could not find column " + e), r;
      }, t.prototype.getPrimaryColumn = function(e) {
        return this.primaryColumns ? this.getColumn(e, this.primaryColumns, this.primaryColumnsMap) : null;
      }, t.prototype.getGridColumn = function(e) {
        return this.getColumn(e, this.gridColumns, this.gridColumnsMap);
      }, t.prototype.getSecondaryColumn = function(e) {
        return this.secondaryColumns ? this.getColumn(e, this.secondaryColumns, this.secondaryColumnsMap) : null;
      }, t.prototype.getColumn = function(e, r, o) {
        if (!e)
          return null;
        if (typeof e == "string" && o[e])
          return o[e];
        for (var i = 0; i < r.length; i++)
          if (this.columnsMatch(r[i], e))
            return r[i];
        return this.getAutoColumn(e);
      }, t.prototype.getAutoColumn = function(e) {
        var r = this;
        return !this.groupAutoColumns || !g(this.groupAutoColumns) || C(this.groupAutoColumns) ? null : this.groupAutoColumns.find(function(o) {
          return r.columnsMatch(o, e);
        }) || null;
      }, t.prototype.columnsMatch = function(e, r) {
        var o = e === r, i = e.getColDef() === r, s = e.getColId() == r;
        return o || i || s;
      }, t.prototype.getDisplayNameForColumn = function(e, r, o) {
        if (o === void 0 && (o = !1), !e)
          return null;
        var i = this.getHeaderName(e.getColDef(), e, null, null, r);
        return o ? this.wrapHeaderNameWithAggFunc(e, i) : i;
      }, t.prototype.getDisplayNameForProvidedColumnGroup = function(e, r, o) {
        var i = r ? r.getColGroupDef() : null;
        return i ? this.getHeaderName(i, null, e, r, o) : null;
      }, t.prototype.getDisplayNameForColumnGroup = function(e, r) {
        return this.getDisplayNameForProvidedColumnGroup(e, e.getProvidedColumnGroup(), r);
      }, t.prototype.getHeaderName = function(e, r, o, i, s) {
        var a = e.headerValueGetter;
        if (a) {
          var l = {
            colDef: e,
            column: r,
            columnGroup: o,
            providedColumnGroup: i,
            location: s,
            api: this.gridOptionsWrapper.getApi(),
            columnApi: this.gridOptionsWrapper.getColumnApi(),
            context: this.gridOptionsWrapper.getContext()
          };
          return typeof a == "function" ? a(l) : typeof a == "string" ? this.expressionService.evaluate(a, l) : (console.warn("ag-grid: headerValueGetter must be a function or a string"), "");
        } else {
          if (e.headerName != null)
            return e.headerName;
          if (e.field)
            return Dn(e.field);
        }
        return "";
      }, t.prototype.wrapHeaderNameWithAggFunc = function(e, r) {
        if (this.gridOptionsWrapper.isSuppressAggFuncInHeader())
          return r;
        var o = e.getColDef().pivotValueColumn, i = g(o), s = null, a;
        if (i) {
          var l = this.gridOptionsWrapper.isRemovePivotHeaderRowWhenSingleValueColumn() && this.valueColumns.length === 1, u = e.getColDef().pivotTotalColumnIds !== void 0;
          if (l && !u)
            return r;
          s = o ? o.getAggFunc() : null, a = !0;
        } else {
          var p = e.isValueActive(), d = this.pivotMode || !this.isRowGroupEmpty();
          p && d ? (s = e.getAggFunc(), a = !0) : a = !1;
        }
        if (a) {
          var f = typeof s == "string" ? s : "func", v = this.gridOptionsWrapper.getLocaleTextFunc(), y = v(f, f);
          return y + "(" + r + ")";
        }
        return r;
      }, t.prototype.getColumnGroup = function(e, r) {
        if (!e)
          return null;
        if (e instanceof We)
          return e;
        var o = this.getAllDisplayedTrees(), i = typeof r == "number", s = null;
        return this.columnUtils.depthFirstAllColumnTreeSearch(o, function(a) {
          if (a instanceof We) {
            var l = a, u = void 0;
            i ? u = e === l.getGroupId() && r === l.getInstanceId() : u = e === l.getGroupId(), u && (s = l);
          }
        }), s;
      }, t.prototype.isReady = function() {
        return this.ready;
      }, t.prototype.extractValueColumns = function(e, r) {
        this.valueColumns = this.extractColumns(
          r,
          this.valueColumns,
          function(o, i) {
            return o.setValueActive(i, e);
          },
          // aggFunc doesn't have index variant, cos order of value cols doesn't matter, so always return null
          function() {
          },
          function() {
          },
          // aggFunc is a string, so return it's existence
          function(o) {
            var i = o.aggFunc;
            if (i === null || i === "")
              return null;
            if (i !== void 0)
              return !!i;
          },
          function(o) {
            return o.initialAggFunc != null && o.initialAggFunc != "";
          }
        ), this.valueColumns.forEach(function(o) {
          var i = o.getColDef();
          i.aggFunc != null && i.aggFunc != "" ? o.setAggFunc(i.aggFunc) : o.getAggFunc() || o.setAggFunc(i.initialAggFunc);
        });
      }, t.prototype.extractRowGroupColumns = function(e, r) {
        this.rowGroupColumns = this.extractColumns(r, this.rowGroupColumns, function(o, i) {
          return o.setRowGroupActive(i, e);
        }, function(o) {
          return o.rowGroupIndex;
        }, function(o) {
          return o.initialRowGroupIndex;
        }, function(o) {
          return o.rowGroup;
        }, function(o) {
          return o.initialRowGroup;
        });
      }, t.prototype.extractColumns = function(e, r, o, i, s, a, l) {
        e === void 0 && (e = []), r === void 0 && (r = []);
        var u = [], p = [];
        (this.primaryColumns || []).forEach(function(v) {
          var y = e.indexOf(v) < 0, R = v.getColDef(), _ = x(a(R)), D = x(l(R)), P = L(i(R)), F = L(s(R)), U, X = _ !== void 0, ce = P !== void 0, de = D !== void 0, J = F !== void 0;
          if (X ? U = _ : ce ? P === null ? U = !1 : U = P >= 0 : y ? de ? U = D : J ? U = F != null && F >= 0 : U = !1 : U = r.indexOf(v) >= 0, U) {
            var fe = y ? P != null || F != null : P != null;
            fe ? u.push(v) : p.push(v);
          }
        });
        var d = function(v) {
          var y = i(v.getColDef()), R = s(v.getColDef());
          return y ?? R;
        };
        u.sort(function(v, y) {
          var R = d(v), _ = d(y);
          return R === _ ? 0 : R < _ ? -1 : 1;
        });
        var f = [].concat(u);
        return r.forEach(function(v) {
          p.indexOf(v) >= 0 && f.push(v);
        }), p.forEach(function(v) {
          f.indexOf(v) < 0 && f.push(v);
        }), r.forEach(function(v) {
          f.indexOf(v) < 0 && o(v, !1);
        }), f.forEach(function(v) {
          r.indexOf(v) < 0 && o(v, !0);
        }), f;
      }, t.prototype.extractPivotColumns = function(e, r) {
        this.pivotColumns = this.extractColumns(r, this.pivotColumns, function(o, i) {
          return o.setPivotActive(i, e);
        }, function(o) {
          return o.pivotIndex;
        }, function(o) {
          return o.initialPivotIndex;
        }, function(o) {
          return o.pivot;
        }, function(o) {
          return o.initialPivot;
        });
      }, t.prototype.resetColumnGroupState = function(e) {
        e === void 0 && (e = "api");
        var r = [];
        this.columnUtils.depthFirstOriginalTreeSearch(null, this.primaryColumnTree, function(o) {
          if (o instanceof _e) {
            var i = o.getColGroupDef(), s = {
              groupId: o.getGroupId(),
              open: i ? i.openByDefault : void 0
            };
            r.push(s);
          }
        }), this.setColumnGroupState(r, e);
      }, t.prototype.getColumnGroupState = function() {
        var e = [];
        return this.columnUtils.depthFirstOriginalTreeSearch(null, this.gridBalancedTree, function(r) {
          r instanceof _e && e.push({
            groupId: r.getGroupId(),
            open: r.isExpanded()
          });
        }), e;
      }, t.prototype.setColumnGroupState = function(e, r) {
        var o = this;
        r === void 0 && (r = "api"), this.columnAnimationService.start();
        var i = [];
        e.forEach(function(s) {
          var a = s.groupId, l = s.open, u = o.getProvidedColumnGroup(a);
          u && u.isExpanded() !== l && (o.logger.log("columnGroupOpened(" + u.getGroupId() + "," + l + ")"), u.setExpanded(l), i.push(u));
        }), this.updateGroupsAndDisplayedColumns(r), this.setFirstRightAndLastLeftPinned(r), i.forEach(function(s) {
          var a = {
            type: m.EVENT_COLUMN_GROUP_OPENED,
            columnGroup: s,
            api: o.gridApi,
            columnApi: o.columnApi
          };
          o.eventService.dispatchEvent(a);
        }), this.columnAnimationService.finish();
      }, t.prototype.setColumnGroupOpened = function(e, r, o) {
        o === void 0 && (o = "api");
        var i;
        e instanceof _e ? i = e.getId() : i = e || "", this.setColumnGroupState([{ groupId: i, open: r }], o);
      }, t.prototype.getProvidedColumnGroup = function(e) {
        typeof e != "string" && console.error("AG Grid: group key must be a string");
        var r = null;
        return this.columnUtils.depthFirstOriginalTreeSearch(null, this.gridBalancedTree, function(o) {
          o instanceof _e && o.getId() === e && (r = o);
        }), r;
      }, t.prototype.calculateColumnsForDisplay = function() {
        var e = this, r;
        return this.pivotMode && C(this.secondaryColumns) ? r = this.gridColumns.filter(function(o) {
          var i = e.groupAutoColumns && Le(e.groupAutoColumns, o), s = e.valueColumns && Le(e.valueColumns, o);
          return i || s;
        }) : r = this.gridColumns.filter(function(o) {
          var i = e.groupAutoColumns && Le(e.groupAutoColumns, o);
          return i || o.isVisible();
        }), r;
      }, t.prototype.checkColSpanActiveInCols = function(e) {
        var r = !1;
        return e.forEach(function(o) {
          g(o.getColDef().colSpan) && (r = !0);
        }), r;
      }, t.prototype.calculateColumnsForGroupDisplay = function() {
        var e = this;
        this.groupDisplayColumns = [];
        var r = function(o) {
          var i = o.getColDef();
          i && g(i.showRowGroup) && e.groupDisplayColumns.push(o);
        };
        this.gridColumns.forEach(r), this.groupAutoColumns && this.groupAutoColumns.forEach(r);
      }, t.prototype.getGroupDisplayColumns = function() {
        return this.groupDisplayColumns;
      }, t.prototype.updateDisplayedColumns = function(e) {
        var r = this.calculateColumnsForDisplay();
        this.buildDisplayedTrees(r), this.calculateColumnsForGroupDisplay(), this.updateGroupsAndDisplayedColumns(e), this.setFirstRightAndLastLeftPinned(e);
      }, t.prototype.isSecondaryColumnsPresent = function() {
        return g(this.secondaryColumns);
      }, t.prototype.setSecondaryColumns = function(e, r) {
        var o = this;
        r === void 0 && (r = "api");
        var i = e && e.length > 0;
        if (!(!i && C(this.secondaryColumns))) {
          if (i) {
            this.processSecondaryColumnDefinitions(e);
            var s = this.columnFactory.createColumnTree(e, !1, this.secondaryBalancedTree || this.previousSecondaryColumns || void 0);
            this.secondaryBalancedTree = s.columnTree, this.secondaryHeaderRowCount = s.treeDept + 1, this.secondaryColumns = this.getColumnsFromTree(this.secondaryBalancedTree), this.secondaryColumnsMap = {}, this.secondaryColumns.forEach(function(a) {
              return o.secondaryColumnsMap[a.getId()] = a;
            }), this.previousSecondaryColumns = null;
          } else
            this.previousSecondaryColumns = this.secondaryBalancedTree, this.secondaryBalancedTree = null, this.secondaryHeaderRowCount = -1, this.secondaryColumns = null, this.secondaryColumnsMap = {};
          this.updateGridColumns(), this.updateDisplayedColumns(r);
        }
      }, t.prototype.processSecondaryColumnDefinitions = function(e) {
        var r = this.gridOptionsWrapper.getProcessSecondaryColDefFunc(), o = this.gridOptionsWrapper.getProcessSecondaryColGroupDefFunc();
        if (!(!r && !o)) {
          var i = function(s) {
            s.forEach(function(a) {
              var l = g(a.children);
              if (l) {
                var u = a;
                o && o(u), i(u.children);
              } else {
                var p = a;
                r && r(p);
              }
            });
          };
          e && i(e);
        }
      }, t.prototype.updateGridColumns = function() {
        var e = this;
        if (this.gridColsArePrimary ? this.lastPrimaryOrder = this.gridColumns : this.lastSecondaryOrder = this.gridColumns, this.secondaryColumns && this.secondaryBalancedTree) {
          var r = this.secondaryColumns.every(function(i) {
            return e.gridColumnsMap[i.getColId()] !== void 0;
          });
          this.gridBalancedTree = this.secondaryBalancedTree.slice(), this.gridHeaderRowCount = this.secondaryHeaderRowCount, this.gridColumns = this.secondaryColumns.slice(), this.gridColsArePrimary = !1, r && this.orderGridColsLike(this.lastSecondaryOrder);
        } else this.primaryColumns && (this.gridBalancedTree = this.primaryColumnTree.slice(), this.gridHeaderRowCount = this.primaryHeaderRowCount, this.gridColumns = this.primaryColumns.slice(), this.gridColsArePrimary = !0, this.orderGridColsLike(this.lastPrimaryOrder));
        this.addAutoGroupToGridColumns(), this.gridColumns = this.placeLockedColumns(this.gridColumns), this.setupQuickFilterColumns(), this.clearDisplayedAndViewportColumns(), this.colSpanActive = this.checkColSpanActiveInCols(this.gridColumns), this.gridColumnsMap = {}, this.gridColumns.forEach(function(i) {
          return e.gridColumnsMap[i.getId()] = i;
        }), this.setAutoHeightActive();
        var o = {
          type: m.EVENT_GRID_COLUMNS_CHANGED,
          api: this.gridApi,
          columnApi: this.columnApi
        };
        this.eventService.dispatchEvent(o);
      }, t.prototype.setAutoHeightActive = function() {
        if (this.autoHeightActive = this.gridColumns.filter(function(i) {
          return i.isAutoHeight();
        }).length > 0, this.autoHeightActive) {
          this.autoHeightActiveAtLeastOnce = !0;
          var e = this.rowModel.getType(), r = e === E.ROW_MODEL_TYPE_CLIENT_SIDE || e === E.ROW_MODEL_TYPE_SERVER_SIDE;
          if (!r) {
            var o = "AG Grid - autoHeight columns only work with Client Side Row Model and Server Side Row Model.";
            me(function() {
              return console.warn(o);
            }, "autoHeightActive.wrongRowModel");
          }
        }
      }, t.prototype.orderGridColsLike = function(e) {
        if (!C(e)) {
          var r = qt(e.map(function(p, d) {
            return [p, d];
          })), o = !0;
          if (this.gridColumns.forEach(function(p) {
            r.has(p) && (o = !1);
          }), !o) {
            var i = qt(this.gridColumns.map(function(p) {
              return [p, !0];
            })), s = e.filter(function(p) {
              return i.has(p);
            }), a = qt(s.map(function(p) {
              return [p, !0];
            })), l = this.gridColumns.filter(function(p) {
              return !a.has(p);
            }), u = s.slice();
            l.forEach(function(p) {
              var d = p.getOriginalParent();
              if (!d) {
                u.push(p);
                return;
              }
              for (var f = []; !f.length && d; ) {
                var v = d.getLeafColumns();
                v.forEach(function(_) {
                  var D = u.indexOf(_) >= 0, P = f.indexOf(_) < 0;
                  D && P && f.push(_);
                }), d = d.getOriginalParent();
              }
              if (!f.length) {
                u.push(p);
                return;
              }
              var y = f.map(function(_) {
                return u.indexOf(_);
              }), R = Math.max.apply(Math, Eo(y));
              Kt(u, p, R + 1);
            }), this.gridColumns = u;
          }
        }
      }, t.prototype.isPrimaryColumnGroupsPresent = function() {
        return this.primaryHeaderRowCount > 1;
      }, t.prototype.setupQuickFilterColumns = function() {
        this.groupAutoColumns ? this.columnsForQuickFilter = (this.primaryColumns || []).concat(this.groupAutoColumns) : this.primaryColumns && (this.columnsForQuickFilter = this.primaryColumns);
      }, t.prototype.placeLockedColumns = function(e) {
        var r = [], o = [], i = [];
        return e.forEach(function(s) {
          var a = s.getColDef().lockPosition;
          a === "right" ? i.push(s) : a === "left" || a === !0 ? r.push(s) : o.push(s);
        }), Eo(r, o, i);
      }, t.prototype.addAutoGroupToGridColumns = function() {
        if (this.createGroupAutoColumnsIfNeeded(), !C(this.groupAutoColumns)) {
          this.gridColumns = this.groupAutoColumns ? this.groupAutoColumns.concat(this.gridColumns) : this.gridColumns;
          var e = this.columnFactory.createForAutoGroups(this.groupAutoColumns, this.gridBalancedTree);
          this.gridBalancedTree = e.concat(this.gridBalancedTree);
        }
      }, t.prototype.clearDisplayedAndViewportColumns = function() {
        this.displayedTreeLeft = [], this.displayedTreeRight = [], this.displayedTreeCentre = [], this.viewportRowLeft = {}, this.viewportRowRight = {}, this.viewportRowCenter = {}, this.displayedColumnsLeft = [], this.displayedColumnsRight = [], this.displayedColumnsCenter = [], this.displayedColumns = [], this.viewportColumns = [];
      }, t.prototype.updateGroupsAndDisplayedColumns = function(e) {
        this.updateOpenClosedVisibilityInColumnGroups(), this.deriveDisplayedColumns(e), this.refreshFlexedColumns(), this.extractViewport(), this.updateBodyWidths();
        var r = {
          type: m.EVENT_DISPLAYED_COLUMNS_CHANGED,
          api: this.gridApi,
          columnApi: this.columnApi
        };
        this.eventService.dispatchEvent(r);
      }, t.prototype.deriveDisplayedColumns = function(e) {
        this.derivedDisplayedColumnsFromDisplayedTree(this.displayedTreeLeft, this.displayedColumnsLeft), this.derivedDisplayedColumnsFromDisplayedTree(this.displayedTreeCentre, this.displayedColumnsCenter), this.derivedDisplayedColumnsFromDisplayedTree(this.displayedTreeRight, this.displayedColumnsRight), this.joinDisplayedColumns(), this.setLeftValues(e), this.displayedAutoHeightCols = this.displayedColumns.filter(function(r) {
          return r.isAutoHeight();
        });
      }, t.prototype.isAutoRowHeightActive = function() {
        return this.autoHeightActive;
      }, t.prototype.wasAutoRowHeightEverActive = function() {
        return this.autoHeightActiveAtLeastOnce;
      }, t.prototype.joinDisplayedColumns = function() {
        this.gridOptionsWrapper.isEnableRtl() ? this.displayedColumns = this.displayedColumnsRight.concat(this.displayedColumnsCenter).concat(this.displayedColumnsLeft) : this.displayedColumns = this.displayedColumnsLeft.concat(this.displayedColumnsCenter).concat(this.displayedColumnsRight);
      }, t.prototype.setLeftValues = function(e) {
        this.setLeftValuesOfColumns(e), this.setLeftValuesOfGroups();
      }, t.prototype.setLeftValuesOfColumns = function(e) {
        var r = this;
        if (this.primaryColumns) {
          var o = this.primaryColumns.slice(0), i = this.gridOptionsWrapper.isEnableRtl();
          [
            this.displayedColumnsLeft,
            this.displayedColumnsRight,
            this.displayedColumnsCenter
          ].forEach(function(s) {
            if (i) {
              var a = r.getWidthOfColsInList(s);
              s.forEach(function(u) {
                a -= u.getActualWidth(), u.setLeft(a, e);
              });
            } else {
              var l = 0;
              s.forEach(function(u) {
                u.setLeft(l, e), l += u.getActualWidth();
              });
            }
            Wt(o, s);
          }), o.forEach(function(s) {
            s.setLeft(null, e);
          });
        }
      }, t.prototype.setLeftValuesOfGroups = function() {
        [
          this.displayedTreeLeft,
          this.displayedTreeRight,
          this.displayedTreeCentre
        ].forEach(function(e) {
          e.forEach(function(r) {
            if (r instanceof We) {
              var o = r;
              o.checkLeft();
            }
          });
        });
      }, t.prototype.derivedDisplayedColumnsFromDisplayedTree = function(e, r) {
        r.length = 0, this.columnUtils.depthFirstDisplayedColumnTreeSearch(e, function(o) {
          o instanceof A && r.push(o);
        });
      }, t.prototype.extractViewportColumns = function() {
        this.suppressColumnVirtualisation ? this.viewportColumnsCenter = this.displayedColumnsCenter : this.viewportColumnsCenter = this.filterOutColumnsWithinViewport(), this.viewportColumns = this.viewportColumnsCenter.concat(this.displayedColumnsLeft).concat(this.displayedColumnsRight);
      }, t.prototype.getVirtualHeaderGroupRow = function(e, r) {
        var o;
        switch (e) {
          case E.PINNED_LEFT:
            o = this.viewportRowLeft[r];
            break;
          case E.PINNED_RIGHT:
            o = this.viewportRowRight[r];
            break;
          default:
            o = this.viewportRowCenter[r];
            break;
        }
        return C(o) && (o = []), o;
      }, t.prototype.extractViewportRows = function() {
        this.viewportRowLeft = {}, this.viewportRowRight = {}, this.viewportRowCenter = {};
        var e = {};
        this.viewportColumns.forEach(function(o) {
          return e[o.getId()] = !0;
        });
        var r = function(o, i, s) {
          for (var a = !1, l = 0; l < o.length; l++) {
            var u = o[l], p = !1;
            if (u instanceof A)
              p = e[u.getId()] === !0;
            else {
              var d = u, f = d.getDisplayedChildren();
              f && (p = r(f, i, s + 1));
            }
            p && (a = !0, i[s] || (i[s] = []), i[s].push(u));
          }
          return a;
        };
        r(this.displayedTreeLeft, this.viewportRowLeft, 0), r(this.displayedTreeRight, this.viewportRowRight, 0), r(this.displayedTreeCentre, this.viewportRowCenter, 0);
      }, t.prototype.extractViewport = function() {
        this.extractViewportColumns(), this.extractViewportRows();
      }, t.prototype.filterOutColumnsWithinViewport = function() {
        return this.displayedColumnsCenter.filter(this.isColumnInViewport.bind(this));
      }, t.prototype.refreshFlexedColumns = function(e) {
        var r = this;
        e === void 0 && (e = {});
        var o = e.source ? e.source : "flex";
        if (e.viewportWidth != null && (this.flexViewportWidth = e.viewportWidth), !this.flexViewportWidth)
          return [];
        var i = -1;
        e.resizingCols && e.resizingCols.forEach(function(U) {
          var X = r.displayedColumnsCenter.indexOf(U);
          i < X && (i = X);
        });
        var s = function(U) {
          var X = r.displayedColumnsCenter.indexOf(U) > i;
          return U.getFlex() && X;
        }, a = this.displayedColumnsCenter.filter(function(U) {
          return !s(U);
        }), l = this.displayedColumnsCenter.filter(function(U) {
          return s(U);
        }), u = [];
        if (!l.length)
          return [];
        var p = [], d;
        e: for (; ; ) {
          var f = l.reduce(function(U, X) {
            return U + X.getFlex();
          }, 0);
          d = this.flexViewportWidth - this.getWidthOfColsInList(a);
          for (var v = 0; v < l.length; v++) {
            var y = l[v], R = d * y.getFlex() / f, _ = 0, D = y.getMinWidth(), P = y.getMaxWidth();
            if (g(D) && R < D ? _ = D : g(P) && R > P && (_ = P), _) {
              y.setActualWidth(_, o), Ce(l, y), u.push(y), a.push(y);
              continue e;
            }
            p[v] = Math.round(R);
          }
          break;
        }
        var F = d;
        return l.forEach(function(U, X) {
          U.setActualWidth(Math.min(p[X], F), o), u.push(U), F -= p[X];
        }), e.skipSetLeft || this.setLeftValues(o), e.updateBodyWidths && this.updateBodyWidths(), e.fireResizedEvent && this.fireColumnResizedEvent(u, !0, o, l), this.flexColsCalculatedAtLestOnce || (this.gridOptionsWrapper.isRowModelDefault() && this.rowModel.resetRowHeights(), this.flexColsCalculatedAtLestOnce = !0), l;
      }, t.prototype.sizeColumnsToFit = function(e, r, o) {
        r === void 0 && (r = "sizeColumnsToFit");
        var i = this.getAllDisplayedColumns();
        if (!(e <= 0 || !i.length)) {
          var s = [], a = [];
          i.forEach(function(F) {
            F.getColDef().suppressSizeToFit === !0 ? a.push(F) : s.push(F);
          });
          var l = s.slice(0), u = !1, p = function(F) {
            Ce(s, F), a.push(F);
          };
          for (s.forEach(function(F) {
            return F.resetActualWidth(r);
          }); !u; ) {
            u = !0;
            var d = e - this.getWidthOfColsInList(a);
            if (d <= 0)
              s.forEach(function(F) {
                F.setMinimum(r);
              });
            else
              for (var f = d / this.getWidthOfColsInList(s), v = d, y = s.length - 1; y >= 0; y--) {
                var R = s[y], _ = R.getMinWidth(), D = R.getMaxWidth(), P = Math.round(R.getActualWidth() * f);
                g(_) && P < _ ? (P = _, p(R), u = !1) : g(D) && R.isGreaterThanMax(P) ? (P = D, p(R), u = !1) : y === 0 && (P = v), R.setActualWidth(P, r, !0), v -= P;
              }
          }
          l.forEach(function(F) {
            F.fireColumnWidthChangedEvent(r);
          }), this.setLeftValues(r), this.updateBodyWidths(), !o && this.fireColumnResizedEvent(l, !0, r);
        }
      }, t.prototype.buildDisplayedTrees = function(e) {
        var r = [], o = [], i = [];
        e.forEach(function(a) {
          switch (a.getPinned()) {
            case "left":
              r.push(a);
              break;
            case "right":
              o.push(a);
              break;
            default:
              i.push(a);
              break;
          }
        });
        var s = new Pn();
        this.displayedTreeLeft = this.displayedGroupCreator.createDisplayedGroups(r, this.gridBalancedTree, s, E.PINNED_LEFT, this.displayedTreeLeft), this.displayedTreeRight = this.displayedGroupCreator.createDisplayedGroups(o, this.gridBalancedTree, s, E.PINNED_RIGHT, this.displayedTreeRight), this.displayedTreeCentre = this.displayedGroupCreator.createDisplayedGroups(i, this.gridBalancedTree, s, null, this.displayedTreeCentre), this.updateDisplayedMap();
      }, t.prototype.updateDisplayedMap = function() {
        var e = this;
        this.displayedColumnsAndGroupsMap = {};
        var r = function(o) {
          e.displayedColumnsAndGroupsMap[o.getUniqueId()] = o;
        };
        this.columnUtils.depthFirstAllColumnTreeSearch(this.displayedTreeCentre, r), this.columnUtils.depthFirstAllColumnTreeSearch(this.displayedTreeLeft, r), this.columnUtils.depthFirstAllColumnTreeSearch(this.displayedTreeRight, r);
      }, t.prototype.isDisplayed = function(e) {
        var r = this.displayedColumnsAndGroupsMap[e.getUniqueId()];
        return r === e;
      }, t.prototype.updateOpenClosedVisibilityInColumnGroups = function() {
        var e = this.getAllDisplayedTrees();
        this.columnUtils.depthFirstAllColumnTreeSearch(e, function(r) {
          if (r instanceof We) {
            var o = r;
            o.calculateDisplayedColumns();
          }
        });
      }, t.prototype.getGroupAutoColumns = function() {
        return this.groupAutoColumns;
      }, t.prototype.createGroupAutoColumnsIfNeeded = function() {
        if (this.autoGroupsNeedBuilding) {
          this.autoGroupsNeedBuilding = !1;
          var e = this.gridOptionsWrapper.isGroupUseEntireRow(this.pivotMode), r = this.pivotMode ? this.gridOptionsWrapper.isPivotSuppressAutoColumn() : this.gridOptionsWrapper.isGroupSuppressAutoColumn(), o = this.rowGroupColumns.length > 0 || this.usingTreeData, i = o && !r && !e;
          if (i) {
            var s = this.groupAutoColumns || [], a = this.autoGroupColService.createAutoGroupColumns(s, this.rowGroupColumns), l = !this.autoColsEqual(a, this.groupAutoColumns);
            (l || this.forceRecreateAutoGroups) && (this.groupAutoColumns = a);
          } else
            this.groupAutoColumns = null;
        }
      }, t.prototype.autoColsEqual = function(e, r) {
        return k(e, r, function(o, i) {
          return o.getColId() === i.getColId();
        });
      }, t.prototype.getWidthOfColsInList = function(e) {
        return e.reduce(function(r, o) {
          return r + o.getActualWidth();
        }, 0);
      }, t.prototype.getGridBalancedTree = function() {
        return this.gridBalancedTree;
      }, t.prototype.hasFloatingFilters = function() {
        if (!this.gridColumns)
          return !1;
        var e = this.gridColumns.some(function(r) {
          return r.getColDef().floatingFilter;
        });
        return e;
      }, t.prototype.getFirstDisplayedColumn = function() {
        var e = this.gridOptionsWrapper.isEnableRtl(), r = [
          "getDisplayedLeftColumns",
          "getDisplayedCenterColumns",
          "getDisplayedRightColumns"
        ];
        e && r.reverse();
        for (var o = 0; o < r.length; o++) {
          var i = this[r[o]]();
          if (i.length)
            return e ? M(i) : i[0];
        }
        return null;
      }, Me([
        h("expressionService")
      ], t.prototype, "expressionService", void 0), Me([
        h("columnFactory")
      ], t.prototype, "columnFactory", void 0), Me([
        h("displayedGroupCreator")
      ], t.prototype, "displayedGroupCreator", void 0), Me([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), Me([
        h("autoWidthCalculator")
      ], t.prototype, "autoWidthCalculator", void 0), Me([
        h("columnUtils")
      ], t.prototype, "columnUtils", void 0), Me([
        h("columnAnimationService")
      ], t.prototype, "columnAnimationService", void 0), Me([
        h("autoGroupColService")
      ], t.prototype, "autoGroupColService", void 0), Me([
        ve("aggFuncService")
      ], t.prototype, "aggFuncService", void 0), Me([
        ve("valueCache")
      ], t.prototype, "valueCache", void 0), Me([
        ve("animationFrameService")
      ], t.prototype, "animationFrameService", void 0), Me([
        h("rowModel")
      ], t.prototype, "rowModel", void 0), Me([
        h("columnApi")
      ], t.prototype, "columnApi", void 0), Me([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), Me([
        h("sortController")
      ], t.prototype, "sortController", void 0), Me([
        h("columnDefFactory")
      ], t.prototype, "columnDefFactory", void 0), Me([
        B
      ], t.prototype, "init", null), Me([
        Tc(0, Ne("loggerFactory"))
      ], t.prototype, "setBeans", null), t = Me([
        j("columnModel")
      ], t), t;
    }(H)
  );
  var bc = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Fc = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, _a = (
    /** @class */
    function(n) {
      bc(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.calculateColMinWidth = function(e) {
        return e.minWidth != null ? e.minWidth : this.gridOptionsWrapper.getMinColWidth();
      }, t.prototype.calculateColMaxWidth = function(e) {
        return e.maxWidth != null ? e.maxWidth : this.gridOptionsWrapper.getMaxColWidth() || Number.MAX_SAFE_INTEGER;
      }, t.prototype.calculateColInitialWidth = function(e) {
        var r = this.calculateColMinWidth(e), o = this.calculateColMaxWidth(e), i, s = L(e.width), a = L(e.initialWidth);
        return s != null ? i = s : a != null ? i = a : i = this.gridOptionsWrapper.getColWidth(), Math.max(Math.min(i, o), r);
      }, t.prototype.getOriginalPathForColumn = function(e, r) {
        var o = [], i = !1, s = function(a, l) {
          for (var u = 0; u < a.length; u++) {
            if (i)
              return;
            var p = a[u];
            if (p instanceof _e) {
              var d = p;
              s(d.getChildren(), l + 1), o[l] = p;
            } else p === e && (i = !0);
          }
        };
        return s(r, 0), i ? o : null;
      }, t.prototype.depthFirstOriginalTreeSearch = function(e, r, o) {
        var i = this;
        r && r.forEach(function(s) {
          s instanceof _e && i.depthFirstOriginalTreeSearch(s, s.getChildren(), o), o(s, e);
        });
      }, t.prototype.depthFirstAllColumnTreeSearch = function(e, r) {
        var o = this;
        e && e.forEach(function(i) {
          i instanceof We && o.depthFirstAllColumnTreeSearch(i.getChildren(), r), r(i);
        });
      }, t.prototype.depthFirstDisplayedColumnTreeSearch = function(e, r) {
        var o = this;
        e && e.forEach(function(i) {
          i instanceof We && o.depthFirstDisplayedColumnTreeSearch(i.getDisplayedChildren(), r), r(i);
        });
      }, t = Fc([
        j("columnUtils")
      ], t), t;
    }(H)
  );
  var Lc = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Mc = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Oa = (
    /** @class */
    function(n) {
      Lc(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.createDisplayedGroups = function(e, r, o, i, s) {
        var a = this, l = [], u, p, d = this.mapOldGroupsById(s);
        return e.forEach(function(f) {
          for (var v = a.getOriginalPathForColumn(r, f), y = [], R = !p, _ = 0; _ < v.length; _++)
            if (R || v[_] !== p[_]) {
              var D = a.createColumnGroup(v[_], o, d, i);
              y[_] = D, _ == 0 ? l.push(D) : y[_ - 1].addChild(D);
            } else
              y[_] = u[_];
          var P = y.length === 0;
          if (P)
            l.push(f);
          else {
            var F = M(y);
            F.addChild(f);
          }
          u = y, p = v;
        }), this.setupParentsIntoColumns(l, null), l;
      }, t.prototype.createColumnGroup = function(e, r, o, i) {
        var s = e.getGroupId(), a = r.getInstanceIdForKey(s), l = We.createUniqueId(s, a), u = o[l];
        return u && u.getProvidedColumnGroup() !== e && (u = null), g(u) ? u.reset() : (u = new We(e, s, a, i), this.context.createBean(u)), u;
      }, t.prototype.mapOldGroupsById = function(e) {
        var r = {}, o = function(i) {
          i.forEach(function(s) {
            if (s instanceof We) {
              var a = s;
              r[s.getUniqueId()] = a, o(a.getChildren());
            }
          });
        };
        return e && o(e), r;
      }, t.prototype.setupParentsIntoColumns = function(e, r) {
        var o = this;
        e.forEach(function(i) {
          if (i.setParent(r), i instanceof We) {
            var s = i;
            o.setupParentsIntoColumns(s.getChildren(), s);
          }
        });
      }, t.prototype.getOriginalPathForColumn = function(e, r) {
        var o = [], i = !1, s = function(a, l) {
          for (var u = 0; u < a.length; u++) {
            if (i)
              return;
            var p = a[u];
            p instanceof _e ? (s(p.getChildren(), l + 1), o[l] = p) : p === r && (i = !0);
          }
        };
        return s(e, 0), i ? o : (console.warn("AG Grid: could not get path"), null);
      }, t = Mc([
        j("displayedGroupCreator")
      ], t), t;
    }(H)
  );
  var Ic = function(n, t) {
    var e = typeof Symbol == "function" && n[Symbol.iterator];
    if (!e) return n;
    var r = e.call(n), o, i = [], s;
    try {
      for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
    } catch (a) {
      s = { error: a };
    } finally {
      try {
        o && !o.done && (e = r.return) && e.call(r);
      } finally {
        if (s) throw s.error;
      }
    }
    return i;
  }, Nc = function() {
    for (var n = [], t = 0; t < arguments.length; t++) n = n.concat(Ic(arguments[t]));
    return n;
  }, At = (
    /** @class */
    function() {
      function n() {
      }
      return n.STRING_PROPERTIES = [
        "sortingOrder",
        "rowClass",
        "rowSelection",
        "overlayLoadingTemplate",
        "overlayNoRowsTemplate",
        "quickFilterText",
        "rowModelType",
        "editType",
        "domLayout",
        "clipboardDelimiter",
        "rowGroupPanelShow",
        "multiSortKey",
        "pivotColumnGroupTotals",
        "pivotRowTotals",
        "pivotPanelShow",
        "fillHandleDirection",
        "serverSideStoreType",
        "groupDisplayType",
        "treeDataDisplayType"
      ], n.OBJECT_PROPERTIES = [
        "components",
        "frameworkComponents",
        "rowStyle",
        "context",
        "autoGroupColumnDef",
        "localeText",
        "icons",
        "datasource",
        "serverSideDatasource",
        "viewportDatasource",
        "groupRowRendererParams",
        "aggFuncs",
        "fullWidthCellRendererParams",
        "defaultColGroupDef",
        "defaultColDef",
        "defaultExportParams",
        "defaultCsvExportParams",
        "defaultExcelExportParams",
        "columnTypes",
        "rowClassRules",
        "detailCellRendererParams",
        "loadingCellRendererParams",
        "loadingOverlayComponentParams",
        "noRowsOverlayComponentParams",
        "popupParent",
        "colResizeDefault",
        "statusBar",
        "sideBar",
        "chartThemeOverrides",
        "customChartThemes"
      ], n.ARRAY_PROPERTIES = [
        "alignedGrids",
        "rowData",
        "columnDefs",
        "excelStyles",
        "pinnedTopRowData",
        "pinnedBottomRowData",
        "chartThemes"
      ], n.NUMBER_PROPERTIES = [
        "rowHeight",
        "detailRowHeight",
        "rowBuffer",
        "colWidth",
        "headerHeight",
        "groupHeaderHeight",
        "floatingFiltersHeight",
        "pivotHeaderHeight",
        "pivotGroupHeaderHeight",
        "groupDefaultExpanded",
        "minColWidth",
        "maxColWidth",
        "viewportRowModelPageSize",
        "viewportRowModelBufferSize",
        "autoSizePadding",
        "maxBlocksInCache",
        "maxConcurrentDatasourceRequests",
        "tooltipShowDelay",
        "tooltipHideDelay",
        "cacheOverflowSize",
        "paginationPageSize",
        "cacheBlockSize",
        "infiniteInitialRowCount",
        "scrollbarWidth",
        "batchUpdateWaitMillis",
        "asyncTransactionWaitMillis",
        "blockLoadDebounceMillis",
        "keepDetailRowsCount",
        "undoRedoCellEditingLimit",
        "cellFlashDelay",
        "cellFadeDelay",
        "tabIndex"
      ], n.BOOLEAN_PROPERTIES = [
        "suppressMakeColumnVisibleAfterUnGroup",
        "suppressRowClickSelection",
        "suppressCellSelection",
        "suppressCellFocus",
        "suppressHorizontalScroll",
        "alwaysShowHorizontalScroll",
        "alwaysShowVerticalScroll",
        "debug",
        "enableBrowserTooltips",
        "enableCellExpressions",
        "angularCompileRows",
        "angularCompileFilters",
        "groupSuppressAutoColumn",
        "groupSelectsChildren",
        "groupIncludeFooter",
        "groupIncludeTotalFooter",
        "groupUseEntireRow",
        "groupSuppressBlankHeader",
        "suppressMenuHide",
        "suppressRowDeselection",
        "unSortIcon",
        "suppressMultiSort",
        "alwaysMultiSort",
        "singleClickEdit",
        "suppressLoadingOverlay",
        "suppressNoRowsOverlay",
        "suppressAutoSize",
        "skipHeaderOnAutoSize",
        "suppressParentsInRowNodes",
        "suppressColumnMoveAnimation",
        "suppressMovableColumns",
        "suppressFieldDotNotation",
        "enableRangeSelection",
        "enableRangeHandle",
        "enableFillHandle",
        "suppressClearOnFillReduction",
        "deltaSort",
        "suppressTouch",
        "suppressAsyncEvents",
        "allowContextMenuWithControlKey",
        "suppressContextMenu",
        "rememberGroupStateWhenNewData",
        "enableCellChangeFlash",
        "suppressDragLeaveHidesColumns",
        "suppressMiddleClickScrolls",
        "suppressPreventDefaultOnMouseWheel",
        "suppressCopyRowsToClipboard",
        "copyHeadersToClipboard",
        "copyGroupHeadersToClipboard",
        "pivotMode",
        "suppressAggFuncInHeader",
        "suppressColumnVirtualisation",
        "suppressAggAtRootLevel",
        "suppressFocusAfterRefresh",
        "functionsPassive",
        "functionsReadOnly",
        "animateRows",
        "groupSelectsFiltered",
        "groupRemoveSingleChildren",
        "groupRemoveLowestSingleChildren",
        "enableRtl",
        "suppressClickEdit",
        "rowDragEntireRow",
        "rowDragManaged",
        "suppressRowDrag",
        "suppressMoveWhenRowDragging",
        "rowDragMultiRow",
        "enableGroupEdit",
        "embedFullWidthRows",
        "deprecatedEmbedFullWidthRows",
        "suppressPaginationPanel",
        "groupHideOpenParents",
        "groupMultiAutoColumn",
        "pagination",
        "stopEditingWhenGridLosesFocus",
        "paginationAutoPageSize",
        "suppressScrollOnNewData",
        "suppressScrollWhenPopupsAreOpen",
        "purgeClosedRowNodes",
        "cacheQuickFilter",
        "deltaRowDataMode",
        "ensureDomOrder",
        "accentedSort",
        "suppressChangeDetection",
        "valueCache",
        "valueCacheNeverExpires",
        "aggregateOnlyChangedColumns",
        "suppressAnimationFrame",
        "suppressExcelExport",
        "suppressCsvExport",
        "treeData",
        "masterDetail",
        "suppressMultiRangeSelection",
        "enterMovesDownAfterEdit",
        "enterMovesDown",
        "suppressPropertyNamesCheck",
        "rowMultiSelectWithClick",
        "suppressEnterpriseResetOnNewColumns",
        "suppressRowHoverHighlight",
        "suppressRowTransform",
        "suppressClipboardPaste",
        "suppressLastEmptyLineOnPaste",
        "serverSideSortingAlwaysResets",
        "suppressSetColumnStateEvents",
        "suppressColumnStateEvents",
        "enableCharts",
        "deltaColumnMode",
        "suppressMaintainUnsortedOrder",
        "enableCellTextSelection",
        "suppressBrowserResizeObserver",
        "suppressMaxRenderedRowRestriction",
        "excludeChildrenWhenTreeDataFiltering",
        "tooltipMouseTrack",
        "keepDetailRows",
        "paginateChildRows",
        "preventDefaultOnContextMenu",
        "undoRedoCellEditing",
        "allowDragFromColumnsToolPanel",
        "immutableData",
        "immutableColumns",
        "pivotSuppressAutoColumn",
        "suppressExpandablePivotGroups",
        "applyColumnDefOrder",
        "debounceVerticalScrollbar",
        "detailRowAutoHeight",
        "serverSideFilteringAlwaysResets",
        "suppressAggFilteredOnly",
        "showOpenedGroup",
        "suppressClipboardApi",
        "suppressModelUpdateAfterUpdateTransaction",
        "stopEditingWhenCellsLoseFocus",
        "maintainColumnOrder",
        "groupMaintainOrder",
        "columnHoverHighlight",
        "reactUi",
        "suppressReactUi",
        "readOnlyEdit",
        "suppressRowVirtualisation",
        "resetRowDataOnUpdate",
        "removePivotHeaderRowWhenSingleValueColumn",
        "suppressCopySingleCellRanges"
      ], n.FUNCTION_PROPERTIES = [
        "localeTextFunc",
        "getLocaleText",
        "groupRowInnerRenderer",
        "groupRowInnerRendererFramework",
        "groupRowRenderer",
        "groupRowRendererFramework",
        "isExternalFilterPresent",
        "getRowHeight",
        "doesExternalFilterPass",
        "getRowClass",
        "getRowStyle",
        "getContextMenuItems",
        "getMainMenuItems",
        "processRowPostCreate",
        "processCellForClipboard",
        "groupRowAggNodes",
        "getGroupRowAgg",
        "getRowNodeId",
        "isFullWidthCell",
        "isFullWidthRow",
        "fullWidthCellRenderer",
        "fullWidthCellRendererFramework",
        "processSecondaryColDef",
        "processSecondaryColGroupDef",
        "getBusinessKeyForNode",
        "sendToClipboard",
        "navigateToNextHeader",
        "tabToNextHeader",
        "navigateToNextCell",
        "tabToNextCell",
        "processCellFromClipboard",
        "getDocument",
        "postProcessPopup",
        "getChildCount",
        "getDataPath",
        "loadingCellRenderer",
        "loadingCellRendererFramework",
        "loadingOverlayComponent",
        "loadingOverlayComponentFramework",
        "noRowsOverlayComponent",
        "noRowsOverlayComponentFramework",
        "detailCellRenderer",
        "detailCellRendererFramework",
        "isRowMaster",
        "isRowSelectable",
        "postSort",
        "postSortRows",
        "processHeaderForClipboard",
        "processGroupHeaderForClipboard",
        "paginationNumberFormatter",
        "processDataFromClipboard",
        "getServerSideGroupKey",
        "isServerSideGroup",
        "suppressKeyboardEvent",
        "createChartContainer",
        "getChartToolbarItems",
        "fillOperation",
        "isApplyServerSideTransaction",
        "getServerSideStoreParams",
        "isServerSideGroupOpenByDefault",
        "isGroupOpenByDefault",
        "defaultGroupSortComparator",
        "defaultGroupOrderComparator",
        "initialGroupOrderComparator",
        "loadingCellRendererSelector",
        "getRowId",
        "groupAggFiltering"
      ], n.ALL_PROPERTIES = Nc(n.ARRAY_PROPERTIES, n.OBJECT_PROPERTIES, n.STRING_PROPERTIES, n.NUMBER_PROPERTIES, n.FUNCTION_PROPERTIES, n.BOOLEAN_PROPERTIES), n.FRAMEWORK_PROPERTIES = [
        "__ob__",
        "__v_skip",
        "__metadata__",
        "mappedColumnProperties",
        "hasChildColumns",
        "toColDef",
        "createColDefFromGridColumn"
      ], n;
    }()
  );
  var bn = function() {
    return bn = Object.assign || function(n) {
      for (var t, e = 1, r = arguments.length; e < r; e++) {
        t = arguments[e];
        for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
      }
      return n;
    }, bn.apply(this, arguments);
  }, xc = function(n, t) {
    var e = typeof Symbol == "function" && n[Symbol.iterator];
    if (!e) return n;
    var r = e.call(n), o, i = [], s;
    try {
      for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
    } catch (a) {
      s = { error: a };
    } finally {
      try {
        o && !o.done && (e = r.return) && e.call(r);
      } finally {
        if (s) throw s.error;
      }
    }
    return i;
  }, Aa = function() {
    for (var n = [], t = 0; t < arguments.length; t++) n = n.concat(xc(arguments[t]));
    return n;
  }, Xt = (
    /** @class */
    function() {
      function n() {
      }
      return n.getEventCallbacks = function() {
        return n.EVENT_CALLBACKS || (n.EVENT_CALLBACKS = n.EVENTS.map(function(t) {
          return n.getCallbackForEvent(t);
        })), n.EVENT_CALLBACKS;
      }, n.copyAttributesToGridOptions = function(t, e, r) {
        typeof t != "object" && (t = {});
        var o = t, i = function(s) {
          return typeof e[s] < "u";
        };
        return i("groupAggFiltering") && typeof e.groupAggFiltering != "function" && (o.groupAggFiltering = n.toBoolean(e.groupAggFiltering), delete e.groupAggFiltering), Aa(n.ARRAY_PROPERTIES, n.STRING_PROPERTIES, n.OBJECT_PROPERTIES, n.FUNCTION_PROPERTIES, n.getEventCallbacks()).filter(i).forEach(function(s) {
          return o[s] = e[s];
        }), n.BOOLEAN_PROPERTIES.filter(i).forEach(function(s) {
          return o[s] = n.toBoolean(e[s]);
        }), n.NUMBER_PROPERTIES.filter(i).forEach(function(s) {
          return o[s] = n.toNumber(e[s]);
        }), t;
      }, n.getCallbackForEvent = function(t) {
        return !t || t.length < 2 ? t : "on" + t[0].toUpperCase() + t.substr(1);
      }, n.processOnChange = function(t, e, r, o) {
        if (t) {
          var i = bn({}, t), s = e, a = function(p) {
            return i[p];
          };
          a("groupAggFiltering") && (typeof i.groupAggFiltering == "function" ? s.groupAggFiltering = i.groupAggFiltering : s.groupAggFiltering = n.toBoolean(i.groupAggFiltering), delete i.groupAggFiltering), i.rowClass && (r.setRowClass(i.rowClass.currentValue), delete i.rowClass), Aa(n.ARRAY_PROPERTIES, n.OBJECT_PROPERTIES, n.STRING_PROPERTIES, n.getEventCallbacks()).filter(a).forEach(function(p) {
            return s[p] = i[p].currentValue;
          }), n.BOOLEAN_PROPERTIES.filter(a).forEach(function(p) {
            return s[p] = n.toBoolean(i[p].currentValue);
          }), n.NUMBER_PROPERTIES.filter(a).forEach(function(p) {
            return s[p] = n.toNumber(i[p].currentValue);
          }), i.enableCellTextSelection && (r.setEnableCellTextSelection(n.toBoolean(i.enableCellTextSelection.currentValue)), delete i.enableCellTextSelection), i.quickFilterText && (r.setQuickFilter(i.quickFilterText.currentValue), delete i.quickFilterText), i.autoGroupColumnDef && (r.setAutoGroupColumnDef(i.autoGroupColumnDef.currentValue, "gridOptionsChanged"), delete i.autoGroupColumnDef), i.columnDefs && (r.setColumnDefs(i.columnDefs.currentValue, "gridOptionsChanged"), delete i.columnDefs), i.defaultColDef && (r.setDefaultColDef(i.defaultColDef.currentValue, "gridOptionsChanged"), delete i.defaultColDef), i.paginationPageSize && (r.paginationSetPageSize(n.toNumber(i.paginationPageSize.currentValue)), delete i.paginationPageSize), i.pivotMode && (o.setPivotMode(n.toBoolean(i.pivotMode.currentValue)), delete i.pivotMode), i.groupRemoveSingleChildren && (r.setGroupRemoveSingleChildren(n.toBoolean(i.groupRemoveSingleChildren.currentValue)), delete i.groupRemoveSingleChildren), i.suppressRowDrag && (r.setSuppressRowDrag(n.toBoolean(i.suppressRowDrag.currentValue)), delete i.suppressRowDrag), i.suppressMoveWhenRowDragging && (r.setSuppressMoveWhenRowDragging(n.toBoolean(i.suppressMoveWhenRowDragging.currentValue)), delete i.suppressMoveWhenRowDragging), i.suppressRowClickSelection && (r.setSuppressRowClickSelection(n.toBoolean(i.suppressRowClickSelection.currentValue)), delete i.suppressRowClickSelection), i.suppressClipboardPaste && (r.setSuppressClipboardPaste(n.toBoolean(i.suppressClipboardPaste.currentValue)), delete i.suppressClipboardPaste), i.headerHeight && (r.setHeaderHeight(n.toNumber(i.headerHeight.currentValue)), delete i.headerHeight);
          var l = r;
          Object.keys(i).forEach(function(p) {
            var d = "set" + p.charAt(0).toUpperCase() + p.substring(1);
            l[d] && l[d](t[p].currentValue);
          });
          var u = {
            type: m.EVENT_COMPONENT_STATE_CHANGED,
            api: e.api,
            columnApi: e.columnApi
          };
          ie(t, function(p, d) {
            u[p] = d;
          }), r.dispatchEvent(u);
        }
      }, n.toBoolean = function(t) {
        return typeof t == "boolean" ? t : typeof t == "string" ? t.toUpperCase() === "TRUE" || t == "" : !1;
      }, n.toNumber = function(t) {
        if (typeof t == "number")
          return t;
        if (typeof t == "string")
          return Number(t);
      }, n.EVENTS = [], n.PUBLIC_EVENTS = [], n.EXCLUDED_INTERNAL_EVENTS = [], n.STRING_PROPERTIES = At.STRING_PROPERTIES, n.OBJECT_PROPERTIES = At.OBJECT_PROPERTIES, n.ARRAY_PROPERTIES = At.ARRAY_PROPERTIES, n.NUMBER_PROPERTIES = At.NUMBER_PROPERTIES, n.BOOLEAN_PROPERTIES = At.BOOLEAN_PROPERTIES, n.FUNCTION_PROPERTIES = At.FUNCTION_PROPERTIES, n.ALL_PROPERTIES = At.ALL_PROPERTIES, n;
    }()
  );
  Xt.EVENTS = W(m), Xt.EXCLUDED_INTERNAL_EVENTS = [
    m.EVENT_SCROLLBAR_WIDTH_CHANGED,
    m.EVENT_CHECKBOX_CHANGED,
    m.EVENT_HEIGHT_SCALE_CHANGED,
    m.EVENT_BODY_HEIGHT_CHANGED,
    m.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED,
    m.EVENT_SCROLL_VISIBILITY_CHANGED,
    m.EVENT_COLUMN_HOVER_CHANGED,
    m.EVENT_FLASH_CELLS,
    m.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED,
    m.EVENT_DISPLAYED_ROWS_CHANGED,
    m.EVENT_LEFT_PINNED_WIDTH_CHANGED,
    m.EVENT_RIGHT_PINNED_WIDTH_CHANGED,
    m.EVENT_ROW_CONTAINER_HEIGHT_CHANGED,
    m.EVENT_POPUP_TO_FRONT,
    m.EVENT_KEYBOARD_FOCUS,
    m.EVENT_MOUSE_FOCUS,
    m.EVENT_STORE_UPDATED,
    m.EVENT_COLUMN_PANEL_ITEM_DRAG_START,
    m.EVENT_COLUMN_PANEL_ITEM_DRAG_END,
    m.EVENT_FILL_START,
    m.EVENT_FILL_END,
    m.EVENT_FULL_WIDTH_ROW_FOCUSED
  ], Xt.PUBLIC_EVENTS = Xt.EVENTS.filter(function(n) {
    return !Le(Xt.EXCLUDED_INTERNAL_EVENTS, n);
  });
  var Gc = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Hc = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Pa = (
    /** @class */
    function(n) {
      Gc(t, n);
      function t() {
        var e = n !== null && n.apply(this, arguments) || this;
        return e.componentsMappedByName = {}, e;
      }
      return t.prototype.setupComponents = function(e) {
        var r = this;
        e && e.forEach(function(o) {
          return r.addComponent(o);
        });
      }, t.prototype.addComponent = function(e) {
        var r = e.componentName.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase(), o = r.toUpperCase();
        this.componentsMappedByName[o] = e.componentClass;
      }, t.prototype.getComponentClass = function(e) {
        return this.componentsMappedByName[e];
      }, t = Hc([
        j("agStackComponentsRegistry")
      ], t), t;
    }(H)
  );
  var Vc = function(n, t) {
    var e = typeof Symbol == "function" && n[Symbol.iterator];
    if (!e) return n;
    var r = e.call(n), o, i = [], s;
    try {
      for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
    } catch (a) {
      s = { error: a };
    } finally {
      try {
        o && !o.done && (e = r.return) && e.call(r);
      } finally {
        if (s) throw s.error;
      }
    }
    return i;
  }, Wc = function() {
    for (var n = [], t = 0; t < arguments.length; t++) n = n.concat(Vc(arguments[t]));
    return n;
  }, Fn = (
    /** @class */
    function() {
      function n() {
      }
      return n.STRING_PROPERTIES = [
        "headerName",
        "columnGroupShow",
        "headerClass",
        "toolPanelClass",
        "headerValueGetter",
        "pivotKeys",
        "groupId",
        "colId",
        "sort",
        "initialSort",
        "field",
        "type",
        "tooltipComponent",
        "tooltipField",
        "headerTooltip",
        "cellClass",
        "showRowGroup",
        "filter",
        "initialAggFunc",
        "defaultAggFunc",
        "aggFunc",
        "pinned",
        "initialPinned",
        "chartDataType",
        "cellEditorPopupPosition"
      ], n.OBJECT_PROPERTIES = [
        "headerGroupComponent",
        "headerGroupComponentFramework",
        "headerGroupComponentParams",
        "cellStyle",
        "cellRenderer",
        "cellRendererParams",
        "cellRendererFramework",
        "cellEditor",
        "cellEditorFramework",
        "cellEditorParams",
        "pinnedRowCellRendererFramework",
        "pinnedRowCellRendererParams",
        "filterFramework",
        "filterParams",
        "pivotValueColumn",
        "headerComponent",
        "headerComponentFramework",
        "headerComponentParams",
        "floatingFilterComponent",
        "floatingFilterComponentParams",
        "floatingFilterComponentFramework",
        "floatingFilterFramework",
        "tooltipComponent",
        "tooltipComponentParams",
        "tooltipComponentFramework",
        "refData",
        "columnsMenuParams"
      ], n.ARRAY_PROPERTIES = [
        "children",
        "sortingOrder",
        "allowedAggFuncs",
        "menuTabs",
        "pivotTotalColumnIds",
        "cellClassRules",
        "icons"
      ], n.NUMBER_PROPERTIES = [
        "sortedAt",
        "sortIndex",
        "initialSortIndex",
        "flex",
        "initialFlex",
        "width",
        "initialWidth",
        "minWidth",
        "maxWidth",
        "rowGroupIndex",
        "initialRowGroupIndex",
        "pivotIndex",
        "initialPivotIndex"
      ], n.BOOLEAN_PROPERTIES = [
        "suppressCellFlash",
        "suppressColumnsToolPanel",
        "suppressFiltersToolPanel",
        "openByDefault",
        "marryChildren",
        "hide",
        "initialHide",
        "rowGroup",
        "initialRowGroup",
        "pivot",
        "initialPivot",
        "checkboxSelection",
        "headerCheckboxSelection",
        "headerCheckboxSelectionFilteredOnly",
        "suppressMenu",
        "suppressMovable",
        "lockPosition",
        "lockVisible",
        "lockPinned",
        "unSortIcon",
        "suppressSizeToFit",
        "suppressAutoSize",
        "enableRowGroup",
        "enablePivot",
        "enableValue",
        "editable",
        "suppressPaste",
        "suppressNavigable",
        "enableCellChangeFlash",
        "rowDrag",
        "dndSource",
        "autoHeight",
        "wrapText",
        "sortable",
        "resizable",
        "singleClickEdit",
        "floatingFilter",
        "cellEditorPopup",
        "suppressFillHandle"
      ], n.FUNCTION_PROPERTIES = [
        "dndSourceOnRowDrag",
        "valueGetter",
        "valueSetter",
        "filterValueGetter",
        "keyCreator",
        "pinnedRowCellRenderer",
        "valueFormatter",
        "pinnedRowValueFormatter",
        "valueParser",
        "comparator",
        "equals",
        "pivotComparator",
        "suppressKeyboardEvent",
        "suppressHeaderKeyboardEvent",
        "colSpan",
        "rowSpan",
        "getQuickFilterText",
        "newValueHandler",
        "onCellValueChanged",
        "onCellClicked",
        "onCellDoubleClicked",
        "onCellContextMenu",
        "rowDragText",
        "tooltipValueGetter",
        "tooltipComponent",
        "tooltipComponentFramework",
        "cellRendererSelector",
        "cellEditorSelector"
      ], n.ALL_PROPERTIES = Wc(n.ARRAY_PROPERTIES, n.OBJECT_PROPERTIES, n.STRING_PROPERTIES, n.NUMBER_PROPERTIES, n.FUNCTION_PROPERTIES, n.BOOLEAN_PROPERTIES), n.FRAMEWORK_PROPERTIES = [
        "__ob__",
        "__v_skip",
        "__metadata__",
        "mappedColumnProperties",
        "hasChildColumns",
        "toColDef",
        "createColDefFromGridColumn"
      ], n;
    }()
  );
  var Ta = function(n, t) {
    var e = typeof Symbol == "function" && n[Symbol.iterator];
    if (!e) return n;
    var r = e.call(n), o, i = [], s;
    try {
      for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
    } catch (a) {
      s = { error: a };
    } finally {
      try {
        o && !o.done && (e = r.return) && e.call(r);
      } finally {
        if (s) throw s.error;
      }
    }
    return i;
  }, Gr = (
    /** @class */
    function() {
      function n(t, e, r, o) {
        o === void 0 && (o = 1), this.r = Math.min(1, Math.max(0, t || 0)), this.g = Math.min(1, Math.max(0, e || 0)), this.b = Math.min(1, Math.max(0, r || 0)), this.a = Math.min(1, Math.max(0, o || 0));
      }
      return n.fromString = function(t) {
        if (t.indexOf("#") >= 0)
          return n.fromHexString(t);
        var e = n.nameToHex[t];
        if (e)
          return n.fromHexString(e);
        if (t.indexOf("rgb") >= 0)
          return n.fromRgbaString(t);
        throw new Error("Invalid color string: '" + t + "'");
      }, n.parseHex = function(t) {
        t = t.replace(/ /g, "").slice(1);
        var e;
        switch (t.length) {
          case 6:
          case 8:
            e = [];
            for (var r = 0; r < t.length; r += 2)
              e.push(parseInt("" + t[r] + t[r + 1], 16));
            break;
          case 3:
          case 4:
            e = t.split("").map(function(o) {
              return parseInt(o, 16);
            }).map(function(o) {
              return o + o * 16;
            });
            break;
        }
        if (e.length >= 3 && e.every(function(o) {
          return o >= 0;
        }))
          return e.length === 3 && e.push(255), e;
      }, n.fromHexString = function(t) {
        var e = n.parseHex(t);
        if (e) {
          var r = Ta(e, 4), o = r[0], i = r[1], s = r[2], a = r[3];
          return new n(o / 255, i / 255, s / 255, a / 255);
        }
        throw new Error("Malformed hexadecimal color string: '" + t + "'");
      }, n.stringToRgba = function(t) {
        for (var e = Ta([NaN, NaN], 2), r = e[0], o = e[1], i = 0; i < t.length; i++) {
          var s = t[i];
          if (!r && s === "(")
            r = i;
          else if (s === ")") {
            o = i;
            break;
          }
        }
        var a = r && o && t.substring(r + 1, o);
        if (a) {
          for (var l = a.split(","), u = [], i = 0; i < l.length; i++) {
            var p = l[i], d = parseFloat(p);
            if (isNaN(d))
              return;
            p.indexOf("%") >= 0 ? (d = Math.max(0, Math.min(100, d)), d /= 100) : i === 3 ? d = Math.max(0, Math.min(1, d)) : (d = Math.max(0, Math.min(255, d)), d /= 255), u.push(d);
          }
          return u;
        }
      }, n.fromRgbaString = function(t) {
        var e = n.stringToRgba(t);
        if (e) {
          if (e.length === 3)
            return new n(e[0], e[1], e[2]);
          if (e.length === 4)
            return new n(e[0], e[1], e[2], e[3]);
        }
        throw new Error("Malformed rgb/rgba color string: '" + t + "'");
      }, n.fromArray = function(t) {
        if (t.length === 4)
          return new n(t[0], t[1], t[2], t[3]);
        if (t.length === 3)
          return new n(t[0], t[1], t[2]);
        throw new Error("The given array should contain 3 or 4 color components (numbers).");
      }, n.fromHSB = function(t, e, r, o) {
        o === void 0 && (o = 1);
        var i = n.HSBtoRGB(t, e, r);
        return new n(i[0], i[1], i[2], o);
      }, n.padHex = function(t) {
        return t.length === 1 ? "0" + t : t;
      }, n.prototype.toHexString = function() {
        var t = "#" + n.padHex(Math.round(this.r * 255).toString(16)) + n.padHex(Math.round(this.g * 255).toString(16)) + n.padHex(Math.round(this.b * 255).toString(16));
        return this.a < 1 && (t += n.padHex(Math.round(this.a * 255).toString(16))), t;
      }, n.prototype.toRgbaString = function(t) {
        t === void 0 && (t = 3);
        var e = [
          Math.round(this.r * 255),
          Math.round(this.g * 255),
          Math.round(this.b * 255)
        ], r = Math.pow(10, t);
        return this.a !== 1 ? (e.push(Math.round(this.a * r) / r), "rgba(" + e.join(", ") + ")") : "rgb(" + e.join(", ") + ")";
      }, n.prototype.toString = function() {
        return this.a === 1 ? this.toHexString() : this.toRgbaString();
      }, n.prototype.toHSB = function() {
        return n.RGBtoHSB(this.r, this.g, this.b);
      }, n.RGBtoHSB = function(t, e, r) {
        var o = Math.min(t, e, r), i = Math.max(t, e, r), s = i !== 0 ? (i - o) / i : 0, a = NaN;
        if (o !== i) {
          var l = i - o, u = (i - t) / l, p = (i - e) / l, d = (i - r) / l;
          t === i ? a = d - p : e === i ? a = 2 + u - d : a = 4 + p - u, a /= 6, a < 0 && (a = a + 1);
        }
        return [a * 360, s, i];
      }, n.HSBtoRGB = function(t, e, r) {
        isNaN(t) && (t = 0), t = (t % 360 + 360) % 360 / 360;
        var o = 0, i = 0, s = 0;
        if (e === 0)
          o = i = s = r;
        else {
          var a = (t - Math.floor(t)) * 6, l = a - Math.floor(a), u = r * (1 - e), p = r * (1 - e * l), d = r * (1 - e * (1 - l));
          switch (a >> 0) {
            case 0:
              o = r, i = d, s = u;
              break;
            case 1:
              o = p, i = r, s = u;
              break;
            case 2:
              o = u, i = r, s = d;
              break;
            case 3:
              o = u, i = p, s = r;
              break;
            case 4:
              o = d, i = u, s = r;
              break;
            case 5:
              o = r, i = u, s = p;
              break;
          }
        }
        return [o, i, s];
      }, n.prototype.derive = function(t, e, r, o) {
        var i = n.RGBtoHSB(this.r, this.g, this.b), s = i[2];
        s == 0 && r > 1 && (s = 0.05);
        var a = ((i[0] + t) % 360 + 360) % 360, l = Math.max(Math.min(i[1] * e, 1), 0);
        s = Math.max(Math.min(s * r, 1), 0);
        var u = Math.max(Math.min(this.a * o, 1), 0), p = n.HSBtoRGB(a, l, s);
        return p.push(u), n.fromArray(p);
      }, n.prototype.brighter = function() {
        return this.derive(0, 1, 1 / 0.7, 1);
      }, n.prototype.darker = function() {
        return this.derive(0, 1, 0.7, 1);
      }, n.nameToHex = Object.freeze({
        aliceblue: "#F0F8FF",
        antiquewhite: "#FAEBD7",
        aqua: "#00FFFF",
        aquamarine: "#7FFFD4",
        azure: "#F0FFFF",
        beige: "#F5F5DC",
        bisque: "#FFE4C4",
        black: "#000000",
        blanchedalmond: "#FFEBCD",
        blue: "#0000FF",
        blueviolet: "#8A2BE2",
        brown: "#A52A2A",
        burlywood: "#DEB887",
        cadetblue: "#5F9EA0",
        chartreuse: "#7FFF00",
        chocolate: "#D2691E",
        coral: "#FF7F50",
        cornflowerblue: "#6495ED",
        cornsilk: "#FFF8DC",
        crimson: "#DC143C",
        cyan: "#00FFFF",
        darkblue: "#00008B",
        darkcyan: "#008B8B",
        darkgoldenrod: "#B8860B",
        darkgray: "#A9A9A9",
        darkgreen: "#006400",
        darkgrey: "#A9A9A9",
        darkkhaki: "#BDB76B",
        darkmagenta: "#8B008B",
        darkolivegreen: "#556B2F",
        darkorange: "#FF8C00",
        darkorchid: "#9932CC",
        darkred: "#8B0000",
        darksalmon: "#E9967A",
        darkseagreen: "#8FBC8F",
        darkslateblue: "#483D8B",
        darkslategray: "#2F4F4F",
        darkslategrey: "#2F4F4F",
        darkturquoise: "#00CED1",
        darkviolet: "#9400D3",
        deeppink: "#FF1493",
        deepskyblue: "#00BFFF",
        dimgray: "#696969",
        dimgrey: "#696969",
        dodgerblue: "#1E90FF",
        firebrick: "#B22222",
        floralwhite: "#FFFAF0",
        forestgreen: "#228B22",
        fuchsia: "#FF00FF",
        gainsboro: "#DCDCDC",
        ghostwhite: "#F8F8FF",
        gold: "#FFD700",
        goldenrod: "#DAA520",
        gray: "#808080",
        green: "#008000",
        greenyellow: "#ADFF2F",
        grey: "#808080",
        honeydew: "#F0FFF0",
        hotpink: "#FF69B4",
        indianred: "#CD5C5C",
        indigo: "#4B0082",
        ivory: "#FFFFF0",
        khaki: "#F0E68C",
        lavender: "#E6E6FA",
        lavenderblush: "#FFF0F5",
        lawngreen: "#7CFC00",
        lemonchiffon: "#FFFACD",
        lightblue: "#ADD8E6",
        lightcoral: "#F08080",
        lightcyan: "#E0FFFF",
        lightgoldenrodyellow: "#FAFAD2",
        lightgray: "#D3D3D3",
        lightgreen: "#90EE90",
        lightgrey: "#D3D3D3",
        lightpink: "#FFB6C1",
        lightsalmon: "#FFA07A",
        lightseagreen: "#20B2AA",
        lightskyblue: "#87CEFA",
        lightslategray: "#778899",
        lightslategrey: "#778899",
        lightsteelblue: "#B0C4DE",
        lightyellow: "#FFFFE0",
        lime: "#00FF00",
        limegreen: "#32CD32",
        linen: "#FAF0E6",
        magenta: "#FF00FF",
        maroon: "#800000",
        mediumaquamarine: "#66CDAA",
        mediumblue: "#0000CD",
        mediumorchid: "#BA55D3",
        mediumpurple: "#9370DB",
        mediumseagreen: "#3CB371",
        mediumslateblue: "#7B68EE",
        mediumspringgreen: "#00FA9A",
        mediumturquoise: "#48D1CC",
        mediumvioletred: "#C71585",
        midnightblue: "#191970",
        mintcream: "#F5FFFA",
        mistyrose: "#FFE4E1",
        moccasin: "#FFE4B5",
        navajowhite: "#FFDEAD",
        navy: "#000080",
        oldlace: "#FDF5E6",
        olive: "#808000",
        olivedrab: "#6B8E23",
        orange: "#FFA500",
        orangered: "#FF4500",
        orchid: "#DA70D6",
        palegoldenrod: "#EEE8AA",
        palegreen: "#98FB98",
        paleturquoise: "#AFEEEE",
        palevioletred: "#DB7093",
        papayawhip: "#FFEFD5",
        peachpuff: "#FFDAB9",
        peru: "#CD853F",
        pink: "#FFC0CB",
        plum: "#DDA0DD",
        powderblue: "#B0E0E6",
        purple: "#800080",
        rebeccapurple: "#663399",
        red: "#FF0000",
        rosybrown: "#BC8F8F",
        royalblue: "#4169E1",
        saddlebrown: "#8B4513",
        salmon: "#FA8072",
        sandybrown: "#F4A460",
        seagreen: "#2E8B57",
        seashell: "#FFF5EE",
        sienna: "#A0522D",
        silver: "#C0C0C0",
        skyblue: "#87CEEB",
        slateblue: "#6A5ACD",
        slategray: "#708090",
        slategrey: "#708090",
        snow: "#FFFAFA",
        springgreen: "#00FF7F",
        steelblue: "#4682B4",
        tan: "#D2B48C",
        teal: "#008080",
        thistle: "#D8BFD8",
        tomato: "#FF6347",
        turquoise: "#40E0D0",
        violet: "#EE82EE",
        wheat: "#F5DEB3",
        white: "#FFFFFF",
        whitesmoke: "#F5F5F5",
        yellow: "#FFFF00",
        yellowgreen: "#9ACD32"
      }), n;
    }()
  );
  function Da(n, t) {
    t === void 0 && (t = ",");
    var e = [], r = function(f) {
      return f === "\r" || f === `
`;
    }, o = !1;
    if (n === "")
      return [[""]];
    for (var i = function(f, v, y) {
      var R = n[y - 1], _ = n[y], D = n[y + 1], P = function() {
        e[f] || (e[f] = []), e[f][v] || (e[f][v] = "");
      };
      if (P(), _ === '"') {
        if (o)
          return D === '"' ? (e[f][v] += '"', y++) : o = !1, s = f, a = v, l = y, "continue";
        if (R === void 0 || R === t || r(R))
          return o = !0, s = f, a = v, l = y, "continue";
      }
      if (!o) {
        if (_ === t)
          return v++, P(), s = f, a = v, l = y, "continue";
        if (r(_))
          return v = 0, f++, P(), _ === "\r" && D === `
` && y++, s = f, a = v, l = y, "continue";
      }
      e[f][v] += _, s = f, a = v, l = y;
    }, s, a, l, u = 0, p = 0, d = 0; d < n.length; d++)
      i(u, p, d), u = s, p = a, d = l;
    return e;
  }
  var Bc = /* @__PURE__ */ Object.freeze({
    stringToArray: Da
  });
  var kc = function(n) {
    var t = typeof Symbol == "function" && Symbol.iterator, e = t && n[t], r = 0;
    if (e) return e.call(n);
    if (n && typeof n.length == "number") return {
      next: function() {
        return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
      }
    };
    throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
  }, Ln, Mn, In, Nn, xn, Gn, Hn, Vn;
  function Uc() {
    return Mn === void 0 && (Mn = /*@cc_on!@*/
    !!document.documentMode), Mn;
  }
  function gi() {
    return In === void 0 && (In = !Uc() && !!window.StyleMedia), In;
  }
  function Ro() {
    return Ln === void 0 && (Ln = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)), Ln;
  }
  function So() {
    if (Nn === void 0) {
      var n = window;
      Nn = !!n.chrome && (!!n.chrome.webstore || !!n.chrome.runtime) || /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
    }
    return Nn;
  }
  function Wn() {
    if (xn === void 0) {
      var n = window;
      xn = typeof n.InstallTrigger < "u";
    }
    return xn;
  }
  function Hr() {
    return Gn === void 0 && (Gn = (/iPad|iPhone|iPod/.test(navigator.platform) || // eslint-disable-next-line
    navigator.platform === "MacIntel" && navigator.maxTouchPoints > 1) && // @ts-ignore
    !window.MSStream), Gn;
  }
  function vi(n) {
    if (!n)
      return null;
    var t = n.tabIndex, e = n.getAttribute("tabIndex");
    return t === -1 && (e === null || e === "" && !Wn()) ? null : t.toString();
  }
  function ba() {
    if (!document.body)
      return -1;
    var n = 1e6, t = navigator.userAgent.toLowerCase().match(/firefox/) ? 6e6 : 1e9, e = document.createElement("div");
    for (document.body.appendChild(e); ; ) {
      var r = n * 2;
      if (e.style.height = r + "px", r > t || e.clientHeight !== r)
        break;
      n = r;
    }
    return document.body.removeChild(e), n;
  }
  function Fa() {
    return Vn == null && La(), Vn;
  }
  function La() {
    var n = document.body, t = document.createElement("div");
    t.style.width = t.style.height = "100px", t.style.opacity = "0", t.style.overflow = "scroll", t.style.msOverflowStyle = "scrollbar", t.style.position = "absolute", n.appendChild(t);
    var e = t.offsetWidth - t.clientWidth;
    e === 0 && t.clientWidth === 0 && (e = null), t.parentNode && t.parentNode.removeChild(t), e != null && (Vn = e, Hn = e === 0);
  }
  function Ma() {
    return Hn == null && La(), Hn;
  }
  function jc() {
    var n, t, e = ["webkit", "moz", "o", "ms"], r = document.createElement("div"), o = document.getElementsByTagName("body")[0], i = !1, s;
    o.appendChild(r), r.setAttribute("style", e.map(function(p) {
      return "-" + p + "-overflow-scrolling: touch";
    }).concat("overflow-scrolling: touch").join(";"));
    var a = window.getComputedStyle(r);
    if (a.overflowScrolling === "touch" && (i = !0), !i)
      try {
        for (var l = kc(e), u = l.next(); !u.done; u = l.next())
          if (s = u.value, a[s + "OverflowScrolling"] === "touch") {
            i = !0;
            break;
          }
      } catch (p) {
        n = { error: p };
      } finally {
        try {
          u && !u.done && (t = l.return) && t.call(l);
        } finally {
          if (n) throw n.error;
        }
      }
    return r.parentNode && r.parentNode.removeChild(r), i;
  }
  function Ia() {
    return document.body ? document.body.clientWidth : window.innerHeight ? window.innerWidth : document.documentElement && document.documentElement.clientWidth ? document.documentElement.clientWidth : -1;
  }
  function Na() {
    return document.body ? document.body.clientHeight : window.innerHeight ? window.innerHeight : document.documentElement && document.documentElement.clientHeight ? document.documentElement.clientHeight : -1;
  }
  var zc = /* @__PURE__ */ Object.freeze({
    isBrowserEdge: gi,
    isBrowserSafari: Ro,
    isBrowserChrome: So,
    isBrowserFirefox: Wn,
    isIOSUserAgent: Hr,
    getTabIndex: vi,
    getMaxDivHeight: ba,
    getScrollbarWidth: Fa,
    isInvisibleScrollbar: Ma,
    hasOverflowScrolling: jc,
    getBodyWidth: Ia,
    getBodyHeight: Na
  });
  var mi;
  function $c(n, t, e) {
    for (var r = n.parentElement, o = r && r.firstChild; o; )
      t && o.classList.toggle(t, o === n), e && o.classList.toggle(e, o !== n), o = o.nextSibling;
  }
  function xa(n) {
    var t = Element.prototype.matches || Element.prototype.msMatchesSelector, e = t.call(n, E.INPUT_SELECTOR), r = t.call(n, E.FOCUSABLE_EXCLUDE), o = Br(n), i = e && !r && o;
    return i;
  }
  function Ee(n, t) {
    n.classList.toggle("ag-hidden", !t);
  }
  function Ga(n, t) {
    n.classList.toggle("ag-invisible", !t);
  }
  function Vr(n, t) {
    var e = "disabled", r = t ? function(o) {
      return o.setAttribute(e, "");
    } : function(o) {
      return o.removeAttribute(e);
    };
    r(n), qn(n.querySelectorAll("input"), function(o) {
      return r(o);
    });
  }
  function yi(n, t, e) {
    for (var r = 0; n; ) {
      if (n.classList.contains(t))
        return !0;
      if (n = n.parentElement, e && ++r > e)
        break;
    }
    return !1;
  }
  function Wr(n) {
    var t = window.getComputedStyle(n), e = t.height, r = t.width, o = t.paddingTop, i = t.paddingRight, s = t.paddingBottom, a = t.paddingLeft, l = t.marginTop, u = t.marginRight, p = t.marginBottom, d = t.marginLeft, f = t.boxSizing;
    return {
      height: parseFloat(e),
      width: parseFloat(r),
      paddingTop: parseFloat(o),
      paddingRight: parseFloat(i),
      paddingBottom: parseFloat(s),
      paddingLeft: parseFloat(a),
      marginTop: parseFloat(l),
      marginRight: parseFloat(u),
      marginBottom: parseFloat(p),
      marginLeft: parseFloat(d),
      boxSizing: f
    };
  }
  function _o(n) {
    var t = Wr(n);
    return t.boxSizing === "border-box" ? t.height - t.paddingTop - t.paddingBottom : t.height;
  }
  function Ci(n) {
    var t = Wr(n);
    return t.boxSizing === "border-box" ? t.width - t.paddingLeft - t.paddingRight : t.width;
  }
  function Bn(n) {
    var t = Wr(n), e = t.marginBottom + t.marginTop;
    return Math.ceil(n.offsetHeight + e);
  }
  function wi(n) {
    var t = Wr(n), e = t.marginLeft + t.marginRight;
    return Math.ceil(n.offsetWidth + e);
  }
  function Oo() {
    if (typeof mi == "boolean")
      return mi;
    var n = document.createElement("div");
    return n.style.direction = "rtl", n.style.width = "1px", n.style.height = "1px", n.style.position = "fixed", n.style.top = "0px", n.style.overflow = "hidden", n.dir = "rtl", n.innerHTML = /* html */
    `<div style="width: 2px">
            <span style="display: inline-block; width: 1px"></span>
            <span style="display: inline-block; width: 1px"></span>
        </div>`, document.body.appendChild(n), n.scrollLeft = 1, mi = Math.floor(n.scrollLeft) === 0, document.body.removeChild(n), mi;
  }
  function Ao(n, t) {
    var e = n.scrollLeft;
    return t && (e = Math.abs(e), So() && !Oo() && (e = n.scrollWidth - n.clientWidth - e)), e;
  }
  function Ei(n, t, e) {
    e && (Oo() ? t *= -1 : (Ro() || So()) && (t = n.scrollWidth - n.clientWidth - t)), n.scrollLeft = t;
  }
  function et(n) {
    for (; n && n.firstChild; )
      n.removeChild(n.firstChild);
  }
  function Kc(n, t) {
    gt(n.querySelector(t));
  }
  function gt(n) {
    n && n.parentNode && n.parentNode.removeChild(n);
  }
  function Br(n) {
    return n.offsetParent !== null;
  }
  function xe(n) {
    if (DOMParser !== null) {
      var t = new DOMParser(), e = t.parseFromString(n, "text/html");
      return e.body.firstChild;
    }
    var r = document.createElement("div");
    return r.innerHTML = (n || "").trim(), r.firstChild;
  }
  function Yc(n, t) {
    n.lastChild ? n.insertAdjacentHTML("afterbegin", t) : n.innerHTML = t;
  }
  function qc(n, t) {
    if (n.attributes && n.attributes[t]) {
      var e = n.attributes[t];
      return e.value;
    }
    return null;
  }
  function kn(n) {
    return n && n.clientHeight ? n.clientHeight : 0;
  }
  function Un(n) {
    return n && n.clientWidth ? n.clientWidth : 0;
  }
  function jn(n, t, e) {
    e && e.nextSibling === t || (e ? e.nextSibling ? n.insertBefore(t, e.nextSibling) : n.appendChild(t) : n.firstChild && n.firstChild !== t && n.insertAdjacentElement("afterbegin", t));
  }
  function zn(n, t) {
    for (var e = 0; e < t.length; e++) {
      var r = t[e], o = n.children[e];
      o !== r && n.insertBefore(r, o);
    }
  }
  function Ha(n, t, e) {
    e ? e.insertAdjacentElement("afterend", t) : n.firstChild ? n.insertAdjacentElement("afterbegin", t) : n.appendChild(t);
  }
  function Xc(n, t) {
    g(n.firstChild) ? n.insertBefore(t, n.firstChild) : n.appendChild(t);
  }
  function $n(n, t) {
    t && Object.keys(t).forEach(function(e) {
      var r = Ea(e);
      r && (n.style[r] = t[e]);
    });
  }
  function Kn(n) {
    return n.clientWidth < n.scrollWidth;
  }
  function Va(n) {
    return n.clientHeight < n.scrollHeight;
  }
  function Po(n, t) {
    t === "flex" ? (n.style.removeProperty("width"), n.style.removeProperty("minWidth"), n.style.removeProperty("maxWidth"), n.style.flex = "1 1 auto") : Pt(n, t);
  }
  function Pt(n, t) {
    t = Yn(t), n.style.width = t.toString(), n.style.maxWidth = t.toString(), n.style.minWidth = t.toString();
  }
  function Qc(n, t) {
    t === "flex" ? (n.style.removeProperty("height"), n.style.removeProperty("minHeight"), n.style.removeProperty("maxHeight"), n.style.flex = "1 1 auto") : dr(n, t);
  }
  function dr(n, t) {
    t = Yn(t), n.style.height = t.toString(), n.style.maxHeight = t.toString(), n.style.minHeight = t.toString();
  }
  function Yn(n) {
    return typeof n == "number" ? n + "px" : n;
  }
  function Wa(n) {
    return typeof Node == "function" ? n instanceof Node : n && typeof n == "object" && typeof n.nodeType == "number" && typeof n.nodeName == "string";
  }
  function Ba(n) {
    return typeof HTMLElement == "function" ? n instanceof HTMLElement : n && $t(n) && n.nodeType === 1 && typeof n.nodeName == "string";
  }
  function To(n) {
    return Wa(n) || Ba(n);
  }
  function ka(n) {
    if (n == null)
      return [];
    var t = [];
    return qn(n, function(e) {
      return t.push(e);
    }), t;
  }
  function Ua(n, t) {
    if (n)
      for (var e = 0; e < n.length; e++) {
        var r = n[e];
        t(r.name, r.value);
      }
  }
  function Zc(n, t) {
    typeof t == "boolean" ? (n.checked = t, n.indeterminate = !1) : n.indeterminate = !0;
  }
  function Do(n, t, e) {
    e == null ? n.removeAttribute(t) : n.setAttribute(t, e.toString());
  }
  function qn(n, t) {
    if (n != null)
      for (var e = 0; e < n.length; e++)
        t(n[e]);
  }
  var Jc = /* @__PURE__ */ Object.freeze({
    radioCssClass: $c,
    isFocusableFormField: xa,
    setDisplayed: Ee,
    setVisible: Ga,
    setDisabled: Vr,
    isElementChildOfClass: yi,
    getElementSize: Wr,
    getInnerHeight: _o,
    getInnerWidth: Ci,
    getAbsoluteHeight: Bn,
    getAbsoluteWidth: wi,
    isRtlNegativeScroll: Oo,
    getScrollLeft: Ao,
    setScrollLeft: Ei,
    clearElement: et,
    removeElement: Kc,
    removeFromParent: gt,
    isVisible: Br,
    loadTemplate: xe,
    appendHtml: Yc,
    getElementAttribute: qc,
    offsetHeight: kn,
    offsetWidth: Un,
    ensureDomOrder: jn,
    setDomChildOrder: zn,
    insertWithDomOrder: Ha,
    prependDC: Xc,
    addStylesToElement: $n,
    isHorizontalScrollShowing: Kn,
    isVerticalScrollShowing: Va,
    setElementWidth: Po,
    setFixedWidth: Pt,
    setElementHeight: Qc,
    setFixedHeight: dr,
    formatSize: Yn,
    isNode: Wa,
    isElement: Ba,
    isNodeOrElement: To,
    copyNodeList: ka,
    iterateNamedNodeMap: Ua,
    setCheckboxState: Zc,
    addOrRemoveAttribute: Do,
    nodeListForEach: qn
  });
  function ed(n) {
    var t = /function (.{1,})\(/, e = n.toString(), r = t.exec(e);
    return r && r.length > 1 ? r[1] : "";
  }
  function td(n) {
    var t = n.length, e = 0;
    if (t <= 1)
      return n;
    for (var r = 0; r < n.length; r++) {
      var o = n[r], i = o.toString().split("e-");
      if (i.length > 1) {
        e = Math.max(e, parseInt(i[1], 10));
        continue;
      }
      Math.floor(o) !== o && (e = Math.max(e, o.toString().split(".")[1].length));
    }
    for (var s = 0, a = 0, l = 0, u = 0, p = 0, d = 0; d < t; d++)
      p = n[d], s += d, a += p, u += d * d, l += d * p;
    for (var f = (t * l - s * a) / (t * u - s * s), v = a / t - f * s / t, y = [], d = 0; d <= t; d++)
      y.push(parseFloat((d * f + v).toFixed(e)));
    return y;
  }
  function rd(n) {
    if (!n)
      return "";
    var t = [];
    return ie(n, function(e, r) {
      var o = wa(e);
      t.push(o + ": " + r + ";");
    }), t.join(" ");
  }
  function od(n) {
    var t = document.createElement("div"), e = document.querySelector("#__ag__message");
    if (t.innerHTML = n, !e) {
      var r = '<div id="__ag__message" style="display: inline-block; position: absolute; top: 0px; left: 0px; color: white; background-color: black; z-index: 20; padding: 2px; border: 1px solid darkred; height: 200px; overflow-y: auto;"></div>';
      e = xe(r), document.body && document.body.appendChild(e);
    }
    e.insertBefore(t, e.children[0]);
  }
  function id(n, t) {
    n.then(function(e) {
      var r = e.getGui();
      r != null && (typeof r == "object" ? t.appendChild(r) : t.innerHTML = r);
    });
  }
  var nd = /* @__PURE__ */ Object.freeze({
    getNameOfClass: ed,
    findLineByLeastSquares: td,
    cssStyleObjectToMarkup: rd,
    message: od,
    bindCellRendererToHtmlElement: id
  });
  function Ge(n, t, e) {
    n.setAttribute(ja(t), e.toString());
  }
  function hr(n, t) {
    n.removeAttribute(ja(t));
  }
  function ja(n) {
    return "aria-" + n;
  }
  function ke(n, t) {
    t ? n.setAttribute("role", t) : n.removeAttribute("role");
  }
  function za(n) {
    var t;
    return n.isSortAscending() ? t = "ascending" : n.isSortDescending() ? t = "descending" : t = "none", t;
  }
  function $a(n) {
    return parseInt(n.getAttribute("aria-level"), 10);
  }
  function Ka(n) {
    return parseInt(n.getAttribute("aria-posinset"), 10);
  }
  function sd(n) {
    return n.getAttribute("aria-describedby") || "";
  }
  function fr(n, t) {
    var e = "label";
    t ? Ge(n, e, t) : hr(n, e);
  }
  function Xn(n, t) {
    var e = "labelledby";
    t ? Ge(n, e, t) : hr(n, e);
  }
  function Ya(n, t) {
    var e = "description";
    t ? Ge(n, e, t) : hr(n, e);
  }
  function Qn(n, t) {
    var e = "describedby";
    t ? Ge(n, e, t) : hr(n, e);
  }
  function qa(n, t) {
    Ge(n, "level", t);
  }
  function Zn(n, t) {
    Ge(n, "disabled", t);
  }
  function tt(n, t) {
    Ge(n, "expanded", t);
  }
  function Xa(n) {
    hr(n, "expanded");
  }
  function Jn(n, t) {
    Ge(n, "setsize", t);
  }
  function es(n, t) {
    Ge(n, "posinset", t);
  }
  function Qa(n, t) {
    Ge(n, "multiselectable", t);
  }
  function Za(n, t) {
    Ge(n, "rowcount", t);
  }
  function ts(n, t) {
    Ge(n, "rowindex", t);
  }
  function Ja(n, t) {
    Ge(n, "colcount", t);
  }
  function rs(n, t) {
    Ge(n, "colindex", t);
  }
  function el(n, t) {
    Ge(n, "colspan", t);
  }
  function tl(n, t) {
    Ge(n, "sort", t);
  }
  function rl(n) {
    hr(n, "sort");
  }
  function kr(n, t) {
    var e = "selected";
    t ? Ge(n, e, t) : hr(n, e);
  }
  function ol(n, t) {
    Ge(n, "checked", t === void 0 ? "mixed" : t);
  }
  var ad = /* @__PURE__ */ Object.freeze({
    setAriaRole: ke,
    getAriaSortState: za,
    getAriaLevel: $a,
    getAriaPosInSet: Ka,
    getAriaDescribedBy: sd,
    setAriaLabel: fr,
    setAriaLabelledBy: Xn,
    setAriaDescription: Ya,
    setAriaDescribedBy: Qn,
    setAriaLevel: qa,
    setAriaDisabled: Zn,
    setAriaExpanded: tt,
    removeAriaExpanded: Xa,
    setAriaSetSize: Jn,
    setAriaPosInSet: es,
    setAriaMultiSelectable: Qa,
    setAriaRowCount: Za,
    setAriaRowIndex: ts,
    setAriaColCount: Ja,
    setAriaColIndex: rs,
    setAriaColSpan: el,
    setAriaSort: tl,
    removeAriaSort: rl,
    setAriaSelected: kr,
    setAriaChecked: ol
  });
  function os(n, t) {
    return n.toString().padStart(t, "0");
  }
  function il(n, t) {
    for (var e = [], r = n; r <= t; r++)
      e.push(r);
    return e;
  }
  function Ri(n) {
    return n !== "" && !isNaN(parseFloat(n)) && isFinite(n);
  }
  function ld(n) {
    return typeof n == "string" && (n = parseInt(n, 10)), typeof n == "number" ? Math.floor(n) : null;
  }
  function ud(n, t) {
    for (var e = "", r = 0; r < t; r++)
      e += String.fromCharCode(n & 255), n >>>= 8;
    return e;
  }
  function pd(n, t, e) {
    return typeof n != "number" ? "" : is(Math.round(n * 100) / 100, t, e);
  }
  function is(n, t, e) {
    return typeof n != "number" ? "" : n.toString().replace(".", e).replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1" + t);
  }
  function cd(n) {
    return n == null ? null : n.reduce(function(t, e) {
      return t + e;
    }, 0);
  }
  var dd = /* @__PURE__ */ Object.freeze({
    padStartWidthZeros: os,
    createArrayOfNumbers: il,
    isNumeric: Ri,
    cleanNumber: ld,
    decToHex: ud,
    formatNumberTwoDecimalPlacesAndCommas: pd,
    formatNumberCommas: is,
    sum: cd
  });
  var ns = function(n, t) {
    var e = typeof Symbol == "function" && n[Symbol.iterator];
    if (!e) return n;
    var r = e.call(n), o, i = [], s;
    try {
      for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
    } catch (a) {
      s = { error: a };
    } finally {
      try {
        o && !o.done && (e = r.return) && e.call(r);
      } finally {
        if (s) throw s.error;
      }
    }
    return i;
  };
  function Qt(n, t, e) {
    if (t === void 0 && (t = !0), e === void 0 && (e = "-"), !n)
      return null;
    var r = [n.getFullYear(), n.getMonth() + 1, n.getDate()].map(function(o) {
      return os(o, 2);
    }).join(e);
    return t && (r += " " + [n.getHours(), n.getMinutes(), n.getSeconds()].map(function(o) {
      return os(o, 2);
    }).join(":")), r;
  }
  function Zt(n) {
    if (!n)
      return null;
    var t = ns(n.split(" "), 2), e = t[0], r = t[1];
    if (!e)
      return null;
    var o = e.split("-").map(function(y) {
      return parseInt(y, 10);
    });
    if (o.filter(function(y) {
      return !isNaN(y);
    }).length !== 3)
      return null;
    var i = ns(o, 3), s = i[0], a = i[1], l = i[2], u = new Date(s, a - 1, l);
    if (u.getFullYear() !== s || u.getMonth() !== a - 1 || u.getDate() !== l)
      return null;
    if (!r || r === "00:00:00")
      return u;
    var p = ns(r.split(":").map(function(y) {
      return parseInt(y, 10);
    }), 3), d = p[0], f = p[1], v = p[2];
    return d >= 0 && d < 24 && u.setHours(d), f >= 0 && f < 60 && u.setMinutes(f), v >= 0 && v < 60 && u.setSeconds(v), u;
  }
  var hd = /* @__PURE__ */ Object.freeze({
    serialiseDate: Qt,
    parseDateTimeFromString: Zt
  });
  function nl(n, t, e) {
    var r = {}, o = n.filter(function(i) {
      return !t.some(function(s) {
        return s === i;
      });
    });
    return o.length > 0 && o.forEach(function(i) {
      return r[i] = sl(i, e);
    }), r;
  }
  function sl(n, t, e, r) {
    var o = r ? ll : al, i = t.map(function(s) {
      return {
        value: s,
        relevance: o(n.toLowerCase(), s.toLocaleLowerCase())
      };
    });
    return i.sort(function(s, a) {
      return a.relevance - s.relevance;
    }), e && (i = i.filter(function(s) {
      return s.relevance !== 0;
    })), i.map(function(s) {
      return s.value;
    });
  }
  function ss(n) {
    var t = n.toLowerCase(), e = new Array(t.length - 1), r, o, i;
    for (r = o = 0, i = e.length; o <= i; r = o += 1)
      e[r] = t.slice(r, r + 2);
    return e;
  }
  function al(n, t) {
    if (n.length === 0 && t.length === 0)
      return 0;
    var e = ss(n), r = ss(t), o = e.length + r.length, i = 0, s, a;
    for (s = 0, a = e.length; s < a; s++) {
      var l = e[s], u = void 0, p = void 0;
      for (u = 0, p = r.length; u < p; u++) {
        var d = r[u];
        l === d && i++;
      }
    }
    return i > 0 ? 2 * i / o : 0;
  }
  function ll(n, t) {
    for (var e = n.replace(/\s/g, ""), r = t.replace(/\s/g, ""), o = 0, i = 0, s = 0; s < e.length; s++) {
      var a = r.indexOf(e[s], i);
      a !== -1 && (i = a, o += 100 - i * 100 / 1e4 * 100);
    }
    return o;
  }
  var fd = /* @__PURE__ */ Object.freeze({
    fuzzyCheckStrings: nl,
    fuzzySuggestions: sl,
    get_bigrams: ss,
    string_distances: al,
    string_weighted_distances: ll
  });
  var ul = {
    // header column group shown when expanded (click to contract)
    columnGroupOpened: "expanded",
    // header column group shown when contracted (click to expand)
    columnGroupClosed: "contracted",
    // tool panel column group contracted (click to expand)
    columnSelectClosed: "tree-closed",
    // tool panel column group expanded (click to contract)
    columnSelectOpen: "tree-open",
    // column tool panel header expand/collapse all button, shown when some children are expanded and
    //     others are collapsed
    columnSelectIndeterminate: "tree-indeterminate",
    // shown on ghost icon while dragging column to the side of the grid to pin
    columnMovePin: "pin",
    // shown on ghost icon while dragging over part of the page that is not a drop zone
    columnMoveHide: "eye-slash",
    // shown on ghost icon while dragging columns to reorder
    columnMoveMove: "arrows",
    // animating icon shown when dragging a column to the right of the grid causes horizontal scrolling
    columnMoveLeft: "left",
    // animating icon shown when dragging a column to the left of the grid causes horizontal scrolling
    columnMoveRight: "right",
    // shown on ghost icon while dragging over Row Groups drop zone
    columnMoveGroup: "group",
    // shown on ghost icon while dragging over Values drop zone
    columnMoveValue: "aggregation",
    // shown on ghost icon while dragging over pivot drop zone
    columnMovePivot: "pivot",
    // shown on ghost icon while dragging over drop zone that doesn't support it, e.g.
    //     string column over aggregation drop zone
    dropNotAllowed: "not-allowed",
    // shown on row group when contracted (click to expand)
    groupContracted: "tree-closed",
    // shown on row group when expanded (click to contract)
    groupExpanded: "tree-open",
    // context menu chart item
    chart: "chart",
    // chart window title bar
    close: "cross",
    // X (remove) on column 'pill' after adding it to a drop zone list
    cancel: "cancel",
    // indicates the currently active pin state in the "Pin column" sub-menu of the column menu
    check: "tick",
    // "go to first" button in pagination controls
    first: "first",
    // "go to previous" button in pagination controls
    previous: "previous",
    // "go to next" button in pagination controls
    next: "next",
    // "go to last" button in pagination controls
    last: "last",
    // shown on top right of chart when chart is linked to range data (click to unlink)
    linked: "linked",
    // shown on top right of chart when chart is not linked to range data (click to link)
    unlinked: "unlinked",
    // "Choose colour" button on chart settings tab
    colorPicker: "color-picker",
    // rotating spinner shown by the loading cell renderer
    groupLoading: "loading",
    // button to launch enterprise column menu
    menu: "menu",
    // filter tool panel tab
    filter: "filter",
    // column tool panel tab
    columns: "columns",
    // button in chart regular size window title bar (click to maximise)
    maximize: "maximize",
    // button in chart maximised window title bar (click to make regular size)
    minimize: "minimize",
    // "Pin column" item in column header menu
    menuPin: "pin",
    // "Value aggregation" column menu item (shown on numeric columns when grouping is active)"
    menuValue: "aggregation",
    // "Group by {column-name}" item in column header menu
    menuAddRowGroup: "group",
    // "Un-Group by {column-name}" item in column header menu
    menuRemoveRowGroup: "group",
    // context menu copy item
    clipboardCopy: "copy",
    // context menu paste item
    clipboardPaste: "paste",
    // identifies the pivot drop zone
    pivotPanel: "pivot",
    // "Row groups" drop zone in column tool panel
    rowGroupPanel: "group",
    // columns tool panel Values drop zone
    valuePanel: "aggregation",
    // drag handle used to pick up draggable columns
    columnDrag: "grip",
    // drag handle used to pick up draggable rows
    rowDrag: "grip",
    // context menu export item
    save: "save",
    // csv export
    csvExport: "csv",
    // excel export,
    excelExport: "excel",
    // icon on dropdown editors
    smallDown: "small-down",
    // version of small-right used in RTL mode
    smallLeft: "small-left",
    // separater between column 'pills' when you add multiple columns to the header drop zone
    smallRight: "small-right",
    smallUp: "small-up",
    // show on column header when column is sorted ascending
    sortAscending: "asc",
    // show on column header when column is sorted descending
    sortDescending: "desc",
    // show on column header when column has no sort, only when enabled with gridOptions.unSortIcon=true
    sortUnSort: "none"
  };
  function st(n, t, e) {
    var r = be(n, t, e);
    if (r && r.className.indexOf("ag-icon") > -1)
      return r;
    var o = document.createElement("span");
    return o.appendChild(r), o;
  }
  function be(n, t, e, r) {
    var o = null, i = e && e.getColDef().icons;
    if (i && (o = i[n]), t && !o) {
      var s = t.getIcons();
      s && (o = s[n]);
    }
    if (o) {
      var a = void 0;
      if (typeof o == "function")
        a = o();
      else if (typeof o == "string")
        a = o;
      else
        throw new Error("icon from grid options needs to be a string or a function");
      if (typeof a == "string")
        return xe(a);
      if (To(a))
        return a;
      console.warn("AG Grid: iconRenderer should return back a string or a dom object");
    } else {
      var l = document.createElement("span"), u = ul[n];
      return u || (r ? u = n : (console.warn("AG Grid: Did not find icon " + n), u = "")), l.setAttribute("class", "ag-icon ag-icon-" + u), l.setAttribute("unselectable", "on"), ke(l, "presentation"), l;
    }
  }
  var gd = /* @__PURE__ */ Object.freeze({
    iconNameClassMap: ul,
    createIcon: st,
    createIconNoSpan: be
  });
  var vd = "Del", md = 46;
  function pl(n) {
    if (n.altKey || n.ctrlKey || n.metaKey)
      return !1;
    var t = n.key.length === 1, e = yd(n);
    return t || e;
  }
  function Si(n, t, e, r, o) {
    var i = n.getSuppressKeyboardEventFunc(), s = r ? r.getColDef().suppressKeyboardEvent : void 0;
    if (!i && !s)
      return !1;
    var a = {
      event: t,
      editing: o,
      column: r,
      api: n.getApi(),
      node: e,
      data: e.data,
      colDef: r.getColDef(),
      context: n.getContext(),
      columnApi: n.getColumnApi()
    };
    if (s) {
      var l = s(a);
      if (l)
        return !0;
    }
    return i ? i(a) : !1;
  }
  function cl(n, t, e, r) {
    var o = r.getDefinition(), i = o && o.suppressHeaderKeyboardEvent;
    if (!g(i))
      return !1;
    var s = {
      api: n.getApi(),
      columnApi: n.getColumnApi(),
      context: n.getContext(),
      colDef: o,
      column: r,
      headerRowIndex: e,
      event: t
    };
    return !!i(s);
  }
  function yd(n) {
    return gi() && n.key === vd && n.charCode === md;
  }
  var Cd = /* @__PURE__ */ Object.freeze({
    isEventFromPrintableCharacter: pl,
    isUserSuppressingKeyboardEvent: Si,
    isUserSuppressingHeaderKeyboardEvent: cl
  });
  function as(n, t, e) {
    if (e === 0)
      return !1;
    var r = Math.abs(n.clientX - t.clientX), o = Math.abs(n.clientY - t.clientY);
    return Math.max(r, o) <= e;
  }
  var wd = /* @__PURE__ */ Object.freeze({
    areEventsNear: as
  });
  function Ed(n, t) {
    if (n) {
      for (var e = function(a, l) {
        var u = t[a.id], p = t[l.id], d = u !== void 0, f = p !== void 0, v = d && f, y = !d && !f;
        return v ? u - p : y ? a.__objectId - l.__objectId : d ? 1 : -1;
      }, r, o, i = !1, s = 0; s < n.length - 1; s++)
        if (r = n[s], o = n[s + 1], e(r, o) > 0) {
          i = !0;
          break;
        }
      i && n.sort(e);
    }
  }
  function Rd(n, t) {
    var e = [];
    r(n);
    function r(o) {
      o && o.forEach(function(i) {
        if (i.group || i.hasChildren()) {
          e.push(i.key);
          var s = e.join("|");
          t(i, s), r(i.childrenAfterGroup), e.pop();
        }
      });
    }
  }
  var Sd = /* @__PURE__ */ Object.freeze({
    sortRowNodesByOrder: Ed,
    traverseNodesWithKey: Rd
  });
  function ls(n) {
    var t = /* @__PURE__ */ new Set();
    return n.forEach(function(e) {
      return t.add(e);
    }), t;
  }
  var _d = /* @__PURE__ */ Object.freeze({
    convertToSet: ls
  });
  var Oe = function() {
    return Oe = Object.assign || function(n) {
      for (var t, e = 1, r = arguments.length; e < r; e++) {
        t = arguments[e];
        for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
      }
      return n;
    }, Oe.apply(this, arguments);
  }, Od = Oe(Oe(Oe(Oe(Oe(Oe(Oe(Oe(Oe(Oe(Oe(Oe(Oe(Oe(Oe(Oe(Oe(Oe(Oe(Oe({}, nd), ad), cc), zc), Bc), hd), Jc), mc), En), fd), we), gd), Cd), Ac), wd), dd), lr), Sd), _d), Sc), re = Od;
  var gr = (
    /** @class */
    function() {
      function n(t, e) {
        t === void 0 && (t = 0), e === void 0 && (e = 1), this.nextValue = t, this.step = e;
      }
      return n.prototype.next = function() {
        var t = this.nextValue;
        return this.nextValue += this.step, t;
      }, n.prototype.peek = function() {
        return this.nextValue;
      }, n.prototype.skip = function(t) {
        this.nextValue += t;
      }, n;
    }()
  );
  (function(n) {
    n[n.IN_PROGRESS = 0] = "IN_PROGRESS", n[n.RESOLVED = 1] = "RESOLVED";
  })(c.AgPromiseStatus || (c.AgPromiseStatus = {}));
  var Qe = (
    /** @class */
    function() {
      function n(t) {
        var e = this;
        this.status = c.AgPromiseStatus.IN_PROGRESS, this.resolution = null, this.waiters = [], t(function(r) {
          return e.onDone(r);
        }, function(r) {
          return e.onReject(r);
        });
      }
      return n.all = function(t) {
        return new n(function(e) {
          var r = t.length, o = new Array(r);
          t.forEach(function(i, s) {
            i.then(function(a) {
              o[s] = a, r--, r === 0 && e(o);
            });
          });
        });
      }, n.resolve = function(t) {
        return t === void 0 && (t = null), new n(function(e) {
          return e(t);
        });
      }, n.prototype.then = function(t) {
        var e = this;
        return new n(function(r) {
          e.status === c.AgPromiseStatus.RESOLVED ? r(t(e.resolution)) : e.waiters.push(function(o) {
            return r(t(o));
          });
        });
      }, n.prototype.resolveNow = function(t, e) {
        return this.status === c.AgPromiseStatus.RESOLVED ? e(this.resolution) : t;
      }, n.prototype.onDone = function(t) {
        this.status = c.AgPromiseStatus.RESOLVED, this.resolution = t, this.waiters.forEach(function(e) {
          return e(t);
        });
      }, n.prototype.onReject = function(t) {
        console.warn("TBI");
      }, n;
    }()
  );
  var Ad = (
    /** @class */
    function() {
      function n() {
        this.timestamp = (/* @__PURE__ */ new Date()).getTime();
      }
      return n.prototype.print = function(t) {
        var e = (/* @__PURE__ */ new Date()).getTime() - this.timestamp;
        console.info(t + " = " + e), this.timestamp = (/* @__PURE__ */ new Date()).getTime();
      }, n;
    }()
  );
  var Pd = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), us = function() {
    return us = Object.assign || function(n) {
      for (var t, e = 1, r = arguments.length; e < r; e++) {
        t = arguments[e];
        for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
      }
      return n;
    }, us.apply(this, arguments);
  }, bo = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, vt;
  (function(n) {
    n[n.NOTHING = 0] = "NOTHING", n[n.WAITING_TO_SHOW = 1] = "WAITING_TO_SHOW", n[n.SHOWING = 2] = "SHOWING";
  })(vt || (vt = {}));
  var _i = (
    /** @class */
    function(n) {
      Pd(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return r.DEFAULT_SHOW_TOOLTIP_DELAY = 2e3, r.DEFAULT_HIDE_TOOLTIP_DELAY = 1e4, r.SHOW_QUICK_TOOLTIP_DIFF = 1e3, r.FADE_OUT_TOOLTIP_TIMEOUT = 1e3, r.state = vt.NOTHING, r.tooltipInstanceCount = 0, r.tooltipMouseTrack = !1, r.parentComp = e, r;
      }
      return t.prototype.postConstruct = function() {
        this.tooltipShowDelay = this.gridOptionsWrapper.getTooltipDelay("show") || this.DEFAULT_SHOW_TOOLTIP_DELAY, this.tooltipHideDelay = this.gridOptionsWrapper.getTooltipDelay("hide") || this.DEFAULT_HIDE_TOOLTIP_DELAY, this.tooltipMouseTrack = this.gridOptionsWrapper.isTooltipMouseTrack();
        var e = this.parentComp.getGui();
        this.addManagedListener(e, "mouseenter", this.onMouseEnter.bind(this)), this.addManagedListener(e, "mouseleave", this.onMouseLeave.bind(this)), this.addManagedListener(e, "mousemove", this.onMouseMove.bind(this)), this.addManagedListener(e, "mousedown", this.onMouseDown.bind(this)), this.addManagedListener(e, "keydown", this.onKeyDown.bind(this));
      }, t.prototype.destroy = function() {
        this.setToDoNothing(), n.prototype.destroy.call(this);
      }, t.prototype.onMouseEnter = function(e) {
        if (!Hr() && this.state == vt.NOTHING) {
          var r = this.isLastTooltipHiddenRecently() ? 200 : this.tooltipShowDelay;
          this.showTooltipTimeoutId = window.setTimeout(this.showTooltip.bind(this), r), this.lastMouseEvent = e, this.state = vt.WAITING_TO_SHOW;
        }
      }, t.prototype.onMouseLeave = function() {
        this.setToDoNothing();
      }, t.prototype.onKeyDown = function() {
        this.setToDoNothing();
      }, t.prototype.setToDoNothing = function() {
        this.state === vt.SHOWING && this.hideTooltip(), this.clearTimeouts(), this.state = vt.NOTHING;
      }, t.prototype.onMouseMove = function(e) {
        this.lastMouseEvent = e, this.tooltipMouseTrack && this.state === vt.SHOWING && this.tooltipComp && this.positionTooltipUnderLastMouseEvent();
      }, t.prototype.onMouseDown = function() {
        this.setToDoNothing();
      }, t.prototype.hideTooltip = function() {
        this.tooltipComp && (this.destroyTooltipComp(), t.lastTooltipHideTime = (/* @__PURE__ */ new Date()).getTime()), this.state = vt.NOTHING;
      }, t.prototype.destroyTooltipComp = function() {
        var e = this;
        this.tooltipComp.getGui().classList.add("ag-tooltip-hiding");
        var r = this.tooltipPopupDestroyFunc, o = this.tooltipComp;
        window.setTimeout(function() {
          r(), e.getContext().destroyBean(o);
        }, this.FADE_OUT_TOOLTIP_TIMEOUT), this.tooltipPopupDestroyFunc = void 0, this.tooltipComp = void 0;
      }, t.prototype.isLastTooltipHiddenRecently = function() {
        var e = (/* @__PURE__ */ new Date()).getTime(), r = t.lastTooltipHideTime;
        return e - r < this.SHOW_QUICK_TOOLTIP_DIFF;
      }, t.prototype.showTooltip = function() {
        var e = us({}, this.parentComp.getTooltipParams());
        if (!g(e.value)) {
          this.setToDoNothing();
          return;
        }
        this.state = vt.SHOWING, this.tooltipInstanceCount++;
        var r = this.newTooltipComponentCallback.bind(this, this.tooltipInstanceCount), o = this.userComponentFactory.getTooltipCompDetails(e);
        o.newAgStackInstance().then(r);
      }, t.prototype.newTooltipComponentCallback = function(e, r) {
        var o = this.state !== vt.SHOWING || this.tooltipInstanceCount !== e;
        if (o) {
          this.getContext().destroyBean(r);
          return;
        }
        var i = r.getGui();
        this.tooltipComp = r, i.classList.contains("ag-tooltip") || i.classList.add("ag-tooltip-custom");
        var s = this.gridOptionsWrapper.getLocaleTextFunc(), a = this.popupService.addPopup({
          eChild: i,
          ariaLabel: s("ariaLabelTooltip", "Tooltip")
        });
        a && (this.tooltipPopupDestroyFunc = a.hideFunc), this.positionTooltipUnderLastMouseEvent(), this.hideTooltipTimeoutId = window.setTimeout(this.hideTooltip.bind(this), this.tooltipHideDelay);
      }, t.prototype.positionTooltipUnderLastMouseEvent = function() {
        this.popupService.positionPopupUnderMouseEvent({
          type: "tooltip",
          mouseEvent: this.lastMouseEvent,
          ePopup: this.tooltipComp.getGui(),
          nudgeY: 18
        });
      }, t.prototype.clearTimeouts = function() {
        this.showTooltipTimeoutId && (window.clearTimeout(this.showTooltipTimeoutId), this.showTooltipTimeoutId = void 0), this.hideTooltipTimeoutId && (window.clearTimeout(this.hideTooltipTimeoutId), this.hideTooltipTimeoutId = void 0);
      }, bo([
        h("popupService")
      ], t.prototype, "popupService", void 0), bo([
        h("userComponentFactory")
      ], t.prototype, "userComponentFactory", void 0), bo([
        h("columnApi")
      ], t.prototype, "columnApi", void 0), bo([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), bo([
        B
      ], t.prototype, "postConstruct", null), t;
    }(H)
  );
  var Td = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), ps = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Dd = new gr(), dl = (
    /** @class */
    function() {
      function n(t) {
        this.cssClassStates = {}, this.getGui = t;
      }
      return n.prototype.addCssClass = function(t) {
        var e = this, r = (t || "").split(" ");
        if (r.length > 1) {
          r.forEach(function(i) {
            return e.addCssClass(i);
          });
          return;
        }
        var o = this.cssClassStates[t] !== !0;
        o && t.length && (this.getGui().classList.add(t), this.cssClassStates[t] = !0);
      }, n.prototype.removeCssClass = function(t) {
        var e = this, r = (t || "").split(" ");
        if (r.length > 1) {
          r.forEach(function(i) {
            return e.removeCssClass(i);
          });
          return;
        }
        var o = this.cssClassStates[t] !== !1;
        o && t.length && (this.getGui().classList.remove(t), this.cssClassStates[t] = !1);
      }, n.prototype.containsCssClass = function(t) {
        return this.getGui().classList.contains(t);
      }, n.prototype.addOrRemoveCssClass = function(t, e) {
        var r = this, o = (t || "").split(" ");
        if (o.length > 1) {
          o.forEach(function(s) {
            return r.addOrRemoveCssClass(s, e);
          });
          return;
        }
        var i = this.cssClassStates[t] !== e;
        i && t.length && (this.getGui().classList.toggle(t, e), this.cssClassStates[t] = e);
      }, n;
    }()
  ), le = (
    /** @class */
    function(n) {
      Td(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return r.displayed = !0, r.visible = !0, r.compId = Dd.next(), r.cssClassManager = new dl(function() {
          return r.eGui;
        }), e && r.setTemplate(e), r;
      }
      return t.prototype.preConstructOnComponent = function() {
        this.usingBrowserTooltips = this.gridOptionsWrapper.isEnableBrowserTooltips();
      }, t.prototype.getCompId = function() {
        return this.compId;
      }, t.prototype.getTooltipParams = function() {
        return {
          value: this.tooltipText,
          location: "UNKNOWN"
        };
      }, t.prototype.setTooltip = function(e) {
        var r = this, o = function() {
          r.usingBrowserTooltips ? r.getGui().removeAttribute("title") : r.tooltipFeature = r.destroyBean(r.tooltipFeature);
        }, i = function() {
          r.usingBrowserTooltips ? r.getGui().setAttribute("title", r.tooltipText) : r.tooltipFeature = r.createBean(new _i(r));
        };
        this.tooltipText != e && (this.tooltipText && o(), e != null && (this.tooltipText = e, this.tooltipText && i()));
      }, t.prototype.createChildComponentsFromTags = function(e, r) {
        var o = this, i = ka(e.childNodes);
        i.forEach(function(s) {
          if (s instanceof HTMLElement) {
            var a = o.createComponentFromElement(s, function(u) {
              var p = u.getGui();
              p && o.copyAttributesFromNode(s, u.getGui());
            }, r);
            if (a) {
              if (a.addItems && s.children.length) {
                o.createChildComponentsFromTags(s, r);
                var l = Array.prototype.slice.call(s.children);
                a.addItems(l);
              }
              o.swapComponentForNode(a, e, s);
            } else s.childNodes && o.createChildComponentsFromTags(s, r);
          }
        });
      }, t.prototype.createComponentFromElement = function(e, r, o) {
        var i = e.nodeName, s = o ? o[e.getAttribute("ref")] : void 0, a = this.agStackComponentsRegistry.getComponentClass(i);
        if (a) {
          t.elementGettingCreated = e;
          var l = new a(s);
          return l.setParentComponent(this), this.createBean(l, null, r), l;
        }
        return null;
      }, t.prototype.copyAttributesFromNode = function(e, r) {
        Ua(e.attributes, function(o, i) {
          return r.setAttribute(o, i);
        });
      }, t.prototype.swapComponentForNode = function(e, r, o) {
        var i = e.getGui();
        r.replaceChild(i, o), r.insertBefore(document.createComment(o.nodeName), i), this.addDestroyFunc(this.destroyBean.bind(this, e)), this.swapInComponentForQuerySelectors(e, o);
      }, t.prototype.swapInComponentForQuerySelectors = function(e, r) {
        var o = this;
        this.iterateOverQuerySelectors(function(i) {
          o[i.attributeName] === r && (o[i.attributeName] = e);
        });
      }, t.prototype.iterateOverQuerySelectors = function(e) {
        for (var r = Object.getPrototypeOf(this); r != null; ) {
          var o = r.__agComponentMetaData, i = Fr(r.constructor);
          o && o[i] && o[i].querySelectors && o[i].querySelectors.forEach(function(s) {
            return e(s);
          }), r = Object.getPrototypeOf(r);
        }
      }, t.prototype.setTemplate = function(e, r) {
        var o = xe(e);
        this.setTemplateFromElement(o, r);
      }, t.prototype.setTemplateFromElement = function(e, r) {
        this.eGui = e, this.eGui.__agComponent = this, this.wireQuerySelectors(), this.getContext() && this.createChildComponentsFromTags(this.getGui(), r);
      }, t.prototype.createChildComponentsPreConstruct = function() {
        this.getGui() && this.createChildComponentsFromTags(this.getGui());
      }, t.prototype.wireQuerySelectors = function() {
        var e = this;
        if (this.eGui) {
          var r = this;
          this.iterateOverQuerySelectors(function(o) {
            var i = function(l) {
              return r[o.attributeName] = l;
            }, s = o.refSelector && e.eGui.getAttribute("ref") === o.refSelector;
            if (s)
              i(e.eGui);
            else {
              var a = e.eGui.querySelector(o.querySelector);
              a && i(a.__agComponent || a);
            }
          });
        }
      }, t.prototype.getGui = function() {
        return this.eGui;
      }, t.prototype.getFocusableElement = function() {
        return this.eGui;
      }, t.prototype.setParentComponent = function(e) {
        this.parentComponent = e;
      }, t.prototype.getParentComponent = function() {
        return this.parentComponent;
      }, t.prototype.setGui = function(e) {
        this.eGui = e;
      }, t.prototype.queryForHtmlElement = function(e) {
        return this.eGui.querySelector(e);
      }, t.prototype.queryForHtmlInputElement = function(e) {
        return this.eGui.querySelector(e);
      }, t.prototype.appendChild = function(e, r) {
        if (r || (r = this.eGui), e != null)
          if (To(e))
            r.appendChild(e);
          else {
            var o = e;
            r.appendChild(o.getGui()), this.addDestroyFunc(this.destroyBean.bind(this, o));
          }
      }, t.prototype.isDisplayed = function() {
        return this.displayed;
      }, t.prototype.setVisible = function(e) {
        e !== this.visible && (this.visible = e, Ga(this.eGui, e));
      }, t.prototype.setDisplayed = function(e) {
        if (e !== this.displayed) {
          this.displayed = e, Ee(this.eGui, e);
          var r = {
            type: t.EVENT_DISPLAYED_CHANGED,
            visible: this.displayed
          };
          this.dispatchEvent(r);
        }
      }, t.prototype.destroy = function() {
        this.tooltipFeature && (this.tooltipFeature = this.destroyBean(this.tooltipFeature)), n.prototype.destroy.call(this);
      }, t.prototype.addGuiEventListener = function(e, r) {
        var o = this;
        this.eGui.addEventListener(e, r), this.addDestroyFunc(function() {
          return o.eGui.removeEventListener(e, r);
        });
      }, t.prototype.addCssClass = function(e) {
        this.cssClassManager.addCssClass(e);
      }, t.prototype.removeCssClass = function(e) {
        this.cssClassManager.removeCssClass(e);
      }, t.prototype.containsCssClass = function(e) {
        return this.cssClassManager.containsCssClass(e);
      }, t.prototype.addOrRemoveCssClass = function(e, r) {
        this.cssClassManager.addOrRemoveCssClass(e, r);
      }, t.prototype.getAttribute = function(e) {
        var r = this.eGui;
        return r ? r.getAttribute(e) : null;
      }, t.prototype.getRefElement = function(e) {
        return this.queryForHtmlElement('[ref="' + e + '"]');
      }, t.EVENT_DISPLAYED_CHANGED = "displayedChanged", ps([
        h("agStackComponentsRegistry")
      ], t.prototype, "agStackComponentsRegistry", void 0), ps([
        Co
      ], t.prototype, "preConstructOnComponent", null), ps([
        Co
      ], t.prototype, "createChildComponentsPreConstruct", null), t;
    }(H)
  );
  function bd(n) {
    return hl.bind(this, n, void 0);
  }
  function I(n) {
    return hl.bind(this, "[ref=" + n + "]", n);
  }
  function hl(n, t, e, r, o) {
    if (n === null) {
      console.error("AG Grid: QuerySelector selector should not be null");
      return;
    }
    if (typeof o == "number") {
      console.error("AG Grid: QuerySelector should be on an attribute");
      return;
    }
    Fd(e, "querySelectors", {
      attributeName: r,
      querySelector: n,
      refSelector: t
    });
  }
  function Fd(n, t, e) {
    var r = Ld(n, Fr(n.constructor));
    r[t] || (r[t] = []), r[t].push(e);
  }
  function Ld(n, t) {
    return n.__agComponentMetaData || (n.__agComponentMetaData = {}), n.__agComponentMetaData[t] || (n.__agComponentMetaData[t] = {}), n.__agComponentMetaData[t];
  }
  var Md = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), fl = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Id = (
    /** @class */
    function(n) {
      Md(t, n);
      function t() {
        return n.call(
          this,
          /* html */
          `
            <div class="ag-floating-filter-input" role="presentation">
                <ag-input-text-field ref="eFloatingFilterText"></ag-input-text-field>
            </div>`
        ) || this;
      }
      return t.prototype.destroy = function() {
        n.prototype.destroy.call(this);
      }, t.prototype.init = function(e) {
        this.params = e;
        var r = this.columnModel.getDisplayNameForColumn(e.column, "header", !0), o = this.gridOptionsWrapper.getLocaleTextFunc();
        this.eFloatingFilterText.setDisabled(!0).setInputAriaLabel(r + " " + o("ariaFilterInput", "Filter Input"));
      }, t.prototype.onParentModelChanged = function(e) {
        var r = this;
        if (!e) {
          this.eFloatingFilterText.setValue("");
          return;
        }
        this.params.parentFilterInstance(function(o) {
          if (o.getModelAsString) {
            var i = o.getModelAsString(e);
            r.eFloatingFilterText.setValue(i);
          }
        });
      }, fl([
        I("eFloatingFilterText")
      ], t.prototype, "eFloatingFilterText", void 0), fl([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), t;
    }(le)
  );
  var gl = (
    /** @class */
    function() {
      function n(t, e, r, o) {
        var i = this;
        this.alive = !0, this.context = t, this.eParent = o;
        var s = e.getDateCompDetails(r), a = s.newAgStackInstance();
        a.then(function(l) {
          if (!i.alive) {
            t.destroyBean(l);
            return;
          }
          i.dateComp = l, l && (o.appendChild(l.getGui()), l.afterGuiAttached && l.afterGuiAttached(), i.tempValue && l.setDate(i.tempValue), i.disabled != null && i.setDateCompDisabled(i.disabled));
        });
      }
      return n.prototype.destroy = function() {
        this.alive = !1, this.dateComp = this.context.destroyBean(this.dateComp);
      }, n.prototype.getDate = function() {
        return this.dateComp ? this.dateComp.getDate() : this.tempValue;
      }, n.prototype.setDate = function(t) {
        this.dateComp ? this.dateComp.setDate(t) : this.tempValue = t;
      }, n.prototype.setDisabled = function(t) {
        this.dateComp ? this.setDateCompDisabled(t) : this.disabled = t;
      }, n.prototype.setDisplayed = function(t) {
        Ee(this.eParent, t);
      }, n.prototype.setInputPlaceholder = function(t) {
        this.dateComp && this.dateComp.setInputPlaceholder && this.dateComp.setInputPlaceholder(t);
      }, n.prototype.setInputAriaLabel = function(t) {
        this.dateComp && this.dateComp.setInputAriaLabel && this.dateComp.setInputAriaLabel(t);
      }, n.prototype.afterGuiAttached = function(t) {
        this.dateComp && typeof this.dateComp.afterGuiAttached == "function" && this.dateComp.afterGuiAttached(t);
      }, n.prototype.setDateCompDisabled = function(t) {
        this.dateComp != null && this.dateComp.setDisabled != null && this.dateComp.setDisabled(t);
      }, n;
    }()
  );
  var cs = function() {
    return cs = Object.assign || function(n) {
      for (var t, e = 1, r = arguments.length; e < r; e++) {
        t = arguments[e];
        for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
      }
      return n;
    }, cs.apply(this, arguments);
  }, vl = (
    /** @class */
    function() {
      function n() {
        this.customFilterOptions = {};
      }
      return n.prototype.init = function(t, e) {
        this.filterOptions = t.filterOptions || e, this.mapCustomOptions(), this.selectDefaultItem(t), this.checkForDeprecatedParams();
      }, n.prototype.checkForDeprecatedParams = function() {
        this.filterOptions.some(function(t) {
          return typeof t != "string" && t.test != null;
        }) && console.warn("AG Grid: [IFilterOptionDef] since v26.2.0, test() has been replaced with predicate()."), this.filterOptions.some(function(t) {
          return typeof t != "string" && t.hideFilterInput != null;
        }) && console.warn("AG Grid: [IFilterOptionDef] since v26.2.0, useOfHideFilterInput has been replaced with numberOfInputs.");
      }, n.prototype.getFilterOptions = function() {
        return this.filterOptions;
      }, n.prototype.mapCustomOptions = function() {
        var t = this;
        this.filterOptions && this.filterOptions.forEach(function(e) {
          if (typeof e != "string") {
            var r = [["displayKey"], ["displayName"], ["predicate", "test"]], o = function(a) {
              return a.some(function(l) {
                return e[l] != null;
              }) ? !0 : (console.warn("AG Grid: ignoring FilterOptionDef as it doesn't contain one of '" + a + "'"), !1);
            };
            if (!r.every(o)) {
              t.filterOptions = t.filterOptions.filter(function(a) {
                return a === e;
              }) || [];
              return;
            }
            var i = e.test, s = cs({}, e);
            i != null && e.predicate == null && (s.predicate = function(a, l) {
              return i(a[0], l);
            }, delete s.test), s.hideFilterInput && s.numberOfInputs == null && (s.numberOfInputs = 0, delete s.hideFilterInput), t.customFilterOptions[e.displayKey] = s;
          }
        });
      }, n.prototype.selectDefaultItem = function(t) {
        if (t.defaultOption)
          this.defaultOption = t.defaultOption;
        else if (this.filterOptions.length >= 1) {
          var e = this.filterOptions[0];
          typeof e == "string" ? this.defaultOption = e : e.displayKey ? this.defaultOption = e.displayKey : console.warn("AG Grid: invalid FilterOptionDef supplied as it doesn't contain a 'displayKey'");
        } else
          console.warn("AG Grid: no filter options for filter");
      }, n.prototype.getDefaultOption = function() {
        return this.defaultOption;
      }, n.prototype.getCustomOption = function(t) {
        return this.customFilterOptions[t];
      }, n;
    }()
  );
  var Nd = {
    applyFilter: "Apply",
    clearFilter: "Clear",
    resetFilter: "Reset",
    cancelFilter: "Cancel",
    textFilter: "Text Filter",
    numberFilter: "Number Filter",
    dateFilter: "Date Filter",
    setFilter: "Set Filter",
    filterOoo: "Filter...",
    empty: "Choose One",
    equals: "Equals",
    notEqual: "Not equal",
    lessThan: "Less than",
    greaterThan: "Greater than",
    inRange: "In range",
    inRangeStart: "From",
    inRangeEnd: "To",
    lessThanOrEqual: "Less than or equals",
    greaterThanOrEqual: "Greater than or equals",
    contains: "Contains",
    notContains: "Not contains",
    startsWith: "Starts with",
    endsWith: "Ends with",
    blank: "Blank",
    notBlank: "Not blank",
    andCondition: "AND",
    orCondition: "OR",
    dateFormatOoo: "yyyy-mm-dd"
  };
  var N = (
    /** @class */
    function() {
      function n() {
      }
      return n.BACKSPACE = "Backspace", n.TAB = "Tab", n.ENTER = "Enter", n.ESCAPE = "Escape", n.SPACE = " ", n.LEFT = "ArrowLeft", n.UP = "ArrowUp", n.RIGHT = "ArrowRight", n.DOWN = "ArrowDown", n.DELETE = "Delete", n.F2 = "F2", n.PAGE_UP = "PageUp", n.PAGE_DOWN = "PageDown", n.PAGE_HOME = "Home", n.PAGE_END = "End", n.A = "KeyA", n.C = "KeyC", n.V = "KeyV", n.D = "KeyD", n.Z = "KeyZ", n.Y = "KeyY", n;
    }()
  );
  var xd = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), ds = function() {
    return ds = Object.assign || function(n) {
      for (var t, e = 1, r = arguments.length; e < r; e++) {
        t = arguments[e];
        for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
      }
      return n;
    }, ds.apply(this, arguments);
  }, ml = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, kt = (
    /** @class */
    function(n) {
      xd(t, n);
      function t(e, r) {
        r === void 0 && (r = {});
        var o = n.call(this) || this;
        return o.eFocusableElement = e, o.callbacks = r, o.callbacks = ds({ shouldStopEventPropagation: function() {
          return !1;
        }, onTabKeyDown: function(i) {
          if (!i.defaultPrevented) {
            var s = o.focusService.findNextFocusableElement(o.eFocusableElement, !1, i.shiftKey);
            s && (s.focus(), i.preventDefault());
          }
        } }, r), o;
      }
      return t.prototype.postConstruct = function() {
        this.eFocusableElement.classList.add(t.FOCUS_MANAGED_CLASS), this.addKeyDownListeners(this.eFocusableElement), this.callbacks.onFocusIn && this.addManagedListener(this.eFocusableElement, "focusin", this.callbacks.onFocusIn), this.callbacks.onFocusOut && this.addManagedListener(this.eFocusableElement, "focusout", this.callbacks.onFocusOut);
      }, t.prototype.addKeyDownListeners = function(e) {
        var r = this;
        this.addManagedListener(e, "keydown", function(o) {
          if (!(o.defaultPrevented || _t(o))) {
            if (r.callbacks.shouldStopEventPropagation(o)) {
              xr(o);
              return;
            }
            o.key === N.TAB ? r.callbacks.onTabKeyDown(o) : r.callbacks.handleKeyDown && r.callbacks.handleKeyDown(o);
          }
        });
      }, t.FOCUS_MANAGED_CLASS = "ag-focus-managed", ml([
        h("focusService")
      ], t.prototype, "focusService", void 0), ml([
        B
      ], t.prototype, "postConstruct", null), t;
    }(H)
  );
  var Gd = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), hs = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Fo = (
    /** @class */
    function(n) {
      Gd(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return r.filterNameKey = e, r.applyActive = !1, r.hidePopup = null, r.appliedModel = null, r;
      }
      return t.prototype.postConstruct = function() {
        this.resetTemplate(), this.createManagedBean(new kt(this.getFocusableElement(), {
          handleKeyDown: this.handleKeyDown.bind(this)
        }));
      }, t.prototype.handleKeyDown = function(e) {
      }, t.prototype.getFilterTitle = function() {
        return this.translate(this.filterNameKey);
      }, t.prototype.isFilterActive = function() {
        return !!this.appliedModel;
      }, t.prototype.resetTemplate = function(e) {
        var r = (
          /* html */
          `
            <div class="ag-filter-wrapper">
                <div class="ag-filter-body-wrapper ag-` + this.getCssIdentifier() + `-body-wrapper">
                    ` + this.createBodyTemplate() + `
                </div>
            </div>`
        );
        this.setTemplate(r, e);
      }, t.prototype.isReadOnly = function() {
        return !!this.providedFilterParams.readOnly;
      }, t.prototype.init = function(e) {
        var r = this;
        this.setParams(e), this.resetUiToDefaults(!0).then(function() {
          r.updateUiVisibility(), r.setupOnBtApplyDebounce();
        });
      }, t.prototype.setParams = function(e) {
        this.providedFilterParams = e, this.applyActive = t.isUseApplyButton(e), this.createButtonPanel();
      }, t.prototype.createButtonPanel = function() {
        var e = this, r = this.providedFilterParams.buttons;
        if (!(!r || r.length < 1 || this.isReadOnly())) {
          var o = document.createElement("div");
          o.classList.add("ag-filter-apply-panel");
          var i = function(s) {
            var a, l;
            switch (s) {
              case "apply":
                a = e.translate("applyFilter"), l = function(p) {
                  return e.onBtApply(!1, !1, p);
                };
                break;
              case "clear":
                a = e.translate("clearFilter"), l = function() {
                  return e.onBtClear();
                };
                break;
              case "reset":
                a = e.translate("resetFilter"), l = function() {
                  return e.onBtReset();
                };
                break;
              case "cancel":
                a = e.translate("cancelFilter"), l = function(p) {
                  e.onBtCancel(p);
                };
                break;
              default:
                console.warn("AG Grid: Unknown button type specified");
                return;
            }
            var u = xe(
              /* html */
              `<button
                    type="button"
                    ref="` + s + `FilterButton"
                    class="ag-standard-button ag-filter-apply-panel-button"
                >` + a + `
                </button>`
            );
            o.appendChild(u), e.addManagedListener(u, "click", l);
          };
          ls(r).forEach(function(s) {
            return i(s);
          }), this.getGui().appendChild(o);
        }
      }, t.prototype.getDefaultDebounceMs = function() {
        return 0;
      }, t.prototype.setupOnBtApplyDebounce = function() {
        var e = t.getDebounceMs(this.providedFilterParams, this.getDefaultDebounceMs());
        this.onBtApplyDebounce = it(this.onBtApply.bind(this), e);
      }, t.prototype.getModel = function() {
        return this.appliedModel ? this.appliedModel : null;
      }, t.prototype.setModel = function(e) {
        var r = this, o = e != null ? this.setModelIntoUi(e) : this.resetUiToDefaults();
        return o.then(function() {
          r.updateUiVisibility(), r.applyModel();
        });
      }, t.prototype.onBtCancel = function(e) {
        var r = this, o = this.getModel(), i = function() {
          r.onUiChanged(!1, "prevent"), r.providedFilterParams.closeOnApply && r.close(e);
        };
        o != null ? this.setModelIntoUi(o).then(i) : this.resetUiToDefaults().then(i);
      }, t.prototype.onBtClear = function() {
        var e = this;
        this.resetUiToDefaults().then(function() {
          return e.onUiChanged();
        });
      }, t.prototype.onBtReset = function() {
        this.onBtClear(), this.onBtApply();
      }, t.prototype.applyModel = function() {
        var e = this.getModelFromUi();
        if (!this.isModelValid(e))
          return !1;
        var r = this.appliedModel;
        return this.appliedModel = e, !this.areModelsEqual(r, e);
      }, t.prototype.isModelValid = function(e) {
        return !0;
      }, t.prototype.onBtApply = function(e, r, o) {
        e === void 0 && (e = !1), r === void 0 && (r = !1), this.applyModel() && this.providedFilterParams.filterChangedCallback({ afterFloatingFilter: e, afterDataChange: r });
        var i = this.providedFilterParams.closeOnApply;
        i && this.applyActive && !e && !r && this.close(o);
      }, t.prototype.onNewRowsLoaded = function() {
      }, t.prototype.close = function(e) {
        if (this.hidePopup) {
          var r = e, o = r && r.key, i;
          (o === "Enter" || o === "Space") && (i = { keyboardEvent: r }), this.hidePopup(i), this.hidePopup = null;
        }
      }, t.prototype.onUiChanged = function(e, r) {
        if (e === void 0 && (e = !1), this.updateUiVisibility(), this.providedFilterParams.filterModifiedCallback(), this.applyActive && !this.isReadOnly) {
          var o = this.isModelValid(this.getModelFromUi());
          Vr(this.getRefElement("applyFilterButton"), !o);
        }
        e && !r || r === "immediately" ? this.onBtApply(e) : (!this.applyActive && !r || r === "debounce") && this.onBtApplyDebounce();
      }, t.prototype.afterGuiAttached = function(e) {
        e != null && (this.hidePopup = e.hidePopup);
      }, t.getDebounceMs = function(e, r) {
        return t.isUseApplyButton(e) ? (e.debounceMs != null && console.warn("AG Grid: debounceMs is ignored when apply button is present"), 0) : e.debounceMs != null ? e.debounceMs : r;
      }, t.isUseApplyButton = function(e) {
        return !!e.buttons && e.buttons.indexOf("apply") >= 0;
      }, t.prototype.destroy = function() {
        this.hidePopup = null, n.prototype.destroy.call(this);
      }, t.prototype.translate = function(e) {
        var r = this.gridOptionsWrapper.getLocaleTextFunc();
        return r(e, Nd[e]);
      }, t.prototype.getCellValue = function(e) {
        var r = this.providedFilterParams, o = r.api, i = r.colDef, s = r.column, a = r.columnApi, l = r.context;
        return this.providedFilterParams.valueGetter({
          api: o,
          colDef: i,
          column: s,
          columnApi: a,
          context: l,
          data: e.data,
          getValue: function(u) {
            return e.data[u];
          },
          node: e
        });
      }, hs([
        h("rowModel")
      ], t.prototype, "rowModel", void 0), hs([
        h("valueService")
      ], t.prototype, "valueService", void 0), hs([
        B
      ], t.prototype, "postConstruct", null), t;
    }(le)
  );
  var Hd = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Vd = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, fs = (
    /** @class */
    function(n) {
      Hd(t, n);
      function t(e, r) {
        var o = n.call(this, r) || this;
        return o.labelSeparator = "", o.labelAlignment = "left", o.label = "", o.config = e || {}, o;
      }
      return t.prototype.postConstruct = function() {
        this.addCssClass("ag-labeled"), this.eLabel.classList.add("ag-label");
        var e = this.config, r = e.labelSeparator, o = e.label, i = e.labelWidth, s = e.labelAlignment;
        r != null && this.setLabelSeparator(r), o != null && this.setLabel(o), i != null && this.setLabelWidth(i), this.setLabelAlignment(s || this.labelAlignment), this.refreshLabel();
      }, t.prototype.refreshLabel = function() {
        et(this.eLabel), typeof this.label == "string" ? this.eLabel.innerText = this.label + this.labelSeparator : this.label && this.eLabel.appendChild(this.label), this.label === "" ? (this.eLabel.classList.add("ag-hidden"), ke(this.eLabel, "presentation")) : (this.eLabel.classList.remove("ag-hidden"), ke(this.eLabel, null));
      }, t.prototype.setLabelSeparator = function(e) {
        return this.labelSeparator === e ? this : (this.labelSeparator = e, this.label != null && this.refreshLabel(), this);
      }, t.prototype.getLabelId = function() {
        return this.eLabel.id = this.eLabel.id || "ag-" + this.getCompId() + "-label", this.eLabel.id;
      }, t.prototype.getLabel = function() {
        return this.label;
      }, t.prototype.setLabel = function(e) {
        return this.label === e ? this : (this.label = e, this.refreshLabel(), this);
      }, t.prototype.setLabelAlignment = function(e) {
        var r = this.getGui(), o = r.classList;
        return o.toggle("ag-label-align-left", e === "left"), o.toggle("ag-label-align-right", e === "right"), o.toggle("ag-label-align-top", e === "top"), this;
      }, t.prototype.setLabelWidth = function(e) {
        return this.label == null ? this : (Po(this.eLabel, e), this);
      }, Vd([
        B
      ], t.prototype, "postConstruct", null), t;
    }(le)
  );
  var Wd = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Tt = (
    /** @class */
    function(n) {
      Wd(t, n);
      function t(e, r, o) {
        var i = n.call(this, e, r) || this;
        return i.className = o, i.disabled = !1, i;
      }
      return t.prototype.postConstruct = function() {
        n.prototype.postConstruct.call(this), this.className && this.addCssClass(this.className);
      }, t.prototype.onValueChange = function(e) {
        var r = this;
        return this.addManagedListener(this, t.EVENT_CHANGED, function() {
          return e(r.getValue());
        }), this;
      }, t.prototype.getWidth = function() {
        return this.getGui().clientWidth;
      }, t.prototype.setWidth = function(e) {
        return Pt(this.getGui(), e), this;
      }, t.prototype.getPreviousValue = function() {
        return this.previousValue;
      }, t.prototype.getValue = function() {
        return this.value;
      }, t.prototype.setValue = function(e, r) {
        return this.value === e ? this : (this.previousValue = this.value, this.value = e, r || this.dispatchEvent({ type: t.EVENT_CHANGED }), this);
      }, t.prototype.setDisabled = function(e) {
        e = !!e;
        var r = this.getGui();
        return Vr(r, e), r.classList.toggle("ag-disabled", e), this.disabled = e, this;
      }, t.prototype.isDisabled = function() {
        return !!this.disabled;
      }, t.EVENT_CHANGED = "valueChange", t;
    }(fs)
  );
  var Bd = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Oi = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, yl = (
    /** @class */
    function(n) {
      Bd(t, n);
      function t(e, r, o, i) {
        var s = n.call(
          this,
          e,
          /* html */
          `<div class="ag-picker-field" role="presentation">
                <div ref="eLabel"></div>
                <div ref="eWrapper"
                    class="ag-wrapper ag-picker-field-wrapper"
                    tabIndex="-1"
                    aria-expanded="false"
                    ` + (i ? 'role="' + i + '"' : "") + `
                >
                    <div ref="eDisplayField" class="ag-picker-field-display"></div>
                    <div ref="eIcon" class="ag-picker-field-icon" aria-hidden="true"></div>
                </div>
            </div>`,
          r
        ) || this;
        return s.pickerIcon = o, s.isPickerDisplayed = !1, s.isDestroyingPicker = !1, s.skipClick = !1, s;
      }
      return t.prototype.postConstruct = function() {
        var e = this;
        n.prototype.postConstruct.call(this);
        var r = this.getCompId() + "-display";
        this.eDisplayField.setAttribute("id", r), Qn(this.eWrapper, r);
        var o = function() {
          if (e.skipClick) {
            e.skipClick = !1;
            return;
          }
          e.isDisabled() || (e.pickerComponent = e.showPicker());
        }, i = this.getGui();
        if (this.addManagedListener(i, "mousedown", function(a) {
          !e.skipClick && e.pickerComponent && e.pickerComponent.isAlive() && Br(e.pickerComponent.getGui()) && i.contains(a.target) && (e.skipClick = !0);
        }), this.addManagedListener(i, "keydown", function(a) {
          switch (a.key) {
            case N.UP:
            case N.DOWN:
            case N.ENTER:
            case N.SPACE:
              o();
            case N.ESCAPE:
              e.isPickerDisplayed && a.preventDefault();
              break;
          }
        }), this.addManagedListener(this.eWrapper, "click", o), this.addManagedListener(this.eLabel, "click", o), this.pickerIcon) {
          var s = be(this.pickerIcon, this.gridOptionsWrapper);
          s && this.eIcon.appendChild(s);
        }
      }, t.prototype.refreshLabel = function() {
        g(this.getLabel()) ? Xn(this.eWrapper, this.getLabelId()) : this.eWrapper.removeAttribute("aria-labelledby"), n.prototype.refreshLabel.call(this);
      }, t.prototype.setAriaLabel = function(e) {
        return fr(this.eWrapper, e), this;
      }, t.prototype.setInputWidth = function(e) {
        return Po(this.eWrapper, e), this;
      }, t.prototype.getFocusableElement = function() {
        return this.eWrapper;
      }, Oi([
        I("eLabel")
      ], t.prototype, "eLabel", void 0), Oi([
        I("eWrapper")
      ], t.prototype, "eWrapper", void 0), Oi([
        I("eDisplayField")
      ], t.prototype, "eDisplayField", void 0), Oi([
        I("eIcon")
      ], t.prototype, "eIcon", void 0), t;
    }(Tt)
  );
  var kd = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Ud = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Cl = (
    /** @class */
    function(n) {
      kd(t, n);
      function t(e) {
        e === void 0 && (e = "default");
        var r = n.call(
          this,
          /* html */
          '<div class="ag-list ag-' + e + '-list" role="listbox"></div>'
        ) || this;
        return r.cssIdentifier = e, r.options = [], r.itemEls = [], r;
      }
      return t.prototype.init = function() {
        this.addManagedListener(this.getGui(), "keydown", this.handleKeyDown.bind(this));
      }, t.prototype.handleKeyDown = function(e) {
        var r = e.key;
        switch (r) {
          case N.ENTER:
            if (!this.highlightedEl)
              this.setValue(this.getValue());
            else {
              var o = this.itemEls.indexOf(this.highlightedEl);
              this.setValueByIndex(o);
            }
            break;
          case N.DOWN:
          case N.UP:
            var i = r === N.DOWN, s = void 0;
            if (e.preventDefault(), !this.highlightedEl)
              s = this.itemEls[i ? 0 : this.itemEls.length - 1];
            else {
              var a = this.itemEls.indexOf(this.highlightedEl), l = a + (i ? 1 : -1);
              l = Math.min(Math.max(l, 0), this.itemEls.length - 1), s = this.itemEls[l];
            }
            this.highlightItem(s);
            break;
        }
      }, t.prototype.addOptions = function(e) {
        var r = this;
        return e.forEach(function(o) {
          return r.addOption(o);
        }), this;
      }, t.prototype.addOption = function(e) {
        var r = e.value, o = e.text, i = Ot(o || r);
        return this.options.push({ value: r, text: i }), this.renderOption(r, i), this.updateIndices(), this;
      }, t.prototype.updateIndices = function() {
        var e = this.getGui().querySelectorAll(".ag-list-item");
        e.forEach(function(r, o) {
          es(r, o + 1), Jn(r, e.length);
        });
      }, t.prototype.renderOption = function(e, r) {
        var o = this, i = document.createElement("div");
        ke(i, "option"), i.classList.add("ag-list-item", "ag-" + this.cssIdentifier + "-list-item"), i.innerHTML = "<span>" + r + "</span>", i.tabIndex = -1, this.itemEls.push(i), this.addManagedListener(i, "mouseover", function() {
          return o.highlightItem(i);
        }), this.addManagedListener(i, "mouseleave", function() {
          return o.clearHighlighted();
        }), this.addManagedListener(i, "click", function() {
          return o.setValue(e);
        }), this.getGui().appendChild(i);
      }, t.prototype.setValue = function(e, r) {
        if (this.value === e)
          return this.fireItemSelected(), this;
        if (e == null)
          return this.reset(), this;
        var o = this.options.findIndex(function(s) {
          return s.value === e;
        });
        if (o !== -1) {
          var i = this.options[o];
          this.value = i.value, this.displayValue = i.text != null ? i.text : i.value, this.highlightItem(this.itemEls[o]), r || this.fireChangeEvent();
        }
        return this;
      }, t.prototype.setValueByIndex = function(e) {
        return this.setValue(this.options[e].value);
      }, t.prototype.getValue = function() {
        return this.value;
      }, t.prototype.getDisplayValue = function() {
        return this.displayValue;
      }, t.prototype.refreshHighlighted = function() {
        var e = this;
        this.clearHighlighted();
        var r = this.options.findIndex(function(o) {
          return o.value === e.value;
        });
        r !== -1 && this.highlightItem(this.itemEls[r]);
      }, t.prototype.reset = function() {
        this.value = null, this.displayValue = null, this.clearHighlighted(), this.fireChangeEvent();
      }, t.prototype.highlightItem = function(e) {
        e.offsetParent && (this.clearHighlighted(), this.highlightedEl = e, this.highlightedEl.classList.add(t.ACTIVE_CLASS), kr(this.highlightedEl, !0), this.highlightedEl.focus());
      }, t.prototype.clearHighlighted = function() {
        !this.highlightedEl || !this.highlightedEl.offsetParent || (this.highlightedEl.classList.remove(t.ACTIVE_CLASS), kr(this.highlightedEl, !1), this.highlightedEl = null);
      }, t.prototype.fireChangeEvent = function() {
        this.dispatchEvent({ type: Tt.EVENT_CHANGED }), this.fireItemSelected();
      }, t.prototype.fireItemSelected = function() {
        this.dispatchEvent({ type: t.EVENT_ITEM_SELECTED });
      }, t.EVENT_ITEM_SELECTED = "selectedItem", t.ACTIVE_CLASS = "ag-active-item", Ud([
        B
      ], t.prototype, "init", null), t;
    }(le)
  );
  var jd = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), wl = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, gs = (
    /** @class */
    function(n) {
      jd(t, n);
      function t(e) {
        return n.call(this, e, "ag-select", "smallDown", "listbox") || this;
      }
      return t.prototype.init = function() {
        var e = this;
        this.listComponent = this.createBean(new Cl("select")), this.listComponent.setParentComponent(this), this.eWrapper.tabIndex = 0, this.listComponent.addManagedListener(this.listComponent, Cl.EVENT_ITEM_SELECTED, function() {
          e.hideList && e.hideList();
        }), this.listComponent.addManagedListener(this.listComponent, Tt.EVENT_CHANGED, function() {
          e.setValue(e.listComponent.getValue(), !1, !0), e.hideList && e.hideList();
        });
      }, t.prototype.showPicker = function() {
        var e = this, r = this.listComponent.getGui(), o = this.gridOptionsWrapper.getDocument(), i = this.addManagedListener(o.body, "wheel", function(u) {
          !r.contains(u.target) && e.hideList && e.hideList();
        }), s = this.addManagedListener(r, "focusout", function(u) {
          !r.contains(u.relatedTarget) && e.hideList && e.hideList();
        }), a = this.gridOptionsWrapper.getLocaleTextFunc(), l = this.popupService.addPopup({
          modal: !0,
          eChild: r,
          closeOnEsc: !0,
          closedCallback: function() {
            e.hideList = null, e.isPickerDisplayed = !1, s(), i(), e.isAlive() && (tt(e.eWrapper, !1), e.getFocusableElement().focus());
          },
          ariaLabel: a("ariaLabelSelectField", "Select Field")
        });
        return l && (this.hideList = l.hideFunc), this.isPickerDisplayed = !0, Po(r, wi(this.eWrapper)), tt(this.eWrapper, !0), r.style.maxHeight = _o(this.popupService.getPopupParent()) + "px", r.style.position = "absolute", this.popupService.positionPopupUnderComponent({
          type: "ag-list",
          eventSource: this.eWrapper,
          ePopup: r,
          keepWithinBounds: !0
        }), this.listComponent.refreshHighlighted(), this.listComponent;
      }, t.prototype.addOptions = function(e) {
        var r = this;
        return e.forEach(function(o) {
          return r.addOption(o);
        }), this;
      }, t.prototype.addOption = function(e) {
        return this.listComponent.addOption(e), this;
      }, t.prototype.setValue = function(e, r, o) {
        if (this.value === e)
          return this;
        o || this.listComponent.setValue(e, !0);
        var i = this.listComponent.getValue();
        return i === this.getValue() ? this : (this.eDisplayField.innerHTML = this.listComponent.getDisplayValue(), n.prototype.setValue.call(this, e, r));
      }, t.prototype.destroy = function() {
        this.hideList && this.hideList(), this.destroyBean(this.listComponent), n.prototype.destroy.call(this);
      }, wl([
        h("popupService")
      ], t.prototype, "popupService", void 0), wl([
        B
      ], t.prototype, "init", null), t;
    }(yl)
  );
  var zd = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), vs = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Ut = (
    /** @class */
    function(n) {
      zd(t, n);
      function t(e, r, o, i) {
        o === void 0 && (o = "text"), i === void 0 && (i = "input");
        var s = n.call(
          this,
          e,
          /* html */
          `
            <div role="presentation">
                <div ref="eLabel" class="ag-input-field-label"></div>
                <div ref="eWrapper" class="ag-wrapper ag-input-wrapper" role="presentation">
                    <` + i + ' ref="eInput" class="ag-input-field-input"></' + i + `>
                </div>
            </div>`,
          r
        ) || this;
        return s.inputType = o, s.displayFieldTag = i, s;
      }
      return t.prototype.postConstruct = function() {
        n.prototype.postConstruct.call(this), this.setInputType(), this.eLabel.classList.add(this.className + "-label"), this.eWrapper.classList.add(this.className + "-input-wrapper"), this.eInput.classList.add(this.className + "-input"), this.addCssClass("ag-input-field"), this.eInput.id = this.eInput.id || "ag-" + this.getCompId() + "-input";
        var e = this.config, r = e.width, o = e.value;
        r != null && this.setWidth(r), o != null && this.setValue(o), this.addInputListeners();
      }, t.prototype.refreshLabel = function() {
        g(this.getLabel()) ? Xn(this.eInput, this.getLabelId()) : this.eInput.removeAttribute("aria-labelledby"), n.prototype.refreshLabel.call(this);
      }, t.prototype.addInputListeners = function() {
        var e = this;
        this.addManagedListener(this.eInput, "input", function(r) {
          return e.setValue(r.target.value);
        });
      }, t.prototype.setInputType = function() {
        this.displayFieldTag === "input" && this.eInput.setAttribute("type", this.inputType);
      }, t.prototype.getInputElement = function() {
        return this.eInput;
      }, t.prototype.setInputWidth = function(e) {
        return Po(this.eWrapper, e), this;
      }, t.prototype.setInputName = function(e) {
        return this.getInputElement().setAttribute("name", e), this;
      }, t.prototype.getFocusableElement = function() {
        return this.eInput;
      }, t.prototype.setMaxLength = function(e) {
        var r = this.eInput;
        return r.maxLength = e, this;
      }, t.prototype.setInputPlaceholder = function(e) {
        return Do(this.eInput, "placeholder", e), this;
      }, t.prototype.setInputAriaLabel = function(e) {
        return fr(this.eInput, e), this;
      }, t.prototype.setDisabled = function(e) {
        return Vr(this.eInput, e), n.prototype.setDisabled.call(this, e);
      }, vs([
        I("eLabel")
      ], t.prototype, "eLabel", void 0), vs([
        I("eWrapper")
      ], t.prototype, "eWrapper", void 0), vs([
        I("eInput")
      ], t.prototype, "eInput", void 0), t;
    }(Tt)
  );
  var $d = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), vr = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Ue;
  (function(n) {
    n[n.One = 0] = "One", n[n.Two = 1] = "Two";
  })(Ue || (Ue = {}));
  var Ae = (
    /** @class */
    function(n) {
      $d(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.getNumberOfInputs = function(e) {
        var r = this.optionsFactory.getCustomOption(e);
        if (r) {
          var o = r.numberOfInputs;
          return o ?? 1;
        }
        var i = [
          t.EMPTY,
          t.NOT_BLANK,
          t.BLANK
        ];
        return e && i.indexOf(e) >= 0 ? 0 : e === t.IN_RANGE ? 2 : 1;
      }, t.prototype.onFloatingFilterChanged = function(e, r) {
        this.setTypeFromFloatingFilter(e), this.setValueFromFloatingFilter(r), this.onUiChanged(!0);
      }, t.prototype.setTypeFromFloatingFilter = function(e) {
        this.eType1.setValue(e), this.eType2.setValue(this.optionsFactory.getDefaultOption()), (this.isDefaultOperator("AND") ? this.eJoinOperatorAnd : this.eJoinOperatorOr).setValue(!0);
      }, t.prototype.getModelFromUi = function() {
        return this.isConditionUiComplete(Ue.One) ? this.isAllowTwoConditions() && this.isConditionUiComplete(Ue.Two) ? {
          filterType: this.getFilterType(),
          operator: this.getJoinOperator(),
          condition1: this.createCondition(Ue.One),
          condition2: this.createCondition(Ue.Two)
        } : this.createCondition(Ue.One) : null;
      }, t.prototype.getConditionTypes = function() {
        return [
          this.eType1.getValue(),
          this.eType2.getValue()
        ];
      }, t.prototype.getJoinOperator = function() {
        return this.eJoinOperatorOr.getValue() === !0 ? "OR" : "AND";
      }, t.prototype.areModelsEqual = function(e, r) {
        if (!e && !r)
          return !0;
        if (!e && r || e && !r)
          return !1;
        var o = !e.operator, i = !r.operator, s = !o && i || o && !i;
        if (s)
          return !1;
        var a;
        if (o) {
          var l = e, u = r;
          a = this.areSimpleModelsEqual(l, u);
        } else {
          var p = e, d = r;
          a = p.operator === d.operator && this.areSimpleModelsEqual(p.condition1, d.condition1) && this.areSimpleModelsEqual(p.condition2, d.condition2);
        }
        return a;
      }, t.prototype.setModelIntoUi = function(e) {
        var r = e.operator;
        if (r) {
          var o = e, i = o.operator === "OR";
          this.eJoinOperatorAnd.setValue(!i), this.eJoinOperatorOr.setValue(i), this.eType1.setValue(o.condition1.type), this.eType2.setValue(o.condition2.type), this.setConditionIntoUi(o.condition1, Ue.One), this.setConditionIntoUi(o.condition2, Ue.Two);
        } else {
          var s = e;
          this.eJoinOperatorAnd.setValue(this.isDefaultOperator("AND")), this.eJoinOperatorOr.setValue(this.isDefaultOperator("OR")), this.eType1.setValue(s.type), this.eType2.setValue(this.optionsFactory.getDefaultOption()), this.setConditionIntoUi(s, Ue.One), this.setConditionIntoUi(null, Ue.Two);
        }
        return Qe.resolve();
      }, t.prototype.doesFilterPass = function(e) {
        var r = this, o = this.getModel();
        if (o == null)
          return !0;
        var i = o.operator, s = [];
        if (i) {
          var a = o;
          s.push(a.condition1, a.condition2);
        } else
          s.push(o);
        var l = i && i === "OR" ? "some" : "every";
        return s[l](function(u) {
          return r.individualConditionPasses(e, u);
        });
      }, t.prototype.setParams = function(e) {
        n.prototype.setParams.call(this, e), this.optionsFactory = new vl(), this.optionsFactory.init(e, this.getDefaultFilterOptions()), this.allowTwoConditions = !e.suppressAndOrCondition, this.alwaysShowBothConditions = !!e.alwaysShowBothConditions, this.defaultJoinOperator = this.getDefaultJoinOperator(e.defaultJoinOperator), this.putOptionsIntoDropdown(), this.addChangedListeners();
      }, t.prototype.getDefaultJoinOperator = function(e) {
        return Le(["AND", "OR"], e) ? e : "AND";
      }, t.prototype.putOptionsIntoDropdown = function() {
        var e = this, r = this.optionsFactory.getFilterOptions(), o = [this.eType1, this.eType2];
        r.forEach(function(i) {
          var s = typeof i == "string" ? e.createBoilerplateListOption(i) : e.createCustomListOption(i);
          o.forEach(function(a) {
            return a.addOption(s);
          });
        }), o.forEach(function(i) {
          return i.setDisabled(r.length <= 1);
        });
      }, t.prototype.createBoilerplateListOption = function(e) {
        return { value: e, text: this.translate(e) };
      }, t.prototype.createCustomListOption = function(e) {
        var r = e.displayKey, o = this.optionsFactory.getCustomOption(e.displayKey);
        return {
          value: r,
          text: o ? this.gridOptionsWrapper.getLocaleTextFunc()(o.displayKey, o.displayName) : this.translate(r)
        };
      }, t.prototype.isAllowTwoConditions = function() {
        return this.allowTwoConditions;
      }, t.prototype.createBodyTemplate = function() {
        return (
          /* html */
          `
            <ag-select class="ag-filter-select" ref="eOptions1"></ag-select>
            ` + this.createValueTemplate(Ue.One) + `
            <div class="ag-filter-condition" ref="eJoinOperatorPanel">
               <ag-radio-button ref="eJoinOperatorAnd" class="ag-filter-condition-operator ag-filter-condition-operator-and"></ag-radio-button>
               <ag-radio-button ref="eJoinOperatorOr" class="ag-filter-condition-operator ag-filter-condition-operator-or"></ag-radio-button>
            </div>
            <ag-select class="ag-filter-select" ref="eOptions2"></ag-select>
            ` + this.createValueTemplate(Ue.Two)
        );
      }, t.prototype.getCssIdentifier = function() {
        return "simple-filter";
      }, t.prototype.updateUiVisibility = function() {
        var e = this, r = [
          [this.eType1],
          [this.eType2, this.eJoinOperatorPanel, this.eJoinOperatorAnd, this.eJoinOperatorOr]
        ], o = [this.eCondition1Body, this.eCondition2Body];
        r.forEach(function(i, s) {
          var a = e.isConditionVisible(s), l = e.isConditionDisabled(s);
          i.forEach(function(u) {
            u instanceof Ut || u instanceof gs ? (u.setDisabled(l), u.setDisplayed(a)) : (Vr(u, l), Ee(u, a));
          });
        }), o.forEach(function(i, s) {
          Ee(i, e.isConditionBodyVisible(s));
        }), this.forEachInput(function(i, s, a, l) {
          e.setElementDisplayed(i, s < l), e.setElementDisabled(i, e.isConditionDisabled(a));
        }), this.resetPlaceholder();
      }, t.prototype.afterGuiAttached = function(e) {
        if (n.prototype.afterGuiAttached.call(this, e), this.resetPlaceholder(), !e || !e.suppressFocus && !this.isReadOnly()) {
          var r = this.getInputs()[0][0];
          if (!r)
            return;
          r instanceof Ut && r.getInputElement().focus();
        }
      }, t.prototype.resetPlaceholder = function() {
        var e = this, r = this.gridOptionsWrapper.getLocaleTextFunc();
        this.forEachInput(function(o, i, s, a) {
          if (o instanceof Ut) {
            var l = i === 0 && a > 1 ? "inRangeStart" : i === 0 ? "filterOoo" : "inRangeEnd", u = i === 0 && a > 1 ? r("ariaFilterFromValue", "Filter from value") : i === 0 ? r("ariaFilterValue", "Filter Value") : r("ariaFilterToValue", "Filter to Value");
            o.setInputPlaceholder(e.translate(l)), o.setInputAriaLabel(u);
          }
        });
      }, t.prototype.setElementValue = function(e, r, o) {
        e instanceof Ut && e.setValue(r != null ? String(r) : null, o);
      }, t.prototype.setElementDisplayed = function(e, r) {
        e instanceof le && Ee(e.getGui(), r);
      }, t.prototype.setElementDisabled = function(e, r) {
        e instanceof le && Vr(e.getGui(), r);
      }, t.prototype.attachElementOnChange = function(e, r) {
        e instanceof Ut && e.onValueChange(r);
      }, t.prototype.forEachInput = function(e) {
        var r = this, o = this.getInputs();
        this.getConditionTypes().forEach(function(i, s) {
          for (var a = r.getNumberOfInputs(i), l = 0; l < o[s].length; l++) {
            var u = o[s][l];
            u != null && e(u, l, s, a);
          }
        });
      }, t.prototype.isConditionVisible = function(e) {
        return e === 0 ? !0 : this.allowTwoConditions ? this.isReadOnly() ? this.isConditionUiComplete(e) : this.alwaysShowBothConditions ? !0 : this.isConditionUiComplete(e - 1) : !1;
      }, t.prototype.isConditionDisabled = function(e) {
        return this.isReadOnly() || !this.isConditionVisible(e) ? !0 : e === 0 ? !1 : !this.isConditionUiComplete(e - 1);
      }, t.prototype.isConditionBodyVisible = function(e) {
        if (!this.isConditionVisible(e))
          return !1;
        var r = this.getConditionTypes()[e], o = this.getNumberOfInputs(r);
        return o > 0;
      }, t.prototype.isConditionUiComplete = function(e) {
        var r = this.getConditionTypes()[e];
        return !(r === t.EMPTY || this.getValues(e).some(function(o) {
          return o == null;
        }));
      }, t.prototype.resetUiToDefaults = function(e) {
        var r = this, o = this.gridOptionsWrapper.getLocaleTextFunc(), i = o("ariaFilteringOperator", "Filtering operator"), s = "ag-simple-filter-and-or-" + this.getCompId(), a = this.optionsFactory.getDefaultOption();
        return this.eType1.setValue(a, e).setAriaLabel(i).setDisabled(this.isReadOnly()), this.eType2.setValue(this.optionsFactory.getDefaultOption(), e).setAriaLabel(i).setDisabled(this.isReadOnly()), this.eJoinOperatorAnd.setValue(this.isDefaultOperator("AND"), e).setName(s).setLabel(this.translate("andCondition")).setDisabled(this.isReadOnly()), this.eJoinOperatorOr.setValue(this.isDefaultOperator("OR"), e).setName(s).setLabel(this.translate("orCondition")).setDisabled(this.isReadOnly()), this.forEachInput(function(l) {
          r.setElementValue(l, null, e), r.setElementDisabled(l, r.isReadOnly());
        }), this.resetPlaceholder(), Qe.resolve();
      }, t.prototype.setConditionIntoUi = function(e, r) {
        var o = this, i = this.mapValuesFromModel(e);
        this.forEachInput(function(s, a, l, u) {
          l === r && o.setElementValue(s, i[a] != null ? i[a] : null);
        });
      }, t.prototype.setValueFromFloatingFilter = function(e) {
        var r = this;
        this.forEachInput(function(o, i, s, a) {
          r.setElementValue(o, i === 0 && s === 0 ? e : null);
        });
      }, t.prototype.isDefaultOperator = function(e) {
        return e === this.defaultJoinOperator;
      }, t.prototype.addChangedListeners = function() {
        var e = this;
        if (!this.isReadOnly()) {
          var r = function() {
            return e.onUiChanged();
          };
          this.eType1.onValueChange(r), this.eType2.onValueChange(r), this.eJoinOperatorOr.onValueChange(r), this.eJoinOperatorAnd.onValueChange(r), this.forEachInput(function(o) {
            e.attachElementOnChange(o, r);
          });
        }
      }, t.prototype.individualConditionPasses = function(e, r) {
        var o = this.getCellValue(e.node), i = this.mapValuesFromModel(r), s = this.optionsFactory.getCustomOption(r.type), a = this.evaluateCustomFilter(s, i, o);
        return a ?? (o == null ? this.evaluateNullValue(r.type) : this.evaluateNonNullValue(i, o, r, e));
      }, t.prototype.evaluateCustomFilter = function(e, r, o) {
        if (e != null) {
          var i = e.predicate;
          if (i != null && !r.some(function(s) {
            return s == null;
          }))
            return i(r, o);
        }
      }, t.prototype.isBlank = function(e) {
        return e == null || typeof e == "string" && e.trim().length === 0;
      }, t.EMPTY = "empty", t.BLANK = "blank", t.NOT_BLANK = "notBlank", t.EQUALS = "equals", t.NOT_EQUAL = "notEqual", t.LESS_THAN = "lessThan", t.LESS_THAN_OR_EQUAL = "lessThanOrEqual", t.GREATER_THAN = "greaterThan", t.GREATER_THAN_OR_EQUAL = "greaterThanOrEqual", t.IN_RANGE = "inRange", t.CONTAINS = "contains", t.NOT_CONTAINS = "notContains", t.STARTS_WITH = "startsWith", t.ENDS_WITH = "endsWith", vr([
        I("eOptions1")
      ], t.prototype, "eType1", void 0), vr([
        I("eOptions2")
      ], t.prototype, "eType2", void 0), vr([
        I("eJoinOperatorPanel")
      ], t.prototype, "eJoinOperatorPanel", void 0), vr([
        I("eJoinOperatorAnd")
      ], t.prototype, "eJoinOperatorAnd", void 0), vr([
        I("eJoinOperatorOr")
      ], t.prototype, "eJoinOperatorOr", void 0), vr([
        I("eCondition1Body")
      ], t.prototype, "eCondition1Body", void 0), vr([
        I("eCondition2Body")
      ], t.prototype, "eCondition2Body", void 0), t;
    }(Fo)
  );
  var Kd = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Ie = (
    /** @class */
    function(n) {
      Kd(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.setParams = function(e) {
        n.prototype.setParams.call(this, e), this.scalarFilterParams = e;
      }, t.prototype.evaluateNullValue = function(e) {
        switch (e) {
          case t.EQUALS:
          case t.NOT_EQUAL:
            if (this.scalarFilterParams.includeBlanksInEquals)
              return !0;
            break;
          case t.GREATER_THAN:
          case t.GREATER_THAN_OR_EQUAL:
            if (this.scalarFilterParams.includeBlanksInGreaterThan)
              return !0;
            break;
          case t.LESS_THAN:
          case t.LESS_THAN_OR_EQUAL:
            if (this.scalarFilterParams.includeBlanksInLessThan)
              return !0;
            break;
          case t.IN_RANGE:
            if (this.scalarFilterParams.includeBlanksInRange)
              return !0;
            break;
          case t.BLANK:
            return !0;
          case t.NOT_BLANK:
            return !1;
        }
        return !1;
      }, t.prototype.evaluateNonNullValue = function(e, r, o) {
        var i = this.comparator(), s = e[0] != null ? i(e[0], r) : 0;
        switch (o.type) {
          case t.EQUALS:
            return s === 0;
          case t.NOT_EQUAL:
            return s !== 0;
          case t.GREATER_THAN:
            return s > 0;
          case t.GREATER_THAN_OR_EQUAL:
            return s >= 0;
          case t.LESS_THAN:
            return s < 0;
          case t.LESS_THAN_OR_EQUAL:
            return s <= 0;
          case t.IN_RANGE: {
            var a = i(e[1], r);
            return this.scalarFilterParams.inRangeInclusive ? s >= 0 && a <= 0 : s > 0 && a < 0;
          }
          case t.BLANK:
            return this.isBlank(r);
          case t.NOT_BLANK:
            return !this.isBlank(r);
          default:
            return console.warn('AG Grid: Unexpected type of filter "' + o.type + '", it looks like the filter was configured with incorrect Filter Options'), !0;
        }
      }, t;
    }(Ae)
  );
  var Yd = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), ms = function() {
    return ms = Object.assign || function(n) {
      for (var t, e = 1, r = arguments.length; e < r; e++) {
        t = arguments[e];
        for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
      }
      return n;
    }, ms.apply(this, arguments);
  }, Lo = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, El = 1e3, Rl = 1 / 0, ys = (
    /** @class */
    function(n) {
      Yd(t, n);
      function t() {
        var e = n.call(this, "dateFilter") || this;
        return e.minValidYear = El, e.maxValidYear = Rl, e;
      }
      return t.prototype.afterGuiAttached = function(e) {
        n.prototype.afterGuiAttached.call(this, e), this.dateCondition1FromComp.afterGuiAttached(e);
      }, t.prototype.mapValuesFromModel = function(e) {
        var r = e || {}, o = r.dateFrom, i = r.dateTo, s = r.type;
        return [
          o && Zt(o) || null,
          i && Zt(i) || null
        ].slice(0, this.getNumberOfInputs(s));
      }, t.prototype.comparator = function() {
        return this.dateFilterParams.comparator ? this.dateFilterParams.comparator : this.defaultComparator.bind(this);
      }, t.prototype.defaultComparator = function(e, r) {
        var o = r;
        return r == null || o < e ? -1 : o > e ? 1 : 0;
      }, t.prototype.setParams = function(e) {
        n.prototype.setParams.call(this, e), this.dateFilterParams = e;
        var r = function(o, i) {
          if (e[o] != null)
            if (isNaN(e[o]))
              console.warn("AG Grid: DateFilter " + o + " is not a number");
            else
              return e[o] == null ? i : Number(e[o]);
          return i;
        };
        this.minValidYear = r("minValidYear", El), this.maxValidYear = r("maxValidYear", Rl), this.minValidYear > this.maxValidYear && console.warn("AG Grid: DateFilter minValidYear should be <= maxValidYear"), this.createDateComponents();
      }, t.prototype.createDateComponents = function() {
        var e = this, r = function(o) {
          return new gl(e.getContext(), e.userComponentFactory, {
            onDateChanged: function() {
              return e.onUiChanged();
            },
            filterParams: e.dateFilterParams
          }, o);
        };
        this.dateCondition1FromComp = r(this.eCondition1PanelFrom), this.dateCondition1ToComp = r(this.eCondition1PanelTo), this.dateCondition2FromComp = r(this.eCondition2PanelFrom), this.dateCondition2ToComp = r(this.eCondition2PanelTo), this.addDestroyFunc(function() {
          e.forEachInput(function(o) {
            return o.destroy();
          });
        });
      }, t.prototype.setElementValue = function(e, r, o) {
        e.setDate(r);
      }, t.prototype.setElementDisplayed = function(e, r) {
        e.setDisplayed(r);
      }, t.prototype.setElementDisabled = function(e, r) {
        e.setDisabled(r);
      }, t.prototype.getDefaultFilterOptions = function() {
        return t.DEFAULT_FILTER_OPTIONS;
      }, t.prototype.createValueTemplate = function(e) {
        var r = e === Ue.One ? "1" : "2";
        return (
          /* html */
          `
            <div class="ag-filter-body" ref="eCondition` + r + `Body">
                <div class="ag-filter-from ag-filter-date-from" ref="eCondition` + r + `PanelFrom"></div>
                <div class="ag-filter-to ag-filter-date-to" ref="eCondition` + r + `PanelTo"></div>
            </div>`
        );
      }, t.prototype.isConditionUiComplete = function(e) {
        var r = this;
        if (!n.prototype.isConditionUiComplete.call(this, e))
          return !1;
        var o = function(s) {
          return s != null && s.getUTCFullYear() >= r.minValidYear && s.getUTCFullYear() <= r.maxValidYear;
        }, i = !0;
        return this.forEachInput(function(s, a, l, u) {
          l !== e || !i || a >= u || (i = i && o(s.getDate()));
        }), i;
      }, t.prototype.areSimpleModelsEqual = function(e, r) {
        return e.dateFrom === r.dateFrom && e.dateTo === r.dateTo && e.type === r.type;
      }, t.prototype.getFilterType = function() {
        return "date";
      }, t.prototype.createCondition = function(e) {
        var r = this.getConditionTypes()[e], o = {}, i = this.getValues(e);
        return i.length > 0 && (o.dateFrom = Qt(i[0])), i.length > 1 && (o.dateTo = Qt(i[1])), ms({ dateFrom: null, dateTo: null, filterType: this.getFilterType(), type: r }, o);
      }, t.prototype.resetPlaceholder = function() {
        var e = this.gridOptionsWrapper.getLocaleTextFunc(), r = this.translate("dateFormatOoo"), o = e("ariaFilterValue", "Filter Value");
        this.forEachInput(function(i) {
          i.setInputPlaceholder(r), i.setInputAriaLabel(o);
        });
      }, t.prototype.getInputs = function() {
        return [
          [this.dateCondition1FromComp, this.dateCondition1ToComp],
          [this.dateCondition2FromComp, this.dateCondition2ToComp]
        ];
      }, t.prototype.getValues = function(e) {
        var r = [];
        return this.forEachInput(function(o, i, s, a) {
          e === s && i < a && r.push(o.getDate());
        }), r;
      }, t.DEFAULT_FILTER_OPTIONS = [
        Ie.EQUALS,
        Ie.GREATER_THAN,
        Ie.LESS_THAN,
        Ie.NOT_EQUAL,
        Ie.IN_RANGE,
        Ie.BLANK,
        Ie.NOT_BLANK
      ], Lo([
        I("eCondition1PanelFrom")
      ], t.prototype, "eCondition1PanelFrom", void 0), Lo([
        I("eCondition1PanelTo")
      ], t.prototype, "eCondition1PanelTo", void 0), Lo([
        I("eCondition2PanelFrom")
      ], t.prototype, "eCondition2PanelFrom", void 0), Lo([
        I("eCondition2PanelTo")
      ], t.prototype, "eCondition2PanelTo", void 0), Lo([
        h("userComponentFactory")
      ], t.prototype, "userComponentFactory", void 0), t;
    }(Ie)
  );
  var qd = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Sl = (
    /** @class */
    function(n) {
      qd(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.getDefaultDebounceMs = function() {
        return 0;
      }, t.prototype.destroy = function() {
        n.prototype.destroy.call(this);
      }, t.prototype.getTextFromModel = function(e) {
        if (!e)
          return null;
        var r = e.operator != null;
        if (r) {
          var o = e, i = o || {}, s = i.condition1, a = i.condition2, l = this.optionsFactory.getCustomOption(s.type), u = this.optionsFactory.getCustomOption(a.type);
          return [
            this.conditionToString(s, l),
            o.operator,
            this.conditionToString(a, u)
          ].join(" ");
        } else {
          var p = e, d = this.optionsFactory.getCustomOption(p.type), f = d || {}, v = f.displayKey, y = f.displayName, R = f.numberOfInputs;
          return v && y && R === 0 ? (this.gridOptionsWrapper.getLocaleTextFunc()(v, y), y) : this.conditionToString(p, d);
        }
      }, t.prototype.isEventFromFloatingFilter = function(e) {
        return e && e.afterFloatingFilter;
      }, t.prototype.getLastType = function() {
        return this.lastType;
      }, t.prototype.isReadOnly = function() {
        return this.readOnly;
      }, t.prototype.setLastTypeFromModel = function(e) {
        if (!e) {
          this.lastType = this.optionsFactory.getDefaultOption();
          return;
        }
        var r = e.operator, o;
        if (r) {
          var i = e;
          o = i.condition1;
        } else
          o = e;
        this.lastType = o.type;
      }, t.prototype.canWeEditAfterModelFromParentFilter = function(e) {
        if (!e)
          return this.isTypeEditable(this.lastType);
        var r = e.operator;
        if (r)
          return !1;
        var o = e;
        return this.isTypeEditable(o.type);
      }, t.prototype.init = function(e) {
        this.optionsFactory = new vl(), this.optionsFactory.init(e.filterParams, this.getDefaultFilterOptions()), this.lastType = this.optionsFactory.getDefaultOption(), this.readOnly = !!e.filterParams.readOnly;
        var r = this.isTypeEditable(this.lastType);
        this.setEditable(r);
      }, t.prototype.doesFilterHaveSingleInput = function(e) {
        var r = this.optionsFactory.getCustomOption(e), o = (r || {}).numberOfInputs;
        return o == null || o == 1;
      }, t.prototype.isTypeEditable = function(e) {
        var r = [
          Ae.IN_RANGE,
          Ae.EMPTY,
          Ae.BLANK,
          Ae.NOT_BLANK
        ];
        return !!e && !this.isReadOnly() && this.doesFilterHaveSingleInput(e) && r.indexOf(e) < 0;
      }, t;
    }(le)
  );
  var Xd = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Cs = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Qd = (
    /** @class */
    function(n) {
      Xd(t, n);
      function t() {
        return n.call(
          this,
          /* html */
          `
            <div class="ag-floating-filter-input" role="presentation">
                <ag-input-text-field ref="eReadOnlyText"></ag-input-text-field>
                <div ref="eDateWrapper" style="display: flex;"></div>
            </div>`
        ) || this;
      }
      return t.prototype.getDefaultFilterOptions = function() {
        return ys.DEFAULT_FILTER_OPTIONS;
      }, t.prototype.conditionToString = function(e, r) {
        var o = e.type, i = (r || {}).numberOfInputs, s = o == Ae.IN_RANGE || i === 2, a = Zt(e.dateFrom), l = Zt(e.dateTo);
        return s ? Qt(a, !1) + "-" + Qt(l, !1) : a != null ? "" + Qt(a, !1) : "" + o;
      }, t.prototype.init = function(e) {
        n.prototype.init.call(this, e), this.params = e, this.createDateComponent();
        var r = this.gridOptionsWrapper.getLocaleTextFunc();
        this.eReadOnlyText.setDisabled(!0).setInputAriaLabel(r("ariaDateFilterInput", "Date Filter Input"));
      }, t.prototype.setEditable = function(e) {
        Ee(this.eDateWrapper, e), Ee(this.eReadOnlyText.getGui(), !e);
      }, t.prototype.onParentModelChanged = function(e, r) {
        if (!this.isEventFromFloatingFilter(r)) {
          n.prototype.setLastTypeFromModel.call(this, e);
          var o = !this.isReadOnly() && this.canWeEditAfterModelFromParentFilter(e);
          if (this.setEditable(o), o) {
            if (e) {
              var i = e;
              this.dateComp.setDate(Zt(i.dateFrom));
            } else
              this.dateComp.setDate(null);
            this.eReadOnlyText.setValue("");
          } else
            this.eReadOnlyText.setValue(this.getTextFromModel(e)), this.dateComp.setDate(null);
        }
      }, t.prototype.onDateChanged = function() {
        var e = this, r = this.dateComp.getDate(), o = Qt(r);
        this.params.parentFilterInstance(function(i) {
          if (i) {
            var s = Zt(o);
            i.onFloatingFilterChanged(e.getLastType() || null, s);
          }
        });
      }, t.prototype.createDateComponent = function() {
        var e = this, r = Fo.getDebounceMs(this.params.filterParams, this.getDefaultDebounceMs()), o = {
          onDateChanged: it(this.onDateChanged.bind(this), r),
          filterParams: this.params.column.getColDef().filterParams
        };
        this.dateComp = new gl(this.getContext(), this.userComponentFactory, o, this.eDateWrapper), this.addDestroyFunc(function() {
          return e.dateComp.destroy();
        });
      }, Cs([
        h("userComponentFactory")
      ], t.prototype, "userComponentFactory", void 0), Cs([
        I("eReadOnlyText")
      ], t.prototype, "eReadOnlyText", void 0), Cs([
        I("eDateWrapper")
      ], t.prototype, "eDateWrapper", void 0), t;
    }(Sl)
  );
  var Zd = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Jd = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, eh = (
    /** @class */
    function(n) {
      Zd(t, n);
      function t() {
        return n.call(
          this,
          /* html */
          `
            <div class="ag-filter-filter">
                <ag-input-text-field class="ag-date-filter" ref="eDateInput"></ag-input-text-field>
            </div>`
        ) || this;
      }
      return t.prototype.destroy = function() {
        n.prototype.destroy.call(this);
      }, t.prototype.init = function(e) {
        var r = this, o = this.gridOptionsWrapper.getDocument(), i = this.eDateInput.getInputElement();
        this.shouldUseBrowserDatePicker(e) && (i.type = "date"), this.addManagedListener(i, "mousedown", function() {
          r.eDateInput.isDisabled() || i.focus();
        }), this.addManagedListener(i, "input", function(u) {
          u.target === o.activeElement && (r.eDateInput.isDisabled() || e.onDateChanged());
        });
        var s = e.filterParams || {}, a = s.minValidYear, l = s.maxValidYear;
        a && (i.min = a + "-01-01"), l && (i.max = l + "-12-31");
      }, t.prototype.getDate = function() {
        return Zt(this.eDateInput.getValue());
      }, t.prototype.setDate = function(e) {
        this.eDateInput.setValue(Qt(e, !1));
      }, t.prototype.setInputPlaceholder = function(e) {
        this.eDateInput.setInputPlaceholder(e);
      }, t.prototype.setDisabled = function(e) {
        this.eDateInput.setDisabled(e);
      }, t.prototype.afterGuiAttached = function(e) {
        (!e || !e.suppressFocus) && this.eDateInput.getInputElement().focus();
      }, t.prototype.shouldUseBrowserDatePicker = function(e) {
        return e.filterParams && e.filterParams.browserDatePicker != null ? e.filterParams.browserDatePicker : So() || Wn();
      }, Jd([
        I("eDateInput")
      ], t.prototype, "eDateInput", void 0), t;
    }(le)
  );
  var th = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Ai = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, ws = (
    /** @class */
    function(n) {
      th(t, n);
      function t() {
        return n.call(this, "numberFilter") || this;
      }
      return t.prototype.mapValuesFromModel = function(e) {
        var r = e || {}, o = r.filter, i = r.filterTo, s = r.type;
        return [
          o ?? null,
          i ?? null
        ].slice(0, this.getNumberOfInputs(s));
      }, t.prototype.getDefaultDebounceMs = function() {
        return 500;
      }, t.prototype.comparator = function() {
        return function(e, r) {
          return e === r ? 0 : e < r ? 1 : -1;
        };
      }, t.prototype.setParams = function(e) {
        this.numberFilterParams = e;
        var r = this.getAllowedCharPattern();
        if (r) {
          var o = { allowedCharPattern: r };
          this.resetTemplate({
            "eValue-index0-1": o,
            "eValue-index1-1": o,
            "eValue-index0-2": o,
            "eValue-index1-2": o
          });
        }
        n.prototype.setParams.call(this, e);
      }, t.prototype.getDefaultFilterOptions = function() {
        return t.DEFAULT_FILTER_OPTIONS;
      }, t.prototype.createValueTemplate = function(e) {
        var r = e === Ue.One ? "1" : "2", o = this.getAllowedCharPattern(), i = o ? "ag-input-text-field" : "ag-input-number-field";
        return (
          /* html */
          `
            <div class="ag-filter-body" ref="eCondition` + r + `Body" role="presentation">
                <` + i + ' class="ag-filter-from ag-filter-filter" ref="eValue-index0-' + r + '"></' + i + `>
                <` + i + ' class="ag-filter-to ag-filter-filter" ref="eValue-index1-' + r + '"></' + i + `>
            </div>`
        );
      }, t.prototype.getValues = function(e) {
        var r = this, o = [];
        return this.forEachInput(function(i, s, a, l) {
          e === a && s < l && o.push(r.stringToFloat(i.getValue()));
        }), o;
      }, t.prototype.areSimpleModelsEqual = function(e, r) {
        return e.filter === r.filter && e.filterTo === r.filterTo && e.type === r.type;
      }, t.prototype.getFilterType = function() {
        return "number";
      }, t.prototype.stringToFloat = function(e) {
        if (typeof e == "number")
          return e;
        var r = w(e);
        return r != null && r.trim() === "" && (r = null), this.numberFilterParams.numberParser ? this.numberFilterParams.numberParser(r) : r == null || r.trim() === "-" ? null : parseFloat(r);
      }, t.prototype.createCondition = function(e) {
        var r = this.getConditionTypes()[e], o = {
          filterType: this.getFilterType(),
          type: r
        }, i = this.getValues(e);
        return i.length > 0 && (o.filter = i[0]), i.length > 1 && (o.filterTo = i[1]), o;
      }, t.prototype.getInputs = function() {
        return [
          [this.eValueFrom1, this.eValueTo1],
          [this.eValueFrom2, this.eValueTo2]
        ];
      }, t.prototype.getAllowedCharPattern = function() {
        var e = (this.numberFilterParams || {}).allowedCharPattern;
        return e || (!So() && !gi() ? "\\d\\-\\." : null);
      }, t.DEFAULT_FILTER_OPTIONS = [
        Ie.EQUALS,
        Ie.NOT_EQUAL,
        Ie.LESS_THAN,
        Ie.LESS_THAN_OR_EQUAL,
        Ie.GREATER_THAN,
        Ie.GREATER_THAN_OR_EQUAL,
        Ie.IN_RANGE,
        Ie.BLANK,
        Ie.NOT_BLANK
      ], Ai([
        I("eValue-index0-1")
      ], t.prototype, "eValueFrom1", void 0), Ai([
        I("eValue-index1-1")
      ], t.prototype, "eValueTo1", void 0), Ai([
        I("eValue-index0-2")
      ], t.prototype, "eValueFrom2", void 0), Ai([
        I("eValue-index1-2")
      ], t.prototype, "eValueTo2", void 0), t;
    }(Ie)
  );
  var rh = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Pi = function() {
    return Pi = Object.assign || function(n) {
      for (var t, e = 1, r = arguments.length; e < r; e++) {
        t = arguments[e];
        for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
      }
      return n;
    }, Pi.apply(this, arguments);
  }, Ti = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Di = (
    /** @class */
    function(n) {
      rh(t, n);
      function t() {
        return n.call(this, "textFilter") || this;
      }
      return t.trimInput = function(e) {
        var r = e && e.trim();
        return r === "" ? e : r;
      }, t.prototype.getDefaultDebounceMs = function() {
        return 500;
      }, t.prototype.setParams = function(e) {
        n.prototype.setParams.call(this, e), this.textFilterParams = e, this.matcher = this.getTextMatcher(), this.formatter = this.textFilterParams.textFormatter || (this.textFilterParams.caseSensitive ? t.DEFAULT_FORMATTER : t.DEFAULT_LOWERCASE_FORMATTER);
      }, t.prototype.getTextMatcher = function() {
        var e = this.textFilterParams.textCustomComparator;
        return e ? (re.doOnce(function() {
          return console.warn("AG Grid - textCustomComparator is deprecated, use textMatcher instead.");
        }, "textCustomComparator.deprecated"), function(r) {
          var o = r.filterOption, i = r.value, s = r.filterText;
          return e(o, i, s);
        }) : this.textFilterParams.textMatcher || t.DEFAULT_MATCHER;
      }, t.prototype.createCondition = function(e) {
        var r = this.getConditionTypes()[e], o = {
          filterType: this.getFilterType(),
          type: r
        }, i = this.getValues(e);
        return i.length > 0 && (o.filter = i[0]), i.length > 1 && (o.filterTo = i[1]), o;
      }, t.prototype.getFilterType = function() {
        return "text";
      }, t.prototype.areSimpleModelsEqual = function(e, r) {
        return e.filter === r.filter && e.filterTo === r.filterTo && e.type === r.type;
      }, t.prototype.getInputs = function() {
        return [
          [this.eValueFrom1, this.eValueTo1],
          [this.eValueFrom2, this.eValueTo2]
        ];
      }, t.prototype.getValues = function(e) {
        var r = this, o = [];
        return this.forEachInput(function(i, s, a, l) {
          if (e === a && s < l) {
            var u = w(i.getValue()), p = (r.textFilterParams.trimInput ? t.trimInput(u) : u) || null;
            o.push(p), i.setValue(p, !0);
          }
        }), o;
      }, t.prototype.getDefaultFilterOptions = function() {
        return t.DEFAULT_FILTER_OPTIONS;
      }, t.prototype.createValueTemplate = function(e) {
        var r = e === Ue.One ? "1" : "2";
        return (
          /* html */
          `
            <div class="ag-filter-body" ref="eCondition` + r + `Body" role="presentation">
                <ag-input-text-field class=".ag-filter-from ag-filter-filter" ref="eValue-index0-` + r + `"></ag-input-text-field>
                <ag-input-text-field class="ag-filter-to ag-filter-filter" ref="eValue-index1-` + r + `"></ag-input-text-field>
            </div>`
        );
      }, t.prototype.mapValuesFromModel = function(e) {
        var r = e || {}, o = r.filter, i = r.filterTo, s = r.type;
        return [
          o || null,
          i || null
        ].slice(0, this.getNumberOfInputs(s));
      }, t.prototype.evaluateNullValue = function(e) {
        var r = [
          Ae.NOT_EQUAL,
          Ae.NOT_CONTAINS,
          Ae.BLANK
        ];
        return e ? r.indexOf(e) >= 0 : !1;
      }, t.prototype.evaluateNonNullValue = function(e, r, o, i) {
        var s = this, a = e.map(function(D) {
          return s.formatter(D);
        }) || [], l = this.formatter(r), u = this.textFilterParams, p = u.api, d = u.colDef, f = u.column, v = u.columnApi, y = u.context, R = u.textFormatter;
        if (o.type === Ae.BLANK)
          return this.isBlank(r);
        if (o.type === Ae.NOT_BLANK)
          return !this.isBlank(r);
        var _ = {
          api: p,
          colDef: d,
          column: f,
          columnApi: v,
          context: y,
          node: i.node,
          data: i.data,
          filterOption: o.type,
          value: l,
          textFormatter: R
        };
        return a.some(function(D) {
          return s.matcher(Pi(Pi({}, _), { filterText: D }));
        });
      }, t.DEFAULT_FILTER_OPTIONS = [
        Ae.CONTAINS,
        Ae.NOT_CONTAINS,
        Ae.EQUALS,
        Ae.NOT_EQUAL,
        Ae.STARTS_WITH,
        Ae.ENDS_WITH,
        Ae.BLANK,
        Ae.NOT_BLANK
      ], t.DEFAULT_FORMATTER = function(e) {
        return e;
      }, t.DEFAULT_LOWERCASE_FORMATTER = function(e) {
        return e == null ? null : e.toString().toLowerCase();
      }, t.DEFAULT_MATCHER = function(e) {
        var r = e.filterOption, o = e.value, i = e.filterText;
        if (i == null)
          return !1;
        switch (r) {
          case t.CONTAINS:
            return o.indexOf(i) >= 0;
          case t.NOT_CONTAINS:
            return o.indexOf(i) < 0;
          case t.EQUALS:
            return o === i;
          case t.NOT_EQUAL:
            return o != i;
          case t.STARTS_WITH:
            return o.indexOf(i) === 0;
          case t.ENDS_WITH:
            var s = o.lastIndexOf(i);
            return s >= 0 && s === o.length - i.length;
          default:
            return !1;
        }
      }, Ti([
        I("eValue-index0-1")
      ], t.prototype, "eValueFrom1", void 0), Ti([
        I("eValue-index1-1")
      ], t.prototype, "eValueTo1", void 0), Ti([
        I("eValue-index0-2")
      ], t.prototype, "eValueFrom2", void 0), Ti([
        I("eValue-index1-2")
      ], t.prototype, "eValueTo2", void 0), t;
    }(Ae)
  );
  var oh = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Es = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, _l = (
    /** @class */
    function(n) {
      oh(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.postConstruct = function() {
        this.resetTemplate();
      }, t.prototype.resetTemplate = function(e) {
        this.setTemplate(
          /* html */
          `
            <div class="ag-floating-filter-input" role="presentation">
                <ag-input-text-field ref="eFloatingFilterInput"></ag-input-text-field>
            </div>
        `,
          e
        );
      }, t.prototype.getDefaultDebounceMs = function() {
        return 500;
      }, t.prototype.onParentModelChanged = function(e, r) {
        this.isEventFromFloatingFilter(r) || (this.setLastTypeFromModel(e), this.eFloatingFilterInput.setValue(this.getTextFromModel(e)), this.setEditable(this.canWeEditAfterModelFromParentFilter(e)));
      }, t.prototype.init = function(e) {
        n.prototype.init.call(this, e), this.params = e, this.applyActive = Fo.isUseApplyButton(this.params.filterParams);
        var r = this.params.filterParams.allowedCharPattern;
        if (r != null && this.resetTemplate({ eFloatingFilterInput: { allowedCharPattern: r } }), !this.isReadOnly()) {
          var o = Fo.getDebounceMs(this.params.filterParams, this.getDefaultDebounceMs()), i = it(this.syncUpWithParentFilter.bind(this), o), s = this.eFloatingFilterInput.getGui();
          this.addManagedListener(s, "input", i), this.addManagedListener(s, "keypress", i), this.addManagedListener(s, "keydown", i);
        }
        var a = e.column.getDefinition();
        (this.isReadOnly() || a.filterParams && a.filterParams.filterOptions && a.filterParams.filterOptions.length === 1 && a.filterParams.filterOptions[0] === "inRange") && this.eFloatingFilterInput.setDisabled(!0);
        var l = this.columnModel.getDisplayNameForColumn(e.column, "header", !0), u = this.gridOptionsWrapper.getLocaleTextFunc();
        this.eFloatingFilterInput.setInputAriaLabel(l + " " + u("ariaFilterInput", "Filter Input"));
      }, t.prototype.syncUpWithParentFilter = function(e) {
        var r = this, o = e.key === N.ENTER;
        if (!(this.applyActive && !o)) {
          var i = this.eFloatingFilterInput.getValue();
          this.params.filterParams.trimInput && (i = Di.trimInput(i), this.eFloatingFilterInput.setValue(i, !0)), this.params.parentFilterInstance(function(s) {
            s && s.onFloatingFilterChanged(r.getLastType() || null, i || null);
          });
        }
      }, t.prototype.conditionToString = function(e, r) {
        var o = (r || {}).numberOfInputs, i = e.type == Ae.IN_RANGE || o === 2;
        return i ? e.filter + "-" + e.filterTo : e.filter != null ? "" + e.filter : "" + e.type;
      }, t.prototype.setEditable = function(e) {
        this.eFloatingFilterInput.setDisabled(!e);
      }, Es([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), Es([
        I("eFloatingFilterInput")
      ], t.prototype, "eFloatingFilterInput", void 0), Es([
        B
      ], t.prototype, "postConstruct", null), t;
    }(Sl)
  );
  var ih = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), nh = (
    /** @class */
    function(n) {
      ih(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.getDefaultFilterOptions = function() {
        return ws.DEFAULT_FILTER_OPTIONS;
      }, t;
    }(_l)
  );
  var sh = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Ol = (
    /** @class */
    function(n) {
      sh(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.getDefaultFilterOptions = function() {
        return Di.DEFAULT_FILTER_OPTIONS;
      }, t;
    }(_l)
  );
  var at = (
    /** @class */
    function() {
      function n(t, e) {
        var r = this;
        e === void 0 && (e = !1), this.destroyFuncs = [], this.touching = !1, this.eventService = new nt(), this.eElement = t, this.preventMouseClick = e;
        var o = this.onTouchStart.bind(this), i = this.onTouchMove.bind(this), s = this.onTouchEnd.bind(this);
        this.eElement.addEventListener("touchstart", o, { passive: !0 }), this.eElement.addEventListener("touchmove", i, { passive: !0 }), this.eElement.addEventListener("touchend", s, { passive: !1 }), this.destroyFuncs.push(function() {
          r.eElement.removeEventListener("touchstart", o, { passive: !0 }), r.eElement.removeEventListener("touchmove", i, { passive: !0 }), r.eElement.removeEventListener("touchend", s, { passive: !1 });
        });
      }
      return n.prototype.getActiveTouch = function(t) {
        for (var e = 0; e < t.length; e++) {
          var r = t[e].identifier === this.touchStart.identifier;
          if (r)
            return t[e];
        }
        return null;
      }, n.prototype.addEventListener = function(t, e) {
        this.eventService.addEventListener(t, e);
      }, n.prototype.removeEventListener = function(t, e) {
        this.eventService.removeEventListener(t, e);
      }, n.prototype.onTouchStart = function(t) {
        var e = this;
        if (!this.touching) {
          this.touchStart = t.touches[0], this.touching = !0, this.moved = !1;
          var r = this.touchStart;
          window.setTimeout(function() {
            var o = e.touchStart === r;
            if (e.touching && o && !e.moved) {
              e.moved = !0;
              var i = {
                type: n.EVENT_LONG_TAP,
                touchStart: e.touchStart,
                touchEvent: t
              };
              e.eventService.dispatchEvent(i);
            }
          }, 500);
        }
      }, n.prototype.onTouchMove = function(t) {
        if (this.touching) {
          var e = this.getActiveTouch(t.touches);
          if (e) {
            var r = !as(e, this.touchStart, 4);
            r && (this.moved = !0);
          }
        }
      }, n.prototype.onTouchEnd = function(t) {
        if (this.touching) {
          if (!this.moved) {
            var e = {
              type: n.EVENT_TAP,
              touchStart: this.touchStart
            };
            this.eventService.dispatchEvent(e), this.checkForDoubleTap();
          }
          this.preventMouseClick && t.preventDefault(), this.touching = !1;
        }
      }, n.prototype.checkForDoubleTap = function() {
        var t = (/* @__PURE__ */ new Date()).getTime();
        if (this.lastTapTime && this.lastTapTime > 0) {
          var e = t - this.lastTapTime;
          if (e > n.DOUBLE_TAP_MILLIS) {
            var r = {
              type: n.EVENT_DOUBLE_TAP,
              touchStart: this.touchStart
            };
            this.eventService.dispatchEvent(r), this.lastTapTime = null;
          } else
            this.lastTapTime = t;
        } else
          this.lastTapTime = t;
      }, n.prototype.destroy = function() {
        this.destroyFuncs.forEach(function(t) {
          return t();
        });
      }, n.EVENT_TAP = "tap", n.EVENT_DOUBLE_TAP = "doubleTap", n.EVENT_LONG_TAP = "longTap", n.DOUBLE_TAP_MILLIS = 500, n;
    }()
  );
  var ah = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Dt = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, lh = (
    /** @class */
    function(n) {
      ah(t, n);
      function t() {
        var e = n !== null && n.apply(this, arguments) || this;
        return e.lastMovingChanged = 0, e;
      }
      return t.prototype.destroy = function() {
        n.prototype.destroy.call(this);
      }, t.prototype.refresh = function(e) {
        return this.params = e, this.workOutTemplate() != this.currentTemplate || this.workOutShowMenu() != this.currentShowMenu || this.workOutSort() != this.currentSort ? !1 : (this.setDisplayName(e), !0);
      }, t.prototype.workOutTemplate = function() {
        var e = b(this.params.template, t.TEMPLATE);
        return e = e && e.trim ? e.trim() : e, e;
      }, t.prototype.init = function(e) {
        this.params = e, this.currentTemplate = this.workOutTemplate(), this.setTemplate(this.currentTemplate), this.setupTap(), this.setupIcons(e.column), this.setMenu(), this.setupSort(), this.setupFilterIcon(), this.setDisplayName(e);
      }, t.prototype.setDisplayName = function(e) {
        if (this.currentDisplayName != e.displayName) {
          this.currentDisplayName = e.displayName;
          var r = Ot(this.currentDisplayName);
          this.eText && (this.eText.innerHTML = r);
        }
      }, t.prototype.setupIcons = function(e) {
        this.addInIcon("sortAscending", this.eSortAsc, e), this.addInIcon("sortDescending", this.eSortDesc, e), this.addInIcon("sortUnSort", this.eSortNone, e), this.addInIcon("menu", this.eMenu, e), this.addInIcon("filter", this.eFilter, e);
      }, t.prototype.addInIcon = function(e, r, o) {
        if (r != null) {
          var i = be(e, this.gridOptionsWrapper, o);
          i && r.appendChild(i);
        }
      }, t.prototype.setupTap = function() {
        var e = this, r = this.gridOptionsWrapper;
        if (!r.isSuppressTouch()) {
          var o = new at(this.getGui(), !0), i = r.isSuppressMenuHide(), s = i && g(this.eMenu), a = s ? new at(this.eMenu, !0) : o;
          if (this.params.enableMenu) {
            var l = s ? "EVENT_TAP" : "EVENT_LONG_TAP", u = function(d) {
              r.getApi().showColumnMenuAfterMouseClick(e.params.column, d.touchStart);
            };
            this.addManagedListener(a, at[l], u);
          }
          if (this.params.enableSorting) {
            var p = function(d) {
              var f = d.touchStart.target;
              i && e.eMenu.contains(f) || e.sortController.progressSort(e.params.column, !1, "uiColumnSorted");
            };
            this.addManagedListener(o, at.EVENT_TAP, p);
          }
          this.addDestroyFunc(function() {
            return o.destroy();
          }), s && this.addDestroyFunc(function() {
            return a.destroy();
          });
        }
      }, t.prototype.workOutShowMenu = function() {
        var e = !this.gridOptionsWrapper.isSuppressMenuHide(), r = Hr() && e, o = this.params.enableMenu && !r;
        return o;
      }, t.prototype.setMenu = function() {
        var e = this;
        if (this.eMenu) {
          if (this.currentShowMenu = this.workOutShowMenu(), !this.currentShowMenu) {
            gt(this.eMenu);
            return;
          }
          var r = this.gridOptionsWrapper.isSuppressMenuHide();
          this.addManagedListener(this.eMenu, "click", function() {
            return e.showMenu(e.eMenu);
          }), this.eMenu.classList.toggle("ag-header-menu-always-show", r);
        }
      }, t.prototype.showMenu = function(e) {
        e || (e = this.eMenu), this.menuFactory.showMenuAfterButtonClick(this.params.column, e, "columnMenu");
      }, t.prototype.removeSortIcons = function() {
        gt(this.eSortAsc), gt(this.eSortDesc), gt(this.eSortNone), gt(this.eSortOrder);
      }, t.prototype.workOutSort = function() {
        return this.params.enableSorting;
      }, t.prototype.setupSort = function() {
        var e = this;
        if (this.currentSort = this.params.enableSorting, !this.currentSort) {
          this.removeSortIcons();
          return;
        }
        var r = this.gridOptionsWrapper.isMultiSortKeyCtrl();
        this.addManagedListener(this.params.column, A.EVENT_MOVING_CHANGED, function() {
          e.lastMovingChanged = (/* @__PURE__ */ new Date()).getTime();
        }), this.eLabel && this.addManagedListener(this.eLabel, "click", function(o) {
          var i = e.params.column.isMoving(), s = (/* @__PURE__ */ new Date()).getTime(), a = s - e.lastMovingChanged < 50, l = i || a;
          if (!l) {
            var u = r ? o.ctrlKey || o.metaKey : o.shiftKey;
            e.params.progressSort(u);
          }
        }), this.addManagedListener(this.params.column, A.EVENT_SORT_CHANGED, this.onSortChanged.bind(this)), this.onSortChanged(), this.addManagedListener(this.eventService, m.EVENT_SORT_CHANGED, this.setMultiSortOrder.bind(this)), this.setMultiSortOrder();
      }, t.prototype.onSortChanged = function() {
        if (this.addOrRemoveCssClass("ag-header-cell-sorted-asc", this.params.column.isSortAscending()), this.addOrRemoveCssClass("ag-header-cell-sorted-desc", this.params.column.isSortDescending()), this.addOrRemoveCssClass("ag-header-cell-sorted-none", this.params.column.isSortNone()), this.eSortAsc && this.eSortAsc.classList.toggle("ag-hidden", !this.params.column.isSortAscending()), this.eSortDesc && this.eSortDesc.classList.toggle("ag-hidden", !this.params.column.isSortDescending()), this.eSortNone) {
          var e = !this.params.column.getColDef().unSortIcon && !this.gridOptionsWrapper.isUnSortIcon();
          this.eSortNone.classList.toggle("ag-hidden", e || !this.params.column.isSortNone());
        }
      }, t.prototype.setMultiSortOrder = function() {
        if (this.eSortOrder) {
          var e = this.params.column, r = this.sortController.getColumnsWithSortingOrdered(), o = r.indexOf(e), i = r.length > 1, s = e.isSorting() && i;
          Ee(this.eSortOrder, s), o >= 0 ? this.eSortOrder.innerHTML = (o + 1).toString() : et(this.eSortOrder);
        }
      }, t.prototype.setupFilterIcon = function() {
        this.eFilter && (this.addManagedListener(this.params.column, A.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this)), this.onFilterChanged());
      }, t.prototype.onFilterChanged = function() {
        var e = this.params.column.isFilterActive();
        this.eFilter.classList.toggle("ag-hidden", !e);
      }, t.TEMPLATE = `<div class="ag-cell-label-container" role="presentation">
            <span ref="eMenu" class="ag-header-icon ag-header-cell-menu-button" aria-hidden="true"></span>
            <div ref="eLabel" class="ag-header-cell-label" role="presentation">
                <span ref="eText" class="ag-header-cell-text"></span>
                <span ref="eFilter" class="ag-header-icon ag-header-label-icon ag-filter-icon" aria-hidden="true"></span>
                <span ref="eSortOrder" class="ag-header-icon ag-header-label-icon ag-sort-order" aria-hidden="true"></span>
                <span ref="eSortAsc" class="ag-header-icon ag-header-label-icon ag-sort-ascending-icon" aria-hidden="true"></span>
                <span ref="eSortDesc" class="ag-header-icon ag-header-label-icon ag-sort-descending-icon" aria-hidden="true"></span>
                <span ref="eSortNone" class="ag-header-icon ag-header-label-icon ag-sort-none-icon" aria-hidden="true"></span>
            </div>
        </div>`, Dt([
        h("sortController")
      ], t.prototype, "sortController", void 0), Dt([
        h("menuFactory")
      ], t.prototype, "menuFactory", void 0), Dt([
        I("eFilter")
      ], t.prototype, "eFilter", void 0), Dt([
        I("eSortAsc")
      ], t.prototype, "eSortAsc", void 0), Dt([
        I("eSortDesc")
      ], t.prototype, "eSortDesc", void 0), Dt([
        I("eSortNone")
      ], t.prototype, "eSortNone", void 0), Dt([
        I("eSortOrder")
      ], t.prototype, "eSortOrder", void 0), Dt([
        I("eMenu")
      ], t.prototype, "eMenu", void 0), Dt([
        I("eLabel")
      ], t.prototype, "eLabel", void 0), Dt([
        I("eText")
      ], t.prototype, "eText", void 0), t;
    }(le)
  );
  var uh = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Rs = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, ph = (
    /** @class */
    function(n) {
      uh(t, n);
      function t() {
        return n.call(this, t.TEMPLATE) || this;
      }
      return t.prototype.destroy = function() {
        n.prototype.destroy.call(this);
      }, t.prototype.init = function(e) {
        this.params = e, this.checkWarnings(), this.setupLabel(), this.addGroupExpandIcon(), this.setupExpandIcons();
      }, t.prototype.checkWarnings = function() {
        var e = this.params;
        if (e.template) {
          var r = "AG Grid: A template was provided for Header Group Comp - templates are only supported for Header Comps (not groups)";
          me(function() {
            return console.warn(r);
          }, "HeaderGroupComp.templateNotSupported");
        }
      }, t.prototype.setupExpandIcons = function() {
        var e = this;
        this.addInIcon("columnGroupOpened", "agOpened"), this.addInIcon("columnGroupClosed", "agClosed");
        var r = function(s) {
          if (!_t(s)) {
            var a = !e.params.columnGroup.isExpanded();
            e.columnModel.setColumnGroupOpened(e.params.columnGroup.getProvidedColumnGroup(), a, "uiColumnExpanded");
          }
        };
        this.addTouchAndClickListeners(this.eCloseIcon, r), this.addTouchAndClickListeners(this.eOpenIcon, r);
        var o = function(s) {
          xr(s);
        };
        this.addManagedListener(this.eCloseIcon, "dblclick", o), this.addManagedListener(this.eOpenIcon, "dblclick", o), this.addManagedListener(this.getGui(), "dblclick", r), this.updateIconVisibility();
        var i = this.params.columnGroup.getProvidedColumnGroup();
        this.addManagedListener(i, _e.EVENT_EXPANDED_CHANGED, this.updateIconVisibility.bind(this)), this.addManagedListener(i, _e.EVENT_EXPANDABLE_CHANGED, this.updateIconVisibility.bind(this));
      }, t.prototype.addTouchAndClickListeners = function(e, r) {
        var o = new at(e, !0);
        this.addManagedListener(o, at.EVENT_TAP, r), this.addDestroyFunc(function() {
          return o.destroy();
        }), this.addManagedListener(e, "click", r);
      }, t.prototype.updateIconVisibility = function() {
        var e = this.params.columnGroup;
        if (e.isExpandable()) {
          var r = this.params.columnGroup.isExpanded();
          Ee(this.eOpenIcon, r), Ee(this.eCloseIcon, !r);
        } else
          Ee(this.eOpenIcon, !1), Ee(this.eCloseIcon, !1);
      }, t.prototype.addInIcon = function(e, r) {
        var o = be(e, this.gridOptionsWrapper, null);
        o && this.getRefElement(r).appendChild(o);
      }, t.prototype.addGroupExpandIcon = function() {
        if (!this.params.columnGroup.isExpandable()) {
          Ee(this.eOpenIcon, !1), Ee(this.eCloseIcon, !1);
          return;
        }
      }, t.prototype.setupLabel = function() {
        var e = this.params.displayName;
        if (g(e)) {
          var r = Ot(e);
          this.getRefElement("agLabel").innerHTML = r;
        }
      }, t.TEMPLATE = `<div class="ag-header-group-cell-label" ref="agContainer" role="presentation">
            <span ref="agLabel" class="ag-header-group-text" role="presentation"></span>
            <span ref="agOpened" class="ag-header-icon ag-header-expand-icon ag-header-expand-icon-expanded"></span>
            <span ref="agClosed" class="ag-header-icon ag-header-expand-icon ag-header-expand-icon-collapsed"></span>
        </div>`, Rs([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), Rs([
        I("agOpened")
      ], t.prototype, "eOpenIcon", void 0), Rs([
        I("agClosed")
      ], t.prototype, "eCloseIcon", void 0), t;
    }(le)
  );
  var ch = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Ur = (
    /** @class */
    function(n) {
      ch(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.isPopup = function() {
        return !0;
      }, t.prototype.setParentComponent = function(e) {
        e.addCssClass("ag-has-popup"), n.prototype.setParentComponent.call(this, e);
      }, t.prototype.destroy = function() {
        var e = this.parentComponent, r = e && e.isAlive();
        r && e.getGui().classList.remove("ag-has-popup"), n.prototype.destroy.call(this);
      }, t;
    }(le)
  );
  var dh = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), hh = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Al = (
    /** @class */
    function(n) {
      dh(t, n);
      function t() {
        return n.call(this, t.TEMPLATE) || this;
      }
      return t.prototype.init = function(e) {
        this.params = e, this.focusAfterAttached = e.cellStartedEdit, this.eTextArea.setMaxLength(e.maxLength || 200).setCols(e.cols || 60).setRows(e.rows || 10), g(e.value) && this.eTextArea.setValue(e.value.toString(), !0), this.addGuiEventListener("keydown", this.onKeyDown.bind(this));
      }, t.prototype.onKeyDown = function(e) {
        var r = e.key;
        (r === N.LEFT || r === N.UP || r === N.RIGHT || r === N.DOWN || e.shiftKey && r === N.ENTER) && e.stopPropagation();
      }, t.prototype.afterGuiAttached = function() {
        var e = this.gridOptionsWrapper.getLocaleTextFunc();
        this.eTextArea.setInputAriaLabel(e("ariaInputEditor", "Input Editor")), this.focusAfterAttached && this.eTextArea.getFocusableElement().focus();
      }, t.prototype.getValue = function() {
        return this.params.parseValue(this.eTextArea.getValue());
      }, t.TEMPLATE = `<div class="ag-large-text" tabindex="0">
            <ag-input-text-area ref="eTextArea" class="ag-large-text-input"></ag-input-text-area>
        </div>`, hh([
        I("eTextArea")
      ], t.prototype, "eTextArea", void 0), t;
    }(Ur)
  );
  var fh = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Pl = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Ss = (
    /** @class */
    function(n) {
      fh(t, n);
      function t() {
        var e = n.call(this, '<div class="ag-cell-edit-wrapper"><ag-select class="ag-cell-editor" ref="eSelect"></ag-select></div>') || this;
        return e.startedByEnter = !1, e;
      }
      return t.prototype.init = function(e) {
        var r = this;
        if (this.focusAfterAttached = e.cellStartedEdit, C(e.values)) {
          console.warn("AG Grid: no values found for select cellEditor");
          return;
        }
        this.startedByEnter = e.eventKey != null ? e.eventKey === N.ENTER : !1;
        var o = !1;
        e.values.forEach(function(i) {
          var s = { value: i }, a = r.valueFormatterService.formatValue(e.column, null, null, i), l = a != null;
          s.text = l ? a : i, r.eSelect.addOption(s), o = o || e.value === i;
        }), o ? this.eSelect.setValue(e.value, !0) : e.values.length && this.eSelect.setValue(e.values[0], !0), this.gridOptionsWrapper.isFullRowEdit() || this.eSelect.onValueChange(function() {
          return e.stopEditing();
        });
      }, t.prototype.afterGuiAttached = function() {
        this.focusAfterAttached && this.eSelect.getFocusableElement().focus(), this.startedByEnter && this.eSelect.showPicker();
      }, t.prototype.focusIn = function() {
        this.eSelect.getFocusableElement().focus();
      }, t.prototype.getValue = function() {
        return this.eSelect.getValue();
      }, t.prototype.isPopup = function() {
        return !1;
      }, Pl([
        h("valueFormatterService")
      ], t.prototype, "valueFormatterService", void 0), Pl([
        I("eSelect")
      ], t.prototype, "eSelect", void 0), t;
    }(Ur)
  );
  var gh = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Tl = (
    /** @class */
    function(n) {
      gh(t, n);
      function t() {
        var e = n.call(this) || this;
        return me(function() {
          return console.warn('AG Grid: The PopupSelectCellEditor (agPopupSelectCellEditor) is deprecated. Instead use {cellEditor: "agSelectCellEditor", cellEditorPopup: true} ');
        }, "PopupSelectCellEditor.deprecated"), e;
      }
      return t.prototype.isPopup = function() {
        return !0;
      }, t;
    }(Ss)
  );
  var vh = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), mh = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, bi = (
    /** @class */
    function(n) {
      vh(t, n);
      function t() {
        return n.call(this, t.TEMPLATE) || this;
      }
      return t.prototype.init = function(e) {
        this.params = e;
        var r = this.eInput, o;
        e.cellStartedEdit ? (this.focusAfterAttached = !0, e.eventKey === N.BACKSPACE || e.eventKey === N.DELETE ? o = "" : e.charPress ? o = e.charPress : (o = this.getStartValue(e), e.eventKey !== N.F2 && (this.highlightAllOnFocus = !0))) : (this.focusAfterAttached = !1, o = this.getStartValue(e)), o != null && r.setValue(o, !0), this.addManagedListener(r.getGui(), "keydown", function(i) {
          var s = i.key;
          (s === N.PAGE_UP || s === N.PAGE_DOWN) && i.preventDefault();
        });
      }, t.prototype.afterGuiAttached = function() {
        var e = this.gridOptionsWrapper.getLocaleTextFunc(), r = this.eInput;
        if (r.setInputAriaLabel(e("ariaInputEditor", "Input Editor")), !!this.focusAfterAttached) {
          Ro() || r.getFocusableElement().focus();
          var o = r.getInputElement();
          if (this.highlightAllOnFocus)
            o.select();
          else {
            var i = r.getValue(), s = g(i) && i.length || 0;
            s && o.setSelectionRange(s, s);
          }
        }
      }, t.prototype.focusIn = function() {
        var e = this.eInput, r = e.getFocusableElement(), o = e.getInputElement();
        r.focus(), o.select();
      }, t.prototype.getValue = function() {
        var e = this.eInput;
        return this.params.parseValue(e.getValue());
      }, t.prototype.getStartValue = function(e) {
        var r = e.useFormatter || e.column.getColDef().refData;
        return r ? e.formatValue(e.value) : e.value;
      }, t.prototype.isPopup = function() {
        return !1;
      }, t.TEMPLATE = '<div class="ag-cell-edit-wrapper"><ag-input-text-field class="ag-cell-editor" ref="eInput"></ag-input-text-field></div>', mh([
        I("eInput")
      ], t.prototype, "eInput", void 0), t;
    }(Ur)
  );
  var yh = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Dl = (
    /** @class */
    function(n) {
      yh(t, n);
      function t() {
        var e = n.call(this) || this;
        return me(function() {
          return console.warn('AG Grid: The PopupTextCellEditor (agPopupTextCellEditor) is deprecated. Instead use {cellEditor: "agTextCellEditor", cellEditorPopup: true} ');
        }, "PopupTextCellEditor.deprecated"), e;
      }
      return t.prototype.isPopup = function() {
        return !0;
      }, t;
    }(bi)
  );
  var Ch = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), wh = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Eh = "↑", Rh = "↓", bl = (
    /** @class */
    function(n) {
      Ch(t, n);
      function t() {
        var e = n.call(this, t.TEMPLATE) || this;
        return e.refreshCount = 0, e;
      }
      return t.prototype.init = function(e) {
        this.eValue = this.queryForHtmlElement(".ag-value-change-value"), this.eDelta = this.queryForHtmlElement(".ag-value-change-delta"), this.refresh(e);
      }, t.prototype.showDelta = function(e, r) {
        var o = Math.abs(r), i = e.formatValue(o), s = g(i) ? i : o, a = r >= 0;
        a ? this.eDelta.innerHTML = Eh + s : this.eDelta.innerHTML = Rh + s, this.eDelta.classList.toggle("ag-value-change-delta-up", a), this.eDelta.classList.toggle("ag-value-change-delta-down", !a);
      }, t.prototype.setTimerToRemoveDelta = function() {
        var e = this;
        this.refreshCount++;
        var r = this.refreshCount;
        window.setTimeout(function() {
          r === e.refreshCount && e.hideDeltaValue();
        }, 2e3);
      }, t.prototype.hideDeltaValue = function() {
        this.eValue.classList.remove("ag-value-change-value-highlight"), et(this.eDelta);
      }, t.prototype.refresh = function(e) {
        var r = e.value;
        if (r === this.lastValue || (g(e.valueFormatted) ? this.eValue.innerHTML = e.valueFormatted : g(e.value) ? this.eValue.innerHTML = r : et(this.eValue), this.filterManager.isSuppressFlashingCellsBecauseFiltering()))
          return !1;
        if (typeof r == "number" && typeof this.lastValue == "number") {
          var o = r - this.lastValue;
          this.showDelta(e, o);
        }
        return this.lastValue && this.eValue.classList.add("ag-value-change-value-highlight"), this.setTimerToRemoveDelta(), this.lastValue = r, !0;
      }, t.TEMPLATE = '<span><span class="ag-value-change-delta"></span><span class="ag-value-change-value"></span></span>', wh([
        h("filterManager")
      ], t.prototype, "filterManager", void 0), t;
    }(le)
  );
  var Sh = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), _h = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Fl = (
    /** @class */
    function(n) {
      Sh(t, n);
      function t() {
        var e = n.call(this, t.TEMPLATE) || this;
        return e.refreshCount = 0, e.eCurrent = e.queryForHtmlElement(".ag-value-slide-current"), e;
      }
      return t.prototype.init = function(e) {
        this.refresh(e);
      }, t.prototype.addSlideAnimation = function() {
        var e = this;
        this.refreshCount++;
        var r = this.refreshCount;
        this.ePrevious && this.getGui().removeChild(this.ePrevious), this.ePrevious = xe('<span class="ag-value-slide-previous ag-value-slide-out"></span>'), this.ePrevious.innerHTML = this.eCurrent.innerHTML, this.getGui().insertBefore(this.ePrevious, this.eCurrent), window.setTimeout(function() {
          r === e.refreshCount && e.ePrevious.classList.add("ag-value-slide-out-end");
        }, 50), window.setTimeout(function() {
          r === e.refreshCount && (e.getGui().removeChild(e.ePrevious), e.ePrevious = null);
        }, 3e3);
      }, t.prototype.refresh = function(e) {
        var r = e.value;
        return C(r) && (r = ""), r === this.lastValue || this.filterManager.isSuppressFlashingCellsBecauseFiltering() ? !1 : (this.addSlideAnimation(), this.lastValue = r, g(e.valueFormatted) ? this.eCurrent.innerHTML = e.valueFormatted : g(e.value) ? this.eCurrent.innerHTML = r : et(this.eCurrent), !0);
      }, t.TEMPLATE = `<span>
            <span class="ag-value-slide-current"></span>
        </span>`, _h([
        h("filterManager")
      ], t.prototype, "filterManager", void 0), t;
    }(le)
  );
  (function(n) {
    n[n.Above = 0] = "Above", n[n.Below = 1] = "Below";
  })(c.RowHighlightPosition || (c.RowHighlightPosition = {}));
  var ue = (
    /** @class */
    function() {
      function n(t) {
        this.rowIndex = null, this.key = null, this.childrenMapped = {}, this.displayed = !1, this.rowTop = null, this.oldRowTop = null, this.selectable = !0, this.__objectId = n.OBJECT_ID_SEQUENCE++, this.__autoHeights = {}, this.alreadyRendered = !1, this.highlighted = null, this.selected = !1, this.onRowHeightChangedDebounced = it(this.onRowHeightChanged.bind(this), 100), this.beans = t;
      }
      return n.prototype.setData = function(t) {
        this.setDataCommon(t, !1);
      }, n.prototype.updateData = function(t) {
        this.setDataCommon(t, !0);
      }, n.prototype.setDataCommon = function(t, e) {
        var r = this.data;
        this.data = t, this.beans.valueCache.onDataChanged(), this.updateDataOnDetailNode(), this.checkRowSelectable();
        var o = this.createDataChangedEvent(t, r, e);
        this.dispatchLocalEvent(o);
      }, n.prototype.updateDataOnDetailNode = function() {
        this.detailNode && (this.detailNode.data = this.data);
      }, n.prototype.createDataChangedEvent = function(t, e, r) {
        return {
          type: n.EVENT_DATA_CHANGED,
          node: this,
          oldData: e,
          newData: t,
          update: r
        };
      }, n.prototype.createLocalRowEvent = function(t) {
        return {
          type: t,
          node: this
        };
      }, n.prototype.getRowIndexString = function() {
        return this.rowPinned === E.PINNED_TOP ? "t-" + this.rowIndex : this.rowPinned === E.PINNED_BOTTOM ? "b-" + this.rowIndex : this.rowIndex.toString();
      }, n.prototype.createDaemonNode = function() {
        var t = new n(this.beans);
        return t.id = this.id, t.data = this.data, t.daemon = !0, t.selected = this.selected, t.level = this.level, t;
      }, n.prototype.setDataAndId = function(t, e) {
        var r = g(this.id) ? this.createDaemonNode() : null, o = this.data;
        this.data = t, this.updateDataOnDetailNode(), this.setId(e), this.beans.selectionService.syncInRowNode(this, r), this.checkRowSelectable();
        var i = this.createDataChangedEvent(t, o, !1);
        this.dispatchLocalEvent(i);
      }, n.prototype.checkRowSelectable = function() {
        var t = this.beans.gridOptionsWrapper.getIsRowSelectableFunc();
        this.setRowSelectable(t ? t(this) : !0);
      }, n.prototype.setRowSelectable = function(t) {
        this.selectable !== t && (this.selectable = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_SELECTABLE_CHANGED)));
      }, n.prototype.setId = function(t) {
        var e = this.beans.gridOptionsWrapper.getRowIdFunc();
        if (e)
          if (this.data) {
            var r = this.getGroupKeys(!0);
            this.id = e({
              data: this.data,
              parentKeys: r.length > 0 ? r : void 0,
              level: this.level
            }), this.id !== null && typeof this.id == "string" && this.id.startsWith(n.ID_PREFIX_ROW_GROUP) && console.error("AG Grid: Row IDs cannot start with " + n.ID_PREFIX_ROW_GROUP + ", this is a reserved prefix for AG Grid's row grouping feature."), this.id !== null && typeof this.id != "string" && (this.id = "" + this.id);
          } else
            this.id = void 0;
        else
          this.id = t;
      }, n.prototype.getGroupKeys = function(t) {
        t === void 0 && (t = !1);
        var e = [], r = this;
        for (t && (r = r.parent); r && r.level >= 0; )
          e.push(r.key), r = r.parent;
        return e.reverse(), e;
      }, n.prototype.isPixelInRange = function(t) {
        return !g(this.rowTop) || !g(this.rowHeight) ? !1 : t >= this.rowTop && t < this.rowTop + this.rowHeight;
      }, n.prototype.setFirstChild = function(t) {
        this.firstChild !== t && (this.firstChild = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_FIRST_CHILD_CHANGED)));
      }, n.prototype.setLastChild = function(t) {
        this.lastChild !== t && (this.lastChild = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_LAST_CHILD_CHANGED)));
      }, n.prototype.setChildIndex = function(t) {
        this.childIndex !== t && (this.childIndex = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_CHILD_INDEX_CHANGED)));
      }, n.prototype.setRowTop = function(t) {
        this.oldRowTop = this.rowTop, this.rowTop !== t && (this.rowTop = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_TOP_CHANGED)), this.setDisplayed(t !== null));
      }, n.prototype.clearRowTopAndRowIndex = function() {
        this.oldRowTop = null, this.setRowTop(null), this.setRowIndex(null);
      }, n.prototype.setDisplayed = function(t) {
        this.displayed !== t && (this.displayed = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_DISPLAYED_CHANGED)));
      }, n.prototype.setDragging = function(t) {
        this.dragging !== t && (this.dragging = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_DRAGGING_CHANGED)));
      }, n.prototype.setHighlighted = function(t) {
        t !== this.highlighted && (this.highlighted = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_HIGHLIGHT_CHANGED)));
      }, n.prototype.setAllChildrenCount = function(t) {
        this.allChildrenCount !== t && (this.allChildrenCount = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_ALL_CHILDREN_COUNT_CHANGED)));
      }, n.prototype.setMaster = function(t) {
        this.master !== t && (this.master && !t && (this.expanded = !1), this.master = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_MASTER_CHANGED)));
      }, n.prototype.setGroup = function(t) {
        this.group !== t && (this.group && !t && (this.expanded = !1), this.group = t, this.updateHasChildren(), this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_GROUP_CHANGED)));
      }, n.prototype.setRowHeight = function(t, e) {
        e === void 0 && (e = !1), this.rowHeight = t, this.rowHeightEstimated = e, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_HEIGHT_CHANGED));
      }, n.prototype.setRowAutoHeight = function(t, e) {
        this.__autoHeights || (this.__autoHeights = {});
        var r = this.__autoHeights;
        r[e.getId()] = t, t != null && (this.checkAutoHeightsDebounced == null && (this.checkAutoHeightsDebounced = it(this.checkAutoHeights.bind(this), 1)), this.checkAutoHeightsDebounced());
      }, n.prototype.checkAutoHeights = function() {
        var t = !1, e = !0, r = 0, o = this.__autoHeights;
        if (o != null) {
          var i = this.beans.columnModel.getAllDisplayedAutoHeightCols();
          i.forEach(function(s) {
            var a = o[s.getId()];
            if (a == null) {
              t = !0;
              return;
            }
            e = !1, a > r && (r = a);
          }), !t && ((e || r < 10) && (r = this.beans.gridOptionsWrapper.getRowHeightForNode(this).height), r != this.rowHeight && (this.setRowHeight(r), this.onRowHeightChangedDebounced()));
        }
      }, n.prototype.onRowHeightChanged = function() {
        var t = this.beans.rowModel;
        t.onRowHeightChanged && t.onRowHeightChanged();
      }, n.prototype.setRowIndex = function(t) {
        this.rowIndex !== t && (this.rowIndex = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_ROW_INDEX_CHANGED)));
      }, n.prototype.setUiLevel = function(t) {
        this.uiLevel !== t && (this.uiLevel = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_UI_LEVEL_CHANGED)));
      }, n.prototype.setExpanded = function(t, e) {
        if (this.expanded !== t) {
          this.expanded = t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_EXPANDED_CHANGED));
          var r = Object.assign({}, this.createGlobalRowEvent(m.EVENT_ROW_GROUP_OPENED), {
            expanded: t,
            event: e || null
          });
          this.beans.rowNodeEventThrottle.dispatchExpanded(r), this.beans.gridOptionsWrapper.isGroupIncludeFooter() && this.beans.rowRenderer.refreshCells({ rowNodes: [this] });
        }
      }, n.prototype.createGlobalRowEvent = function(t) {
        return {
          type: t,
          node: this,
          data: this.data,
          rowIndex: this.rowIndex,
          rowPinned: this.rowPinned,
          context: this.beans.gridOptionsWrapper.getContext(),
          api: this.beans.gridOptionsWrapper.getApi(),
          columnApi: this.beans.gridOptionsWrapper.getColumnApi()
        };
      }, n.prototype.dispatchLocalEvent = function(t) {
        this.eventService && this.eventService.dispatchEvent(t);
      }, n.prototype.setDataValue = function(t, e, r) {
        var o = this.beans.columnModel.getPrimaryColumn(t), i = this.beans.valueService.getValue(o, this), s = this.beans.valueService.setValue(this, o, e, r);
        return this.dispatchCellChangedEvent(o, e, i), s;
      }, n.prototype.setGroupValue = function(t, e) {
        var r = this.beans.columnModel.getGridColumn(t);
        C(this.groupData) && (this.groupData = {});
        var o = r.getColId(), i = this.groupData[o];
        i !== e && (this.groupData[o] = e, this.dispatchCellChangedEvent(r, e, i));
      }, n.prototype.setAggData = function(t) {
        var e = this, r = Tr([this.aggData, t]), o = this.aggData;
        this.aggData = t, this.eventService && r.forEach(function(i) {
          var s = e.beans.columnModel.getGridColumn(i), a = e.aggData ? e.aggData[i] : void 0, l = o ? o[i] : void 0;
          e.dispatchCellChangedEvent(s, a, l);
        });
      }, n.prototype.updateHasChildren = function() {
        var t = this.group && !this.footer || this.childrenAfterGroup && this.childrenAfterGroup.length > 0;
        t !== this.__hasChildren && (this.__hasChildren = !!t, this.eventService && this.eventService.dispatchEvent(this.createLocalRowEvent(n.EVENT_HAS_CHILDREN_CHANGED)));
      }, n.prototype.hasChildren = function() {
        return this.__hasChildren == null && this.updateHasChildren(), this.__hasChildren;
      }, n.prototype.isEmptyRowGroupNode = function() {
        return this.group && S(this.childrenAfterGroup);
      }, n.prototype.dispatchCellChangedEvent = function(t, e, r) {
        var o = {
          type: n.EVENT_CELL_CHANGED,
          node: this,
          column: t,
          newValue: e,
          oldValue: r
        };
        this.dispatchLocalEvent(o);
      }, n.prototype.resetQuickFilterAggregateText = function() {
        this.quickFilterAggregateText = null;
      }, n.prototype.isExpandable = function() {
        return !!(this.hasChildren() && !this.footer || this.master);
      }, n.prototype.isSelected = function() {
        return this.footer ? this.sibling.isSelected() : this.selected;
      }, n.prototype.depthFirstSearch = function(t) {
        this.childrenAfterGroup && this.childrenAfterGroup.forEach(function(e) {
          return e.depthFirstSearch(t);
        }), t(this);
      }, n.prototype.calculateSelectedFromChildren = function() {
        var t, e = !1, r = !1, o = !1, i;
        if (!((t = this.childrenAfterGroup) === null || t === void 0) && t.length) {
          for (var s = 0; s < this.childrenAfterGroup.length; s++) {
            var a = this.childrenAfterGroup[s];
            if (a.selectable) {
              var l = a.isSelected();
              switch (l) {
                case !0:
                  e = !0;
                  break;
                case !1:
                  r = !0;
                  break;
                default:
                  o = !0;
                  break;
              }
            }
          }
          o ? i = void 0 : e && !r ? i = !0 : !e && r ? i = !1 : i = void 0, this.selectThisNode(i);
        }
      }, n.prototype.setSelectedInitialValue = function(t) {
        this.selected = t;
      }, n.prototype.setSelected = function(t, e, r) {
        e === void 0 && (e = !1), r === void 0 && (r = !1), this.setSelectedParams({
          newValue: t,
          clearSelection: e,
          suppressFinishActions: r,
          rangeSelect: !1
        });
      }, n.prototype.isRowPinned = function() {
        return this.rowPinned === E.PINNED_TOP || this.rowPinned === E.PINNED_BOTTOM;
      }, n.prototype.setSelectedParams = function(t) {
        var e, r = this.beans.gridOptionsWrapper.isGroupSelectsChildren(), o = t.newValue === !0, i = t.clearSelection === !0, s = t.suppressFinishActions === !0, a = t.rangeSelect === !0, l = r && t.groupSelectsFiltered === !0;
        if (this.id === void 0)
          return console.warn("AG Grid: cannot select node until id for node is known"), 0;
        if (this.rowPinned)
          return console.warn("AG Grid: cannot select pinned rows"), 0;
        if (this.footer)
          return this.sibling.setSelectedParams(t);
        if (a && this.beans.selectionService.getLastSelectedNode()) {
          var u = this.beans.selectionService.getLastSelectedNode() !== this, p = this.beans.gridOptionsWrapper.isRowSelectionMulti();
          if (u && p) {
            var d = this.doRowRangeSelection(t.newValue);
            return this.beans.selectionService.setLastSelectedNode(this), d;
          }
        }
        var f = 0, v = l && this.group;
        if (!v) {
          var y = this.selectThisNode(o);
          y && f++;
        }
        if (r && (!((e = this.childrenAfterGroup) === null || e === void 0) && e.length) && (f += this.selectChildNodes(o, l)), !s) {
          var R = o && (i || !this.beans.gridOptionsWrapper.isRowSelectionMulti());
          if (R && (f += this.beans.selectionService.clearOtherNodes(this)), f > 0) {
            this.beans.selectionService.updateGroupsFromChildrenSelections();
            var _ = {
              type: m.EVENT_SELECTION_CHANGED,
              api: this.beans.gridApi,
              columnApi: this.beans.columnApi
            };
            this.beans.eventService.dispatchEvent(_);
          }
          o && this.beans.selectionService.setLastSelectedNode(this);
        }
        return f;
      }, n.prototype.doRowRangeSelection = function(t) {
        var e = this;
        t === void 0 && (t = !0);
        var r = this.beans.gridOptionsWrapper.isGroupSelectsChildren(), o = this.beans.selectionService.getLastSelectedNode(), i = this.beans.rowModel.getNodesInRangeForSelection(this, o), s = 0;
        i.forEach(function(l) {
          if (!(l.group && r || t === !1 && e === l)) {
            var u = l.selectThisNode(t);
            u && s++;
          }
        }), this.beans.selectionService.updateGroupsFromChildrenSelections();
        var a = {
          type: m.EVENT_SELECTION_CHANGED,
          api: this.beans.gridApi,
          columnApi: this.beans.columnApi
        };
        return this.beans.eventService.dispatchEvent(a), s;
      }, n.prototype.isParentOfNode = function(t) {
        for (var e = this.parent; e; ) {
          if (e === t)
            return !0;
          e = e.parent;
        }
        return !1;
      }, n.prototype.selectThisNode = function(t) {
        var e = !this.selectable && t, r = this.selected === t;
        if (e || r)
          return !1;
        this.selected = t, this.eventService && this.dispatchLocalEvent(this.createLocalRowEvent(n.EVENT_ROW_SELECTED));
        var o = this.createGlobalRowEvent(m.EVENT_ROW_SELECTED);
        return this.beans.eventService.dispatchEvent(o), !0;
      }, n.prototype.selectChildNodes = function(t, e) {
        var r = e ? this.childrenAfterAggFilter : this.childrenAfterGroup;
        if (C(r))
          return 0;
        for (var o = 0, i = 0; i < r.length; i++)
          o += r[i].setSelectedParams({
            newValue: t,
            clearSelection: !1,
            suppressFinishActions: !0,
            groupSelectsFiltered: e
          });
        return o;
      }, n.prototype.addEventListener = function(t, e) {
        this.eventService || (this.eventService = new nt()), this.eventService.addEventListener(t, e);
      }, n.prototype.removeEventListener = function(t, e) {
        this.eventService && (this.eventService.removeEventListener(t, e), this.eventService.noRegisteredListenersExist() && (this.eventService = null));
      }, n.prototype.onMouseEnter = function() {
        this.dispatchLocalEvent(this.createLocalRowEvent(n.EVENT_MOUSE_ENTER));
      }, n.prototype.onMouseLeave = function() {
        this.dispatchLocalEvent(this.createLocalRowEvent(n.EVENT_MOUSE_LEAVE));
      }, n.prototype.getFirstChildOfFirstChild = function(t) {
        for (var e = this, r = !0, o = !1, i = null; r && !o; ) {
          var s = e.parent, a = g(s) && e.firstChild;
          a ? s.rowGroupColumn === t && (o = !0, i = s) : r = !1, e = s;
        }
        return o ? i : null;
      }, n.prototype.isFullWidthCell = function() {
        var t = this.beans.gridOptionsWrapper.getIsFullWidthCellFunc();
        return t ? t({ rowNode: this }) : !1;
      }, n.prototype.getRoute = function() {
        if (this.key != null) {
          for (var t = [], e = this; e.key != null; )
            t.push(e.key), e = e.parent;
          return t.reverse();
        }
      }, n.ID_PREFIX_ROW_GROUP = "row-group-", n.ID_PREFIX_TOP_PINNED = "t-", n.ID_PREFIX_BOTTOM_PINNED = "b-", n.OBJECT_ID_SEQUENCE = 0, n.EVENT_ROW_SELECTED = "rowSelected", n.EVENT_DATA_CHANGED = "dataChanged", n.EVENT_CELL_CHANGED = "cellChanged", n.EVENT_ALL_CHILDREN_COUNT_CHANGED = "allChildrenCountChanged", n.EVENT_MASTER_CHANGED = "masterChanged", n.EVENT_GROUP_CHANGED = "groupChanged", n.EVENT_MOUSE_ENTER = "mouseEnter", n.EVENT_MOUSE_LEAVE = "mouseLeave", n.EVENT_HEIGHT_CHANGED = "heightChanged", n.EVENT_TOP_CHANGED = "topChanged", n.EVENT_DISPLAYED_CHANGED = "displayedChanged", n.EVENT_FIRST_CHILD_CHANGED = "firstChildChanged", n.EVENT_LAST_CHILD_CHANGED = "lastChildChanged", n.EVENT_CHILD_INDEX_CHANGED = "childIndexChanged", n.EVENT_ROW_INDEX_CHANGED = "rowIndexChanged", n.EVENT_EXPANDED_CHANGED = "expandedChanged", n.EVENT_HAS_CHILDREN_CHANGED = "hasChildrenChanged", n.EVENT_SELECTABLE_CHANGED = "selectableChanged", n.EVENT_UI_LEVEL_CHANGED = "uiLevelChanged", n.EVENT_HIGHLIGHT_CHANGED = "rowHighlightChanged", n.EVENT_DRAGGING_CHANGED = "draggingChanged", n;
    }()
  );
  var Oh = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Ll = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, _s = (
    /** @class */
    function(n) {
      Oh(t, n);
      function t() {
        return n.call(
          this,
          /* html*/
          `
            <div class="ag-selection-checkbox" role="presentation">
                <ag-checkbox role="presentation" ref="eCheckbox"></ag-checkbox>
            </div>`
        ) || this;
      }
      return t.prototype.postConstruct = function() {
        this.eCheckbox.setPassive(!0);
      }, t.prototype.getCheckboxId = function() {
        return this.eCheckbox.getInputElement().id;
      }, t.prototype.onDataChanged = function() {
        this.onSelectionChanged();
      }, t.prototype.onSelectableChanged = function() {
        this.showOrHideSelect();
      }, t.prototype.onSelectionChanged = function() {
        var e = this.gridOptionsWrapper.getLocaleTextFunc(), r = this.rowNode.isSelected(), o = r === void 0 ? e("ariaIndeterminate", "indeterminate") : r === !0 ? e("ariaChecked", "checked") : e("ariaUnchecked", "unchecked"), i = e("ariaRowToggleSelection", "Press Space to toggle row selection");
        this.eCheckbox.setValue(r, !0), this.eCheckbox.setInputAriaLabel(i + " (" + o + ")");
      }, t.prototype.onCheckedClicked = function(e) {
        var r = this.gridOptionsWrapper.isGroupSelectsFiltered(), o = this.rowNode.setSelectedParams({ newValue: !1, rangeSelect: e.shiftKey, groupSelectsFiltered: r });
        return o;
      }, t.prototype.onUncheckedClicked = function(e) {
        var r = this.gridOptionsWrapper.isGroupSelectsFiltered(), o = this.rowNode.setSelectedParams({ newValue: !0, rangeSelect: e.shiftKey, groupSelectsFiltered: r });
        return o;
      }, t.prototype.init = function(e) {
        var r = this;
        this.rowNode = e.rowNode, this.column = e.column, this.onSelectionChanged(), this.addGuiEventListener("click", function(a) {
          return xr(a);
        }), this.addGuiEventListener("dblclick", function(a) {
          return xr(a);
        }), this.addManagedListener(this.eCheckbox.getInputElement(), "click", function(a) {
          var l = r.eCheckbox.getValue(), u = r.eCheckbox.getPreviousValue();
          if (u === void 0 || l === void 0) {
            var p = r.onUncheckedClicked(a || {});
            p === 0 && r.onCheckedClicked(a);
          } else l ? r.onCheckedClicked(a) : r.onUncheckedClicked(a || {});
        }), this.addManagedListener(this.rowNode, ue.EVENT_ROW_SELECTED, this.onSelectionChanged.bind(this)), this.addManagedListener(this.rowNode, ue.EVENT_DATA_CHANGED, this.onDataChanged.bind(this)), this.addManagedListener(this.rowNode, ue.EVENT_SELECTABLE_CHANGED, this.onSelectableChanged.bind(this));
        var o = this.gridOptionsWrapper.getIsRowSelectableFunc(), i = o || this.checkboxCallbackExists();
        if (i) {
          var s = this.showOrHideSelect.bind(this);
          this.addManagedListener(this.eventService, m.EVENT_DISPLAYED_COLUMNS_CHANGED, s), this.addManagedListener(this.rowNode, ue.EVENT_DATA_CHANGED, s), this.addManagedListener(this.rowNode, ue.EVENT_CELL_CHANGED, s), this.showOrHideSelect();
        }
        this.eCheckbox.getInputElement().setAttribute("tabindex", "-1");
      }, t.prototype.showOrHideSelect = function() {
        var e = this.rowNode.selectable;
        e && this.checkboxCallbackExists() && (e = this.column.isCellCheckboxSelection(this.rowNode)), this.setVisible(e);
      }, t.prototype.checkboxCallbackExists = function() {
        var e = this.column ? this.column.getColDef() : null;
        return !!e && typeof e.checkboxSelection == "function";
      }, Ll([
        I("eCheckbox")
      ], t.prototype, "eCheckbox", void 0), Ll([
        B
      ], t.prototype, "postConstruct", null), t;
    }(le)
  );
  var Ah = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), mr = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Ml = function(n) {
    var t = typeof Symbol == "function" && Symbol.iterator, e = t && n[t], r = 0;
    if (e) return e.call(n);
    if (n && typeof n.length == "number") return {
      next: function() {
        return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
      }
    };
    throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
  };
  (function(n) {
    n[n.ToolPanel = 0] = "ToolPanel", n[n.HeaderCell = 1] = "HeaderCell", n[n.RowDrag = 2] = "RowDrag", n[n.ChartPanel = 3] = "ChartPanel";
  })(c.DragSourceType || (c.DragSourceType = {})), function(n) {
    n[n.Up = 0] = "Up", n[n.Down = 1] = "Down";
  }(c.VerticalDirection || (c.VerticalDirection = {})), function(n) {
    n[n.Left = 0] = "Left", n[n.Right = 1] = "Right";
  }(c.HorizontalDirection || (c.HorizontalDirection = {}));
  var $e = (
    /** @class */
    function(n) {
      Ah(t, n);
      function t() {
        var r = n !== null && n.apply(this, arguments) || this;
        return r.dragSourceAndParamsList = [], r.dropTargets = [], r;
      }
      e = t, t.prototype.init = function() {
        this.ePinnedIcon = st("columnMovePin", this.gridOptionsWrapper, null), this.eHideIcon = st("columnMoveHide", this.gridOptionsWrapper, null), this.eMoveIcon = st("columnMoveMove", this.gridOptionsWrapper, null), this.eLeftIcon = st("columnMoveLeft", this.gridOptionsWrapper, null), this.eRightIcon = st("columnMoveRight", this.gridOptionsWrapper, null), this.eGroupIcon = st("columnMoveGroup", this.gridOptionsWrapper, null), this.eAggregateIcon = st("columnMoveValue", this.gridOptionsWrapper, null), this.ePivotIcon = st("columnMovePivot", this.gridOptionsWrapper, null), this.eDropNotAllowedIcon = st("dropNotAllowed", this.gridOptionsWrapper, null);
      }, t.prototype.addDragSource = function(r, o) {
        o === void 0 && (o = !1);
        var i = {
          eElement: r.eElement,
          dragStartPixels: r.dragStartPixels,
          onDragStart: this.onDragStart.bind(this, r),
          onDragStop: this.onDragStop.bind(this),
          onDragging: this.onDragging.bind(this)
        };
        this.dragSourceAndParamsList.push({ params: i, dragSource: r }), this.dragService.addDragSource(i, o);
      }, t.prototype.removeDragSource = function(r) {
        var o = this.dragSourceAndParamsList.find(function(i) {
          return i.dragSource === r;
        });
        o && (this.dragService.removeDragSource(o.params), Ce(this.dragSourceAndParamsList, o));
      }, t.prototype.clearDragSourceParamsList = function() {
        var r = this;
        this.dragSourceAndParamsList.forEach(function(o) {
          return r.dragService.removeDragSource(o.params);
        }), this.dragSourceAndParamsList.length = 0;
      }, t.prototype.nudge = function() {
        this.dragging && this.onDragging(this.eventLastTime, !0);
      }, t.prototype.onDragStart = function(r, o) {
        this.dragging = !0, this.dragSource = r, this.eventLastTime = o, this.dragItem = this.dragSource.getDragItem(), this.lastDropTarget = this.dragSource.dragSourceDropTarget, this.dragSource.onDragStarted && this.dragSource.onDragStarted(), this.createGhost();
      }, t.prototype.onDragStop = function(r) {
        if (this.eventLastTime = null, this.dragging = !1, this.dragSource.onDragStopped && this.dragSource.onDragStopped(), this.lastDropTarget && this.lastDropTarget.onDragStop) {
          var o = this.createDropTargetEvent(this.lastDropTarget, r, null, null, !1);
          this.lastDropTarget.onDragStop(o);
        }
        this.lastDropTarget = null, this.dragItem = null, this.removeGhost();
      }, t.prototype.onDragging = function(r, o) {
        var i = this, s = this.getHorizontalDirection(r), a = this.getVerticalDirection(r);
        this.eventLastTime = r, this.positionGhost(r);
        var l = this.dropTargets.filter(function(f) {
          return i.isMouseOnDropTarget(r, f);
        }), u = l.length, p = null;
        if (u > 0 && (p = u === 1 ? l[0] : l.reduce(function(f, v) {
          if (!f)
            return v;
          var y = f.getContainer(), R = v.getContainer();
          return y.contains(R) ? v : f;
        })), p !== this.lastDropTarget)
          this.leaveLastTargetIfExists(r, s, a, o), this.enterDragTargetIfExists(p, r, s, a, o), this.lastDropTarget = p;
        else if (p && p.onDragging) {
          var d = this.createDropTargetEvent(p, r, s, a, o);
          p.onDragging(d);
        }
      }, t.prototype.enterDragTargetIfExists = function(r, o, i, s, a) {
        if (r) {
          if (r.onDragEnter) {
            var l = this.createDropTargetEvent(r, o, i, s, a);
            r.onDragEnter(l);
          }
          this.setGhostIcon(r.getIconName ? r.getIconName() : null);
        }
      }, t.prototype.leaveLastTargetIfExists = function(r, o, i, s) {
        if (this.lastDropTarget) {
          if (this.lastDropTarget.onDragLeave) {
            var a = this.createDropTargetEvent(this.lastDropTarget, r, o, i, s);
            this.lastDropTarget.onDragLeave(a);
          }
          this.setGhostIcon(null);
        }
      }, t.prototype.getAllContainersFromDropTarget = function(r) {
        var o = r.getSecondaryContainers ? r.getSecondaryContainers() : null, i = [[r.getContainer()]];
        return o ? i.concat(o) : i;
      }, t.prototype.allContainersIntersect = function(r, o) {
        var i, s;
        try {
          for (var a = Ml(o), l = a.next(); !l.done; l = a.next()) {
            var u = l.value, p = u.getBoundingClientRect();
            if (p.width === 0 || p.height === 0)
              return !1;
            var d = r.clientX >= p.left && r.clientX < p.right, f = r.clientY >= p.top && r.clientY < p.bottom;
            if (!d || !f)
              return !1;
          }
        } catch (v) {
          i = { error: v };
        } finally {
          try {
            l && !l.done && (s = a.return) && s.call(a);
          } finally {
            if (i) throw i.error;
          }
        }
        return !0;
      }, t.prototype.isMouseOnDropTarget = function(r, o) {
        var i, s, a = this.getAllContainersFromDropTarget(o), l = !1;
        try {
          for (var u = Ml(a), p = u.next(); !p.done; p = u.next()) {
            var d = p.value;
            if (this.allContainersIntersect(r, d)) {
              l = !0;
              break;
            }
          }
        } catch (f) {
          i = { error: f };
        } finally {
          try {
            p && !p.done && (s = u.return) && s.call(u);
          } finally {
            if (i) throw i.error;
          }
        }
        return o.targetContainsSource && !o.getContainer().contains(this.dragSource.eElement) ? !1 : l && o.isInterestedIn(this.dragSource.type, this.dragSource.eElement);
      }, t.prototype.addDropTarget = function(r) {
        this.dropTargets.push(r);
      }, t.prototype.removeDropTarget = function(r) {
        this.dropTargets = this.dropTargets.filter(function(o) {
          return o.getContainer() !== r.getContainer();
        });
      }, t.prototype.hasExternalDropZones = function() {
        return this.dropTargets.some(function(r) {
          return r.external;
        });
      }, t.prototype.findExternalZone = function(r) {
        var o = this.dropTargets.filter(function(i) {
          return i.external;
        });
        return o.find(function(i) {
          return i.getContainer() === r.getContainer();
        }) || null;
      }, t.prototype.getHorizontalDirection = function(r) {
        var o = this.eventLastTime && this.eventLastTime.clientX, i = r.clientX;
        return o === i ? null : o > i ? c.HorizontalDirection.Left : c.HorizontalDirection.Right;
      }, t.prototype.getVerticalDirection = function(r) {
        var o = this.eventLastTime && this.eventLastTime.clientY, i = r.clientY;
        return o === i ? null : o > i ? c.VerticalDirection.Up : c.VerticalDirection.Down;
      }, t.prototype.createDropTargetEvent = function(r, o, i, s, a) {
        var l = r.getContainer(), u = l.getBoundingClientRect(), p = this, d = p.gridApi, f = p.columnApi, v = p.dragItem, y = p.dragSource, R = o.clientX - u.left, _ = o.clientY - u.top;
        return { event: o, x: R, y: _, vDirection: s, hDirection: i, dragSource: y, fromNudge: a, dragItem: v, api: d, columnApi: f, dropZoneTarget: l };
      }, t.prototype.positionGhost = function(r) {
        var o = this.eGhost;
        if (o) {
          var i = o.getBoundingClientRect(), s = i.height, a = Ia() - 2, l = Na() - 2, u = r.pageY - s / 2, p = r.pageX - 10, d = this.gridOptionsWrapper.getDocument(), f = d.defaultView || window, v = f.pageYOffset || d.documentElement.scrollTop, y = f.pageXOffset || d.documentElement.scrollLeft;
          a > 0 && p + o.clientWidth > a + y && (p = a + y - o.clientWidth), p < 0 && (p = 0), l > 0 && u + o.clientHeight > l + v && (u = l + v - o.clientHeight), u < 0 && (u = 0), o.style.left = p + "px", o.style.top = u + "px";
        }
      }, t.prototype.removeGhost = function() {
        this.eGhost && this.eGhostParent && this.eGhostParent.removeChild(this.eGhost), this.eGhost = null;
      }, t.prototype.createGhost = function() {
        this.eGhost = xe(e.GHOST_TEMPLATE);
        var r = this.environment.getTheme().theme;
        r && this.eGhost.classList.add(r), this.eGhostIcon = this.eGhost.querySelector(".ag-dnd-ghost-icon"), this.setGhostIcon(null);
        var o = this.eGhost.querySelector(".ag-dnd-ghost-label"), i = this.dragSource.dragItemName;
        ur(i) && (i = i()), o.innerHTML = Ot(i) || "", this.eGhost.style.height = "25px", this.eGhost.style.top = "20px", this.eGhost.style.left = "20px";
        var s = this.gridOptionsWrapper.getDocument(), a = null;
        try {
          a = s.fullscreenElement;
        } catch {
        } finally {
          a || (a = s.querySelector("body"));
        }
        this.eGhostParent = a, this.eGhostParent ? this.eGhostParent.appendChild(this.eGhost) : console.warn("AG Grid: could not find document body, it is needed for dragging columns");
      }, t.prototype.setGhostIcon = function(r, o) {
        o === void 0 && (o = !1), et(this.eGhostIcon);
        var i = null;
        switch (r || (r = this.dragSource.defaultIconName || e.ICON_NOT_ALLOWED), r) {
          case e.ICON_PINNED:
            i = this.ePinnedIcon;
            break;
          case e.ICON_MOVE:
            i = this.eMoveIcon;
            break;
          case e.ICON_LEFT:
            i = this.eLeftIcon;
            break;
          case e.ICON_RIGHT:
            i = this.eRightIcon;
            break;
          case e.ICON_GROUP:
            i = this.eGroupIcon;
            break;
          case e.ICON_AGGREGATE:
            i = this.eAggregateIcon;
            break;
          case e.ICON_PIVOT:
            i = this.ePivotIcon;
            break;
          case e.ICON_NOT_ALLOWED:
            i = this.eDropNotAllowedIcon;
            break;
          case e.ICON_HIDE:
            i = this.eHideIcon;
            break;
        }
        this.eGhostIcon.classList.toggle("ag-shake-left-to-right", o), !(i === this.eHideIcon && this.gridOptionsWrapper.isSuppressDragLeaveHidesColumns()) && i && this.eGhostIcon.appendChild(i);
      };
      var e;
      return t.ICON_PINNED = "pinned", t.ICON_MOVE = "move", t.ICON_LEFT = "left", t.ICON_RIGHT = "right", t.ICON_GROUP = "group", t.ICON_AGGREGATE = "aggregate", t.ICON_PIVOT = "pivot", t.ICON_NOT_ALLOWED = "notAllowed", t.ICON_HIDE = "hide", t.GHOST_TEMPLATE = `<div class="ag-dnd-ghost ag-unselectable">
            <span class="ag-dnd-ghost-icon ag-shake-left-to-right"></span>
            <div class="ag-dnd-ghost-label"></div>
        </div>`, mr([
        h("dragService")
      ], t.prototype, "dragService", void 0), mr([
        h("environment")
      ], t.prototype, "environment", void 0), mr([
        h("columnApi")
      ], t.prototype, "columnApi", void 0), mr([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), mr([
        B
      ], t.prototype, "init", null), mr([
        De
      ], t.prototype, "clearDragSourceParamsList", null), t = e = mr([
        j("dragAndDropService")
      ], t), t;
    }(H)
  );
  var Fi = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Mo = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Li = (
    /** @class */
    function(n) {
      Fi(t, n);
      function t(e, r, o, i, s, a) {
        var l = n.call(this) || this;
        return l.cellValueFn = e, l.rowNode = r, l.column = o, l.customGui = i, l.dragStartPixels = s, l.suppressVisibilityChange = a, l.dragSource = null, l;
      }
      return t.prototype.isCustomGui = function() {
        return this.customGui != null;
      }, t.prototype.postConstruct = function() {
        if (this.customGui ? this.setDragElement(this.customGui, this.dragStartPixels) : (this.setTemplate(
          /* html */
          '<div class="ag-drag-handle ag-row-drag" aria-hidden="true"></div>'
        ), this.getGui().appendChild(be("rowDrag", this.beans.gridOptionsWrapper, null)), this.addDragSource()), this.checkCompatibility(), !this.suppressVisibilityChange) {
          var e = this.beans.gridOptionsWrapper.isRowDragManaged() ? new Th(this, this.beans, this.rowNode, this.column) : new Ph(this, this.beans, this.rowNode, this.column);
          this.createManagedBean(e, this.beans.context);
        }
      }, t.prototype.setDragElement = function(e, r) {
        this.setTemplateFromElement(e), this.addDragSource(r);
      }, t.prototype.getSelectedCount = function() {
        var e = this.beans.gridOptionsWrapper.isRowDragMultiRow();
        if (!e)
          return 1;
        var r = this.beans.selectionService.getSelectedNodes();
        return r.indexOf(this.rowNode) !== -1 ? r.length : 1;
      }, t.prototype.checkCompatibility = function() {
        var e = this.beans.gridOptionsWrapper.isRowDragManaged(), r = this.beans.gridOptionsWrapper.isTreeData();
        r && e && me(function() {
          return console.warn("AG Grid: If using row drag with tree data, you cannot have rowDragManaged=true");
        }, "RowDragComp.managedAndTreeData");
      }, t.prototype.addDragSource = function(e) {
        var r = this;
        e === void 0 && (e = 4), this.dragSource && this.removeDragSource();
        var o = {
          rowNode: this.rowNode,
          columns: this.column ? [this.column] : void 0,
          defaultTextValue: this.cellValueFn()
        }, i = this.column && this.column.getColDef().rowDragText, s = this.gridOptionsWrapper.getLocaleTextFunc();
        this.dragSource = {
          type: c.DragSourceType.RowDrag,
          eElement: this.getGui(),
          dragItemName: function() {
            var a = r.getSelectedCount();
            return i ? i(o, a) : a === 1 ? r.cellValueFn() : a + " " + s("rowDragRows", "rows");
          },
          getDragItem: function() {
            return o;
          },
          dragStartPixels: e,
          dragSourceDomDataKey: this.beans.gridOptionsWrapper.getDomDataKey()
        }, this.beans.dragAndDropService.addDragSource(this.dragSource, !0);
      }, t.prototype.removeDragSource = function() {
        this.dragSource && this.beans.dragAndDropService.removeDragSource(this.dragSource), this.dragSource = null;
      }, Mo([
        h("beans")
      ], t.prototype, "beans", void 0), Mo([
        B
      ], t.prototype, "postConstruct", null), Mo([
        De
      ], t.prototype, "removeDragSource", null), t;
    }(le)
  ), Il = (
    /** @class */
    function(n) {
      Fi(t, n);
      function t(e, r, o) {
        var i = n.call(this) || this;
        return i.parent = e, i.rowNode = r, i.column = o, i;
      }
      return t.prototype.setDisplayedOrVisible = function(e) {
        if (e)
          this.parent.setDisplayed(!1);
        else {
          var r = !0, o = !1;
          this.column && (r = this.column.isRowDrag(this.rowNode) || this.parent.isCustomGui(), o = ur(this.column.getColDef().rowDrag)), o ? (this.parent.setDisplayed(!0), this.parent.setVisible(r)) : (this.parent.setDisplayed(r), this.parent.setVisible(!0));
        }
      }, t;
    }(H)
  ), Ph = (
    /** @class */
    function(n) {
      Fi(t, n);
      function t(e, r, o, i) {
        var s = n.call(this, e, o, i) || this;
        return s.beans = r, s;
      }
      return t.prototype.postConstruct = function() {
        this.addManagedListener(this.beans.gridOptionsWrapper, "suppressRowDrag", this.onSuppressRowDrag.bind(this)), this.addManagedListener(this.rowNode, ue.EVENT_DATA_CHANGED, this.workOutVisibility.bind(this)), this.addManagedListener(this.rowNode, ue.EVENT_CELL_CHANGED, this.workOutVisibility.bind(this)), this.addManagedListener(this.rowNode, ue.EVENT_CELL_CHANGED, this.workOutVisibility.bind(this)), this.addManagedListener(this.beans.eventService, m.EVENT_NEW_COLUMNS_LOADED, this.workOutVisibility.bind(this)), this.workOutVisibility();
      }, t.prototype.onSuppressRowDrag = function() {
        this.workOutVisibility();
      }, t.prototype.workOutVisibility = function() {
        var e = this.beans.gridOptionsWrapper.isSuppressRowDrag();
        this.setDisplayedOrVisible(e);
      }, Mo([
        B
      ], t.prototype, "postConstruct", null), t;
    }(Il)
  ), Th = (
    /** @class */
    function(n) {
      Fi(t, n);
      function t(e, r, o, i) {
        var s = n.call(this, e, o, i) || this;
        return s.beans = r, s;
      }
      return t.prototype.postConstruct = function() {
        this.addManagedListener(this.beans.eventService, m.EVENT_SORT_CHANGED, this.workOutVisibility.bind(this)), this.addManagedListener(this.beans.eventService, m.EVENT_FILTER_CHANGED, this.workOutVisibility.bind(this)), this.addManagedListener(this.beans.eventService, m.EVENT_COLUMN_ROW_GROUP_CHANGED, this.workOutVisibility.bind(this)), this.addManagedListener(this.beans.eventService, m.EVENT_NEW_COLUMNS_LOADED, this.workOutVisibility.bind(this)), this.addManagedListener(this.rowNode, ue.EVENT_DATA_CHANGED, this.workOutVisibility.bind(this)), this.addManagedListener(this.rowNode, ue.EVENT_CELL_CHANGED, this.workOutVisibility.bind(this)), this.addManagedListener(this.beans.gridOptionsWrapper, "suppressRowDrag", this.onSuppressRowDrag.bind(this)), this.workOutVisibility();
      }, t.prototype.onSuppressRowDrag = function() {
        this.workOutVisibility();
      }, t.prototype.workOutVisibility = function() {
        var e = this.beans.ctrlsService.getGridBodyCtrl(), r = e.getRowDragFeature(), o = r && r.shouldPreventRowMove(), i = this.beans.gridOptionsWrapper.isSuppressRowDrag(), s = this.beans.dragAndDropService.hasExternalDropZones(), a = o && !s || i;
        this.setDisplayedOrVisible(a);
      }, Mo([
        B
      ], t.prototype, "postConstruct", null), t;
    }(Il)
  );
  var Dh = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Mi = function() {
    return Mi = Object.assign || function(n) {
      for (var t, e = 1, r = arguments.length; e < r; e++) {
        t = arguments[e];
        for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
      }
      return n;
    }, Mi.apply(this, arguments);
  }, Io = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Nl = (
    /** @class */
    function(n) {
      Dh(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.init = function(e, r, o, i, s, a, l) {
        this.params = l, this.eGui = r, this.eCheckbox = o, this.eExpanded = i, this.eContracted = s, this.comp = e, this.compClass = a;
        var u = this.isTopLevelFooter(), p = this.isEmbeddedRowMismatch(), d = l.value == null, f = !1;
        if (this.gridOptionsWrapper.isGroupIncludeFooter() && this.gridOptionsWrapper.isGroupHideOpenParents()) {
          var v = l.node;
          if (v.footer) {
            var y = l.colDef && l.colDef.showRowGroup, R = v.rowGroupColumn && v.rowGroupColumn.getColId();
            f = y !== R;
          }
        }
        this.cellIsBlank = u ? !1 : p || d || f, !this.cellIsBlank && (this.setupShowingValueForOpenedParent(), this.findDisplayedGroupNode(), this.addFullWidthRowDraggerIfNeeded(), this.addExpandAndContract(), this.addCheckboxIfNeeded(), this.addValueElement(), this.setupIndent(), this.refreshAriaExpanded());
      }, t.prototype.destroy = function() {
        n.prototype.destroy.call(this), this.expandListener = null;
      }, t.prototype.refreshAriaExpanded = function() {
        var e = this.params, r = e.node, o = e.eParentOfValue;
        if (this.expandListener && (this.expandListener = this.expandListener()), !this.isExpandable()) {
          Xa(o);
          return;
        }
        var i = function() {
          tt(o, !!r.expanded);
        };
        this.expandListener = this.addManagedListener(r, ue.EVENT_EXPANDED_CHANGED, i) || null, i();
      }, t.prototype.isTopLevelFooter = function() {
        if (!this.gridOptionsWrapper.isGroupIncludeTotalFooter() || this.params.value != null || this.params.node.level != -1)
          return !1;
        var e = this.params.colDef, r = e == null;
        if (r || e.showRowGroup === !0)
          return !0;
        var o = this.columnModel.getRowGroupColumns();
        if (!o || o.length === 0)
          return !0;
        var i = o[0];
        return i.getId() === e.showRowGroup;
      }, t.prototype.isEmbeddedRowMismatch = function() {
        if (!this.params.fullWidth || !this.gridOptionsWrapper.isEmbedFullWidthRows())
          return !1;
        var e = this.params.pinned === E.PINNED_LEFT, r = this.params.pinned === E.PINNED_RIGHT, o = !e && !r;
        return this.gridOptionsWrapper.isEnableRtl() ? this.columnModel.isPinningLeft() ? !r : !o : this.columnModel.isPinningLeft() ? !e : !o;
      }, t.prototype.findDisplayedGroupNode = function() {
        var e = this.params.column, r = this.params.node;
        if (this.showingValueForOpenedParent)
          for (var o = r.parent; o != null; ) {
            if (o.rowGroupColumn && e.isRowGroupDisplayed(o.rowGroupColumn.getId())) {
              this.displayedGroupNode = o;
              break;
            }
            o = o.parent;
          }
        C(this.displayedGroupNode) && (this.displayedGroupNode = r);
      }, t.prototype.setupShowingValueForOpenedParent = function() {
        var e = this.params.node, r = this.params.column;
        if (!this.gridOptionsWrapper.isGroupHideOpenParents()) {
          this.showingValueForOpenedParent = !1;
          return;
        }
        if (!e.groupData) {
          this.showingValueForOpenedParent = !1;
          return;
        }
        var o = e.rowGroupColumn != null;
        if (o) {
          var i = e.rowGroupColumn.getId(), s = r.isRowGroupDisplayed(i);
          if (s) {
            this.showingValueForOpenedParent = !1;
            return;
          }
        }
        var a = e.groupData[r.getId()] != null;
        this.showingValueForOpenedParent = a;
      }, t.prototype.addValueElement = function() {
        this.displayedGroupNode.footer ? this.addFooterValue() : (this.addGroupValue(), this.addChildCount());
      }, t.prototype.addGroupValue = function() {
        var e = this.adjustParamsWithDetailsFromRelatedColumn(), r = this.getInnerCompDetails(e), o = e.valueFormatted, i = e.value, s = o ?? i;
        this.comp.setInnerRenderer(r, s);
      }, t.prototype.adjustParamsWithDetailsFromRelatedColumn = function() {
        var e = this.displayedGroupNode.rowGroupColumn, r = this.params.column;
        if (!e)
          return this.params;
        var o = r != null;
        if (o) {
          var i = r.isRowGroupDisplayed(e.getId());
          if (!i)
            return this.params;
        }
        var s = this.params, a = this.params, l = a.value, u = a.node, p = this.valueFormatterService.formatValue(e, u, l), d = Mi(Mi({}, s), { valueFormatted: p });
        return d;
      }, t.prototype.addFooterValue = function() {
        var e = this.params.footerValueGetter, r = "";
        if (e) {
          var o = Rt(this.params);
          o.value = this.params.value, typeof e == "function" ? r = e(o) : typeof e == "string" ? r = this.expressionService.evaluate(e, o) : console.warn("AG Grid: footerValueGetter should be either a function or a string (expression)");
        } else
          r = "Total " + (this.params.value != null ? this.params.value : "");
        var i = this.getInnerCompDetails(this.params);
        this.comp.setInnerRenderer(i, r);
      }, t.prototype.getInnerCompDetails = function(e) {
        var r = this;
        if (e.fullWidth)
          return this.userComponentFactory.getFullWidthGroupRowInnerCellRenderer(this.gridOptions.groupRowRendererParams, e);
        var o = this.userComponentFactory.getInnerRendererDetails(e, e), i = function(p) {
          return p && p.componentClass == r.compClass;
        };
        if (o && !i(o))
          return o;
        var s = this.displayedGroupNode.rowGroupColumn, a = s ? s.getColDef() : void 0;
        if (a) {
          var l = this.userComponentFactory.getCellRendererDetails(a, e);
          if (l && !i(l))
            return l;
          if (i(l) && a.cellRendererParams && a.cellRendererParams.innerRenderer) {
            var u = this.userComponentFactory.getInnerRendererDetails(a.cellRendererParams, e);
            return u;
          }
        }
      }, t.prototype.addChildCount = function() {
        this.params.suppressCount || (this.addManagedListener(this.displayedGroupNode, ue.EVENT_ALL_CHILDREN_COUNT_CHANGED, this.updateChildCount.bind(this)), this.updateChildCount());
      }, t.prototype.updateChildCount = function() {
        var e = this.displayedGroupNode.allChildrenCount, r = this.isShowRowGroupForThisRow(), o = r && e != null && e >= 0, i = o ? "(" + e + ")" : "";
        this.comp.setChildCount(i);
      }, t.prototype.isShowRowGroupForThisRow = function() {
        if (this.gridOptionsWrapper.isTreeData())
          return !0;
        var e = this.displayedGroupNode.rowGroupColumn;
        if (!e)
          return !1;
        var r = this.params.column, o = r == null || r.isRowGroupDisplayed(e.getId());
        return o;
      }, t.prototype.addExpandAndContract = function() {
        var e = this.params, r = be("groupExpanded", this.gridOptionsWrapper, null), o = be("groupContracted", this.gridOptionsWrapper, null);
        r && this.eExpanded.appendChild(r), o && this.eContracted.appendChild(o);
        var i = e.eGridCell;
        !this.gridOptionsWrapper.isEnableGroupEdit() && this.isExpandable() && !e.suppressDoubleClickExpand && this.addManagedListener(i, "dblclick", this.onCellDblClicked.bind(this)), this.addManagedListener(this.eExpanded, "click", this.onExpandClicked.bind(this)), this.addManagedListener(this.eContracted, "click", this.onExpandClicked.bind(this)), this.addManagedListener(i, "keydown", this.onKeyDown.bind(this)), this.addManagedListener(e.node, ue.EVENT_EXPANDED_CHANGED, this.showExpandAndContractIcons.bind(this)), this.showExpandAndContractIcons();
        var s = this.onRowNodeIsExpandableChanged.bind(this);
        this.addManagedListener(this.displayedGroupNode, ue.EVENT_ALL_CHILDREN_COUNT_CHANGED, s), this.addManagedListener(this.displayedGroupNode, ue.EVENT_MASTER_CHANGED, s), this.addManagedListener(this.displayedGroupNode, ue.EVENT_GROUP_CHANGED, s), this.addManagedListener(this.displayedGroupNode, ue.EVENT_HAS_CHILDREN_CHANGED, s);
      }, t.prototype.onExpandClicked = function(e) {
        _t(e) || (xr(e), this.onExpandOrContract(e));
      }, t.prototype.onExpandOrContract = function(e) {
        var r = this.displayedGroupNode, o = !r.expanded;
        r.setExpanded(o, e);
      }, t.prototype.isExpandable = function() {
        if (this.showingValueForOpenedParent)
          return !0;
        var e = this.displayedGroupNode, r = this.columnModel.isPivotMode() && e.leafGroup, o = e.isExpandable() && !e.footer && !r;
        if (!o)
          return !1;
        var i = this.params.column, s = i != null && typeof i.getColDef().showRowGroup == "string";
        if (s) {
          var a = this.isShowRowGroupForThisRow();
          return a;
        }
        return !0;
      }, t.prototype.showExpandAndContractIcons = function() {
        var e = this, r = e.params, o = e.displayedGroupNode, i = e.columnModel, s = r.node, a = this.isExpandable();
        if (a) {
          var l = this.showingValueForOpenedParent ? !0 : s.expanded;
          this.comp.setExpandedDisplayed(l), this.comp.setContractedDisplayed(!l);
        } else
          this.comp.setExpandedDisplayed(!1), this.comp.setContractedDisplayed(!1);
        var u = i.isPivotMode(), p = u && o.leafGroup, d = a && !p, f = s.footer && s.level === -1;
        this.comp.addOrRemoveCssClass("ag-cell-expandable", d), this.comp.addOrRemoveCssClass("ag-row-group", d), u ? this.comp.addOrRemoveCssClass("ag-pivot-leaf-group", p) : f || this.comp.addOrRemoveCssClass("ag-row-group-leaf-indent", !d);
      }, t.prototype.onRowNodeIsExpandableChanged = function() {
        this.showExpandAndContractIcons(), this.setIndent(), this.refreshAriaExpanded();
      }, t.prototype.setupIndent = function() {
        var e = this.params.node, r = this.params.suppressPadding;
        r || (this.addManagedListener(e, ue.EVENT_UI_LEVEL_CHANGED, this.setIndent.bind(this)), this.setIndent());
      }, t.prototype.setIndent = function() {
        if (!this.gridOptionsWrapper.isGroupHideOpenParents()) {
          var e = this.params, r = e.node, o = !!e.colDef, i = this.gridOptionsWrapper.isTreeData(), s = !o || i || e.colDef.showRowGroup === !0, a = s ? r.uiLevel : 0, l = e.padding >= 0;
          l && me(function() {
            return console.warn("AG Grid: cellRendererParams.padding no longer works, it was deprecated in since v14.2 and removed in v26, configuring padding for groupCellRenderer should be done with Sass variables and themes. Please see the AG Grid documentation page for Themes, in particular the property $row-group-indent-size.");
          }, "groupCellRenderer->doDeprecatedWay"), this.indentClass && this.comp.addOrRemoveCssClass(this.indentClass, !1), this.indentClass = "ag-row-group-indent-" + a, this.comp.addOrRemoveCssClass(this.indentClass, !0);
        }
      }, t.prototype.addFullWidthRowDraggerIfNeeded = function() {
        var e = this;
        if (!(!this.params.fullWidth || !this.params.rowDrag)) {
          var r = new Li(function() {
            return e.params.value;
          }, this.params.node);
          this.createManagedBean(r, this.context), this.eGui.insertAdjacentElement("afterbegin", r.getGui());
        }
      }, t.prototype.isUserWantsSelected = function() {
        var e = this.params.checkbox;
        return typeof e == "function" ? e(this.params) : e === !0;
      }, t.prototype.addCheckboxIfNeeded = function() {
        var e = this, r = this.displayedGroupNode, o = this.isUserWantsSelected() && // footers cannot be selected
        !r.footer && // pinned rows cannot be selected
        !r.rowPinned && // details cannot be selected
        !r.detail;
        if (o) {
          var i = new _s();
          this.getContext().createBean(i), i.init({ rowNode: r, column: this.params.column }), this.eCheckbox.appendChild(i.getGui()), this.addDestroyFunc(function() {
            return e.getContext().destroyBean(i);
          });
        }
        this.comp.setCheckboxVisible(o);
      }, t.prototype.onKeyDown = function(e) {
        var r = e.key === N.ENTER;
        if (!(!r || this.params.suppressEnterExpand)) {
          var o = this.params.column && this.params.column.isCellEditable(this.params.node);
          o || this.onExpandOrContract(e);
        }
      }, t.prototype.onCellDblClicked = function(e) {
        if (!_t(e)) {
          var r = fi(this.eExpanded, e) || fi(this.eContracted, e);
          r || this.onExpandOrContract(e);
        }
      }, Io([
        h("expressionService")
      ], t.prototype, "expressionService", void 0), Io([
        h("valueFormatterService")
      ], t.prototype, "valueFormatterService", void 0), Io([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), Io([
        h("userComponentFactory")
      ], t.prototype, "userComponentFactory", void 0), Io([
        h("gridOptions")
      ], t.prototype, "gridOptions", void 0), t;
    }(H)
  );
  var bh = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), No = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Os = (
    /** @class */
    function(n) {
      bh(t, n);
      function t() {
        return n.call(this, t.TEMPLATE) || this;
      }
      return t.prototype.init = function(e) {
        var r = this, o = {
          setInnerRenderer: function(l, u) {
            return r.setRenderDetails(l, u);
          },
          setChildCount: function(l) {
            return r.eChildCount.innerHTML = l;
          },
          addOrRemoveCssClass: function(l, u) {
            return r.addOrRemoveCssClass(l, u);
          },
          setContractedDisplayed: function(l) {
            return Ee(r.eContracted, l);
          },
          setExpandedDisplayed: function(l) {
            return Ee(r.eExpanded, l);
          },
          setCheckboxVisible: function(l) {
            return r.eCheckbox.classList.toggle("ag-invisible", !l);
          }
        }, i = this.createManagedBean(new Nl()), s = !e.colDef, a = this.getGui();
        i.init(o, a, this.eCheckbox, this.eExpanded, this.eContracted, this.constructor, e), s && ke(a, "gridcell");
      }, t.prototype.setRenderDetails = function(e, r) {
        var o = this;
        if (e) {
          var i = e.newAgStackInstance();
          if (!i)
            return;
          i.then(function(s) {
            if (s) {
              var a = function() {
                return o.context.destroyBean(s);
              };
              o.isAlive() ? (o.eValue.appendChild(s.getGui()), o.addDestroyFunc(a)) : a();
            }
          });
        } else
          this.eValue.innerText = r;
      }, t.prototype.destroy = function() {
        this.getContext().destroyBean(this.innerCellRenderer), n.prototype.destroy.call(this);
      }, t.prototype.refresh = function() {
        return !1;
      }, t.TEMPLATE = `<span class="ag-cell-wrapper">
            <span class="ag-group-expanded" ref="eExpanded"></span>
            <span class="ag-group-contracted" ref="eContracted"></span>
            <span class="ag-group-checkbox ag-invisible" ref="eCheckbox"></span>
            <span class="ag-group-value" ref="eValue"></span>
            <span class="ag-group-child-count" ref="eChildCount"></span>
        </span>`, No([
        I("eExpanded")
      ], t.prototype, "eExpanded", void 0), No([
        I("eContracted")
      ], t.prototype, "eContracted", void 0), No([
        I("eCheckbox")
      ], t.prototype, "eCheckbox", void 0), No([
        I("eValue")
      ], t.prototype, "eValue", void 0), No([
        I("eChildCount")
      ], t.prototype, "eChildCount", void 0), t;
    }(le)
  );
  var Fh = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), xl = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Lh = (
    /** @class */
    function(n) {
      Fh(t, n);
      function t() {
        return n.call(this, t.TEMPLATE) || this;
      }
      return t.prototype.init = function(e) {
        e.node.failedLoad ? this.setupFailed() : this.setupLoading();
      }, t.prototype.setupFailed = function() {
        this.eLoadingText.innerText = "ERR";
      }, t.prototype.setupLoading = function() {
        var e = be("groupLoading", this.gridOptionsWrapper, null);
        e && this.eLoadingIcon.appendChild(e);
        var r = this.gridOptionsWrapper.getLocaleTextFunc();
        this.eLoadingText.innerText = r("loadingOoo", "Loading");
      }, t.prototype.refresh = function(e) {
        return !1;
      }, t.prototype.destroy = function() {
        n.prototype.destroy.call(this);
      }, t.TEMPLATE = `<div class="ag-loading">
            <span class="ag-loading-icon" ref="eLoadingIcon"></span>
            <span class="ag-loading-text" ref="eLoadingText"></span>
        </div>`, xl([
        I("eLoadingIcon")
      ], t.prototype, "eLoadingIcon", void 0), xl([
        I("eLoadingText")
      ], t.prototype, "eLoadingText", void 0), t;
    }(le)
  );
  var Mh = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Ih = (
    /** @class */
    function(n) {
      Mh(t, n);
      function t() {
        return n.call(this) || this;
      }
      return t.prototype.destroy = function() {
        n.prototype.destroy.call(this);
      }, t.prototype.init = function(e) {
        var r = this.gridOptionsWrapper.getOverlayLoadingTemplate() ? this.gridOptionsWrapper.getOverlayLoadingTemplate() : t.DEFAULT_LOADING_OVERLAY_TEMPLATE, o = this.gridOptionsWrapper.getLocaleTextFunc(), i = r.replace("[LOADING...]", o("loadingOoo", "Loading..."));
        this.setTemplate(i);
      }, t.DEFAULT_LOADING_OVERLAY_TEMPLATE = '<span class="ag-overlay-loading-center">[LOADING...]</span>', t;
    }(le)
  );
  var Nh = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), xh = (
    /** @class */
    function(n) {
      Nh(t, n);
      function t() {
        return n.call(this) || this;
      }
      return t.prototype.destroy = function() {
        n.prototype.destroy.call(this);
      }, t.prototype.init = function(e) {
        var r = this.gridOptionsWrapper.getOverlayNoRowsTemplate() ? this.gridOptionsWrapper.getOverlayNoRowsTemplate() : t.DEFAULT_NO_ROWS_TEMPLATE, o = this.gridOptionsWrapper.getLocaleTextFunc(), i = r.replace("[NO_ROWS_TO_SHOW]", o("noRowsToShow", "No Rows To Show"));
        this.setTemplate(i);
      }, t.DEFAULT_NO_ROWS_TEMPLATE = '<span class="ag-overlay-no-rows-center">[NO_ROWS_TO_SHOW]</span>', t;
    }(le)
  );
  var Gh = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Hh = (
    /** @class */
    function(n) {
      Gh(t, n);
      function t() {
        return n.call(
          this,
          /* html */
          '<div class="ag-tooltip"></div>'
        ) || this;
      }
      return t.prototype.init = function(e) {
        var r = e.value;
        this.getGui().innerHTML = Ot(r);
      }, t;
    }(Ur)
  );
  var Vh = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Ii = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Gl = (
    /** @class */
    function(n) {
      Vh(t, n);
      function t() {
        var e = n !== null && n.apply(this, arguments) || this;
        return e.agGridDefaults = {
          //date
          agDateInput: eh,
          //header
          agColumnHeader: lh,
          agColumnGroupHeader: ph,
          //floating filters
          agTextColumnFloatingFilter: Ol,
          agNumberColumnFloatingFilter: nh,
          agDateColumnFloatingFilter: Qd,
          agReadOnlyFloatingFilter: Id,
          // renderers
          agAnimateShowChangeCellRenderer: bl,
          agAnimateSlideCellRenderer: Fl,
          agGroupCellRenderer: Os,
          agGroupRowRenderer: Os,
          agLoadingCellRenderer: Lh,
          //editors
          agCellEditor: bi,
          agTextCellEditor: bi,
          agSelectCellEditor: Ss,
          agPopupTextCellEditor: Dl,
          agPopupSelectCellEditor: Tl,
          agLargeTextCellEditor: Al,
          //filter
          agTextColumnFilter: Di,
          agNumberColumnFilter: ws,
          agDateColumnFilter: ys,
          //overlays
          agLoadingOverlay: Ih,
          agNoRowsOverlay: xh,
          // tooltips
          agTooltipComponent: Hh
        }, e.agDeprecatedNames = {
          set: {
            newComponentName: "agSetColumnFilter",
            propertyHolder: "filter"
          },
          text: {
            newComponentName: "agTextColumnFilter",
            propertyHolder: "filter"
          },
          number: {
            newComponentName: "agNumberColumnFilter",
            propertyHolder: "filter"
          },
          date: {
            newComponentName: "agDateColumnFilter",
            propertyHolder: "filter"
          },
          group: {
            newComponentName: "agGroupCellRenderer",
            propertyHolder: "cellRenderer"
          },
          animateShowChange: {
            newComponentName: "agAnimateShowChangeCellRenderer",
            propertyHolder: "cellRenderer"
          },
          animateSlide: {
            newComponentName: "agAnimateSlideCellRenderer",
            propertyHolder: "cellRenderer"
          },
          select: {
            newComponentName: "agSelectCellEditor",
            propertyHolder: "cellEditor"
          },
          largeText: {
            newComponentName: "agLargeTextCellEditor",
            propertyHolder: "cellEditor"
          },
          popupSelect: {
            newComponentName: "agPopupSelectCellEditor",
            propertyHolder: "cellEditor"
          },
          popupText: {
            newComponentName: "agPopupTextCellEditor",
            propertyHolder: "cellEditor"
          },
          richSelect: {
            newComponentName: "agRichSelectCellEditor",
            propertyHolder: "cellEditor"
          },
          headerComponent: {
            newComponentName: "agColumnHeader",
            propertyHolder: "headerComponent"
          }
        }, e.jsComps = {}, e.fwComps = {}, e;
      }
      return t.prototype.init = function() {
        var e = this;
        this.gridOptions.components != null && ie(this.gridOptions.components, function(r, o) {
          return e.registerJsComponent(r, o);
        }), this.gridOptions.frameworkComponents != null && ie(this.gridOptions.frameworkComponents, function(r, o) {
          return e.registerFwComponent(r, o);
        });
      }, t.prototype.registerDefaultComponent = function(e, r) {
        var o = this.translateIfDeprecated(e);
        if (this.agGridDefaults[o]) {
          console.error("Trying to overwrite a default component. You should call registerComponent");
          return;
        }
        this.agGridDefaults[o] = r;
      }, t.prototype.registerJsComponent = function(e, r) {
        var o = this.translateIfDeprecated(e);
        if (this.fwComps[o]) {
          console.error("Trying to register a component that you have already registered for frameworks: " + o);
          return;
        }
        this.jsComps[o] = r;
      }, t.prototype.registerFwComponent = function(e, r) {
        var o = "AG Grid: As of v27, registering components via grid property frameworkComponents is deprecated. Instead register both JavaScript AND Framework Components via the components property.";
        me(function() {
          return console.warn(o);
        }, "UserComponentRegistry.frameworkComponentsDeprecated");
        var i = this.translateIfDeprecated(e);
        this.fwComps[i] = r;
      }, t.prototype.retrieve = function(e) {
        var r = this.translateIfDeprecated(e), o = function(p, d) {
          return { componentFromFramework: d, component: p };
        }, i = this.getFrameworkOverrides().frameworkComponent(r);
        if (i != null)
          return o(i, !0);
        var s = this.fwComps[r];
        if (s)
          return o(s, !0);
        var a = this.jsComps[r];
        if (a) {
          var l = this.getFrameworkOverrides().isFrameworkComponent(a);
          return o(a, l);
        }
        var u = this.agGridDefaults[r];
        return u ? o(u, !1) : (Object.keys(this.agGridDefaults).indexOf(r) < 0 && console.warn("AG Grid: Looking for component [" + r + "] but it wasn't found."), null);
      }, t.prototype.translateIfDeprecated = function(e) {
        var r = this.agDeprecatedNames[e];
        return r != null ? (me(function() {
          console.warn("ag-grid. Since v15.0 component names have been renamed to be namespaced. You should rename " + r.propertyHolder + ":" + e + " to " + r.propertyHolder + ":" + r.newComponentName);
        }, "DEPRECATE_COMPONENT_" + e), r.newComponentName) : e;
      }, Ii([
        h("gridOptions")
      ], t.prototype, "gridOptions", void 0), Ii([
        h("agComponentUtils")
      ], t.prototype, "agComponentUtils", void 0), Ii([
        B
      ], t.prototype, "init", null), t = Ii([
        j("userComponentRegistry")
      ], t), t;
    }(H)
  );
  var Wh = {
    propertyName: "dateComponent",
    cellRenderer: !1
  }, Bh = {
    propertyName: "headerComponent",
    cellRenderer: !1
  }, kh = {
    propertyName: "headerGroupComponent",
    cellRenderer: !1
  }, Hl = {
    propertyName: "cellRenderer",
    cellRenderer: !0
  }, Uh = {
    propertyName: "cellEditor",
    cellRenderer: !1
  }, Vl = {
    propertyName: "innerRenderer",
    cellRenderer: !0
  }, jh = {
    propertyName: "loadingOverlayComponent",
    cellRenderer: !1
  }, zh = {
    propertyName: "noRowsOverlayComponent",
    cellRenderer: !1
  }, $h = {
    propertyName: "tooltipComponent",
    cellRenderer: !1
  }, As = {
    propertyName: "filter",
    cellRenderer: !1
  }, Kh = {
    propertyName: "floatingFilterComponent",
    cellRenderer: !1
  }, Yh = {
    propertyName: "toolPanel",
    cellRenderer: !1
  }, qh = {
    propertyName: "statusPanel",
    cellRenderer: !1
  }, Xh = {
    propertyName: "fullWidthCellRenderer",
    cellRenderer: !0
  }, Qh = {
    propertyName: "loadingCellRenderer",
    cellRenderer: !0
  }, Zh = {
    propertyName: "groupRowRenderer",
    cellRenderer: !0
  }, Jh = {
    propertyName: "detailCellRenderer",
    cellRenderer: !0
  };
  var Wl = (
    /** @class */
    function() {
      function n() {
      }
      return n.getFloatingFilterType = function(t) {
        return this.filterToFloatingFilterMapping[t];
      }, n.filterToFloatingFilterMapping = {
        set: "agSetColumnFloatingFilter",
        agSetColumnFilter: "agSetColumnFloatingFilter",
        multi: "agMultiColumnFloatingFilter",
        agMultiColumnFilter: "agMultiColumnFloatingFilter",
        number: "agNumberColumnFloatingFilter",
        agNumberColumnFilter: "agNumberColumnFloatingFilter",
        date: "agDateColumnFloatingFilter",
        agDateColumnFilter: "agDateColumnFloatingFilter",
        text: "agTextColumnFloatingFilter",
        agTextColumnFilter: "agTextColumnFloatingFilter"
      }, n;
    }()
  );
  var ef = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), jr = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Bl = (
    /** @class */
    function(n) {
      ef(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.getHeaderCompDetails = function(e, r) {
        return this.getCompDetails(e, Bh, "agColumnHeader", r);
      }, t.prototype.getHeaderGroupCompDetails = function(e) {
        var r = e.columnGroup.getColGroupDef();
        return this.getCompDetails(r, kh, "agColumnGroupHeader", e);
      }, t.prototype.getFullWidthCellRendererDetails = function(e) {
        return this.getCompDetails(this.gridOptions, Xh, null, e, !0);
      }, t.prototype.getFullWidthLoadingCellRendererDetails = function(e) {
        return this.getCompDetails(this.gridOptions, Qh, "agLoadingCellRenderer", e, !0);
      }, t.prototype.getFullWidthGroupCellRendererDetails = function(e) {
        return this.getCompDetails(this.gridOptions, Zh, "agGroupRowRenderer", e, !0);
      }, t.prototype.getFullWidthDetailCellRendererDetails = function(e) {
        return this.getCompDetails(this.gridOptions, Jh, "agDetailCellRenderer", e, !0);
      }, t.prototype.getInnerRendererDetails = function(e, r) {
        return this.getCompDetails(e, Vl, null, r);
      }, t.prototype.getFullWidthGroupRowInnerCellRenderer = function(e, r) {
        return this.getCompDetails(e, Vl, null, r);
      }, t.prototype.getCellRendererDetails = function(e, r) {
        return this.getCompDetails(e, Hl, null, r);
      }, t.prototype.getCellEditorDetails = function(e, r) {
        return this.getCompDetails(e, Uh, "agCellEditor", r, !0);
      }, t.prototype.getFilterDetails = function(e, r, o) {
        return this.getCompDetails(e, As, o, r, !0);
      }, t.prototype.getDateCompDetails = function(e) {
        return this.getCompDetails(this.gridOptions, Wh, "agDateInput", e, !0);
      }, t.prototype.getLoadingOverlayCompDetails = function(e) {
        return this.getCompDetails(this.gridOptions, jh, "agLoadingOverlay", e, !0);
      }, t.prototype.getNoRowsOverlayCompDetails = function(e) {
        return this.getCompDetails(this.gridOptions, zh, "agNoRowsOverlay", e, !0);
      }, t.prototype.getTooltipCompDetails = function(e) {
        return this.getCompDetails(e.colDef, $h, "agTooltipComponent", e, !0);
      }, t.prototype.getSetFilterCellRendererDetails = function(e, r) {
        return this.getCompDetails(e, Hl, null, r);
      }, t.prototype.getFloatingFilterCompDetails = function(e, r, o) {
        return this.getCompDetails(e, Kh, o, r);
      }, t.prototype.getToolPanelCompDetails = function(e, r) {
        return this.getCompDetails(e, Yh, null, r, !0);
      }, t.prototype.getStatusPanelCompDetails = function(e, r) {
        return this.getCompDetails(e, qh, null, r, !0);
      }, t.prototype.getCompDetails = function(e, r, o, i, s) {
        var a = this;
        s === void 0 && (s = !1);
        var l = r.propertyName, u = r.cellRenderer, p = this.getCompKeys(e, r, i), d = p.compName, f = p.jsComp, v = p.fwComp, y = p.paramsFromSelector, R = p.popupFromSelector, _ = p.popupPositionFromSelector, D = function(X) {
          var ce = a.userComponentRegistry.retrieve(X);
          ce && (f = ce.componentFromFramework ? void 0 : ce.component, v = ce.componentFromFramework ? ce.component : void 0);
        };
        if (d != null && D(d), f == null && v == null && o != null && D(o), f && u && !this.agComponentUtils.doesImplementIComponent(f) && (f = this.agComponentUtils.adaptFunction(l, f)), !f && !v) {
          s && console.error("Could not find component " + d + ", did you forget to configure this component?");
          return;
        }
        var P = this.mergeParamsWithApplicationProvidedParams(e, r, i, y), F = f == null, U = f || v;
        return {
          componentFromFramework: F,
          componentClass: U,
          params: P,
          type: r,
          popupFromSelector: R,
          popupPositionFromSelector: _,
          newAgStackInstance: function() {
            return a.newAgStackInstance(U, F, P, r);
          }
        };
      }, t.prototype.getCompKeys = function(e, r, o) {
        var i = this, s = r.propertyName, a, l, u, p, d, f;
        if (e) {
          var v = e, y = v[s + "Selector"], R = y ? y(o) : null, _ = function(P, F) {
            var U = function() {
              var ce = "AG Grid: As of v27, the property " + s + "Framework is deprecated. The property " + s + " can now be used for JavaScript AND Framework Components.";
              me(function() {
                return console.warn(ce);
              }, "UserComponentFactory." + s + "FrameworkDeprecated");
            };
            if (typeof P == "string")
              a = P;
            else if (typeof F == "string")
              U(), a = F;
            else if (P != null && P !== !0) {
              var X = i.getFrameworkOverrides().isFrameworkComponent(P);
              X ? u = P : l = P;
            } else F != null && (U(), u = F);
          };
          if (R) {
            if (R.frameworkComponent != null) {
              var D = "AG Grid: As of v27, the return for " + s + "Selector has attributes [component, params] only. The attribute frameworkComponent is deprecated. You should now return back Framework Components using the 'component' attribute and the grid works out if it's a framework component or not.";
              me(function() {
                return console.warn(D);
              }, "UserComponentFactory." + s + "FrameworkSelectorDeprecated"), _(R.frameworkComponent, void 0);
            } else
              _(R.component, void 0);
            p = R.params, d = R.popup, f = R.popupPosition;
          } else
            _(v[s], v[s + "Framework"]);
        }
        return { compName: a, jsComp: l, fwComp: u, paramsFromSelector: p, popupFromSelector: d, popupPositionFromSelector: f };
      }, t.prototype.newAgStackInstance = function(e, r, o, i) {
        var s = i.propertyName, a = !r, l;
        if (a)
          l = new e();
        else {
          var u = this.componentMetadataProvider.retrieve(s);
          l = this.frameworkComponentWrapper.wrap(e, u.mandatoryMethodList, u.optionalMethodList, i);
        }
        var p = this.initComponent(l, o);
        return p == null ? Qe.resolve(l) : p.then(function() {
          return l;
        });
      }, t.prototype.mergeParamsWithApplicationProvidedParams = function(e, r, o, i) {
        i === void 0 && (i = null);
        var s = {
          context: this.gridOptionsWrapper.getContext(),
          columnApi: this.gridOptionsWrapper.getColumnApi(),
          api: this.gridOptionsWrapper.getApi()
        };
        Fe(s, o);
        var a = e, l = a && a[r.propertyName + "Params"];
        if (typeof l == "function") {
          var u = l(o);
          Fe(s, u);
        } else typeof l == "object" && Fe(s, l);
        return Fe(s, i), s;
      }, t.prototype.initComponent = function(e, r) {
        if (this.context.createBean(e), e.init != null)
          return e.init(r);
      }, t.prototype.getDefaultFloatingFilterType = function(e) {
        if (e == null)
          return null;
        var r = null, o = this.getCompKeys(e, As), i = o.compName, s = o.jsComp, a = o.fwComp;
        if (i)
          r = Wl.getFloatingFilterType(i);
        else {
          var l = s == null && a == null && e.filter === !0;
          if (l) {
            var u = oe.isRegistered(c.ModuleNames.SetFilterModule);
            r = u ? "agSetColumnFloatingFilter" : "agTextColumnFloatingFilter";
          }
        }
        return r;
      }, jr([
        h("gridOptions")
      ], t.prototype, "gridOptions", void 0), jr([
        h("agComponentUtils")
      ], t.prototype, "agComponentUtils", void 0), jr([
        h("componentMetadataProvider")
      ], t.prototype, "componentMetadataProvider", void 0), jr([
        h("userComponentRegistry")
      ], t.prototype, "userComponentRegistry", void 0), jr([
        ve("frameworkComponentWrapper")
      ], t.prototype, "frameworkComponentWrapper", void 0), t = jr([
        j("userComponentFactory")
      ], t), t;
    }(H)
  );
  (function(n) {
    n[n.SINGLE_SHEET = 0] = "SINGLE_SHEET", n[n.MULTI_SHEET = 1] = "MULTI_SHEET";
  })(c.ExcelFactoryMode || (c.ExcelFactoryMode = {}));
  var tf = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), yr = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, kl = (
    /** @class */
    function(n) {
      tf(t, n);
      function t() {
        var e = n !== null && n.apply(this, arguments) || this;
        return e.dragEndFunctions = [], e.dragSources = [], e;
      }
      return t.prototype.init = function() {
        this.logger = this.loggerFactory.create("DragService");
      }, t.prototype.removeAllListeners = function() {
        this.dragSources.forEach(this.removeListener.bind(this)), this.dragSources.length = 0;
      }, t.prototype.removeListener = function(e) {
        var r = e.dragSource.eElement, o = e.mouseDownListener;
        if (r.removeEventListener("mousedown", o), e.touchEnabled) {
          var i = e.touchStartListener;
          r.removeEventListener("touchstart", i, { passive: !0 });
        }
      }, t.prototype.removeDragSource = function(e) {
        var r = this.dragSources.find(function(o) {
          return o.dragSource === e;
        });
        r && (this.removeListener(r), Ce(this.dragSources, r));
      }, t.prototype.isDragging = function() {
        return this.dragging;
      }, t.prototype.addDragSource = function(e, r) {
        var o = this;
        r === void 0 && (r = !1);
        var i = this.onMouseDown.bind(this, e);
        e.eElement.addEventListener("mousedown", i);
        var s = null, a = this.gridOptionsWrapper.isSuppressTouch();
        r && !a && (s = function(l) {
          l.cancelable && l.preventDefault(), o.onTouchStart(e, l);
        }, e.eElement.addEventListener("touchstart", s, { passive: !0 })), this.dragSources.push({
          dragSource: e,
          mouseDownListener: i,
          touchStartListener: s,
          touchEnabled: r
        });
      }, t.prototype.onTouchStart = function(e, r) {
        var o = this;
        this.currentDragParams = e, this.dragging = !1;
        var i = r.touches[0];
        this.touchLastTime = i, this.touchStart = i;
        var s = function(d) {
          return o.onTouchMove(d, e.eElement);
        }, a = function(d) {
          return o.onTouchUp(d, e.eElement);
        }, l = function(d) {
          d.cancelable && d.preventDefault();
        }, u = e.eElement, p = [
          // Prevents the page document from moving while we are dragging items around.
          // preventDefault needs to be called in the touchmove listener and never inside the
          // touchstart, because using touchstart causes the click event to be cancelled on touch devices.
          { target: document, type: "touchmove", listener: l, options: { passive: !1 } },
          { target: u, type: "touchmove", listener: s, options: { passive: !0 } },
          { target: u, type: "touchend", listener: a, options: { passive: !0 } },
          { target: u, type: "touchcancel", listener: a, options: { passive: !0 } }
        ];
        this.addTemporaryEvents(p), e.dragStartPixels === 0 && this.onCommonMove(i, this.touchStart, e.eElement);
      }, t.prototype.onMouseDown = function(e, r) {
        var o = this, i = r;
        if (!(e.skipMouseEvent && e.skipMouseEvent(r)) && !i._alreadyProcessedByDragService && (i._alreadyProcessedByDragService = !0, r.button === 0)) {
          this.currentDragParams = e, this.dragging = !1, this.mouseStartEvent = r;
          var s = this.gridOptionsWrapper.getDocument(), a = function(f) {
            return o.onMouseMove(f, e.eElement);
          }, l = function(f) {
            return o.onMouseUp(f, e.eElement);
          }, u = function(f) {
            return f.preventDefault();
          }, p = s, d = [
            { target: p, type: "mousemove", listener: a },
            { target: p, type: "mouseup", listener: l },
            { target: p, type: "contextmenu", listener: u }
          ];
          this.addTemporaryEvents(d), e.dragStartPixels === 0 && this.onMouseMove(r, e.eElement);
        }
      }, t.prototype.addTemporaryEvents = function(e) {
        e.forEach(function(r) {
          var o = r.target, i = r.type, s = r.listener, a = r.options;
          o.addEventListener(i, s, a);
        }), this.dragEndFunctions.push(function() {
          e.forEach(function(r) {
            var o = r.target, i = r.type, s = r.listener, a = r.options;
            o.removeEventListener(i, s, a);
          });
        });
      }, t.prototype.isEventNearStartEvent = function(e, r) {
        var o = this.currentDragParams.dragStartPixels, i = g(o) ? o : 4;
        return as(e, r, i);
      }, t.prototype.getFirstActiveTouch = function(e) {
        for (var r = 0; r < e.length; r++)
          if (e[r].identifier === this.touchStart.identifier)
            return e[r];
        return null;
      }, t.prototype.onCommonMove = function(e, r, o) {
        if (!this.dragging) {
          if (!this.dragging && this.isEventNearStartEvent(e, r))
            return;
          this.dragging = !0;
          var i = {
            type: m.EVENT_DRAG_STARTED,
            api: this.gridApi,
            columnApi: this.columnApi,
            target: o
          };
          this.eventService.dispatchEvent(i), this.currentDragParams.onDragStart(r), this.currentDragParams.onDragging(r);
        }
        this.currentDragParams.onDragging(e);
      }, t.prototype.onTouchMove = function(e, r) {
        var o = this.getFirstActiveTouch(e.touches);
        o && this.onCommonMove(o, this.touchStart, r);
      }, t.prototype.onMouseMove = function(e, r) {
        Ro() && e.type === "mousemove" && e.cancelable && this.mouseEventService.isEventFromThisGrid(e) && !this.isOverFormFieldElement(e) && e.preventDefault(), this.onCommonMove(e, this.mouseStartEvent, r);
      }, t.prototype.isOverFormFieldElement = function(e) {
        var r, o, i = e.target, s = (r = i) === null || r === void 0 ? void 0 : r.tagName.toLocaleLowerCase();
        return !!(!((o = s) === null || o === void 0) && o.match("^a$|textarea|input|select|button"));
      }, t.prototype.onTouchUp = function(e, r) {
        var o = this.getFirstActiveTouch(e.changedTouches);
        o || (o = this.touchLastTime), this.onUpCommon(o, r);
      }, t.prototype.onMouseUp = function(e, r) {
        this.onUpCommon(e, r);
      }, t.prototype.onUpCommon = function(e, r) {
        if (this.dragging) {
          this.dragging = !1, this.currentDragParams.onDragStop(e);
          var o = {
            type: m.EVENT_DRAG_STOPPED,
            api: this.gridApi,
            columnApi: this.columnApi,
            target: r
          };
          this.eventService.dispatchEvent(o);
        }
        this.mouseStartEvent = null, this.touchStart = null, this.touchLastTime = null, this.currentDragParams = null, this.dragEndFunctions.forEach(function(i) {
          return i();
        }), this.dragEndFunctions.length = 0;
      }, yr([
        h("loggerFactory")
      ], t.prototype, "loggerFactory", void 0), yr([
        h("columnApi")
      ], t.prototype, "columnApi", void 0), yr([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), yr([
        h("mouseEventService")
      ], t.prototype, "mouseEventService", void 0), yr([
        B
      ], t.prototype, "init", null), yr([
        De
      ], t.prototype, "removeAllListeners", null), t = yr([
        j("dragService")
      ], t), t;
    }(H)
  );
  var rf = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Ni = function() {
    return Ni = Object.assign || function(n) {
      for (var t, e = 1, r = arguments.length; e < r; e++) {
        t = arguments[e];
        for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
      }
      return n;
    }, Ni.apply(this, arguments);
  }, bt = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Ul = (
    /** @class */
    function(n) {
      rf(t, n);
      function t() {
        var r = n !== null && n.apply(this, arguments) || this;
        return r.allColumnFilters = /* @__PURE__ */ new Map(), r.activeAggregateFilters = [], r.activeColumnFilters = [], r.quickFilter = null, r.quickFilterParts = null, r.processingFilterChange = !1, r;
      }
      e = t, t.prototype.init = function() {
        var r = this;
        this.addManagedListener(this.eventService, m.EVENT_GRID_COLUMNS_CHANGED, function() {
          return r.onColumnsChanged();
        }), this.addManagedListener(this.eventService, m.EVENT_COLUMN_VALUE_CHANGED, function() {
          return r.refreshFiltersForAggregations();
        }), this.addManagedListener(this.eventService, m.EVENT_COLUMN_PIVOT_CHANGED, function() {
          return r.refreshFiltersForAggregations();
        }), this.addManagedListener(this.eventService, m.EVENT_COLUMN_PIVOT_MODE_CHANGED, function() {
          return r.refreshFiltersForAggregations();
        }), this.quickFilter = this.parseQuickFilter(this.gridOptionsWrapper.getQuickFilterText()), this.setQuickFilterParts(), this.allowShowChangeAfterFilter = this.gridOptionsWrapper.isAllowShowChangeAfterFilter();
      }, t.prototype.setQuickFilterParts = function() {
        this.quickFilterParts = this.quickFilter ? this.quickFilter.split(" ") : null;
      }, t.prototype.setFilterModel = function(r) {
        var o = this, i = [], s = this.getFilterModel();
        if (r) {
          var a = ls(Object.keys(r));
          this.allColumnFilters.forEach(function(l, u) {
            var p = r[u];
            i.push(o.setModelOnFilterWrapper(l.filterPromise, p)), a.delete(u);
          }), a.forEach(function(l) {
            var u = o.columnModel.getPrimaryColumn(l) || o.columnModel.getGridColumn(l);
            if (!u) {
              console.warn("AG Grid: setFilterModel() - no column found for colId: " + l);
              return;
            }
            if (!u.isFilterAllowed()) {
              console.warn("AG Grid: setFilterModel() - unable to fully apply model, filtering disabled for colId: " + l);
              return;
            }
            var p = o.getOrCreateFilterWrapper(u, "NO_UI");
            if (!p) {
              console.warn("AG-Grid: setFilterModel() - unable to fully apply model, unable to create filter for colId: " + l);
              return;
            }
            i.push(o.setModelOnFilterWrapper(p.filterPromise, r[l]));
          });
        } else
          this.allColumnFilters.forEach(function(l) {
            i.push(o.setModelOnFilterWrapper(l.filterPromise, null));
          });
        Qe.all(i).then(function() {
          var l = o.getFilterModel(), u = [];
          o.allColumnFilters.forEach(function(p, d) {
            var f = s ? s[d] : null, v = l ? l[d] : null;
            re.jsonEquals(f, v) || u.push(p.column);
          }), u.length > 0 && o.onFilterChanged({ columns: u });
        });
      }, t.prototype.setModelOnFilterWrapper = function(r, o) {
        return new Qe(function(i) {
          r.then(function(s) {
            typeof s.setModel != "function" && (console.warn("AG Grid: filter missing setModel method, which is needed for setFilterModel"), i()), (s.setModel(o) || Qe.resolve()).then(function() {
              return i();
            });
          });
        });
      }, t.prototype.getFilterModel = function() {
        var r = {};
        return this.allColumnFilters.forEach(function(o, i) {
          var s = o.filterPromise, a = s.resolveNow(null, function(u) {
            return u;
          });
          if (a == null)
            return null;
          if (typeof a.getModel != "function") {
            console.warn("AG Grid: filter API missing getModel method, which is needed for getFilterModel");
            return;
          }
          var l = a.getModel();
          g(l) && (r[i] = l);
        }), r;
      }, t.prototype.isColumnFilterPresent = function() {
        return this.activeColumnFilters.length > 0;
      }, t.prototype.isAggregateFilterPresent = function() {
        return !!this.activeAggregateFilters.length;
      }, t.prototype.doAggregateFiltersPass = function(r, o) {
        return this.doColumnFiltersPass(r, o, !0);
      }, t.prototype.updateActiveFilters = function() {
        var r = this;
        this.activeColumnFilters.length = 0, this.activeAggregateFilters.length = 0;
        var o = function(a) {
          return a ? a.isFilterActive ? a.isFilterActive() : (console.warn("AG Grid: Filter is missing isFilterActive() method"), !1) : !1;
        }, i = !!this.gridOptionsWrapper.getGroupAggFiltering(), s = function(a) {
          var l = !a.isPrimary();
          if (l)
            return !0;
          var u = !r.columnModel.isPivotActive(), p = a.isValueActive();
          return !p || !u ? !1 : r.columnModel.isPivotMode() ? !0 : i;
        };
        this.allColumnFilters.forEach(function(a) {
          if (a.filterPromise.resolveNow(!1, o)) {
            var l = a.filterPromise.resolveNow(null, function(u) {
              return u;
            });
            s(a.column) ? r.activeAggregateFilters.push(l) : r.activeColumnFilters.push(l);
          }
        });
      }, t.prototype.updateFilterFlagInColumns = function(r, o) {
        this.allColumnFilters.forEach(function(i) {
          var s = i.filterPromise.resolveNow(!1, function(a) {
            return a.isFilterActive();
          });
          i.column.setFilterActive(s, r, o);
        });
      }, t.prototype.isAnyFilterPresent = function() {
        return this.isQuickFilterPresent() || this.isColumnFilterPresent() || this.isAggregateFilterPresent() || this.gridOptionsWrapper.isExternalFilterPresent();
      }, t.prototype.doColumnFiltersPass = function(r, o, i) {
        for (var s = r.data, a = r.aggData, l = i ? this.activeAggregateFilters : this.activeColumnFilters, u = i ? a : s, p = 0; p < l.length; p++) {
          var d = l[p];
          if (!(d == null || d === o)) {
            if (typeof d.doesFilterPass != "function")
              throw new Error("Filter is missing method doesFilterPass");
            if (!d.doesFilterPass({ node: r, data: u }))
              return !1;
          }
        }
        return !0;
      }, t.prototype.parseQuickFilter = function(r) {
        return g(r) ? this.gridOptionsWrapper.isRowModelDefault() ? r.toUpperCase() : (console.warn("AG Grid - Quick filtering only works with the Client-Side Row Model"), null) : null;
      }, t.prototype.setQuickFilter = function(r) {
        if (r != null && typeof r != "string") {
          console.warn("AG Grid - setQuickFilter() only supports string inputs, received: " + typeof r);
          return;
        }
        var o = this.parseQuickFilter(r);
        this.quickFilter !== o && (this.quickFilter = o, this.setQuickFilterParts(), this.onFilterChanged());
      }, t.prototype.refreshFiltersForAggregations = function() {
        var r = this.gridOptionsWrapper.getGroupAggFiltering();
        r && this.onFilterChanged();
      }, t.prototype.callOnFilterChangedOutsideRenderCycle = function(r) {
        var o = this;
        r === void 0 && (r = {});
        var i = function() {
          return o.onFilterChanged(r);
        };
        this.rowRenderer.isRefreshInProgress() ? setTimeout(i, 0) : i();
      }, t.prototype.onFilterChanged = function(r) {
        r === void 0 && (r = {});
        var o = r.filterInstance, i = r.additionalEventAttributes, s = r.columns;
        this.updateActiveFilters(), this.updateFilterFlagInColumns("filterChanged", i), this.allColumnFilters.forEach(function(l) {
          l.filterPromise && l.filterPromise.then(function(u) {
            u && u !== o && u.onAnyFilterChanged && u.onAnyFilterChanged();
          });
        });
        var a = {
          type: m.EVENT_FILTER_CHANGED,
          api: this.gridApi,
          columnApi: this.columnApi,
          columns: s || []
        };
        i && Fe(a, i), this.processingFilterChange = !0, this.eventService.dispatchEvent(a), this.processingFilterChange = !1;
      }, t.prototype.isSuppressFlashingCellsBecauseFiltering = function() {
        return !this.allowShowChangeAfterFilter && this.processingFilterChange;
      }, t.prototype.isQuickFilterPresent = function() {
        return this.quickFilter !== null;
      }, t.prototype.doesRowPassOtherFilters = function(r, o) {
        return this.doesRowPassFilter({ rowNode: o, filterInstanceToSkip: r });
      }, t.prototype.doesRowPassQuickFilterNoCache = function(r, o) {
        var i = this, s = this.columnModel.getAllColumnsForQuickFilter();
        return s.some(function(a) {
          var l = i.getQuickFilterTextForColumn(a, r);
          return g(l) && l.indexOf(o) >= 0;
        });
      }, t.prototype.doesRowPassQuickFilterCache = function(r, o) {
        return r.quickFilterAggregateText || this.aggregateRowForQuickFilter(r), r.quickFilterAggregateText.indexOf(o) >= 0;
      }, t.prototype.doesRowPassQuickFilter = function(r) {
        var o = this, i = this.gridOptionsWrapper.isCacheQuickFilter();
        return this.quickFilterParts.every(function(s) {
          return i ? o.doesRowPassQuickFilterCache(r, s) : o.doesRowPassQuickFilterNoCache(r, s);
        });
      }, t.prototype.doesRowPassAggregateFilters = function(r) {
        return !(this.isAggregateFilterPresent() && !this.doAggregateFiltersPass(r.rowNode, r.filterInstanceToSkip));
      }, t.prototype.doesRowPassFilter = function(r) {
        return !(this.isQuickFilterPresent() && !this.doesRowPassQuickFilter(r.rowNode) || this.gridOptionsWrapper.isExternalFilterPresent() && !this.gridOptionsWrapper.doesExternalFilterPass(r.rowNode) || this.isColumnFilterPresent() && !this.doColumnFiltersPass(r.rowNode, r.filterInstanceToSkip));
      }, t.prototype.getQuickFilterTextForColumn = function(r, o) {
        var i = this.valueService.getValue(r, o, !0), s = r.getColDef();
        if (s.getQuickFilterText) {
          var a = {
            value: i,
            node: o,
            data: o.data,
            column: r,
            colDef: s,
            api: this.gridOptionsWrapper.getApi(),
            columnApi: this.gridOptionsWrapper.getColumnApi(),
            context: this.gridOptionsWrapper.getContext()
          };
          i = s.getQuickFilterText(a);
        }
        return g(i) ? i.toString().toUpperCase() : null;
      }, t.prototype.aggregateRowForQuickFilter = function(r) {
        var o = this, i = [], s = this.columnModel.getAllColumnsForQuickFilter();
        s.forEach(function(a) {
          var l = o.getQuickFilterTextForColumn(a, r);
          g(l) && i.push(l);
        }), r.quickFilterAggregateText = i.join(e.QUICK_FILTER_SEPARATOR);
      }, t.prototype.onNewRowsLoaded = function(r) {
        this.allColumnFilters.forEach(function(o) {
          o.filterPromise.then(function(i) {
            i.onNewRowsLoaded && i.onNewRowsLoaded();
          });
        }), this.updateFilterFlagInColumns(r), this.updateActiveFilters();
      }, t.prototype.createValueGetter = function(r) {
        var o = this;
        return function(i) {
          var s = i.node;
          return o.valueService.getValue(r, s, !0);
        };
      }, t.prototype.getFilterComponent = function(r, o, i) {
        i === void 0 && (i = !0);
        var s;
        if (i)
          return ((s = this.getOrCreateFilterWrapper(r, o)) === null || s === void 0 ? void 0 : s.filterPromise) || null;
        var a = this.cachedFilter(r);
        return a ? a.filterPromise : null;
      }, t.prototype.isFilterActive = function(r) {
        var o = this.cachedFilter(r);
        return !!o && o.filterPromise.resolveNow(!1, function(i) {
          return i.isFilterActive();
        });
      }, t.prototype.getOrCreateFilterWrapper = function(r, o) {
        if (!r.isFilterAllowed())
          return null;
        var i = this.cachedFilter(r);
        return i ? o !== "NO_UI" && this.putIntoGui(i, o) : (i = this.createFilterWrapper(r, o), this.allColumnFilters.set(r.getColId(), i)), i;
      }, t.prototype.cachedFilter = function(r) {
        return this.allColumnFilters.get(r.getColId());
      }, t.prototype.createFilterInstance = function(r) {
        var o = this, i = oe.isRegistered(c.ModuleNames.SetFilterModule) ? "agSetColumnFilter" : "agTextColumnFilter", s = r.getColDef(), a, l = Ni(Ni({}, this.createFilterParams(r, s)), { filterModifiedCallback: function() {
          var d = {
            type: m.EVENT_FILTER_MODIFIED,
            api: o.gridApi,
            columnApi: o.columnApi,
            column: r,
            filterInstance: a
          };
          o.eventService.dispatchEvent(d);
        }, filterChangedCallback: function(d) {
          var f = { filterInstance: a, additionalEventAttributes: d, columns: [r] };
          o.callOnFilterChangedOutsideRenderCycle(f);
        }, doesRowPassOtherFilter: function(d) {
          return o.doesRowPassOtherFilters(a, d);
        } }), u = this.userComponentFactory.getFilterDetails(s, l, i);
        if (!u)
          return null;
        var p = u.newAgStackInstance();
        return p && p.then(function(d) {
          return a = d;
        }), p;
      }, t.prototype.createFilterParams = function(r, o) {
        var i = {
          api: this.gridOptionsWrapper.getApi(),
          columnApi: this.gridOptionsWrapper.getColumnApi(),
          column: r,
          colDef: Rt(o),
          rowModel: this.rowModel,
          filterChangedCallback: function() {
          },
          filterModifiedCallback: function() {
          },
          valueGetter: this.createValueGetter(r),
          context: this.gridOptionsWrapper.getContext(),
          doesRowPassOtherFilter: function() {
            return !0;
          }
        };
        return i;
      }, t.prototype.createFilterWrapper = function(r, o) {
        var i = {
          column: r,
          filterPromise: null,
          compiledElement: null,
          guiPromise: Qe.resolve(null)
        };
        return i.filterPromise = this.createFilterInstance(r), i.filterPromise && this.putIntoGui(i, o), i;
      }, t.prototype.putIntoGui = function(r, o) {
        var i = this, s = document.createElement("div");
        s.className = "ag-filter", r.guiPromise = new Qe(function(a) {
          r.filterPromise.then(function(l) {
            var u = l.getGui();
            g(u) || console.warn("AG Grid: getGui method from filter returned " + u + ", it should be a DOM element or an HTML template string."), typeof u == "string" && (u = xe(u)), s.appendChild(u), a(s), i.eventService.dispatchEvent({
              type: m.EVENT_FILTER_OPENED,
              column: r.column,
              source: o,
              eGui: s,
              api: i.gridApi,
              columnApi: i.columnApi
            });
          });
        });
      }, t.prototype.onColumnsChanged = function() {
        var r = this, o = [];
        this.allColumnFilters.forEach(function(i, s) {
          var a;
          i.column.isPrimary() ? a = r.columnModel.getPrimaryColumn(s) : a = r.columnModel.getGridColumn(s), !a && (o.push(i.column), r.disposeFilterWrapper(i, "filterDestroyed"));
        }), o.length > 0 && this.onFilterChanged({ columns: o });
      }, t.prototype.destroyFilter = function(r, o) {
        o === void 0 && (o = "api");
        var i = this.allColumnFilters.get(r.getColId());
        i && (this.disposeFilterWrapper(i, o), this.onFilterChanged({ columns: [r] }));
      }, t.prototype.disposeFilterWrapper = function(r, o) {
        var i = this;
        r.filterPromise.then(function(s) {
          (s.setModel(null) || Qe.resolve()).then(function() {
            i.getContext().destroyBean(s), r.column.setFilterActive(!1, o), i.allColumnFilters.delete(r.column.getColId());
          });
        });
      }, t.prototype.destroy = function() {
        var r = this;
        n.prototype.destroy.call(this), this.allColumnFilters.forEach(function(o) {
          return r.disposeFilterWrapper(o, "filterDestroyed");
        });
      };
      var e;
      return t.QUICK_FILTER_SEPARATOR = `
`, bt([
        h("valueService")
      ], t.prototype, "valueService", void 0), bt([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), bt([
        h("rowModel")
      ], t.prototype, "rowModel", void 0), bt([
        h("columnApi")
      ], t.prototype, "columnApi", void 0), bt([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), bt([
        h("userComponentFactory")
      ], t.prototype, "userComponentFactory", void 0), bt([
        h("rowRenderer")
      ], t.prototype, "rowRenderer", void 0), bt([
        B
      ], t.prototype, "init", null), bt([
        De
      ], t.prototype, "destroy", null), t = e = bt([
        j("filterManager")
      ], t), t;
    }(H)
  );
  var of = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Ps = (
    /** @class */
    function(n) {
      of(t, n);
      function t(e, r) {
        var o = n.call(this, e) || this;
        return o.ctrl = r, o;
      }
      return t.prototype.getCtrl = function() {
        return this.ctrl;
      }, t;
    }(le)
  );
  var nf = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), xi = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, jl = (
    /** @class */
    function(n) {
      nf(t, n);
      function t(e) {
        return n.call(this, t.TEMPLATE, e) || this;
      }
      return t.prototype.postConstruct = function() {
        var e = this, r = this.getGui(), o = {
          addOrRemoveCssClass: function(i, s) {
            return e.addOrRemoveCssClass(i, s);
          },
          addOrRemoveBodyCssClass: function(i, s) {
            return e.eFloatingFilterBody.classList.toggle(i, s);
          },
          addOrRemoveButtonWrapperCssClass: function(i, s) {
            return e.eButtonWrapper.classList.toggle(i, s);
          },
          setCompDetails: function(i) {
            return e.setCompDetails(i);
          },
          getFloatingFilterComp: function() {
            return e.compPromise;
          },
          setWidth: function(i) {
            return r.style.width = i;
          },
          setMenuIcon: function(i) {
            return e.eButtonShowMainFilter.appendChild(i);
          }
        };
        this.ctrl.setComp(o, r, this.eButtonShowMainFilter, this.eFloatingFilterBody);
      }, t.prototype.setCompDetails = function(e) {
        var r = this;
        this.compPromise = e.newAgStackInstance(), this.compPromise.then(function(o) {
          return r.afterCompCreated(o);
        });
      }, t.prototype.afterCompCreated = function(e) {
        var r = this;
        e && (this.addDestroyFunc(function() {
          return r.context.destroyBean(e);
        }), this.isAlive() && (this.eFloatingFilterBody.appendChild(e.getGui()), e.afterGuiAttached && e.afterGuiAttached()));
      }, t.TEMPLATE = `<div class="ag-header-cell ag-floating-filter" role="gridcell" tabindex="-1">
            <div ref="eFloatingFilterBody" role="presentation"></div>
            <div class="ag-floating-filter-button ag-hidden" ref="eButtonWrapper" role="presentation">
                <button type="button" aria-label="Open Filter Menu" class="ag-floating-filter-button-button" ref="eButtonShowMainFilter" tabindex="-1"></button>
            </div>
        </div>`, xi([
        I("eFloatingFilterBody")
      ], t.prototype, "eFloatingFilterBody", void 0), xi([
        I("eButtonWrapper")
      ], t.prototype, "eButtonWrapper", void 0), xi([
        I("eButtonShowMainFilter")
      ], t.prototype, "eButtonShowMainFilter", void 0), xi([
        B
      ], t.prototype, "postConstruct", null), t;
    }(Ps)
  );
  var zl = (
    /** @class */
    function() {
      function n() {
      }
      return n.parse = function(t) {
        if (!t)
          return null;
        if (t === !0)
          return {
            toolPanels: [
              n.DEFAULT_COLUMN_COMP,
              n.DEFAULT_FILTER_COMP
            ],
            defaultToolPanel: "columns"
          };
        if (typeof t == "string")
          return n.parse([t]);
        if (Array.isArray(t)) {
          var e = [];
          return t.forEach(function(o) {
            var i = n.DEFAULT_BY_KEY[o];
            if (!i) {
              console.warn("AG Grid: the key " + o + " is not a valid key for specifying a tool panel, valid keys are: " + Object.keys(n.DEFAULT_BY_KEY).join(","));
              return;
            }
            e.push(i);
          }), e.length === 0 ? null : {
            toolPanels: e,
            defaultToolPanel: e[0].id
          };
        }
        var r = {
          toolPanels: n.parseComponents(t.toolPanels),
          defaultToolPanel: t.defaultToolPanel,
          hiddenByDefault: t.hiddenByDefault,
          position: t.position
        };
        return r;
      }, n.parseComponents = function(t) {
        var e = [];
        return t && t.forEach(function(r) {
          var o = null;
          if (typeof r == "string") {
            var i = n.DEFAULT_BY_KEY[r];
            if (!i) {
              console.warn("AG Grid: the key " + r + " is not a valid key for specifying a tool panel, valid keys are: " + Object.keys(n.DEFAULT_BY_KEY).join(","));
              return;
            }
            o = i;
          } else
            o = r;
          e.push(o);
        }), e;
      }, n.DEFAULT_COLUMN_COMP = {
        id: "columns",
        labelDefault: "Columns",
        labelKey: "columns",
        iconKey: "columns",
        toolPanel: "agColumnsToolPanel"
      }, n.DEFAULT_FILTER_COMP = {
        id: "filters",
        labelDefault: "Filters",
        labelKey: "filters",
        iconKey: "filter",
        toolPanel: "agFiltersToolPanel"
      }, n.DEFAULT_BY_KEY = {
        columns: n.DEFAULT_COLUMN_COMP,
        filters: n.DEFAULT_FILTER_COMP
      }, n;
    }()
  );
  var Gi = function() {
    return Gi = Object.assign || function(n) {
      for (var t, e = 1, r = arguments.length; e < r; e++) {
        t = arguments[e];
        for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
      }
      return n;
    }, Gi.apply(this, arguments);
  }, Jt = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, $l = function(n, t) {
    return function(e, r) {
      t(e, r, n);
    };
  }, sf = function(n, t) {
    var e = typeof Symbol == "function" && n[Symbol.iterator];
    if (!e) return n;
    var r = e.call(n), o, i = [], s;
    try {
      for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
    } catch (a) {
      s = { error: a };
    } finally {
      try {
        o && !o.done && (e = r.return) && e.call(r);
      } finally {
        if (s) throw s.error;
      }
    }
    return i;
  }, Ts = function() {
    for (var n = [], t = 0; t < arguments.length; t++) n = n.concat(sf(arguments[t]));
    return n;
  }, af = 25, lf = 300, uf = 5, pf = 5, cf = 10;
  function T(n) {
    return n === !0 || n === "true";
  }
  function Ds(n) {
    if (typeof n == "number")
      return n;
    if (typeof n == "string")
      return parseInt(n, 10);
  }
  function df(n, t) {
    return n >= 0 ? n : t;
  }
  function Kl(n, t) {
    var e = parseInt(n, 10);
    return Ri(e) && e > 0 ? e : t;
  }
  var z = (
    /** @class */
    function() {
      function n() {
        this.propertyEventService = new nt(), this.domDataKey = "__AG_" + Math.random().toString(), this.destroyed = !1;
      }
      t = n, n.prototype.agWire = function(e, r) {
        this.gridOptions.api = e, this.gridOptions.columnApi = r, this.checkForDeprecated(), this.checkForViolations();
      }, n.prototype.destroy = function() {
        this.gridOptions.api = null, this.gridOptions.columnApi = null, this.destroyed = !0;
      }, n.prototype.init = function() {
        var e = this;
        this.gridOptions.suppressPropertyNamesCheck !== !0 && (this.checkGridOptionsProperties(), this.checkColumnDefProperties()), this.gridOptions.sideBar != null && (this.gridOptions.sideBar = zl.parse(this.gridOptions.sideBar));
        var r = this.useAsyncEvents();
        if (this.eventService.addGlobalListener(this.globalEventHandler.bind(this), r), this.isGroupSelectsChildren() && this.isSuppressParentsInRowNodes() && console.warn("AG Grid: 'groupSelectsChildren' does not work with 'suppressParentsInRowNodes', this selection method needs the part in rowNode to work"), this.isGroupSelectsChildren() && (this.isRowSelectionMulti() || console.warn("AG Grid: rowSelection must be 'multiple' for groupSelectsChildren to make sense"), this.isRowModelServerSide() && console.warn("AG Grid: group selects children is NOT support for Server Side Row Model. This is because the rows are lazy loaded, so selecting a group is not possible asthe grid has no way of knowing what the children are.")), this.isGroupRemoveSingleChildren() && this.isGroupHideOpenParents() && console.warn("AG Grid: groupRemoveSingleChildren and groupHideOpenParents do not work with each other, you need to pick one. And don't ask us how to us these together on our support forum either you will get the same answer!"), this.isRowModelServerSide()) {
          var o = function(s) {
            return "AG Grid: '" + s + "' is not supported on the Server-Side Row Model";
          };
          g(this.gridOptions.groupDefaultExpanded) && console.warn(o("groupDefaultExpanded")), g(this.gridOptions.groupDefaultExpanded) && console.warn(o("groupIncludeFooter")), g(this.gridOptions.groupDefaultExpanded) && console.warn(o("groupIncludeTotalFooter"));
        }
        this.isEnableRangeSelection() && oe.assertRegistered(c.ModuleNames.RangeSelectionModule, "enableRangeSelection"), !this.isEnableRangeSelection() && (this.isEnableRangeHandle() || this.isEnableFillHandle()) && console.warn("AG Grid: 'enableRangeHandle' and 'enableFillHandle' will not work unless 'enableRangeSelection' is set to true");
        var i = function(s) {
          e.gridOptions.icons && e.gridOptions.icons[s] && console.warn("gridOptions.icons." + s + " is no longer supported. For information on how to style checkboxes and radio buttons, see https://www.ag-grid.com/javascript-grid-icons/");
        };
        i("radioButtonOff"), i("radioButtonOn"), i("checkboxChecked"), i("checkboxUnchecked"), i("checkboxIndeterminate"), this.getScrollbarWidth();
      }, n.prototype.checkColumnDefProperties = function() {
        var e = this;
        this.gridOptions.columnDefs != null && this.gridOptions.columnDefs.forEach(function(r) {
          var o = Object.getOwnPropertyNames(r), i = Ts(Fn.ALL_PROPERTIES, Fn.FRAMEWORK_PROPERTIES);
          e.checkProperties(o, i, i, "colDef", "https://www.ag-grid.com/javascript-grid-column-properties/");
        });
      }, n.prototype.checkGridOptionsProperties = function() {
        var e = Object.getOwnPropertyNames(this.gridOptions), r = Ts(At.ALL_PROPERTIES, At.FRAMEWORK_PROPERTIES, W(m).map(function(i) {
          return Xt.getCallbackForEvent(i);
        })), o = Ts(r, ["api", "columnApi"]);
        this.checkProperties(e, o, r, "gridOptions", "https://www.ag-grid.com/javascript-data-grid/grid-options/");
      }, n.prototype.checkProperties = function(e, r, o, i, s) {
        var a = nl(e, r, o);
        ie(a, function(l, u) {
          console.warn("ag-grid: invalid " + i + " property '" + l + "' did you mean any of these: " + u.slice(0, 8).join(", "));
        }), Object.keys(a).length > 0 && console.warn("ag-grid: to see all the valid " + i + " properties please check: " + s);
      }, n.prototype.mergeGridCommonParams = function(e) {
        var r = this;
        if (e) {
          var o = function(i) {
            var s = Gi(Gi({}, i), { api: r.getApi(), columnApi: r.getColumnApi(), context: r.getContext() });
            return e(s);
          };
          return o;
        }
        return e;
      }, n.prototype.getDomDataKey = function() {
        return this.domDataKey;
      }, n.prototype.getDomData = function(e, r) {
        var o = e[this.getDomDataKey()];
        return o ? o[r] : void 0;
      }, n.prototype.setDomData = function(e, r, o) {
        var i = this.getDomDataKey(), s = e[i];
        C(s) && (s = {}, e[i] = s), s[r] = o;
      }, n.prototype.isRowSelection = function() {
        return this.gridOptions.rowSelection === "single" || this.gridOptions.rowSelection === "multiple";
      }, n.prototype.isSuppressRowDeselection = function() {
        return T(this.gridOptions.suppressRowDeselection);
      }, n.prototype.isRowSelectionMulti = function() {
        return this.gridOptions.rowSelection === "multiple";
      }, n.prototype.isRowMultiSelectWithClick = function() {
        return T(this.gridOptions.rowMultiSelectWithClick);
      }, n.prototype.getContext = function() {
        return this.gridOptions.context;
      }, n.prototype.isPivotMode = function() {
        return T(this.gridOptions.pivotMode);
      }, n.prototype.isSuppressExpandablePivotGroups = function() {
        return T(this.gridOptions.suppressExpandablePivotGroups);
      }, n.prototype.getPivotColumnGroupTotals = function() {
        return this.gridOptions.pivotColumnGroupTotals;
      }, n.prototype.getPivotRowTotals = function() {
        return this.gridOptions.pivotRowTotals;
      }, n.prototype.isRowModelInfinite = function() {
        return this.gridOptions.rowModelType === E.ROW_MODEL_TYPE_INFINITE;
      }, n.prototype.isRowModelViewport = function() {
        return this.gridOptions.rowModelType === E.ROW_MODEL_TYPE_VIEWPORT;
      }, n.prototype.isRowModelServerSide = function() {
        return this.gridOptions.rowModelType === E.ROW_MODEL_TYPE_SERVER_SIDE;
      }, n.prototype.isRowModelDefault = function() {
        return C(this.gridOptions.rowModelType) || this.gridOptions.rowModelType === E.ROW_MODEL_TYPE_CLIENT_SIDE;
      }, n.prototype.isFullRowEdit = function() {
        return this.gridOptions.editType === "fullRow";
      }, n.prototype.isSuppressFocusAfterRefresh = function() {
        return T(this.gridOptions.suppressFocusAfterRefresh);
      }, n.prototype.isSuppressBrowserResizeObserver = function() {
        return T(this.gridOptions.suppressBrowserResizeObserver);
      }, n.prototype.isSuppressMaintainUnsortedOrder = function() {
        return T(this.gridOptions.suppressMaintainUnsortedOrder);
      }, n.prototype.isSuppressClearOnFillReduction = function() {
        return T(this.gridOptions.suppressClearOnFillReduction);
      }, n.prototype.isShowToolPanel = function() {
        return T(this.gridOptions.sideBar && Array.isArray(this.getSideBar().toolPanels));
      }, n.prototype.getSideBar = function() {
        return this.gridOptions.sideBar;
      }, n.prototype.isSuppressTouch = function() {
        return T(this.gridOptions.suppressTouch);
      }, n.prototype.isMaintainColumnOrder = function() {
        return T(this.gridOptions.maintainColumnOrder);
      }, n.prototype.isSuppressRowTransform = function() {
        return T(this.gridOptions.suppressRowTransform);
      }, n.prototype.isSuppressColumnStateEvents = function() {
        return T(this.gridOptions.suppressColumnStateEvents);
      }, n.prototype.isAllowDragFromColumnsToolPanel = function() {
        return T(this.gridOptions.allowDragFromColumnsToolPanel);
      }, n.prototype.useAsyncEvents = function() {
        return !T(this.gridOptions.suppressAsyncEvents);
      }, n.prototype.isEnableCellChangeFlash = function() {
        return T(this.gridOptions.enableCellChangeFlash);
      }, n.prototype.getCellFlashDelay = function() {
        return this.gridOptions.cellFlashDelay || 500;
      }, n.prototype.getCellFadeDelay = function() {
        return this.gridOptions.cellFadeDelay || 1e3;
      }, n.prototype.isGroupSelectsChildren = function() {
        return T(this.gridOptions.groupSelectsChildren);
      }, n.prototype.isSuppressRowHoverHighlight = function() {
        return T(this.gridOptions.suppressRowHoverHighlight);
      }, n.prototype.isColumnHoverHighlight = function() {
        return T(this.gridOptions.columnHoverHighlight);
      }, n.prototype.isGroupSelectsFiltered = function() {
        return T(this.gridOptions.groupSelectsFiltered);
      }, n.prototype.isGroupHideOpenParents = function() {
        return T(this.gridOptions.groupHideOpenParents);
      }, n.prototype.isGroupMaintainOrder = function() {
        return T(this.gridOptions.groupMaintainOrder);
      }, n.prototype.getAutoGroupColumnDef = function() {
        return this.gridOptions.autoGroupColumnDef;
      }, n.prototype.isGroupMultiAutoColumn = function() {
        return this.gridOptions.groupDisplayType ? this.matchesGroupDisplayType("multipleColumns", this.gridOptions.groupDisplayType) : T(this.gridOptions.groupHideOpenParents);
      }, n.prototype.isGroupUseEntireRow = function(e) {
        return e ? !1 : this.gridOptions.groupDisplayType ? this.matchesGroupDisplayType("groupRows", this.gridOptions.groupDisplayType) : !1;
      }, n.prototype.isGroupSuppressAutoColumn = function() {
        var e = this.gridOptions.groupDisplayType ? this.matchesGroupDisplayType("custom", this.gridOptions.groupDisplayType) : !1;
        return e ? !0 : this.gridOptions.treeDataDisplayType ? this.matchesTreeDataDisplayType("custom", this.gridOptions.treeDataDisplayType) : !1;
      }, n.prototype.isGroupRemoveSingleChildren = function() {
        return T(this.gridOptions.groupRemoveSingleChildren);
      }, n.prototype.isGroupRemoveLowestSingleChildren = function() {
        return T(this.gridOptions.groupRemoveLowestSingleChildren);
      }, n.prototype.isGroupIncludeFooter = function() {
        return T(this.gridOptions.groupIncludeFooter);
      }, n.prototype.isGroupIncludeTotalFooter = function() {
        return T(this.gridOptions.groupIncludeTotalFooter);
      }, n.prototype.isGroupSuppressBlankHeader = function() {
        return T(this.gridOptions.groupSuppressBlankHeader);
      }, n.prototype.isSuppressRowClickSelection = function() {
        return T(this.gridOptions.suppressRowClickSelection);
      }, n.prototype.isSuppressCellFocus = function() {
        return T(this.gridOptions.suppressCellFocus);
      }, n.prototype.isSuppressMultiSort = function() {
        return T(this.gridOptions.suppressMultiSort);
      }, n.prototype.isAlwaysMultiSort = function() {
        return T(this.gridOptions.alwaysMultiSort);
      }, n.prototype.isMultiSortKeyCtrl = function() {
        return this.gridOptions.multiSortKey === "ctrl";
      }, n.prototype.isPivotSuppressAutoColumn = function() {
        return T(this.gridOptions.pivotSuppressAutoColumn);
      }, n.prototype.isSuppressDragLeaveHidesColumns = function() {
        return T(this.gridOptions.suppressDragLeaveHidesColumns);
      }, n.prototype.isSuppressScrollOnNewData = function() {
        return T(this.gridOptions.suppressScrollOnNewData);
      }, n.prototype.isSuppressScrollWhenPopupsAreOpen = function() {
        return T(this.gridOptions.suppressScrollWhenPopupsAreOpen);
      }, n.prototype.isRowDragEntireRow = function() {
        return T(this.gridOptions.rowDragEntireRow);
      }, n.prototype.isSuppressRowDrag = function() {
        return T(this.gridOptions.suppressRowDrag);
      }, n.prototype.isRowDragManaged = function() {
        return T(this.gridOptions.rowDragManaged);
      }, n.prototype.isSuppressMoveWhenRowDragging = function() {
        return T(this.gridOptions.suppressMoveWhenRowDragging);
      }, n.prototype.isRowDragMultiRow = function() {
        return T(this.gridOptions.rowDragMultiRow);
      }, n.prototype.getDomLayout = function() {
        var e = this.gridOptions.domLayout || E.DOM_LAYOUT_NORMAL, r = [
          E.DOM_LAYOUT_PRINT,
          E.DOM_LAYOUT_AUTO_HEIGHT,
          E.DOM_LAYOUT_NORMAL
        ];
        return r.indexOf(e) === -1 ? (me(function() {
          return console.warn("AG Grid: " + e + " is not valid for DOM Layout, valid values are " + E.DOM_LAYOUT_NORMAL + ", " + E.DOM_LAYOUT_AUTO_HEIGHT + " and " + E.DOM_LAYOUT_PRINT);
        }, "warn about dom layout values"), E.DOM_LAYOUT_NORMAL) : e;
      }, n.prototype.isSuppressHorizontalScroll = function() {
        return T(this.gridOptions.suppressHorizontalScroll);
      }, n.prototype.isSuppressMaxRenderedRowRestriction = function() {
        return T(this.gridOptions.suppressMaxRenderedRowRestriction);
      }, n.prototype.isExcludeChildrenWhenTreeDataFiltering = function() {
        return T(this.gridOptions.excludeChildrenWhenTreeDataFiltering);
      }, n.prototype.isAlwaysShowHorizontalScroll = function() {
        return T(this.gridOptions.alwaysShowHorizontalScroll);
      }, n.prototype.isAlwaysShowVerticalScroll = function() {
        return T(this.gridOptions.alwaysShowVerticalScroll);
      }, n.prototype.isDebounceVerticalScrollbar = function() {
        return T(this.gridOptions.debounceVerticalScrollbar);
      }, n.prototype.isSuppressLoadingOverlay = function() {
        return T(this.gridOptions.suppressLoadingOverlay);
      }, n.prototype.isSuppressNoRowsOverlay = function() {
        return T(this.gridOptions.suppressNoRowsOverlay);
      }, n.prototype.isSuppressFieldDotNotation = function() {
        return T(this.gridOptions.suppressFieldDotNotation);
      }, n.prototype.getPinnedTopRowData = function() {
        return this.gridOptions.pinnedTopRowData;
      }, n.prototype.getPinnedBottomRowData = function() {
        return this.gridOptions.pinnedBottomRowData;
      }, n.prototype.isFunctionsPassive = function() {
        return T(this.gridOptions.functionsPassive);
      }, n.prototype.isSuppressChangeDetection = function() {
        return T(this.gridOptions.suppressChangeDetection);
      }, n.prototype.isSuppressAnimationFrame = function() {
        return T(this.gridOptions.suppressAnimationFrame);
      }, n.prototype.getQuickFilterText = function() {
        return this.gridOptions.quickFilterText;
      }, n.prototype.isCacheQuickFilter = function() {
        return T(this.gridOptions.cacheQuickFilter);
      }, n.prototype.isUnSortIcon = function() {
        return T(this.gridOptions.unSortIcon);
      }, n.prototype.isSuppressMenuHide = function() {
        return T(this.gridOptions.suppressMenuHide);
      }, n.prototype.isEnterMovesDownAfterEdit = function() {
        return T(this.gridOptions.enterMovesDownAfterEdit);
      }, n.prototype.isEnterMovesDown = function() {
        return T(this.gridOptions.enterMovesDown);
      }, n.prototype.isUndoRedoCellEditing = function() {
        return T(this.gridOptions.undoRedoCellEditing);
      }, n.prototype.getUndoRedoCellEditingLimit = function() {
        return Ds(this.gridOptions.undoRedoCellEditingLimit);
      }, n.prototype.getRowStyle = function() {
        return this.gridOptions.rowStyle;
      }, n.prototype.getRowClass = function() {
        return this.gridOptions.rowClass;
      }, n.prototype.getRowStyleFunc = function() {
        return this.mergeGridCommonParams(this.gridOptions.getRowStyle);
      }, n.prototype.getRowClassFunc = function() {
        return this.mergeGridCommonParams(this.gridOptions.getRowClass);
      }, n.prototype.rowClassRules = function() {
        return this.gridOptions.rowClassRules;
      }, n.prototype.getServerSideStoreType = function() {
        return this.gridOptions.serverSideStoreType;
      }, n.prototype.getServerSideStoreParamsFunc = function() {
        return this.mergeGridCommonParams(this.gridOptions.getServerSideStoreParams);
      }, n.prototype.getCreateChartContainerFunc = function() {
        return this.mergeGridCommonParams(this.gridOptions.createChartContainer);
      }, n.prototype.getPopupParent = function() {
        return this.gridOptions.popupParent;
      }, n.prototype.getBlockLoadDebounceMillis = function() {
        return this.gridOptions.blockLoadDebounceMillis;
      }, n.prototype.getPostProcessPopupFunc = function() {
        return this.mergeGridCommonParams(this.gridOptions.postProcessPopup);
      }, n.prototype.getPaginationNumberFormatterFunc = function() {
        return this.mergeGridCommonParams(this.gridOptions.paginationNumberFormatter);
      }, n.prototype.getChildCountFunc = function() {
        return this.gridOptions.getChildCount;
      }, n.prototype.getIsApplyServerSideTransactionFunc = function() {
        return this.mergeGridCommonParams(this.gridOptions.isApplyServerSideTransaction);
      }, n.prototype.getInitialGroupOrderComparator = function() {
        var e = this.gridOptions, r = e.initialGroupOrderComparator, o = e.defaultGroupOrderComparator;
        if (r)
          return this.mergeGridCommonParams(r);
        if (o)
          return function(i) {
            return o(i.nodeA, i.nodeB);
          };
      }, n.prototype.getIsFullWidthCellFunc = function() {
        var e = this.gridOptions, r = e.isFullWidthRow, o = e.isFullWidthCell;
        if (r)
          return this.mergeGridCommonParams(r);
        if (o)
          return function(i) {
            return o(i.rowNode);
          };
      }, n.prototype.getFullWidthCellRendererParams = function() {
        return this.gridOptions.fullWidthCellRendererParams;
      }, n.prototype.isEmbedFullWidthRows = function() {
        return T(this.gridOptions.embedFullWidthRows) || T(this.gridOptions.deprecatedEmbedFullWidthRows);
      }, n.prototype.isDetailRowAutoHeight = function() {
        return T(this.gridOptions.detailRowAutoHeight);
      }, n.prototype.getSuppressKeyboardEventFunc = function() {
        return this.gridOptions.suppressKeyboardEvent;
      }, n.prototype.getBusinessKeyForNodeFunc = function() {
        return this.gridOptions.getBusinessKeyForNode;
      }, n.prototype.getApi = function() {
        return this.gridOptions.api;
      }, n.prototype.getColumnApi = function() {
        return this.gridOptions.columnApi;
      }, n.prototype.isReadOnlyEdit = function() {
        return T(this.gridOptions.readOnlyEdit);
      }, n.prototype.isImmutableData = function() {
        var e = this.gridOptions.getRowId != null, r = T(this.gridOptions.immutableData), o = T(this.gridOptions.resetRowDataOnUpdate);
        return o ? !1 : e || r;
      }, n.prototype.isEnsureDomOrder = function() {
        return T(this.gridOptions.ensureDomOrder);
      }, n.prototype.isEnableCharts = function() {
        return T(this.gridOptions.enableCharts) ? oe.assertRegistered(c.ModuleNames.GridChartsModule, "enableCharts") : !1;
      }, n.prototype.getColResizeDefault = function() {
        return this.gridOptions.colResizeDefault;
      }, n.prototype.isSingleClickEdit = function() {
        return T(this.gridOptions.singleClickEdit);
      }, n.prototype.isSuppressClickEdit = function() {
        return T(this.gridOptions.suppressClickEdit);
      }, n.prototype.isStopEditingWhenCellsLoseFocus = function() {
        return T(this.gridOptions.stopEditingWhenCellsLoseFocus);
      }, n.prototype.getGroupDefaultExpanded = function() {
        return this.gridOptions.groupDefaultExpanded;
      }, n.prototype.getMaxConcurrentDatasourceRequests = function() {
        var e = Ds(this.gridOptions.maxConcurrentDatasourceRequests);
        if (e == null)
          return 2;
        if (!(e <= 0))
          return e;
      }, n.prototype.getMaxBlocksInCache = function() {
        return this.gridOptions.maxBlocksInCache;
      }, n.prototype.getCacheOverflowSize = function() {
        return this.gridOptions.cacheOverflowSize;
      }, n.prototype.getPaginationPageSize = function() {
        return Ds(this.gridOptions.paginationPageSize);
      }, n.prototype.isPaginateChildRows = function() {
        var e = this.isGroupRemoveSingleChildren() || this.isGroupRemoveLowestSingleChildren();
        return e ? !0 : T(this.gridOptions.paginateChildRows);
      }, n.prototype.getCacheBlockSize = function() {
        return Kl(this.gridOptions.cacheBlockSize);
      }, n.prototype.getInfiniteInitialRowCount = function() {
        return this.gridOptions.infiniteInitialRowCount;
      }, n.prototype.isPurgeClosedRowNodes = function() {
        return T(this.gridOptions.purgeClosedRowNodes);
      }, n.prototype.isSuppressPaginationPanel = function() {
        return T(this.gridOptions.suppressPaginationPanel);
      }, n.prototype.getRowData = function() {
        return this.gridOptions.rowData;
      }, n.prototype.isEnableRtl = function() {
        return T(this.gridOptions.enableRtl);
      }, n.prototype.getRowGroupPanelShow = function() {
        return this.gridOptions.rowGroupPanelShow;
      }, n.prototype.getPivotPanelShow = function() {
        return this.gridOptions.pivotPanelShow;
      }, n.prototype.isAngularCompileRows = function() {
        return T(this.gridOptions.angularCompileRows);
      }, n.prototype.isAngularCompileFilters = function() {
        return T(this.gridOptions.angularCompileFilters);
      }, n.prototype.isDebug = function() {
        return T(this.gridOptions.debug);
      }, n.prototype.getColumnDefs = function() {
        return this.gridOptions.columnDefs;
      }, n.prototype.getColumnTypes = function() {
        return this.gridOptions.columnTypes;
      }, n.prototype.getDatasource = function() {
        return this.gridOptions.datasource;
      }, n.prototype.getViewportDatasource = function() {
        return this.gridOptions.viewportDatasource;
      }, n.prototype.getServerSideDatasource = function() {
        return this.gridOptions.serverSideDatasource;
      }, n.prototype.isAccentedSort = function() {
        return T(this.gridOptions.accentedSort);
      }, n.prototype.isEnableBrowserTooltips = function() {
        return T(this.gridOptions.enableBrowserTooltips);
      }, n.prototype.isEnableCellExpressions = function() {
        return T(this.gridOptions.enableCellExpressions);
      }, n.prototype.isEnableGroupEdit = function() {
        return T(this.gridOptions.enableGroupEdit);
      }, n.prototype.isSuppressMiddleClickScrolls = function() {
        return T(this.gridOptions.suppressMiddleClickScrolls);
      }, n.prototype.isPreventDefaultOnContextMenu = function() {
        return T(this.gridOptions.preventDefaultOnContextMenu);
      }, n.prototype.isSuppressPreventDefaultOnMouseWheel = function() {
        return T(this.gridOptions.suppressPreventDefaultOnMouseWheel);
      }, n.prototype.isSuppressColumnVirtualisation = function() {
        return T(this.gridOptions.suppressColumnVirtualisation);
      }, n.prototype.isSuppressRowVirtualisation = function() {
        return T(this.gridOptions.suppressRowVirtualisation);
      }, n.prototype.isSuppressContextMenu = function() {
        return T(this.gridOptions.suppressContextMenu);
      }, n.prototype.isAllowContextMenuWithControlKey = function() {
        return T(this.gridOptions.allowContextMenuWithControlKey);
      }, n.prototype.isSuppressCopyRowsToClipboard = function() {
        return T(this.gridOptions.suppressCopyRowsToClipboard);
      }, n.prototype.isSuppressCopySingleCellRanges = function() {
        return T(this.gridOptions.suppressCopySingleCellRanges);
      }, n.prototype.isCopyHeadersToClipboard = function() {
        return T(this.gridOptions.copyHeadersToClipboard);
      }, n.prototype.isCopyGroupHeadersToClipboard = function() {
        return T(this.gridOptions.copyGroupHeadersToClipboard);
      }, n.prototype.isSuppressClipboardPaste = function() {
        return T(this.gridOptions.suppressClipboardPaste);
      }, n.prototype.isSuppressLastEmptyLineOnPaste = function() {
        return T(this.gridOptions.suppressLastEmptyLineOnPaste);
      }, n.prototype.isPagination = function() {
        return T(this.gridOptions.pagination);
      }, n.prototype.isSuppressEnterpriseResetOnNewColumns = function() {
        return T(this.gridOptions.suppressEnterpriseResetOnNewColumns);
      }, n.prototype.getProcessDataFromClipboardFunc = function() {
        return this.mergeGridCommonParams(this.gridOptions.processDataFromClipboard);
      }, n.prototype.getAsyncTransactionWaitMillis = function() {
        return g(this.gridOptions.asyncTransactionWaitMillis) ? this.gridOptions.asyncTransactionWaitMillis : E.BATCH_WAIT_MILLIS;
      }, n.prototype.isSuppressMovableColumns = function() {
        return T(this.gridOptions.suppressMovableColumns);
      }, n.prototype.isAnimateRows = function() {
        return this.isEnsureDomOrder() ? !1 : T(this.gridOptions.animateRows);
      }, n.prototype.isSuppressColumnMoveAnimation = function() {
        return T(this.gridOptions.suppressColumnMoveAnimation);
      }, n.prototype.isSuppressAggFuncInHeader = function() {
        return T(this.gridOptions.suppressAggFuncInHeader);
      }, n.prototype.isSuppressAggAtRootLevel = function() {
        return T(this.gridOptions.suppressAggAtRootLevel);
      }, n.prototype.isSuppressAggFilteredOnly = function() {
        var e = this.getGroupAggFiltering() !== void 0;
        return e || T(this.gridOptions.suppressAggFilteredOnly);
      }, n.prototype.isRemovePivotHeaderRowWhenSingleValueColumn = function() {
        return T(this.gridOptions.removePivotHeaderRowWhenSingleValueColumn);
      }, n.prototype.isShowOpenedGroup = function() {
        return T(this.gridOptions.showOpenedGroup);
      }, n.prototype.isReactUi = function() {
        return T(this.gridOptions.reactUi);
      }, n.prototype.isSuppressReactUi = function() {
        return T(this.gridOptions.suppressReactUi);
      }, n.prototype.isEnableRangeSelection = function() {
        return oe.isRegistered(c.ModuleNames.RangeSelectionModule) && T(this.gridOptions.enableRangeSelection);
      }, n.prototype.isEnableRangeHandle = function() {
        return T(this.gridOptions.enableRangeHandle);
      }, n.prototype.isEnableFillHandle = function() {
        return T(this.gridOptions.enableFillHandle);
      }, n.prototype.getFillHandleDirection = function() {
        var e = this.gridOptions.fillHandleDirection;
        return e ? e !== "x" && e !== "y" && e !== "xy" ? (me(function() {
          return console.warn("AG Grid: valid values for fillHandleDirection are 'x', 'y' and 'xy'. Default to 'xy'.");
        }, "warn invalid fill direction"), "xy") : e : "xy";
      }, n.prototype.getFillOperation = function() {
        return this.mergeGridCommonParams(this.gridOptions.fillOperation);
      }, n.prototype.isSuppressMultiRangeSelection = function() {
        return T(this.gridOptions.suppressMultiRangeSelection);
      }, n.prototype.isPaginationAutoPageSize = function() {
        return T(this.gridOptions.paginationAutoPageSize);
      }, n.prototype.isRememberGroupStateWhenNewData = function() {
        return T(this.gridOptions.rememberGroupStateWhenNewData);
      }, n.prototype.getIcons = function() {
        return this.gridOptions.icons;
      }, n.prototype.getGroupAggFiltering = function() {
        var e = this.gridOptions.groupAggFiltering;
        if (typeof e == "function")
          return this.mergeGridCommonParams(e);
        if (T(e))
          return function() {
            return !0;
          };
      }, n.prototype.getAggFuncs = function() {
        return this.gridOptions.aggFuncs;
      }, n.prototype.getSortingOrder = function() {
        return this.gridOptions.sortingOrder;
      }, n.prototype.getAlignedGrids = function() {
        return this.gridOptions.alignedGrids;
      }, n.prototype.isMasterDetail = function() {
        var e = T(this.gridOptions.masterDetail);
        return e ? oe.assertRegistered(c.ModuleNames.MasterDetailModule, "masterDetail") : !1;
      }, n.prototype.isKeepDetailRows = function() {
        return T(this.gridOptions.keepDetailRows);
      }, n.prototype.getKeepDetailRowsCount = function() {
        var e = this.gridOptions.keepDetailRowsCount;
        return g(e) && e > 0 ? this.gridOptions.keepDetailRowsCount : cf;
      }, n.prototype.getIsRowMasterFunc = function() {
        return this.gridOptions.isRowMaster;
      }, n.prototype.getIsRowSelectableFunc = function() {
        return this.gridOptions.isRowSelectable;
      }, n.prototype.getGroupRowRendererParams = function() {
        return this.gridOptions.groupRowRendererParams;
      }, n.prototype.getOverlayLoadingTemplate = function() {
        return this.gridOptions.overlayLoadingTemplate;
      }, n.prototype.getOverlayNoRowsTemplate = function() {
        return this.gridOptions.overlayNoRowsTemplate;
      }, n.prototype.isSuppressAutoSize = function() {
        return T(this.gridOptions.suppressAutoSize);
      }, n.prototype.isEnableCellTextSelection = function() {
        return T(this.gridOptions.enableCellTextSelection);
      }, n.prototype.isSuppressParentsInRowNodes = function() {
        return T(this.gridOptions.suppressParentsInRowNodes);
      }, n.prototype.isSuppressClipboardApi = function() {
        return T(this.gridOptions.suppressClipboardApi);
      }, n.prototype.isFunctionsReadOnly = function() {
        return T(this.gridOptions.functionsReadOnly);
      }, n.prototype.isEnableCellTextSelect = function() {
        return T(this.gridOptions.enableCellTextSelection);
      }, n.prototype.getDefaultColDef = function() {
        return this.gridOptions.defaultColDef;
      }, n.prototype.getDefaultColGroupDef = function() {
        return this.gridOptions.defaultColGroupDef;
      }, n.prototype.getDefaultExportParams = function(e) {
        if (this.gridOptions.defaultExportParams)
          return console.warn("AG Grid: Since v25.2 `defaultExportParams`  has been replaced by `default" + Tn(e) + "ExportParams`'"), e === "csv" ? this.gridOptions.defaultExportParams : this.gridOptions.defaultExportParams;
        if (e === "csv" && this.gridOptions.defaultCsvExportParams)
          return this.gridOptions.defaultCsvExportParams;
        if (e === "excel" && this.gridOptions.defaultExcelExportParams)
          return this.gridOptions.defaultExcelExportParams;
      }, n.prototype.isSuppressCsvExport = function() {
        return T(this.gridOptions.suppressCsvExport);
      }, n.prototype.isAllowShowChangeAfterFilter = function() {
        return T(this.gridOptions.allowShowChangeAfterFilter);
      }, n.prototype.isSuppressExcelExport = function() {
        return T(this.gridOptions.suppressExcelExport);
      }, n.prototype.isSuppressMakeColumnVisibleAfterUnGroup = function() {
        return T(this.gridOptions.suppressMakeColumnVisibleAfterUnGroup);
      }, n.prototype.getDataPathFunc = function() {
        return this.gridOptions.getDataPath;
      }, n.prototype.getIsServerSideGroupFunc = function() {
        return this.gridOptions.isServerSideGroup;
      }, n.prototype.getIsServerSideGroupOpenByDefaultFunc = function() {
        return this.mergeGridCommonParams(this.gridOptions.isServerSideGroupOpenByDefault);
      }, n.prototype.getIsGroupOpenByDefaultFunc = function() {
        return this.mergeGridCommonParams(this.gridOptions.isGroupOpenByDefault);
      }, n.prototype.getServerSideGroupKeyFunc = function() {
        return this.gridOptions.getServerSideGroupKey;
      }, n.prototype.getGroupRowAggFunc = function() {
        var e = this.gridOptions, r = e.getGroupRowAgg, o = e.groupRowAggNodes;
        if (r)
          return this.mergeGridCommonParams(r);
        if (o)
          return function(i) {
            return o(i.nodes);
          };
      }, n.prototype.getContextMenuItemsFunc = function() {
        return this.mergeGridCommonParams(this.gridOptions.getContextMenuItems);
      }, n.prototype.getMainMenuItemsFunc = function() {
        return this.mergeGridCommonParams(this.gridOptions.getMainMenuItems);
      }, n.prototype.getRowIdFunc = function() {
        var e = this.gridOptions, r = e.getRowId, o = e.getRowNodeId;
        if (r)
          return this.mergeGridCommonParams(r);
        if (o)
          return function(i) {
            return o(i.data);
          };
      }, n.prototype.getNavigateToNextHeaderFunc = function() {
        return this.mergeGridCommonParams(this.gridOptions.navigateToNextHeader);
      }, n.prototype.getTabToNextHeaderFunc = function() {
        return this.mergeGridCommonParams(this.gridOptions.tabToNextHeader);
      }, n.prototype.getNavigateToNextCellFunc = function() {
        return this.mergeGridCommonParams(this.gridOptions.navigateToNextCell);
      }, n.prototype.getTabToNextCellFunc = function() {
        return this.mergeGridCommonParams(this.gridOptions.tabToNextCell);
      }, n.prototype.getGridTabIndex = function() {
        return (this.gridOptions.tabIndex || 0).toString();
      }, n.prototype.isTreeData = function() {
        var e = T(this.gridOptions.treeData);
        return e ? oe.assertRegistered(c.ModuleNames.RowGroupingModule, "Tree Data") : !1;
      }, n.prototype.isValueCache = function() {
        return T(this.gridOptions.valueCache);
      }, n.prototype.isValueCacheNeverExpires = function() {
        return T(this.gridOptions.valueCacheNeverExpires);
      }, n.prototype.isDeltaSort = function() {
        return T(this.gridOptions.deltaSort);
      }, n.prototype.isAggregateOnlyChangedColumns = function() {
        return T(this.gridOptions.aggregateOnlyChangedColumns);
      }, n.prototype.getProcessSecondaryColDefFunc = function() {
        return this.gridOptions.processSecondaryColDef;
      }, n.prototype.getProcessSecondaryColGroupDefFunc = function() {
        return this.gridOptions.processSecondaryColGroupDef;
      }, n.prototype.getSendToClipboardFunc = function() {
        return this.mergeGridCommonParams(this.gridOptions.sendToClipboard);
      }, n.prototype.getProcessRowPostCreateFunc = function() {
        return this.mergeGridCommonParams(this.gridOptions.processRowPostCreate);
      }, n.prototype.getProcessCellForClipboardFunc = function() {
        return this.mergeGridCommonParams(this.gridOptions.processCellForClipboard);
      }, n.prototype.getProcessHeaderForClipboardFunc = function() {
        return this.mergeGridCommonParams(this.gridOptions.processHeaderForClipboard);
      }, n.prototype.getProcessGroupHeaderForClipboardFunc = function() {
        return this.mergeGridCommonParams(this.gridOptions.processGroupHeaderForClipboard);
      }, n.prototype.getProcessCellFromClipboardFunc = function() {
        return this.mergeGridCommonParams(this.gridOptions.processCellFromClipboard);
      }, n.prototype.getViewportRowModelPageSize = function() {
        return Kl(this.gridOptions.viewportRowModelPageSize, uf);
      }, n.prototype.getViewportRowModelBufferSize = function() {
        return df(this.gridOptions.viewportRowModelBufferSize, pf);
      }, n.prototype.isServerSideSortingAlwaysResets = function() {
        return T(this.gridOptions.serverSideSortingAlwaysResets);
      }, n.prototype.isServerSideFilteringAlwaysResets = function() {
        return T(this.gridOptions.serverSideFilteringAlwaysResets);
      }, n.prototype.getPostSortFunc = function() {
        var e = this.gridOptions, r = e.postSortRows, o = e.postSort;
        if (r)
          return this.mergeGridCommonParams(r);
        if (o)
          return function(i) {
            return o(i.nodes);
          };
      }, n.prototype.getChartToolbarItemsFunc = function() {
        return this.mergeGridCommonParams(this.gridOptions.getChartToolbarItems);
      }, n.prototype.getChartThemeOverrides = function() {
        return this.gridOptions.chartThemeOverrides;
      }, n.prototype.getCustomChartThemes = function() {
        return this.gridOptions.customChartThemes;
      }, n.prototype.getChartThemes = function() {
        return this.gridOptions.chartThemes || ["ag-default", "ag-material", "ag-pastel", "ag-vivid", "ag-solar"];
      }, n.prototype.getClipboardDelimiter = function() {
        return g(this.gridOptions.clipboardDelimiter) ? this.gridOptions.clipboardDelimiter : "	";
      }, n.prototype.setProperty = function(e, r, o) {
        o === void 0 && (o = !1);
        var i = this.gridOptions, s = i[e];
        if (o || s !== r) {
          i[e] = r;
          var a = {
            type: e,
            currentValue: r,
            previousValue: s
          };
          this.propertyEventService.dispatchEvent(a);
        }
      }, n.prototype.addEventListener = function(e, r) {
        this.propertyEventService.addEventListener(e, r);
      }, n.prototype.removeEventListener = function(e, r) {
        this.propertyEventService.removeEventListener(e, r);
      }, n.prototype.isSkipHeaderOnAutoSize = function() {
        return !!this.gridOptions.skipHeaderOnAutoSize;
      }, n.prototype.getAutoSizePadding = function() {
        var e = this.gridOptions.autoSizePadding;
        return e != null && e >= 0 ? e : 20;
      }, n.prototype.getHeaderHeight = function() {
        return typeof this.gridOptions.headerHeight == "number" ? this.gridOptions.headerHeight : this.getFromTheme(25, "headerHeight");
      }, n.prototype.getFloatingFiltersHeight = function() {
        return typeof this.gridOptions.floatingFiltersHeight == "number" ? this.gridOptions.floatingFiltersHeight : this.getFromTheme(25, "headerHeight");
      }, n.prototype.getGroupHeaderHeight = function() {
        return typeof this.gridOptions.groupHeaderHeight == "number" ? this.gridOptions.groupHeaderHeight : this.getHeaderHeight();
      }, n.prototype.getPivotHeaderHeight = function() {
        return typeof this.gridOptions.pivotHeaderHeight == "number" ? this.gridOptions.pivotHeaderHeight : this.getHeaderHeight();
      }, n.prototype.getPivotGroupHeaderHeight = function() {
        return typeof this.gridOptions.pivotGroupHeaderHeight == "number" ? this.gridOptions.pivotGroupHeaderHeight : this.getGroupHeaderHeight();
      }, n.prototype.isExternalFilterPresent = function() {
        return typeof this.gridOptions.isExternalFilterPresent == "function" ? this.gridOptions.isExternalFilterPresent({ api: this.getApi(), columnApi: this.getColumnApi(), context: this.getContext() }) : !1;
      }, n.prototype.doesExternalFilterPass = function(e) {
        return typeof this.gridOptions.doesExternalFilterPass == "function" ? this.gridOptions.doesExternalFilterPass(e) : !1;
      }, n.prototype.getTooltipDelay = function(e) {
        var r = this.gridOptions, o = r.tooltipShowDelay, i = r.tooltipHideDelay, s = e === "show" ? o : i, a = Tn(e);
        return g(s) ? (s < 0 && me(function() {
          return console.warn("ag-grid: tooltip" + a + "Delay should not be lower than 0");
        }, "tooltip" + a + "DelayWarn"), Math.max(200, s)) : null;
      }, n.prototype.isTooltipMouseTrack = function() {
        return T(this.gridOptions.tooltipMouseTrack);
      }, n.prototype.isSuppressModelUpdateAfterUpdateTransaction = function() {
        return T(this.gridOptions.suppressModelUpdateAfterUpdateTransaction);
      }, n.prototype.getDocument = function() {
        var e = null;
        return this.gridOptions.getDocument && g(this.gridOptions.getDocument) ? e = this.gridOptions.getDocument() : this.eGridDiv && (e = this.eGridDiv.ownerDocument), e && g(e) ? e : document;
      }, n.prototype.getMinColWidth = function() {
        var e = this.gridOptions.minColWidth;
        if (g(e) && e > t.MIN_COL_WIDTH)
          return this.gridOptions.minColWidth;
        var r = this.getFromTheme(null, "headerCellMinWidth");
        return g(r) ? Math.max(r, t.MIN_COL_WIDTH) : t.MIN_COL_WIDTH;
      }, n.prototype.getMaxColWidth = function() {
        return this.gridOptions.maxColWidth && this.gridOptions.maxColWidth > t.MIN_COL_WIDTH ? this.gridOptions.maxColWidth : null;
      }, n.prototype.getColWidth = function() {
        return typeof this.gridOptions.colWidth != "number" || this.gridOptions.colWidth < t.MIN_COL_WIDTH ? 200 : this.gridOptions.colWidth;
      }, n.prototype.getRowBuffer = function() {
        var e = this.gridOptions.rowBuffer;
        return typeof e == "number" ? e < 0 && (me(function() {
          return console.warn("AG Grid: rowBuffer should not be negative");
        }, "warn rowBuffer negative"), this.gridOptions.rowBuffer = e = 0) : e = E.ROW_BUFFER_SIZE, e;
      }, n.prototype.getRowBufferInPixels = function() {
        var e = this.getRowBuffer(), r = this.getRowHeightAsNumber();
        return e * r;
      }, n.prototype.getScrollbarWidth = function() {
        if (this.scrollbarWidth == null) {
          var e = typeof this.gridOptions.scrollbarWidth == "number" && this.gridOptions.scrollbarWidth >= 0, r = e ? this.gridOptions.scrollbarWidth : Fa();
          r != null && (this.scrollbarWidth = r, this.eventService.dispatchEvent({
            type: m.EVENT_SCROLLBAR_WIDTH_CHANGED
          }));
        }
        return this.scrollbarWidth;
      }, n.prototype.checkForDeprecated = function() {
        var e = this.gridOptions;
        e.deprecatedEmbedFullWidthRows && console.warn("AG Grid: since v21.2, deprecatedEmbedFullWidthRows has been replaced with embedFullWidthRows."), e.rowDeselection && console.warn("AG Grid: since v24.x, rowDeselection is deprecated and the behaviour is true by default. Please use `suppressRowDeselection` to prevent rows from being deselected."), e.enableMultiRowDragging && (e.rowDragMultiRow = !0, delete e.enableMultiRowDragging, console.warn("AG Grid: since v26.1, `enableMultiRowDragging` is deprecated. Please use `rowDragMultiRow`."));
        var r = function(s, a, l) {
          e[s] != null && (console.warn("AG Grid: since version " + l + ", '" + s + "' is deprecated / renamed, please use the new property name '" + a + "' instead."), e[a] == null && (e[a] = e[s]));
        };
        if (r("batchUpdateWaitMillis", "asyncTransactionWaitMillis", "23.1.x"), r("deltaRowDataMode", "immutableData", "23.1.x"), (e.immutableColumns || e.deltaColumnMode) && console.warn("AG Grid: since v24.0, immutableColumns and deltaColumnMode properties are gone. The grid now works like this as default. To keep column order maintained, set grid property applyColumnDefOrder=true"), r("suppressSetColumnStateEvents", "suppressColumnStateEvents", "24.0.x"), e.groupRowInnerRenderer || e.groupRowInnerRendererParams || e.groupRowInnerRendererFramework) {
          console.warn("AG Grid: since v24.0, grid properties groupRowInnerRenderer, groupRowInnerRendererFramework and groupRowInnerRendererParams are no longer used."), console.warn("  Instead use the grid properties groupRowRendererParams.innerRenderer, groupRowRendererParams.innerRendererFramework and groupRowRendererParams.innerRendererParams."), console.warn("  For example instead of this:"), console.warn('    groupRowInnerRenderer: "myRenderer"'), console.warn("    groupRowInnerRendererParams: {x: a}"), console.warn("  Replace with this:"), console.warn("    groupRowRendererParams: {"), console.warn('      innerRenderer: "myRenderer",'), console.warn("      innerRendererParams: {x: a}"), console.warn("    }"), console.warn("  We have copied the properties over for you. However to stop this error message, please change your application code."), e.groupRowRendererParams || (e.groupRowRendererParams = {});
          var o = e.groupRowRendererParams;
          e.groupRowInnerRenderer && (o.innerRenderer = e.groupRowInnerRenderer), e.groupRowInnerRendererParams && (o.innerRendererParams = e.groupRowInnerRendererParams), e.groupRowInnerRendererFramework && (o.innerRendererFramework = e.groupRowInnerRendererFramework);
        }
        if (e.rememberGroupStateWhenNewData && console.warn("AG Grid: since v24.0, grid property rememberGroupStateWhenNewData is deprecated. This feature was provided before Transaction Updates worked (which keep group state). Now that transaction updates are possible and they keep group state, this feature is no longer needed."), e.detailCellRendererParams && e.detailCellRendererParams.autoHeight && (console.warn("AG Grid: since v24.1, grid property detailCellRendererParams.autoHeight is replaced with grid property detailRowAutoHeight. This allows this feature to work when you provide a custom DetailCellRenderer"), e.detailRowAutoHeight = !0), e.suppressKeyboardEvent && console.warn(`AG Grid: since v24.1 suppressKeyboardEvent in the gridOptions has been deprecated and will be removed in
                 future versions of AG Grid. If you need this to be set for every column use the defaultColDef property.`), e.suppressEnterpriseResetOnNewColumns && console.warn("AG Grid: since v25, grid property suppressEnterpriseResetOnNewColumns is deprecated. This was a temporary property to allow changing columns in Server Side Row Model without triggering a reload. Now that it is possible to dynamically change columns in the grid, this is no longer needed."), e.suppressColumnStateEvents && console.warn('AG Grid: since v25, grid property suppressColumnStateEvents no longer works due to a refactor that we did. It should be possible to achieve similar using event.source, which would be "api" if the event was due to setting column state via the API'), e.defaultExportParams && console.warn("AG Grid: since v25.2, the grid property `defaultExportParams` has been replaced by `defaultCsvExportParams` and `defaultExcelExportParams`."), e.stopEditingWhenGridLosesFocus && (console.warn("AG Grid: since v25.2.2, the grid property `stopEditingWhenGridLosesFocus` has been replaced by `stopEditingWhenCellsLoseFocus`."), e.stopEditingWhenCellsLoseFocus = !0), e.applyColumnDefOrder && console.warn("AG Grid: since v26.0, the grid property `applyColumnDefOrder` is no longer needed, as this is the default behaviour. To turn this behaviour off, set maintainColumnOrder=true"), e.groupMultiAutoColumn && (console.warn("AG Grid: since v26.0, the grid property `groupMultiAutoColumn` has been replaced by `groupDisplayType = 'multipleColumns'`"), e.groupDisplayType = "multipleColumns"), e.groupUseEntireRow && (console.warn("AG Grid: since v26.0, the grid property `groupUseEntireRow` has been replaced by `groupDisplayType = 'groupRows'`"), e.groupDisplayType = "groupRows"), e.groupSuppressAutoColumn) {
          var i = e.treeData ? "treeDataDisplayType" : "groupDisplayType";
          console.warn("AG Grid: since v26.0, the grid property `groupSuppressAutoColumn` has been replaced by `" + i + " = 'custom'`"), e.groupDisplayType = "custom";
        }
        e.defaultGroupOrderComparator && console.warn("AG Grid: since v27.2, the grid property `defaultGroupOrderComparator` is deprecated and has been replaced by `initialGroupOrderComparator` and now receives a single params object."), e.defaultGroupSortComparator && (console.warn("AG Grid: since v26.0, the grid property `defaultGroupSortComparator` has been replaced by `initialGroupOrderComparator`"), e.defaultGroupOrderComparator = e.defaultGroupSortComparator), e.groupRowAggNodes && console.warn("AG Grid: since v27.2, the grid property `groupRowAggNodes` is deprecated and has been replaced by `getGroupRowAgg` and now receives a single params object."), e.postSort && console.warn("AG Grid: since v27.2, the grid property `postSort` is deprecated and has been replaced by `postSortRows` and now receives a single params object."), e.isFullWidthCell && console.warn("AG Grid: since v27.2, the grid property `isFullWidthCell` is deprecated and has been replaced by `isFullWidthRow` and now receives a single params object."), e.localeTextFunc && console.warn("AG Grid: since v27.2, the grid property `localeTextFunc` is deprecated and has been replaced by `getLocaleText` and now receives a single params object."), e.colWidth && console.warn("AG Grid: since v26.1, the grid property `colWidth` is deprecated and should be set via `defaultColDef.width`."), e.minColWidth && console.warn("AG Grid: since v26.1, the grid property `minColWidth` is deprecated and should be set via `defaultColDef.minWidth`."), e.maxColWidth && console.warn("AG Grid: since v26.1, the grid property `maxColWidth` is deprecated and should be set via `defaultColDef.maxWidth`."), e.reactUi && console.warn("AG Grid: since v27.0, React UI is on by default, so no need for reactUi=true. To turn it off, set suppressReactUi=true."), e.suppressReactUi && console.warn("AG Grid: The legacy React rendering engine is deprecated and will be removed in the next major version of the grid."), e.suppressCellSelection && (console.warn("AG Grid: since v27.0, `suppressCellSelection` has been replaced by `suppressCellFocus`."), e.suppressCellFocus = e.suppressCellSelection), e.getRowNodeId && console.warn("AG Grid: since v27.1, `getRowNodeId` is deprecated and has been replaced by `getRowId`. The difference: if getRowId() is implemented then immutable data is enabled by default."), e.immutableData && (e.getRowId ? console.warn("AG Grid: since v27.1, `immutableData` is deprecated. With the `getRowId` callback implemented, immutable data is enabled by default so you can remove `immutableData=true`.") : console.warn("AG Grid: since v27.1, `immutableData` is deprecated. To enable immutable data you must implement the `getRowId()` callback.")), e.clipboardDeliminator && (console.warn("AG Grid: since v27.1, `clipboardDeliminator` has been replaced by `clipboardDelimiter`."), e.clipboardDelimiter = e.clipboardDeliminator);
      }, n.prototype.checkForViolations = function() {
        this.isTreeData() && this.treeDataViolations();
      }, n.prototype.treeDataViolations = function() {
        this.isRowModelDefault() && C(this.getDataPathFunc()) && console.warn("AG Grid: property usingTreeData=true with rowModel=clientSide, but you did not provide getDataPath function, please provide getDataPath function if using tree data."), this.isRowModelServerSide() && (C(this.getIsServerSideGroupFunc()) && console.warn("AG Grid: property usingTreeData=true with rowModel=serverSide, but you did not provide isServerSideGroup function, please provide isServerSideGroup function if using tree data."), C(this.getServerSideGroupKeyFunc()) && console.warn("AG Grid: property usingTreeData=true with rowModel=serverSide, but you did not provide getServerSideGroupKey function, please provide getServerSideGroupKey function if using tree data."));
      }, n.prototype.getLocaleTextFunc = function() {
        var e = this, r = this.gridOptions, o = r.localeText, i = r.getLocaleText, s = r.localeTextFunc;
        return i ? function(a, l, u) {
          var p = {
            key: a,
            defaultValue: l,
            variableValues: u,
            api: e.getApi(),
            columnApi: e.getColumnApi(),
            context: e.getContext()
          };
          return i(p);
        } : s || function(a, l, u) {
          var p = o && o[a];
          if (p && u && u.length)
            for (var d = 0; !(d >= u.length); ) {
              var f = p.indexOf("${variable}");
              if (f === -1)
                break;
              p = p.replace("${variable}", u[d++]);
            }
          return p ?? l;
        };
      }, n.prototype.globalEventHandler = function(e, r) {
        if (!this.destroyed) {
          var o = Xt.getCallbackForEvent(e);
          typeof this.gridOptions[o] == "function" && this.gridOptions[o](r);
        }
      }, n.prototype.setRowHeightVariable = function(e) {
        var r = this.eGridDiv.style.getPropertyValue("--ag-line-height").trim(), o = e + "px";
        r != o && this.eGridDiv.style.setProperty("--ag-line-height", o);
      }, n.prototype.getRowHeightAsNumber = function() {
        if (!this.gridOptions.rowHeight || C(this.gridOptions.rowHeight))
          return this.getDefaultRowHeight();
        var e = this.gridOptions.rowHeight;
        return e && this.isNumeric(e) ? (this.setRowHeightVariable(e), e) : (console.warn("AG Grid row height must be a number if not using standard row model"), this.getDefaultRowHeight());
      }, n.prototype.isGetRowHeightFunction = function() {
        return typeof this.gridOptions.getRowHeight == "function";
      }, n.prototype.getRowHeightForNode = function(e, r, o) {
        if (r === void 0 && (r = !1), o == null && (o = this.getDefaultRowHeight()), this.isGetRowHeightFunction()) {
          if (r)
            return { height: o, estimated: !0 };
          var i = {
            node: e,
            data: e.data
          }, s = this.mergeGridCommonParams(this.gridOptions.getRowHeight)(i);
          if (this.isNumeric(s))
            return s === 0 && me(function() {
              return console.warn("AG Grid: The return of `getRowHeight` cannot be zero. If the intention is to hide rows, use a filter instead.");
            }, "invalidRowHeight"), { height: Math.max(1, s), estimated: !1 };
        }
        if (e.detail && this.isMasterDetail())
          return this.isDetailRowAutoHeight() ? { height: 1, estimated: !1 } : this.isNumeric(this.gridOptions.detailRowHeight) ? { height: this.gridOptions.detailRowHeight, estimated: !1 } : { height: lf, estimated: !1 };
        var a = this.gridOptions.rowHeight && this.isNumeric(this.gridOptions.rowHeight) ? this.gridOptions.rowHeight : o;
        return { height: a, estimated: !1 };
      }, n.prototype.isDynamicRowHeight = function() {
        return typeof this.gridOptions.getRowHeight == "function";
      }, n.prototype.getListItemHeight = function() {
        return this.getFromTheme(20, "listItemHeight");
      }, n.prototype.chartMenuPanelWidth = function() {
        return this.environment.chartMenuPanelWidth();
      }, n.prototype.isNumeric = function(e) {
        return !isNaN(e) && typeof e == "number" && isFinite(e);
      }, n.prototype.getFromTheme = function(e, r) {
        var o = this.environment.getTheme().theme;
        return o && o.indexOf("ag-theme") === 0 ? this.environment.getSassVariable(o, r) : e;
      }, n.prototype.getDefaultRowHeight = function() {
        return this.getFromTheme(af, "rowHeight");
      }, n.prototype.matchesGroupDisplayType = function(e, r) {
        var o = ["groupRows", "multipleColumns", "custom", "singleColumn"];
        return o.indexOf(r) < 0 ? (console.warn("AG Grid: '" + r + "' is not a valid groupDisplayType value - possible values are: '" + o.join("', '") + "'"), !1) : r === e;
      }, n.prototype.matchesTreeDataDisplayType = function(e, r) {
        var o = ["auto", "custom"];
        return o.indexOf(r) < 0 ? (console.warn("AG Grid: '" + r + "' is not a valid treeDataDisplayType value - possible values are: '" + o.join("', '") + "'"), !1) : r === e;
      };
      var t;
      return n.MIN_COL_WIDTH = 10, n.PROP_HEADER_HEIGHT = "headerHeight", n.PROP_GROUP_REMOVE_SINGLE_CHILDREN = "groupRemoveSingleChildren", n.PROP_GROUP_REMOVE_LOWEST_SINGLE_CHILDREN = "groupRemoveLowestSingleChildren", n.PROP_PIVOT_HEADER_HEIGHT = "pivotHeaderHeight", n.PROP_SUPPRESS_CLIPBOARD_PASTE = "suppressClipboardPaste", n.PROP_GROUP_HEADER_HEIGHT = "groupHeaderHeight", n.PROP_PIVOT_GROUP_HEADER_HEIGHT = "pivotGroupHeaderHeight", n.PROP_NAVIGATE_TO_NEXT_CELL = "navigateToNextCell", n.PROP_TAB_TO_NEXT_CELL = "tabToNextCell", n.PROP_NAVIGATE_TO_NEXT_HEADER = "navigateToNextHeader", n.PROP_TAB_TO_NEXT_HEADER = "tabToNextHeader", n.PROP_IS_EXTERNAL_FILTER_PRESENT = "isExternalFilterPresent", n.PROP_DOES_EXTERNAL_FILTER_PASS = "doesExternalFilterPass", n.PROP_FLOATING_FILTERS_HEIGHT = "floatingFiltersHeight", n.PROP_SUPPRESS_ROW_CLICK_SELECTION = "suppressRowClickSelection", n.PROP_SUPPRESS_ROW_DRAG = "suppressRowDrag", n.PROP_SUPPRESS_MOVE_WHEN_ROW_DRAG = "suppressMoveWhenRowDragging", n.PROP_GET_ROW_CLASS = "getRowClass", n.PROP_GET_ROW_STYLE = "getRowStyle", n.PROP_GET_ROW_HEIGHT = "getRowHeight", n.PROP_POPUP_PARENT = "popupParent", n.PROP_DOM_LAYOUT = "domLayout", n.PROP_ROW_CLASS = "rowClass", n.PROP_FILL_HANDLE_DIRECTION = "fillHandleDirection", n.PROP_GROUP_ROW_AGG_NODES = "groupRowAggNodes", n.PROP_GET_GROUP_ROW_AGG = "getGroupRowAgg", n.PROP_GET_BUSINESS_KEY_FOR_NODE = "getBusinessKeyForNode", n.PROP_GET_CHILD_COUNT = "getChildCount", n.PROP_PROCESS_ROW_POST_CREATE = "processRowPostCreate", n.PROP_GET_ROW_NODE_ID = "getRowNodeId", n.PROP_GET_ROW_ID = "getRowId", n.PROP_IS_FULL_WIDTH_CELL = "isFullWidthCell", n.PROP_IS_FULL_WIDTH_ROW = "isFullWidthRow", n.PROP_IS_ROW_SELECTABLE = "isRowSelectable", n.PROP_IS_ROW_MASTER = "isRowMaster", n.PROP_POST_SORT = "postSort", n.PROP_POST_SORT_ROWS = "postSortRows", n.PROP_GET_DOCUMENT = "getDocument", n.PROP_POST_PROCESS_POPUP = "postProcessPopup", n.PROP_DEFAULT_GROUP_ORDER_COMPARATOR = "defaultGroupOrderComparator", n.PROP_INITIAL_GROUP_ORDER_COMPARATOR = "initialGroupOrderComparator", n.PROP_PAGINATION_NUMBER_FORMATTER = "paginationNumberFormatter", n.PROP_GET_CONTEXT_MENU_ITEMS = "getContextMenuItems", n.PROP_GET_MAIN_MENU_ITEMS = "getMainMenuItems", n.PROP_PROCESS_CELL_FOR_CLIPBOARD = "processCellForClipboard", n.PROP_PROCESS_CELL_FROM_CLIPBOARD = "processCellFromClipboard", n.PROP_SEND_TO_CLIPBOARD = "sendToClipboard", n.PROP_PROCESS_TO_SECONDARY_COLDEF = "processSecondaryColDef", n.PROP_PROCESS_SECONDARY_COL_GROUP_DEF = "processSecondaryColGroupDef", n.PROP_GET_CHART_TOOLBAR_ITEMS = "getChartToolbarItems", n.PROP_GET_SERVER_SIDE_STORE_PARAMS = "getServerSideStoreParams", n.PROP_IS_SERVER_SIDE_GROUPS_OPEN_BY_DEFAULT = "isServerSideGroupOpenByDefault", n.PROP_IS_APPLY_SERVER_SIDE_TRANSACTION = "isApplyServerSideTransaction", n.PROP_IS_SERVER_SIDE_GROUP = "isServerSideGroup", n.PROP_GET_SERVER_SIDE_GROUP_KEY = "getServerSideGroupKey", Jt([
        h("gridOptions")
      ], n.prototype, "gridOptions", void 0), Jt([
        h("eventService")
      ], n.prototype, "eventService", void 0), Jt([
        h("environment")
      ], n.prototype, "environment", void 0), Jt([
        h("eGridDiv")
      ], n.prototype, "eGridDiv", void 0), Jt([
        $l(0, Ne("gridApi")),
        $l(1, Ne("columnApi"))
      ], n.prototype, "agWire", null), Jt([
        De
      ], n.prototype, "destroy", null), Jt([
        B
      ], n.prototype, "init", null), n = t = Jt([
        j("gridOptionsWrapper")
      ], n), n;
    }()
  );
  var hf = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Yl = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  };
  (function(n) {
    n.AUTO_HEIGHT = "ag-layout-auto-height", n.NORMAL = "ag-layout-normal", n.PRINT = "ag-layout-print";
  })(c.LayoutCssClasses || (c.LayoutCssClasses = {}));
  var bs = (
    /** @class */
    function(n) {
      hf(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return r.view = e, r;
      }
      return t.prototype.postConstruct = function() {
        this.addManagedListener(this.gridOptionsWrapper, z.PROP_DOM_LAYOUT, this.updateLayoutClasses.bind(this)), this.updateLayoutClasses();
      }, t.prototype.updateLayoutClasses = function() {
        var e = this.gridOptionsWrapper.getDomLayout(), r = {
          autoHeight: e === E.DOM_LAYOUT_AUTO_HEIGHT,
          normal: e === E.DOM_LAYOUT_NORMAL,
          print: e === E.DOM_LAYOUT_PRINT
        }, o = r.autoHeight ? c.LayoutCssClasses.AUTO_HEIGHT : r.print ? c.LayoutCssClasses.PRINT : c.LayoutCssClasses.NORMAL;
        this.view.updateLayoutClasses(o, r);
      }, Yl([
        h("gridOptionsWrapper")
      ], t.prototype, "gridOptionsWrapper", void 0), Yl([
        B
      ], t.prototype, "postConstruct", null), t;
    }(H)
  );
  var ff = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Ft = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, gf = (
    /** @class */
    function(n) {
      ff(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return r.scrollLeft = -1, r.nextScrollTop = -1, r.scrollTop = -1, r.eBodyViewport = e, r.resetLastHorizontalScrollElementDebounced = it(r.resetLastHorizontalScrollElement.bind(r), 500), r;
      }
      return t.prototype.postConstruct = function() {
        var e = this;
        this.enableRtl = this.gridOptionsWrapper.isEnableRtl(), this.addManagedListener(this.eventService, m.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onDisplayedColumnsWidthChanged.bind(this)), this.ctrlsService.whenReady(function(r) {
          e.centerRowContainerCtrl = r.centerRowContainerCtrl, e.onDisplayedColumnsWidthChanged(), e.addScrollListener();
        });
      }, t.prototype.addScrollListener = function() {
        var e = this.ctrlsService.getFakeHScrollCtrl();
        this.addManagedListener(this.centerRowContainerCtrl.getViewportElement(), "scroll", this.onCenterViewportScroll.bind(this)), this.addManagedListener(e.getViewport(), "scroll", this.onFakeHorizontalScroll.bind(this));
        var r = this.gridOptionsWrapper.isDebounceVerticalScrollbar() ? it(this.onVerticalScroll.bind(this), 100) : this.onVerticalScroll.bind(this);
        this.addManagedListener(this.eBodyViewport, "scroll", r);
      }, t.prototype.onDisplayedColumnsWidthChanged = function() {
        this.enableRtl && this.horizontallyScrollHeaderCenterAndFloatingCenter();
      }, t.prototype.horizontallyScrollHeaderCenterAndFloatingCenter = function(e) {
        var r = this.centerRowContainerCtrl == null;
        if (!r) {
          e === void 0 && (e = this.centerRowContainerCtrl.getCenterViewportScrollLeft());
          var o = this.enableRtl ? e : -e, i = this.ctrlsService.getTopCenterRowContainerCtrl(), s = this.ctrlsService.getBottomCenterRowContainerCtrl(), a = this.ctrlsService.getFakeHScrollCtrl(), l = this.ctrlsService.getHeaderRowContainerCtrl();
          l.setHorizontalScroll(o), s.setContainerTranslateX(o), i.setContainerTranslateX(o);
          var u = this.lastHorizontalScrollElement === this.centerRowContainerCtrl.getViewportElement() ? a.getViewport() : this.centerRowContainerCtrl.getViewportElement();
          Ei(u, Math.abs(e), this.enableRtl);
        }
      }, t.prototype.isControllingScroll = function(e) {
        return this.lastHorizontalScrollElement ? e === this.lastHorizontalScrollElement : (this.lastHorizontalScrollElement = e, !0);
      }, t.prototype.onFakeHorizontalScroll = function() {
        var e = this.ctrlsService.getFakeHScrollCtrl().getViewport();
        this.isControllingScroll(e) && this.onBodyHorizontalScroll(e);
      }, t.prototype.onCenterViewportScroll = function() {
        var e = this.centerRowContainerCtrl.getViewportElement();
        this.isControllingScroll(e) && this.onBodyHorizontalScroll(e);
      }, t.prototype.onBodyHorizontalScroll = function(e) {
        var r = this.centerRowContainerCtrl.getViewportElement(), o = r.scrollLeft;
        this.shouldBlockScrollUpdate("horizontal", o, !0) || (this.doHorizontalScroll(Math.round(Ao(e, this.enableRtl))), this.resetLastHorizontalScrollElementDebounced());
      }, t.prototype.onVerticalScroll = function() {
        var e = this.eBodyViewport.scrollTop;
        this.shouldBlockScrollUpdate("vertical", e, !0) || (this.animationFrameService.setScrollTop(e), this.nextScrollTop = e, this.gridOptionsWrapper.isSuppressAnimationFrame() ? (this.scrollTop = this.nextScrollTop, this.redrawRowsAfterScroll()) : this.animationFrameService.schedule());
      }, t.prototype.resetLastHorizontalScrollElement = function() {
        this.lastHorizontalScrollElement = null;
      }, t.prototype.doHorizontalScroll = function(e) {
        var r = this.ctrlsService.getFakeHScrollCtrl().getViewport(), o = Ao(r, this.enableRtl);
        this.scrollLeft === e && e === o || (this.scrollLeft = e, this.fireScrollEvent("horizontal"), this.horizontallyScrollHeaderCenterAndFloatingCenter(e), this.onHorizontalViewportChanged());
      }, t.prototype.fireScrollEvent = function(e) {
        var r = this, o = {
          type: m.EVENT_BODY_SCROLL,
          api: this.gridApi,
          columnApi: this.columnApi,
          direction: e,
          left: this.scrollLeft,
          top: this.scrollTop
        };
        this.eventService.dispatchEvent(o), window.clearTimeout(this.scrollTimer), this.scrollTimer = void 0, this.scrollTimer = window.setTimeout(function() {
          var i = Object.assign({}, o, {
            type: m.EVENT_BODY_SCROLL_END
          });
          r.eventService.dispatchEvent(i);
        }, 100);
      }, t.prototype.shouldBlockScrollUpdate = function(e, r, o) {
        if (o === void 0 && (o = !1), o && !Hr())
          return !1;
        if (e === "vertical") {
          var i = _o(this.eBodyViewport), s = this.eBodyViewport.scrollHeight;
          if (r < 0 || r + i > s)
            return !0;
        }
        if (e === "horizontal") {
          var a = this.centerRowContainerCtrl.getCenterWidth(), l = this.centerRowContainerCtrl.getViewportElement().scrollWidth;
          if (this.enableRtl && Oo()) {
            if (r > 0)
              return !0;
          } else if (r < 0)
            return !0;
          if (Math.abs(r) + a > l)
            return !0;
        }
        return !1;
      }, t.prototype.redrawRowsAfterScroll = function() {
        this.fireScrollEvent("vertical");
      }, t.prototype.onHorizontalViewportChanged = function() {
        this.centerRowContainerCtrl.onHorizontalViewportChanged();
      }, t.prototype.checkScrollLeft = function() {
        this.scrollLeft !== this.centerRowContainerCtrl.getCenterViewportScrollLeft() && this.onBodyHorizontalScroll(this.centerRowContainerCtrl.getViewportElement());
      }, t.prototype.executeAnimationFrameScroll = function() {
        var e = this.scrollTop != this.nextScrollTop;
        return e && (this.scrollTop = this.nextScrollTop, this.redrawRowsAfterScroll()), e;
      }, t.prototype.setHorizontalScrollPosition = function(e) {
        var r = 0, o = this.centerRowContainerCtrl.getViewportElement().scrollWidth - this.centerRowContainerCtrl.getCenterWidth();
        this.shouldBlockScrollUpdate("horizontal", e) && (this.enableRtl && Oo() ? e = e > 0 ? 0 : o : e = Math.min(Math.max(e, r), o)), Ei(this.centerRowContainerCtrl.getViewportElement(), Math.abs(e), this.enableRtl), this.doHorizontalScroll(e);
      }, t.prototype.setVerticalScrollPosition = function(e) {
        this.eBodyViewport.scrollTop = e;
      }, t.prototype.getVScrollPosition = function() {
        var e = {
          top: this.eBodyViewport.scrollTop,
          bottom: this.eBodyViewport.scrollTop + this.eBodyViewport.offsetHeight
        };
        return e;
      }, t.prototype.getHScrollPosition = function() {
        return this.centerRowContainerCtrl.getHScrollPosition();
      }, t.prototype.isHorizontalScrollShowing = function() {
        return this.centerRowContainerCtrl.isHorizontalScrollShowing();
      }, t.prototype.scrollHorizontally = function(e) {
        var r = this.centerRowContainerCtrl.getViewportElement().scrollLeft;
        return this.setHorizontalScrollPosition(r + e), this.centerRowContainerCtrl.getViewportElement().scrollLeft - r;
      }, t.prototype.scrollToTop = function() {
        this.eBodyViewport.scrollTop = 0;
      }, t.prototype.ensureNodeVisible = function(e, r) {
        r === void 0 && (r = null);
        for (var o = this.rowModel.getRowCount(), i = typeof e == "function", s = -1, a = 0; a < o; a++) {
          var l = this.rowModel.getRow(a);
          if (i) {
            if (e(l)) {
              s = a;
              break;
            }
          } else if (e === l || e === l.data) {
            s = a;
            break;
          }
        }
        s >= 0 && this.ensureIndexVisible(s, r);
      }, t.prototype.ensureIndexVisible = function(e, r) {
        if (this.gridOptionsWrapper.getDomLayout() !== E.DOM_LAYOUT_PRINT) {
          var o = this.paginationProxy.getRowCount();
          if (typeof e != "number" || e < 0 || e >= o) {
            console.warn("invalid row index for ensureIndexVisible: " + e);
            return;
          }
          var i = this.gridOptionsWrapper.isPagination(), s = i && !this.gridOptionsWrapper.isSuppressPaginationPanel();
          s || this.paginationProxy.goToPageWithIndex(e);
          var a = this.paginationProxy.getRow(e), l;
          do {
            var u = a.rowTop, p = a.rowHeight, d = this.paginationProxy.getPixelOffset(), f = a.rowTop - d, v = f + a.rowHeight, y = this.getVScrollPosition(), R = this.heightScaler.getDivStretchOffset(), _ = y.top + R, D = y.bottom + R, P = D - _, F = this.heightScaler.getScrollPositionForPixel(f), U = this.heightScaler.getScrollPositionForPixel(v - P), X = Math.min((F + U) / 2, f), ce = _ > f, de = D < v, J = null;
            r === "top" ? J = F : r === "bottom" ? J = U : r === "middle" ? J = X : ce ? J = F : de && (J = U), J !== null && (this.eBodyViewport.scrollTop = J, this.rowRenderer.redrawAfterScroll()), l = u !== a.rowTop || p !== a.rowHeight;
          } while (l);
          this.animationFrameService.flushAllFrames();
        }
      }, t.prototype.ensureColumnVisible = function(e, r) {
        r === void 0 && (r = "auto");
        var o = this.columnModel.getGridColumn(e);
        if (o && !o.isPinned() && this.columnModel.isColumnDisplayed(o)) {
          var i = this.getPositionedHorizontalScroll(o, r);
          i !== null && this.centerRowContainerCtrl.setCenterViewportScrollLeft(i), this.centerRowContainerCtrl.onHorizontalViewportChanged(), this.animationFrameService.flushAllFrames();
        }
      }, t.prototype.getPositionedHorizontalScroll = function(e, r) {
        var o = this.isColumnOutsideViewport(e), i = o.columnBeforeStart, s = o.columnAfterEnd, a = this.centerRowContainerCtrl.getCenterWidth() < e.getActualWidth(), l = this.centerRowContainerCtrl.getCenterWidth(), u = this.enableRtl, p = (u ? i : s) || a, d = u ? s : i;
        r !== "auto" && (p = r === "start", d = r === "end");
        var f = r === "middle";
        if (p || d || f) {
          var v = this.getColumnBounds(e), y = v.colLeft, R = v.colMiddle, _ = v.colRight;
          return f ? R - l / 2 : p ? u ? _ : y : u ? y - l : _ - l;
        }
        return null;
      }, t.prototype.isColumnOutsideViewport = function(e) {
        var r = this.getViewportBounds(), o = r.start, i = r.end, s = this.getColumnBounds(e), a = s.colLeft, l = s.colRight, u = this.enableRtl, p = u ? o > l : i < l, d = u ? i < a : o > a;
        return { columnBeforeStart: p, columnAfterEnd: d };
      }, t.prototype.getColumnBounds = function(e) {
        var r = this.enableRtl, o = this.columnModel.getBodyContainerWidth(), i = e.getActualWidth(), s = e.getLeft(), a = r ? -1 : 1, l = r ? o - s : s, u = l + i * a, p = l + i / 2 * a;
        return { colLeft: l, colMiddle: p, colRight: u };
      }, t.prototype.getViewportBounds = function() {
        var e = this.centerRowContainerCtrl.getCenterWidth(), r = this.centerRowContainerCtrl.getCenterViewportScrollLeft(), o = r, i = e + r;
        return { start: o, end: i, width: e };
      }, Ft([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), Ft([
        h("animationFrameService")
      ], t.prototype, "animationFrameService", void 0), Ft([
        h("columnApi")
      ], t.prototype, "columnApi", void 0), Ft([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), Ft([
        h("paginationProxy")
      ], t.prototype, "paginationProxy", void 0), Ft([
        h("rowModel")
      ], t.prototype, "rowModel", void 0), Ft([
        h("rowContainerHeightService")
      ], t.prototype, "heightScaler", void 0), Ft([
        h("rowRenderer")
      ], t.prototype, "rowRenderer", void 0), Ft([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), Ft([
        B
      ], t.prototype, "postConstruct", null), t;
    }(H)
  );
  var ql = (
    /** @class */
    function() {
      function n(t) {
        this.tickingInterval = null, this.onScrollCallback = null, this.scrollContainer = t.scrollContainer, this.scrollHorizontally = t.scrollAxis.indexOf("x") !== -1, this.scrollVertically = t.scrollAxis.indexOf("y") !== -1, this.scrollByTick = t.scrollByTick != null ? t.scrollByTick : 20, t.onScrollCallback && (this.onScrollCallback = t.onScrollCallback), this.scrollVertically && (this.getVerticalPosition = t.getVerticalPosition, this.setVerticalPosition = t.setVerticalPosition), this.scrollHorizontally && (this.getHorizontalPosition = t.getHorizontalPosition, this.setHorizontalPosition = t.setHorizontalPosition), this.shouldSkipVerticalScroll = t.shouldSkipVerticalScroll || function() {
          return !1;
        }, this.shouldSkipHorizontalScroll = t.shouldSkipHorizontalScroll || function() {
          return !1;
        };
      }
      return n.prototype.check = function(t, e) {
        e === void 0 && (e = !1);
        var r = e || this.shouldSkipVerticalScroll();
        if (!(r && this.shouldSkipHorizontalScroll())) {
          var o = this.scrollContainer.getBoundingClientRect(), i = this.scrollByTick;
          this.tickLeft = t.clientX < o.left + i, this.tickRight = t.clientX > o.right - i, this.tickUp = t.clientY < o.top + i && !r, this.tickDown = t.clientY > o.bottom - i && !r, this.tickLeft || this.tickRight || this.tickUp || this.tickDown ? this.ensureTickingStarted() : this.ensureCleared();
        }
      }, n.prototype.ensureTickingStarted = function() {
        this.tickingInterval === null && (this.tickingInterval = window.setInterval(this.doTick.bind(this), 100), this.tickCount = 0);
      }, n.prototype.doTick = function() {
        this.tickCount++;
        var t;
        if (t = this.tickCount > 20 ? 200 : this.tickCount > 10 ? 80 : 40, this.scrollVertically) {
          var e = this.getVerticalPosition();
          this.tickUp && this.setVerticalPosition(e - t), this.tickDown && this.setVerticalPosition(e + t);
        }
        if (this.scrollHorizontally) {
          var r = this.getHorizontalPosition();
          this.tickLeft && this.setHorizontalPosition(r - t), this.tickRight && this.setHorizontalPosition(r + t);
        }
        this.onScrollCallback && this.onScrollCallback();
      }, n.prototype.ensureCleared = function() {
        this.tickingInterval && (window.clearInterval(this.tickingInterval), this.tickingInterval = null);
      }, n;
    }()
  );
  var vf = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Fs = function() {
    return Fs = Object.assign || function(n) {
      for (var t, e = 1, r = arguments.length; e < r; e++) {
        t = arguments[e];
        for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
      }
      return n;
    }, Fs.apply(this, arguments);
  }, Ze = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, mf = function(n, t) {
    var e = typeof Symbol == "function" && n[Symbol.iterator];
    if (!e) return n;
    var r = e.call(n), o, i = [], s;
    try {
      for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
    } catch (a) {
      s = { error: a };
    } finally {
      try {
        o && !o.done && (e = r.return) && e.call(r);
      } finally {
        if (s) throw s.error;
      }
    }
    return i;
  }, yf = function() {
    for (var n = [], t = 0; t < arguments.length; t++) n = n.concat(mf(arguments[t]));
    return n;
  }, Cf = (
    /** @class */
    function(n) {
      vf(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return r.isMultiRowDrag = !1, r.isGridSorted = !1, r.isGridFiltered = !1, r.isRowGroupActive = !1, r.eContainer = e, r;
      }
      return t.prototype.postConstruct = function() {
        var e = this;
        this.gridOptionsWrapper.isRowModelDefault() && (this.clientSideRowModel = this.rowModel);
        var r = function() {
          e.onSortChanged(), e.onFilterChanged(), e.onRowGroupChanged();
        };
        this.addManagedListener(this.eventService, m.EVENT_SORT_CHANGED, this.onSortChanged.bind(this)), this.addManagedListener(this.eventService, m.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this)), this.addManagedListener(this.eventService, m.EVENT_COLUMN_ROW_GROUP_CHANGED, this.onRowGroupChanged.bind(this)), this.addManagedListener(this.eventService, m.EVENT_MODEL_UPDATED, function() {
          r();
        }), r(), this.ctrlsService.whenReady(function() {
          var o = e.ctrlsService.getGridBodyCtrl();
          e.autoScrollService = new ql({
            scrollContainer: o.getBodyViewportElement(),
            scrollAxis: "y",
            getVerticalPosition: function() {
              return o.getScrollFeature().getVScrollPosition().top;
            },
            setVerticalPosition: function(i) {
              return o.getScrollFeature().setVerticalScrollPosition(i);
            },
            onScrollCallback: function() {
              e.onDragging(e.lastDraggingEvent);
            }
          });
        });
      }, t.prototype.onSortChanged = function() {
        this.isGridSorted = this.sortController.isSortActive();
      }, t.prototype.onFilterChanged = function() {
        this.isGridFiltered = this.filterManager.isAnyFilterPresent();
      }, t.prototype.onRowGroupChanged = function() {
        var e = this.columnModel.getRowGroupColumns();
        this.isRowGroupActive = !S(e);
      }, t.prototype.getContainer = function() {
        return this.eContainer;
      }, t.prototype.isInterestedIn = function(e) {
        return e === c.DragSourceType.RowDrag;
      }, t.prototype.getIconName = function() {
        var e = this.gridOptionsWrapper.isRowDragManaged();
        return e && this.shouldPreventRowMove() ? $e.ICON_NOT_ALLOWED : $e.ICON_MOVE;
      }, t.prototype.shouldPreventRowMove = function() {
        return this.isGridSorted || this.isGridFiltered || this.isRowGroupActive;
      }, t.prototype.getRowNodes = function(e) {
        var r = this;
        if (!this.isFromThisGrid(e))
          return e.dragItem.rowNodes || [];
        var o = this.gridOptionsWrapper.isRowDragMultiRow(), i = yf(this.selectionService.getSelectedNodes()).sort(function(a, l) {
          return r.getRowIndexNumber(a) - r.getRowIndexNumber(l);
        }), s = e.dragItem.rowNode;
        return o && i.indexOf(s) !== -1 ? (this.isMultiRowDrag = !0, i) : (this.isMultiRowDrag = !1, [s]);
      }, t.prototype.onDragEnter = function(e) {
        e.dragItem.rowNodes = this.getRowNodes(e), this.dispatchGridEvent(m.EVENT_ROW_DRAG_ENTER, e), this.getRowNodes(e).forEach(function(r) {
          r.setDragging(!0);
        }), this.onEnterOrDragging(e);
      }, t.prototype.onDragging = function(e) {
        this.onEnterOrDragging(e);
      }, t.prototype.isFromThisGrid = function(e) {
        var r = e.dragSource.dragSourceDomDataKey;
        return r === this.gridOptionsWrapper.getDomDataKey();
      }, t.prototype.isDropZoneWithinThisGrid = function(e) {
        var r = this.ctrlsService.getGridBodyCtrl(), o = r.getGui(), i = e.dropZoneTarget;
        return !o.contains(i);
      }, t.prototype.onEnterOrDragging = function(e) {
        this.dispatchGridEvent(m.EVENT_ROW_DRAG_MOVE, e), this.lastDraggingEvent = e;
        var r = this.mouseEventService.getNormalisedPosition(e).y, o = this.gridOptionsWrapper.isRowDragManaged();
        o && this.doManagedDrag(e, r), this.autoScrollService.check(e.event);
      }, t.prototype.doManagedDrag = function(e, r) {
        var o = this.isFromThisGrid(e), i = this.gridOptionsWrapper.isRowDragManaged(), s = e.dragItem.rowNodes;
        i && this.shouldPreventRowMove() || (this.gridOptionsWrapper.isSuppressMoveWhenRowDragging() || !o ? this.isDropZoneWithinThisGrid(e) || this.clientSideRowModel.highlightRowAtPixel(s[0], r) : this.moveRows(s, r));
      }, t.prototype.getRowIndexNumber = function(e) {
        return parseInt(M(e.getRowIndexString().split("-")), 10);
      }, t.prototype.moveRowAndClearHighlight = function(e) {
        var r = this, o = this.clientSideRowModel.getLastHighlightedRowNode(), i = o && o.highlighted === c.RowHighlightPosition.Below, s = this.mouseEventService.getNormalisedPosition(e).y, a = e.dragItem.rowNodes, l = i ? 1 : 0;
        if (this.isFromThisGrid(e))
          a.forEach(function(d) {
            d.rowTop < s && (l -= 1);
          }), this.moveRows(a, s, l);
        else {
          var u = this.gridOptionsWrapper.getRowIdFunc(), p = this.clientSideRowModel.getRowIndexAtPixel(s) + 1;
          this.clientSideRowModel.getHighlightPosition(s) === c.RowHighlightPosition.Above && p--, this.clientSideRowModel.updateRowData({
            add: a.map(function(d) {
              return d.data;
            }).filter(function(d) {
              return !r.clientSideRowModel.getRowNode(u ? u({ data: d, level: 0 }) : d.id);
            }),
            addIndex: p
          });
        }
        this.clearRowHighlight();
      }, t.prototype.clearRowHighlight = function() {
        this.clientSideRowModel.highlightRowAtPixel(null);
      }, t.prototype.moveRows = function(e, r, o) {
        o === void 0 && (o = 0);
        var i = this.clientSideRowModel.ensureRowsAtPixel(e, r, o);
        i && (this.focusService.clearFocusedCell(), this.rangeService && this.rangeService.removeAllCellRanges());
      }, t.prototype.addRowDropZone = function(e) {
        var r = this;
        if (!e.getContainer()) {
          me(function() {
            return console.warn("AG Grid: addRowDropZone - A container target needs to be provided");
          }, "add-drop-zone-empty-target");
          return;
        }
        if (this.dragAndDropService.findExternalZone(e)) {
          console.warn("AG Grid: addRowDropZone - target already exists in the list of DropZones. Use `removeRowDropZone` before adding it again.");
          return;
        }
        var o = {
          getContainer: e.getContainer
        };
        e.fromGrid ? (e.fromGrid = void 0, o = e) : (e.onDragEnter && (o.onDragEnter = function(i) {
          e.onDragEnter(r.draggingToRowDragEvent(m.EVENT_ROW_DRAG_ENTER, i));
        }), e.onDragLeave && (o.onDragLeave = function(i) {
          e.onDragLeave(r.draggingToRowDragEvent(m.EVENT_ROW_DRAG_LEAVE, i));
        }), e.onDragging && (o.onDragging = function(i) {
          e.onDragging(r.draggingToRowDragEvent(m.EVENT_ROW_DRAG_MOVE, i));
        }), e.onDragStop && (o.onDragStop = function(i) {
          e.onDragStop(r.draggingToRowDragEvent(m.EVENT_ROW_DRAG_END, i));
        })), this.dragAndDropService.addDropTarget(Fs({ isInterestedIn: function(i) {
          return i === c.DragSourceType.RowDrag;
        }, getIconName: function() {
          return $e.ICON_MOVE;
        }, external: !0 }, o));
      }, t.prototype.getRowDropZone = function(e) {
        var r = this, o = this.getContainer.bind(this), i = this.onDragEnter.bind(this), s = this.onDragLeave.bind(this), a = this.onDragging.bind(this), l = this.onDragStop.bind(this);
        return e ? {
          getContainer: o,
          onDragEnter: e.onDragEnter ? function(u) {
            i(u), e.onDragEnter(r.draggingToRowDragEvent(m.EVENT_ROW_DRAG_ENTER, u));
          } : i,
          onDragLeave: e.onDragLeave ? function(u) {
            s(u), e.onDragLeave(r.draggingToRowDragEvent(m.EVENT_ROW_DRAG_LEAVE, u));
          } : s,
          onDragging: e.onDragging ? function(u) {
            a(u), e.onDragging(r.draggingToRowDragEvent(m.EVENT_ROW_DRAG_MOVE, u));
          } : a,
          onDragStop: e.onDragStop ? function(u) {
            l(u), e.onDragStop(r.draggingToRowDragEvent(m.EVENT_ROW_DRAG_END, u));
          } : l,
          fromGrid: !0
          /* @private */
        } : {
          getContainer: o,
          onDragEnter: i,
          onDragLeave: s,
          onDragging: a,
          onDragStop: l,
          /* @private */
          fromGrid: !0
        };
      }, t.prototype.draggingToRowDragEvent = function(e, r) {
        var o = this.mouseEventService.getNormalisedPosition(r).y, i = o > this.paginationProxy.getCurrentPageHeight(), s = -1, a;
        i || (s = this.rowModel.getRowIndexAtPixel(o), a = this.rowModel.getRow(s));
        var l;
        switch (r.vDirection) {
          case c.VerticalDirection.Down:
            l = "down";
            break;
          case c.VerticalDirection.Up:
            l = "up";
            break;
          default:
            l = null;
            break;
        }
        var u = {
          type: e,
          api: this.gridOptionsWrapper.getApi(),
          columnApi: this.gridOptionsWrapper.getColumnApi(),
          event: r.event,
          node: r.dragItem.rowNode,
          nodes: r.dragItem.rowNodes,
          overIndex: s,
          overNode: a,
          y: o,
          vDirection: l
        };
        return u;
      }, t.prototype.dispatchGridEvent = function(e, r) {
        var o = this.draggingToRowDragEvent(e, r);
        this.eventService.dispatchEvent(o);
      }, t.prototype.onDragLeave = function(e) {
        this.dispatchGridEvent(m.EVENT_ROW_DRAG_LEAVE, e), this.stopDragging(e), this.gridOptionsWrapper.isRowDragManaged() && this.clearRowHighlight(), this.isFromThisGrid(e) && (this.isMultiRowDrag = !1);
      }, t.prototype.onDragStop = function(e) {
        this.dispatchGridEvent(m.EVENT_ROW_DRAG_END, e), this.stopDragging(e), this.gridOptionsWrapper.isRowDragManaged() && (this.gridOptionsWrapper.isSuppressMoveWhenRowDragging() || !this.isFromThisGrid(e)) && !this.isDropZoneWithinThisGrid(e) && this.moveRowAndClearHighlight(e);
      }, t.prototype.stopDragging = function(e) {
        this.autoScrollService.ensureCleared(), this.getRowNodes(e).forEach(function(r) {
          r.setDragging(!1);
        });
      }, Ze([
        h("dragAndDropService")
      ], t.prototype, "dragAndDropService", void 0), Ze([
        h("rowModel")
      ], t.prototype, "rowModel", void 0), Ze([
        h("paginationProxy")
      ], t.prototype, "paginationProxy", void 0), Ze([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), Ze([
        h("focusService")
      ], t.prototype, "focusService", void 0), Ze([
        h("sortController")
      ], t.prototype, "sortController", void 0), Ze([
        h("filterManager")
      ], t.prototype, "filterManager", void 0), Ze([
        h("selectionService")
      ], t.prototype, "selectionService", void 0), Ze([
        h("mouseEventService")
      ], t.prototype, "mouseEventService", void 0), Ze([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), Ze([
        ve("rangeService")
      ], t.prototype, "rangeService", void 0), Ze([
        h("columnApi")
      ], t.prototype, "columnApi", void 0), Ze([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), Ze([
        B
      ], t.prototype, "postConstruct", null), t;
    }(H)
  );
  var wf = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), lt = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  };
  (function(n) {
    n.ANIMATION_ON = "ag-row-animation", n.ANIMATION_OFF = "ag-row-no-animation";
  })(c.RowAnimationCssClasses || (c.RowAnimationCssClasses = {}));
  var Xl = "ag-selectable", Ql = "ag-force-vertical-scroll", Zl = "ag-column-moving", Jl = (
    /** @class */
    function(n) {
      wf(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.getScrollFeature = function() {
        return this.bodyScrollFeature;
      }, t.prototype.getBodyViewportElement = function() {
        return this.eBodyViewport;
      }, t.prototype.setComp = function(e, r, o, i, s) {
        this.comp = e, this.eGridBody = r, this.eBodyViewport = o, this.eTop = i, this.eBottom = s, this.setCellTextSelection(this.gridOptionsWrapper.isEnableCellTextSelect()), this.createManagedBean(new bs(this.comp)), this.bodyScrollFeature = this.createManagedBean(new gf(this.eBodyViewport)), this.addRowDragListener(), this.setupRowAnimationCssClass(), this.addEventListeners(), this.addFocusListeners([i, o, s]), this.onGridColumnsChanged(), this.addBodyViewportListener(), this.setFloatingHeights(), this.disableBrowserDragging(), this.addStopEditingWhenGridLosesFocus(), this.ctrlsService.registerGridBodyCtrl(this);
      }, t.prototype.getComp = function() {
        return this.comp;
      }, t.prototype.addEventListeners = function() {
        this.addManagedListener(this.eventService, m.EVENT_GRID_COLUMNS_CHANGED, this.onGridColumnsChanged.bind(this)), this.addManagedListener(this.eventService, m.EVENT_SCROLL_VISIBILITY_CHANGED, this.onScrollVisibilityChanged.bind(this)), this.addManagedListener(this.eventService, m.EVENT_PINNED_ROW_DATA_CHANGED, this.setFloatingHeights.bind(this));
      }, t.prototype.addFocusListeners = function(e) {
        var r = this;
        e.forEach(function(o) {
          r.addManagedListener(o, "focusin", function() {
            o.classList.add("ag-has-focus");
          }), r.addManagedListener(o, "focusout", function(i) {
            o.contains(i.relatedTarget) || o.classList.remove("ag-has-focus");
          });
        });
      }, t.prototype.setColumnMovingCss = function(e) {
        this.comp.setColumnMovingCss(e ? Zl : null, e);
      }, t.prototype.setCellTextSelection = function(e) {
        e === void 0 && (e = !1);
        var r = e ? Xl : null;
        this.comp.setCellSelectableCss(r, e);
      }, t.prototype.onScrollVisibilityChanged = function() {
        var e = this.scrollVisibleService.isVerticalScrollShowing();
        this.setVerticalScrollPaddingVisible(e);
      }, t.prototype.onGridColumnsChanged = function() {
        var e = this.columnModel.getAllGridColumns();
        this.comp.setColumnCount(e ? e.length : 0);
      }, t.prototype.disableBrowserDragging = function() {
        this.addManagedListener(this.eGridBody, "dragstart", function(e) {
          if (e.target instanceof HTMLImageElement)
            return e.preventDefault(), !1;
        });
      }, t.prototype.addStopEditingWhenGridLosesFocus = function() {
        var e = this;
        if (this.gridOptionsWrapper.isStopEditingWhenCellsLoseFocus()) {
          var r = function(i) {
            var s = i.relatedTarget;
            if (vi(s) === null) {
              e.rowRenderer.stopEditing();
              return;
            }
            var a = (
              // see if click came from inside the viewports
              o.some(function(u) {
                return u.contains(s);
              }) && e.mouseEventService.isElementInThisGrid(s)
            );
            if (!a) {
              var l = e.popupService;
              a = l.getActivePopups().some(function(u) {
                return u.contains(s);
              }) || l.isElementWithinCustomPopup(s);
            }
            a || e.rowRenderer.stopEditing();
          }, o = [this.eBodyViewport, this.eBottom, this.eTop];
          o.forEach(function(i) {
            return e.addManagedListener(i, "focusout", r);
          });
        }
      }, t.prototype.updateRowCount = function() {
        var e = this.headerNavigationService.getHeaderRowCount(), r = this.paginationProxy.getType(), o = -1;
        r === E.ROW_MODEL_TYPE_CLIENT_SIDE && (o = 0, this.paginationProxy.forEachNode(function(s) {
          s.group || o++;
        }));
        var i = o === -1 ? -1 : e + o;
        this.comp.setRowCount(i);
      }, t.prototype.registerBodyViewportResizeListener = function(e) {
        this.comp.registerBodyViewportResizeListener(e);
      }, t.prototype.setVerticalScrollPaddingVisible = function(e) {
        var r = e ? "scroll" : "hidden";
        this.comp.setPinnedTopBottomOverflowY(r);
      }, t.prototype.isVerticalScrollShowing = function() {
        var e = this.gridOptionsWrapper.isAlwaysShowVerticalScroll(), r = e ? Ql : null;
        return this.comp.setAlwaysVerticalScrollClass(r, e), e || Va(this.eBodyViewport);
      }, t.prototype.setupRowAnimationCssClass = function() {
        var e = this, r = function() {
          var o = e.gridOptionsWrapper.isAnimateRows() && !e.rowContainerHeightService.isStretching(), i = o ? c.RowAnimationCssClasses.ANIMATION_ON : c.RowAnimationCssClasses.ANIMATION_OFF;
          e.comp.setRowAnimationCssOnBodyViewport(i, o);
        };
        r(), this.addManagedListener(this.eventService, m.EVENT_HEIGHT_SCALE_CHANGED, r);
      }, t.prototype.getGridBodyElement = function() {
        return this.eGridBody;
      }, t.prototype.addBodyViewportListener = function() {
        var e = this, r = function(o) {
          e.gridOptionsWrapper.isPreventDefaultOnContextMenu() && o.preventDefault();
          var i = o.target;
          (i === e.eBodyViewport || i === e.ctrlsService.getCenterRowContainerCtrl().getViewportElement()) && e.contextMenuFactory && e.contextMenuFactory.onContextMenu(o, null, null, null, null, e.eGridBody);
        };
        this.addManagedListener(this.eBodyViewport, "contextmenu", r), this.addManagedListener(this.eBodyViewport, "wheel", this.onWheel.bind(this));
      }, t.prototype.onWheel = function(e) {
        this.gridOptionsWrapper.isSuppressScrollWhenPopupsAreOpen() && this.popupService.hasAnchoredPopup() && e.preventDefault();
      }, t.prototype.getGui = function() {
        return this.eGridBody;
      }, t.prototype.scrollVertically = function(e) {
        var r = this.eBodyViewport.scrollTop;
        return this.bodyScrollFeature.setVerticalScrollPosition(r + e), this.eBodyViewport.scrollTop - r;
      }, t.prototype.addRowDragListener = function() {
        this.rowDragFeature = this.createManagedBean(new Cf(this.eBodyViewport)), this.dragAndDropService.addDropTarget(this.rowDragFeature);
      }, t.prototype.getRowDragFeature = function() {
        return this.rowDragFeature;
      }, t.prototype.setFloatingHeights = function() {
        var e = this.pinnedRowModel, r = e.getPinnedTopTotalHeight();
        r && (r += 1);
        var o = e.getPinnedBottomTotalHeight();
        o && (o += 1), this.comp.setTopHeight(r), this.comp.setBottomHeight(o), this.comp.setTopDisplay(r ? "inherit" : "none"), this.comp.setBottomDisplay(o ? "inherit" : "none");
      }, t.prototype.sizeColumnsToFit = function(e) {
        var r = this, o = this.isVerticalScrollShowing(), i = o ? this.gridOptionsWrapper.getScrollbarWidth() : 0, s = Ci(this.eBodyViewport), a = s - i;
        if (a > 0) {
          this.columnModel.sizeColumnsToFit(a, "sizeColumnsToFit");
          return;
        }
        e === void 0 ? window.setTimeout(function() {
          r.sizeColumnsToFit(100);
        }, 0) : e === 100 ? window.setTimeout(function() {
          r.sizeColumnsToFit(500);
        }, 100) : e === 500 ? window.setTimeout(function() {
          r.sizeColumnsToFit(-1);
        }, 500) : console.warn("AG Grid: tried to call sizeColumnsToFit() but the grid is coming back with zero width, maybe the grid is not visible yet on the screen?");
      }, t.prototype.addScrollEventListener = function(e) {
        this.eBodyViewport.addEventListener("scroll", e);
      }, t.prototype.removeScrollEventListener = function(e) {
        this.eBodyViewport.removeEventListener("scroll", e);
      }, lt([
        h("rowContainerHeightService")
      ], t.prototype, "rowContainerHeightService", void 0), lt([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), lt([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), lt([
        h("scrollVisibleService")
      ], t.prototype, "scrollVisibleService", void 0), lt([
        ve("contextMenuFactory")
      ], t.prototype, "contextMenuFactory", void 0), lt([
        h("headerNavigationService")
      ], t.prototype, "headerNavigationService", void 0), lt([
        h("paginationProxy")
      ], t.prototype, "paginationProxy", void 0), lt([
        h("dragAndDropService")
      ], t.prototype, "dragAndDropService", void 0), lt([
        h("pinnedRowModel")
      ], t.prototype, "pinnedRowModel", void 0), lt([
        h("rowRenderer")
      ], t.prototype, "rowRenderer", void 0), lt([
        h("popupService")
      ], t.prototype, "popupService", void 0), lt([
        h("mouseEventService")
      ], t.prototype, "mouseEventService", void 0), t;
    }(H)
  );
  (function(n) {
    n[n.FILL = 0] = "FILL", n[n.RANGE = 1] = "RANGE";
  })(c.SelectionHandleType || (c.SelectionHandleType = {})), function(n) {
    n[n.VALUE = 0] = "VALUE", n[n.DIMENSION = 1] = "DIMENSION";
  }(c.CellRangeType || (c.CellRangeType = {}));
  var xo = "ag-cell-range-selected", Ef = "ag-cell-range-chart", Rf = "ag-cell-range-single-cell", Sf = "ag-cell-range-chart-category", _f = "ag-cell-range-handle", Of = "ag-cell-range-top", Af = "ag-cell-range-right", Pf = "ag-cell-range-bottom", Tf = "ag-cell-range-left", Df = (
    /** @class */
    function() {
      function n(t, e) {
        this.beans = t, this.cellCtrl = e;
      }
      return n.prototype.setComp = function(t, e) {
        this.cellComp = t, this.eGui = e, this.onRangeSelectionChanged();
      }, n.prototype.onRangeSelectionChanged = function() {
        this.cellComp && (this.rangeCount = this.beans.rangeService.getCellRangeCount(this.cellCtrl.getCellPosition()), this.hasChartRange = this.getHasChartRange(), this.cellComp.addOrRemoveCssClass(xo, this.rangeCount !== 0), this.cellComp.addOrRemoveCssClass(xo + "-1", this.rangeCount === 1), this.cellComp.addOrRemoveCssClass(xo + "-2", this.rangeCount === 2), this.cellComp.addOrRemoveCssClass(xo + "-3", this.rangeCount === 3), this.cellComp.addOrRemoveCssClass(xo + "-4", this.rangeCount >= 4), this.cellComp.addOrRemoveCssClass(Ef, this.hasChartRange), kr(this.eGui, this.rangeCount > 0 ? !0 : void 0), this.cellComp.addOrRemoveCssClass(Rf, this.isSingleCell()), this.updateRangeBorders(), this.refreshHandle());
      }, n.prototype.updateRangeBorders = function() {
        var t = this.getRangeBorders(), e = this.isSingleCell(), r = !e && t.top, o = !e && t.right, i = !e && t.bottom, s = !e && t.left;
        this.cellComp.addOrRemoveCssClass(Of, r), this.cellComp.addOrRemoveCssClass(Af, o), this.cellComp.addOrRemoveCssClass(Pf, i), this.cellComp.addOrRemoveCssClass(Tf, s);
      }, n.prototype.isSingleCell = function() {
        var t = this.beans.rangeService;
        return this.rangeCount === 1 && t && !t.isMoreThanOneCell();
      }, n.prototype.getHasChartRange = function() {
        var t = this.beans.rangeService;
        if (!this.rangeCount || !t)
          return !1;
        var e = t.getCellRanges();
        return e.length > 0 && e.every(function(r) {
          return Le([c.CellRangeType.DIMENSION, c.CellRangeType.VALUE], r.type);
        });
      }, n.prototype.updateRangeBordersIfRangeCount = function() {
        this.rangeCount > 0 && (this.updateRangeBorders(), this.refreshHandle());
      }, n.prototype.getRangeBorders = function() {
        var t = this, e = this.beans.gridOptionsWrapper.isEnableRtl(), r = !1, o = !1, i = !1, s = !1, a = this.cellCtrl.getCellPosition().column, l = this.beans, u = l.rangeService, p = l.columnModel, d, f;
        e ? (d = p.getDisplayedColAfter(a), f = p.getDisplayedColBefore(a)) : (d = p.getDisplayedColBefore(a), f = p.getDisplayedColAfter(a));
        var v = u.getCellRanges().filter(function(P) {
          return u.isCellInSpecificRange(t.cellCtrl.getCellPosition(), P);
        });
        d || (s = !0), f || (o = !0);
        for (var y = 0; y < v.length && !(r && o && i && s); y++) {
          var R = v[y], _ = u.getRangeStartRow(R), D = u.getRangeEndRow(R);
          !r && this.beans.rowPositionUtils.sameRow(_, this.cellCtrl.getCellPosition()) && (r = !0), !i && this.beans.rowPositionUtils.sameRow(D, this.cellCtrl.getCellPosition()) && (i = !0), !s && d && R.columns.indexOf(d) < 0 && (s = !0), !o && f && R.columns.indexOf(f) < 0 && (o = !0);
        }
        return { top: r, right: o, bottom: i, left: s };
      }, n.prototype.refreshHandle = function() {
        if (this.beans.rangeService) {
          var t = this.shouldHaveSelectionHandle();
          this.selectionHandle && !t && (this.selectionHandle = this.beans.context.destroyBean(this.selectionHandle)), t && this.addSelectionHandle(), this.cellComp.addOrRemoveCssClass(_f, !!this.selectionHandle);
        }
      }, n.prototype.shouldHaveSelectionHandle = function() {
        var t = this.beans, e = t.gridOptionsWrapper, r = t.rangeService, o = r.getCellRanges(), i = o.length;
        if (this.rangeCount < 1 || i < 1)
          return !1;
        var s = M(o), a = this.cellCtrl.getCellPosition(), l = e.isEnableFillHandle() && !this.cellCtrl.isSuppressFillHandle(), u = e.isEnableRangeHandle(), p = i === 1 && !this.cellCtrl.isEditing() && (l || u);
        if (this.hasChartRange) {
          var d = o[0].type === c.CellRangeType.DIMENSION, f = d && r.isCellInSpecificRange(a, o[0]);
          this.cellComp.addOrRemoveCssClass(Sf, f), p = s.type === c.CellRangeType.VALUE;
        }
        return p && s.endRow != null && r.isContiguousRange(s) && r.isBottomRightCell(s, a);
      }, n.prototype.addSelectionHandle = function() {
        var t = this.beans, e = t.gridOptionsWrapper, r = t.rangeService, o = M(r.getCellRanges()).type, i = e.isEnableFillHandle() && C(o), s = i ? c.SelectionHandleType.FILL : c.SelectionHandleType.RANGE;
        this.selectionHandle && this.selectionHandle.getType() !== s && (this.selectionHandle = this.beans.context.destroyBean(this.selectionHandle)), this.selectionHandle || (this.selectionHandle = this.beans.selectionHandleFactory.createSelectionHandle(s)), this.selectionHandle.refresh(this.cellCtrl);
      }, n.prototype.destroy = function() {
        this.beans.context.destroyBean(this.selectionHandle);
      }, n;
    }()
  );
  var bf = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Ff = (
    /** @class */
    function(n) {
      bf(t, n);
      function t(e, r) {
        var o = n.call(this) || this;
        return o.cellCtrl = e, o.beans = r, o.column = e.getColumn(), o.rowNode = e.getRowNode(), o.setupColSpan(), o.setupRowSpan(), o;
      }
      return t.prototype.setupRowSpan = function() {
        this.rowSpan = this.column.getRowSpan(this.rowNode);
      }, t.prototype.setComp = function(e) {
        this.eGui = e, this.onLeftChanged(), this.onWidthChanged(), this.applyRowSpan();
      }, t.prototype.onDisplayColumnsChanged = function() {
        var e = this.getColSpanningList();
        k(this.colsSpanning, e) || (this.colsSpanning = e, this.onWidthChanged(), this.onLeftChanged());
      }, t.prototype.setupColSpan = function() {
        this.column.getColDef().colSpan != null && (this.colsSpanning = this.getColSpanningList(), this.addManagedListener(this.beans.eventService, m.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayColumnsChanged.bind(this)), this.addManagedListener(this.beans.eventService, m.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onWidthChanged.bind(this)));
      }, t.prototype.onWidthChanged = function() {
        if (this.eGui) {
          var e = this.getCellWidth();
          this.eGui.style.width = e + "px";
        }
      }, t.prototype.getCellWidth = function() {
        return this.colsSpanning ? this.colsSpanning.reduce(function(e, r) {
          return e + r.getActualWidth();
        }, 0) : this.column.getActualWidth();
      }, t.prototype.getColSpanningList = function() {
        var e = this.column.getColSpan(this.rowNode), r = [];
        if (e === 1)
          r.push(this.column);
        else
          for (var o = this.column, i = this.column.getPinned(), s = 0; o && s < e && (r.push(o), o = this.beans.columnModel.getDisplayedColAfter(o), !(!o || C(o) || i !== o.getPinned())); s++)
            ;
        return r;
      }, t.prototype.onLeftChanged = function() {
        if (this.eGui) {
          var e = this.modifyLeftForPrintLayout(this.getCellLeft());
          this.eGui.style.left = e + "px";
        }
      }, t.prototype.getCellLeft = function() {
        var e;
        return this.beans.gridOptionsWrapper.isEnableRtl() && this.colsSpanning ? e = M(this.colsSpanning) : e = this.column, e.getLeft();
      }, t.prototype.modifyLeftForPrintLayout = function(e) {
        if (!this.cellCtrl.isPrintLayout() || this.column.getPinned() === E.PINNED_LEFT)
          return e;
        var r = this.beans.columnModel.getDisplayedColumnsLeftWidth();
        if (this.column.getPinned() === E.PINNED_RIGHT) {
          var o = this.beans.columnModel.getBodyContainerWidth();
          return r + o + (e || 0);
        }
        return r + (e || 0);
      }, t.prototype.applyRowSpan = function() {
        if (this.rowSpan !== 1) {
          var e = this.beans.gridOptionsWrapper.getRowHeightAsNumber(), r = e * this.rowSpan;
          this.eGui.style.height = r + "px", this.eGui.style.zIndex = "1";
        }
      }, t.prototype.destroy = function() {
        n.prototype.destroy.call(this);
      }, t;
    }(H)
  );
  var Lf = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Mf = (
    /** @class */
    function(n) {
      Lf(t, n);
      function t(e, r) {
        var o = n.call(this) || this;
        return o.staticClasses = [], o.cellCtrl = e, o.beans = r, o.column = e.getColumn(), o.rowNode = e.getRowNode(), o;
      }
      return t.prototype.setComp = function(e) {
        this.cellComp = e, this.applyUserStyles(), this.applyCellClassRules(), this.applyClassesFromColDef();
      }, t.prototype.applyCellClassRules = function() {
        var e = this, r = this.column.getColDef(), o = {
          value: this.cellCtrl.getValue(),
          data: this.rowNode.data,
          node: this.rowNode,
          colDef: r,
          rowIndex: this.rowNode.rowIndex,
          api: this.beans.gridOptionsWrapper.getApi(),
          columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
          context: this.beans.gridOptionsWrapper.getContext()
        };
        this.beans.stylingService.processClassRules(r.cellClassRules, o, function(i) {
          return e.cellComp.addOrRemoveCssClass(i, !0);
        }, function(i) {
          return e.cellComp.addOrRemoveCssClass(i, !1);
        });
      }, t.prototype.applyUserStyles = function() {
        var e = this.column.getColDef();
        if (e.cellStyle) {
          var r;
          if (typeof e.cellStyle == "function") {
            var o = {
              column: this.column,
              value: this.cellCtrl.getValue(),
              colDef: e,
              data: this.rowNode.data,
              node: this.rowNode,
              rowIndex: this.rowNode.rowIndex,
              api: this.beans.gridOptionsWrapper.getApi(),
              columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
              context: this.beans.gridOptionsWrapper.getContext()
            }, i = e.cellStyle;
            r = i(o);
          } else
            r = e.cellStyle;
          this.cellComp.setUserStyles(r);
        }
      }, t.prototype.applyClassesFromColDef = function() {
        var e = this, r = this.column.getColDef(), o = {
          value: this.cellCtrl.getValue(),
          data: this.rowNode.data,
          node: this.rowNode,
          colDef: r,
          rowIndex: this.rowNode.rowIndex,
          api: this.beans.gridOptionsWrapper.getApi(),
          columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
          context: this.beans.gridOptionsWrapper.getContext()
        };
        this.staticClasses.length && this.staticClasses.forEach(function(i) {
          return e.cellComp.addOrRemoveCssClass(i, !1);
        }), this.staticClasses = this.beans.stylingService.getStaticCellClasses(r, o), this.staticClasses.length && this.staticClasses.forEach(function(i) {
          return e.cellComp.addOrRemoveCssClass(i, !0);
        });
      }, t.prototype.destroy = function() {
        n.prototype.destroy.call(this);
      }, t;
    }(H)
  );
  var If = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Ls = (
    /** @class */
    function(n) {
      If(t, n);
      function t(e, r) {
        var o = n.call(this) || this;
        return o.ctrl = e, o.beans = r, o;
      }
      return t.prototype.setComp = function(e) {
        this.comp = e, this.setupTooltip();
      }, t.prototype.setupTooltip = function() {
        this.browserTooltips = this.beans.gridOptionsWrapper.isEnableBrowserTooltips(), this.updateTooltipText(), this.browserTooltips ? this.comp.setTitle(this.tooltip != null ? this.tooltip : void 0) : this.createTooltipFeatureIfNeeded();
      }, t.prototype.updateTooltipText = function() {
        this.tooltip = this.ctrl.getTooltipValue();
      }, t.prototype.createTooltipFeatureIfNeeded = function() {
        var e = this;
        if (this.genericTooltipFeature == null) {
          var r = {
            getTooltipParams: function() {
              return e.getTooltipParams();
            },
            getGui: function() {
              return e.ctrl.getGui();
            }
          };
          this.genericTooltipFeature = this.createManagedBean(new _i(r), this.beans.context);
        }
      }, t.prototype.refreshToolTip = function() {
        this.updateTooltipText(), this.browserTooltips && this.comp.setTitle(this.tooltip != null ? this.tooltip : void 0);
      }, t.prototype.getTooltipParams = function() {
        var e = this.ctrl, r = e.getColumn ? e.getColumn() : void 0, o = e.getColDef ? e.getColDef() : void 0, i = e.getRowNode ? e.getRowNode() : void 0;
        return {
          location: e.getLocation(),
          colDef: o,
          column: r,
          rowIndex: e.getRowIndex ? e.getRowIndex() : void 0,
          node: i,
          data: i ? i.data : void 0,
          value: this.getTooltipText(),
          valueFormatted: e.getValueFormatted ? e.getValueFormatted() : void 0
        };
      }, t.prototype.getTooltipText = function() {
        return this.tooltip;
      }, t.prototype.destroy = function() {
        n.prototype.destroy.call(this);
      }, t;
    }(H)
  );
  var pe = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Ms = (
    /** @class */
    function() {
      function n() {
      }
      return n.prototype.postConstruct = function() {
        this.doingMasterDetail = this.gridOptionsWrapper.isMasterDetail(), this.gridOptionsWrapper.isRowModelDefault() && (this.clientSideRowModel = this.rowModel), this.gridOptionsWrapper.isRowModelServerSide() && (this.serverSideRowModel = this.rowModel);
      }, pe([
        h("resizeObserverService")
      ], n.prototype, "resizeObserverService", void 0), pe([
        h("paginationProxy")
      ], n.prototype, "paginationProxy", void 0), pe([
        h("context")
      ], n.prototype, "context", void 0), pe([
        h("columnApi")
      ], n.prototype, "columnApi", void 0), pe([
        h("gridApi")
      ], n.prototype, "gridApi", void 0), pe([
        h("gridOptionsWrapper")
      ], n.prototype, "gridOptionsWrapper", void 0), pe([
        h("expressionService")
      ], n.prototype, "expressionService", void 0), pe([
        h("rowRenderer")
      ], n.prototype, "rowRenderer", void 0), pe([
        h("templateService")
      ], n.prototype, "templateService", void 0), pe([
        h("valueService")
      ], n.prototype, "valueService", void 0), pe([
        h("eventService")
      ], n.prototype, "eventService", void 0), pe([
        h("columnModel")
      ], n.prototype, "columnModel", void 0), pe([
        h("headerNavigationService")
      ], n.prototype, "headerNavigationService", void 0), pe([
        h("navigationService")
      ], n.prototype, "navigationService", void 0), pe([
        h("columnAnimationService")
      ], n.prototype, "columnAnimationService", void 0), pe([
        ve("rangeService")
      ], n.prototype, "rangeService", void 0), pe([
        h("focusService")
      ], n.prototype, "focusService", void 0), pe([
        ve("contextMenuFactory")
      ], n.prototype, "contextMenuFactory", void 0), pe([
        h("popupService")
      ], n.prototype, "popupService", void 0), pe([
        h("valueFormatterService")
      ], n.prototype, "valueFormatterService", void 0), pe([
        h("stylingService")
      ], n.prototype, "stylingService", void 0), pe([
        h("columnHoverService")
      ], n.prototype, "columnHoverService", void 0), pe([
        h("userComponentFactory")
      ], n.prototype, "userComponentFactory", void 0), pe([
        h("userComponentRegistry")
      ], n.prototype, "userComponentRegistry", void 0), pe([
        h("animationFrameService")
      ], n.prototype, "animationFrameService", void 0), pe([
        h("dragAndDropService")
      ], n.prototype, "dragAndDropService", void 0), pe([
        h("sortController")
      ], n.prototype, "sortController", void 0), pe([
        h("filterManager")
      ], n.prototype, "filterManager", void 0), pe([
        h("rowContainerHeightService")
      ], n.prototype, "rowContainerHeightService", void 0), pe([
        h("frameworkOverrides")
      ], n.prototype, "frameworkOverrides", void 0), pe([
        h("cellPositionUtils")
      ], n.prototype, "cellPositionUtils", void 0), pe([
        h("rowPositionUtils")
      ], n.prototype, "rowPositionUtils", void 0), pe([
        h("selectionService")
      ], n.prototype, "selectionService", void 0), pe([
        ve("selectionHandleFactory")
      ], n.prototype, "selectionHandleFactory", void 0), pe([
        h("rowCssClassCalculator")
      ], n.prototype, "rowCssClassCalculator", void 0), pe([
        h("rowModel")
      ], n.prototype, "rowModel", void 0), pe([
        h("ctrlsService")
      ], n.prototype, "ctrlsService", void 0), pe([
        h("ctrlsFactory")
      ], n.prototype, "ctrlsFactory", void 0), pe([
        h("agStackComponentsRegistry")
      ], n.prototype, "agStackComponentsRegistry", void 0), pe([
        h("valueCache")
      ], n.prototype, "valueCache", void 0), pe([
        h("rowNodeEventThrottle")
      ], n.prototype, "rowNodeEventThrottle", void 0), pe([
        B
      ], n.prototype, "postConstruct", null), n = pe([
        j("beans")
      ], n), n;
    }()
  );
  var Nf = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), xf = (
    /** @class */
    function(n) {
      Nf(t, n);
      function t(e, r, o) {
        var i = n.call(this) || this;
        return i.cellCtrl = e, i.beans = r, i.column = o, i;
      }
      return t.prototype.onMouseEvent = function(e, r) {
        if (!_t(r))
          switch (e) {
            case "click":
              this.onCellClicked(r);
              break;
            case "mousedown":
            case "touchstart":
              this.onMouseDown(r);
              break;
            case "dblclick":
              this.onCellDoubleClicked(r);
              break;
            case "mouseout":
              this.onMouseOut(r);
              break;
            case "mouseover":
              this.onMouseOver(r);
              break;
          }
      }, t.prototype.onCellClicked = function(e) {
        if (this.isDoubleClickOnIPad()) {
          this.onCellDoubleClicked(e), e.preventDefault();
          return;
        }
        var r = this.beans, o = r.eventService, i = r.gridOptionsWrapper, s = this.cellCtrl.createEvent(e, m.EVENT_CELL_CLICKED);
        o.dispatchEvent(s);
        var a = this.column.getColDef();
        a.onCellClicked && window.setTimeout(function() {
          return a.onCellClicked(s);
        }, 0);
        var l = (i.isSingleClickEdit() || a.singleClickEdit) && !i.isSuppressClickEdit();
        l && this.cellCtrl.startRowOrCellEdit();
      }, t.prototype.isDoubleClickOnIPad = function() {
        if (!Hr() || _n("dblclick"))
          return !1;
        var e = (/* @__PURE__ */ new Date()).getTime(), r = e - this.lastIPadMouseClickEvent < 200;
        return this.lastIPadMouseClickEvent = e, r;
      }, t.prototype.onCellDoubleClicked = function(e) {
        var r = this.column.getColDef(), o = this.cellCtrl.createEvent(e, m.EVENT_CELL_DOUBLE_CLICKED);
        this.beans.eventService.dispatchEvent(o), typeof r.onCellDoubleClicked == "function" && window.setTimeout(function() {
          return r.onCellDoubleClicked(o);
        }, 0);
        var i = !this.beans.gridOptionsWrapper.isSingleClickEdit() && !this.beans.gridOptionsWrapper.isSuppressClickEdit();
        i && this.cellCtrl.startRowOrCellEdit(null, null, e);
      }, t.prototype.onMouseDown = function(e) {
        var r = e.ctrlKey, o = e.metaKey, i = e.shiftKey, s = e.target, a = this.beans, l = a.eventService, u = a.rangeService;
        if (!this.isRightClickInExistingRange(e)) {
          var p = u && u.getCellRanges().length != 0;
          if (!i || !p) {
            var d = gi() && !this.cellCtrl.isEditing() && !xa(s);
            this.cellCtrl.focusCell(d);
          }
          if (i && p && e.preventDefault(), !this.containsWidget(s)) {
            if (u) {
              var f = this.cellCtrl.getCellPosition();
              if (i)
                u.extendLatestRangeToCell(f);
              else {
                var v = r || o;
                u.setRangeToCell(f, v);
              }
            }
            l.dispatchEvent(this.cellCtrl.createEvent(e, m.EVENT_CELL_MOUSE_DOWN));
          }
        }
      }, t.prototype.isRightClickInExistingRange = function(e) {
        var r = this.beans.rangeService;
        if (r) {
          var o = r.isCellInAnyRange(this.cellCtrl.getCellPosition());
          if (o && e.button === 2)
            return !0;
        }
        return !1;
      }, t.prototype.containsWidget = function(e) {
        return yi(e, "ag-selection-checkbox", 3);
      }, t.prototype.onMouseOut = function(e) {
        if (!this.mouseStayingInsideCell(e)) {
          var r = this.cellCtrl.createEvent(e, m.EVENT_CELL_MOUSE_OUT);
          this.beans.eventService.dispatchEvent(r), this.beans.columnHoverService.clearMouseOver();
        }
      }, t.prototype.onMouseOver = function(e) {
        if (!this.mouseStayingInsideCell(e)) {
          var r = this.cellCtrl.createEvent(e, m.EVENT_CELL_MOUSE_OVER);
          this.beans.eventService.dispatchEvent(r), this.beans.columnHoverService.setMouseOver([this.column]);
        }
      }, t.prototype.mouseStayingInsideCell = function(e) {
        if (!e.target || !e.relatedTarget)
          return !1;
        var r = this.cellCtrl.getGui(), o = r.contains(e.target), i = r.contains(e.relatedTarget);
        return o && i;
      }, t.prototype.destroy = function() {
      }, t;
    }(Ms)
  );
  var Gf = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Hf = (
    /** @class */
    function(n) {
      Gf(t, n);
      function t(e, r, o, i, s) {
        var a = n.call(this) || this;
        return a.cellCtrl = e, a.beans = r, a.rowNode = i, a.rowCtrl = s, a;
      }
      return t.prototype.setComp = function(e) {
        this.eGui = e;
      }, t.prototype.onKeyDown = function(e) {
        var r = e.key;
        switch (r) {
          case N.ENTER:
            this.onEnterKeyDown(e);
            break;
          case N.F2:
            this.onF2KeyDown(e);
            break;
          case N.ESCAPE:
            this.onEscapeKeyDown(e);
            break;
          case N.TAB:
            this.onTabKeyDown(e);
            break;
          case N.BACKSPACE:
          case N.DELETE:
            this.onBackspaceOrDeleteKeyPressed(r, e);
            break;
          case N.DOWN:
          case N.UP:
          case N.RIGHT:
          case N.LEFT:
            this.onNavigationKeyPressed(e, r);
            break;
        }
      }, t.prototype.onNavigationKeyPressed = function(e, r) {
        this.cellCtrl.isEditing() || (e.shiftKey && this.cellCtrl.isRangeSelectionEnabled() ? this.onShiftRangeSelect(e) : this.beans.navigationService.navigateToNextCell(e, r, this.cellCtrl.getCellPosition(), !0), e.preventDefault());
      }, t.prototype.onShiftRangeSelect = function(e) {
        if (this.beans.rangeService) {
          var r = this.beans.rangeService.extendLatestRangeInDirection(e);
          r && this.beans.navigationService.ensureCellVisible(r);
        }
      }, t.prototype.onTabKeyDown = function(e) {
        this.beans.navigationService.onTabKeyDown(this.cellCtrl, e);
      }, t.prototype.onBackspaceOrDeleteKeyPressed = function(e, r) {
        this.cellCtrl.isEditing() || this.cellCtrl.startRowOrCellEdit(e, void 0, r);
      }, t.prototype.onEnterKeyDown = function(e) {
        this.cellCtrl.isEditing() || this.rowCtrl.isEditing() ? this.cellCtrl.stopEditingAndFocus() : this.beans.gridOptionsWrapper.isEnterMovesDown() ? this.beans.navigationService.navigateToNextCell(null, N.DOWN, this.cellCtrl.getCellPosition(), !1) : (this.cellCtrl.startRowOrCellEdit(N.ENTER, void 0, e), this.cellCtrl.isEditing() && e.preventDefault());
      }, t.prototype.onF2KeyDown = function(e) {
        this.cellCtrl.isEditing() || this.cellCtrl.startRowOrCellEdit(N.F2, void 0, e);
      }, t.prototype.onEscapeKeyDown = function(e) {
        this.cellCtrl.isEditing() && (this.cellCtrl.stopRowOrCellEdit(!0), this.cellCtrl.focusCell(!0));
      }, t.prototype.onKeyPress = function(e) {
        var r = e.target, o = r !== this.eGui;
        if (!(o || this.cellCtrl.isEditing())) {
          var i = String.fromCharCode(e.charCode);
          i === " " ? this.onSpaceKeyPressed(e) : pl(e) && (this.cellCtrl.startRowOrCellEdit(null, i, e), e.preventDefault());
        }
      }, t.prototype.onSpaceKeyPressed = function(e) {
        var r = this.beans.gridOptionsWrapper;
        if (!this.cellCtrl.isEditing() && r.isRowSelection()) {
          var o = this.rowNode.isSelected(), i = !o;
          if (i || !r.isSuppressRowDeselection()) {
            var s = this.beans.gridOptionsWrapper.isGroupSelectsFiltered(), a = this.rowNode.setSelectedParams({
              newValue: i,
              rangeSelect: e.shiftKey,
              groupSelectsFiltered: s
            });
            o === void 0 && a === 0 && this.rowNode.setSelectedParams({
              newValue: !1,
              rangeSelect: e.shiftKey,
              groupSelectsFiltered: s
            });
          }
        }
        e.preventDefault();
      }, t.prototype.destroy = function() {
      }, t;
    }(H)
  );
  var Vf = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Wf = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Bf = (
    /** @class */
    function(n) {
      Vf(t, n);
      function t(e, r, o, i) {
        var s = n.call(this, '<div class="ag-drag-handle ag-row-drag" draggable="true"></div>') || this;
        return s.rowNode = e, s.column = r, s.beans = o, s.eCell = i, s;
      }
      return t.prototype.postConstruct = function() {
        var e = this.getGui();
        e.appendChild(be("rowDrag", this.beans.gridOptionsWrapper, null)), this.addGuiEventListener("mousedown", function(r) {
          r.stopPropagation();
        }), this.addDragSource(), this.checkVisibility();
      }, t.prototype.addDragSource = function() {
        this.addGuiEventListener("dragstart", this.onDragStart.bind(this));
      }, t.prototype.onDragStart = function(e) {
        var r = this, o = this.column.getColDef().dndSourceOnRowDrag;
        e.dataTransfer.setDragImage(this.eCell, 0, 0);
        var i = function() {
          try {
            var a = JSON.stringify(r.rowNode.data);
            e.dataTransfer.setData("application/json", a), e.dataTransfer.setData("text/plain", a);
          } catch {
          }
        };
        if (o) {
          var s = {
            rowNode: this.rowNode,
            dragEvent: e,
            api: this.gridOptionsWrapper.getApi(),
            columnApi: this.gridOptionsWrapper.getColumnApi(),
            context: this.gridOptionsWrapper.getContext()
          };
          o(s);
        } else
          i();
      }, t.prototype.checkVisibility = function() {
        var e = this.column.isDndSource(this.rowNode);
        this.setDisplayed(e);
      }, Wf([
        B
      ], t.prototype, "postConstruct", null), t;
    }(le)
  );
  var kf = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Hi = function() {
    return Hi = Object.assign || function(n) {
      for (var t, e = 1, r = arguments.length; e < r; e++) {
        t = arguments[e];
        for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
      }
      return n;
    }, Hi.apply(this, arguments);
  }, Uf = "ag-cell", jf = "ag-cell-auto-height", zf = "ag-cell-normal-height", $f = "ag-cell-focus", Kf = "ag-cell-first-right-pinned", Yf = "ag-cell-last-left-pinned", eu = "ag-cell-not-inline-editing", qf = "ag-cell-inline-editing", Xf = "ag-cell-popup-editing", Qf = "ag-column-hover", Zf = "ag-cell-wrap-text", Jf = 0, er = (
    /** @class */
    function(n) {
      kf(t, n);
      function t(e, r, o, i) {
        var s = n.call(this) || this;
        return s.suppressRefreshCell = !1, s.column = e, s.rowNode = r, s.beans = o, s.rowCtrl = i, s.instanceId = e.getId() + "-" + Jf++, s.createCellPosition(), s.addFeatures(), s;
      }
      return t.prototype.addFeatures = function() {
        var e = this;
        this.cellPositionFeature = new Ff(this, this.beans), this.addDestroyFunc(function() {
          return e.cellPositionFeature.destroy();
        }), this.cellCustomStyleFeature = new Mf(this, this.beans), this.addDestroyFunc(function() {
          return e.cellCustomStyleFeature.destroy();
        }), this.cellMouseListenerFeature = new xf(this, this.beans, this.column), this.addDestroyFunc(function() {
          return e.cellMouseListenerFeature.destroy();
        }), this.cellKeyboardListenerFeature = new Hf(this, this.beans, this.column, this.rowNode, this.rowCtrl), this.addDestroyFunc(function() {
          return e.cellKeyboardListenerFeature.destroy();
        });
        var r = this.beans.rangeService && this.beans.gridOptionsWrapper.isEnableRangeSelection();
        r && (this.cellRangeFeature = new Df(this.beans, this), this.addDestroyFunc(function() {
          return e.cellRangeFeature.destroy();
        })), this.addTooltipFeature();
      }, t.prototype.addTooltipFeature = function() {
        var e = this, r = function() {
          var i = e.column.getColDef(), s = e.rowNode.data;
          if (i.tooltipField && g(s))
            return qe(s, i.tooltipField, e.column.isTooltipFieldContainsDots());
          var a = i.tooltipValueGetter;
          return a ? a({
            location: "cell",
            api: e.beans.gridOptionsWrapper.getApi(),
            columnApi: e.beans.gridOptionsWrapper.getColumnApi(),
            context: e.beans.gridOptionsWrapper.getContext(),
            colDef: e.column.getColDef(),
            column: e.column,
            rowIndex: e.cellPosition.rowIndex,
            node: e.rowNode,
            data: e.rowNode.data,
            value: e.value,
            valueFormatted: e.valueFormatted
          }) : null;
        }, o = {
          getColumn: function() {
            return e.column;
          },
          getColDef: function() {
            return e.column.getColDef();
          },
          getRowIndex: function() {
            return e.cellPosition.rowIndex;
          },
          getRowNode: function() {
            return e.rowNode;
          },
          getGui: function() {
            return e.getGui();
          },
          getLocation: function() {
            return "cell";
          },
          getTooltipValue: r,
          // this makes no sense, why is the cell formatted value passed to the tooltip???
          getValueFormatted: function() {
            return e.valueFormatted;
          }
        };
        this.tooltipFeature = new Ls(o, this.beans), this.addDestroyFunc(function() {
          return e.tooltipFeature.destroy();
        });
      }, t.prototype.setComp = function(e, r, o, i, s) {
        this.cellComp = e, this.gow = this.beans.gridOptionsWrapper, this.eGui = r, this.eCellWrapper = o, this.printLayout = i, this.updateAndFormatValue(!0), this.addDomData(), this.onCellFocused(), this.applyStaticCssClasses(), this.setWrapText(), this.onFirstRightPinnedChanged(), this.onLastLeftPinnedChanged(), this.onColumnHover(), this.setupControlComps(), this.setupAutoHeight(), this.setAriaColIndex(), this.gow.isSuppressCellFocus() || this.cellComp.setTabIndex(-1);
        var a = Ot(this.column.getId());
        this.cellComp.setColId(a), this.cellComp.setRole("gridcell"), this.cellPositionFeature.setComp(r), this.cellCustomStyleFeature.setComp(e), this.tooltipFeature.setComp(e), this.cellKeyboardListenerFeature.setComp(this.eGui), this.cellRangeFeature && this.cellRangeFeature.setComp(e, r), s && this.isCellEditable() ? this.startEditing() : this.showValue();
      }, t.prototype.setupAutoHeight = function() {
        var e = this;
        if (this.column.isAutoHeight()) {
          var r = this.eCellWrapper, o = r.parentElement, i = this.beans.gridOptionsWrapper.getRowHeightForNode(this.rowNode).height, s = function(u) {
            if (!e.editing && e.isAlive()) {
              var p = Wr(o), d = p.paddingTop, f = p.paddingBottom, v = r.offsetHeight, y = v + d + f;
              if (u < 5) {
                var R = e.beans.gridOptionsWrapper.getDocument(), _ = !R || !R.contains(r), D = y == 0;
                if (_ || D) {
                  e.beans.frameworkOverrides.setTimeout(function() {
                    return s(u + 1);
                  }, 0);
                  return;
                }
              }
              var P = Math.max(y, i);
              e.rowNode.setRowAutoHeight(P, e.column);
            }
          }, a = function() {
            return s(0);
          };
          a();
          var l = this.beans.resizeObserverService.observeResize(r, a);
          this.addDestroyFunc(function() {
            l(), e.rowNode.setRowAutoHeight(void 0, e.column);
          });
        }
      }, t.prototype.getInstanceId = function() {
        return this.instanceId;
      }, t.prototype.showValue = function(e) {
        e === void 0 && (e = !1);
        var r = this.valueFormatted != null ? this.valueFormatted : this.value, o = this.createCellRendererParams(), i = this.beans.userComponentFactory.getCellRendererDetails(this.column.getColDef(), o);
        this.cellComp.setRenderDetails(i, r, e), this.refreshHandle();
      }, t.prototype.setupControlComps = function() {
        var e = this.column.getColDef();
        this.includeSelection = this.isIncludeControl(e.checkboxSelection), this.includeRowDrag = this.isIncludeControl(e.rowDrag), this.includeDndSource = this.isIncludeControl(e.dndSource), this.cellComp.setIncludeSelection(this.includeSelection), this.cellComp.setIncludeDndSource(this.includeDndSource), this.cellComp.setIncludeRowDrag(this.includeRowDrag);
      }, t.prototype.isForceWrapper = function() {
        var e = this.beans.gridOptionsWrapper.isEnableCellTextSelection() || this.column.isAutoHeight();
        return e;
      }, t.prototype.isIncludeControl = function(e) {
        var r = this.rowNode.rowPinned != null, o = typeof e == "function", i = r ? !1 : o || e === !0;
        return i;
      }, t.prototype.refreshShouldDestroy = function() {
        var e = this.column.getColDef(), r = this.includeSelection != this.isIncludeControl(e.checkboxSelection), o = this.includeRowDrag != this.isIncludeControl(e.rowDrag), i = this.includeDndSource != this.isIncludeControl(e.dndSource);
        return r || o || i;
      }, t.prototype.startEditing = function(e, r, o, i) {
        e === void 0 && (e = null), r === void 0 && (r = null), o === void 0 && (o = !1), i === void 0 && (i = null);
        var s, a;
        if (!(!this.isCellEditable() || this.editing)) {
          var l = this.createCellEditorParams(e, r, o), u = this.column.getColDef(), p = this.beans.userComponentFactory.getCellEditorDetails(u, l), d = ((s = p) === null || s === void 0 ? void 0 : s.popupFromSelector) != null ? p.popupFromSelector : !!u.cellEditorPopup, f = ((a = p) === null || a === void 0 ? void 0 : a.popupPositionFromSelector) != null ? p.popupPositionFromSelector : u.cellEditorPopupPosition;
          this.setEditing(!0, d), this.cellComp.setEditDetails(p, d, f);
          var v = this.createEvent(i, m.EVENT_CELL_EDITING_STARTED);
          this.beans.eventService.dispatchEvent(v);
        }
      }, t.prototype.setEditing = function(e, r) {
        r === void 0 && (r = !1), this.editing !== e && (this.editing = e, this.editingInPopup = r, this.setInlineEditingClass());
      }, t.prototype.stopRowOrCellEdit = function(e) {
        e === void 0 && (e = !1), this.beans.gridOptionsWrapper.isFullRowEdit() ? this.rowCtrl.stopRowEditing(e) : this.stopEditing(e);
      }, t.prototype.onPopupEditorClosed = function() {
        this.isEditing() && this.stopEditingAndFocus();
      }, t.prototype.takeValueFromCellEditor = function(e) {
        var r = { newValueExists: !1 };
        if (e)
          return r;
        var o = this.cellComp.getCellEditor();
        if (!o)
          return r;
        var i = o.isCancelAfterEnd && o.isCancelAfterEnd();
        if (i)
          return r;
        var s = o.getValue();
        return {
          newValue: s,
          newValueExists: !0
        };
      }, t.prototype.saveNewValue = function(e, r) {
        if (r === e)
          return !1;
        if (this.beans.gridOptionsWrapper.isReadOnlyEdit())
          return this.dispatchEventForSaveValueReadOnly(e, r), !1;
        this.suppressRefreshCell = !0;
        var o = this.rowNode.setDataValue(this.column, r);
        return this.suppressRefreshCell = !1, o;
      }, t.prototype.dispatchEventForSaveValueReadOnly = function(e, r) {
        var o = this.rowNode, i = {
          type: m.EVENT_CELL_EDIT_REQUEST,
          event: null,
          rowIndex: o.rowIndex,
          rowPinned: o.rowPinned,
          column: this.column,
          api: this.beans.gridApi,
          columnApi: this.beans.columnApi,
          colDef: this.column.getColDef(),
          context: this.beans.gridOptionsWrapper.getContext(),
          data: o.data,
          node: o,
          oldValue: e,
          newValue: r,
          value: r,
          source: void 0
        };
        this.beans.eventService.dispatchEvent(i);
      }, t.prototype.stopEditing = function(e) {
        if (e === void 0 && (e = !1), !this.editing)
          return !1;
        var r = this.takeValueFromCellEditor(e), o = r.newValue, i = r.newValueExists, s = this.getValueFromValueService(), a = !1;
        return i && (a = this.saveNewValue(s, o)), this.setEditing(!1), this.cellComp.setEditDetails(), this.updateAndFormatValue(), this.refreshCell({ forceRefresh: !0, suppressFlash: !0 }), this.dispatchEditingStoppedEvent(s, o), a;
      }, t.prototype.dispatchEditingStoppedEvent = function(e, r) {
        var o = Hi(Hi({}, this.createEvent(null, m.EVENT_CELL_EDITING_STOPPED)), {
          oldValue: e,
          newValue: r
        });
        this.beans.eventService.dispatchEvent(o);
      }, t.prototype.setInlineEditingClass = function() {
        if (this.isAlive()) {
          var e = this.editing && !this.editingInPopup, r = this.editing && this.editingInPopup;
          this.cellComp.addOrRemoveCssClass(qf, e), this.cellComp.addOrRemoveCssClass(eu, !e), this.cellComp.addOrRemoveCssClass(Xf, r), this.rowCtrl.setInlineEditingCss(this.editing);
        }
      }, t.prototype.hackSayEditingInPopup = function() {
        this.editingInPopup || (this.editingInPopup = !0, this.setInlineEditingClass());
      }, t.prototype.createCellEditorParams = function(e, r, o) {
        var i = {
          value: this.getValueFromValueService(),
          key: e,
          eventKey: e,
          charPress: r,
          column: this.column,
          colDef: this.column.getColDef(),
          rowIndex: this.getCellPosition().rowIndex,
          node: this.rowNode,
          data: this.rowNode.data,
          api: this.beans.gridOptionsWrapper.getApi(),
          cellStartedEdit: o,
          columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
          context: this.beans.gridOptionsWrapper.getContext(),
          onKeyDown: this.onKeyDown.bind(this),
          stopEditing: this.stopEditingAndFocus.bind(this),
          eGridCell: this.getGui(),
          parseValue: this.parseValue.bind(this),
          formatValue: this.formatValue.bind(this)
        };
        return i;
      }, t.prototype.createCellRendererParams = function() {
        var e = this, r = function(i, s) {
          console.warn("AG Grid: since AG Grid v26, params.addRowCompListener() is deprecated. If you need this functionality, please contact AG Grid support and advise why so that we can revert with an appropriate workaround, as we dont have any valid use cases for it. This method was originally provided as a work around to know when cells were destroyed in AG Grid before custom Cell Renderers could be provided."), e.rowCtrl.addEventListener(i, s);
        }, o = {
          value: this.value,
          valueFormatted: this.valueFormatted,
          getValue: this.getValueFromValueService.bind(this),
          setValue: function(i) {
            return e.beans.valueService.setValue(e.rowNode, e.column, i);
          },
          formatValue: this.formatValue.bind(this),
          data: this.rowNode.data,
          node: this.rowNode,
          colDef: this.column.getColDef(),
          column: this.column,
          rowIndex: this.getCellPosition().rowIndex,
          api: this.beans.gridOptionsWrapper.getApi(),
          columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
          context: this.beans.gridOptionsWrapper.getContext(),
          refreshCell: this.refreshCell.bind(this),
          eGridCell: this.getGui(),
          eParentOfValue: this.cellComp.getParentOfValue(),
          registerRowDragger: function(i, s, a, l) {
            return e.registerRowDragger(i, s, l);
          },
          // this function is not documented anywhere, so we could drop it
          // it was in the olden days to allow user to register for when rendered
          // row was removed (the row comp was removed), however now that the user
          // can provide components for cells, the destroy method gets call when this
          // happens so no longer need to fire event.
          addRowCompListener: r
        };
        return o;
      }, t.prototype.parseValue = function(e) {
        var r = this.column.getColDef(), o = {
          node: this.rowNode,
          data: this.rowNode.data,
          oldValue: this.getValue(),
          newValue: e,
          colDef: r,
          column: this.column,
          api: this.beans.gridOptionsWrapper.getApi(),
          columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
          context: this.beans.gridOptionsWrapper.getContext()
        }, i = r.valueParser;
        return g(i) ? this.beans.expressionService.evaluate(i, o) : e;
      }, t.prototype.setFocusOutOnEditor = function() {
        if (this.editing) {
          var e = this.cellComp.getCellEditor();
          e && e.focusOut && e.focusOut();
        }
      }, t.prototype.setFocusInOnEditor = function() {
        if (this.editing) {
          var e = this.cellComp.getCellEditor();
          e && e.focusIn ? e.focusIn() : this.focusCell(!0);
        }
      }, t.prototype.onCellChanged = function(e) {
        if (this.cellComp) {
          var r = e.column === this.column;
          r && this.refreshCell({});
        }
      }, t.prototype.refreshCell = function(e) {
        if (!(this.suppressRefreshCell || this.editing) && this.cellComp) {
          var r = this.column.getColDef(), o = e != null && !!e.newData, i = e != null && !!e.suppressFlash || !!r.suppressCellFlash, s = r.field == null && r.valueGetter == null && r.showRowGroup == null, a = e && e.forceRefresh || s || o, l = this.updateAndFormatValue(), u = a || l;
          if (u) {
            this.showValue(o);
            var p = this.beans.filterManager.isSuppressFlashingCellsBecauseFiltering(), d = !i && !p && (this.beans.gridOptionsWrapper.isEnableCellChangeFlash() || r.enableCellChangeFlash);
            d && this.flashCell(), this.cellCustomStyleFeature.applyUserStyles(), this.cellCustomStyleFeature.applyClassesFromColDef();
          }
          this.refreshToolTip(), this.cellCustomStyleFeature.applyCellClassRules();
        }
      }, t.prototype.stopEditingAndFocus = function(e) {
        e === void 0 && (e = !1), this.stopRowOrCellEdit(), this.focusCell(!0), e || this.navigateAfterEdit();
      }, t.prototype.navigateAfterEdit = function() {
        var e = this.beans.gridOptionsWrapper.isFullRowEdit();
        if (!e) {
          var r = this.beans.gridOptionsWrapper.isEnterMovesDownAfterEdit();
          r && this.beans.navigationService.navigateToNextCell(null, N.DOWN, this.getCellPosition(), !1);
        }
      }, t.prototype.flashCell = function(e) {
        var r = e && e.flashDelay, o = e && e.fadeDelay;
        this.animateCell("data-changed", r, o);
      }, t.prototype.animateCell = function(e, r, o) {
        var i = this, s = "ag-cell-" + e, a = "ag-cell-" + e + "-animation", l = this.beans.gridOptionsWrapper;
        r || (r = l.getCellFlashDelay()), g(o) || (o = l.getCellFadeDelay()), this.cellComp.addOrRemoveCssClass(s, !0), this.cellComp.addOrRemoveCssClass(a, !1), window.setTimeout(function() {
          i.cellComp.addOrRemoveCssClass(s, !1), i.cellComp.addOrRemoveCssClass(a, !0), i.eGui.style.transition = "background-color " + o + "ms", window.setTimeout(function() {
            i.cellComp.addOrRemoveCssClass(a, !1), i.eGui.style.transition = "";
          }, o);
        }, r);
      }, t.prototype.onFlashCells = function(e) {
        if (this.cellComp) {
          var r = this.beans.cellPositionUtils.createId(this.getCellPosition()), o = e.cells[r];
          o && this.animateCell("highlight");
        }
      }, t.prototype.isCellEditable = function() {
        return this.column.isCellEditable(this.rowNode);
      }, t.prototype.isSuppressFillHandle = function() {
        return this.column.isSuppressFillHandle();
      }, t.prototype.formatValue = function(e) {
        var r = this.callValueFormatter(e);
        return r ?? e;
      }, t.prototype.callValueFormatter = function(e) {
        return this.beans.valueFormatterService.formatValue(this.column, this.rowNode, e);
      }, t.prototype.updateAndFormatValue = function(e) {
        e === void 0 && (e = !1);
        var r = this.value, o = this.valueFormatted;
        this.value = this.getValueFromValueService(), this.valueFormatted = this.callValueFormatter(this.value);
        var i = e ? !0 : !this.valuesAreEqual(r, this.value) || this.valueFormatted != o;
        return i;
      }, t.prototype.valuesAreEqual = function(e, r) {
        var o = this.column.getColDef();
        return o.equals ? o.equals(e, r) : e === r;
      }, t.prototype.getComp = function() {
        return this.cellComp;
      }, t.prototype.getValueFromValueService = function() {
        var e = this.rowNode.leafGroup && this.beans.columnModel.isPivotMode(), r = this.rowNode.group && this.rowNode.expanded && !this.rowNode.footer && !e, o = this.beans.gridOptionsWrapper.isGroupIncludeFooter(), i = this.beans.gridOptionsWrapper.isGroupSuppressBlankHeader(), s = r && o && !i, a = this.beans.valueService.getValue(this.column, this.rowNode, !1, s);
        return a;
      }, t.prototype.getValue = function() {
        return this.value;
      }, t.prototype.getValueFormatted = function() {
        return this.valueFormatted;
      }, t.prototype.addDomData = function() {
        var e = this, r = this.getGui();
        this.beans.gridOptionsWrapper.setDomData(r, t.DOM_DATA_KEY_CELL_CTRL, this), this.addDestroyFunc(function() {
          return e.beans.gridOptionsWrapper.setDomData(r, t.DOM_DATA_KEY_CELL_CTRL, null);
        });
      }, t.prototype.createEvent = function(e, r) {
        var o = {
          type: r,
          node: this.rowNode,
          data: this.rowNode.data,
          value: this.value,
          column: this.column,
          colDef: this.column.getColDef(),
          context: this.beans.gridOptionsWrapper.getContext(),
          api: this.beans.gridApi,
          columnApi: this.beans.columnApi,
          rowPinned: this.rowNode.rowPinned,
          event: e,
          rowIndex: this.rowNode.rowIndex
        };
        return o;
      }, t.prototype.onKeyPress = function(e) {
        this.cellKeyboardListenerFeature.onKeyPress(e);
      }, t.prototype.onKeyDown = function(e) {
        this.cellKeyboardListenerFeature.onKeyDown(e);
      }, t.prototype.onMouseEvent = function(e, r) {
        this.cellMouseListenerFeature.onMouseEvent(e, r);
      }, t.prototype.getGui = function() {
        return this.eGui;
      }, t.prototype.refreshToolTip = function() {
        this.tooltipFeature.refreshToolTip();
      }, t.prototype.getColSpanningList = function() {
        return this.cellPositionFeature.getColSpanningList();
      }, t.prototype.onLeftChanged = function() {
        this.cellComp && this.cellPositionFeature.onLeftChanged();
      }, t.prototype.onDisplayedColumnsChanged = function() {
        this.eGui && this.setAriaColIndex();
      }, t.prototype.setAriaColIndex = function() {
        var e = this.beans.columnModel.getAriaColumnIndex(this.column);
        rs(this.getGui(), e);
      }, t.prototype.isSuppressNavigable = function() {
        return this.column.isSuppressNavigable(this.rowNode);
      }, t.prototype.onWidthChanged = function() {
        return this.cellPositionFeature.onWidthChanged();
      }, t.prototype.getColumn = function() {
        return this.column;
      }, t.prototype.getRowNode = function() {
        return this.rowNode;
      }, t.prototype.getBeans = function() {
        return this.beans;
      }, t.prototype.isPrintLayout = function() {
        return this.printLayout;
      }, t.prototype.appendChild = function(e) {
        this.eGui.appendChild(e);
      }, t.prototype.refreshHandle = function() {
        this.editing || this.cellRangeFeature && this.cellRangeFeature.refreshHandle();
      }, t.prototype.getCellPosition = function() {
        return this.cellPosition;
      }, t.prototype.isEditing = function() {
        return this.editing;
      }, t.prototype.startRowOrCellEdit = function(e, r, o) {
        o === void 0 && (o = null), this.beans.gridOptionsWrapper.isFullRowEdit() ? this.rowCtrl.startRowEditing(e, r, this) : this.startEditing(e, r, !0, o);
      }, t.prototype.getRowCtrl = function() {
        return this.rowCtrl;
      }, t.prototype.getRowPosition = function() {
        return {
          rowIndex: this.cellPosition.rowIndex,
          rowPinned: this.cellPosition.rowPinned
        };
      }, t.prototype.updateRangeBordersIfRangeCount = function() {
        this.cellComp && this.cellRangeFeature && this.cellRangeFeature.updateRangeBordersIfRangeCount();
      }, t.prototype.onRangeSelectionChanged = function() {
        this.cellComp && this.cellRangeFeature && this.cellRangeFeature.onRangeSelectionChanged();
      }, t.prototype.isRangeSelectionEnabled = function() {
        return this.cellRangeFeature != null;
      }, t.prototype.focusCell = function(e) {
        e === void 0 && (e = !1), this.beans.focusService.setFocusedCell(this.getCellPosition().rowIndex, this.column, this.rowNode.rowPinned, e);
      }, t.prototype.onRowIndexChanged = function() {
        this.createCellPosition(), this.onCellFocused(), this.cellRangeFeature && this.cellRangeFeature.onRangeSelectionChanged();
      }, t.prototype.onFirstRightPinnedChanged = function() {
        if (this.cellComp) {
          var e = this.column.isFirstRightPinned();
          this.cellComp.addOrRemoveCssClass(Kf, e);
        }
      }, t.prototype.onLastLeftPinnedChanged = function() {
        if (this.cellComp) {
          var e = this.column.isLastLeftPinned();
          this.cellComp.addOrRemoveCssClass(Yf, e);
        }
      }, t.prototype.onCellFocused = function(e) {
        if (!(!this.cellComp || this.gow.isSuppressCellFocus())) {
          var r = this.beans.focusService.isCellFocused(this.cellPosition);
          if (this.cellComp.addOrRemoveCssClass($f, r), r && e && e.forceBrowserFocus) {
            var o = this.cellComp.getFocusableElement();
            o.focus();
          }
          var i = this.beans.gridOptionsWrapper.isFullRowEdit();
          !r && !i && this.editing && this.stopRowOrCellEdit();
        }
      }, t.prototype.createCellPosition = function() {
        this.cellPosition = {
          rowIndex: this.rowNode.rowIndex,
          rowPinned: w(this.rowNode.rowPinned),
          column: this.column
        };
      }, t.prototype.applyStaticCssClasses = function() {
        this.cellComp.addOrRemoveCssClass(Uf, !0), this.cellComp.addOrRemoveCssClass(eu, !0);
        var e = this.column.isAutoHeight() == !0;
        this.cellComp.addOrRemoveCssClass(jf, e), this.cellComp.addOrRemoveCssClass(zf, !e);
      }, t.prototype.onColumnHover = function() {
        if (this.cellComp && this.beans.gridOptionsWrapper.isColumnHoverHighlight()) {
          var e = this.beans.columnHoverService.isHovered(this.column);
          this.cellComp.addOrRemoveCssClass(Qf, e);
        }
      }, t.prototype.onNewColumnsLoaded = function() {
        this.cellComp && (this.setWrapText(), this.editing || this.refreshCell({ forceRefresh: !0, suppressFlash: !0 }));
      }, t.prototype.setWrapText = function() {
        var e = this.column.getColDef().wrapText == !0;
        this.cellComp.addOrRemoveCssClass(Zf, e);
      }, t.prototype.dispatchCellContextMenuEvent = function(e) {
        var r = this.column.getColDef(), o = this.createEvent(e, m.EVENT_CELL_CONTEXT_MENU);
        this.beans.eventService.dispatchEvent(o), r.onCellContextMenu && window.setTimeout(function() {
          return r.onCellContextMenu(o);
        }, 0);
      }, t.prototype.getCellRenderer = function() {
        return this.cellComp ? this.cellComp.getCellRenderer() : null;
      }, t.prototype.getCellEditor = function() {
        return this.cellComp ? this.cellComp.getCellEditor() : null;
      }, t.prototype.destroy = function() {
        n.prototype.destroy.call(this);
      }, t.prototype.createSelectionCheckbox = function() {
        var e = new _s();
        return this.beans.context.createBean(e), e.init({ rowNode: this.rowNode, column: this.column }), e;
      }, t.prototype.createDndSource = function() {
        var e = new Bf(this.rowNode, this.column, this.beans, this.eGui);
        return this.beans.context.createBean(e), e;
      }, t.prototype.registerRowDragger = function(e, r, o) {
        var i = this;
        if (this.customRowDragComp) {
          this.customRowDragComp.setDragElement(e, r);
          return;
        }
        var s = this.createRowDragComp(e, r, o);
        s && (this.customRowDragComp = s, this.addDestroyFunc(function() {
          return i.beans.context.destroyBean(s);
        }));
      }, t.prototype.createRowDragComp = function(e, r, o) {
        var i = this, s = this.beans.gridOptionsWrapper.isPagination(), a = this.beans.gridOptionsWrapper.isRowDragManaged(), l = this.beans.gridOptionsWrapper.isRowModelDefault();
        if (a) {
          if (!l) {
            me(function() {
              return console.warn("AG Grid: managed row dragging is only allowed in the Client Side Row Model");
            }, "CellComp.addRowDragging");
            return;
          }
          if (s) {
            me(function() {
              return console.warn("AG Grid: managed row dragging is not possible when doing pagination");
            }, "CellComp.addRowDragging");
            return;
          }
        }
        var u = new Li(function() {
          return i.value;
        }, this.rowNode, this.column, e, r, o);
        return this.beans.context.createBean(u), u;
      }, t.DOM_DATA_KEY_CELL_CTRL = "cellCtrl", t;
    }(H)
  );
  var eg = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), tg = function(n, t) {
    var e = typeof Symbol == "function" && n[Symbol.iterator];
    if (!e) return n;
    var r = e.call(n), o, i = [], s;
    try {
      for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
    } catch (a) {
      s = { error: a };
    } finally {
      try {
        o && !o.done && (e = r.return) && e.call(r);
      } finally {
        if (s) throw s.error;
      }
    }
    return i;
  }, rg = function() {
    for (var n = [], t = 0; t < arguments.length; t++) n = n.concat(tg(arguments[t]));
    return n;
  }, Je;
  (function(n) {
    n.Normal = "Normal", n.FullWidth = "FullWidth", n.FullWidthLoading = "FullWidthLoading", n.FullWidthGroup = "FullWidthGroup", n.FullWidthDetail = "FullWidthDetail";
  })(Je || (Je = {}));
  var og = 0, tr = (
    /** @class */
    function(n) {
      eg(t, n);
      function t(e, r, o, i, s) {
        var a = n.call(this) || this;
        return a.allRowGuis = [], a.active = !0, a.centerCellCtrls = { list: [], map: {} }, a.leftCellCtrls = { list: [], map: {} }, a.rightCellCtrls = { list: [], map: {} }, a.lastMouseDownOnDragger = !1, a.updateColumnListsPending = !1, a.beans = r, a.rowNode = e, a.paginationPage = a.beans.paginationProxy.getCurrentPage(), a.useAnimationFrameForCreate = i, a.printLayout = s, a.instanceId = e.id + "-" + og++, a.setAnimateFlags(o), a.rowFocused = a.beans.focusService.isRowFocused(a.rowNode.rowIndex, a.rowNode.rowPinned), a.rowLevel = a.beans.rowCssClassCalculator.calculateRowLevel(a.rowNode), a.setRowType(), a.addListeners(), a.setInitialRowTop(), a;
      }
      return t.prototype.getBeans = function() {
        return this.beans;
      }, t.prototype.getInstanceId = function() {
        return this.instanceId;
      }, t.prototype.setComp = function(e, r, o) {
        var i = { rowComp: e, element: r, containerType: o };
        this.allRowGuis.push(i), o === c.RowContainerType.LEFT ? this.leftGui = i : o === c.RowContainerType.RIGHT ? this.rightGui = i : o === c.RowContainerType.FULL_WIDTH ? this.fullWidthGui = i : this.centerGui = i;
        var s = this.leftGui != null && this.rightGui != null && this.centerGui != null, a = this.fullWidthGui != null;
        (s || a) && this.initialiseRowComps();
      }, t.prototype.isCacheable = function() {
        return this.rowType === Je.FullWidthDetail && this.beans.gridOptionsWrapper.isKeepDetailRows();
      }, t.prototype.setCached = function(e) {
        var r = e ? "none" : "";
        this.allRowGuis.forEach(function(o) {
          return o.element.style.display = r;
        });
      }, t.prototype.initialiseRowComps = function() {
        var e = this, r = this.beans.gridOptionsWrapper;
        this.onRowHeightChanged(), this.updateRowIndexes(), this.setFocusedClasses(), this.setStylesFromGridOptions(), r.isRowSelection() && this.rowNode.selectable && this.onRowSelected(), this.updateColumnLists(!this.useAnimationFrameForCreate), this.slideRowIn && yo(this.onTopChanged.bind(this)), this.fadeRowIn && yo(function() {
          e.allRowGuis.forEach(function(a) {
            return a.rowComp.addOrRemoveCssClass("ag-opacity-zero", !1);
          });
        });
        var o = this.getRowBusinessKey(), i = Ot(this.rowNode.id), s = Ot(o);
        this.allRowGuis.forEach(function(a) {
          var l = a.rowComp;
          l.setRole("row");
          var u = e.getInitialRowClasses(a.containerType);
          u.forEach(function(p) {
            return l.addOrRemoveCssClass(p, !0);
          }), e.rowNode.group && tt(a.element, e.rowNode.expanded == !0), i != null && l.setRowId(i), s != null && l.setRowBusinessKey(s), e.isFullWidth() && !e.beans.gridOptionsWrapper.isSuppressCellFocus() && l.setTabIndex(-1), r.setDomData(a.element, t.DOM_DATA_KEY_ROW_CTRL, e), e.addDestroyFunc(function() {
            return r.setDomData(a.element, t.DOM_DATA_KEY_ROW_CTRL, null);
          }), e.useAnimationFrameForCreate ? e.beans.animationFrameService.createTask(e.addHoverFunctionality.bind(e, a.element), e.rowNode.rowIndex, "createTasksP2") : e.addHoverFunctionality(a.element), e.isFullWidth() && e.setupFullWidth(a), r.isRowDragEntireRow() && e.addRowDraggerToRow(a), e.useAnimationFrameForCreate && e.beans.animationFrameService.addDestroyTask(function() {
            e.isAlive() && a.rowComp.addOrRemoveCssClass("ag-after-created", !0);
          });
        }), this.executeProcessRowPostCreateFunc();
      }, t.prototype.addRowDraggerToRow = function(e) {
        var r = this.beans.gridOptionsWrapper;
        if (r.isEnableRangeSelection()) {
          me(function() {
            console.warn("AG Grid: Setting `rowDragEntireRow: true` in the gridOptions doesn't work with `enableRangeSelection: true`");
          }, "rowDragAndRangeSelectionEnabled");
          return;
        }
        var o = new Li(function() {
          return "1 row";
        }, this.rowNode, void 0, e.element, void 0, !0);
        this.createManagedBean(o, this.beans.context);
      }, t.prototype.setupFullWidth = function(e) {
        var r = this.getPinnedForContainer(e.containerType), o = this.createFullWidthParams(e.element, r), i = oe.isRegistered(c.ModuleNames.MasterDetailModule);
        if (this.rowType == Je.FullWidthDetail && !i) {
          oe.isPackageBased() ? console.warn("AG Grid: cell renderer 'agDetailCellRenderer' (for master detail) not found. Can only be used with ag-grid-enterprise package.") : console.warn("AG Grid: cell renderer 'agDetailCellRenderer' (for master detail) not found. Can only be used with AG Grid Enterprise Module " + c.ModuleNames.MasterDetailModule);
          return;
        }
        var s;
        switch (this.rowType) {
          case Je.FullWidthDetail:
            s = this.beans.userComponentFactory.getFullWidthDetailCellRendererDetails(o);
            break;
          case Je.FullWidthGroup:
            s = this.beans.userComponentFactory.getFullWidthGroupCellRendererDetails(o);
            break;
          case Je.FullWidthLoading:
            s = this.beans.userComponentFactory.getFullWidthLoadingCellRendererDetails(o);
            break;
          default:
            s = this.beans.userComponentFactory.getFullWidthCellRendererDetails(o);
            break;
        }
        e.rowComp.showFullWidth(s);
      }, t.prototype.isPrintLayout = function() {
        return this.printLayout;
      }, t.prototype.getCellElement = function(e) {
        var r = this.getCellCtrl(e);
        return r ? r.getGui() : null;
      }, t.prototype.executeProcessRowPostCreateFunc = function() {
        var e = this.beans.gridOptionsWrapper.getProcessRowPostCreateFunc();
        if (e) {
          var r = {
            eRow: this.centerGui ? this.centerGui.element : void 0,
            ePinnedLeftRow: this.leftGui ? this.leftGui.element : void 0,
            ePinnedRightRow: this.rightGui ? this.rightGui.element : void 0,
            node: this.rowNode,
            rowIndex: this.rowNode.rowIndex,
            addRenderedRowListener: this.addEventListener.bind(this)
          };
          e(r);
        }
      }, t.prototype.setRowType = function() {
        var e = this.rowNode.stub, r = this.rowNode.isFullWidthCell(), o = this.beans.doingMasterDetail && this.rowNode.detail, i = this.beans.columnModel.isPivotMode(), s = !!this.rowNode.group && !this.rowNode.footer, a = s && this.beans.gridOptionsWrapper.isGroupUseEntireRow(i);
        e ? this.rowType = Je.FullWidthLoading : o ? this.rowType = Je.FullWidthDetail : r ? this.rowType = Je.FullWidth : a ? this.rowType = Je.FullWidthGroup : this.rowType = Je.Normal;
      }, t.prototype.updateColumnLists = function(e) {
        var r = this;
        if (e === void 0 && (e = !1), !this.isFullWidth()) {
          var o = e || this.beans.gridOptionsWrapper.isSuppressAnimationFrame() || this.printLayout;
          if (o) {
            this.updateColumnListsImpl();
            return;
          }
          this.updateColumnListsPending || (this.beans.animationFrameService.createTask(function() {
            r.active && r.updateColumnListsImpl();
          }, this.rowNode.rowIndex, "createTasksP1"), this.updateColumnListsPending = !0);
        }
      }, t.prototype.createCellCtrls = function(e, r, o) {
        var i = this;
        o === void 0 && (o = null);
        var s = {
          list: [],
          map: {}
        }, a = function(l, u) {
          s.list.push(u), s.map[l] = u;
        };
        return r.forEach(function(l) {
          var u = l.getInstanceId(), p = e.map[u];
          p || (p = new er(l, i.rowNode, i.beans, i)), a(u, p);
        }), e.list.forEach(function(l) {
          var u = s.map[l.getColumn().getInstanceId()] != null;
          if (!u) {
            var p = !i.isCellEligibleToBeRemoved(l, o);
            if (p) {
              a(l.getColumn().getInstanceId(), l);
              return;
            }
            l.destroy();
          }
        }), s;
      }, t.prototype.updateColumnListsImpl = function() {
        var e = this;
        this.updateColumnListsPending = !1;
        var r = this.beans.columnModel;
        if (this.printLayout)
          this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, r.getAllDisplayedColumns()), this.leftCellCtrls = { list: [], map: {} }, this.rightCellCtrls = { list: [], map: {} };
        else {
          var o = r.getViewportCenterColumnsForRow(this.rowNode);
          this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, o);
          var i = r.getDisplayedLeftColumnsForRow(this.rowNode);
          this.leftCellCtrls = this.createCellCtrls(this.leftCellCtrls, i, E.PINNED_LEFT);
          var s = r.getDisplayedRightColumnsForRow(this.rowNode);
          this.rightCellCtrls = this.createCellCtrls(this.rightCellCtrls, s, E.PINNED_RIGHT);
        }
        this.allRowGuis.forEach(function(a) {
          var l = a.containerType === c.RowContainerType.LEFT ? e.leftCellCtrls : a.containerType === c.RowContainerType.RIGHT ? e.rightCellCtrls : e.centerCellCtrls;
          a.rowComp.setCellCtrls(l.list);
        });
      }, t.prototype.isCellEligibleToBeRemoved = function(e, r) {
        var o = !0, i = !1, s = e.getColumn();
        if (s.getPinned() != r)
          return o;
        var a = e.isEditing(), l = this.beans.focusService.isCellFocused(e.getCellPosition()), u = a || l;
        if (u) {
          var p = e.getColumn(), d = this.beans.columnModel.getAllDisplayedColumns(), f = d.indexOf(p) >= 0;
          return f ? i : o;
        }
        return o;
      }, t.prototype.setAnimateFlags = function(e) {
        if (e) {
          var r = g(this.rowNode.oldRowTop);
          this.slideRowIn = r, this.fadeRowIn = !r;
        } else
          this.slideRowIn = !1, this.fadeRowIn = !1;
      }, t.prototype.isEditing = function() {
        return this.editingRow;
      }, t.prototype.stopRowEditing = function(e) {
        this.stopEditing(e);
      }, t.prototype.isFullWidth = function() {
        return this.rowType !== Je.Normal;
      }, t.prototype.getRowType = function() {
        return this.rowType;
      }, t.prototype.refreshFullWidth = function() {
        var e = this, r = function(u, p) {
          if (!u)
            return !0;
          var d = u.rowComp.getFullWidthCellRenderer();
          if (!d || !d.refresh)
            return !1;
          var f = e.createFullWidthParams(u.element, p), v = d.refresh(f);
          return v;
        }, o = r(this.fullWidthGui, null), i = r(this.centerGui, null), s = r(this.leftGui, E.PINNED_LEFT), a = r(this.rightGui, E.PINNED_RIGHT), l = o && i && s && a;
        return l;
      }, t.prototype.addListeners = function() {
        this.addManagedListener(this.rowNode, ue.EVENT_HEIGHT_CHANGED, this.onRowHeightChanged.bind(this)), this.addManagedListener(this.rowNode, ue.EVENT_ROW_SELECTED, this.onRowSelected.bind(this)), this.addManagedListener(this.rowNode, ue.EVENT_ROW_INDEX_CHANGED, this.onRowIndexChanged.bind(this)), this.addManagedListener(this.rowNode, ue.EVENT_TOP_CHANGED, this.onTopChanged.bind(this)), this.addManagedListener(this.rowNode, ue.EVENT_EXPANDED_CHANGED, this.updateExpandedCss.bind(this)), this.addManagedListener(this.rowNode, ue.EVENT_HAS_CHILDREN_CHANGED, this.updateExpandedCss.bind(this)), this.addManagedListener(this.rowNode, ue.EVENT_DATA_CHANGED, this.onRowNodeDataChanged.bind(this)), this.addManagedListener(this.rowNode, ue.EVENT_CELL_CHANGED, this.onRowNodeCellChanged.bind(this)), this.addManagedListener(this.rowNode, ue.EVENT_HIGHLIGHT_CHANGED, this.onRowNodeHighlightChanged.bind(this)), this.addManagedListener(this.rowNode, ue.EVENT_DRAGGING_CHANGED, this.onRowNodeDraggingChanged.bind(this)), this.addManagedListener(this.rowNode, ue.EVENT_UI_LEVEL_CHANGED, this.onUiLevelChanged.bind(this));
        var e = this.beans.eventService;
        this.addManagedListener(e, m.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED, this.onPaginationPixelOffsetChanged.bind(this)), this.addManagedListener(e, m.EVENT_HEIGHT_SCALE_CHANGED, this.onTopChanged.bind(this)), this.addManagedListener(e, m.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this)), this.addManagedListener(e, m.EVENT_VIRTUAL_COLUMNS_CHANGED, this.onVirtualColumnsChanged.bind(this)), this.addManagedListener(e, m.EVENT_CELL_FOCUSED, this.onCellFocusChanged.bind(this)), this.addManagedListener(e, m.EVENT_PAGINATION_CHANGED, this.onPaginationChanged.bind(this)), this.addManagedListener(e, m.EVENT_MODEL_UPDATED, this.onModelUpdated.bind(this)), this.addManagedListener(e, m.EVENT_COLUMN_MOVED, this.onColumnMoved.bind(this)), this.addListenersForCellComps();
      }, t.prototype.onColumnMoved = function() {
        this.updateColumnLists();
      }, t.prototype.addListenersForCellComps = function() {
        var e = this;
        this.addManagedListener(this.rowNode, ue.EVENT_ROW_INDEX_CHANGED, function() {
          e.getAllCellCtrls().forEach(function(r) {
            return r.onRowIndexChanged();
          });
        }), this.addManagedListener(this.rowNode, ue.EVENT_CELL_CHANGED, function(r) {
          e.getAllCellCtrls().forEach(function(o) {
            return o.onCellChanged(r);
          });
        });
      }, t.prototype.onRowNodeDataChanged = function(e) {
        this.getAllCellCtrls().forEach(function(r) {
          return r.refreshCell({
            suppressFlash: !e.update,
            newData: !e.update
          });
        }), this.onRowSelected(), this.postProcessCss();
      }, t.prototype.onRowNodeCellChanged = function() {
        this.postProcessCss();
      }, t.prototype.postProcessCss = function() {
        this.setStylesFromGridOptions(), this.postProcessClassesFromGridOptions(), this.postProcessRowClassRules(), this.postProcessRowDragging();
      }, t.prototype.onRowNodeHighlightChanged = function() {
        var e = this.rowNode.highlighted;
        this.allRowGuis.forEach(function(r) {
          var o = e === c.RowHighlightPosition.Above, i = e === c.RowHighlightPosition.Below;
          r.rowComp.addOrRemoveCssClass("ag-row-highlight-above", o), r.rowComp.addOrRemoveCssClass("ag-row-highlight-below", i);
        });
      }, t.prototype.onRowNodeDraggingChanged = function() {
        this.postProcessRowDragging();
      }, t.prototype.postProcessRowDragging = function() {
        var e = this.rowNode.dragging;
        this.allRowGuis.forEach(function(r) {
          return r.rowComp.addOrRemoveCssClass("ag-row-dragging", e);
        });
      }, t.prototype.updateExpandedCss = function() {
        var e = this.rowNode.isExpandable(), r = this.rowNode.expanded == !0;
        this.allRowGuis.forEach(function(o) {
          o.rowComp.addOrRemoveCssClass("ag-row-group", e), o.rowComp.addOrRemoveCssClass("ag-row-group-expanded", e && r), o.rowComp.addOrRemoveCssClass("ag-row-group-contracted", e && !r), tt(o.element, e && r);
        });
      }, t.prototype.onDisplayedColumnsChanged = function() {
        this.updateColumnLists(!0), this.beans.columnModel.wasAutoRowHeightEverActive() && this.rowNode.checkAutoHeights();
      }, t.prototype.onVirtualColumnsChanged = function() {
        this.updateColumnLists();
      }, t.prototype.getRowPosition = function() {
        return {
          rowPinned: w(this.rowNode.rowPinned),
          rowIndex: this.rowNode.rowIndex
        };
      }, t.prototype.onKeyboardNavigate = function(e) {
        var r = this.allRowGuis.find(function(u) {
          return u.element.contains(e.target);
        }), o = r ? r.element : null, i = o === e.target;
        if (i) {
          var s = this.rowNode, a = this.beans.focusService.getFocusedCell(), l = {
            rowIndex: s.rowIndex,
            rowPinned: s.rowPinned,
            column: a && a.column
          };
          this.beans.navigationService.navigateToNextCell(e, e.key, l, !0), e.preventDefault();
        }
      }, t.prototype.onTabKeyDown = function(e) {
        if (!(e.defaultPrevented || _t(e))) {
          var r = this.allRowGuis.find(function(a) {
            return a.element.contains(e.target);
          }), o = r ? r.element : null, i = o === e.target, s = null;
          i || (s = this.beans.focusService.findNextFocusableElement(o, !1, e.shiftKey)), (this.isFullWidth() && i || !s) && this.beans.navigationService.onTabKeyDown(this, e);
        }
      }, t.prototype.onFullWidthRowFocused = function(e) {
        var r, o = this.rowNode, i = this.isFullWidth() && e.rowIndex === o.rowIndex && e.rowPinned == o.rowPinned, s = this.fullWidthGui ? this.fullWidthGui.element : (r = this.centerGui) === null || r === void 0 ? void 0 : r.element;
        s && (s.classList.toggle("ag-full-width-focus", i), i && s.focus({ preventScroll: !0 }));
      }, t.prototype.refreshCell = function(e) {
        this.centerCellCtrls = this.removeCellCtrl(this.centerCellCtrls, e), this.leftCellCtrls = this.removeCellCtrl(this.leftCellCtrls, e), this.rightCellCtrls = this.removeCellCtrl(this.rightCellCtrls, e), this.updateColumnLists();
      }, t.prototype.removeCellCtrl = function(e, r) {
        var o = {
          list: [],
          map: {}
        };
        return e.list.forEach(function(i) {
          i !== r && (o.list.push(i), o.map[i.getInstanceId()] = i);
        }), o;
      }, t.prototype.onMouseEvent = function(e, r) {
        switch (e) {
          case "dblclick":
            this.onRowDblClick(r);
            break;
          case "click":
            this.onRowClick(r);
            break;
          case "touchstart":
          case "mousedown":
            this.onRowMouseDown(r);
            break;
        }
      }, t.prototype.createRowEvent = function(e, r) {
        return {
          type: e,
          node: this.rowNode,
          data: this.rowNode.data,
          rowIndex: this.rowNode.rowIndex,
          rowPinned: this.rowNode.rowPinned,
          context: this.beans.gridOptionsWrapper.getContext(),
          api: this.beans.gridOptionsWrapper.getApi(),
          columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
          event: r
        };
      }, t.prototype.createRowEventWithSource = function(e, r) {
        var o = this.createRowEvent(e, r);
        return o.source = this, o;
      }, t.prototype.onRowDblClick = function(e) {
        if (!_t(e)) {
          var r = this.createRowEventWithSource(m.EVENT_ROW_DOUBLE_CLICKED, e);
          this.beans.eventService.dispatchEvent(r);
        }
      }, t.prototype.onRowMouseDown = function(e) {
        if (this.lastMouseDownOnDragger = yi(e.target, "ag-row-drag", 3), !!this.isFullWidth()) {
          var r = this.rowNode, o = this.beans.columnModel;
          this.beans.focusService.setFocusedCell(r.rowIndex, o.getAllDisplayedColumns()[0], r.rowPinned, !0);
        }
      }, t.prototype.onRowClick = function(e) {
        var r = _t(e) || this.lastMouseDownOnDragger;
        if (!r) {
          var o = this.createRowEventWithSource(m.EVENT_ROW_CLICKED, e);
          this.beans.eventService.dispatchEvent(o);
          var i = e.ctrlKey || e.metaKey, s = e.shiftKey, a = this.beans.gridOptionsWrapper.isGroupSelectsChildren();
          if (
            // we do not allow selecting groups by clicking (as the click here expands the group), or if it's a detail row,
            // so return if it's a group row
            !(a && this.rowNode.group || // this is needed so we don't unselect other rows when we click this row, eg if this row is not selectable,
            // and we click it, the selection should not change (ie any currently selected row should stay selected)
            !this.rowNode.selectable || // we also don't allow selection of pinned rows
            this.rowNode.rowPinned || // if no selection method enabled, do nothing
            !this.beans.gridOptionsWrapper.isRowSelection() || // if click selection suppressed, do nothing
            this.beans.gridOptionsWrapper.isSuppressRowClickSelection())
          ) {
            var l = this.beans.gridOptionsWrapper.isRowMultiSelectWithClick(), u = !this.beans.gridOptionsWrapper.isSuppressRowDeselection();
            if (this.rowNode.isSelected())
              l ? this.rowNode.setSelectedParams({ newValue: !1 }) : i ? u && this.rowNode.setSelectedParams({ newValue: !1 }) : this.rowNode.setSelectedParams({ newValue: !0, clearSelection: !s, rangeSelect: s });
            else {
              var p = l ? !1 : !i;
              this.rowNode.setSelectedParams({ newValue: !0, clearSelection: p, rangeSelect: s });
            }
          }
        }
      }, t.prototype.setupDetailRowAutoHeight = function(e) {
        var r = this;
        if (this.rowType === Je.FullWidthDetail && this.beans.gridOptionsWrapper.isDetailRowAutoHeight()) {
          var o = function() {
            var s = e.clientHeight;
            if (s != null && s > 0) {
              var a = function() {
                r.rowNode.setRowHeight(s), r.beans.clientSideRowModel ? r.beans.clientSideRowModel.onRowHeightChanged() : r.beans.serverSideRowModel && r.beans.serverSideRowModel.onRowHeightChanged();
              };
              r.beans.frameworkOverrides.setTimeout(a, 0);
            }
          }, i = this.beans.resizeObserverService.observeResize(e, o);
          this.addDestroyFunc(i), o();
        }
      }, t.prototype.createFullWidthParams = function(e, r) {
        var o = this, i = {
          fullWidth: !0,
          data: this.rowNode.data,
          node: this.rowNode,
          value: this.rowNode.key,
          valueFormatted: this.rowNode.key,
          rowIndex: this.rowNode.rowIndex,
          api: this.beans.gridOptionsWrapper.getApi(),
          columnApi: this.beans.gridOptionsWrapper.getColumnApi(),
          context: this.beans.gridOptionsWrapper.getContext(),
          // these need to be taken out, as part of 'afterAttached' now
          eGridCell: e,
          eParentOfValue: e,
          pinned: r,
          addRenderedRowListener: this.addEventListener.bind(this),
          registerRowDragger: function(s, a, l, u) {
            return o.addFullWidthRowDragging(s, a, l, u);
          }
        };
        return i;
      }, t.prototype.addFullWidthRowDragging = function(e, r, o, i) {
        if (o === void 0 && (o = ""), !!this.isFullWidth()) {
          var s = new Li(function() {
            return o;
          }, this.rowNode, void 0, e, r, i);
          this.createManagedBean(s, this.beans.context);
        }
      }, t.prototype.onUiLevelChanged = function() {
        var e = this.beans.rowCssClassCalculator.calculateRowLevel(this.rowNode);
        if (this.rowLevel != e) {
          var r = "ag-row-level-" + e, o = "ag-row-level-" + this.rowLevel;
          this.allRowGuis.forEach(function(i) {
            i.rowComp.addOrRemoveCssClass(r, !0), i.rowComp.addOrRemoveCssClass(o, !1);
          });
        }
        this.rowLevel = e;
      }, t.prototype.isFirstRowOnPage = function() {
        return this.rowNode.rowIndex === this.beans.paginationProxy.getPageFirstRow();
      }, t.prototype.isLastRowOnPage = function() {
        return this.rowNode.rowIndex === this.beans.paginationProxy.getPageLastRow();
      }, t.prototype.onModelUpdated = function() {
        this.refreshFirstAndLastRowStyles();
      }, t.prototype.refreshFirstAndLastRowStyles = function() {
        var e = this.isFirstRowOnPage(), r = this.isLastRowOnPage();
        this.firstRowOnPage !== e && (this.firstRowOnPage = e, this.allRowGuis.forEach(function(o) {
          return o.rowComp.addOrRemoveCssClass("ag-row-first", e);
        })), this.lastRowOnPage !== r && (this.lastRowOnPage = r, this.allRowGuis.forEach(function(o) {
          return o.rowComp.addOrRemoveCssClass("ag-row-last", r);
        }));
      }, t.prototype.stopEditing = function(e) {
        e === void 0 && (e = !1);
        var r = this.getAllCellCtrls().map(function(i) {
          return i.stopEditing(e);
        });
        if (this.editingRow) {
          if (!e && r.some(function(i) {
            return i;
          })) {
            var o = this.createRowEvent(m.EVENT_ROW_VALUE_CHANGED);
            this.beans.eventService.dispatchEvent(o);
          }
          this.setEditingRow(!1);
        }
      }, t.prototype.setInlineEditingCss = function(e) {
        this.allRowGuis.forEach(function(r) {
          r.rowComp.addOrRemoveCssClass("ag-row-inline-editing", e), r.rowComp.addOrRemoveCssClass("ag-row-not-inline-editing", !e);
        });
      }, t.prototype.setEditingRow = function(e) {
        this.editingRow = e, this.allRowGuis.forEach(function(o) {
          return o.rowComp.addOrRemoveCssClass("ag-row-editing", e);
        });
        var r = e ? this.createRowEvent(m.EVENT_ROW_EDITING_STARTED) : this.createRowEvent(m.EVENT_ROW_EDITING_STOPPED);
        this.beans.eventService.dispatchEvent(r);
      }, t.prototype.startRowEditing = function(e, r, o, i) {
        e === void 0 && (e = null), r === void 0 && (r = null), o === void 0 && (o = null), i === void 0 && (i = null), !this.editingRow && (this.getAllCellCtrls().forEach(function(s) {
          var a = s === o;
          a ? s.startEditing(e, r, a, i) : s.startEditing(null, null, a, i);
        }), this.setEditingRow(!0));
      }, t.prototype.getAllCellCtrls = function() {
        var e = rg(this.centerCellCtrls.list, this.leftCellCtrls.list, this.rightCellCtrls.list);
        return e;
      }, t.prototype.postProcessClassesFromGridOptions = function() {
        var e = this, r = this.beans.rowCssClassCalculator.processClassesFromGridOptions(this.rowNode);
        !r || !r.length || r.forEach(function(o) {
          e.allRowGuis.forEach(function(i) {
            return i.rowComp.addOrRemoveCssClass(o, !0);
          });
        });
      }, t.prototype.postProcessRowClassRules = function() {
        var e = this;
        this.beans.rowCssClassCalculator.processRowClassRules(this.rowNode, function(r) {
          e.allRowGuis.forEach(function(o) {
            return o.rowComp.addOrRemoveCssClass(r, !0);
          });
        }, function(r) {
          e.allRowGuis.forEach(function(o) {
            return o.rowComp.addOrRemoveCssClass(r, !1);
          });
        });
      }, t.prototype.setStylesFromGridOptions = function() {
        var e = this.processStylesFromGridOptions();
        this.allRowGuis.forEach(function(r) {
          return r.rowComp.setUserStyles(e);
        });
      }, t.prototype.getRowBusinessKey = function() {
        var e = this.beans.gridOptionsWrapper.getBusinessKeyForNodeFunc();
        if (typeof e == "function")
          return e(this.rowNode);
      }, t.prototype.getPinnedForContainer = function(e) {
        var r = e === c.RowContainerType.LEFT ? E.PINNED_LEFT : e === c.RowContainerType.RIGHT ? E.PINNED_RIGHT : null;
        return r;
      }, t.prototype.getInitialRowClasses = function(e) {
        var r = this.getPinnedForContainer(e), o = {
          rowNode: this.rowNode,
          rowFocused: this.rowFocused,
          fadeRowIn: this.fadeRowIn,
          rowIsEven: this.rowNode.rowIndex % 2 === 0,
          rowLevel: this.rowLevel,
          fullWidthRow: this.isFullWidth(),
          firstRowOnPage: this.isFirstRowOnPage(),
          lastRowOnPage: this.isLastRowOnPage(),
          printLayout: this.printLayout,
          expandable: this.rowNode.isExpandable(),
          pinned: r
        };
        return this.beans.rowCssClassCalculator.getInitialRowClasses(o);
      }, t.prototype.processStylesFromGridOptions = function() {
        var e = this.beans.gridOptionsWrapper.getRowStyle();
        if (e && typeof e == "function") {
          console.warn("AG Grid: rowStyle should be an object of key/value styles, not be a function, use getRowStyle() instead");
          return;
        }
        var r = this.beans.gridOptionsWrapper.getRowStyleFunc(), o;
        if (r) {
          var i = {
            data: this.rowNode.data,
            node: this.rowNode,
            rowIndex: this.rowNode.rowIndex
          };
          o = r(i);
        }
        return Object.assign({}, e, o);
      }, t.prototype.onRowSelected = function() {
        var e = this, r = !!this.rowNode.isSelected();
        this.allRowGuis.forEach(function(o) {
          o.rowComp.addOrRemoveCssClass("ag-row-selected", r), kr(o.element, r ? !0 : void 0);
          var i = e.createAriaLabel();
          fr(o.element, i ?? "");
        });
      }, t.prototype.createAriaLabel = function() {
        var e = this.rowNode.isSelected();
        if (!(e && this.beans.gridOptionsWrapper.isSuppressRowDeselection())) {
          var r = this.beans.gridOptionsWrapper.getLocaleTextFunc(), o = r(e ? "ariaRowDeselect" : "ariaRowSelect", "Press SPACE to " + (e ? "deselect" : "select") + " this row.");
          return o;
        }
      }, t.prototype.isUseAnimationFrameForCreate = function() {
        return this.useAnimationFrameForCreate;
      }, t.prototype.addHoverFunctionality = function(e) {
        var r = this;
        this.active && (this.addManagedListener(e, "mouseenter", function() {
          return r.rowNode.onMouseEnter();
        }), this.addManagedListener(e, "mouseleave", function() {
          return r.rowNode.onMouseLeave();
        }), this.addManagedListener(this.rowNode, ue.EVENT_MOUSE_ENTER, function() {
          r.beans.gridOptionsWrapper.isSuppressRowHoverHighlight() || e.classList.add("ag-row-hover");
        }), this.addManagedListener(this.rowNode, ue.EVENT_MOUSE_LEAVE, function() {
          e.classList.remove("ag-row-hover");
        }));
      }, t.prototype.roundRowTopToBounds = function(e) {
        var r = this.beans.ctrlsService.getGridBodyCtrl(), o = r.getScrollFeature().getVScrollPosition(), i = this.applyPaginationOffset(o.top, !0) - 100, s = this.applyPaginationOffset(o.bottom, !0) + 100;
        return Math.min(Math.max(i, e), s);
      }, t.prototype.getFrameworkOverrides = function() {
        return this.beans.frameworkOverrides;
      }, t.prototype.onRowHeightChanged = function() {
        if (this.rowNode.rowHeight != null) {
          var e = this.rowNode.rowHeight, r = this.beans.gridOptionsWrapper.getDefaultRowHeight(), o = this.beans.gridOptionsWrapper.isGetRowHeightFunction(), i = o ? this.beans.gridOptionsWrapper.getRowHeightForNode(this.rowNode).height : void 0, s = i ? Math.min(r, i) - 2 + "px" : void 0;
          this.allRowGuis.forEach(function(a) {
            a.element.style.height = e + "px", s && a.element.style.setProperty("--ag-line-height", s);
          });
        }
      }, t.prototype.addEventListener = function(e, r) {
        (e === "renderedRowRemoved" || e === "rowRemoved") && (e = m.EVENT_VIRTUAL_ROW_REMOVED, console.warn("AG Grid: Since version 11, event renderedRowRemoved is now called " + m.EVENT_VIRTUAL_ROW_REMOVED)), n.prototype.addEventListener.call(this, e, r);
      }, t.prototype.removeEventListener = function(e, r) {
        (e === "renderedRowRemoved" || e === "rowRemoved") && (e = m.EVENT_VIRTUAL_ROW_REMOVED, console.warn("AG Grid: Since version 11, event renderedRowRemoved and rowRemoved is now called " + m.EVENT_VIRTUAL_ROW_REMOVED)), n.prototype.removeEventListener.call(this, e, r);
      }, t.prototype.destroyFirstPass = function() {
        this.active = !1, this.setupRemoveAnimation();
        var e = this.createRowEvent(m.EVENT_VIRTUAL_ROW_REMOVED);
        this.dispatchEvent(e), this.beans.eventService.dispatchEvent(e), n.prototype.destroy.call(this);
      }, t.prototype.setupRemoveAnimation = function() {
        var e = this.rowNode.rowTop != null;
        if (e) {
          var r = this.roundRowTopToBounds(this.rowNode.rowTop);
          this.setRowTop(r);
        } else
          this.allRowGuis.forEach(function(o) {
            return o.rowComp.addOrRemoveCssClass("ag-opacity-zero", !0);
          });
      }, t.prototype.destroySecondPass = function() {
        this.allRowGuis.length = 0;
        var e = function(r) {
          return r.list.forEach(function(o) {
            return o.destroy();
          }), { list: [], map: {} };
        };
        this.centerCellCtrls = e(this.centerCellCtrls), this.leftCellCtrls = e(this.leftCellCtrls), this.rightCellCtrls = e(this.rightCellCtrls);
      }, t.prototype.setFocusedClasses = function() {
        var e = this;
        this.allRowGuis.forEach(function(r) {
          r.rowComp.addOrRemoveCssClass("ag-row-focus", e.rowFocused), r.rowComp.addOrRemoveCssClass("ag-row-no-focus", !e.rowFocused);
        });
      }, t.prototype.onCellFocusChanged = function() {
        var e = this.beans.focusService.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);
        e !== this.rowFocused && (this.rowFocused = e, this.setFocusedClasses()), !e && this.editingRow && this.stopEditing(!1);
      }, t.prototype.onPaginationChanged = function() {
        var e = this.beans.paginationProxy.getCurrentPage();
        this.paginationPage !== e && (this.paginationPage = e, this.onTopChanged()), this.refreshFirstAndLastRowStyles();
      }, t.prototype.onTopChanged = function() {
        this.setRowTop(this.rowNode.rowTop);
      }, t.prototype.onPaginationPixelOffsetChanged = function() {
        this.onTopChanged();
      }, t.prototype.applyPaginationOffset = function(e, r) {
        if (r === void 0 && (r = !1), this.rowNode.isRowPinned())
          return e;
        var o = this.beans.paginationProxy.getPixelOffset(), i = r ? 1 : -1;
        return e + o * i;
      }, t.prototype.setRowTop = function(e) {
        if (!this.printLayout && g(e)) {
          var r = this.applyPaginationOffset(e), o = this.rowNode.isRowPinned() ? r : this.beans.rowContainerHeightService.getRealPixelPosition(r), i = o + "px";
          this.setRowTopStyle(i);
        }
      }, t.prototype.getInitialRowTop = function() {
        return this.initialTop;
      }, t.prototype.getInitialTransform = function() {
        return this.initialTransform;
      }, t.prototype.setInitialRowTop = function() {
        if (this.printLayout)
          return "";
        var e = this.slideRowIn ? this.roundRowTopToBounds(this.rowNode.oldRowTop) : this.rowNode.rowTop, r = this.applyPaginationOffset(e), o = this.rowNode.isRowPinned() ? r : this.beans.rowContainerHeightService.getRealPixelPosition(r), i = o + "px", s = this.beans.gridOptionsWrapper.isSuppressRowTransform();
        s ? this.initialTop = i : this.initialTransform = "translateY(" + i + ")";
      }, t.prototype.setRowTopStyle = function(e) {
        var r = this.beans.gridOptionsWrapper.isSuppressRowTransform();
        this.allRowGuis.forEach(function(o) {
          return r ? o.rowComp.setTop(e) : o.rowComp.setTransform("translateY(" + e + ")");
        });
      }, t.prototype.getRowNode = function() {
        return this.rowNode;
      }, t.prototype.getCellCtrl = function(e) {
        var r = null;
        return this.getAllCellCtrls().forEach(function(o) {
          o.getColumn() == e && (r = o);
        }), r != null || this.getAllCellCtrls().forEach(function(o) {
          o.getColSpanningList().indexOf(e) >= 0 && (r = o);
        }), r;
      }, t.prototype.onRowIndexChanged = function() {
        this.rowNode.rowIndex != null && (this.onCellFocusChanged(), this.updateRowIndexes(), this.postProcessCss());
      }, t.prototype.updateRowIndexes = function() {
        var e = this.rowNode.getRowIndexString(), r = this.beans.headerNavigationService.getHeaderRowCount(), o = this.rowNode.rowIndex % 2 === 0, i = r + this.rowNode.rowIndex + 1;
        this.allRowGuis.forEach(function(s) {
          s.rowComp.setRowIndex(e), s.rowComp.addOrRemoveCssClass("ag-row-even", o), s.rowComp.addOrRemoveCssClass("ag-row-odd", !o), ts(s.element, i);
        });
      }, t.prototype.getPinnedLeftRowElement = function() {
        return this.leftGui ? this.leftGui.element : void 0;
      }, t.prototype.getPinnedRightRowElement = function() {
        return this.rightGui ? this.rightGui.element : void 0;
      }, t.prototype.getBodyRowElement = function() {
        return this.centerGui ? this.centerGui.element : void 0;
      }, t.prototype.getFullWidthRowElement = function() {
        return this.fullWidthGui ? this.fullWidthGui.element : void 0;
      }, t.DOM_DATA_KEY_ROW_CTRL = "renderedRow", t;
    }(H)
  );
  var ig = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), rt = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, ng = function(n, t) {
    var e = typeof Symbol == "function" && n[Symbol.iterator];
    if (!e) return n;
    var r = e.call(n), o, i = [], s;
    try {
      for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
    } catch (a) {
      s = { error: a };
    } finally {
      try {
        o && !o.done && (e = r.return) && e.call(r);
      } finally {
        if (s) throw s.error;
      }
    }
    return i;
  }, sg = (
    /** @class */
    function(n) {
      ig(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return r.element = e, r;
      }
      return t.prototype.postConstruct = function() {
        this.addMouseListeners(), this.mockContextMenuForIPad(), this.addKeyboardEvents();
      }, t.prototype.addKeyboardEvents = function() {
        var e = this, r = ["keydown", "keypress"];
        r.forEach(function(o) {
          var i = e.processKeyboardEvent.bind(e, o);
          e.addManagedListener(e.element, o, i);
        });
      }, t.prototype.addMouseListeners = function() {
        var e = this, r = _n("touchstart") ? "touchstart" : "mousedown", o = ["dblclick", "contextmenu", "mouseover", "mouseout", "click", r];
        o.forEach(function(i) {
          var s = e.processMouseEvent.bind(e, i);
          e.addManagedListener(e.element, i, s);
        });
      }, t.prototype.processMouseEvent = function(e, r) {
        if (!(!this.mouseEventService.isEventFromThisGrid(r) || _t(r))) {
          var o = this.getRowForEvent(r), i = this.mouseEventService.getRenderedCellForEvent(r);
          e === "contextmenu" ? this.handleContextMenuMouseEvent(r, null, o, i) : (i && i.onMouseEvent(e, r), o && o.onMouseEvent(e, r));
        }
      }, t.prototype.mockContextMenuForIPad = function() {
        var e = this;
        if (Hr()) {
          var r = new at(this.element), o = function(i) {
            var s = e.getRowForEvent(i.touchEvent), a = e.mouseEventService.getRenderedCellForEvent(i.touchEvent);
            e.handleContextMenuMouseEvent(null, i.touchEvent, s, a);
          };
          this.addManagedListener(r, at.EVENT_LONG_TAP, o), this.addDestroyFunc(function() {
            return r.destroy();
          });
        }
      }, t.prototype.getRowForEvent = function(e) {
        for (var r = e.target; r; ) {
          var o = this.gridOptionsWrapper.getDomData(r, tr.DOM_DATA_KEY_ROW_CTRL);
          if (o)
            return o;
          r = r.parentElement;
        }
        return null;
      }, t.prototype.handleContextMenuMouseEvent = function(e, r, o, i) {
        var s = o ? o.getRowNode() : null, a = i ? i.getColumn() : null, l = null;
        if (a) {
          var u = e || r;
          i.dispatchCellContextMenuEvent(u), l = this.valueService.getValue(a, s);
        }
        var p = this.ctrlsService.getGridBodyCtrl(), d = i ? i.getGui() : p.getGridBodyElement();
        this.contextMenuFactory && this.contextMenuFactory.onContextMenu(e, r, s, a, l, d);
      }, t.prototype.processKeyboardEvent = function(e, r) {
        var o = hi(this.gridOptionsWrapper, r, er.DOM_DATA_KEY_CELL_CTRL), i = hi(this.gridOptionsWrapper, r, tr.DOM_DATA_KEY_ROW_CTRL);
        r.defaultPrevented || (o ? this.processCellKeyboardEvent(o, e, r) : i && i.isFullWidth() && this.processFullWidthRowKeyboardEvent(i, e, r));
      }, t.prototype.processCellKeyboardEvent = function(e, r, o) {
        var i = e.getRowNode(), s = e.getColumn(), a = e.isEditing(), l = !Si(this.gridOptionsWrapper, o, i, s, a);
        if (l)
          switch (r) {
            case "keydown":
              var u = !a && this.navigationService.handlePageScrollingKey(o);
              u || e.onKeyDown(o), this.doGridOperations(o, e.isEditing());
              break;
            case "keypress":
              e.onKeyPress(o);
              break;
          }
        if (r === "keydown") {
          var p = e.createEvent(o, m.EVENT_CELL_KEY_DOWN);
          this.eventService.dispatchEvent(p);
        }
        if (r === "keypress") {
          var d = e.createEvent(o, m.EVENT_CELL_KEY_PRESS);
          this.eventService.dispatchEvent(d);
        }
      }, t.prototype.processFullWidthRowKeyboardEvent = function(e, r, o) {
        var i = e.getRowNode(), s = this.focusService.getFocusedCell(), a = s && s.column, l = !Si(this.gridOptionsWrapper, o, i, a, !1);
        if (l) {
          var u = o.key;
          if (r === "keydown")
            switch (u) {
              case N.UP:
              case N.DOWN:
                e.onKeyboardNavigate(o);
                break;
              case N.TAB:
                e.onTabKeyDown(o);
            }
        }
        if (r === "keydown") {
          var p = e.createRowEvent(m.EVENT_CELL_KEY_DOWN, o);
          this.eventService.dispatchEvent(p);
        }
        if (r === "keypress") {
          var d = e.createRowEvent(m.EVENT_CELL_KEY_PRESS, o);
          this.eventService.dispatchEvent(d);
        }
      }, t.prototype.doGridOperations = function(e, r) {
        if (!(!e.ctrlKey && !e.metaKey) && !r && this.mouseEventService.isEventFromThisGrid(e))
          switch (e.code) {
            case N.A:
              return this.onCtrlAndA(e);
            case N.C:
              return this.onCtrlAndC(e);
            case N.V:
              return this.onCtrlAndV();
            case N.D:
              return this.onCtrlAndD(e);
            case N.Z:
              return e.shiftKey ? this.undoRedoService.redo() : this.undoRedoService.undo();
            case N.Y:
              return this.undoRedoService.redo();
          }
      }, t.prototype.onCtrlAndA = function(e) {
        var r = this, o = r.pinnedRowModel, i = r.paginationProxy, s = r.rangeService, a = E.PINNED_BOTTOM, l = E.PINNED_TOP;
        if (s && i.isRowsToRender()) {
          var u = ng([
            o.isEmpty(l),
            o.isEmpty(a)
          ], 2), p = u[0], d = u[1], f = p ? null : l, v = void 0, y = void 0;
          d ? (v = null, y = this.paginationProxy.getRowCount() - 1) : (v = a, y = o.getPinnedBottomRowData().length - 1);
          var R = this.columnModel.getAllDisplayedColumns();
          if (S(R))
            return;
          s.setCellRange({
            rowStartIndex: 0,
            rowStartPinned: f,
            rowEndIndex: y,
            rowEndPinned: v,
            columnStart: R[0],
            columnEnd: M(R)
          });
        }
        e.preventDefault();
      }, t.prototype.onCtrlAndC = function(e) {
        !this.clipboardService || this.gridOptionsWrapper.isEnableCellTextSelection() || (this.clipboardService.copyToClipboard(), e.preventDefault());
      }, t.prototype.onCtrlAndV = function() {
        oe.isRegistered(c.ModuleNames.ClipboardModule) && !this.gridOptionsWrapper.isSuppressClipboardPaste() && this.clipboardService.pasteFromClipboard();
      }, t.prototype.onCtrlAndD = function(e) {
        oe.isRegistered(c.ModuleNames.ClipboardModule) && !this.gridOptionsWrapper.isSuppressClipboardPaste() && this.clipboardService.copyRangeDown(), e.preventDefault();
      }, rt([
        h("mouseEventService")
      ], t.prototype, "mouseEventService", void 0), rt([
        h("valueService")
      ], t.prototype, "valueService", void 0), rt([
        ve("contextMenuFactory")
      ], t.prototype, "contextMenuFactory", void 0), rt([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), rt([
        h("navigationService")
      ], t.prototype, "navigationService", void 0), rt([
        h("focusService")
      ], t.prototype, "focusService", void 0), rt([
        h("undoRedoService")
      ], t.prototype, "undoRedoService", void 0), rt([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), rt([
        h("paginationProxy")
      ], t.prototype, "paginationProxy", void 0), rt([
        h("pinnedRowModel")
      ], t.prototype, "pinnedRowModel", void 0), rt([
        ve("rangeService")
      ], t.prototype, "rangeService", void 0), rt([
        ve("clipboardService")
      ], t.prototype, "clipboardService", void 0), rt([
        B
      ], t.prototype, "postConstruct", null), t;
    }(H)
  );
  var ag = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), zr = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, lg = (
    /** @class */
    function(n) {
      ag(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return r.centerContainerCtrl = e, r;
      }
      return t.prototype.postConstruct = function() {
        var e = this;
        this.ctrlsService.whenReady(function() {
          e.gridBodyCtrl = e.ctrlsService.getGridBodyCtrl(), e.listenForResize();
        }), this.addManagedListener(this.eventService, m.EVENT_SCROLLBAR_WIDTH_CHANGED, this.onScrollbarWidthChanged.bind(this));
      }, t.prototype.listenForResize = function() {
        var e = this, r = function() {
          return e.onCenterViewportResized();
        };
        this.centerContainerCtrl.registerViewportResizeListener(r), this.gridBodyCtrl.registerBodyViewportResizeListener(r);
      }, t.prototype.onScrollbarWidthChanged = function() {
        this.checkViewportAndScrolls();
      }, t.prototype.onCenterViewportResized = function() {
        if (this.centerContainerCtrl.isViewportVisible()) {
          this.checkViewportAndScrolls();
          var e = this.centerContainerCtrl.getCenterWidth();
          e !== this.centerWidth && (this.centerWidth = e, this.columnModel.refreshFlexedColumns({ viewportWidth: this.centerWidth, updateBodyWidths: !0, fireResizedEvent: !0 }));
        } else
          this.bodyHeight = 0;
      }, t.prototype.checkViewportAndScrolls = function() {
        this.updateScrollVisibleService(), this.checkBodyHeight(), this.onHorizontalViewportChanged(), this.gridBodyCtrl.getScrollFeature().checkScrollLeft();
      }, t.prototype.getBodyHeight = function() {
        return this.bodyHeight;
      }, t.prototype.checkBodyHeight = function() {
        var e = this.gridBodyCtrl.getBodyViewportElement(), r = _o(e);
        if (this.bodyHeight !== r) {
          this.bodyHeight = r;
          var o = {
            type: m.EVENT_BODY_HEIGHT_CHANGED,
            api: this.gridApi,
            columnApi: this.columnApi
          };
          this.eventService.dispatchEvent(o);
        }
      }, t.prototype.updateScrollVisibleService = function() {
        this.updateScrollVisibleServiceImpl(), setTimeout(this.updateScrollVisibleServiceImpl.bind(this), 500);
      }, t.prototype.updateScrollVisibleServiceImpl = function() {
        var e = {
          horizontalScrollShowing: this.isHorizontalScrollShowing(),
          verticalScrollShowing: this.gridBodyCtrl.isVerticalScrollShowing()
        };
        this.scrollVisibleService.setScrollsVisible(e), this.gridBodyCtrl.setVerticalScrollPaddingVisible(e.verticalScrollShowing);
      }, t.prototype.isHorizontalScrollShowing = function() {
        var e = this.gridOptionsWrapper.isAlwaysShowHorizontalScroll();
        return e || this.centerContainerCtrl.isViewportHScrollShowing();
      }, t.prototype.onHorizontalViewportChanged = function() {
        var e = this.centerContainerCtrl.getCenterWidth(), r = this.centerContainerCtrl.getViewportScrollLeft();
        this.columnModel.setViewportPosition(e, r);
      }, zr([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), zr([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), zr([
        h("scrollVisibleService")
      ], t.prototype, "scrollVisibleService", void 0), zr([
        h("columnApi")
      ], t.prototype, "columnApi", void 0), zr([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), zr([
        B
      ], t.prototype, "postConstruct", null), t;
    }(H)
  );
  var ug = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), tu = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, pg = (
    /** @class */
    function(n) {
      ug(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return r.element = e, r;
      }
      return t.prototype.postConstruct = function() {
        this.addManagedListener(this.eventService, m.EVENT_LEFT_PINNED_WIDTH_CHANGED, this.onPinnedLeftWidthChanged.bind(this));
      }, t.prototype.onPinnedLeftWidthChanged = function() {
        var e = this.pinnedWidthService.getPinnedLeftWidth(), r = e > 0;
        Ee(this.element, r), r && Pt(this.element, e);
      }, tu([
        h("pinnedWidthService")
      ], t.prototype, "pinnedWidthService", void 0), tu([
        B
      ], t.prototype, "postConstruct", null), t;
    }(H)
  );
  var cg = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), ru = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, dg = (
    /** @class */
    function(n) {
      cg(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return r.element = e, r;
      }
      return t.prototype.postConstruct = function() {
        this.addManagedListener(this.eventService, m.EVENT_RIGHT_PINNED_WIDTH_CHANGED, this.onPinnedRightWidthChanged.bind(this));
      }, t.prototype.onPinnedRightWidthChanged = function() {
        var e = this.pinnedWidthService.getPinnedRightWidth(), r = e > 0;
        Ee(this.element, r), r && Pt(this.element, e);
      }, ru([
        h("pinnedWidthService")
      ], t.prototype, "pinnedWidthService", void 0), ru([
        B
      ], t.prototype, "postConstruct", null), t;
    }(H)
  );
  var hg = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), ou = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, fg = (
    /** @class */
    function(n) {
      hg(t, n);
      function t(e, r) {
        var o = n.call(this) || this;
        return o.eContainer = e, o.eWrapper = r, o;
      }
      return t.prototype.postConstruct = function() {
        this.addManagedListener(this.eventService, m.EVENT_ROW_CONTAINER_HEIGHT_CHANGED, this.onHeightChanged.bind(this));
      }, t.prototype.onHeightChanged = function() {
        var e = this.maxDivHeightScaler.getUiContainerHeight(), r = e != null ? e + "px" : "";
        this.eContainer.style.height = r, this.eWrapper && (this.eWrapper.style.height = r);
      }, ou([
        h("rowContainerHeightService")
      ], t.prototype, "maxDivHeightScaler", void 0), ou([
        B
      ], t.prototype, "postConstruct", null), t;
    }(H)
  );
  var gg = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Is = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, vg = (
    /** @class */
    function(n) {
      gg(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return r.eContainer = e, r;
      }
      return t.prototype.postConstruct = function() {
        var e = this;
        if (!(!this.gridOptionsWrapper.isEnableRangeSelection() || // no range selection if no property
        C(this.rangeService))) {
          var r = {
            dragStartPixels: 0,
            eElement: this.eContainer,
            onDragStart: this.rangeService.onDragStart.bind(this.rangeService),
            onDragStop: this.rangeService.onDragStop.bind(this.rangeService),
            onDragging: this.rangeService.onDragging.bind(this.rangeService)
          };
          this.dragService.addDragSource(r), this.addDestroyFunc(function() {
            return e.dragService.removeDragSource(r);
          });
        }
      }, Is([
        ve("rangeService")
      ], t.prototype, "rangeService", void 0), Is([
        h("dragService")
      ], t.prototype, "dragService", void 0), Is([
        B
      ], t.prototype, "postConstruct", null), t;
    }(H)
  );
  var mg = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), iu = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Ns = (
    /** @class */
    function(n) {
      mg(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return r.callback = e, r;
      }
      return t.prototype.postConstruct = function() {
        var e = this.setWidth.bind(this);
        this.addManagedListener(this.gridOptionsWrapper, z.PROP_DOM_LAYOUT, e), this.addManagedListener(this.eventService, m.EVENT_DISPLAYED_COLUMNS_CHANGED, e), this.addManagedListener(this.eventService, m.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, e), this.setWidth();
      }, t.prototype.setWidth = function() {
        var e = this.columnModel, r = this.gridOptionsWrapper.getDomLayout() === E.DOM_LAYOUT_PRINT, o = e.getBodyContainerWidth(), i = e.getDisplayedColumnsLeftWidth(), s = e.getDisplayedColumnsRightWidth(), a = r ? o + i + s : o;
        this.callback(a);
      }, iu([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), iu([
        B
      ], t.prototype, "postConstruct", null), t;
    }(H)
  );
  var yg = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Cr = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Cg = function(n, t) {
    var e = typeof Symbol == "function" && n[Symbol.iterator];
    if (!e) return n;
    var r = e.call(n), o, i = [], s;
    try {
      for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
    } catch (a) {
      s = { error: a };
    } finally {
      try {
        o && !o.done && (e = r.return) && e.call(r);
      } finally {
        if (s) throw s.error;
      }
    }
    return i;
  }, wg = function() {
    for (var n = [], t = 0; t < arguments.length; t++) n = n.concat(Cg(arguments[t]));
    return n;
  };
  (function(n) {
    n.LEFT = "left", n.RIGHT = "right", n.CENTER = "center", n.FULL_WIDTH = "fullWidth", n.TOP_LEFT = "topLeft", n.TOP_RIGHT = "topRight", n.TOP_CENTER = "topCenter", n.TOP_FULL_WIDTH = "topFullWidth", n.BOTTOM_LEFT = "bottomLeft", n.BOTTOM_RIGHT = "bottomRight", n.BOTTOM_CENTER = "bottomCenter", n.BOTTOM_FULL_WIDTH = "bottomFullWidth";
  })(c.RowContainerName || (c.RowContainerName = {})), function(n) {
    n.LEFT = "left", n.RIGHT = "right", n.CENTER = "center", n.FULL_WIDTH = "fullWidth";
  }(c.RowContainerType || (c.RowContainerType = {}));
  function nu(n) {
    switch (n) {
      case c.RowContainerName.CENTER:
      case c.RowContainerName.TOP_CENTER:
      case c.RowContainerName.BOTTOM_CENTER:
        return c.RowContainerType.CENTER;
      case c.RowContainerName.LEFT:
      case c.RowContainerName.TOP_LEFT:
      case c.RowContainerName.BOTTOM_LEFT:
        return c.RowContainerType.LEFT;
      case c.RowContainerName.RIGHT:
      case c.RowContainerName.TOP_RIGHT:
      case c.RowContainerName.BOTTOM_RIGHT:
        return c.RowContainerType.RIGHT;
      case c.RowContainerName.FULL_WIDTH:
      case c.RowContainerName.TOP_FULL_WIDTH:
      case c.RowContainerName.BOTTOM_FULL_WIDTH:
        return c.RowContainerType.FULL_WIDTH;
      default:
        throw Error("Invalid Row Container Type");
    }
  }
  var Eg = qt([
    [c.RowContainerName.CENTER, "ag-center-cols-container"],
    [c.RowContainerName.LEFT, "ag-pinned-left-cols-container"],
    [c.RowContainerName.RIGHT, "ag-pinned-right-cols-container"],
    [c.RowContainerName.FULL_WIDTH, "ag-full-width-container"],
    [c.RowContainerName.TOP_CENTER, "ag-floating-top-container"],
    [c.RowContainerName.TOP_LEFT, "ag-pinned-left-floating-top"],
    [c.RowContainerName.TOP_RIGHT, "ag-pinned-right-floating-top"],
    [c.RowContainerName.TOP_FULL_WIDTH, "ag-floating-top-full-width-container"],
    [c.RowContainerName.BOTTOM_CENTER, "ag-floating-bottom-container"],
    [c.RowContainerName.BOTTOM_LEFT, "ag-pinned-left-floating-bottom"],
    [c.RowContainerName.BOTTOM_RIGHT, "ag-pinned-right-floating-bottom"],
    [c.RowContainerName.BOTTOM_FULL_WIDTH, "ag-floating-bottom-full-width-container"]
  ]), Rg = qt([
    [c.RowContainerName.CENTER, "ag-center-cols-viewport"],
    [c.RowContainerName.TOP_CENTER, "ag-floating-top-viewport"],
    [c.RowContainerName.BOTTOM_CENTER, "ag-floating-bottom-viewport"]
  ]), Sg = qt([
    [c.RowContainerName.CENTER, "ag-center-cols-clipper"]
  ]), Vi = (
    /** @class */
    function(n) {
      yg(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return r.name = e, r;
      }
      return t.getRowContainerCssClasses = function(e) {
        var r = Eg.get(e), o = Rg.get(e), i = Sg.get(e);
        return { container: r, viewport: o, wrapper: i };
      }, t.getPinned = function(e) {
        switch (e) {
          case c.RowContainerName.BOTTOM_LEFT:
          case c.RowContainerName.TOP_LEFT:
          case c.RowContainerName.LEFT:
            return E.PINNED_LEFT;
          case c.RowContainerName.BOTTOM_RIGHT:
          case c.RowContainerName.TOP_RIGHT:
          case c.RowContainerName.RIGHT:
            return E.PINNED_RIGHT;
          default:
            return null;
        }
      }, t.prototype.postConstruct = function() {
        var e = this;
        this.enableRtl = this.gridOptionsWrapper.isEnableRtl(), this.embedFullWidthRows = this.gridOptionsWrapper.isEmbedFullWidthRows(), this.forContainers([c.RowContainerName.CENTER], function() {
          return e.viewportSizeFeature = e.createManagedBean(new lg(e));
        });
      }, t.prototype.registerWithCtrlsService = function() {
        switch (this.name) {
          case c.RowContainerName.CENTER:
            this.ctrlsService.registerCenterRowContainerCtrl(this);
            break;
          case c.RowContainerName.LEFT:
            this.ctrlsService.registerLeftRowContainerCtrl(this);
            break;
          case c.RowContainerName.RIGHT:
            this.ctrlsService.registerRightRowContainerCtrl(this);
            break;
          case c.RowContainerName.TOP_CENTER:
            this.ctrlsService.registerTopCenterRowContainerCtrl(this);
            break;
          case c.RowContainerName.TOP_LEFT:
            this.ctrlsService.registerTopLeftRowContainerCon(this);
            break;
          case c.RowContainerName.TOP_RIGHT:
            this.ctrlsService.registerTopRightRowContainerCtrl(this);
            break;
          case c.RowContainerName.BOTTOM_CENTER:
            this.ctrlsService.registerBottomCenterRowContainerCtrl(this);
            break;
          case c.RowContainerName.BOTTOM_LEFT:
            this.ctrlsService.registerBottomLeftRowContainerCtrl(this);
            break;
          case c.RowContainerName.BOTTOM_RIGHT:
            this.ctrlsService.registerBottomRightRowContainerCtrl(this);
            break;
        }
      }, t.prototype.forContainers = function(e, r) {
        e.indexOf(this.name) >= 0 && r();
      }, t.prototype.getContainerElement = function() {
        return this.eContainer;
      }, t.prototype.getViewportSizeFeature = function() {
        return this.viewportSizeFeature;
      }, t.prototype.setComp = function(e, r, o, i) {
        var s = this;
        this.comp = e, this.eContainer = r, this.eViewport = o, this.eWrapper = i, this.createManagedBean(new sg(this.eContainer)), this.addPreventScrollWhileDragging(), this.listenOnDomOrder(), this.stopHScrollOnPinnedRows();
        var a = [c.RowContainerName.TOP_CENTER, c.RowContainerName.TOP_LEFT, c.RowContainerName.TOP_RIGHT], l = [c.RowContainerName.BOTTOM_CENTER, c.RowContainerName.BOTTOM_LEFT, c.RowContainerName.BOTTOM_RIGHT], u = [c.RowContainerName.CENTER, c.RowContainerName.LEFT, c.RowContainerName.RIGHT], p = wg(a, l, u), d = [c.RowContainerName.CENTER, c.RowContainerName.LEFT, c.RowContainerName.RIGHT, c.RowContainerName.FULL_WIDTH], f = [c.RowContainerName.CENTER, c.RowContainerName.TOP_CENTER, c.RowContainerName.BOTTOM_CENTER], v = [c.RowContainerName.LEFT, c.RowContainerName.BOTTOM_LEFT, c.RowContainerName.TOP_LEFT], y = [c.RowContainerName.RIGHT, c.RowContainerName.BOTTOM_RIGHT, c.RowContainerName.TOP_RIGHT];
        this.forContainers(v, function() {
          return s.createManagedBean(new pg(s.eContainer));
        }), this.forContainers(y, function() {
          return s.createManagedBean(new dg(s.eContainer));
        }), this.forContainers(d, function() {
          return s.createManagedBean(new fg(s.eContainer, s.eWrapper));
        }), this.forContainers(p, function() {
          return s.createManagedBean(new vg(s.eContainer));
        }), this.forContainers(f, function() {
          return s.createManagedBean(new Ns(function(R) {
            return s.comp.setContainerWidth(R + "px");
          }));
        }), this.addListeners(), this.registerWithCtrlsService();
      }, t.prototype.addListeners = function() {
        var e = this;
        this.addManagedListener(this.eventService, m.EVENT_SCROLL_VISIBILITY_CHANGED, function() {
          return e.onScrollVisibilityChanged();
        }), this.addManagedListener(this.eventService, m.EVENT_DISPLAYED_COLUMNS_CHANGED, function() {
          return e.onDisplayedColumnsChanged();
        }), this.addManagedListener(this.eventService, m.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, function() {
          return e.onDisplayedColumnsWidthChanged();
        }), this.addManagedListener(this.eventService, m.EVENT_DISPLAYED_ROWS_CHANGED, function() {
          return e.onDisplayedRowsChanged();
        }), this.onScrollVisibilityChanged(), this.onDisplayedColumnsChanged(), this.onDisplayedColumnsWidthChanged(), this.onDisplayedRowsChanged();
      }, t.prototype.listenOnDomOrder = function() {
        var e = this, r = function() {
          return e.comp.setDomOrder(e.gridOptionsWrapper.isEnsureDomOrder());
        };
        this.addManagedListener(this.gridOptionsWrapper, z.PROP_DOM_LAYOUT, r), r();
      }, t.prototype.stopHScrollOnPinnedRows = function() {
        var e = this;
        this.forContainers([c.RowContainerName.TOP_CENTER, c.RowContainerName.BOTTOM_CENTER], function() {
          var r = function() {
            return e.eViewport.scrollLeft = 0;
          };
          e.addManagedListener(e.eViewport, "scroll", r);
        });
      }, t.prototype.onDisplayedColumnsChanged = function() {
        var e = this;
        this.forContainers([c.RowContainerName.CENTER], function() {
          return e.onHorizontalViewportChanged();
        });
      }, t.prototype.onDisplayedColumnsWidthChanged = function() {
        var e = this;
        this.forContainers([c.RowContainerName.CENTER], function() {
          return e.onHorizontalViewportChanged();
        });
      }, t.prototype.onScrollVisibilityChanged = function() {
        if (this.name === c.RowContainerName.CENTER) {
          var e = this.scrollVisibleService.isHorizontalScrollShowing(), r = e && this.gridOptionsWrapper.getScrollbarWidth() || 0, o = r == 0 ? "100%" : "calc(100% + " + r + "px)";
          this.comp.setViewportHeight(o);
        }
      }, t.prototype.addPreventScrollWhileDragging = function() {
        var e = this, r = function(o) {
          e.dragService.isDragging() && o.cancelable && o.preventDefault();
        };
        this.eContainer.addEventListener("touchmove", r, { passive: !1 }), this.addDestroyFunc(function() {
          return e.eContainer.removeEventListener("touchmove", r);
        });
      }, t.prototype.onHorizontalViewportChanged = function() {
        var e = this.getCenterWidth(), r = this.getCenterViewportScrollLeft();
        this.columnModel.setViewportPosition(e, r);
      }, t.prototype.getCenterWidth = function() {
        return Ci(this.eViewport);
      }, t.prototype.getCenterViewportScrollLeft = function() {
        return Ao(this.eViewport, this.enableRtl);
      }, t.prototype.registerViewportResizeListener = function(e) {
        var r = this.resizeObserverService.observeResize(this.eViewport, e);
        this.addDestroyFunc(function() {
          return r();
        });
      }, t.prototype.isViewportVisible = function() {
        return Br(this.eViewport);
      }, t.prototype.isViewportHScrollShowing = function() {
        return Kn(this.eViewport);
      }, t.prototype.getViewportScrollLeft = function() {
        return Ao(this.eViewport, this.enableRtl);
      }, t.prototype.isHorizontalScrollShowing = function() {
        var e = this.gridOptionsWrapper.isAlwaysShowHorizontalScroll();
        return e || Kn(this.eViewport);
      }, t.prototype.getViewportElement = function() {
        return this.eViewport;
      }, t.prototype.setContainerTranslateX = function(e) {
        this.eContainer.style.transform = "translateX(" + e + "px)";
      }, t.prototype.getHScrollPosition = function() {
        var e = {
          left: this.eViewport.scrollLeft,
          right: this.eViewport.scrollLeft + this.eViewport.offsetWidth
        };
        return e;
      }, t.prototype.setCenterViewportScrollLeft = function(e) {
        Ei(this.eViewport, e, this.enableRtl);
      }, t.prototype.onDisplayedRowsChanged = function() {
        var e = this, r = this.name === c.RowContainerName.TOP_FULL_WIDTH || this.name === c.RowContainerName.BOTTOM_FULL_WIDTH || this.name === c.RowContainerName.FULL_WIDTH, o = function(a) {
          var l = a.isFullWidth(), u = e.gridOptionsWrapper.getDomLayout() === E.DOM_LAYOUT_PRINT, p = e.embedFullWidthRows || u, d = r ? !p && l : p || !l;
          return d;
        }, i = this.getRowCtrls(), s = i.filter(o);
        this.comp.setRowCtrls(s);
      }, t.prototype.getRowCtrls = function() {
        switch (this.name) {
          case c.RowContainerName.TOP_CENTER:
          case c.RowContainerName.TOP_LEFT:
          case c.RowContainerName.TOP_RIGHT:
          case c.RowContainerName.TOP_FULL_WIDTH:
            return this.rowRenderer.getTopRowCtrls();
          case c.RowContainerName.BOTTOM_CENTER:
          case c.RowContainerName.BOTTOM_LEFT:
          case c.RowContainerName.BOTTOM_RIGHT:
          case c.RowContainerName.BOTTOM_FULL_WIDTH:
            return this.rowRenderer.getBottomRowCtrls();
          default:
            return this.rowRenderer.getRowCtrls();
        }
      }, Cr([
        h("scrollVisibleService")
      ], t.prototype, "scrollVisibleService", void 0), Cr([
        h("dragService")
      ], t.prototype, "dragService", void 0), Cr([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), Cr([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), Cr([
        h("resizeObserverService")
      ], t.prototype, "resizeObserverService", void 0), Cr([
        h("rowRenderer")
      ], t.prototype, "rowRenderer", void 0), Cr([
        B
      ], t.prototype, "postConstruct", null), t;
    }(H)
  );
  var _g = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), wr = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Og = (
    /* html */
    `<div class="ag-root ag-unselectable" role="grid">
        <ag-header-root ref="gridHeader"></ag-header-root>
        <div class="ag-floating-top" ref="eTop" role="presentation">
            <ag-row-container ref="topLeftContainer" name="` + c.RowContainerName.TOP_LEFT + `"></ag-row-container>
            <ag-row-container ref="topCenterContainer" name="` + c.RowContainerName.TOP_CENTER + `"></ag-row-container>
            <ag-row-container ref="topRightContainer" name="` + c.RowContainerName.TOP_RIGHT + `"></ag-row-container>
            <ag-row-container ref="topFullWidthContainer" name="` + c.RowContainerName.TOP_FULL_WIDTH + `"></ag-row-container>
        </div>
        <div class="ag-body-viewport" ref="eBodyViewport" role="presentation">
            <ag-row-container ref="leftContainer" name="` + c.RowContainerName.LEFT + `"></ag-row-container>
            <ag-row-container ref="centerContainer" name="` + c.RowContainerName.CENTER + `"></ag-row-container>
            <ag-row-container ref="rightContainer" name="` + c.RowContainerName.RIGHT + `"></ag-row-container>
            <ag-row-container ref="fullWidthContainer" name="` + c.RowContainerName.FULL_WIDTH + `"></ag-row-container>
        </div>
        <div class="ag-floating-bottom" ref="eBottom" role="presentation">
            <ag-row-container ref="bottomLeftContainer" name="` + c.RowContainerName.BOTTOM_LEFT + `"></ag-row-container>
            <ag-row-container ref="bottomCenterContainer" name="` + c.RowContainerName.BOTTOM_CENTER + `"></ag-row-container>
            <ag-row-container ref="bottomRightContainer" name="` + c.RowContainerName.BOTTOM_RIGHT + `"></ag-row-container>
            <ag-row-container ref="bottomFullWidthContainer" name="` + c.RowContainerName.BOTTOM_FULL_WIDTH + `"></ag-row-container>
        </div>
        <ag-fake-horizontal-scroll></ag-fake-horizontal-scroll>
        <ag-overlay-wrapper></ag-overlay-wrapper>
    </div>`
  ), su = (
    /** @class */
    function(n) {
      _g(t, n);
      function t() {
        return n.call(this, Og) || this;
      }
      return t.prototype.init = function() {
        var e = this, r = function(i, s) {
          var a = i + "px";
          s.style.minHeight = a, s.style.height = a;
        }, o = {
          setRowAnimationCssOnBodyViewport: function(i, s) {
            return e.setRowAnimationCssOnBodyViewport(i, s);
          },
          setColumnCount: function(i) {
            return Ja(e.getGui(), i);
          },
          setRowCount: function(i) {
            return Za(e.getGui(), i);
          },
          setTopHeight: function(i) {
            return r(i, e.eTop);
          },
          setBottomHeight: function(i) {
            return r(i, e.eBottom);
          },
          setTopDisplay: function(i) {
            return e.eTop.style.display = i;
          },
          setBottomDisplay: function(i) {
            return e.eBottom.style.display = i;
          },
          setColumnMovingCss: function(i, s) {
            return e.addOrRemoveCssClass(Zl, s);
          },
          updateLayoutClasses: function(i, s) {
            var a = e.eBodyViewport.classList;
            a.toggle(c.LayoutCssClasses.AUTO_HEIGHT, s.autoHeight), a.toggle(c.LayoutCssClasses.NORMAL, s.normal), a.toggle(c.LayoutCssClasses.PRINT, s.print), e.addOrRemoveCssClass(c.LayoutCssClasses.AUTO_HEIGHT, s.autoHeight), e.addOrRemoveCssClass(c.LayoutCssClasses.NORMAL, s.normal), e.addOrRemoveCssClass(c.LayoutCssClasses.PRINT, s.print);
          },
          setAlwaysVerticalScrollClass: function(i, s) {
            return e.eBodyViewport.classList.toggle(Ql, s);
          },
          registerBodyViewportResizeListener: function(i) {
            var s = e.resizeObserverService.observeResize(e.eBodyViewport, i);
            e.addDestroyFunc(function() {
              return s();
            });
          },
          setPinnedTopBottomOverflowY: function(i) {
            return e.eTop.style.overflowY = e.eBottom.style.overflowY = i;
          },
          setCellSelectableCss: function(i, s) {
            [e.eTop, e.eBodyViewport, e.eBottom].forEach(function(a) {
              return a.classList.toggle(Xl, s);
            });
          }
        };
        this.ctrl = this.createManagedBean(new Jl()), this.ctrl.setComp(o, this.getGui(), this.eBodyViewport, this.eTop, this.eBottom), (this.rangeService || this.gridOptionsWrapper.isRowSelectionMulti()) && Qa(this.getGui(), !0);
      }, t.prototype.setRowAnimationCssOnBodyViewport = function(e, r) {
        var o = this.eBodyViewport.classList;
        o.toggle(c.RowAnimationCssClasses.ANIMATION_ON, r), o.toggle(c.RowAnimationCssClasses.ANIMATION_OFF, !r);
      }, t.prototype.getFloatingTopBottom = function() {
        return [this.eTop, this.eBottom];
      }, wr([
        h("resizeObserverService")
      ], t.prototype, "resizeObserverService", void 0), wr([
        ve("rangeService")
      ], t.prototype, "rangeService", void 0), wr([
        I("eBodyViewport")
      ], t.prototype, "eBodyViewport", void 0), wr([
        I("eTop")
      ], t.prototype, "eTop", void 0), wr([
        I("eBottom")
      ], t.prototype, "eBottom", void 0), wr([
        I("gridHeader")
      ], t.prototype, "headerRootComp", void 0), wr([
        B
      ], t.prototype, "init", null), t;
    }(le)
  );
  var Ag = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Go = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, au = (
    /** @class */
    function(n) {
      Ag(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.postConstruct = function() {
        this.addManagedListener(this.eventService, m.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this)), this.addManagedListener(this.eventService, m.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onDisplayedColumnsWidthChanged.bind(this));
      }, t.prototype.onDisplayedColumnsChanged = function() {
        this.update();
      }, t.prototype.onDisplayedColumnsWidthChanged = function() {
        this.update();
      }, t.prototype.update = function() {
        this.updateImpl(), setTimeout(this.updateImpl.bind(this), 500);
      }, t.prototype.updateImpl = function() {
        var e = this.ctrlsService.getCenterRowContainerCtrl();
        if (e) {
          var r = {
            horizontalScrollShowing: e.isHorizontalScrollShowing(),
            verticalScrollShowing: this.isVerticalScrollShowing()
          };
          this.setScrollsVisible(r);
        }
      }, t.prototype.setScrollsVisible = function(e) {
        var r = this.horizontalScrollShowing !== e.horizontalScrollShowing || this.verticalScrollShowing !== e.verticalScrollShowing;
        if (r) {
          this.horizontalScrollShowing = e.horizontalScrollShowing, this.verticalScrollShowing = e.verticalScrollShowing;
          var o = {
            type: m.EVENT_SCROLL_VISIBILITY_CHANGED,
            api: this.gridApi,
            columnApi: this.columnApi
          };
          this.eventService.dispatchEvent(o);
        }
      }, t.prototype.isHorizontalScrollShowing = function() {
        return this.horizontalScrollShowing;
      }, t.prototype.isVerticalScrollShowing = function() {
        return this.verticalScrollShowing;
      }, Go([
        h("columnApi")
      ], t.prototype, "columnApi", void 0), Go([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), Go([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), Go([
        B
      ], t.prototype, "postConstruct", null), t = Go([
        j("scrollVisibleService")
      ], t), t;
    }(H)
  );
  var Pg = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), lu = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, uu = (
    /** @class */
    function(n) {
      Pg(t, n);
      function t() {
        var r = n !== null && n.apply(this, arguments) || this;
        return r.gridInstanceId = e.gridInstanceSequence.next(), r;
      }
      e = t, t.prototype.stampTopLevelGridCompWithGridInstance = function(r) {
        r[e.GRID_DOM_KEY] = this.gridInstanceId;
      }, t.prototype.getRenderedCellForEvent = function(r) {
        return hi(this.gridOptionsWrapper, r, er.DOM_DATA_KEY_CELL_CTRL);
      }, t.prototype.isEventFromThisGrid = function(r) {
        var o = this.isElementInThisGrid(r.target);
        return o;
      }, t.prototype.isElementInThisGrid = function(r) {
        for (var o = r; o; ) {
          var i = o[e.GRID_DOM_KEY];
          if (g(i)) {
            var s = i === this.gridInstanceId;
            return s;
          }
          o = o.parentElement;
        }
        return !1;
      }, t.prototype.getCellPositionForEvent = function(r) {
        var o = this.getRenderedCellForEvent(r);
        return o ? o.getCellPosition() : null;
      }, t.prototype.getNormalisedPosition = function(r) {
        var o = this.gridOptionsWrapper.getDomLayout() === E.DOM_LAYOUT_NORMAL, i = r, s, a;
        if (i.clientX != null || i.clientY != null ? (s = i.clientX, a = i.clientY) : (s = i.x, a = i.y), o) {
          var l = this.ctrlsService.getGridBodyCtrl(), u = l.getScrollFeature().getVScrollPosition(), p = l.getScrollFeature().getHScrollPosition();
          s += p.left, a += u.top;
        }
        return { x: s, y: a };
      };
      var e;
      return t.gridInstanceSequence = new gr(), t.GRID_DOM_KEY = "__ag_grid_instance", lu([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), t = e = lu([
        j("mouseEventService")
      ], t), t;
    }(H)
  );
  var Tg = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Wi = function() {
    return Wi = Object.assign || function(n) {
      for (var t, e = 1, r = arguments.length; e < r; e++) {
        t = arguments[e];
        for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
      }
      return n;
    }, Wi.apply(this, arguments);
  }, je = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, pu = (
    /** @class */
    function(n) {
      Tg(t, n);
      function t() {
        var e = n.call(this) || this;
        return e.onPageDown = Mr(e.onPageDown, 100), e.onPageUp = Mr(e.onPageUp, 100), e;
      }
      return t.prototype.postConstruct = function() {
        var e = this;
        this.ctrlsService.whenReady(function(r) {
          e.gridBodyCon = r.gridBodyCtrl;
        });
      }, t.prototype.handlePageScrollingKey = function(e) {
        var r = e.key, o = e.altKey, i = e.ctrlKey || e.metaKey, s = !!this.rangeService && e.shiftKey, a = this.mouseEventService.getCellPositionForEvent(e);
        if (!a)
          return !1;
        var l = !1;
        switch (r) {
          case N.PAGE_HOME:
          case N.PAGE_END:
            !i && !o && (this.onHomeOrEndKey(r), l = !0);
            break;
          case N.LEFT:
          case N.RIGHT:
          case N.UP:
          case N.DOWN:
            i && !o && !s && (this.onCtrlUpDownLeftRight(r, a), l = !0);
            break;
          case N.PAGE_DOWN:
            !i && !o && (this.onPageDown(a), l = !0);
            break;
          case N.PAGE_UP:
            !i && !o && (this.onPageUp(a), l = !0);
            break;
        }
        return l && e.preventDefault(), l;
      }, t.prototype.navigateTo = function(e) {
        var r = e.scrollIndex, o = e.scrollType, i = e.scrollColumn, s = e.focusIndex, a = e.focusColumn;
        if (g(i) && !i.isPinned() && this.gridBodyCon.getScrollFeature().ensureColumnVisible(i), g(r) && this.gridBodyCon.getScrollFeature().ensureIndexVisible(r, o), this.animationFrameService.flushAllFrames(), this.focusService.setFocusedCell(s, a, null, !0), this.rangeService) {
          var l = { rowIndex: s, rowPinned: null, column: a };
          this.rangeService.setRangeToCell(l);
        }
      }, t.prototype.onPageDown = function(e) {
        var r = this.ctrlsService.getGridBodyCtrl(), o = r.getScrollFeature().getVScrollPosition(), i = this.getViewportHeight(), s = this.paginationProxy.getPixelOffset(), a = o.top + i, l = this.paginationProxy.getRowIndexAtPixel(a + s);
        this.columnModel.isAutoRowHeightActive() ? this.navigateToNextPageWithAutoHeight(e, l) : this.navigateToNextPage(e, l);
      }, t.prototype.onPageUp = function(e) {
        var r = this.ctrlsService.getGridBodyCtrl(), o = r.getScrollFeature().getVScrollPosition(), i = this.paginationProxy.getPixelOffset(), s = o.top, a = this.paginationProxy.getRowIndexAtPixel(s + i);
        this.columnModel.isAutoRowHeightActive() ? this.navigateToNextPageWithAutoHeight(e, a, !0) : this.navigateToNextPage(e, a, !0);
      }, t.prototype.navigateToNextPage = function(e, r, o) {
        o === void 0 && (o = !1);
        var i, s, a = this.getViewportHeight(), l = this.paginationProxy.getPageFirstRow(), u = this.paginationProxy.getPageLastRow(), p = this.paginationProxy.getPixelOffset(), d = this.paginationProxy.getRow(e.rowIndex), f = o ? ((i = d) === null || i === void 0 ? void 0 : i.rowHeight) - a - p : a - p, v = ((s = d) === null || s === void 0 ? void 0 : s.rowTop) + f, y = this.paginationProxy.getRowIndexAtPixel(v + p);
        if (y === e.rowIndex) {
          var R = o ? -1 : 1;
          r = y = e.rowIndex + R;
        }
        var _;
        o ? (_ = "bottom", y < l && (y = l), r < l && (r = l)) : (_ = "top", y > u && (y = u), r > u && (r = u)), this.isRowTallerThanView(y) && (r = y, _ = "top"), this.navigateTo({
          scrollIndex: r,
          scrollType: _,
          scrollColumn: null,
          focusIndex: y,
          focusColumn: e.column
        });
      }, t.prototype.navigateToNextPageWithAutoHeight = function(e, r, o) {
        var i = this;
        o === void 0 && (o = !1), this.navigateTo({
          scrollIndex: r,
          scrollType: o ? "bottom" : "top",
          scrollColumn: null,
          focusIndex: r,
          focusColumn: e.column
        }), setTimeout(function() {
          var s = i.getNextFocusIndexForAutoHeight(e, o);
          i.navigateTo({
            scrollIndex: r,
            scrollType: o ? "bottom" : "top",
            scrollColumn: null,
            focusIndex: s,
            focusColumn: e.column
          });
        }, 50);
      }, t.prototype.getNextFocusIndexForAutoHeight = function(e, r) {
        r === void 0 && (r = !1);
        for (var o, i = r ? -1 : 1, s = this.getViewportHeight(), a = this.paginationProxy.getPageLastRow(), l = 0, u = e.rowIndex; u >= 0 && u <= a; ) {
          var p = this.paginationProxy.getRow(u);
          if (p) {
            var d = (o = p.rowHeight, o ?? 0);
            if (l + d > s)
              break;
            l += d;
          }
          u += i;
        }
        return Math.max(0, Math.min(u, a));
      }, t.prototype.getViewportHeight = function() {
        var e = this.ctrlsService.getGridBodyCtrl(), r = e.getScrollFeature().getVScrollPosition(), o = this.gridOptionsWrapper.getScrollbarWidth(), i = r.bottom - r.top;
        return this.ctrlsService.getCenterRowContainerCtrl().isHorizontalScrollShowing() && (i -= o), i;
      }, t.prototype.isRowTallerThanView = function(e) {
        var r = this.paginationProxy.getRow(e);
        if (!r)
          return !1;
        var o = r.rowHeight;
        return typeof o != "number" ? !1 : o > this.getViewportHeight();
      }, t.prototype.onCtrlUpDownLeftRight = function(e, r) {
        var o = this.cellNavigationService.getNextCellToFocus(e, r, !0), i = o.rowIndex, s = o.column;
        this.navigateTo({
          scrollIndex: i,
          scrollType: null,
          scrollColumn: s,
          focusIndex: i,
          focusColumn: s
        });
      }, t.prototype.onHomeOrEndKey = function(e) {
        var r = e === N.PAGE_HOME, o = this.columnModel.getAllDisplayedColumns(), i = r ? o[0] : M(o), s = r ? this.paginationProxy.getPageFirstRow() : this.paginationProxy.getPageLastRow();
        this.navigateTo({
          scrollIndex: s,
          scrollType: null,
          scrollColumn: i,
          focusIndex: s,
          focusColumn: i
        });
      }, t.prototype.onTabKeyDown = function(e, r) {
        var o = r.shiftKey, i = this.tabToNextCellCommon(e, o, r);
        if (i) {
          r.preventDefault();
          return;
        }
        if (o) {
          var s = e.getRowPosition(), a = s.rowIndex, l = s.rowPinned, u = l ? a === 0 : a === this.paginationProxy.getPageFirstRow();
          u && (r.preventDefault(), this.focusService.focusLastHeader(r));
        } else
          e instanceof er && e.focusCell(!0), this.focusService.focusNextGridCoreContainer(o) && r.preventDefault();
      }, t.prototype.tabToNextCell = function(e, r) {
        var o = this.focusService.getFocusedCell();
        if (!o)
          return !1;
        var i = this.getCellByPosition(o);
        return !i && (i = this.rowRenderer.getRowByPosition(o), !i || !i.isFullWidth()) ? !1 : this.tabToNextCellCommon(i, e, r);
      }, t.prototype.tabToNextCellCommon = function(e, r, o) {
        var i = e.isEditing();
        if (!i && e instanceof er) {
          var s = e, a = s.getRowCtrl();
          a && (i = a.isEditing());
        }
        var l;
        return i ? this.gridOptionsWrapper.isFullRowEdit() ? l = this.moveToNextEditingRow(e, r, o) : l = this.moveToNextEditingCell(e, r, o) : l = this.moveToNextCellNotEditing(e, r), l || !!this.focusService.getFocusedHeader();
      }, t.prototype.moveToNextEditingCell = function(e, r, o) {
        o === void 0 && (o = null);
        var i = e.getCellPosition();
        e.stopEditing();
        var s = this.findNextCellToFocusOn(i, r, !0);
        return s == null ? !1 : (s.startEditing(null, null, !0, o), s.focusCell(!1), !0);
      }, t.prototype.moveToNextEditingRow = function(e, r, o) {
        o === void 0 && (o = null);
        var i = e.getCellPosition(), s = this.findNextCellToFocusOn(i, r, !0);
        if (s == null)
          return !1;
        var a = s.getCellPosition(), l = this.isCellEditable(i), u = this.isCellEditable(a), p = a && i.rowIndex === a.rowIndex && i.rowPinned === a.rowPinned;
        if (l && e.setFocusOutOnEditor(), !p) {
          var d = e.getRowCtrl();
          d.stopEditing();
          var f = s.getRowCtrl();
          f.startRowEditing(void 0, void 0, void 0, o);
        }
        return u ? (s.setFocusInOnEditor(), s.focusCell()) : s.focusCell(!0), !0;
      }, t.prototype.moveToNextCellNotEditing = function(e, r) {
        var o = this.columnModel.getAllDisplayedColumns(), i;
        e instanceof tr ? i = Wi(Wi({}, e.getRowPosition()), { column: r ? o[0] : M(o) }) : i = e.getCellPosition();
        var s = this.findNextCellToFocusOn(i, r, !1);
        if (s instanceof er)
          s.focusCell(!0);
        else if (s)
          return this.tryToFocusFullWidthRow(s.getRowPosition(), r);
        return g(s);
      }, t.prototype.findNextCellToFocusOn = function(e, r, o) {
        for (var i = e; ; ) {
          e !== i && (e = i), r || (i = this.getLastCellOfColSpan(i)), i = this.cellNavigationService.getNextTabbedCell(i, r);
          var s = this.gridOptionsWrapper.getTabToNextCellFunc();
          if (g(s)) {
            var a = {
              backwards: r,
              editing: o,
              previousCellPosition: e,
              nextCellPosition: i || null
            }, l = s(a);
            g(l) ? (l.floating && (me(function() {
              console.warn("AG Grid: tabToNextCellFunc return type should have attributes: rowIndex, rowPinned, column. However you had 'floating', maybe you meant 'rowPinned'?");
            }, "no floating in userCell"), l.rowPinned = l.floating), i = {
              rowIndex: l.rowIndex,
              column: l.column,
              rowPinned: l.rowPinned
            }) : i = null;
          }
          if (!i)
            return null;
          if (i.rowIndex < 0) {
            var u = this.headerNavigationService.getHeaderRowCount();
            return this.focusService.focusHeaderPosition({
              headerPosition: {
                headerRowIndex: u + i.rowIndex,
                column: i.column
              }
            }), null;
          }
          var p = this.gridOptionsWrapper.isFullRowEdit();
          if (o && !p) {
            var d = this.isCellEditable(i);
            if (!d)
              continue;
          }
          this.ensureCellVisible(i);
          var f = this.getCellByPosition(i);
          if (!f) {
            var v = this.rowRenderer.getRowByPosition(i);
            if (!v || !v.isFullWidth())
              continue;
            return v;
          }
          if (!f.isSuppressNavigable())
            return this.rangeService && this.rangeService.setRangeToCell(i), f;
        }
      }, t.prototype.isCellEditable = function(e) {
        var r = this.lookupRowNodeForCell(e);
        return r ? e.column.isCellEditable(r) : !1;
      }, t.prototype.getCellByPosition = function(e) {
        var r = this.rowRenderer.getRowByPosition(e);
        return r ? r.getCellCtrl(e.column) : null;
      }, t.prototype.lookupRowNodeForCell = function(e) {
        return e.rowPinned === E.PINNED_TOP ? this.pinnedRowModel.getPinnedTopRow(e.rowIndex) : e.rowPinned === E.PINNED_BOTTOM ? this.pinnedRowModel.getPinnedBottomRow(e.rowIndex) : this.paginationProxy.getRow(e.rowIndex);
      }, t.prototype.navigateToNextCell = function(e, r, o, i) {
        for (var s = o, a = !1; s && (s === o || !this.isValidNavigateCell(s)); )
          this.gridOptionsWrapper.isEnableRtl() ? r === N.LEFT && (s = this.getLastCellOfColSpan(s)) : r === N.RIGHT && (s = this.getLastCellOfColSpan(s)), s = this.cellNavigationService.getNextCellToFocus(r, s), a = C(s);
        if (a && e && e.key === N.UP && (s = {
          rowIndex: -1,
          rowPinned: null,
          column: o.column
        }), i) {
          var l = this.gridOptionsWrapper.getNavigateToNextCellFunc();
          if (g(l)) {
            var u = {
              key: r,
              previousCellPosition: o,
              nextCellPosition: s || null,
              event: e
            }, p = l(u);
            g(p) ? (p.floating && (me(function() {
              console.warn("AG Grid: tabToNextCellFunc return type should have attributes: rowIndex, rowPinned, column. However you had 'floating', maybe you meant 'rowPinned'?");
            }, "no floating in userCell"), p.rowPinned = p.floating), s = {
              rowPinned: p.rowPinned,
              rowIndex: p.rowIndex,
              column: p.column
            }) : s = null;
          }
        }
        if (s) {
          if (s.rowIndex < 0) {
            var d = this.headerNavigationService.getHeaderRowCount();
            this.focusService.focusHeaderPosition({
              headerPosition: { headerRowIndex: d + s.rowIndex, column: o.column },
              event: e || void 0
            });
            return;
          }
          var f = this.getNormalisedPosition(s);
          f ? this.focusPosition(f) : this.tryToFocusFullWidthRow(s);
        }
      }, t.prototype.getNormalisedPosition = function(e) {
        this.ensureCellVisible(e);
        var r = this.getCellByPosition(e);
        return r ? (e = r.getCellPosition(), this.ensureCellVisible(e), e) : null;
      }, t.prototype.tryToFocusFullWidthRow = function(e, r) {
        r === void 0 && (r = !1);
        var o = this.columnModel.getAllDisplayedColumns(), i = this.rowRenderer.getRowByPosition(e);
        if (!i || !i.isFullWidth())
          return !1;
        var s = this.focusService.getFocusedCell(), a = {
          rowIndex: e.rowIndex,
          rowPinned: e.rowPinned,
          column: e.column || (r ? M(o) : o[0])
        };
        this.focusPosition(a);
        var l = s != null ? this.rowPositionUtils.before(a, s) : !1, u = {
          type: m.EVENT_FULL_WIDTH_ROW_FOCUSED,
          api: this.gridApi,
          columnApi: this.columnApi,
          rowIndex: a.rowIndex,
          rowPinned: a.rowPinned,
          column: a.column,
          isFullWidthCell: !0,
          floating: a.rowPinned,
          fromBelow: l
        };
        return this.eventService.dispatchEvent(u), !0;
      }, t.prototype.focusPosition = function(e) {
        this.focusService.setFocusedCell(e.rowIndex, e.column, e.rowPinned, !0), this.rangeService && this.rangeService.setRangeToCell(e);
      }, t.prototype.isValidNavigateCell = function(e) {
        var r = this.rowPositionUtils.getRowNode(e);
        return !!r;
      }, t.prototype.getLastCellOfColSpan = function(e) {
        var r = this.getCellByPosition(e);
        if (!r)
          return e;
        var o = r.getColSpanningList();
        return o.length === 1 ? e : {
          rowIndex: e.rowIndex,
          column: M(o),
          rowPinned: e.rowPinned
        };
      }, t.prototype.ensureCellVisible = function(e) {
        C(e.rowPinned) && this.gridBodyCon.getScrollFeature().ensureIndexVisible(e.rowIndex), e.column.isPinned() || this.gridBodyCon.getScrollFeature().ensureColumnVisible(e.column), this.gridBodyCon.getScrollFeature().horizontallyScrollHeaderCenterAndFloatingCenter(), this.animationFrameService.flushAllFrames();
      }, je([
        h("columnApi")
      ], t.prototype, "columnApi", void 0), je([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), je([
        h("mouseEventService")
      ], t.prototype, "mouseEventService", void 0), je([
        h("paginationProxy")
      ], t.prototype, "paginationProxy", void 0), je([
        h("focusService")
      ], t.prototype, "focusService", void 0), je([
        h("animationFrameService")
      ], t.prototype, "animationFrameService", void 0), je([
        ve("rangeService")
      ], t.prototype, "rangeService", void 0), je([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), je([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), je([
        h("rowRenderer")
      ], t.prototype, "rowRenderer", void 0), je([
        h("headerNavigationService")
      ], t.prototype, "headerNavigationService", void 0), je([
        h("rowPositionUtils")
      ], t.prototype, "rowPositionUtils", void 0), je([
        h("cellNavigationService")
      ], t.prototype, "cellNavigationService", void 0), je([
        h("pinnedRowModel")
      ], t.prototype, "pinnedRowModel", void 0), je([
        B
      ], t.prototype, "postConstruct", null), t = je([
        j("navigationService")
      ], t), t;
    }(H)
  );
  var Dg = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), bg = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, cu = (
    /** @class */
    function(n) {
      Dg(t, n);
      function t(e) {
        var r = n.call(
          this,
          /* html */
          '<div class="ag-popup-editor" tabindex="-1"/>'
        ) || this;
        return r.params = e, r;
      }
      return t.prototype.postConstruct = function() {
        this.gridOptionsWrapper.setDomData(this.getGui(), t.DOM_KEY_POPUP_EDITOR_WRAPPER, !0), this.addKeyDownListener();
      }, t.prototype.addKeyDownListener = function() {
        var e = this, r = this.getGui(), o = this.params, i = function(s) {
          Si(e.gridOptionsWrapper, s, o.node, o.column, !0) || o.onKeyDown(s);
        };
        this.addManagedListener(r, "keydown", i);
      }, t.DOM_KEY_POPUP_EDITOR_WRAPPER = "popupEditorWrapper", bg([
        B
      ], t.prototype, "postConstruct", null), t;
    }(Ur)
  );
  var Fg = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), du = (
    /** @class */
    function(n) {
      Fg(t, n);
      function t(e, r, o, i, s) {
        var a = n.call(this) || this;
        a.rendererVersion = 0, a.editorVersion = 0, a.beans = e, a.column = r.getColumn(), a.rowNode = r.getRowNode(), a.rowCtrl = r.getRowCtrl(), a.eRow = i, a.setTemplate(
          /* html */
          '<div comp-id="' + a.getCompId() + '"/>'
        );
        var l = a.getGui();
        a.forceWrapper = r.isForceWrapper(), a.refreshWrapper(!1);
        var u = function(d, f, v) {
          var y = l;
          f != null && f != "" ? y.setAttribute(d, f) : y.removeAttribute(d);
        }, p = {
          addOrRemoveCssClass: function(d, f) {
            return a.addOrRemoveCssClass(d, f);
          },
          setUserStyles: function(d) {
            return $n(l, d);
          },
          getFocusableElement: function() {
            return a.getFocusableElement();
          },
          setTabIndex: function(d) {
            return u("tabindex", d.toString());
          },
          setRole: function(d) {
            return ke(l, d);
          },
          setColId: function(d) {
            return u("col-id", d);
          },
          setTitle: function(d) {
            return u("title", d);
          },
          setIncludeSelection: function(d) {
            return a.includeSelection = d;
          },
          setIncludeRowDrag: function(d) {
            return a.includeRowDrag = d;
          },
          setIncludeDndSource: function(d) {
            return a.includeDndSource = d;
          },
          setRenderDetails: function(d, f, v) {
            return a.setRenderDetails(d, f, v);
          },
          setEditDetails: function(d, f, v) {
            return a.setEditDetails(d, f, v);
          },
          getCellEditor: function() {
            return a.cellEditor || null;
          },
          getCellRenderer: function() {
            return a.cellRenderer || null;
          },
          getParentOfValue: function() {
            return a.getParentOfValue();
          }
        };
        return a.cellCtrl = r, r.setComp(p, a.getGui(), a.eCellWrapper, o, s), a;
      }
      return t.prototype.getParentOfValue = function() {
        return this.eCellValue ? this.eCellValue : this.eCellWrapper ? this.eCellWrapper : this.getGui();
      }, t.prototype.setRenderDetails = function(e, r, o) {
        var i = this.cellEditor && !this.cellEditorPopupWrapper;
        if (!i) {
          this.firstRender = this.firstRender == null;
          var s = this.refreshWrapper(!1);
          if (e) {
            var a = o || s, l = a ? !1 : this.refreshCellRenderer(e);
            l || (this.destroyRenderer(), this.createCellRendererInstance(e));
          } else
            this.destroyRenderer(), this.insertValueWithoutCellRenderer(r);
        }
      }, t.prototype.setEditDetails = function(e, r, o) {
        e ? this.createCellEditorInstance(e, r, o) : this.destroyEditor();
      }, t.prototype.removeControls = function() {
        this.checkboxSelectionComp = this.beans.context.destroyBean(this.checkboxSelectionComp), this.dndSourceComp = this.beans.context.destroyBean(this.dndSourceComp), this.rowDraggingComp = this.beans.context.destroyBean(this.rowDraggingComp);
      }, t.prototype.refreshWrapper = function(e) {
        var r = this.includeRowDrag || this.includeDndSource || this.includeSelection, o = r || this.forceWrapper, i = o && this.eCellWrapper == null;
        i && (this.eCellWrapper = xe('<div class="ag-cell-wrapper" role="presentation"></div>'), this.getGui().appendChild(this.eCellWrapper));
        var s = !o && this.eCellWrapper != null;
        s && (gt(this.eCellWrapper), this.eCellWrapper = void 0), this.addOrRemoveCssClass("ag-cell-value", !o);
        var a = !e && o, l = a && this.eCellValue == null;
        l && (this.eCellValue = xe('<span class="ag-cell-value" role="presentation"></span>'), this.eCellWrapper.appendChild(this.eCellValue));
        var u = !a && this.eCellValue != null;
        u && (gt(this.eCellValue), this.eCellValue = void 0);
        var p = i || s || l || u;
        return p && this.removeControls(), !e && r && this.addControls(), p;
      }, t.prototype.addControls = function() {
        var e = this.eCellValue.id = "cell-" + this.getCompId(), r = [];
        this.includeRowDrag && this.rowDraggingComp == null && (this.rowDraggingComp = this.cellCtrl.createRowDragComp(), this.rowDraggingComp && this.eCellWrapper.insertBefore(this.rowDraggingComp.getGui(), this.eCellValue)), this.includeDndSource && this.dndSourceComp == null && (this.dndSourceComp = this.cellCtrl.createDndSource(), this.eCellWrapper.insertBefore(this.dndSourceComp.getGui(), this.eCellValue)), this.includeSelection && (this.checkboxSelectionComp == null && (this.checkboxSelectionComp = this.cellCtrl.createSelectionCheckbox(), this.eCellWrapper.insertBefore(this.checkboxSelectionComp.getGui(), this.eCellValue)), r.push(this.checkboxSelectionComp.getCheckboxId())), r.push(e), Qn(this.getGui(), r.join(" "));
      }, t.prototype.createCellEditorInstance = function(e, r, o) {
        var i = this, s = this.editorVersion, a = e.newAgStackInstance();
        if (a) {
          var l = e.params;
          a.then(function(p) {
            return i.afterCellEditorCreated(s, p, l, r, o);
          });
          var u = C(this.cellEditor);
          u && l.cellStartedEdit && this.cellCtrl.focusCell(!0);
        }
      }, t.prototype.insertValueWithoutCellRenderer = function(e) {
        var r = this.getParentOfValue();
        et(r);
        var o = e != null ? Ot(e) : null;
        o != null && (r.innerHTML = o);
      }, t.prototype.destroyEditorAndRenderer = function() {
        this.destroyRenderer(), this.destroyEditor();
      }, t.prototype.destroyRenderer = function() {
        var e = this.beans.context;
        this.cellRenderer = e.destroyBean(this.cellRenderer), gt(this.cellRendererGui), this.cellRendererGui = null, this.rendererVersion++;
      }, t.prototype.destroyEditor = function() {
        var e = this.beans.context;
        this.hideEditorPopup && this.hideEditorPopup(), this.hideEditorPopup = void 0, this.cellEditor = e.destroyBean(this.cellEditor), this.cellEditorPopupWrapper = e.destroyBean(this.cellEditorPopupWrapper), gt(this.cellEditorGui), this.cellEditorGui = null, this.editorVersion++;
      }, t.prototype.refreshCellRenderer = function(e) {
        if (this.cellRenderer == null || this.cellRenderer.refresh == null || this.cellRendererClass !== e.componentClass)
          return !1;
        var r = this.cellRenderer.refresh(e.params);
        return r === !0 || r === void 0;
      }, t.prototype.createCellRendererInstance = function(e) {
        var r = this, o = this.beans.gridOptionsWrapper.isAngularCompileRows(), i = this.beans.gridOptionsWrapper.isSuppressAnimationFrame(), s = !o && !i, a = this.rendererVersion, l = e.componentClass, u = function() {
          var p = r.rendererVersion !== a || !r.isAlive();
          if (!p) {
            var d = e.newAgStackInstance(), f = r.afterCellRendererCreated.bind(r, a, l);
            d && d.then(f);
          }
        };
        s && this.firstRender ? this.beans.animationFrameService.createTask(u, this.rowNode.rowIndex, "createTasksP2") : u();
      }, t.prototype.getCtrl = function() {
        return this.cellCtrl;
      }, t.prototype.getRowCtrl = function() {
        return this.rowCtrl;
      }, t.prototype.getCellRenderer = function() {
        return this.cellRenderer;
      }, t.prototype.getCellEditor = function() {
        return this.cellEditor;
      }, t.prototype.afterCellRendererCreated = function(e, r, o) {
        var i = !this.isAlive() || e !== this.rendererVersion;
        if (i) {
          this.beans.context.destroyBean(o);
          return;
        }
        if (this.cellRenderer = o, this.cellRendererClass = r, this.cellRendererGui = this.cellRenderer.getGui(), this.cellRendererGui != null) {
          var s = this.getParentOfValue();
          et(s), s.appendChild(this.cellRendererGui);
        }
      }, t.prototype.afterCellEditorCreated = function(e, r, o, i, s) {
        var a = e !== this.editorVersion;
        if (a) {
          this.beans.context.destroyBean(r);
          return;
        }
        var l = r.isCancelBeforeStart && r.isCancelBeforeStart();
        if (l) {
          this.beans.context.destroyBean(r), this.cellCtrl.stopEditing();
          return;
        }
        if (!r.getGui) {
          console.warn("AG Grid: cellEditor for column " + this.column.getId() + " is missing getGui() method"), this.beans.context.destroyBean(r);
          return;
        }
        this.cellEditor = r, this.cellEditorGui = r.getGui();
        var u = i || r.isPopup !== void 0 && r.isPopup();
        u ? (i || this.cellCtrl.hackSayEditingInPopup(), this.addPopupCellEditor(o, s)) : this.addInCellEditor(), r.afterGuiAttached && r.afterGuiAttached();
      }, t.prototype.addInCellEditor = function() {
        var e = this.getGui(), r = this.beans.gridOptionsWrapper.getDocument();
        if (e.contains(r.activeElement) && e.focus(), this.destroyRenderer(), this.refreshWrapper(!0), this.clearParentOfValue(), this.cellEditorGui) {
          var o = this.getParentOfValue();
          o.appendChild(this.cellEditorGui);
        }
      }, t.prototype.addPopupCellEditor = function(e, r) {
        var o = this;
        this.beans.gridOptionsWrapper.isFullRowEdit() && console.warn("AG Grid: popup cellEditor does not work with fullRowEdit - you cannot use them both - either turn off fullRowEdit, or stop using popup editors.");
        var i = this.cellEditor;
        this.cellEditorPopupWrapper = this.beans.context.createBean(new cu(e));
        var s = this.cellEditorPopupWrapper.getGui();
        this.cellEditorGui && s.appendChild(this.cellEditorGui);
        var a = this.beans.popupService, l = this.beans.gridOptionsWrapper.isStopEditingWhenCellsLoseFocus(), u = r ?? (i.getPopupPosition ? i.getPopupPosition() : "over"), p = {
          column: this.column,
          rowNode: this.rowNode,
          type: "popupCellEditor",
          eventSource: this.getGui(),
          ePopup: s,
          keepWithinBounds: !0
        }, d = u === "under" ? a.positionPopupUnderComponent.bind(a, p) : a.positionPopupOverComponent.bind(a, p), f = this.beans.gridOptionsWrapper.getLocaleTextFunc(), v = a.addPopup({
          modal: l,
          eChild: s,
          closeOnEsc: !0,
          closedCallback: function() {
            o.cellCtrl.onPopupEditorClosed();
          },
          anchorToElement: this.getGui(),
          positionCallback: d,
          ariaLabel: f("ariaLabelCellEditor", "Cell Editor")
        });
        v && (this.hideEditorPopup = v.hideFunc);
      }, t.prototype.detach = function() {
        this.eRow.removeChild(this.getGui());
      }, t.prototype.destroy = function() {
        this.cellCtrl.stopEditing(), this.destroyEditorAndRenderer(), this.removeControls(), n.prototype.destroy.call(this);
      }, t.prototype.clearParentOfValue = function() {
        var e = this.getGui(), r = this.beans.gridOptionsWrapper.getDocument();
        e.contains(r.activeElement) && e.focus({
          preventScroll: !0
        }), et(this.getParentOfValue());
      }, t;
    }(le)
  );
  var Lg = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Mg = (
    /** @class */
    function(n) {
      Lg(t, n);
      function t(e, r, o) {
        var i = n.call(this) || this;
        i.cellComps = {}, i.beans = r, i.rowCtrl = e, i.setTemplate(
          /* html */
          '<div comp-id="' + i.getCompId() + '" style="' + i.getInitialStyle() + '"/>'
        );
        var s = i.getGui(), a = s.style, l = {
          setDomOrder: function(u) {
            return i.domOrder = u;
          },
          setCellCtrls: function(u) {
            return i.setCellCtrls(u);
          },
          showFullWidth: function(u) {
            return i.showFullWidth(u);
          },
          getFullWidthCellRenderer: function() {
            return i.getFullWidthCellRenderer();
          },
          addOrRemoveCssClass: function(u, p) {
            return i.addOrRemoveCssClass(u, p);
          },
          setUserStyles: function(u) {
            return $n(s, u);
          },
          setTop: function(u) {
            return a.top = u;
          },
          setTransform: function(u) {
            return a.transform = u;
          },
          setRowIndex: function(u) {
            return s.setAttribute("row-index", u);
          },
          setRole: function(u) {
            return ke(s, u);
          },
          setRowId: function(u) {
            return s.setAttribute("row-id", u);
          },
          setRowBusinessKey: function(u) {
            return s.setAttribute("row-business-key", u);
          },
          setTabIndex: function(u) {
            return s.setAttribute("tabindex", u.toString());
          }
        };
        return e.setComp(l, i.getGui(), o), i;
      }
      return t.prototype.getInitialStyle = function() {
        var e = this.rowCtrl.getInitialTransform(), r = this.rowCtrl.getInitialRowTop();
        return e ? "transform: " + e : "top: " + r;
      }, t.prototype.showFullWidth = function(e) {
        var r = this, o = function(s) {
          if (r.isAlive()) {
            var a = s.getGui();
            r.getGui().appendChild(a), r.rowCtrl.setupDetailRowAutoHeight(a), r.setFullWidthRowComp(s);
          } else
            r.beans.context.destroyBean(s);
        }, i = e.newAgStackInstance();
        i && i.then(o);
      }, t.prototype.setCellCtrls = function(e) {
        var r = this, o = Object.assign({}, this.cellComps);
        e.forEach(function(s) {
          var a = s.getInstanceId(), l = r.cellComps[a];
          l == null ? r.newCellComp(s) : o[a] = null;
        });
        var i = Se(o).filter(function(s) {
          return s != null;
        });
        this.destroyCells(i), this.ensureDomOrder(e);
      }, t.prototype.ensureDomOrder = function(e) {
        var r = this;
        if (this.domOrder) {
          var o = [];
          e.forEach(function(i) {
            var s = r.cellComps[i.getInstanceId()];
            s && o.push(s.getGui());
          }), zn(this.getGui(), o);
        }
      }, t.prototype.newCellComp = function(e) {
        var r = new du(this.beans, e, this.rowCtrl.isPrintLayout(), this.getGui(), this.rowCtrl.isEditing());
        this.cellComps[e.getInstanceId()] = r, this.getGui().appendChild(r.getGui());
      }, t.prototype.destroy = function() {
        n.prototype.destroy.call(this), this.destroyAllCells();
      }, t.prototype.destroyAllCells = function() {
        var e = Se(this.cellComps).filter(function(r) {
          return r != null;
        });
        this.destroyCells(e);
      }, t.prototype.setFullWidthRowComp = function(e) {
        var r = this;
        this.fullWidthCellRenderer && console.error("AG Grid - should not be setting fullWidthRowComponent twice"), this.fullWidthCellRenderer = e, this.addDestroyFunc(function() {
          r.fullWidthCellRenderer = r.beans.context.destroyBean(r.fullWidthCellRenderer);
        });
      }, t.prototype.getFullWidthCellRenderer = function() {
        return this.fullWidthCellRenderer;
      }, t.prototype.destroyCells = function(e) {
        var r = this;
        e.forEach(function(o) {
          if (o) {
            var i = o.getCtrl().getInstanceId();
            r.cellComps[i] === o && (o.detach(), o.destroy(), r.cellComps[i] = null);
          }
        });
      }, t;
    }(le)
  );
  var Ig = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), xs = function() {
    return xs = Object.assign || function(n) {
      for (var t, e = 1, r = arguments.length; e < r; e++) {
        t = arguments[e];
        for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
      }
      return n;
    }, xs.apply(this, arguments);
  }, $r = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  };
  function Ng() {
    var n = le.elementGettingCreated.getAttribute("name"), t = Vi.getRowContainerCssClasses(n), e, r = n === c.RowContainerName.CENTER, o = n === c.RowContainerName.TOP_CENTER || n === c.RowContainerName.BOTTOM_CENTER;
    return r ? e = /* html */
    '<div class="' + t.wrapper + `" ref="eWrapper" role="presentation">
                <div class="` + t.viewport + `" ref="eViewport" role="presentation">
                    <div class="` + t.container + `" ref="eContainer"></div>
                </div>
            </div>` : o ? e = /* html */
    '<div class="' + t.viewport + `" ref="eViewport" role="presentation">
                <div class="` + t.container + `" ref="eContainer"></div>
            </div>` : e = /* html */
    '<div class="' + t.container + '" ref="eContainer"></div>', e;
  }
  var hu = (
    /** @class */
    function(n) {
      Ig(t, n);
      function t() {
        var e = n.call(this, Ng()) || this;
        return e.rowComps = {}, e.name = le.elementGettingCreated.getAttribute("name"), e.type = nu(e.name), e;
      }
      return t.prototype.postConstruct = function() {
        var e = this, r = {
          setViewportHeight: function(i) {
            return e.eViewport.style.height = i;
          },
          setRowCtrls: function(i) {
            return e.setRowCtrls(i);
          },
          setDomOrder: function(i) {
            e.domOrder = i;
          },
          setContainerWidth: function(i) {
            return e.eContainer.style.width = i;
          }
        }, o = this.createManagedBean(new Vi(this.name));
        o.setComp(r, this.eContainer, this.eViewport, this.eWrapper);
      }, t.prototype.preDestroy = function() {
        this.setRowCtrls([]);
      }, t.prototype.setRowCtrls = function(e) {
        var r = this, o = xs({}, this.rowComps);
        this.rowComps = {}, this.lastPlacedElement = null;
        var i = function(s) {
          var a = s.getInstanceId(), l = o[a];
          if (l)
            r.rowComps[a] = l, delete o[a], r.ensureDomOrder(l.getGui());
          else {
            var u = r.newRowComp(s);
            r.rowComps[a] = u, r.appendRow(u.getGui());
          }
        };
        e.forEach(i), Se(o).forEach(function(s) {
          r.eContainer.removeChild(s.getGui()), s.destroy();
        }), ke(this.eContainer, e.length ? "rowgroup" : "presentation");
      }, t.prototype.appendRow = function(e) {
        this.domOrder ? Ha(this.eContainer, e, this.lastPlacedElement) : this.eContainer.appendChild(e), this.lastPlacedElement = e;
      }, t.prototype.ensureDomOrder = function(e) {
        this.domOrder && (jn(this.eContainer, e, this.lastPlacedElement), this.lastPlacedElement = e);
      }, t.prototype.newRowComp = function(e) {
        Vi.getPinned(this.name);
        var r = new Mg(e, this.beans, this.type);
        return r;
      }, $r([
        h("beans")
      ], t.prototype, "beans", void 0), $r([
        I("eViewport")
      ], t.prototype, "eViewport", void 0), $r([
        I("eContainer")
      ], t.prototype, "eContainer", void 0), $r([
        I("eWrapper")
      ], t.prototype, "eWrapper", void 0), $r([
        B
      ], t.prototype, "postConstruct", null), $r([
        De
      ], t.prototype, "preDestroy", null), t;
    }(le)
  );
  var fu = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, gu = (
    /** @class */
    function() {
      function n(t) {
        this.columnsToAggregate = [], this.columnsToGroup = [], this.columnsToPivot = [], this.pinned = t;
      }
      return n.prototype.onDragEnter = function(t) {
        var e = this;
        if (this.clearColumnsList(), !this.gridOptionsWrapper.isFunctionsReadOnly()) {
          var r = t.dragItem.columns;
          r && r.forEach(function(o) {
            o.isPrimary() && (o.isAnyFunctionActive() || (o.isAllowValue() ? e.columnsToAggregate.push(o) : o.isAllowRowGroup() ? e.columnsToGroup.push(o) : o.isAllowPivot() && e.columnsToPivot.push(o)));
          });
        }
      }, n.prototype.getIconName = function() {
        var t = this.columnsToAggregate.length + this.columnsToGroup.length + this.columnsToPivot.length;
        return t > 0 ? this.pinned ? $e.ICON_PINNED : $e.ICON_MOVE : null;
      }, n.prototype.onDragLeave = function(t) {
        this.clearColumnsList();
      }, n.prototype.clearColumnsList = function() {
        this.columnsToAggregate.length = 0, this.columnsToGroup.length = 0, this.columnsToPivot.length = 0;
      }, n.prototype.onDragging = function(t) {
      }, n.prototype.onDragStop = function(t) {
        this.columnsToAggregate.length > 0 && this.columnModel.addValueColumns(this.columnsToAggregate, "toolPanelDragAndDrop"), this.columnsToGroup.length > 0 && this.columnModel.addRowGroupColumns(this.columnsToGroup, "toolPanelDragAndDrop"), this.columnsToPivot.length > 0 && this.columnModel.addPivotColumns(this.columnsToPivot, "toolPanelDragAndDrop");
      }, fu([
        h("columnModel")
      ], n.prototype, "columnModel", void 0), fu([
        h("gridOptionsWrapper")
      ], n.prototype, "gridOptionsWrapper", void 0), n;
    }()
  );
  var Ho = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, vu = (
    /** @class */
    function() {
      function n(t, e) {
        this.needToMoveLeft = !1, this.needToMoveRight = !1, this.pinned = t, this.eContainer = e, this.centerContainer = !g(t);
      }
      return n.prototype.init = function() {
        var t = this;
        this.ctrlsService.whenReady(function() {
          t.gridBodyCon = t.ctrlsService.getGridBodyCtrl();
        });
      }, n.prototype.getIconName = function() {
        return this.pinned ? $e.ICON_PINNED : $e.ICON_MOVE;
      }, n.prototype.onDragEnter = function(t) {
        var e = t.dragItem.columns, r = t.dragSource.type === c.DragSourceType.ToolPanel;
        if (r)
          this.setColumnsVisible(e, !0, "uiColumnDragged");
        else {
          var o = t.dragItem.visibleState, i = (e || []).filter(function(s) {
            return o[s.getId()];
          });
          this.setColumnsVisible(i, !0, "uiColumnDragged");
        }
        this.setColumnsPinned(e, this.pinned, "uiColumnDragged"), this.onDragging(t, !0);
      }, n.prototype.onDragLeave = function(t) {
        var e = !this.gridOptionsWrapper.isSuppressDragLeaveHidesColumns() && !t.fromNudge;
        if (e) {
          var r = t.dragSource.getDragItem(), o = r.columns;
          this.setColumnsVisible(o, !1, "uiColumnDragged");
        }
        this.ensureIntervalCleared();
      }, n.prototype.setColumnsVisible = function(t, e, r) {
        if (r === void 0 && (r = "api"), t) {
          var o = t.filter(function(i) {
            return !i.getColDef().lockVisible;
          });
          this.columnModel.setColumnsVisible(o, e, r);
        }
      }, n.prototype.setColumnsPinned = function(t, e, r) {
        if (r === void 0 && (r = "api"), t) {
          var o = t.filter(function(i) {
            return !i.getColDef().lockPinned;
          });
          this.columnModel.setColumnsPinned(o, e, r);
        }
      }, n.prototype.onDragStop = function() {
        this.ensureIntervalCleared();
      }, n.prototype.normaliseX = function(t) {
        if (this.gridOptionsWrapper.isEnableRtl()) {
          var e = this.eContainer.clientWidth;
          t = e - t;
        }
        return this.centerContainer && (t += this.ctrlsService.getCenterRowContainerCtrl().getCenterViewportScrollLeft()), t;
      }, n.prototype.checkCenterForScrolling = function(t) {
        if (this.centerContainer) {
          var e = this.ctrlsService.getCenterRowContainerCtrl().getCenterViewportScrollLeft(), r = e + this.ctrlsService.getCenterRowContainerCtrl().getCenterWidth();
          this.gridOptionsWrapper.isEnableRtl() ? (this.needToMoveRight = t < e + 50, this.needToMoveLeft = t > r - 50) : (this.needToMoveLeft = t < e + 50, this.needToMoveRight = t > r - 50), this.needToMoveLeft || this.needToMoveRight ? this.ensureIntervalStarted() : this.ensureIntervalCleared();
        }
      }, n.prototype.onDragging = function(t, e) {
        var r = this;
        if (e === void 0 && (e = !1), this.lastDraggingEvent = t, !C(t.hDirection)) {
          var o = this.normaliseX(t.x);
          e || this.checkCenterForScrolling(o);
          var i = this.normaliseDirection(t.hDirection), s = t.dragSource.type, a = t.dragSource.getDragItem().columns;
          a = a.filter(function(l) {
            return l.getColDef().lockPinned ? l.getPinned() == r.pinned : !0;
          }), this.attemptMoveColumns(s, a, i, o, e);
        }
      }, n.prototype.normaliseDirection = function(t) {
        if (this.gridOptionsWrapper.isEnableRtl())
          switch (t) {
            case c.HorizontalDirection.Left:
              return c.HorizontalDirection.Right;
            case c.HorizontalDirection.Right:
              return c.HorizontalDirection.Left;
            default:
              console.error("AG Grid: Unknown direction " + t);
          }
        else
          return t;
      }, n.prototype.calculateOldIndex = function(t) {
        var e = this.columnModel.getAllGridColumns(), r = Ve(t.map(function(l) {
          return e.indexOf(l);
        })), o = r[0], i = M(r), s = i - o, a = s !== r.length - 1;
        return a ? null : o;
      }, n.prototype.attemptMoveColumns = function(t, e, r, o, i) {
        var s = r === c.HorizontalDirection.Left, a = r === c.HorizontalDirection.Right, l = e.slice();
        this.columnModel.sortColumnsLikeGridColumns(l);
        var u = this.calculateValidMoves(l, a, o), p = this.calculateOldIndex(l);
        if (u.length !== 0) {
          var d = u[0], f = p !== null && !i;
          if (t == c.DragSourceType.HeaderCell && (f = p !== null), !(f && (s && d >= p || a && d <= p)))
            for (var v = 0; v < u.length; v++) {
              var y = u[v];
              if (this.columnModel.doesMovePassRules(l, y)) {
                this.columnModel.moveColumns(l, y, "uiColumnDragged");
                return;
              }
            }
        }
      }, n.prototype.calculateValidMoves = function(t, e, r) {
        var o = this.gridOptionsWrapper.isSuppressMovableColumns() || t.some(function(de) {
          return de.getColDef().suppressMovable;
        });
        if (o)
          return [];
        var i = this.columnModel.getDisplayedColumns(this.pinned), s = this.columnModel.getAllGridColumns(), a = i.filter(function(de) {
          return Le(t, de);
        }), l = i.filter(function(de) {
          return !Le(t, de);
        }), u = s.filter(function(de) {
          return !Le(t, de);
        }), p = 0, d = r;
        if (e) {
          var f = 0;
          a.forEach(function(de) {
            return f += de.getActualWidth();
          }), d -= f;
        }
        if (d > 0) {
          for (var v = 0; v < l.length; v++) {
            var y = l[v];
            if (d -= y.getActualWidth(), d < 0)
              break;
            p++;
          }
          e && p++;
        }
        var R;
        if (p > 0) {
          var _ = l[p - 1];
          R = u.indexOf(_) + 1;
        } else
          R = u.indexOf(l[0]), R === -1 && (R = 0);
        var D = [R], P = function(de, J) {
          return de - J;
        };
        if (e) {
          for (var F = R + 1, U = s.length - 1; F <= U; )
            D.push(F), F++;
          D.sort(P);
        } else {
          for (var F = R, U = s.length - 1, X = s[F]; F <= U && this.isColumnHidden(i, X); )
            F++, D.push(F), X = s[F];
          F = R - 1;
          for (var ce = 0; F >= ce; )
            D.push(F), F--;
          D.sort(P).reverse();
        }
        return D;
      }, n.prototype.isColumnHidden = function(t, e) {
        return t.indexOf(e) < 0;
      }, n.prototype.ensureIntervalStarted = function() {
        this.movingIntervalId || (this.intervalCount = 0, this.failedMoveAttempts = 0, this.movingIntervalId = window.setInterval(this.moveInterval.bind(this), 100), this.needToMoveLeft ? this.dragAndDropService.setGhostIcon($e.ICON_LEFT, !0) : this.dragAndDropService.setGhostIcon($e.ICON_RIGHT, !0));
      }, n.prototype.ensureIntervalCleared = function() {
        this.movingIntervalId && (window.clearInterval(this.movingIntervalId), this.movingIntervalId = null, this.dragAndDropService.setGhostIcon($e.ICON_MOVE));
      }, n.prototype.moveInterval = function() {
        var t;
        this.intervalCount++, t = 10 + this.intervalCount * 5, t > 100 && (t = 100);
        var e = null, r = this.gridBodyCon.getScrollFeature();
        if (this.needToMoveLeft ? e = r.scrollHorizontally(-t) : this.needToMoveRight && (e = r.scrollHorizontally(t)), e !== 0)
          this.onDragging(this.lastDraggingEvent), this.failedMoveAttempts = 0;
        else {
          this.failedMoveAttempts++;
          var o = this.lastDraggingEvent.dragItem.columns, i = o.filter(function(a) {
            return !a.getColDef().lockPinned;
          });
          if (i.length > 0 && (this.dragAndDropService.setGhostIcon($e.ICON_PINNED), this.failedMoveAttempts > 7)) {
            var s = this.needToMoveLeft ? E.PINNED_LEFT : E.PINNED_RIGHT;
            this.setColumnsPinned(i, s, "uiColumnDragged"), this.dragAndDropService.nudge();
          }
        }
      }, Ho([
        h("columnModel")
      ], n.prototype, "columnModel", void 0), Ho([
        h("dragAndDropService")
      ], n.prototype, "dragAndDropService", void 0), Ho([
        h("gridOptionsWrapper")
      ], n.prototype, "gridOptionsWrapper", void 0), Ho([
        h("ctrlsService")
      ], n.prototype, "ctrlsService", void 0), Ho([
        B
      ], n.prototype, "init", null), n;
    }()
  );
  var xg = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Vo = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, mu = (
    /** @class */
    function(n) {
      xg(t, n);
      function t(e, r) {
        var o = n.call(this) || this;
        return o.pinned = e, o.eContainer = r, o;
      }
      return t.prototype.postConstruct = function() {
        var e = this;
        this.ctrlsService.whenReady(function(r) {
          switch (e.pinned) {
            case E.PINNED_LEFT:
              e.eSecondaryContainers = [
                [r.gridBodyCtrl.getBodyViewportElement(), r.leftRowContainerCtrl.getContainerElement()],
                [r.bottomLeftRowContainerCtrl.getContainerElement()],
                [r.topLeftRowContainerCtrl.getContainerElement()]
              ];
              break;
            case E.PINNED_RIGHT:
              e.eSecondaryContainers = [
                [r.gridBodyCtrl.getBodyViewportElement(), r.rightRowContainerCtrl.getContainerElement()],
                [r.bottomRightRowContainerCtrl.getContainerElement()],
                [r.topRightRowContainerCtrl.getContainerElement()]
              ];
              break;
            default:
              e.eSecondaryContainers = [
                [r.gridBodyCtrl.getBodyViewportElement(), r.centerRowContainerCtrl.getViewportElement()],
                [r.bottomCenterRowContainerCtrl.getViewportElement()],
                [r.topCenterRowContainerCtrl.getViewportElement()]
              ];
              break;
          }
        });
      }, t.prototype.isInterestedIn = function(e) {
        return e === c.DragSourceType.HeaderCell || e === c.DragSourceType.ToolPanel && this.gridOptionsWrapper.isAllowDragFromColumnsToolPanel();
      }, t.prototype.getSecondaryContainers = function() {
        return this.eSecondaryContainers;
      }, t.prototype.getContainer = function() {
        return this.eContainer;
      }, t.prototype.init = function() {
        this.moveColumnFeature = this.createManagedBean(new vu(this.pinned, this.eContainer)), this.bodyDropPivotTarget = this.createManagedBean(new gu(this.pinned)), this.dragAndDropService.addDropTarget(this);
      }, t.prototype.getIconName = function() {
        return this.currentDropListener.getIconName();
      }, t.prototype.isDropColumnInPivotMode = function(e) {
        return this.columnModel.isPivotMode() && e.dragSource.type === c.DragSourceType.ToolPanel;
      }, t.prototype.onDragEnter = function(e) {
        this.currentDropListener = this.isDropColumnInPivotMode(e) ? this.bodyDropPivotTarget : this.moveColumnFeature, this.currentDropListener.onDragEnter(e);
      }, t.prototype.onDragLeave = function(e) {
        this.currentDropListener.onDragLeave(e);
      }, t.prototype.onDragging = function(e) {
        this.currentDropListener.onDragging(e);
      }, t.prototype.onDragStop = function(e) {
        this.currentDropListener.onDragStop(e);
      }, Vo([
        h("dragAndDropService")
      ], t.prototype, "dragAndDropService", void 0), Vo([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), Vo([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), Vo([
        B
      ], t.prototype, "postConstruct", null), Vo([
        B
      ], t.prototype, "init", null), t;
    }(H)
  );
  var Gg = function(n, t) {
    var e = typeof Symbol == "function" && n[Symbol.iterator];
    if (!e) return n;
    var r = e.call(n), o, i = [], s;
    try {
      for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
    } catch (a) {
      s = { error: a };
    } finally {
      try {
        o && !o.done && (e = r.return) && e.call(r);
      } finally {
        if (s) throw s.error;
      }
    }
    return i;
  }, Hg = function() {
    for (var n = [], t = 0; t < arguments.length; t++) n = n.concat(Gg(arguments[t]));
    return n;
  }, Gs = (
    /** @class */
    function() {
      function n() {
      }
      return n.getHeaderClassesFromColDef = function(t, e, r, o) {
        return C(t) ? [] : this.getColumnClassesFromCollDef(t.headerClass, t, e, r, o);
      }, n.getToolPanelClassesFromColDef = function(t, e, r, o) {
        return C(t) ? [] : this.getColumnClassesFromCollDef(t.toolPanelClass, t, e, r, o);
      }, n.getClassParams = function(t, e, r, o) {
        return {
          // bad naming, as colDef here can be a group or a column,
          // however most people won't appreciate the difference,
          // so keeping it as colDef to avoid confusion.
          colDef: t,
          column: r,
          columnGroup: o,
          api: e.getApi(),
          columnApi: e.getColumnApi(),
          context: e.getContext()
        };
      }, n.getColumnClassesFromCollDef = function(t, e, r, o, i) {
        if (C(t))
          return [];
        var s;
        if (typeof t == "function") {
          var a = this.getClassParams(e, r, o, i);
          s = t(a);
        } else
          s = t;
        return typeof s == "string" ? [s] : Array.isArray(s) ? Hg(s) : [];
      }, n;
    }()
  );
  var Vg = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Hs = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Wg = (
    /** @class */
    function(n) {
      Vg(t, n);
      function t(e) {
        var r = n.call(this, t.TEMPLATE, e) || this;
        return r.headerCompVersion = 0, r.column = e.getColumnGroupChild(), r.pinned = e.getPinned(), r;
      }
      return t.prototype.postConstruct = function() {
        var e = this, r = this.getGui(), o = function(a, l, u) {
          var p = r;
          l != null && l != "" ? p.setAttribute(a, l) : p.removeAttribute(a);
        }, i = {
          setWidth: function(a) {
            return r.style.width = a;
          },
          addOrRemoveCssClass: function(a, l) {
            return e.addOrRemoveCssClass(a, l);
          },
          setColId: function(a) {
            return o("col-id", a);
          },
          setTitle: function(a) {
            return o("title", a);
          },
          setAriaDescription: function(a) {
            return Ya(r, a);
          },
          setAriaSort: function(a) {
            return a ? tl(r, a) : rl(r);
          },
          setUserCompDetails: function(a) {
            return e.setUserCompDetails(a);
          },
          getUserCompInstance: function() {
            return e.headerComp;
          }
        };
        this.ctrl.setComp(i, this.getGui(), this.eResize);
        var s = this.ctrl.getSelectAllGui();
        this.eResize.insertAdjacentElement("afterend", s);
      }, t.prototype.destroyHeaderComp = function() {
        this.headerComp && (this.getGui().removeChild(this.headerCompGui), this.headerComp = this.destroyBean(this.headerComp), this.headerCompGui = void 0);
      }, t.prototype.setUserCompDetails = function(e) {
        var r = this;
        this.headerCompVersion++;
        var o = this.headerCompVersion;
        e.newAgStackInstance().then(function(i) {
          return r.afterCompCreated(o, i);
        });
      }, t.prototype.afterCompCreated = function(e, r) {
        if (e != this.headerCompVersion || !this.isAlive()) {
          this.destroyBean(r);
          return;
        }
        this.destroyHeaderComp(), this.headerComp = r, this.headerCompGui = r.getGui(), this.getGui().appendChild(this.headerCompGui), this.ctrl.setDragSource(this.headerCompGui);
      }, t.TEMPLATE = `<div class="ag-header-cell" role="columnheader" tabindex="-1">
            <div ref="eResize" class="ag-header-cell-resize" role="presentation"></div>
        </div>`, Hs([
        I("eResize")
      ], t.prototype, "eResize", void 0), Hs([
        B
      ], t.prototype, "postConstruct", null), Hs([
        De
      ], t.prototype, "destroyHeaderComp", null), t;
    }(Ps)
  );
  var Bg = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Vs = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, kg = (
    /** @class */
    function(n) {
      Bg(t, n);
      function t(e) {
        return n.call(this, t.TEMPLATE, e) || this;
      }
      return t.prototype.postConstruct = function() {
        var e = this, r = this.getGui(), o = function(s, a) {
          return a != null ? r.setAttribute(s, a) : r.removeAttribute(s);
        }, i = {
          addOrRemoveCssClass: function(s, a) {
            return e.addOrRemoveCssClass(s, a);
          },
          addOrRemoveResizableCssClass: function(s, a) {
            return e.eResize.classList.toggle(s, a);
          },
          setWidth: function(s) {
            return r.style.width = s;
          },
          setColId: function(s) {
            return r.setAttribute("col-id", s);
          },
          setAriaExpanded: function(s) {
            return o("aria-expanded", s);
          },
          setTitle: function(s) {
            return o("title", s);
          },
          setUserCompDetails: function(s) {
            return e.setUserCompDetails(s);
          }
        };
        this.ctrl.setComp(i, r, this.eResize);
      }, t.prototype.setUserCompDetails = function(e) {
        var r = this;
        e.newAgStackInstance().then(function(o) {
          return r.afterHeaderCompCreated(o);
        });
      }, t.prototype.afterHeaderCompCreated = function(e) {
        var r = this, o = function() {
          return r.destroyBean(e);
        };
        if (!this.isAlive()) {
          o();
          return;
        }
        this.getGui().appendChild(e.getGui()), this.addDestroyFunc(o), this.ctrl.setDragSource(e.getGui());
      }, t.TEMPLATE = `<div class="ag-header-group-cell" role="columnheader" tabindex="-1">
            <div ref="eResize" class="ag-header-cell-resize" role="presentation"></div>
        </div>`, Vs([
        h("userComponentFactory")
      ], t.prototype, "userComponentFactory", void 0), Vs([
        I("eResize")
      ], t.prototype, "eResize", void 0), Vs([
        B
      ], t.prototype, "postConstruct", null), t;
    }(Ps)
  );
  var Ug = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), yu = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  };
  (function(n) {
    n.COLUMN_GROUP = "group", n.COLUMN = "column", n.FLOATING_FILTER = "filter";
  })(c.HeaderRowType || (c.HeaderRowType = {}));
  var Cu = (
    /** @class */
    function(n) {
      Ug(t, n);
      function t(e) {
        var r = n.call(this) || this;
        r.headerComps = {};
        var o = e.getType() == c.HeaderRowType.COLUMN_GROUP ? "ag-header-row-column-group" : e.getType() == c.HeaderRowType.FLOATING_FILTER ? "ag-header-row-column-filter" : "ag-header-row-column";
        return r.setTemplate(
          /* html */
          '<div class="ag-header-row ' + o + '" role="row"></div>'
        ), r.ctrl = e, r;
      }
      return t.prototype.init = function() {
        var e = this, r = {
          setTransform: function(o) {
            return e.getGui().style.transform = o;
          },
          setHeight: function(o) {
            return e.getGui().style.height = o;
          },
          setTop: function(o) {
            return e.getGui().style.top = o;
          },
          setHeaderCtrls: function(o) {
            return e.setHeaderCtrls(o);
          },
          setWidth: function(o) {
            return e.getGui().style.width = o;
          },
          setAriaRowIndex: function(o) {
            return ts(e.getGui(), o);
          }
        };
        this.ctrl.setComp(r);
      }, t.prototype.destroyHeaderCtrls = function() {
        this.setHeaderCtrls([]);
      }, t.prototype.setHeaderCtrls = function(e) {
        var r = this;
        if (this.isAlive()) {
          var o = this.headerComps;
          this.headerComps = {}, e.forEach(function(l) {
            var u = l.getInstanceId(), p = o[u];
            delete o[u], p == null && (p = r.createHeaderComp(l), r.getGui().appendChild(p.getGui())), r.headerComps[u] = p;
          }), ie(o, function(l, u) {
            r.getGui().removeChild(u.getGui()), r.destroyBean(u);
          });
          var i = this.gridOptionsWrapper.isEnsureDomOrder();
          if (i) {
            var s = Se(this.headerComps);
            s.sort(function(l, u) {
              var p = l.getCtrl().getColumnGroupChild().getLeft(), d = u.getCtrl().getColumnGroupChild().getLeft();
              return p - d;
            });
            var a = s.map(function(l) {
              return l.getGui();
            });
            zn(this.getGui(), a);
          }
        }
      }, t.prototype.createHeaderComp = function(e) {
        var r;
        switch (this.ctrl.getType()) {
          case c.HeaderRowType.COLUMN_GROUP:
            r = new kg(e);
            break;
          case c.HeaderRowType.FLOATING_FILTER:
            r = new jl(e);
            break;
          default:
            r = new Wg(e);
            break;
        }
        return this.createBean(r), r.setParentComponent(this), r;
      }, yu([
        B
      ], t.prototype, "init", null), yu([
        De
      ], t.prototype, "destroyHeaderCtrls", null), t;
    }(le)
  );
  var jg = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), zg = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, $g = 0, Wo = (
    /** @class */
    function(n) {
      jg(t, n);
      function t(e, r) {
        var o = n.call(this) || this;
        return o.lastFocusEvent = null, o.columnGroupChild = e, o.parentRowCtrl = r, o.instanceId = e.getUniqueId() + "-" + $g++, o;
      }
      return t.prototype.shouldStopEventPropagation = function(e) {
        var r = this.focusService.getFocusedHeader(), o = r.headerRowIndex, i = r.column;
        return cl(this.gridOptionsWrapper, e, o, i);
      }, t.prototype.setGui = function(e) {
        this.eGui = e, this.addDomData();
      }, t.prototype.addDomData = function() {
        var e = this, r = t.DOM_DATA_KEY_HEADER_CTRL;
        this.gridOptionsWrapper.setDomData(this.eGui, r, this), this.addDestroyFunc(function() {
          return e.gridOptionsWrapper.setDomData(e.eGui, r, null);
        });
      }, t.prototype.getGui = function() {
        return this.eGui;
      }, t.prototype.focus = function(e) {
        return this.eGui ? (this.lastFocusEvent = e || null, this.eGui.focus(), !0) : !1;
      }, t.prototype.getRowIndex = function() {
        return this.parentRowCtrl.getRowIndex();
      }, t.prototype.getParentRowCtrl = function() {
        return this.parentRowCtrl;
      }, t.prototype.getPinned = function() {
        return this.parentRowCtrl.getPinned();
      }, t.prototype.getInstanceId = function() {
        return this.instanceId;
      }, t.prototype.getColumnGroupChild = function() {
        return this.columnGroupChild;
      }, t.DOM_DATA_KEY_HEADER_CTRL = "headerCtrl", zg([
        h("focusService")
      ], t.prototype, "focusService", void 0), t;
    }(H)
  );
  (function(n) {
    n.EVERYTHING = "group", n.FILTER = "filter", n.SORT = "sort", n.MAP = "map", n.AGGREGATE = "aggregate", n.FILTER_AGGREGATES = "filter_aggregates", n.PIVOT = "pivot", n.NOTHING = "nothing";
  })(c.ClientSideRowModelSteps || (c.ClientSideRowModelSteps = {}));
  var ye = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  };
  function Er(n) {
    var t = n, e = t != null && t.getFrameworkComponentInstance != null;
    return e ? t.getFrameworkComponentInstance() : n;
  }
  var wu = (
    /** @class */
    function() {
      function n() {
        this.detailGridInfoMap = {}, this.destroyCalled = !1;
      }
      return n.prototype.registerOverlayWrapperComp = function(t) {
        this.overlayWrapperComp = t;
      }, n.prototype.registerSideBarComp = function(t) {
        this.sideBarComp = t;
      }, n.prototype.init = function() {
        var t = this;
        switch (this.rowModel.getType()) {
          case E.ROW_MODEL_TYPE_CLIENT_SIDE:
            this.clientSideRowModel = this.rowModel;
            break;
          case E.ROW_MODEL_TYPE_INFINITE:
            this.infiniteRowModel = this.rowModel;
            break;
          case E.ROW_MODEL_TYPE_SERVER_SIDE:
            this.serverSideRowModel = this.rowModel;
            break;
        }
        this.ctrlsService.whenReady(function() {
          t.gridBodyCtrl = t.ctrlsService.getGridBodyCtrl();
        });
      }, n.prototype.__getAlignedGridService = function() {
        return this.alignedGridsService;
      }, n.prototype.__getContext = function() {
        return this.context;
      }, n.prototype.addDetailGridInfo = function(t, e) {
        this.detailGridInfoMap[t] = e;
      }, n.prototype.removeDetailGridInfo = function(t) {
        this.detailGridInfoMap[t] = void 0;
      }, n.prototype.getDetailGridInfo = function(t) {
        return this.detailGridInfoMap[t];
      }, n.prototype.forEachDetailGridInfo = function(t) {
        var e = 0;
        ie(this.detailGridInfoMap, function(r, o) {
          g(o) && (t(o, e), e++);
        });
      }, n.prototype.getDataAsCsv = function(t) {
        if (oe.assertRegistered(c.ModuleNames.CsvExportModule, "api.getDataAsCsv"))
          return this.csvCreator.getDataAsCsv(t);
      }, n.prototype.exportDataAsCsv = function(t) {
        oe.assertRegistered(c.ModuleNames.CsvExportModule, "api.exportDataAsCSv") && this.csvCreator.exportDataAsCsv(t);
      }, n.prototype.getExcelExportMode = function(t) {
        var e = this.gridOptionsWrapper.getDefaultExportParams("excel"), r = Object.assign({ exportMode: "xlsx" }, e, t);
        return r.exportMode;
      }, n.prototype.getDataAsExcel = function(t) {
        if (oe.assertRegistered(c.ModuleNames.ExcelExportModule, "api.getDataAsExcel")) {
          var e = this.getExcelExportMode(t);
          if (this.excelCreator.getFactoryMode(e) === c.ExcelFactoryMode.MULTI_SHEET) {
            console.warn("AG Grid: The Excel Exporter is currently on Multi Sheet mode. End that operation by calling `api.getMultipleSheetAsExcel()` or `api.exportMultipleSheetsAsExcel()`");
            return;
          }
          return this.excelCreator.getDataAsExcel(t);
        }
      }, n.prototype.exportDataAsExcel = function(t) {
        if (oe.assertRegistered(c.ModuleNames.ExcelExportModule, "api.exportDataAsExcel")) {
          var e = this.getExcelExportMode(t);
          if (this.excelCreator.getFactoryMode(e) === c.ExcelFactoryMode.MULTI_SHEET) {
            console.warn("AG Grid: The Excel Exporter is currently on Multi Sheet mode. End that operation by calling `api.getMultipleSheetAsExcel()` or `api.exportMultipleSheetsAsExcel()`");
            return;
          }
          this.excelCreator.exportDataAsExcel(t);
        }
      }, n.prototype.getSheetDataForExcel = function(t) {
        if (oe.assertRegistered(c.ModuleNames.ExcelExportModule, "api.getSheetDataForExcel")) {
          var e = this.getExcelExportMode(t);
          return this.excelCreator.setFactoryMode(c.ExcelFactoryMode.MULTI_SHEET, e), this.excelCreator.getSheetDataForExcel(t);
        }
      }, n.prototype.getMultipleSheetsAsExcel = function(t) {
        if (oe.assertRegistered(c.ModuleNames.ExcelExportModule, "api.getMultipleSheetsAsExcel"))
          return this.excelCreator.getMultipleSheetsAsExcel(t);
      }, n.prototype.exportMultipleSheetsAsExcel = function(t) {
        if (oe.assertRegistered(c.ModuleNames.ExcelExportModule, "api.exportMultipleSheetsAsExcel"))
          return this.excelCreator.exportMultipleSheetsAsExcel(t);
      }, n.prototype.setEnterpriseDatasource = function(t) {
        console.warn("AG Grid: since version 18.x, api.setEnterpriseDatasource() should be replaced with api.setServerSideDatasource()"), this.setServerSideDatasource(t);
      }, n.prototype.setGridAriaProperty = function(t, e) {
        if (t) {
          var r = this.ctrlsService.getGridBodyCtrl().getGui(), o = "aria-" + t;
          e === null ? r.removeAttribute(o) : r.setAttribute(o, e);
        }
      }, n.prototype.setServerSideDatasource = function(t) {
        this.serverSideRowModel ? this.serverSideRowModel.setDatasource(t) : console.warn("AG Grid: you can only use an enterprise datasource when gridOptions.rowModelType is '" + E.ROW_MODEL_TYPE_SERVER_SIDE + "'");
      }, n.prototype.setDatasource = function(t) {
        this.gridOptionsWrapper.isRowModelInfinite() ? this.rowModel.setDatasource(t) : console.warn("AG Grid: you can only use a datasource when gridOptions.rowModelType is '" + E.ROW_MODEL_TYPE_INFINITE + "'");
      }, n.prototype.setViewportDatasource = function(t) {
        this.gridOptionsWrapper.isRowModelViewport() ? this.rowModel.setViewportDatasource(t) : console.warn("AG Grid: you can only use a viewport datasource when gridOptions.rowModelType is '" + E.ROW_MODEL_TYPE_VIEWPORT + "'");
      }, n.prototype.setRowData = function(t) {
        var e = this.immutableService == null;
        if (e) {
          console.warn("AG Grid: you can only set rowData when using the Client Side Row Model");
          return;
        }
        this.immutableService.isActive() ? this.immutableService.setRowData(t) : (this.selectionService.reset(), this.clientSideRowModel.setRowData(t));
      }, n.prototype.setFloatingTopRowData = function(t) {
        console.warn("AG Grid: since v12, api.setFloatingTopRowData() is now api.setPinnedTopRowData()"), this.setPinnedTopRowData(t);
      }, n.prototype.setFloatingBottomRowData = function(t) {
        console.warn("AG Grid: since v12, api.setFloatingBottomRowData() is now api.setPinnedBottomRowData()"), this.setPinnedBottomRowData(t);
      }, n.prototype.getFloatingTopRowCount = function() {
        return console.warn("AG Grid: since v12, api.getFloatingTopRowCount() is now api.getPinnedTopRowCount()"), this.getPinnedTopRowCount();
      }, n.prototype.getFloatingBottomRowCount = function() {
        return console.warn("AG Grid: since v12, api.getFloatingBottomRowCount() is now api.getPinnedBottomRowCount()"), this.getPinnedBottomRowCount();
      }, n.prototype.getFloatingTopRow = function(t) {
        return console.warn("AG Grid: since v12, api.getFloatingTopRow() is now api.getPinnedTopRow()"), this.getPinnedTopRow(t);
      }, n.prototype.getFloatingBottomRow = function(t) {
        return console.warn("AG Grid: since v12, api.getFloatingBottomRow() is now api.getPinnedBottomRow()"), this.getPinnedBottomRow(t);
      }, n.prototype.setPinnedTopRowData = function(t) {
        this.pinnedRowModel.setPinnedTopRowData(t);
      }, n.prototype.setPinnedBottomRowData = function(t) {
        this.pinnedRowModel.setPinnedBottomRowData(t);
      }, n.prototype.getPinnedTopRowCount = function() {
        return this.pinnedRowModel.getPinnedTopRowCount();
      }, n.prototype.getPinnedBottomRowCount = function() {
        return this.pinnedRowModel.getPinnedBottomRowCount();
      }, n.prototype.getPinnedTopRow = function(t) {
        return this.pinnedRowModel.getPinnedTopRow(t);
      }, n.prototype.getPinnedBottomRow = function(t) {
        return this.pinnedRowModel.getPinnedBottomRow(t);
      }, n.prototype.setColumnDefs = function(t, e) {
        e === void 0 && (e = "api"), this.columnModel.setColumnDefs(t, e);
      }, n.prototype.setAutoGroupColumnDef = function(t, e) {
        this.gridOptionsWrapper.setProperty("autoGroupColumnDef", t, !0);
      }, n.prototype.setDefaultColDef = function(t, e) {
        this.gridOptionsWrapper.setProperty("defaultColDef", t, !0);
      }, n.prototype.expireValueCache = function() {
        this.valueCache.expire();
      }, n.prototype.getVerticalPixelRange = function() {
        return this.gridBodyCtrl.getScrollFeature().getVScrollPosition();
      }, n.prototype.getHorizontalPixelRange = function() {
        return this.gridBodyCtrl.getScrollFeature().getHScrollPosition();
      }, n.prototype.setAlwaysShowHorizontalScroll = function(t) {
        this.gridOptionsWrapper.setProperty("alwaysShowHorizontalScroll", t);
      }, n.prototype.setAlwaysShowVerticalScroll = function(t) {
        this.gridOptionsWrapper.setProperty("alwaysShowVerticalScroll", t);
      }, n.prototype.refreshToolPanel = function() {
        this.sideBarComp && this.sideBarComp.refresh();
      }, n.prototype.refreshCells = function(t) {
        if (t === void 0 && (t = {}), Array.isArray(t)) {
          console.warn("since AG Grid v11.1, refreshCells() now takes parameters, please see the documentation.");
          return;
        }
        this.rowRenderer.refreshCells(t);
      }, n.prototype.flashCells = function(t) {
        t === void 0 && (t = {}), this.rowRenderer.flashCells(t);
      }, n.prototype.redrawRows = function(t) {
        t === void 0 && (t = {});
        var e = t ? t.rowNodes : void 0;
        this.rowRenderer.redrawRows(e);
      }, n.prototype.setFunctionsReadOnly = function(t) {
        this.gridOptionsWrapper.setProperty("functionsReadOnly", t);
      }, n.prototype.refreshHeader = function() {
        this.ctrlsService.getHeaderRowContainerCtrls().forEach(function(t) {
          return t.refresh();
        });
      }, n.prototype.isAnyFilterPresent = function() {
        return this.filterManager.isAnyFilterPresent();
      }, n.prototype.isColumnFilterPresent = function() {
        return this.filterManager.isColumnFilterPresent() || this.filterManager.isAggregateFilterPresent();
      }, n.prototype.isQuickFilterPresent = function() {
        return this.filterManager.isQuickFilterPresent();
      }, n.prototype.getModel = function() {
        return this.rowModel;
      }, n.prototype.setRowNodeExpanded = function(t, e) {
        t && t.setExpanded(e);
      }, n.prototype.onGroupExpandedOrCollapsed = function(t) {
        C(this.clientSideRowModel) && console.warn("AG Grid: cannot call onGroupExpandedOrCollapsed unless using normal row model"), g(t) && console.warn("AG Grid: api.onGroupExpandedOrCollapsed - refreshFromIndex parameter is no longer used, the grid will refresh all rows"), this.clientSideRowModel.refreshModel({ step: c.ClientSideRowModelSteps.MAP });
      }, n.prototype.refreshInMemoryRowModel = function(t) {
        console.warn("ag-grid: since version 18.x, api.refreshInMemoryRowModel() should be replaced with api.refreshClientSideRowModel()"), this.refreshClientSideRowModel(t);
      }, n.prototype.refreshClientSideRowModel = function(t) {
        C(this.clientSideRowModel) && console.warn("cannot call refreshClientSideRowModel unless using normal row model");
        var e = c.ClientSideRowModelSteps.EVERYTHING, r = {
          group: c.ClientSideRowModelSteps.EVERYTHING,
          filter: c.ClientSideRowModelSteps.FILTER,
          map: c.ClientSideRowModelSteps.MAP,
          aggregate: c.ClientSideRowModelSteps.AGGREGATE,
          sort: c.ClientSideRowModelSteps.SORT,
          pivot: c.ClientSideRowModelSteps.PIVOT
        };
        if (g(t) && (e = r[t]), C(e)) {
          console.error("AG Grid: invalid step " + t + ", available steps are " + Object.keys(r).join(", "));
          return;
        }
        var o = !this.gridOptionsWrapper.isSuppressAnimationFrame(), i = {
          step: e,
          keepRenderedRows: !0,
          keepEditingRows: !0,
          animate: o
        };
        this.clientSideRowModel.refreshModel(i);
      }, n.prototype.isAnimationFrameQueueEmpty = function() {
        return this.animationFrameService.isQueueEmpty();
      }, n.prototype.flushAllAnimationFrames = function() {
        this.animationFrameService.flushAllFrames();
      }, n.prototype.getRowNode = function(t) {
        return this.rowModel.getRowNode(t);
      }, n.prototype.getSizesForCurrentTheme = function() {
        return {
          rowHeight: this.gridOptionsWrapper.getRowHeightAsNumber(),
          headerHeight: this.gridOptionsWrapper.getHeaderHeight()
        };
      }, n.prototype.expandAll = function() {
        this.clientSideRowModel ? this.clientSideRowModel.expandOrCollapseAll(!0) : this.serverSideRowModel ? this.serverSideRowModel.expandAll(!0) : console.warn("AG Grid: expandAll only works with Client Side Row Model and Server Side Row Model");
      }, n.prototype.collapseAll = function() {
        this.clientSideRowModel ? this.clientSideRowModel.expandOrCollapseAll(!1) : this.serverSideRowModel ? this.serverSideRowModel.expandAll(!1) : console.warn("AG Grid: collapseAll only works with Client Side Row Model and Server Side Row Model");
      }, n.prototype.getToolPanelInstance = function(t) {
        if (!this.sideBarComp) {
          console.warn("AG Grid: toolPanel is only available in AG Grid Enterprise");
          return;
        }
        var e = this.sideBarComp.getToolPanelInstance(t);
        return Er(e);
      }, n.prototype.addVirtualRowListener = function(t, e, r) {
        typeof t != "string" && console.warn("AG Grid: addVirtualRowListener is deprecated, please use addRenderedRowListener."), this.addRenderedRowListener(t, e, r);
      }, n.prototype.addRenderedRowListener = function(t, e, r) {
        t === "virtualRowSelected" && console.warn(`AG Grid: event virtualRowSelected is deprecated, to register for individual row
                selection events, add a listener directly to the row node.`), this.rowRenderer.addRenderedRowListener(t, e, r);
      }, n.prototype.setQuickFilter = function(t) {
        this.filterManager.setQuickFilter(t);
      }, n.prototype.selectIndex = function(t, e, r) {
        console.warn("AG Grid: do not use api for selection, call node.setSelected(value) instead"), r && console.warn("AG Grid: suppressEvents is no longer supported, stop listening for the event if you no longer want it"), this.selectionService.selectIndex(t, e);
      }, n.prototype.deselectIndex = function(t, e) {
        e === void 0 && (e = !1), console.warn("AG Grid: do not use api for selection, call node.setSelected(value) instead"), e && console.warn("AG Grid: suppressEvents is no longer supported, stop listening for the event if you no longer want it"), this.selectionService.deselectIndex(t);
      }, n.prototype.selectNode = function(t, e, r) {
        e === void 0 && (e = !1), r === void 0 && (r = !1), console.warn("AG Grid: API for selection is deprecated, call node.setSelected(value) instead"), r && console.warn("AG Grid: suppressEvents is no longer supported, stop listening for the event if you no longer want it"), t.setSelectedParams({ newValue: !0, clearSelection: !e });
      }, n.prototype.deselectNode = function(t, e) {
        e === void 0 && (e = !1), console.warn("AG Grid: API for selection is deprecated, call node.setSelected(value) instead"), e && console.warn("AG Grid: suppressEvents is no longer supported, stop listening for the event if you no longer want it"), t.setSelectedParams({ newValue: !1 });
      }, n.prototype.selectAll = function() {
        this.selectionService.selectAllRowNodes();
      }, n.prototype.deselectAll = function() {
        this.selectionService.deselectAllRowNodes();
      }, n.prototype.selectAllFiltered = function() {
        this.selectionService.selectAllRowNodes(!0);
      }, n.prototype.deselectAllFiltered = function() {
        this.selectionService.deselectAllRowNodes(!0);
      }, n.prototype.recomputeAggregates = function() {
        C(this.clientSideRowModel) && console.warn("cannot call recomputeAggregates unless using normal row model"), console.warn("recomputeAggregates is deprecated, please call api.refreshClientSideRowModel('aggregate') instead"), this.clientSideRowModel.refreshModel({ step: c.ClientSideRowModelSteps.AGGREGATE });
      }, n.prototype.sizeColumnsToFit = function() {
        this.gridBodyCtrl.sizeColumnsToFit();
      }, n.prototype.showLoadingOverlay = function() {
        this.overlayWrapperComp.showLoadingOverlay();
      }, n.prototype.showNoRowsOverlay = function() {
        this.overlayWrapperComp.showNoRowsOverlay();
      }, n.prototype.hideOverlay = function() {
        this.overlayWrapperComp.hideOverlay();
      }, n.prototype.isNodeSelected = function(t) {
        return console.warn("AG Grid: no need to call api.isNodeSelected(), just call node.isSelected() instead"), t.isSelected();
      }, n.prototype.getSelectedNodesById = function() {
        return console.error("AG Grid: since version 3.4, getSelectedNodesById no longer exists, use getSelectedNodes() instead"), null;
      }, n.prototype.getSelectedNodes = function() {
        return this.selectionService.getSelectedNodes();
      }, n.prototype.getSelectedRows = function() {
        return this.selectionService.getSelectedRows();
      }, n.prototype.getBestCostNodeSelection = function() {
        return this.selectionService.getBestCostNodeSelection();
      }, n.prototype.getRenderedNodes = function() {
        return this.rowRenderer.getRenderedNodes();
      }, n.prototype.ensureColIndexVisible = function(t) {
        console.warn("AG Grid: ensureColIndexVisible(index) no longer supported, use ensureColumnVisible(colKey) instead.");
      }, n.prototype.ensureColumnVisible = function(t, e) {
        e === void 0 && (e = "auto"), this.gridBodyCtrl.getScrollFeature().ensureColumnVisible(t, e);
      }, n.prototype.ensureIndexVisible = function(t, e) {
        this.gridBodyCtrl.getScrollFeature().ensureIndexVisible(t, e);
      }, n.prototype.ensureNodeVisible = function(t, e) {
        e === void 0 && (e = null), this.gridBodyCtrl.getScrollFeature().ensureNodeVisible(t, e);
      }, n.prototype.forEachLeafNode = function(t) {
        C(this.clientSideRowModel) && console.warn("cannot call forEachNode unless using normal row model"), this.clientSideRowModel.forEachLeafNode(t);
      }, n.prototype.forEachNode = function(t) {
        this.rowModel.forEachNode(t);
      }, n.prototype.forEachNodeAfterFilter = function(t) {
        C(this.clientSideRowModel) && console.warn("cannot call forEachNodeAfterFilter unless using normal row model"), this.clientSideRowModel.forEachNodeAfterFilter(t);
      }, n.prototype.forEachNodeAfterFilterAndSort = function(t) {
        C(this.clientSideRowModel) && console.warn("cannot call forEachNodeAfterFilterAndSort unless using normal row model"), this.clientSideRowModel.forEachNodeAfterFilterAndSort(t);
      }, n.prototype.getFilterInstance = function(t, e) {
        var r = this.getFilterInstanceImpl(t, function(i) {
          if (e) {
            var s = Er(i);
            e(s);
          }
        }), o = Er(r);
        return o;
      }, n.prototype.getFilterInstanceImpl = function(t, e) {
        var r = this.columnModel.getPrimaryColumn(t);
        if (r) {
          var o = this.filterManager.getFilterComponent(r, "NO_UI"), i = o && o.resolveNow(null, function(s) {
            return s;
          });
          return i ? setTimeout(e, 0, i) : o && o.then(function(s) {
            e(s);
          }), i;
        }
      }, n.prototype.destroyFilter = function(t) {
        var e = this.columnModel.getPrimaryColumn(t);
        if (e)
          return this.filterManager.destroyFilter(e, "filterDestroyed");
      }, n.prototype.getStatusPanel = function(t) {
        if (this.statusBarService) {
          var e = this.statusBarService.getStatusPanel(t);
          return Er(e);
        }
      }, n.prototype.getColumnDef = function(t) {
        var e = this.columnModel.getPrimaryColumn(t);
        return e ? e.getColDef() : null;
      }, n.prototype.getColumnDefs = function() {
        return this.columnModel.getColumnDefs();
      }, n.prototype.onFilterChanged = function() {
        this.filterManager.onFilterChanged();
      }, n.prototype.onSortChanged = function() {
        this.sortController.onSortChanged("api");
      }, n.prototype.setFilterModel = function(t) {
        this.filterManager.setFilterModel(t);
      }, n.prototype.getFilterModel = function() {
        return this.filterManager.getFilterModel();
      }, n.prototype.getFocusedCell = function() {
        return this.focusService.getFocusedCell();
      }, n.prototype.clearFocusedCell = function() {
        return this.focusService.clearFocusedCell();
      }, n.prototype.setFocusedCell = function(t, e, r) {
        this.focusService.setFocusedCell(t, e, r, !0);
      }, n.prototype.setSuppressRowDrag = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_SUPPRESS_ROW_DRAG, t);
      }, n.prototype.setSuppressMoveWhenRowDragging = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_SUPPRESS_MOVE_WHEN_ROW_DRAG, t);
      }, n.prototype.setSuppressRowClickSelection = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_SUPPRESS_ROW_CLICK_SELECTION, t);
      }, n.prototype.addRowDropZone = function(t) {
        this.gridBodyCtrl.getRowDragFeature().addRowDropZone(t);
      }, n.prototype.removeRowDropZone = function(t) {
        var e = this.dragAndDropService.findExternalZone(t);
        e && this.dragAndDropService.removeDropTarget(e);
      }, n.prototype.getRowDropZoneParams = function(t) {
        return this.gridBodyCtrl.getRowDragFeature().getRowDropZone(t);
      }, n.prototype.setHeaderHeight = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_HEADER_HEIGHT, t);
      }, n.prototype.setDomLayout = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_DOM_LAYOUT, t);
      }, n.prototype.setEnableCellTextSelection = function(t) {
        this.gridBodyCtrl.setCellTextSelection(t);
      }, n.prototype.setFillHandleDirection = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_FILL_HANDLE_DIRECTION, t);
      }, n.prototype.setGroupHeaderHeight = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_GROUP_HEADER_HEIGHT, t);
      }, n.prototype.setFloatingFiltersHeight = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_FLOATING_FILTERS_HEIGHT, t);
      }, n.prototype.setPivotHeaderHeight = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_PIVOT_HEADER_HEIGHT, t);
      }, n.prototype.setPivotGroupHeaderHeight = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_PIVOT_GROUP_HEADER_HEIGHT, t);
      }, n.prototype.setIsExternalFilterPresent = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_IS_EXTERNAL_FILTER_PRESENT, t);
      }, n.prototype.setDoesExternalFilterPass = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_DOES_EXTERNAL_FILTER_PASS, t);
      }, n.prototype.setNavigateToNextCell = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_NAVIGATE_TO_NEXT_CELL, t);
      }, n.prototype.setTabToNextCell = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_TAB_TO_NEXT_CELL, t);
      }, n.prototype.setTabToNextHeader = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_TAB_TO_NEXT_HEADER, t);
      }, n.prototype.setNavigateToNextHeader = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_NAVIGATE_TO_NEXT_HEADER, t);
      }, n.prototype.setGroupRowAggNodes = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_GROUP_ROW_AGG_NODES, t);
      }, n.prototype.setGetGroupRowAgg = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_GET_GROUP_ROW_AGG, t);
      }, n.prototype.setGetBusinessKeyForNode = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_GET_BUSINESS_KEY_FOR_NODE, t);
      }, n.prototype.setGetChildCount = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_GET_CHILD_COUNT, t);
      }, n.prototype.setProcessRowPostCreate = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_PROCESS_ROW_POST_CREATE, t);
      }, n.prototype.setGetRowNodeId = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_GET_ROW_NODE_ID, t);
      }, n.prototype.setGetRowId = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_GET_ROW_ID, t);
      }, n.prototype.setGetRowClass = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_GET_ROW_CLASS, t);
      }, n.prototype.setIsFullWidthCell = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_IS_FULL_WIDTH_CELL, t);
      }, n.prototype.setIsFullWidthRow = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_IS_FULL_WIDTH_ROW, t);
      }, n.prototype.setIsRowSelectable = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_IS_ROW_SELECTABLE, t);
      }, n.prototype.setIsRowMaster = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_IS_ROW_MASTER, t);
      }, n.prototype.setPostSort = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_POST_SORT, t);
      }, n.prototype.setPostSortRows = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_POST_SORT_ROWS, t);
      }, n.prototype.setGetDocument = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_GET_DOCUMENT, t);
      }, n.prototype.setGetContextMenuItems = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_GET_CONTEXT_MENU_ITEMS, t);
      }, n.prototype.setGetMainMenuItems = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_GET_MAIN_MENU_ITEMS, t);
      }, n.prototype.setProcessCellForClipboard = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_PROCESS_CELL_FOR_CLIPBOARD, t);
      }, n.prototype.setSendToClipboard = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_SEND_TO_CLIPBOARD, t);
      }, n.prototype.setProcessCellFromClipboard = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_PROCESS_CELL_FROM_CLIPBOARD, t);
      }, n.prototype.setProcessSecondaryColDef = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_PROCESS_TO_SECONDARY_COLDEF, t);
      }, n.prototype.setProcessSecondaryColGroupDef = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_PROCESS_SECONDARY_COL_GROUP_DEF, t);
      }, n.prototype.setPostProcessPopup = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_POST_PROCESS_POPUP, t);
      }, n.prototype.setDefaultGroupOrderComparator = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_DEFAULT_GROUP_ORDER_COMPARATOR, t);
      }, n.prototype.setInitialGroupOrderComparator = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_INITIAL_GROUP_ORDER_COMPARATOR, t);
      }, n.prototype.setGetChartToolbarItems = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_GET_CHART_TOOLBAR_ITEMS, t);
      }, n.prototype.setPaginationNumberFormatter = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_PAGINATION_NUMBER_FORMATTER, t);
      }, n.prototype.setGetServerSideStoreParams = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_GET_SERVER_SIDE_STORE_PARAMS, t);
      }, n.prototype.setIsServerSideGroupOpenByDefault = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_IS_SERVER_SIDE_GROUPS_OPEN_BY_DEFAULT, t);
      }, n.prototype.setIsApplyServerSideTransaction = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_IS_APPLY_SERVER_SIDE_TRANSACTION, t);
      }, n.prototype.setIsServerSideGroup = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_IS_SERVER_SIDE_GROUP, t);
      }, n.prototype.setGetServerSideGroupKey = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_GET_SERVER_SIDE_GROUP_KEY, t);
      }, n.prototype.setGetRowStyle = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_GET_ROW_STYLE, t);
      }, n.prototype.setGetRowHeight = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_GET_ROW_HEIGHT, t);
      }, n.prototype.isSideBarVisible = function() {
        return this.sideBarComp ? this.sideBarComp.isDisplayed() : !1;
      }, n.prototype.setSideBarVisible = function(t) {
        if (!this.sideBarComp) {
          t && console.warn("AG Grid: sideBar is not loaded");
          return;
        }
        this.sideBarComp.setDisplayed(t);
      }, n.prototype.setSideBarPosition = function(t) {
        if (!this.sideBarComp) {
          console.warn("AG Grid: sideBar is not loaded");
          return;
        }
        this.sideBarComp.setSideBarPosition(t);
      }, n.prototype.openToolPanel = function(t) {
        if (!this.sideBarComp) {
          console.warn("AG Grid: toolPanel is only available in AG Grid Enterprise");
          return;
        }
        this.sideBarComp.openToolPanel(t);
      }, n.prototype.closeToolPanel = function() {
        if (!this.sideBarComp) {
          console.warn("AG Grid: toolPanel is only available in AG Grid Enterprise");
          return;
        }
        this.sideBarComp.close();
      }, n.prototype.getOpenedToolPanel = function() {
        return this.sideBarComp ? this.sideBarComp.openedItem() : null;
      }, n.prototype.getSideBar = function() {
        return this.gridOptionsWrapper.getSideBar();
      }, n.prototype.setSideBar = function(t) {
        this.gridOptionsWrapper.setProperty("sideBar", zl.parse(t));
      }, n.prototype.setSuppressClipboardPaste = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_SUPPRESS_CLIPBOARD_PASTE, t);
      }, n.prototype.isToolPanelShowing = function() {
        return this.sideBarComp.isToolPanelShowing();
      }, n.prototype.doLayout = function() {
        var t = "AG Grid - since version 25.1, doLayout was taken out, as it's not needed. The grid responds to grid size changes automatically";
        me(function() {
          return console.warn(t);
        }, "doLayoutDeprecated");
      }, n.prototype.resetRowHeights = function() {
        if (g(this.clientSideRowModel)) {
          if (this.columnModel.isAutoRowHeightActive()) {
            console.warn("AG Grid: calling gridApi.resetRowHeights() makes no sense when using Auto Row Height.");
            return;
          }
          this.clientSideRowModel.resetRowHeights();
        }
      }, n.prototype.setGroupRemoveSingleChildren = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_GROUP_REMOVE_SINGLE_CHILDREN, t);
      }, n.prototype.setGroupRemoveLowestSingleChildren = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_GROUP_REMOVE_LOWEST_SINGLE_CHILDREN, t);
      }, n.prototype.onRowHeightChanged = function() {
        this.clientSideRowModel ? this.clientSideRowModel.onRowHeightChanged() : this.serverSideRowModel && this.serverSideRowModel.onRowHeightChanged();
      }, n.prototype.getValue = function(t, e) {
        var r = this.columnModel.getPrimaryColumn(t);
        return C(r) && (r = this.columnModel.getGridColumn(t)), C(r) ? null : this.valueService.getValue(r, e);
      }, n.prototype.addEventListener = function(t, e) {
        var r = this.gridOptionsWrapper.useAsyncEvents();
        this.eventService.addEventListener(t, e, r);
      }, n.prototype.addGlobalListener = function(t) {
        var e = this.gridOptionsWrapper.useAsyncEvents();
        this.eventService.addGlobalListener(t, e);
      }, n.prototype.removeEventListener = function(t, e) {
        var r = this.gridOptionsWrapper.useAsyncEvents();
        this.eventService.removeEventListener(t, e, r);
      }, n.prototype.removeGlobalListener = function(t) {
        var e = this.gridOptionsWrapper.useAsyncEvents();
        this.eventService.removeGlobalListener(t, e);
      }, n.prototype.dispatchEvent = function(t) {
        this.eventService.dispatchEvent(t);
      }, n.prototype.destroy = function() {
        if (!this.destroyCalled) {
          this.destroyCalled = !0;
          var t = this.ctrlsService.getGridCtrl();
          t && t.destroyGridUi(), this.context.destroy();
        }
      }, n.prototype.cleanDownReferencesToAvoidMemoryLeakInCaseApplicationIsKeepingReferenceToDestroyedGrid = function() {
        setTimeout(ar.bind(window, this, "Grid API"), 100);
      }, n.prototype.warnIfDestroyed = function(t) {
        return this.destroyCalled && console.warn("AG Grid: Grid API method " + t + " was called on a grid that was destroyed."), this.destroyCalled;
      }, n.prototype.resetQuickFilter = function() {
        this.warnIfDestroyed("resetQuickFilter") || this.rowModel.forEachNode(function(t) {
          return t.quickFilterAggregateText = null;
        });
      }, n.prototype.getRangeSelections = function() {
        return console.warn(`AG Grid: in v20.1.x, api.getRangeSelections() is gone, please use getCellRanges() instead.
        We had to change how cell selections works a small bit to allow charting to integrate. The return type of
        getCellRanges() is a bit different, please check the AG Grid documentation.`), null;
      }, n.prototype.getCellRanges = function() {
        return this.rangeService ? this.rangeService.getCellRanges() : (console.warn("AG Grid: cell range selection is only available in AG Grid Enterprise"), null);
      }, n.prototype.camelCaseToHumanReadable = function(t) {
        return Dn(t);
      }, n.prototype.addRangeSelection = function(t) {
        console.warn("AG Grid: As of version 21.x, range selection changed slightly to allow charting integration. Please call api.addCellRange() instead of api.addRangeSelection()");
      }, n.prototype.addCellRange = function(t) {
        this.rangeService || console.warn("AG Grid: cell range selection is only available in AG Grid Enterprise"), this.rangeService.addCellRange(t);
      }, n.prototype.clearRangeSelection = function() {
        this.rangeService || console.warn("AG Grid: cell range selection is only available in AG Grid Enterprise"), this.rangeService.removeAllCellRanges();
      }, n.prototype.undoCellEditing = function() {
        this.undoRedoService.undo();
      }, n.prototype.redoCellEditing = function() {
        this.undoRedoService.redo();
      }, n.prototype.getCurrentUndoSize = function() {
        return this.undoRedoService.getCurrentUndoStackSize();
      }, n.prototype.getCurrentRedoSize = function() {
        return this.undoRedoService.getCurrentRedoStackSize();
      }, n.prototype.getChartModels = function() {
        if (oe.assertRegistered(c.ModuleNames.RangeSelectionModule, "api.getChartModels") && oe.assertRegistered(c.ModuleNames.GridChartsModule, "api.getChartModels"))
          return this.chartService.getChartModels();
      }, n.prototype.getChartRef = function(t) {
        if (oe.assertRegistered(c.ModuleNames.RangeSelectionModule, "api.getChartRef") && oe.assertRegistered(c.ModuleNames.GridChartsModule, "api.getChartRef"))
          return this.chartService.getChartRef(t);
      }, n.prototype.getChartImageDataURL = function(t) {
        if (oe.assertRegistered(c.ModuleNames.RangeSelectionModule, "api.getChartImageDataURL") && oe.assertRegistered(c.ModuleNames.GridChartsModule, "api.getChartImageDataURL"))
          return this.chartService.getChartImageDataURL(t);
      }, n.prototype.createRangeChart = function(t) {
        if (oe.assertRegistered(c.ModuleNames.RangeSelectionModule, "api.createRangeChart") && oe.assertRegistered(c.ModuleNames.GridChartsModule, "api.createRangeChart"))
          return this.chartService.createRangeChart(t);
      }, n.prototype.createCrossFilterChart = function(t) {
        if (oe.assertRegistered(c.ModuleNames.RangeSelectionModule, "api.createCrossFilterChart") && oe.assertRegistered(c.ModuleNames.GridChartsModule, "api.createCrossFilterChart"))
          return this.chartService.createCrossFilterChart(t);
      }, n.prototype.restoreChart = function(t, e) {
        if (oe.assertRegistered(c.ModuleNames.RangeSelectionModule, "api.restoreChart") && oe.assertRegistered(c.ModuleNames.GridChartsModule, "api.restoreChart"))
          return this.chartService.restoreChart(t, e);
      }, n.prototype.createPivotChart = function(t) {
        if (oe.assertRegistered(c.ModuleNames.RangeSelectionModule, "api.createPivotChart") && oe.assertRegistered(c.ModuleNames.GridChartsModule, "api.createPivotChart"))
          return this.chartService.createPivotChart(t);
      }, n.prototype.copySelectedRowsToClipboard = function(t) {
        this.clipboardService || console.warn("AG Grid: clipboard is only available in AG Grid Enterprise"), this.clipboardService.copySelectedRowsToClipboard(t);
      }, n.prototype.copySelectedRangeToClipboard = function(t) {
        this.clipboardService || console.warn("AG Grid: clipboard is only available in AG Grid Enterprise"), this.clipboardService.copySelectedRangeToClipboard(t);
      }, n.prototype.copySelectedRangeDown = function() {
        this.clipboardService || console.warn("AG Grid: clipboard is only available in AG Grid Enterprise"), this.clipboardService.copyRangeDown();
      }, n.prototype.showColumnMenuAfterButtonClick = function(t, e) {
        var r = this.columnModel.getGridColumn(t);
        this.menuFactory.showMenuAfterButtonClick(r, e, "columnMenu");
      }, n.prototype.showColumnMenuAfterMouseClick = function(t, e) {
        var r = this.columnModel.getGridColumn(t);
        if (r || (r = this.columnModel.getPrimaryColumn(t)), !r) {
          console.error("AG Grid: column '" + t + "' not found");
          return;
        }
        this.menuFactory.showMenuAfterMouseEvent(r, e);
      }, n.prototype.hidePopupMenu = function() {
        this.contextMenuFactory && this.contextMenuFactory.hideActiveMenu(), this.menuFactory.hideActiveMenu();
      }, n.prototype.setPopupParent = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_POPUP_PARENT, t);
      }, n.prototype.tabToNextCell = function(t) {
        return this.navigationService.tabToNextCell(!1, t);
      }, n.prototype.tabToPreviousCell = function(t) {
        return this.navigationService.tabToNextCell(!0, t);
      }, n.prototype.getCellRendererInstances = function(t) {
        t === void 0 && (t = {});
        var e = this.rowRenderer.getCellRendererInstances(t), r = e.map(Er);
        return r;
      }, n.prototype.getCellEditorInstances = function(t) {
        t === void 0 && (t = {});
        var e = this.rowRenderer.getCellEditorInstances(t), r = e.map(Er);
        return r;
      }, n.prototype.getEditingCells = function() {
        return this.rowRenderer.getEditingCells();
      }, n.prototype.stopEditing = function(t) {
        t === void 0 && (t = !1), this.rowRenderer.stopEditing(t);
      }, n.prototype.startEditingCell = function(t) {
        var e = this.columnModel.getGridColumn(t.colKey);
        if (!e) {
          console.warn("AG Grid: no column found for " + t.colKey);
          return;
        }
        var r = {
          rowIndex: t.rowIndex,
          rowPinned: t.rowPinned || null,
          column: e
        }, o = t.rowPinned == null;
        o && this.gridBodyCtrl.getScrollFeature().ensureIndexVisible(t.rowIndex);
        var i = this.navigationService.getCellByPosition(r);
        i && i.startRowOrCellEdit(t.key, t.charPress);
      }, n.prototype.addAggFunc = function(t, e) {
        this.aggFuncService && this.aggFuncService.addAggFunc(t, e);
      }, n.prototype.addAggFuncs = function(t) {
        this.aggFuncService && this.aggFuncService.addAggFuncs(t);
      }, n.prototype.clearAggFuncs = function() {
        this.aggFuncService && this.aggFuncService.clear();
      }, n.prototype.applyServerSideTransaction = function(t) {
        if (!this.serverSideTransactionManager) {
          console.warn("AG Grid: Cannot apply Server Side Transaction if not using the Server Side Row Model.");
          return;
        }
        return this.serverSideTransactionManager.applyTransaction(t);
      }, n.prototype.applyServerSideTransactionAsync = function(t, e) {
        if (!this.serverSideTransactionManager) {
          console.warn("AG Grid: Cannot apply Server Side Transaction if not using the Server Side Row Model.");
          return;
        }
        return this.serverSideTransactionManager.applyTransactionAsync(t, e);
      }, n.prototype.retryServerSideLoads = function() {
        if (!this.serverSideRowModel) {
          console.warn("AG Grid: API retryServerSideLoads() can only be used when using Server-Side Row Model.");
          return;
        }
        this.serverSideRowModel.retryLoads();
      }, n.prototype.flushServerSideAsyncTransactions = function() {
        if (!this.serverSideTransactionManager) {
          console.warn("AG Grid: Cannot flush Server Side Transaction if not using the Server Side Row Model.");
          return;
        }
        return this.serverSideTransactionManager.flushAsyncTransactions();
      }, n.prototype.applyTransaction = function(t) {
        if (!this.clientSideRowModel) {
          console.error("AG Grid: updateRowData() only works with ClientSideRowModel. Working with InfiniteRowModel was deprecated in v23.1 and removed in v24.1");
          return;
        }
        var e = this.clientSideRowModel.updateRowData(t);
        return this.rowRenderer.refreshFullWidthRows(e.update), this.gridOptionsWrapper.isSuppressChangeDetection() || this.rowRenderer.refreshCells(), e;
      }, n.prototype.setDeltaSort = function(t) {
        this.gridOptionsWrapper.setProperty("deltaSort", t);
      }, n.prototype.updateRowData = function(t) {
        var e = "AG Grid: as of v23.1, grid API updateRowData(transaction) is now called applyTransaction(transaction). updateRowData is deprecated and will be removed in a future major release.";
        return me(function() {
          return console.warn(e);
        }, "updateRowData deprecated"), this.applyTransaction(t);
      }, n.prototype.applyTransactionAsync = function(t, e) {
        if (!this.clientSideRowModel) {
          console.error("AG Grid: api.applyTransactionAsync() only works with ClientSideRowModel.");
          return;
        }
        this.clientSideRowModel.batchUpdateRowData(t, e);
      }, n.prototype.flushAsyncTransactions = function() {
        if (!this.clientSideRowModel) {
          console.error("AG Grid: api.applyTransactionAsync() only works with ClientSideRowModel.");
          return;
        }
        this.clientSideRowModel.flushAsyncTransactions();
      }, n.prototype.batchUpdateRowData = function(t, e) {
        var r = "AG Grid: as of v23.1, grid API batchUpdateRowData(transaction, callback) is now called applyTransactionAsync(transaction, callback). batchUpdateRowData is deprecated and will be removed in a future major release.";
        me(function() {
          return console.warn(r);
        }, "batchUpdateRowData deprecated"), this.applyTransactionAsync(t, e);
      }, n.prototype.insertItemsAtIndex = function(t, e, r) {
        console.warn("AG Grid: insertItemsAtIndex() is deprecated, use updateRowData(transaction) instead."), this.updateRowData({ add: e, addIndex: t, update: null, remove: null });
      }, n.prototype.removeItems = function(t, e) {
        console.warn("AG Grid: removeItems() is deprecated, use updateRowData(transaction) instead.");
        var r = t.map(function(o) {
          return o.data;
        });
        this.updateRowData({ add: null, addIndex: null, update: null, remove: r });
      }, n.prototype.addItems = function(t, e) {
        console.warn("AG Grid: addItems() is deprecated, use updateRowData(transaction) instead."), this.updateRowData({ add: t, addIndex: null, update: null, remove: null });
      }, n.prototype.refreshVirtualPageCache = function() {
        console.warn("AG Grid: refreshVirtualPageCache() is now called refreshInfiniteCache(), please call refreshInfiniteCache() instead"), this.refreshInfiniteCache();
      }, n.prototype.refreshInfinitePageCache = function() {
        console.warn("AG Grid: refreshInfinitePageCache() is now called refreshInfiniteCache(), please call refreshInfiniteCache() instead"), this.refreshInfiniteCache();
      }, n.prototype.refreshInfiniteCache = function() {
        this.infiniteRowModel ? this.infiniteRowModel.refreshCache() : console.warn("AG Grid: api.refreshInfiniteCache is only available when rowModelType='infinite'.");
      }, n.prototype.purgeVirtualPageCache = function() {
        console.warn("AG Grid: purgeVirtualPageCache() is now called purgeInfiniteCache(), please call purgeInfiniteCache() instead"), this.purgeInfinitePageCache();
      }, n.prototype.purgeInfinitePageCache = function() {
        console.warn("AG Grid: purgeInfinitePageCache() is now called purgeInfiniteCache(), please call purgeInfiniteCache() instead"), this.purgeInfiniteCache();
      }, n.prototype.purgeInfiniteCache = function() {
        this.infiniteRowModel ? this.infiniteRowModel.purgeCache() : console.warn("AG Grid: api.purgeInfiniteCache is only available when rowModelType='infinite'.");
      }, n.prototype.purgeEnterpriseCache = function(t) {
        console.warn("ag-grid: since version 18.x, api.purgeEnterpriseCache() should be replaced with api.purgeServerSideCache()"), this.purgeServerSideCache(t);
      }, n.prototype.purgeServerSideCache = function(t) {
        t === void 0 && (t = []), this.serverSideRowModel ? (console.warn("AG Grid: since v25.0, api.purgeServerSideCache is deprecated. Please use api.refreshServerSideStore({purge: true}) instead."), this.refreshServerSideStore({
          route: t,
          purge: !0
        })) : console.warn("AG Grid: api.purgeServerSideCache is only available when rowModelType='serverSide'.");
      }, n.prototype.refreshServerSideStore = function(t) {
        this.serverSideRowModel ? this.serverSideRowModel.refreshStore(t) : console.warn("AG Grid: api.refreshServerSideStore is only available when rowModelType='serverSide'.");
      }, n.prototype.getServerSideStoreState = function() {
        return this.serverSideRowModel ? this.serverSideRowModel.getStoreState() : (console.warn("AG Grid: api.getServerSideStoreState is only available when rowModelType='serverSide'."), []);
      }, n.prototype.getVirtualRowCount = function() {
        return console.warn("AG Grid: getVirtualRowCount() is now called getInfiniteRowCount(), please call getInfiniteRowCount() instead"), this.getInfiniteRowCount();
      }, n.prototype.getInfiniteRowCount = function() {
        if (this.infiniteRowModel)
          return this.infiniteRowModel.getRowCount();
        console.warn("AG Grid: api.getVirtualRowCount is only available when rowModelType='virtual'.");
      }, n.prototype.isMaxRowFound = function() {
        return console.warn("AG Grid: api.isLastRowIndexKnown is deprecated, please use api.isLastRowIndexKnown()"), this.isLastRowIndexKnown();
      }, n.prototype.isLastRowIndexKnown = function() {
        if (this.infiniteRowModel)
          return this.infiniteRowModel.isLastRowIndexKnown();
        console.warn("AG Grid: api.isMaxRowFound is only available when rowModelType='virtual'.");
      }, n.prototype.setVirtualRowCount = function(t, e) {
        console.warn("AG Grid: setVirtualRowCount() is now called setInfiniteRowCount(), please call setInfiniteRowCount() instead"), this.setRowCount(t, e);
      }, n.prototype.setInfiniteRowCount = function(t, e) {
        console.warn("AG Grid: setInfiniteRowCount() is now called setRowCount(), please call setRowCount() instead"), this.setRowCount(t, e);
      }, n.prototype.setRowCount = function(t, e) {
        this.infiniteRowModel ? this.infiniteRowModel.setRowCount(t, e) : console.warn("AG Grid: api.setRowCount is only available for Infinite Row Model.");
      }, n.prototype.getVirtualPageState = function() {
        return console.warn("AG Grid: getVirtualPageState() is now called getCacheBlockState(), please call getCacheBlockState() instead"), this.getCacheBlockState();
      }, n.prototype.getInfinitePageState = function() {
        return console.warn("AG Grid: getInfinitePageState() is now called getCacheBlockState(), please call getCacheBlockState() instead"), this.getCacheBlockState();
      }, n.prototype.getCacheBlockState = function() {
        return this.rowNodeBlockLoader.getBlockState();
      }, n.prototype.checkGridSize = function() {
        console.warn("in AG Grid v25.2.0, checkGridSize() was removed, as it was legacy and didn't do anything uesful.");
      }, n.prototype.getFirstRenderedRow = function() {
        return console.warn("in AG Grid v12, getFirstRenderedRow() was renamed to getFirstDisplayedRow()"), this.getFirstDisplayedRow();
      }, n.prototype.getFirstDisplayedRow = function() {
        return this.rowRenderer.getFirstVirtualRenderedRow();
      }, n.prototype.getLastRenderedRow = function() {
        return console.warn("in AG Grid v12, getLastRenderedRow() was renamed to getLastDisplayedRow()"), this.getLastDisplayedRow();
      }, n.prototype.getLastDisplayedRow = function() {
        return this.rowRenderer.getLastVirtualRenderedRow();
      }, n.prototype.getDisplayedRowAtIndex = function(t) {
        return this.rowModel.getRow(t);
      }, n.prototype.getDisplayedRowCount = function() {
        return this.rowModel.getRowCount();
      }, n.prototype.paginationIsLastPageFound = function() {
        return this.paginationProxy.isLastPageFound();
      }, n.prototype.paginationGetPageSize = function() {
        return this.paginationProxy.getPageSize();
      }, n.prototype.paginationSetPageSize = function(t) {
        this.gridOptionsWrapper.setProperty("paginationPageSize", t);
      }, n.prototype.paginationGetCurrentPage = function() {
        return this.paginationProxy.getCurrentPage();
      }, n.prototype.paginationGetTotalPages = function() {
        return this.paginationProxy.getTotalPages();
      }, n.prototype.paginationGetRowCount = function() {
        return this.paginationProxy.getMasterRowCount();
      }, n.prototype.paginationGoToNextPage = function() {
        this.paginationProxy.goToNextPage();
      }, n.prototype.paginationGoToPreviousPage = function() {
        this.paginationProxy.goToPreviousPage();
      }, n.prototype.paginationGoToFirstPage = function() {
        this.paginationProxy.goToFirstPage();
      }, n.prototype.paginationGoToLastPage = function() {
        this.paginationProxy.goToLastPage();
      }, n.prototype.paginationGoToPage = function(t) {
        this.paginationProxy.goToPage(t);
      }, n.prototype.setRowClass = function(t) {
        this.gridOptionsWrapper.setProperty(z.PROP_ROW_CLASS, t);
      }, ye([
        ve("immutableService")
      ], n.prototype, "immutableService", void 0), ye([
        ve("csvCreator")
      ], n.prototype, "csvCreator", void 0), ye([
        ve("excelCreator")
      ], n.prototype, "excelCreator", void 0), ye([
        h("rowRenderer")
      ], n.prototype, "rowRenderer", void 0), ye([
        h("navigationService")
      ], n.prototype, "navigationService", void 0), ye([
        h("filterManager")
      ], n.prototype, "filterManager", void 0), ye([
        h("columnModel")
      ], n.prototype, "columnModel", void 0), ye([
        h("selectionService")
      ], n.prototype, "selectionService", void 0), ye([
        h("gridOptionsWrapper")
      ], n.prototype, "gridOptionsWrapper", void 0), ye([
        h("valueService")
      ], n.prototype, "valueService", void 0), ye([
        h("alignedGridsService")
      ], n.prototype, "alignedGridsService", void 0), ye([
        h("eventService")
      ], n.prototype, "eventService", void 0), ye([
        h("pinnedRowModel")
      ], n.prototype, "pinnedRowModel", void 0), ye([
        h("context")
      ], n.prototype, "context", void 0), ye([
        h("rowModel")
      ], n.prototype, "rowModel", void 0), ye([
        h("sortController")
      ], n.prototype, "sortController", void 0), ye([
        h("paginationProxy")
      ], n.prototype, "paginationProxy", void 0), ye([
        h("focusService")
      ], n.prototype, "focusService", void 0), ye([
        h("dragAndDropService")
      ], n.prototype, "dragAndDropService", void 0), ye([
        ve("rangeService")
      ], n.prototype, "rangeService", void 0), ye([
        ve("clipboardService")
      ], n.prototype, "clipboardService", void 0), ye([
        ve("aggFuncService")
      ], n.prototype, "aggFuncService", void 0), ye([
        h("menuFactory")
      ], n.prototype, "menuFactory", void 0), ye([
        ve("contextMenuFactory")
      ], n.prototype, "contextMenuFactory", void 0), ye([
        h("valueCache")
      ], n.prototype, "valueCache", void 0), ye([
        h("animationFrameService")
      ], n.prototype, "animationFrameService", void 0), ye([
        ve("statusBarService")
      ], n.prototype, "statusBarService", void 0), ye([
        ve("chartService")
      ], n.prototype, "chartService", void 0), ye([
        ve("undoRedoService")
      ], n.prototype, "undoRedoService", void 0), ye([
        ve("rowNodeBlockLoader")
      ], n.prototype, "rowNodeBlockLoader", void 0), ye([
        ve("ssrmTransactionManager")
      ], n.prototype, "serverSideTransactionManager", void 0), ye([
        h("ctrlsService")
      ], n.prototype, "ctrlsService", void 0), ye([
        ve("frameworkComponentWrapper")
      ], n.prototype, "frameworkComponentWrapper", void 0), ye([
        B
      ], n.prototype, "init", null), ye([
        De
      ], n.prototype, "cleanDownReferencesToAvoidMemoryLeakInCaseApplicationIsKeepingReferenceToDestroyedGrid", null), n = ye([
        j("gridApi")
      ], n), n;
    }()
  );
  var Kg = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Yg = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Bi = (
    /** @class */
    function(n) {
      Kg(t, n);
      function t(e, r, o, i) {
        var s = n.call(this) || this;
        return s.columnOrGroup = e, s.eCell = r, s.ariaEl = s.eCell.querySelector("[role=columnheader]") || s.eCell, s.colsSpanning = i, s.beans = o, s;
      }
      return t.prototype.setColsSpanning = function(e) {
        this.colsSpanning = e, this.onLeftChanged();
      }, t.prototype.getColumnOrGroup = function() {
        return this.beans.gridOptionsWrapper.isEnableRtl() && this.colsSpanning ? M(this.colsSpanning) : this.columnOrGroup;
      }, t.prototype.postConstruct = function() {
        this.addManagedListener(this.columnOrGroup, A.EVENT_LEFT_CHANGED, this.onLeftChanged.bind(this)), this.setLeftFirstTime(), this.addManagedListener(this.eventService, m.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, this.onLeftChanged.bind(this)), this.addManagedListener(this.beans.gridOptionsWrapper, z.PROP_DOM_LAYOUT, this.onLeftChanged.bind(this));
      }, t.prototype.setLeftFirstTime = function() {
        var e = this.beans.gridOptionsWrapper.isSuppressColumnMoveAnimation(), r = g(this.columnOrGroup.getOldLeft()), o = this.beans.columnAnimationService.isActive() && r && !e;
        o ? this.animateInLeft() : this.onLeftChanged();
      }, t.prototype.animateInLeft = function() {
        var e = this, r = this.getColumnOrGroup(), o = r.getLeft(), i = r.getOldLeft(), s = this.modifyLeftForPrintLayout(r, i), a = this.modifyLeftForPrintLayout(r, o);
        this.setLeft(s), this.actualLeft = a, this.beans.columnAnimationService.executeNextVMTurn(function() {
          e.actualLeft === a && e.setLeft(a);
        });
      }, t.prototype.onLeftChanged = function() {
        var e = this.getColumnOrGroup(), r = e.getLeft();
        this.actualLeft = this.modifyLeftForPrintLayout(e, r), this.setLeft(this.actualLeft);
      }, t.prototype.modifyLeftForPrintLayout = function(e, r) {
        var o = this.beans.gridOptionsWrapper.getDomLayout() === E.DOM_LAYOUT_PRINT;
        if (!o || e.getPinned() === E.PINNED_LEFT)
          return r;
        var i = this.beans.columnModel.getDisplayedColumnsLeftWidth();
        if (e.getPinned() === E.PINNED_RIGHT) {
          var s = this.beans.columnModel.getBodyContainerWidth();
          return i + s + r;
        }
        return i + r;
      }, t.prototype.setLeft = function(e) {
        g(e) && (this.eCell.style.left = e + "px");
        var r;
        if (this.columnOrGroup instanceof A)
          r = this.columnOrGroup;
        else {
          var o = this.columnOrGroup, i = o.getLeafColumns();
          if (!i.length)
            return;
          i.length > 1 && el(this.ariaEl, i.length), r = i[0];
        }
        var s = this.beans.columnModel.getAriaColumnIndex(r);
        rs(this.ariaEl, s);
      }, Yg([
        B
      ], t.prototype, "postConstruct", null), t;
    }(H)
  );
  var qg = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Eu = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Ws = (
    /** @class */
    function(n) {
      qg(t, n);
      function t(e, r) {
        var o = n.call(this) || this;
        return o.columns = e, o.element = r, o;
      }
      return t.prototype.postConstruct = function() {
        this.gridOptionsWrapper.isColumnHoverHighlight() && this.addMouseHoverListeners();
      }, t.prototype.addMouseHoverListeners = function() {
        this.addManagedListener(this.element, "mouseout", this.onMouseOut.bind(this)), this.addManagedListener(this.element, "mouseover", this.onMouseOver.bind(this));
      }, t.prototype.onMouseOut = function() {
        this.columnHoverService.clearMouseOver();
      }, t.prototype.onMouseOver = function() {
        this.columnHoverService.setMouseOver(this.columns);
      }, Eu([
        h("columnHoverService")
      ], t.prototype, "columnHoverService", void 0), Eu([
        B
      ], t.prototype, "postConstruct", null), t;
    }(H)
  );
  var Xg = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Kr = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Ru = (
    /** @class */
    function(n) {
      Xg(t, n);
      function t(e, r) {
        var o = n.call(this, e, r) || this;
        return o.column = e, o;
      }
      return t.prototype.setComp = function(e, r, o, i) {
        n.prototype.setGui.call(this, r), this.comp = e, this.eButtonShowMainFilter = o, this.eFloatingFilterBody = i;
        var s = this.column.getColDef(), a = !!s.filter || !!s.filterFramework, l = !!s.floatingFilter;
        this.active = a && l, this.setupWidth(), this.setupLeft(), this.setupHover(), this.setupFocus(), this.setupUserComp(), this.setupSyncWithFilter(), this.setupUi(), this.addManagedListener(this.eButtonShowMainFilter, "click", this.showParentFilter.bind(this));
      }, t.prototype.setupUi = function() {
        if (this.comp.addOrRemoveButtonWrapperCssClass("ag-hidden", !this.active || this.suppressFilterButton), !!this.active) {
          this.comp.addOrRemoveBodyCssClass("ag-floating-filter-full-body", this.suppressFilterButton), this.comp.addOrRemoveBodyCssClass("ag-floating-filter-body", !this.suppressFilterButton);
          var e = be("filter", this.gridOptionsWrapper, this.column);
          e && this.eButtonShowMainFilter.appendChild(e);
        }
      }, t.prototype.setupFocus = function() {
        this.createManagedBean(new kt(this.eGui, {
          shouldStopEventPropagation: this.shouldStopEventPropagation.bind(this),
          onTabKeyDown: this.onTabKeyDown.bind(this),
          handleKeyDown: this.handleKeyDown.bind(this),
          onFocusIn: this.onFocusIn.bind(this)
        }));
      }, t.prototype.onTabKeyDown = function(e) {
        var r = this.gridOptionsWrapper.getDocument(), o = r.activeElement, i = o === this.eGui;
        if (!i) {
          var s = this.focusService.findNextFocusableElement(this.eGui, null, e.shiftKey);
          if (s) {
            this.beans.headerNavigationService.scrollToColumn(this.column), e.preventDefault(), s.focus();
            return;
          }
          var a = this.findNextColumnWithFloatingFilter(e.shiftKey);
          a && this.focusService.focusHeaderPosition({
            headerPosition: {
              headerRowIndex: this.getParentRowCtrl().getRowIndex(),
              column: a
            },
            event: e
          }) && e.preventDefault();
        }
      }, t.prototype.findNextColumnWithFloatingFilter = function(e) {
        var r = this.beans.columnModel, o = this.column;
        do
          if (o = e ? r.getDisplayedColBefore(o) : r.getDisplayedColAfter(o), !o)
            break;
        while (!o.getColDef().filter || !o.getColDef().floatingFilter);
        return o;
      }, t.prototype.handleKeyDown = function(e) {
        var r = this.gridOptionsWrapper.getDocument(), o = r.activeElement, i = o === this.eGui;
        switch (e.key) {
          case N.UP:
          case N.DOWN:
            i || e.preventDefault();
          case N.LEFT:
          case N.RIGHT:
            if (i)
              return;
            e.stopPropagation();
          case N.ENTER:
            i && this.focusService.focusInto(this.eGui) && e.preventDefault();
            break;
          case N.ESCAPE:
            i || this.eGui.focus();
        }
      }, t.prototype.onFocusIn = function(e) {
        var r = this.eGui.contains(e.relatedTarget);
        if (!r) {
          var o = !!e.relatedTarget && !e.relatedTarget.classList.contains("ag-floating-filter"), i = !!e.relatedTarget && yi(e.relatedTarget, "ag-floating-filter");
          if (o && i && e.target === this.eGui) {
            var s = this.lastFocusEvent, a = !!(s && s.key === N.TAB);
            if (s && a) {
              var l = s.shiftKey;
              this.focusService.focusInto(this.eGui, l);
            }
          }
          var u = this.getRowIndex();
          this.beans.focusService.setFocusedHeader(u, this.column);
        }
      }, t.prototype.setupHover = function() {
        var e = this;
        this.createManagedBean(new Ws([this.column], this.eGui));
        var r = function() {
          if (e.gridOptionsWrapper.isColumnHoverHighlight()) {
            var o = e.columnHoverService.isHovered(e.column);
            e.comp.addOrRemoveCssClass("ag-column-hover", o);
          }
        };
        this.addManagedListener(this.eventService, m.EVENT_COLUMN_HOVER_CHANGED, r), r();
      }, t.prototype.setupLeft = function() {
        var e = new Bi(this.column, this.eGui, this.beans);
        this.createManagedBean(e);
      }, t.prototype.setupUserComp = function() {
        var e = this;
        if (this.active) {
          var r = this.column.getColDef(), o = this.filterManager.createFilterParams(this.column, r), i = this.userComponentFactory.mergeParamsWithApplicationProvidedParams(r, As, o), s = this.userComponentFactory.getDefaultFloatingFilterType(r);
          s == null && (s = "agReadOnlyFloatingFilter");
          var a = {
            column: this.column,
            filterParams: i,
            currentParentModel: function() {
              return e.currentParentModel();
            },
            parentFilterInstance: function(u) {
              return e.parentFilterInstance(u);
            },
            showParentFilter: function() {
              return e.showParentFilter();
            },
            suppressFilterButton: !1
            // This one might be overridden from the colDef
          };
          this.suppressFilterButton = r.floatingFilterComponentParams ? !!r.floatingFilterComponentParams.suppressFilterButton : !1;
          var l = this.userComponentFactory.getFloatingFilterCompDetails(r, a, s);
          l && this.comp.setCompDetails(l);
        }
      }, t.prototype.currentParentModel = function() {
        var e = this.getFilterComponent(!1);
        return e ? e.resolveNow(null, function(r) {
          return r && r.getModel();
        }) : null;
      }, t.prototype.getFilterComponent = function(e) {
        return e === void 0 && (e = !0), this.filterManager.getFilterComponent(this.column, "NO_UI", e);
      }, t.prototype.parentFilterInstance = function(e) {
        var r = this.getFilterComponent();
        r?.then(function(o) {
          e(Er(o));
        });
      }, t.prototype.showParentFilter = function() {
        var e = this.suppressFilterButton ? this.eFloatingFilterBody : this.eButtonShowMainFilter;
        this.menuFactory.showMenuAfterButtonClick(this.column, e, "floatingFilter", "filterMenuTab", ["filterMenuTab"]);
      }, t.prototype.setupSyncWithFilter = function() {
        var e = this;
        if (this.active) {
          var r = function(o) {
            var i = e.comp.getFloatingFilterComp();
            if (i) {
              var s = e.currentParentModel();
              i.then(function(a) {
                a && a.onParentModelChanged(s, o);
              });
            }
          };
          this.addManagedListener(this.column, A.EVENT_FILTER_CHANGED, r), this.filterManager.isFilterActive(this.column) && r(null);
        }
      }, t.prototype.setupWidth = function() {
        var e = this, r = function() {
          var o = e.column.getActualWidth() + "px";
          e.comp.setWidth(o);
        };
        this.addManagedListener(this.column, A.EVENT_WIDTH_CHANGED, r), r();
      }, Kr([
        h("userComponentFactory")
      ], t.prototype, "userComponentFactory", void 0), Kr([
        h("filterManager")
      ], t.prototype, "filterManager", void 0), Kr([
        h("columnHoverService")
      ], t.prototype, "columnHoverService", void 0), Kr([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), Kr([
        h("menuFactory")
      ], t.prototype, "menuFactory", void 0), Kr([
        h("beans")
      ], t.prototype, "beans", void 0), t;
    }(Wo)
  );
  var Qg = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Bs = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Zg = (
    /** @class */
    function(n) {
      Qg(t, n);
      function t(e, r, o, i, s) {
        var a = n.call(this) || this;
        return a.pinned = e, a.column = r, a.eResize = o, a.comp = i, a.ctrl = s, a;
      }
      return t.prototype.postConstruct = function() {
        var e = this, r = this.column.getColDef(), o = [], i, s, a = function() {
          if (Ee(e.eResize, i), !!i) {
            var p = e.horizontalResizeService.addResizeBar({
              eResizeBar: e.eResize,
              onResizeStart: e.onResizeStart.bind(e),
              onResizing: e.onResizing.bind(e, !1),
              onResizeEnd: e.onResizing.bind(e, !0)
            });
            if (o.push(p), s) {
              var d = e.gridOptionsWrapper.isSkipHeaderOnAutoSize(), f = function() {
                e.columnModel.autoSizeColumn(e.column, d, "uiColumnResized");
              };
              e.eResize.addEventListener("dblclick", f);
              var v = new at(e.eResize);
              v.addEventListener(at.EVENT_DOUBLE_TAP, f), e.addDestroyFunc(function() {
                e.eResize.removeEventListener("dblclick", f), v.removeEventListener(at.EVENT_DOUBLE_TAP, f), v.destroy();
              });
            }
          }
        }, l = function() {
          o.forEach(function(p) {
            return p();
          }), o.length = 0;
        }, u = function() {
          var p = e.column.isResizable(), d = !e.gridOptionsWrapper.isSuppressAutoSize() && !r.suppressAutoSize, f = p !== i || d !== s;
          f && (i = p, s = d, l(), a());
        };
        u(), this.addDestroyFunc(l), this.ctrl.addRefreshFunction(u);
      }, t.prototype.onResizing = function(e, r) {
        var o = this.normaliseResizeAmount(r), i = [{ key: this.column, newWidth: this.resizeStartWidth + o }];
        this.columnModel.setColumnWidths(i, this.resizeWithShiftKey, e, "uiColumnDragged"), e && this.comp.addOrRemoveCssClass("ag-column-resizing", !1);
      }, t.prototype.onResizeStart = function(e) {
        this.resizeStartWidth = this.column.getActualWidth(), this.resizeWithShiftKey = e, this.comp.addOrRemoveCssClass("ag-column-resizing", !0);
      }, t.prototype.normaliseResizeAmount = function(e) {
        var r = e, o = this.pinned !== E.PINNED_LEFT, i = this.pinned === E.PINNED_RIGHT;
        return this.gridOptionsWrapper.isEnableRtl() ? o && (r *= -1) : i && (r *= -1), r;
      }, Bs([
        h("horizontalResizeService")
      ], t.prototype, "horizontalResizeService", void 0), Bs([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), Bs([
        B
      ], t.prototype, "postConstruct", null), t;
    }(H)
  );
  var Jg = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Yr = (
    /** @class */
    function(n) {
      Jg(t, n);
      function t(e, r, o) {
        r === void 0 && (r = "ag-checkbox"), o === void 0 && (o = "checkbox");
        var i = n.call(this, e, r, o) || this;
        return i.labelAlignment = "right", i.selected = !1, i.readOnly = !1, i.passive = !1, i;
      }
      return t.prototype.addInputListeners = function() {
        this.addManagedListener(this.eInput, "click", this.onCheckboxClick.bind(this)), this.addManagedListener(this.eLabel, "click", this.toggle.bind(this));
      }, t.prototype.getNextValue = function() {
        return this.selected === void 0 ? !0 : !this.selected;
      }, t.prototype.setPassive = function(e) {
        this.passive = e;
      }, t.prototype.isReadOnly = function() {
        return this.readOnly;
      }, t.prototype.setReadOnly = function(e) {
        this.eWrapper.classList.toggle("ag-disabled", e), this.eInput.disabled = e, this.readOnly = e;
      }, t.prototype.setDisabled = function(e) {
        return this.eWrapper.classList.toggle("ag-disabled", e), n.prototype.setDisabled.call(this, e);
      }, t.prototype.toggle = function() {
        if (!this.eInput.disabled) {
          var e = this.isSelected(), r = this.getNextValue();
          this.passive ? this.dispatchChange(r, e) : this.setValue(r);
        }
      }, t.prototype.getValue = function() {
        return this.isSelected();
      }, t.prototype.setValue = function(e, r) {
        return this.refreshSelectedClass(e), this.setSelected(e, r), this;
      }, t.prototype.setName = function(e) {
        var r = this.getInputElement();
        return r.name = e, this;
      }, t.prototype.isSelected = function() {
        return this.selected;
      }, t.prototype.setSelected = function(e, r) {
        this.isSelected() !== e && (this.previousValue = this.isSelected(), e = this.selected = typeof e == "boolean" ? e : void 0, this.eInput.checked = e, this.eInput.indeterminate = e === void 0, r || this.dispatchChange(this.selected, this.previousValue));
      }, t.prototype.dispatchChange = function(e, r, o) {
        this.dispatchEvent({ type: t.EVENT_CHANGED, selected: e, previousValue: r, event: o });
        var i = this.getInputElement(), s = {
          type: m.EVENT_CHECKBOX_CHANGED,
          id: i.id,
          name: i.name,
          selected: e,
          previousValue: r
        };
        this.eventService.dispatchEvent(s);
      }, t.prototype.onCheckboxClick = function(e) {
        if (!(this.passive || this.eInput.disabled)) {
          var r = this.isSelected(), o = this.selected = e.target.checked;
          this.refreshSelectedClass(o), this.dispatchChange(o, r, e);
        }
      }, t.prototype.refreshSelectedClass = function(e) {
        this.eWrapper.classList.toggle("ag-checked", e === !0), this.eWrapper.classList.toggle("ag-indeterminate", e == null);
      }, t;
    }(Ut)
  );
  var ev = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), ki = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, tv = (
    /** @class */
    function(n) {
      ev(t, n);
      function t(e) {
        var r = n.call(this) || this;
        r.cbSelectAllVisible = !1, r.processingEventFromCheckbox = !1, r.column = e;
        var o = e.getColDef();
        return r.filteredOnly = o ? !!o.headerCheckboxSelectionFilteredOnly : !1, r;
      }
      return t.prototype.onSpaceKeyPressed = function(e) {
        var r = this.cbSelectAll, o = this.gridOptionsWrapper.getDocument();
        r.isDisplayed() && !r.getGui().contains(o.activeElement) && (e.preventDefault(), r.setValue(!r.getValue()));
      }, t.prototype.getCheckboxGui = function() {
        return this.cbSelectAll.getGui();
      }, t.prototype.setComp = function(e) {
        this.headerCellCtrl = e, this.cbSelectAll = this.createManagedBean(new Yr()), this.cbSelectAll.addCssClass("ag-header-select-all"), ke(this.cbSelectAll.getGui(), "presentation"), this.showOrHideSelectAll(), this.addManagedListener(this.eventService, m.EVENT_NEW_COLUMNS_LOADED, this.showOrHideSelectAll.bind(this)), this.addManagedListener(this.eventService, m.EVENT_DISPLAYED_COLUMNS_CHANGED, this.showOrHideSelectAll.bind(this)), this.addManagedListener(this.eventService, m.EVENT_SELECTION_CHANGED, this.onSelectionChanged.bind(this)), this.addManagedListener(this.eventService, m.EVENT_MODEL_UPDATED, this.onModelChanged.bind(this)), this.addManagedListener(this.cbSelectAll, Yr.EVENT_CHANGED, this.onCbSelectAll.bind(this)), this.cbSelectAll.getInputElement().setAttribute("tabindex", "-1"), this.refreshSelectAllLabel();
      }, t.prototype.showOrHideSelectAll = function() {
        this.cbSelectAllVisible = this.isCheckboxSelection(), this.cbSelectAll.setDisplayed(this.cbSelectAllVisible), this.cbSelectAllVisible && (this.checkRightRowModelType(), this.updateStateOfCheckbox()), this.refreshSelectAllLabel();
      }, t.prototype.onModelChanged = function() {
        this.cbSelectAllVisible && this.updateStateOfCheckbox();
      }, t.prototype.onSelectionChanged = function() {
        this.cbSelectAllVisible && this.updateStateOfCheckbox();
      }, t.prototype.getNextCheckboxState = function(e) {
        return e.selected === 0 && e.notSelected === 0 ? !1 : e.selected > 0 && e.notSelected > 0 ? null : e.selected > 0;
      }, t.prototype.updateStateOfCheckbox = function() {
        if (!this.processingEventFromCheckbox) {
          this.processingEventFromCheckbox = !0;
          var e = this.getSelectionCount(), r = this.getNextCheckboxState(e);
          this.cbSelectAll.setValue(r), this.refreshSelectAllLabel(), this.processingEventFromCheckbox = !1;
        }
      }, t.prototype.refreshSelectAllLabel = function() {
        if (!this.cbSelectAllVisible)
          this.headerCellCtrl.setAriaDescriptionProperty("selectAll", null);
        else {
          var e = this.gridOptionsWrapper.getLocaleTextFunc(), r = this.cbSelectAll.getValue(), o = r ? e("ariaChecked", "checked") : e("ariaUnchecked", "unchecked"), i = e("ariaRowSelectAll", "Press Space to toggle all rows selection");
          this.headerCellCtrl.setAriaDescriptionProperty("selectAll", i + " (" + o + ")");
        }
        this.headerCellCtrl.refreshAriaDescription();
      }, t.prototype.getSelectionCount = function() {
        var e = this, r = 0, o = 0, i = function(s) {
          e.gridOptionsWrapper.isGroupSelectsChildren() && s.group || (s.isSelected() ? r++ : s.selectable && o++);
        };
        return this.filteredOnly ? this.gridApi.forEachNodeAfterFilter(i) : this.gridApi.forEachNode(i), {
          notSelected: o,
          selected: r
        };
      }, t.prototype.checkRightRowModelType = function() {
        var e = this.rowModel.getType(), r = e === E.ROW_MODEL_TYPE_CLIENT_SIDE;
        r || console.warn("AG Grid: selectAllCheckbox is only available if using normal row model, you are using " + e);
      }, t.prototype.onCbSelectAll = function() {
        if (!this.processingEventFromCheckbox && this.cbSelectAllVisible) {
          var e = this.cbSelectAll.getValue();
          e ? this.selectionService.selectAllRowNodes(this.filteredOnly) : this.selectionService.deselectAllRowNodes(this.filteredOnly);
        }
      }, t.prototype.isCheckboxSelection = function() {
        var e = this.column.getColDef().headerCheckboxSelection;
        if (typeof e == "function") {
          var r = e, o = {
            column: this.column,
            colDef: this.column.getColDef(),
            columnApi: this.columnApi,
            api: this.gridApi,
            context: this.gridOptionsWrapper.getContext()
          };
          e = r(o);
        }
        return e ? this.gridOptionsWrapper.isRowModelServerSide() ? (console.warn("AG Grid: headerCheckboxSelection is not supported for Server Side Row Model"), !1) : this.gridOptionsWrapper.isRowModelInfinite() ? (console.warn("AG Grid: headerCheckboxSelection is not supported for Infinite Row Model"), !1) : this.gridOptionsWrapper.isRowModelViewport() ? (console.warn("AG Grid: headerCheckboxSelection is not supported for Viewport Row Model"), !1) : !0 : !1;
      }, ki([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), ki([
        h("columnApi")
      ], t.prototype, "columnApi", void 0), ki([
        h("rowModel")
      ], t.prototype, "rowModel", void 0), ki([
        h("selectionService")
      ], t.prototype, "selectionService", void 0), t;
    }(H)
  );
  var rv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Lt = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Su = (
    /** @class */
    function(n) {
      rv(t, n);
      function t(e, r) {
        var o = n.call(this, e, r) || this;
        return o.refreshFunctions = [], o.userHeaderClasses = /* @__PURE__ */ new Set(), o.ariaDescriptionProperties = /* @__PURE__ */ new Map(), o.column = e, o;
      }
      return t.prototype.setComp = function(e, r, o) {
        var i = this;
        n.prototype.setGui.call(this, r), this.comp = e, this.colDefVersion = this.columnModel.getColDefVersion(), this.updateState(), this.setupWidth(), this.setupMovingCss(), this.setupMenuClass(), this.setupSortableClass(), this.addColumnHoverListener(), this.setupFilterCss(), this.setupColId(), this.setupClassesFromColDef(), this.setupTooltip(), this.addActiveHeaderMouseListeners(), this.setupSelectAll(), this.setupUserComp(), this.refreshAria(), this.createManagedBean(new Zg(this.getPinned(), this.column, o, e, this)), this.createManagedBean(new Ws([this.column], r)), this.createManagedBean(new Bi(this.column, r, this.beans)), this.createManagedBean(new kt(r, {
          shouldStopEventPropagation: function(s) {
            return i.shouldStopEventPropagation(s);
          },
          onTabKeyDown: function() {
            return null;
          },
          handleKeyDown: this.handleKeyDown.bind(this),
          onFocusIn: this.onFocusIn.bind(this),
          onFocusOut: this.onFocusOut.bind(this)
        })), this.addManagedListener(this.eventService, m.EVENT_NEW_COLUMNS_LOADED, this.onNewColumnsLoaded.bind(this)), this.addManagedListener(this.eventService, m.EVENT_COLUMN_VALUE_CHANGED, this.onColumnValueChanged.bind(this)), this.addManagedListener(this.eventService, m.EVENT_COLUMN_ROW_GROUP_CHANGED, this.onColumnRowGroupChanged.bind(this)), this.addManagedListener(this.eventService, m.EVENT_COLUMN_PIVOT_CHANGED, this.onColumnPivotChanged.bind(this));
      }, t.prototype.setupUserComp = function() {
        var e = this.lookupUserCompDetails();
        this.setCompDetails(e);
      }, t.prototype.setCompDetails = function(e) {
        this.userCompDetails = e, this.comp.setUserCompDetails(e);
      }, t.prototype.lookupUserCompDetails = function() {
        var e = this.createParams(), r = this.column.getColDef();
        return this.userComponentFactory.getHeaderCompDetails(r, e);
      }, t.prototype.createParams = function() {
        var e = this, r = this.column.getColDef(), o = {
          column: this.column,
          displayName: this.displayName,
          enableSorting: r.sortable,
          enableMenu: this.menuEnabled,
          showColumnMenu: function(i) {
            e.gridApi.showColumnMenuAfterButtonClick(e.column, i);
          },
          progressSort: function(i) {
            e.sortController.progressSort(e.column, !!i, "uiColumnSorted");
          },
          setSort: function(i, s) {
            e.sortController.setSortForColumn(e.column, i, !!s, "uiColumnSorted");
          },
          api: this.gridApi,
          columnApi: this.columnApi,
          context: this.gridOptionsWrapper.getContext(),
          eGridHeader: this.getGui()
        };
        return o;
      }, t.prototype.setupSelectAll = function() {
        this.selectAllFeature = this.createManagedBean(new tv(this.column)), this.selectAllFeature.setComp(this);
      }, t.prototype.getSelectAllGui = function() {
        return this.selectAllFeature.getCheckboxGui();
      }, t.prototype.handleKeyDown = function(e) {
        e.key === N.SPACE && this.selectAllFeature.onSpaceKeyPressed(e), e.key === N.ENTER && this.onEnterKeyPressed(e);
      }, t.prototype.onEnterKeyPressed = function(e) {
        var r = this.comp.getUserCompInstance();
        if (r) {
          if (e.ctrlKey || e.metaKey)
            this.menuEnabled && r.showMenu && (e.preventDefault(), r.showMenu());
          else if (this.sortable) {
            var o = e.shiftKey;
            this.sortController.progressSort(this.column, o, "uiColumnSorted");
          }
        }
      }, t.prototype.isMenuEnabled = function() {
        return this.menuEnabled;
      }, t.prototype.onFocusIn = function(e) {
        if (!this.getGui().contains(e.relatedTarget)) {
          var r = this.getRowIndex();
          this.focusService.setFocusedHeader(r, this.column);
        }
        this.setActiveHeader(!0);
      }, t.prototype.onFocusOut = function(e) {
        this.getGui().contains(e.relatedTarget) || this.setActiveHeader(!1);
      }, t.prototype.setupTooltip = function() {
        var e = this, r = {
          getColumn: function() {
            return e.column;
          },
          getColDef: function() {
            return e.column.getColDef();
          },
          getGui: function() {
            return e.eGui;
          },
          getLocation: function() {
            return "header";
          },
          getTooltipValue: function() {
            var i = e.column.getColDef().headerTooltip;
            return i;
          }
        }, o = this.createManagedBean(new Ls(r, this.beans));
        o.setComp(this.comp), this.refreshFunctions.push(function() {
          return o.refreshToolTip();
        });
      }, t.prototype.setupClassesFromColDef = function() {
        var e = this, r = function() {
          var o = e.column.getColDef(), i = e.gridOptionsWrapper, s = Gs.getHeaderClassesFromColDef(o, i, e.column, null), a = e.userHeaderClasses;
          e.userHeaderClasses = new Set(s), s.forEach(function(l) {
            a.has(l) ? a.delete(l) : e.comp.addOrRemoveCssClass(l, !0);
          }), a.forEach(function(l) {
            return e.comp.addOrRemoveCssClass(l, !1);
          });
        };
        this.refreshFunctions.push(r), r();
      }, t.prototype.setDragSource = function(e) {
        var r = this;
        this.dragSourceElement = e, this.removeDragSource(), e && this.draggable && (this.moveDragSource = {
          type: c.DragSourceType.HeaderCell,
          eElement: e,
          defaultIconName: $e.ICON_HIDE,
          getDragItem: function() {
            return r.createDragItem();
          },
          dragItemName: this.displayName,
          onDragStarted: function() {
            return r.column.setMoving(!0, "uiColumnMoved");
          },
          onDragStopped: function() {
            return r.column.setMoving(!1, "uiColumnMoved");
          }
        }, this.dragAndDropService.addDragSource(this.moveDragSource, !0));
      }, t.prototype.createDragItem = function() {
        var e = {};
        return e[this.column.getId()] = this.column.isVisible(), {
          columns: [this.column],
          visibleState: e
        };
      }, t.prototype.removeDragSource = function() {
        this.moveDragSource && (this.dragAndDropService.removeDragSource(this.moveDragSource), this.moveDragSource = void 0);
      }, t.prototype.onNewColumnsLoaded = function() {
        var e = this.columnModel.getColDefVersion();
        e != this.colDefVersion && (this.colDefVersion = e, this.refresh());
      }, t.prototype.updateState = function() {
        var e = this.column.getColDef();
        this.menuEnabled = this.menuFactory.isMenuEnabled(this.column) && !e.suppressMenu, this.sortable = e.sortable, this.displayName = this.calculateDisplayName(), this.draggable = this.workOutDraggable();
      }, t.prototype.addRefreshFunction = function(e) {
        this.refreshFunctions.push(e);
      }, t.prototype.refresh = function() {
        this.updateState(), this.refreshHeaderComp(), this.refreshAria(), this.refreshFunctions.forEach(function(e) {
          return e();
        });
      }, t.prototype.refreshHeaderComp = function() {
        var e = this.lookupUserCompDetails(), r = this.comp.getUserCompInstance(), o = r != null && this.userCompDetails.componentClass == e.componentClass, i = o ? this.attemptHeaderCompRefresh(e.params) : !1;
        i ? this.setDragSource(this.dragSourceElement) : this.setCompDetails(e);
      }, t.prototype.attemptHeaderCompRefresh = function(e) {
        var r = this.comp.getUserCompInstance();
        if (!r || !r.refresh)
          return !1;
        var o = r.refresh(e);
        return o;
      }, t.prototype.calculateDisplayName = function() {
        return this.columnModel.getDisplayNameForColumn(this.column, "header", !0);
      }, t.prototype.checkDisplayName = function() {
        this.displayName !== this.calculateDisplayName() && this.refresh();
      }, t.prototype.workOutDraggable = function() {
        var e = this.column.getColDef(), r = this.gridOptionsWrapper.isSuppressMovableColumns(), o = !r && !e.suppressMovable && !e.lockPosition;
        return !!o || !!e.enableRowGroup || !!e.enablePivot;
      }, t.prototype.onColumnRowGroupChanged = function() {
        this.checkDisplayName();
      }, t.prototype.onColumnPivotChanged = function() {
        this.checkDisplayName();
      }, t.prototype.onColumnValueChanged = function() {
        this.checkDisplayName();
      }, t.prototype.setupWidth = function() {
        var e = this, r = function() {
          e.comp.setWidth(e.column.getActualWidth() + "px");
        };
        this.addManagedListener(this.column, A.EVENT_WIDTH_CHANGED, r), r();
      }, t.prototype.setupMovingCss = function() {
        var e = this, r = function() {
          e.comp.addOrRemoveCssClass("ag-header-cell-moving", e.column.isMoving());
        };
        this.addManagedListener(this.column, A.EVENT_MOVING_CHANGED, r), r();
      }, t.prototype.setupMenuClass = function() {
        var e = this, r = function() {
          e.comp.addOrRemoveCssClass("ag-column-menu-visible", e.column.isMenuVisible());
        };
        this.addManagedListener(this.column, A.EVENT_MENU_VISIBLE_CHANGED, r), r();
      }, t.prototype.setupSortableClass = function() {
        var e = this, r = function() {
          e.comp.addOrRemoveCssClass("ag-header-cell-sortable", !!e.sortable);
        };
        r(), this.addRefreshFunction(r), this.addManagedListener(this.column, A.EVENT_SORT_CHANGED, this.refreshAriaSort.bind(this));
      }, t.prototype.refreshAriaSort = function() {
        if (this.sortable) {
          var e = this.gridOptionsWrapper.getLocaleTextFunc();
          this.comp.setAriaSort(za(this.column)), this.setAriaDescriptionProperty("sort", e("ariaSortableColumn", "Press ENTER to sort."));
        } else
          this.comp.setAriaSort(), this.setAriaDescriptionProperty("sort", null);
      }, t.prototype.refreshAriaMenu = function() {
        if (this.menuEnabled) {
          var e = this.gridOptionsWrapper.getLocaleTextFunc();
          this.setAriaDescriptionProperty("menu", e("ariaMenuColumn", "Press CTRL ENTER to open column menu."));
        } else
          this.setAriaDescriptionProperty("menu", null);
      }, t.prototype.setAriaDescriptionProperty = function(e, r) {
        r != null ? this.ariaDescriptionProperties.set(e, r) : this.ariaDescriptionProperties.delete(e);
      }, t.prototype.refreshAriaDescription = function() {
        var e = Array.from(this.ariaDescriptionProperties.values());
        this.comp.setAriaDescription(e.length ? e.join(" ") : void 0);
      }, t.prototype.refreshAria = function() {
        this.refreshAriaSort(), this.refreshAriaMenu(), this.refreshAriaDescription();
      }, t.prototype.addColumnHoverListener = function() {
        var e = this, r = function() {
          if (e.gridOptionsWrapper.isColumnHoverHighlight()) {
            var o = e.columnHoverService.isHovered(e.column);
            e.comp.addOrRemoveCssClass("ag-column-hover", o);
          }
        };
        this.addManagedListener(this.eventService, m.EVENT_COLUMN_HOVER_CHANGED, r), r();
      }, t.prototype.setupFilterCss = function() {
        var e = this, r = function() {
          e.comp.addOrRemoveCssClass("ag-header-cell-filtered", e.column.isFilterActive());
        };
        this.addManagedListener(this.column, A.EVENT_FILTER_ACTIVE_CHANGED, r), r();
      }, t.prototype.setupColId = function() {
        this.comp.setColId(this.column.getColId());
      }, t.prototype.addActiveHeaderMouseListeners = function() {
        var e = this, r = function(o) {
          return e.setActiveHeader(o.type === "mouseenter");
        };
        this.addManagedListener(this.getGui(), "mouseenter", r), this.addManagedListener(this.getGui(), "mouseleave", r);
      }, t.prototype.setActiveHeader = function(e) {
        this.comp.addOrRemoveCssClass("ag-header-active", e);
      }, Lt([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), Lt([
        h("columnHoverService")
      ], t.prototype, "columnHoverService", void 0), Lt([
        h("beans")
      ], t.prototype, "beans", void 0), Lt([
        h("sortController")
      ], t.prototype, "sortController", void 0), Lt([
        h("menuFactory")
      ], t.prototype, "menuFactory", void 0), Lt([
        h("dragAndDropService")
      ], t.prototype, "dragAndDropService", void 0), Lt([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), Lt([
        h("columnApi")
      ], t.prototype, "columnApi", void 0), Lt([
        h("userComponentFactory")
      ], t.prototype, "userComponentFactory", void 0), Lt([
        De
      ], t.prototype, "removeDragSource", null), t;
    }(Wo)
  );
  var ov = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Ui = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, iv = (
    /** @class */
    function(n) {
      ov(t, n);
      function t(e, r, o, i) {
        var s = n.call(this) || this;
        return s.eResize = r, s.comp = e, s.pinned = o, s.columnGroup = i, s;
      }
      return t.prototype.postConstruct = function() {
        var e = this;
        if (!this.columnGroup.isResizable()) {
          this.comp.addOrRemoveResizableCssClass("ag-hidden", !0);
          return;
        }
        var r = this.horizontalResizeService.addResizeBar({
          eResizeBar: this.eResize,
          onResizeStart: this.onResizeStart.bind(this),
          onResizing: this.onResizing.bind(this, !1),
          onResizeEnd: this.onResizing.bind(this, !0)
        });
        if (this.addDestroyFunc(r), !this.gridOptionsWrapper.isSuppressAutoSize()) {
          var o = this.gridOptionsWrapper.isSkipHeaderOnAutoSize();
          this.eResize.addEventListener("dblclick", function() {
            var i = [], s = e.columnGroup.getDisplayedLeafColumns();
            s.forEach(function(a) {
              a.getColDef().suppressAutoSize || i.push(a.getColId());
            }), i.length > 0 && e.columnModel.autoSizeColumns({
              columns: i,
              skipHeader: o,
              stopAtGroup: e.columnGroup,
              source: "uiColumnResized"
            }), e.resizeLeafColumnsToFit();
          });
        }
      }, t.prototype.onResizeStart = function(e) {
        var r = this;
        this.calculateInitialValues();
        var o = null;
        if (e && (o = this.columnModel.getDisplayedGroupAfter(this.columnGroup)), o) {
          var i = o.getDisplayedLeafColumns();
          this.resizeTakeFromCols = i.filter(function(s) {
            return s.isResizable();
          }), this.resizeTakeFromStartWidth = 0, this.resizeTakeFromCols.forEach(function(s) {
            return r.resizeTakeFromStartWidth += s.getActualWidth();
          }), this.resizeTakeFromRatios = [], this.resizeTakeFromCols.forEach(function(s) {
            return r.resizeTakeFromRatios.push(s.getActualWidth() / r.resizeTakeFromStartWidth);
          });
        } else
          this.resizeTakeFromCols = null, this.resizeTakeFromStartWidth = null, this.resizeTakeFromRatios = null;
        this.comp.addOrRemoveCssClass("ag-column-resizing", !0);
      }, t.prototype.onResizing = function(e, r) {
        var o = this.normaliseDragChange(r), i = this.resizeStartWidth + o;
        this.resizeColumns(i, e);
      }, t.prototype.resizeLeafColumnsToFit = function() {
        var e = this.autoWidthCalculator.getPreferredWidthForColumnGroup(this.columnGroup);
        this.calculateInitialValues(), e > this.resizeStartWidth && this.resizeColumns(e, !0);
      }, t.prototype.resizeColumns = function(e, r) {
        r === void 0 && (r = !0);
        var o = [];
        if (o.push({
          columns: this.resizeCols,
          ratios: this.resizeRatios,
          width: e
        }), this.resizeTakeFromCols) {
          var i = e - this.resizeStartWidth;
          o.push({
            columns: this.resizeTakeFromCols,
            ratios: this.resizeTakeFromRatios,
            width: this.resizeTakeFromStartWidth - i
          });
        }
        this.columnModel.resizeColumnSets({
          resizeSets: o,
          finished: r,
          source: "uiColumnDragged"
        }), r && this.comp.addOrRemoveCssClass("ag-column-resizing", !1);
      }, t.prototype.calculateInitialValues = function() {
        var e = this, r = this.columnGroup.getDisplayedLeafColumns();
        this.resizeCols = r.filter(function(o) {
          return o.isResizable();
        }), this.resizeStartWidth = 0, this.resizeCols.forEach(function(o) {
          return e.resizeStartWidth += o.getActualWidth();
        }), this.resizeRatios = [], this.resizeCols.forEach(function(o) {
          return e.resizeRatios.push(o.getActualWidth() / e.resizeStartWidth);
        });
      }, t.prototype.normaliseDragChange = function(e) {
        var r = e;
        return this.gridOptionsWrapper.isEnableRtl() ? this.pinned !== E.PINNED_LEFT && (r *= -1) : this.pinned === E.PINNED_RIGHT && (r *= -1), r;
      }, Ui([
        h("horizontalResizeService")
      ], t.prototype, "horizontalResizeService", void 0), Ui([
        h("autoWidthCalculator")
      ], t.prototype, "autoWidthCalculator", void 0), Ui([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), Ui([
        B
      ], t.prototype, "postConstruct", null), t;
    }(H)
  );
  var nv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), sv = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, av = (
    /** @class */
    function(n) {
      nv(t, n);
      function t(e, r) {
        var o = n.call(this) || this;
        return o.removeChildListenersFuncs = [], o.columnGroup = r, o.comp = e, o;
      }
      return t.prototype.postConstruct = function() {
        this.addListenersToChildrenColumns(), this.addManagedListener(this.columnGroup, We.EVENT_DISPLAYED_CHILDREN_CHANGED, this.onDisplayedChildrenChanged.bind(this)), this.onWidthChanged(), this.addDestroyFunc(this.removeListenersOnChildrenColumns.bind(this));
      }, t.prototype.addListenersToChildrenColumns = function() {
        var e = this;
        this.removeListenersOnChildrenColumns();
        var r = this.onWidthChanged.bind(this);
        this.columnGroup.getLeafColumns().forEach(function(o) {
          o.addEventListener(A.EVENT_WIDTH_CHANGED, r), o.addEventListener(A.EVENT_VISIBLE_CHANGED, r), e.removeChildListenersFuncs.push(function() {
            o.removeEventListener(A.EVENT_WIDTH_CHANGED, r), o.removeEventListener(A.EVENT_VISIBLE_CHANGED, r);
          });
        });
      }, t.prototype.removeListenersOnChildrenColumns = function() {
        this.removeChildListenersFuncs.forEach(function(e) {
          return e();
        }), this.removeChildListenersFuncs = [];
      }, t.prototype.onDisplayedChildrenChanged = function() {
        this.addListenersToChildrenColumns(), this.onWidthChanged();
      }, t.prototype.onWidthChanged = function() {
        this.comp.setWidth(this.columnGroup.getActualWidth() + "px");
      }, sv([
        B
      ], t.prototype, "postConstruct", null), t;
    }(H)
  );
  var lv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), qr = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, _u = (
    /** @class */
    function(n) {
      lv(t, n);
      function t(e, r) {
        var o = n.call(this, e, r) || this;
        return o.columnGroup = e, o;
      }
      return t.prototype.setComp = function(e, r, o) {
        n.prototype.setGui.call(this, r), this.comp = e, this.displayName = this.columnModel.getDisplayNameForColumnGroup(this.columnGroup, "header"), this.addClasses(), this.addAttributes(), this.setupMovingCss(), this.setupExpandable(), this.setupTooltip(), this.setupUserComp();
        var i = this.getParentRowCtrl().getPinned(), s = this.columnGroup.getProvidedColumnGroup().getLeafColumns();
        this.createManagedBean(new Ws(s, r)), this.createManagedBean(new Bi(this.columnGroup, r, this.beans)), this.createManagedBean(new av(e, this.columnGroup)), this.groupResizeFeature = this.createManagedBean(new iv(e, o, i, this.columnGroup)), this.createManagedBean(new kt(r, {
          shouldStopEventPropagation: this.shouldStopEventPropagation.bind(this),
          onTabKeyDown: function() {
          },
          handleKeyDown: this.handleKeyDown.bind(this),
          onFocusIn: this.onFocusIn.bind(this)
        }));
      }, t.prototype.resizeLeafColumnsToFit = function() {
        this.groupResizeFeature.onResizeStart(!1), this.groupResizeFeature.resizeLeafColumnsToFit();
      }, t.prototype.setupUserComp = function() {
        var e = this, r = this.displayName, o = {
          displayName: this.displayName,
          columnGroup: this.columnGroup,
          setExpanded: function(u) {
            e.columnModel.setColumnGroupOpened(e.columnGroup.getProvidedColumnGroup(), u, "gridInitializing");
          },
          api: this.gridApi,
          columnApi: this.columnApi,
          context: this.gridOptionsWrapper.getContext()
        };
        if (!r) {
          for (var i = this.columnGroup, s = i.getLeafColumns(); i.getParent() && i.getParent().getLeafColumns().length === s.length; )
            i = i.getParent();
          var a = i.getColGroupDef();
          a && (r = a.headerName), r || (r = s ? this.columnModel.getDisplayNameForColumn(s[0], "header", !0) : "");
        }
        var l = this.userComponentFactory.getHeaderGroupCompDetails(o);
        this.comp.setUserCompDetails(l);
      }, t.prototype.setupTooltip = function() {
        var e = this, r = this.columnGroup.getColGroupDef(), o = {
          getColumn: function() {
            return e.columnGroup;
          },
          getGui: function() {
            return e.eGui;
          },
          getLocation: function() {
            return "headerGroup";
          },
          getTooltipValue: function() {
            return r && r.headerTooltip;
          }
        };
        r && (o.getColDef = function() {
          return r;
        });
        var i = this.createManagedBean(new Ls(o, this.beans));
        i.setComp(this.comp);
      }, t.prototype.setupExpandable = function() {
        var e = this.columnGroup.getProvidedColumnGroup();
        this.refreshExpanded(), this.addManagedListener(e, _e.EVENT_EXPANDABLE_CHANGED, this.refreshExpanded.bind(this)), this.addManagedListener(e, _e.EVENT_EXPANDED_CHANGED, this.refreshExpanded.bind(this));
      }, t.prototype.refreshExpanded = function() {
        var e = this.columnGroup;
        this.expandable = e.isExpandable();
        var r = e.isExpanded();
        this.expandable ? this.comp.setAriaExpanded(r ? "true" : "false") : this.comp.setAriaExpanded(void 0);
      }, t.prototype.addAttributes = function() {
        this.comp.setColId(this.columnGroup.getUniqueId());
      }, t.prototype.addClasses = function() {
        var e = this, r = this.columnGroup.getColGroupDef(), o = Gs.getHeaderClassesFromColDef(r, this.gridOptionsWrapper, null, this.columnGroup);
        o.push(this.columnGroup.isPadding() ? "ag-header-group-cell-no-group" : "ag-header-group-cell-with-group"), o.forEach(function(i) {
          return e.comp.addOrRemoveCssClass(i, !0);
        });
      }, t.prototype.setupMovingCss = function() {
        var e = this, r = this.columnGroup.getProvidedColumnGroup(), o = r.getLeafColumns(), i = function() {
          return e.comp.addOrRemoveCssClass("ag-header-cell-moving", e.columnGroup.isMoving());
        };
        o.forEach(function(s) {
          e.addManagedListener(s, A.EVENT_MOVING_CHANGED, i);
        }), i();
      }, t.prototype.onFocusIn = function(e) {
        if (!this.eGui.contains(e.relatedTarget)) {
          var r = this.getRowIndex();
          this.beans.focusService.setFocusedHeader(r, this.columnGroup);
        }
      }, t.prototype.handleKeyDown = function(e) {
        var r = this.gridOptionsWrapper.getDocument(), o = r.activeElement, i = o === this.eGui;
        if (!(!this.expandable || !i) && e.key === N.ENTER) {
          var s = this.columnGroup, a = !s.isExpanded();
          this.columnModel.setColumnGroupOpened(s.getProvidedColumnGroup(), a, "uiColumnExpanded");
        }
      }, t.prototype.setDragSource = function(e) {
        var r = this;
        if (!this.isSuppressMoving()) {
          var o = this.columnGroup.getProvidedColumnGroup().getLeafColumns(), i = {
            type: c.DragSourceType.HeaderCell,
            eElement: e,
            defaultIconName: $e.ICON_HIDE,
            dragItemName: this.displayName,
            // we add in the original group leaf columns, so we move both visible and non-visible items
            getDragItem: this.getDragItemForGroup.bind(this),
            onDragStarted: function() {
              return o.forEach(function(s) {
                return s.setMoving(!0, "uiColumnDragged");
              });
            },
            onDragStopped: function() {
              return o.forEach(function(s) {
                return s.setMoving(!1, "uiColumnDragged");
              });
            }
          };
          this.dragAndDropService.addDragSource(i, !0), this.addDestroyFunc(function() {
            return r.dragAndDropService.removeDragSource(i);
          });
        }
      }, t.prototype.getDragItemForGroup = function() {
        var e = this.columnGroup.getProvidedColumnGroup().getLeafColumns(), r = {};
        e.forEach(function(i) {
          return r[i.getId()] = i.isVisible();
        });
        var o = [];
        return this.columnModel.getAllDisplayedColumns().forEach(function(i) {
          e.indexOf(i) >= 0 && (o.push(i), Ce(e, i));
        }), e.forEach(function(i) {
          return o.push(i);
        }), {
          columns: o,
          visibleState: r
        };
      }, t.prototype.isSuppressMoving = function() {
        var e = !1;
        this.columnGroup.getLeafColumns().forEach(function(o) {
          (o.getColDef().suppressMovable || o.getColDef().lockPosition) && (e = !0);
        });
        var r = e || this.gridOptionsWrapper.isSuppressMovableColumns();
        return r;
      }, qr([
        h("beans")
      ], t.prototype, "beans", void 0), qr([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), qr([
        h("dragAndDropService")
      ], t.prototype, "dragAndDropService", void 0), qr([
        h("userComponentFactory")
      ], t.prototype, "userComponentFactory", void 0), qr([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), qr([
        h("columnApi")
      ], t.prototype, "columnApi", void 0), t;
    }(Wo)
  );
  var uv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), ks = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, pv = 0, ji = (
    /** @class */
    function(n) {
      uv(t, n);
      function t(e, r, o) {
        var i = n.call(this) || this;
        return i.instanceId = pv++, i.headerCellCtrls = {}, i.rowIndex = e, i.pinned = r, i.type = o, i;
      }
      return t.prototype.getInstanceId = function() {
        return this.instanceId;
      }, t.prototype.setComp = function(e) {
        this.comp = e, this.onRowHeightChanged(), this.onVirtualColumnsChanged(), this.setWidth(), this.addEventListeners(), Ro() && this.comp.setTransform("translateZ(0)"), e.setAriaRowIndex(this.rowIndex + 1);
      }, t.prototype.addEventListeners = function() {
        this.addManagedListener(this.eventService, m.EVENT_COLUMN_RESIZED, this.onColumnResized.bind(this)), this.addManagedListener(this.gridOptionsWrapper, z.PROP_DOM_LAYOUT, this.onDisplayedColumnsChanged.bind(this)), this.addManagedListener(this.eventService, m.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this)), this.addManagedListener(this.eventService, m.EVENT_VIRTUAL_COLUMNS_CHANGED, this.onVirtualColumnsChanged.bind(this)), this.addManagedListener(this.gridOptionsWrapper, z.PROP_HEADER_HEIGHT, this.onRowHeightChanged.bind(this)), this.addManagedListener(this.gridOptionsWrapper, z.PROP_PIVOT_HEADER_HEIGHT, this.onRowHeightChanged.bind(this)), this.addManagedListener(this.gridOptionsWrapper, z.PROP_GROUP_HEADER_HEIGHT, this.onRowHeightChanged.bind(this)), this.addManagedListener(this.gridOptionsWrapper, z.PROP_PIVOT_GROUP_HEADER_HEIGHT, this.onRowHeightChanged.bind(this)), this.addManagedListener(this.gridOptionsWrapper, z.PROP_FLOATING_FILTERS_HEIGHT, this.onRowHeightChanged.bind(this));
      }, t.prototype.getHeaderCellCtrl = function(e) {
        return W(this.headerCellCtrls).find(function(r) {
          return r.getColumnGroupChild() === e;
        });
      }, t.prototype.onDisplayedColumnsChanged = function() {
        this.onVirtualColumnsChanged(), this.setWidth();
      }, t.prototype.getType = function() {
        return this.type;
      }, t.prototype.onColumnResized = function() {
        this.setWidth();
      }, t.prototype.setWidth = function() {
        var e = this.getWidthForRow();
        this.comp.setWidth(e + "px");
      }, t.prototype.getWidthForRow = function() {
        var e = this.gridOptionsWrapper.getDomLayout() === E.DOM_LAYOUT_PRINT;
        if (e) {
          var r = this.pinned != null;
          return r ? 0 : this.columnModel.getContainerWidth(E.PINNED_RIGHT) + this.columnModel.getContainerWidth(E.PINNED_LEFT) + this.columnModel.getContainerWidth(null);
        }
        return this.columnModel.getContainerWidth(this.pinned);
      }, t.prototype.onRowHeightChanged = function() {
        var e = this.columnModel.getHeaderRowCount(), r = [], o = 0, i, s;
        this.columnModel.hasFloatingFilters() && (e++, o = 1), this.columnModel.isPivotMode() ? (i = this.gridOptionsWrapper.getPivotGroupHeaderHeight(), s = this.gridOptionsWrapper.getPivotHeaderHeight()) : (i = this.gridOptionsWrapper.getGroupHeaderHeight(), s = this.gridOptionsWrapper.getHeaderHeight());
        for (var a = 1 + o, l = e - a, u = 0; u < l; u++)
          r.push(i);
        r.push(s);
        for (var u = 0; u < o; u++)
          r.push(this.gridOptionsWrapper.getFloatingFiltersHeight());
        for (var p = 0, u = 0; u < this.rowIndex; u++)
          p += r[u];
        this.comp.setTop(p + "px"), this.comp.setHeight(r[this.rowIndex] + "px");
      }, t.prototype.getPinned = function() {
        return this.pinned;
      }, t.prototype.getRowIndex = function() {
        return this.rowIndex;
      }, t.prototype.onVirtualColumnsChanged = function() {
        var e = this, r = this.headerCellCtrls;
        this.headerCellCtrls = {};
        var o = this.getColumnsInViewport();
        o.forEach(function(a) {
          if (!a.isEmptyGroup()) {
            var l = a.getUniqueId(), u = r[l];
            delete r[l];
            var p = u && u.getColumnGroupChild() != a;
            if (p && (e.destroyBean(u), u = void 0), u == null)
              switch (e.type) {
                case c.HeaderRowType.FLOATING_FILTER:
                  u = e.createBean(new Ru(a, e));
                  break;
                case c.HeaderRowType.COLUMN_GROUP:
                  u = e.createBean(new _u(a, e));
                  break;
                default:
                  u = e.createBean(new Su(a, e));
                  break;
              }
            e.headerCellCtrls[l] = u;
          }
        });
        var i = function(a) {
          var l = e.focusService.isHeaderWrapperFocused(a);
          if (!l)
            return !1;
          var u = e.columnModel.isDisplayed(a.getColumnGroupChild());
          return u;
        };
        ie(r, function(a, l) {
          var u = i(l);
          u ? e.headerCellCtrls[a] = l : e.destroyBean(l);
        });
        var s = Se(this.headerCellCtrls);
        this.comp.setHeaderCtrls(s);
      }, t.prototype.destroyCtrls = function() {
        var e = this;
        ie(this.headerCellCtrls, function(r, o) {
          e.destroyBean(o);
        }), this.headerCellCtrls = {};
      }, t.prototype.getColumnsInViewport = function() {
        var e = this.gridOptionsWrapper.getDomLayout() === E.DOM_LAYOUT_PRINT;
        return e ? this.getColumnsInViewportPrintLayout() : this.getColumnsInViewportNormalLayout();
      }, t.prototype.getColumnsInViewportPrintLayout = function() {
        var e = this;
        if (this.pinned != null)
          return [];
        var r = [], o = this.getActualDepth();
        return [E.PINNED_LEFT, null, E.PINNED_RIGHT].forEach(function(i) {
          var s = e.columnModel.getVirtualHeaderGroupRow(i, o);
          r = r.concat(s);
        }), r;
      }, t.prototype.getActualDepth = function() {
        return this.type == c.HeaderRowType.FLOATING_FILTER ? this.rowIndex - 1 : this.rowIndex;
      }, t.prototype.getColumnsInViewportNormalLayout = function() {
        return this.columnModel.getVirtualHeaderGroupRow(this.pinned, this.getActualDepth());
      }, t.prototype.focusHeader = function(e, r) {
        var o = Se(this.headerCellCtrls), i = o.find(function(s) {
          return s.getColumnGroupChild() == e;
        });
        return i ? (i.focus(r), !0) : !1;
      }, ks([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), ks([
        h("focusService")
      ], t.prototype, "focusService", void 0), ks([
        De
      ], t.prototype, "destroyCtrls", null), t;
    }(H)
  );
  var cv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Bo = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, dv = function(n, t) {
    var e = typeof Symbol == "function" && n[Symbol.iterator];
    if (!e) return n;
    var r = e.call(n), o, i = [], s;
    try {
      for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
    } catch (a) {
      s = { error: a };
    } finally {
      try {
        o && !o.done && (e = r.return) && e.call(r);
      } finally {
        if (s) throw s.error;
      }
    }
    return i;
  }, hv = function() {
    for (var n = [], t = 0; t < arguments.length; t++) n = n.concat(dv(arguments[t]));
    return n;
  }, Ou = (
    /** @class */
    function(n) {
      cv(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return r.groupsRowCtrls = [], r.pinned = e, r;
      }
      return t.prototype.setComp = function(e, r) {
        this.comp = e, this.setupCenterWidth(), this.setupPinnedWidth(), this.setupDragAndDrop(r), this.addManagedListener(this.eventService, m.EVENT_GRID_COLUMNS_CHANGED, this.onGridColumnsChanged.bind(this)), this.ctrlsService.registerHeaderContainer(this, this.pinned), this.columnModel.isReady() && this.refresh();
      }, t.prototype.setupDragAndDrop = function(e) {
        var r = new mu(this.pinned, e);
        this.createManagedBean(r);
      }, t.prototype.refresh = function(e) {
        var r = this;
        e === void 0 && (e = !1);
        var o = new gr(), i = this.focusService.getFocusHeaderToUseAfterRefresh(), s = function() {
          var p = r.columnModel.getHeaderRowCount() - 1;
          r.groupsRowCtrls = r.destroyBeans(r.groupsRowCtrls);
          for (var d = 0; d < p; d++) {
            var f = r.createBean(new ji(o.next(), r.pinned, c.HeaderRowType.COLUMN_GROUP));
            r.groupsRowCtrls.push(f);
          }
        }, a = function() {
          var p = o.next(), d = r.columnsRowCtrl == null || !e || r.columnsRowCtrl.getRowIndex() !== p;
          d && (r.destroyBean(r.columnsRowCtrl), r.columnsRowCtrl = r.createBean(new ji(p, r.pinned, c.HeaderRowType.COLUMN)));
        }, l = function() {
          var p = r.columnModel.hasFloatingFilters(), d = function() {
            r.filtersRowCtrl = r.destroyBean(r.filtersRowCtrl);
          };
          if (!p) {
            d();
            return;
          }
          var f = o.next();
          if (r.filtersRowCtrl) {
            var v = r.filtersRowCtrl.getRowIndex() !== f;
            (!e || v) && d();
          }
          r.filtersRowCtrl || (r.filtersRowCtrl = r.createBean(new ji(f, r.pinned, c.HeaderRowType.FLOATING_FILTER)));
        };
        s(), a(), l();
        var u = this.getAllCtrls();
        this.comp.setCtrls(u), this.restoreFocusOnHeader(i);
      }, t.prototype.restoreFocusOnHeader = function(e) {
        e == null || e.column.getPinned() != this.pinned || this.focusService.focusHeaderPosition({ headerPosition: e });
      }, t.prototype.getAllCtrls = function() {
        var e = hv(this.groupsRowCtrls, [this.columnsRowCtrl]);
        return this.filtersRowCtrl && e.push(this.filtersRowCtrl), e;
      }, t.prototype.onGridColumnsChanged = function() {
        this.refresh(!0);
      }, t.prototype.setupCenterWidth = function() {
        var e = this;
        this.pinned == null && this.createManagedBean(new Ns(function(r) {
          return e.comp.setCenterWidth(r + "px");
        }));
      }, t.prototype.setHorizontalScroll = function(e) {
        this.comp.setContainerTransform("translateX(" + e + "px)");
      }, t.prototype.setupPinnedWidth = function() {
        var e = this;
        if (this.pinned != null) {
          var r = this.pinned === E.PINNED_LEFT, o = this.pinned === E.PINNED_RIGHT, i = function() {
            var s = r ? e.pinnedWidthService.getPinnedLeftWidth() : e.pinnedWidthService.getPinnedRightWidth();
            if (s != null) {
              var a = s == 0, l = e.gridOptionsWrapper.isEnableRtl(), u = e.gridOptionsWrapper.getScrollbarWidth(), p = e.scrollVisibleService.isVerticalScrollShowing() && (l && r || !l && o), d = p ? s + u : s;
              e.comp.setPinnedContainerWidth(d + "px"), e.comp.addOrRemoveCssClass("ag-hidden", a);
            }
          };
          this.addManagedListener(this.eventService, m.EVENT_LEFT_PINNED_WIDTH_CHANGED, i), this.addManagedListener(this.eventService, m.EVENT_RIGHT_PINNED_WIDTH_CHANGED, i), this.addManagedListener(this.eventService, m.EVENT_SCROLL_VISIBILITY_CHANGED, i), this.addManagedListener(this.eventService, m.EVENT_SCROLLBAR_WIDTH_CHANGED, i);
        }
      }, t.prototype.getHeaderCtrlForColumn = function(e) {
        if (e instanceof A)
          return this.columnsRowCtrl ? this.columnsRowCtrl.getHeaderCellCtrl(e) : void 0;
        if (this.groupsRowCtrls.length !== 0)
          for (var r = 0; r < this.groupsRowCtrls.length; r++) {
            var o = this.groupsRowCtrls[r].getHeaderCellCtrl(e);
            if (o)
              return o;
          }
      }, t.prototype.getHtmlElementForColumnHeader = function(e) {
        var r = this.getHeaderCtrlForColumn(e);
        return r ? r.getGui() : null;
      }, t.prototype.getRowType = function(e) {
        var r = this.getAllCtrls(), o = r[e];
        return o ? o.getType() : void 0;
      }, t.prototype.focusHeader = function(e, r, o) {
        var i = this.getAllCtrls(), s = i[e];
        return s ? s.focusHeader(r, o) : !1;
      }, t.prototype.getRowCount = function() {
        return this.getAllCtrls().length;
      }, Bo([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), Bo([
        h("scrollVisibleService")
      ], t.prototype, "scrollVisibleService", void 0), Bo([
        h("pinnedWidthService")
      ], t.prototype, "pinnedWidthService", void 0), Bo([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), Bo([
        h("focusService")
      ], t.prototype, "focusService", void 0), t;
    }(H)
  );
  var fv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Us = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, zi = (
    /** @class */
    function(n) {
      fv(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return r.headerRowComps = {}, r.rowCompsList = [], r.pinned = e, r;
      }
      return t.prototype.init = function() {
        var e = this;
        this.selectAndSetTemplate();
        var r = {
          addOrRemoveCssClass: function(i, s) {
            return e.addOrRemoveCssClass(i, s);
          },
          setCtrls: function(i) {
            return e.setCtrls(i);
          },
          // only gets called for center section
          setCenterWidth: function(i) {
            return e.eCenterContainer.style.width = i;
          },
          setContainerTransform: function(i) {
            return e.eCenterContainer.style.transform = i;
          },
          // only gets called for pinned sections
          setPinnedContainerWidth: function(i) {
            var s = e.getGui();
            s.style.width = i, s.style.maxWidth = i, s.style.minWidth = i;
          }
        }, o = this.createManagedBean(new Ou(this.pinned));
        o.setComp(r, this.getGui());
      }, t.prototype.selectAndSetTemplate = function() {
        var e = this.pinned == E.PINNED_LEFT, r = this.pinned == E.PINNED_RIGHT, o = e ? t.PINNED_LEFT_TEMPLATE : r ? t.PINNED_RIGHT_TEMPLATE : t.CENTER_TEMPLATE;
        this.setTemplate(o), this.eRowContainer = this.eCenterContainer ? this.eCenterContainer : this.getGui();
      }, t.prototype.destroyRowComps = function() {
        this.setCtrls([]);
      }, t.prototype.destroyRowComp = function(e) {
        this.destroyBean(e), this.eRowContainer.removeChild(e.getGui());
      }, t.prototype.setCtrls = function(e) {
        var r = this, o = this.headerRowComps;
        this.headerRowComps = {}, this.rowCompsList = [];
        var i, s = function(a) {
          var l = a.getGui(), u = l.parentElement != r.eRowContainer;
          u && r.eRowContainer.appendChild(l), i && jn(r.eRowContainer, l, i), i = l;
        };
        e.forEach(function(a) {
          var l = a.getInstanceId(), u = o[l];
          delete o[l];
          var p = u || r.createBean(new Cu(a));
          r.headerRowComps[l] = p, r.rowCompsList.push(p), s(p);
        }), Se(o).forEach(function(a) {
          return r.destroyRowComp(a);
        });
      }, t.PINNED_LEFT_TEMPLATE = '<div class="ag-pinned-left-header" role="presentation"/>', t.PINNED_RIGHT_TEMPLATE = '<div class="ag-pinned-right-header" role="presentation"/>', t.CENTER_TEMPLATE = `<div class="ag-header-viewport" role="presentation">
            <div class="ag-header-container" ref="eCenterContainer" role="rowgroup"></div>
        </div>`, Us([
        I("eCenterContainer")
      ], t.prototype, "eCenterContainer", void 0), Us([
        B
      ], t.prototype, "init", null), Us([
        De
      ], t.prototype, "destroyRowComps", null), t;
    }(le)
  );
  var gv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Xr = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  };
  (function(n) {
    n[n.UP = 0] = "UP", n[n.DOWN = 1] = "DOWN", n[n.LEFT = 2] = "LEFT", n[n.RIGHT = 3] = "RIGHT";
  })(c.HeaderNavigationDirection || (c.HeaderNavigationDirection = {}));
  var Au = (
    /** @class */
    function(n) {
      gv(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.postConstruct = function() {
        var e = this;
        this.ctrlsService.whenReady(function(r) {
          e.gridBodyCon = r.gridBodyCtrl;
        });
      }, t.prototype.getHeaderRowCount = function() {
        var e = this.ctrlsService.getHeaderRowContainerCtrl();
        return e ? e.getRowCount() : 0;
      }, t.prototype.getHeaderRowType = function(e) {
        var r = this.ctrlsService.getHeaderRowContainerCtrl();
        if (r)
          return r.getRowType(e);
      }, t.prototype.navigateVertically = function(e, r, o) {
        if (r || (r = this.focusService.getFocusedHeader()), !r)
          return !1;
        var i = r.headerRowIndex, s = r.column, a = this.getHeaderRowCount(), l = e === c.HeaderNavigationDirection.UP, u = l ? i - 1 : i + 1, p = null, d = !1;
        u < 0 && (u = 0, p = s, d = !0), u >= a && (u = -1);
        var f = this.getHeaderRowType(i);
        if (!d) {
          if (f === c.HeaderRowType.COLUMN_GROUP) {
            var v = s;
            p = l ? s.getParent() : v.getDisplayedChildren()[0];
          } else if (f === c.HeaderRowType.FLOATING_FILTER)
            p = s;
          else {
            var v = s;
            p = l ? v.getParent() : v;
          }
          if (!p)
            return !1;
        }
        return this.focusService.focusHeaderPosition({
          headerPosition: { headerRowIndex: u, column: p },
          allowUserOverride: !0,
          event: o
        });
      }, t.prototype.navigateHorizontally = function(e, r, o) {
        r === void 0 && (r = !1);
        var i = this.focusService.getFocusedHeader(), s = e === c.HeaderNavigationDirection.LEFT, a = this.gridOptionsWrapper.isEnableRtl(), l, u;
        return s !== a ? (u = "Before", l = this.headerPositionUtils.findHeader(i, u)) : (u = "After", l = this.headerPositionUtils.findHeader(i, u)), l ? this.focusService.focusHeaderPosition({
          headerPosition: l,
          direction: u,
          fromTab: r,
          allowUserOverride: !0,
          event: o
        }) : r ? this.focusNextHeaderRow(i, u, o) : !0;
      }, t.prototype.focusNextHeaderRow = function(e, r, o) {
        var i = e.headerRowIndex, s = null, a;
        return r === "Before" ? i > 0 && (a = i - 1, s = this.headerPositionUtils.findColAtEdgeForHeaderRow(a, "end")) : (a = i + 1, s = this.headerPositionUtils.findColAtEdgeForHeaderRow(a, "start")), this.focusService.focusHeaderPosition({
          headerPosition: s,
          direction: r,
          fromTab: !0,
          allowUserOverride: !0,
          event: o
        });
      }, t.prototype.scrollToColumn = function(e, r) {
        if (r === void 0 && (r = "After"), !e.getPinned()) {
          var o;
          if (e instanceof We) {
            var i = e.getDisplayedLeafColumns();
            o = r === "Before" ? M(i) : i[0];
          } else
            o = e;
          this.gridBodyCon.getScrollFeature().ensureColumnVisible(o), this.gridBodyCon.getScrollFeature().horizontallyScrollHeaderCenterAndFloatingCenter(), this.animationFrameService.flushAllFrames();
        }
      }, Xr([
        h("focusService")
      ], t.prototype, "focusService", void 0), Xr([
        h("headerPositionUtils")
      ], t.prototype, "headerPositionUtils", void 0), Xr([
        h("animationFrameService")
      ], t.prototype, "animationFrameService", void 0), Xr([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), Xr([
        B
      ], t.prototype, "postConstruct", null), t = Xr([
        j("headerNavigationService")
      ], t), t;
    }(H)
  );
  var vv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), $i = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Pu = (
    /** @class */
    function(n) {
      vv(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.setComp = function(e, r, o) {
        this.comp = e, this.eGui = r, this.createManagedBean(new kt(o, {
          onTabKeyDown: this.onTabKeyDown.bind(this),
          handleKeyDown: this.handleKeyDown.bind(this),
          onFocusOut: this.onFocusOut.bind(this)
        })), this.addManagedListener(this.eventService, m.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.onPivotModeChanged.bind(this)), this.onPivotModeChanged(), this.setupHeaderHeight(), this.ctrlsService.registerGridHeaderCtrl(this);
      }, t.prototype.setupHeaderHeight = function() {
        var e = this.setHeaderHeight.bind(this);
        e(), this.addManagedListener(this.gridOptionsWrapper, z.PROP_HEADER_HEIGHT, e), this.addManagedListener(this.gridOptionsWrapper, z.PROP_PIVOT_HEADER_HEIGHT, e), this.addManagedListener(this.gridOptionsWrapper, z.PROP_GROUP_HEADER_HEIGHT, e), this.addManagedListener(this.gridOptionsWrapper, z.PROP_PIVOT_GROUP_HEADER_HEIGHT, e), this.addManagedListener(this.gridOptionsWrapper, z.PROP_FLOATING_FILTERS_HEIGHT, e), this.addManagedListener(this.eventService, m.EVENT_DISPLAYED_COLUMNS_CHANGED, e);
      }, t.prototype.setHeaderHeight = function() {
        var e = this, r = e.columnModel, o = e.gridOptionsWrapper, i = 0, s = r.getHeaderRowCount(), a, l, u, p = r.hasFloatingFilters();
        p && (s++, i = 1), r.isPivotMode() ? (l = o.getPivotGroupHeaderHeight(), u = o.getPivotHeaderHeight()) : (l = o.getGroupHeaderHeight(), u = o.getHeaderHeight());
        var d = 1 + i, f = s - d;
        a = i * o.getFloatingFiltersHeight(), a += f * l, a += u;
        var v = a + 1 + "px";
        this.comp.setHeightAndMinHeight(v);
      }, t.prototype.onPivotModeChanged = function() {
        var e = this.columnModel.isPivotMode();
        this.comp.addOrRemoveCssClass("ag-pivot-on", e), this.comp.addOrRemoveCssClass("ag-pivot-off", !e);
      }, t.prototype.onTabKeyDown = function(e) {
        var r = this.gridOptionsWrapper.isEnableRtl(), o = e.shiftKey !== r ? c.HeaderNavigationDirection.LEFT : c.HeaderNavigationDirection.RIGHT;
        (this.headerNavigationService.navigateHorizontally(o, !0, e) || this.focusService.focusNextGridCoreContainer(e.shiftKey)) && e.preventDefault();
      }, t.prototype.handleKeyDown = function(e) {
        var r = null;
        switch (e.key) {
          case N.LEFT:
            r = c.HeaderNavigationDirection.LEFT;
          case N.RIGHT:
            g(r) || (r = c.HeaderNavigationDirection.RIGHT), this.headerNavigationService.navigateHorizontally(r, !1, e);
            break;
          case N.UP:
            r = c.HeaderNavigationDirection.UP;
          case N.DOWN:
            g(r) || (r = c.HeaderNavigationDirection.DOWN), this.headerNavigationService.navigateVertically(r, null, e) && e.preventDefault();
            break;
          default:
            return;
        }
      }, t.prototype.onFocusOut = function(e) {
        var r = this.gridOptionsWrapper.getDocument(), o = e.relatedTarget;
        !o && this.eGui.contains(r.activeElement) || this.eGui.contains(o) || this.focusService.clearFocusedHeader();
      }, $i([
        h("headerNavigationService")
      ], t.prototype, "headerNavigationService", void 0), $i([
        h("focusService")
      ], t.prototype, "focusService", void 0), $i([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), $i([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), t;
    }(H)
  );
  var mv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), yv = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Tu = (
    /** @class */
    function(n) {
      mv(t, n);
      function t() {
        return n.call(this, t.TEMPLATE) || this;
      }
      return t.prototype.postConstruct = function() {
        var e = this, r = {
          addOrRemoveCssClass: function(s, a) {
            return e.addOrRemoveCssClass(s, a);
          },
          setHeightAndMinHeight: function(s) {
            e.getGui().style.height = s, e.getGui().style.minHeight = s;
          }
        }, o = this.createManagedBean(new Pu());
        o.setComp(r, this.getGui(), this.getFocusableElement());
        var i = function(s) {
          e.createManagedBean(s), e.appendChild(s);
        };
        i(new zi(E.PINNED_LEFT)), i(new zi(null)), i(new zi(E.PINNED_RIGHT));
      }, t.TEMPLATE = '<div class="ag-header" role="presentation"/>', yv([
        B
      ], t.prototype, "postConstruct", null), t;
    }(le)
  );
  var Cv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), js = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Du = (
    /** @class */
    function(n) {
      Cv(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.addResizeBar = function(e) {
        var r = this, o = {
          dragStartPixels: e.dragStartPixels || 0,
          eElement: e.eResizeBar,
          onDragStart: this.onDragStart.bind(this, e),
          onDragStop: this.onDragStop.bind(this, e),
          onDragging: this.onDragging.bind(this, e)
        };
        this.dragService.addDragSource(o, !0);
        var i = function() {
          return r.dragService.removeDragSource(o);
        };
        return i;
      }, t.prototype.onDragStart = function(e, r) {
        this.dragStartX = r.clientX, this.setResizeIcons();
        var o = r instanceof MouseEvent && r.shiftKey === !0;
        e.onResizeStart(o);
      }, t.prototype.setResizeIcons = function() {
        var e = this.ctrlsService.getGridCtrl();
        e.setResizeCursor(!0), e.disableUserSelect(!0);
      }, t.prototype.onDragStop = function(e, r) {
        e.onResizeEnd(this.resizeAmount), this.resetIcons();
      }, t.prototype.resetIcons = function() {
        var e = this.ctrlsService.getGridCtrl();
        e.setResizeCursor(!1), e.disableUserSelect(!1);
      }, t.prototype.onDragging = function(e, r) {
        this.resizeAmount = r.clientX - this.dragStartX, e.onResizing(this.resizeAmount);
      }, js([
        h("dragService")
      ], t.prototype, "dragService", void 0), js([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), t = js([
        j("horizontalResizeService")
      ], t), t;
    }(H)
  );
  var wv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), ko = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, bu = (
    /** @class */
    function(n) {
      wv(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.hideActiveMenu = function() {
        this.hidePopup && this.hidePopup();
      }, t.prototype.showMenuAfterMouseEvent = function(e, r) {
        var o = this;
        this.showPopup(e, function(i) {
          o.popupService.positionPopupUnderMouseEvent({
            column: e,
            type: "columnMenu",
            mouseEvent: r,
            ePopup: i
          });
        }, r.target);
      }, t.prototype.showMenuAfterButtonClick = function(e, r, o) {
        var i = this;
        this.showPopup(e, function(s) {
          i.popupService.positionPopupUnderComponent({
            type: o,
            eventSource: r,
            ePopup: s,
            keepWithinBounds: !0,
            column: e
          });
        }, r);
      }, t.prototype.showPopup = function(e, r, o) {
        var i = this, s = this.filterManager.getOrCreateFilterWrapper(e, "COLUMN_MENU");
        if (!s)
          throw new Error("AG Grid - unable to show popup filter, filter instantiation failed");
        var a = document.createElement("div");
        ke(a, "presentation"), a.classList.add("ag-menu"), this.tabListener = this.addManagedListener(a, "keydown", function(v) {
          return i.trapFocusWithin(v, a);
        }), s.guiPromise.then(function(v) {
          return a.appendChild(v);
        });
        var l, u = o || this.ctrlsService.getGridBodyCtrl().getGui(), p = function(v) {
          e.setMenuVisible(!1, "contextMenu");
          var y = v instanceof KeyboardEvent;
          if (i.tabListener && (i.tabListener = i.tabListener()), y && o && Br(o)) {
            var R = i.focusService.findTabbableParent(o);
            R && R.focus();
          }
        }, d = this.gridOptionsWrapper.getLocaleTextFunc(), f = this.popupService.addPopup({
          modal: !0,
          eChild: a,
          closeOnEsc: !0,
          closedCallback: p,
          positionCallback: function() {
            return r(a);
          },
          anchorToElement: u,
          ariaLabel: d("ariaLabelColumnMenu", "Column Menu")
        });
        f && (this.hidePopup = l = f.hideFunc), s.filterPromise.then(function(v) {
          r(a), v.afterGuiAttached && v.afterGuiAttached({ container: "columnMenu", hidePopup: l });
        }), e.setMenuVisible(!0, "contextMenu");
      }, t.prototype.trapFocusWithin = function(e, r) {
        e.key !== N.TAB || e.defaultPrevented || this.focusService.findNextFocusableElement(r, !1, e.shiftKey) || (e.preventDefault(), this.focusService.focusInto(r, e.shiftKey));
      }, t.prototype.isMenuEnabled = function(e) {
        return e.isFilterAllowed();
      }, ko([
        h("filterManager")
      ], t.prototype, "filterManager", void 0), ko([
        h("popupService")
      ], t.prototype, "popupService", void 0), ko([
        h("focusService")
      ], t.prototype, "focusService", void 0), ko([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), t = ko([
        j("menuFactory")
      ], t), t;
    }(H)
  );
  var Ev = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Ki = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Rv = (
    /** @class */
    function(n) {
      Ev(t, n);
      function t(e) {
        var r = n.call(this, t.getTemplate(e.cssClass)) || this;
        return r.items = [], r.tabbedItemScrollMap = /* @__PURE__ */ new Map(), r.params = e, e.items && e.items.forEach(function(o) {
          return r.addItem(o);
        }), r;
      }
      return t.prototype.postConstruct = function() {
        this.createManagedBean(new kt(this.getFocusableElement(), {
          onTabKeyDown: this.onTabKeyDown.bind(this),
          handleKeyDown: this.handleKeyDown.bind(this)
        }));
      }, t.getTemplate = function(e) {
        return (
          /* html */
          '<div class="ag-tabs ' + e + `">
            <div ref="eHeader" role="tablist" class="ag-tabs-header ` + (e ? e + "-header" : "") + `"></div>
            <div ref="eBody" role="presentation" class="ag-tabs-body ` + (e ? e + "-body" : "") + `"></div>
        </div>`
        );
      }, t.prototype.handleKeyDown = function(e) {
        var r = this.gridOptionsWrapper.getDocument();
        switch (e.key) {
          case N.RIGHT:
          case N.LEFT:
            if (!this.eHeader.contains(r.activeElement))
              return;
            var o = this.items.indexOf(this.activeItem), i = e.key === N.RIGHT ? Math.min(o + 1, this.items.length - 1) : Math.max(o - 1, 0);
            if (o === i)
              return;
            e.preventDefault();
            var s = this.items[i];
            this.showItemWrapper(s), s.eHeaderButton.focus();
            break;
          case N.UP:
          case N.DOWN:
            e.stopPropagation();
            break;
        }
      }, t.prototype.onTabKeyDown = function(e) {
        if (!e.defaultPrevented) {
          var r = this, o = r.focusService, i = r.eHeader, s = r.eBody, a = r.activeItem, l = this.gridOptionsWrapper.getDocument(), u = l.activeElement;
          if (e.preventDefault(), i.contains(u))
            o.focusInto(s, e.shiftKey);
          else if (o.isFocusUnderManagedComponent(s))
            a.eHeaderButton.focus();
          else {
            var p = o.findNextFocusableElement(s, !1, e.shiftKey);
            p ? p.focus() : a.eHeaderButton.focus();
          }
        }
      }, t.prototype.setAfterAttachedParams = function(e) {
        this.afterAttachedParams = e;
      }, t.prototype.showFirstItem = function() {
        this.items.length > 0 && this.showItemWrapper(this.items[0]);
      }, t.prototype.addItem = function(e) {
        var r = document.createElement("span");
        ke(r, "tab"), r.setAttribute("tabIndex", "-1"), r.appendChild(e.title), r.classList.add("ag-tab"), this.eHeader.appendChild(r), fr(r, e.titleLabel);
        var o = {
          tabbedItem: e,
          eHeaderButton: r
        };
        this.items.push(o), r.addEventListener("click", this.showItemWrapper.bind(this, o));
      }, t.prototype.showItem = function(e) {
        var r = this.items.find(function(o) {
          return o.tabbedItem === e;
        });
        r && this.showItemWrapper(r);
      }, t.prototype.showItemWrapper = function(e) {
        var r = this, o = e.tabbedItem, i = e.eHeaderButton;
        if (this.params.onItemClicked && this.params.onItemClicked({ item: o }), this.activeItem === e) {
          li(this.params.onActiveItemClicked);
          return;
        }
        this.lastScrollListener && (this.lastScrollListener = this.lastScrollListener()), et(this.eBody), o.bodyPromise.then(function(s) {
          r.eBody.appendChild(s);
          var a = !r.focusService.isKeyboardMode();
          if (r.focusService.focusInto(r.eBody, !1, a), o.afterAttachedCallback && o.afterAttachedCallback(r.afterAttachedParams), r.params.keepScrollPosition) {
            var l = o.getScrollableContainer && o.getScrollableContainer() || s;
            r.lastScrollListener = r.addManagedListener(l, "scroll", function() {
              r.tabbedItemScrollMap.set(o.name, l.scrollTop);
            });
            var u = r.tabbedItemScrollMap.get(o.name);
            u !== void 0 && setTimeout(function() {
              l.scrollTop = u;
            }, 0);
          }
        }), this.activeItem && this.activeItem.eHeaderButton.classList.remove("ag-tab-selected"), i.classList.add("ag-tab-selected"), this.activeItem = e;
      }, Ki([
        h("focusService")
      ], t.prototype, "focusService", void 0), Ki([
        I("eHeader")
      ], t.prototype, "eHeader", void 0), Ki([
        I("eBody")
      ], t.prototype, "eBody", void 0), Ki([
        B
      ], t.prototype, "postConstruct", null), t;
    }(le)
  );
  function Sv(n) {
    return new Qe(function(t) {
      var e = new XMLHttpRequest();
      e.open("GET", n.url), e.send(), e.onreadystatechange = function() {
        e.readyState === 4 && e.status === 200 && t(JSON.parse(e.responseText));
      };
    });
  }
  var _v = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Ov = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Fu = 50, Lu = (
    /** @class */
    function(n) {
      _v(t, n);
      function t() {
        var e = n !== null && n.apply(this, arguments) || this;
        return e.polyfillFunctions = [], e;
      }
      return t.prototype.observeResize = function(e, r) {
        var o = this, i = this.gridOptionsWrapper.getDocument(), s = i.defaultView || window, a = it(r, Fu), l = function() {
          var f = new s.ResizeObserver(a);
          return f.observe(e), function() {
            return f.disconnect();
          };
        }, u = function() {
          var f = Un(e), v = kn(e), y = !0, R = function() {
            if (y) {
              var _ = Un(e), D = kn(e), P = _ !== f || D !== v;
              P && (f = _, v = D, r()), o.doNextPolyfillTurn(R);
            }
          };
          return R(), function() {
            return y = !1;
          };
        }, p = this.gridOptionsWrapper.isSuppressBrowserResizeObserver(), d = !!s.ResizeObserver;
        return d && !p ? l() : u();
      }, t.prototype.doNextPolyfillTurn = function(e) {
        this.polyfillFunctions.push(e), this.schedulePolyfill();
      }, t.prototype.schedulePolyfill = function() {
        var e = this;
        if (!this.polyfillScheduled) {
          var r = function() {
            var o = e.polyfillFunctions;
            e.polyfillScheduled = !1, e.polyfillFunctions = [], o.forEach(function(i) {
              return i();
            });
          };
          this.polyfillScheduled = !0, this.getFrameworkOverrides().setTimeout(r, Fu);
        }
      }, t = Ov([
        j("resizeObserverService")
      ], t), t;
    }(H)
  );
  var Av = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), zs = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Mu = (
    /** @class */
    function(n) {
      Av(t, n);
      function t() {
        var e = n !== null && n.apply(this, arguments) || this;
        return e.createTasksP1 = { list: [], sorted: !1 }, e.createTasksP2 = { list: [], sorted: !1 }, e.destroyTasks = [], e.ticking = !1, e.scrollGoingDown = !0, e.lastScrollTop = 0, e.taskCount = 0, e.cancelledTasks = /* @__PURE__ */ new Set(), e;
      }
      return t.prototype.setScrollTop = function(e) {
        this.scrollGoingDown = e > this.lastScrollTop, this.lastScrollTop = e;
      }, t.prototype.init = function() {
        this.useAnimationFrame = !this.gridOptionsWrapper.isSuppressAnimationFrame();
      }, t.prototype.isOn = function() {
        return this.useAnimationFrame;
      }, t.prototype.verifyAnimationFrameOn = function(e) {
        this.useAnimationFrame === !1 && console.warn("AG Grid: AnimationFrameService." + e + " called but animation frames are off");
      }, t.prototype.createTask = function(e, r, o) {
        this.verifyAnimationFrameOn(o);
        var i = { task: e, index: r, createOrder: ++this.taskCount };
        this.addTaskToList(this[o], i), this.schedule();
      }, t.prototype.cancelTask = function(e) {
        this.cancelledTasks.add(e);
      }, t.prototype.addTaskToList = function(e, r) {
        e.list.push(r), e.sorted = !1;
      }, t.prototype.sortTaskList = function(e) {
        if (!e.sorted) {
          var r = this.scrollGoingDown ? 1 : -1;
          e.list.sort(function(o, i) {
            return o.index !== i.index ? r * (i.index - o.index) : i.createOrder - o.createOrder;
          }), e.sorted = !0;
        }
      }, t.prototype.addDestroyTask = function(e) {
        this.verifyAnimationFrameOn("createTasksP3"), this.destroyTasks.push(e), this.schedule();
      }, t.prototype.executeFrame = function(e) {
        this.verifyAnimationFrameOn("executeFrame");
        for (var r = this.createTasksP1, o = r.list, i = this.createTasksP2, s = i.list, a = this.destroyTasks, l = (/* @__PURE__ */ new Date()).getTime(), u = (/* @__PURE__ */ new Date()).getTime() - l, p = e <= 0, d = this.ctrlsService.getGridBodyCtrl(); p || u < e; ) {
          var f = d.getScrollFeature().executeAnimationFrameScroll();
          if (!f) {
            var v = void 0;
            if (o.length)
              this.sortTaskList(r), v = o.pop().task;
            else if (s.length)
              this.sortTaskList(i), v = s.pop().task;
            else if (a.length)
              v = a.pop();
            else {
              this.cancelledTasks.clear();
              break;
            }
            this.cancelledTasks.has(v) || v();
          }
          u = (/* @__PURE__ */ new Date()).getTime() - l;
        }
        o.length || s.length || a.length ? this.requestFrame() : this.stopTicking();
      }, t.prototype.stopTicking = function() {
        this.ticking = !1;
      }, t.prototype.flushAllFrames = function() {
        this.useAnimationFrame && this.executeFrame(-1);
      }, t.prototype.schedule = function() {
        this.useAnimationFrame && (this.ticking || (this.ticking = !0, this.requestFrame()));
      }, t.prototype.requestFrame = function() {
        var e = this.executeFrame.bind(this, 60), r = this.gridOptionsWrapper.getDocument(), o = r.defaultView || window;
        o.requestAnimationFrame ? o.requestAnimationFrame(e) : o.webkitRequestAnimationFrame ? o.webkitRequestAnimationFrame(e) : o.setTimeout(e, 0);
      }, t.prototype.isQueueEmpty = function() {
        return !this.ticking;
      }, t.prototype.debounce = function(e) {
        var r = this, o = !1;
        return function() {
          if (!r.isOn()) {
            r.getFrameworkOverrides().setTimeout(e, 0);
            return;
          }
          o || (o = !0, r.addDestroyTask(function() {
            o = !1, e();
          }));
        };
      }, zs([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), zs([
        B
      ], t.prototype, "init", null), t = zs([
        j("animationFrameService")
      ], t), t;
    }(H)
  );
  var Pv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Iu = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Nu = "ag-resizer-wrapper", Tv = (
    /* html */
    '<div class="' + Nu + `">
        <div ref="eTopLeftResizer" class="ag-resizer ag-resizer-topLeft"></div>
        <div ref="eTopResizer" class="ag-resizer ag-resizer-top"></div>
        <div ref="eTopRightResizer" class="ag-resizer ag-resizer-topRight"></div>
        <div ref="eRightResizer" class="ag-resizer ag-resizer-right"></div>
        <div ref="eBottomRightResizer" class="ag-resizer ag-resizer-bottomRight"></div>
        <div ref="eBottomResizer" class="ag-resizer ag-resizer-bottom"></div>
        <div ref="eBottomLeftResizer" class="ag-resizer ag-resizer-bottomLeft"></div>
        <div ref="eLeftResizer" class="ag-resizer ag-resizer-left"></div>
    </div>`
  ), xu = (
    /** @class */
    function(n) {
      Pv(t, n);
      function t(e, r) {
        var o = n.call(this) || this;
        return o.element = e, o.dragStartPosition = {
          x: 0,
          y: 0
        }, o.position = {
          x: 0,
          y: 0
        }, o.lastSize = {
          width: -1,
          height: -1
        }, o.positioned = !1, o.resizersAdded = !1, o.resizeListeners = [], o.boundaryEl = null, o.isResizing = !1, o.isMoving = !1, o.resizable = {}, o.movable = !1, o.currentResizer = null, o.config = Object.assign({}, { popup: !1 }, r), o;
      }
      return t.prototype.center = function() {
        var e = this.offsetParent, r = e.clientHeight, o = e.clientWidth, i = o / 2 - this.getWidth() / 2, s = r / 2 - this.getHeight() / 2;
        this.offsetElement(i, s);
      }, t.prototype.initialisePosition = function() {
        var e = this.config, r = e.centered, o = e.forcePopupParentAsOffsetParent, i = e.minWidth, s = e.width, a = e.minHeight, l = e.height, u = e.x, p = e.y;
        this.offsetParent || this.setOffsetParent();
        var d = 0, f = 0, v = !!this.element.offsetParent;
        if (v) {
          var y = this.findBoundaryElement(), R = window.getComputedStyle(y);
          if (R.minWidth != null) {
            var _ = y.offsetWidth - this.element.offsetWidth;
            f = parseInt(R.minWidth, 10) - _;
          }
          if (R.minHeight != null) {
            var D = y.offsetHeight - this.element.offsetHeight;
            d = parseInt(R.minHeight, 10) - D;
          }
        }
        if (this.minHeight = a || d, this.minWidth = i || f, s && this.setWidth(s), l && this.setHeight(l), (!s || !l) && this.refreshSize(), r)
          this.center();
        else if (u || p)
          this.offsetElement(u, p);
        else if (v && o && this.boundaryEl) {
          var P = parseFloat(this.boundaryEl.style.top), F = parseFloat(this.boundaryEl.style.left);
          this.offsetElement(isNaN(F) ? 0 : F, isNaN(P) ? 0 : P);
        }
        this.positioned = !!this.offsetParent;
      }, t.prototype.isPositioned = function() {
        return this.positioned;
      }, t.prototype.getPosition = function() {
        return this.position;
      }, t.prototype.setMovable = function(e, r) {
        if (!(!this.config.popup || e === this.movable)) {
          this.movable = e;
          var o = this.moveElementDragListener || {
            eElement: r,
            onDragStart: this.onMoveStart.bind(this),
            onDragging: this.onMove.bind(this),
            onDragStop: this.onMoveEnd.bind(this)
          };
          e ? (this.dragService.addDragSource(o), this.moveElementDragListener = o) : (this.dragService.removeDragSource(o), this.moveElementDragListener = void 0);
        }
      }, t.prototype.setResizable = function(e) {
        var r = this;
        if (this.clearResizeListeners(), e ? this.addResizers() : this.removeResizers(), typeof e == "boolean") {
          if (e === !1)
            return;
          e = {
            topLeft: e,
            top: e,
            topRight: e,
            right: e,
            bottomRight: e,
            bottom: e,
            bottomLeft: e,
            left: e
          };
        }
        Object.keys(e).forEach(function(o) {
          var i = e, s = !!i[o], a = r.getResizerElement(o), l = {
            dragStartPixels: 0,
            eElement: a,
            onDragStart: function(u) {
              return r.onResizeStart(u, o);
            },
            onDragging: r.onResize.bind(r),
            onDragStop: function(u) {
              return r.onResizeEnd(u, o);
            }
          };
          (!!r.resizable[o] !== s || !r.isAlive() && !s) && (s ? (r.dragService.addDragSource(l), r.resizeListeners.push(l), a.style.pointerEvents = "all") : a.style.pointerEvents = "none");
        });
      }, t.prototype.removeSizeFromEl = function() {
        this.element.style.removeProperty("height"), this.element.style.removeProperty("width"), this.element.style.removeProperty("flex");
      }, t.prototype.restoreLastSize = function() {
        this.element.style.flex = "0 0 auto";
        var e = this.lastSize, r = e.height, o = e.width;
        o !== -1 && (this.element.style.width = o + "px"), r !== -1 && (this.element.style.height = r + "px");
      }, t.prototype.getHeight = function() {
        return this.element.offsetHeight;
      }, t.prototype.setHeight = function(e) {
        var r = this.config.popup, o = this.element, i = !1;
        if (typeof e == "string" && e.indexOf("%") !== -1)
          dr(o, e), e = Bn(o), i = !0;
        else if (this.positioned) {
          var s = this.element.getBoundingClientRect(), a = this.offsetParent.getBoundingClientRect();
          e = Math.max(this.minHeight, e);
          var l = this.offsetParent.clientHeight, u = r ? this.position.y : s.top, p = r ? 0 : a.top;
          l && e + u > l + p && (e = l - u);
        }
        this.getHeight() !== e && (i ? (o.style.maxHeight = "unset", o.style.minHeight = "unset") : r ? dr(o, e) : (o.style.height = e + "px", o.style.flex = "0 0 auto", this.lastSize.height = typeof e == "number" ? e : parseFloat(e)));
      }, t.prototype.getWidth = function() {
        return this.element.offsetWidth;
      }, t.prototype.setWidth = function(e) {
        var r = this.element, o = this.config.popup, i = !1;
        if (typeof e == "string" && e.indexOf("%") !== -1)
          Pt(r, e), e = wi(r), i = !0;
        else if (this.positioned) {
          e = Math.max(this.minWidth, e);
          var s = this.offsetParent.clientWidth, a = o ? this.position.x : this.element.getBoundingClientRect().left;
          s && e + a > s && (e = s - a);
        }
        this.getWidth() !== e && (i ? (r.style.maxWidth = "unset", r.style.minWidth = "unset") : this.config.popup ? Pt(r, e) : (r.style.width = e + "px", r.style.flex = " unset", this.lastSize.width = typeof e == "number" ? e : parseFloat(e)));
      }, t.prototype.offsetElement = function(e, r) {
        e === void 0 && (e = 0), r === void 0 && (r = 0);
        var o = this.config.forcePopupParentAsOffsetParent ? this.boundaryEl : this.element;
        this.popupService.positionPopup({
          ePopup: o,
          x: e,
          y: r,
          keepWithinBounds: !0
        }), this.setPosition(parseFloat(o.style.left), parseFloat(o.style.top));
      }, t.prototype.setPosition = function(e, r) {
        this.position.x = e, this.position.y = r;
      }, t.prototype.updateDragStartPosition = function(e, r) {
        this.dragStartPosition = { x: e, y: r };
      }, t.prototype.calculateMouseMovement = function(e) {
        var r = e.e, o = e.isLeft, i = e.isTop, s = e.anywhereWithin, a = e.topBuffer, l = r.clientX - this.dragStartPosition.x, u = r.clientY - this.dragStartPosition.y, p = this.shouldSkipX(r, !!o, !!s, l) ? 0 : l, d = this.shouldSkipY(r, !!i, a, u) ? 0 : u;
        return { movementX: p, movementY: d };
      }, t.prototype.shouldSkipX = function(e, r, o, i) {
        var s = this.element.getBoundingClientRect(), a = this.offsetParent.getBoundingClientRect(), l = this.boundaryEl.getBoundingClientRect(), u = this.config.popup ? this.position.x : s.left, p = u <= 0 && a.left >= e.clientX || a.right <= e.clientX && a.right <= l.right;
        return p ? !0 : (r ? p = // skip if we are moving to the left and the cursor
        // is positioned to the right of the left side anchor
        i < 0 && e.clientX > u + a.left || // skip if we are moving to the right and the cursor
        // is positioned to the left of the dialog
        i > 0 && e.clientX < u + a.left : o ? p = i < 0 && e.clientX > l.right || i > 0 && e.clientX < u + a.left : p = // if the movement is bound to the right side of the dialog
        // we skip if we are moving to the left and the cursor
        // is to the right of the dialog
        i < 0 && e.clientX > l.right || // or skip if we are moving to the right and the cursor
        // is to the left of the right side anchor
        i > 0 && e.clientX < l.right, p);
      }, t.prototype.shouldSkipY = function(e, r, o, i) {
        o === void 0 && (o = 0);
        var s = this.element.getBoundingClientRect(), a = this.offsetParent.getBoundingClientRect(), l = this.boundaryEl.getBoundingClientRect(), u = this.config.popup ? this.position.y : s.top, p = u <= 0 && a.top >= e.clientY || a.bottom <= e.clientY && a.bottom <= l.bottom;
        return p ? !0 : (r ? p = // skip if we are moving to towards top and the cursor is
        // below the top anchor + topBuffer
        // note: topBuffer is used when moving the dialog using the title bar
        i < 0 && e.clientY > u + a.top + o || // skip if we are moving to the bottom and the cursor is
        // above the top anchor
        i > 0 && e.clientY < u + a.top : p = // skip if we are moving towards the top and the cursor
        // is below the bottom anchor
        i < 0 && e.clientY > l.bottom || // skip if we are moving towards the bottom and the cursor
        // is above the bottom anchor
        i > 0 && e.clientY < l.bottom, p);
      }, t.prototype.createResizeMap = function() {
        var e = this.element;
        this.resizerMap = {
          topLeft: { element: e.querySelector("[ref=eTopLeftResizer]") },
          top: { element: e.querySelector("[ref=eTopResizer]") },
          topRight: { element: e.querySelector("[ref=eTopRightResizer]") },
          right: { element: e.querySelector("[ref=eRightResizer]") },
          bottomRight: { element: e.querySelector("[ref=eBottomRightResizer]") },
          bottom: { element: e.querySelector("[ref=eBottomResizer]") },
          bottomLeft: { element: e.querySelector("[ref=eBottomLeftResizer]") },
          left: { element: e.querySelector("[ref=eLeftResizer]") }
        };
      }, t.prototype.addResizers = function() {
        if (!this.resizersAdded) {
          var e = this.element;
          if (e) {
            var r = new DOMParser(), o = r.parseFromString(Tv, "text/html").body;
            e.appendChild(o.firstChild), this.createResizeMap(), this.resizersAdded = !0;
          }
        }
      }, t.prototype.removeResizers = function() {
        this.resizerMap = void 0;
        var e = this.element.querySelector("." + Nu);
        e && this.element.removeChild(e), this.resizersAdded = !1;
      }, t.prototype.getResizerElement = function(e) {
        return this.resizerMap[e].element;
      }, t.prototype.onResizeStart = function(e, r) {
        this.boundaryEl = this.findBoundaryElement(), this.positioned || this.initialisePosition(), this.currentResizer = {
          isTop: !!r.match(/top/i),
          isRight: !!r.match(/right/i),
          isBottom: !!r.match(/bottom/i),
          isLeft: !!r.match(/left/i)
        }, this.element.classList.add("ag-resizing"), this.resizerMap[r].element.classList.add("ag-active");
        var o = this.config, i = o.popup, s = o.forcePopupParentAsOffsetParent;
        !i && !s && this.applySizeToSiblings(this.currentResizer.isBottom || this.currentResizer.isTop), this.isResizing = !0, this.updateDragStartPosition(e.clientX, e.clientY);
      }, t.prototype.getSiblings = function() {
        var e = this.element, r = e.parentElement;
        return r ? Array.prototype.slice.call(r.children).filter(function(o) {
          return !o.classList.contains("ag-hidden");
        }) : null;
      }, t.prototype.getMinSizeOfSiblings = function() {
        for (var e = this.getSiblings() || [], r = 0, o = 0, i = 0; i < e.length; i++) {
          var s = e[i], a = !!s.style.flex && s.style.flex !== "0 0 auto";
          if (s !== this.element) {
            var l = this.minHeight || 0, u = this.minWidth || 0;
            if (a) {
              var p = window.getComputedStyle(s);
              p.minHeight && (l = parseInt(p.minHeight, 10)), p.minWidth && (u = parseInt(p.minWidth, 10));
            } else
              l = s.offsetHeight, u = s.offsetWidth;
            r += l, o += u;
          }
        }
        return { height: r, width: o };
      }, t.prototype.applySizeToSiblings = function(e) {
        var r = null, o = this.getSiblings();
        if (o) {
          for (var i = 0; i < o.length; i++) {
            var s = o[i];
            s !== r && (e ? s.style.height = s.offsetHeight + "px" : s.style.width = s.offsetWidth + "px", s.style.flex = "0 0 auto", s === this.element && (r = o[i + 1]));
          }
          r && (r.style.removeProperty("height"), r.style.removeProperty("min-height"), r.style.removeProperty("max-height"), r.style.flex = "1 1 auto");
        }
      }, t.prototype.onResize = function(e) {
        if (!(!this.isResizing || !this.currentResizer)) {
          var r = this.config, o = r.popup, i = r.forcePopupParentAsOffsetParent, s = this.currentResizer, a = s.isTop, l = s.isRight, u = s.isBottom, p = s.isLeft, d = l || p, f = u || a, v = this.calculateMouseMovement({ e, isLeft: p, isTop: a }), y = v.movementX, R = v.movementY, _ = this.position.x, D = this.position.y, P = 0, F = 0;
          if (d && y) {
            var U = p ? -1 : 1, X = this.getWidth(), ce = X + y * U, de = !1;
            p && (P = X - ce, (_ + P <= 0 || ce <= this.minWidth) && (de = !0, P = 0)), de || this.setWidth(ce);
          }
          if (f && R) {
            var U = a ? -1 : 1, J = this.getHeight(), fe = J + R * U, ge = !1;
            a ? (F = J - fe, (D + F <= 0 || fe <= this.minHeight) && (ge = !0, F = 0)) : !this.config.popup && !this.config.forcePopupParentAsOffsetParent && J < fe && this.getMinSizeOfSiblings().height + fe > this.element.parentElement.offsetHeight && (ge = !0), ge || this.setHeight(fe);
          }
          this.updateDragStartPosition(e.clientX, e.clientY), ((o || i) && P || F) && this.offsetElement(_ + P, D + F);
        }
      }, t.prototype.onResizeEnd = function(e, r) {
        this.isResizing = !1, this.currentResizer = null, this.boundaryEl = null;
        var o = {
          type: "resize",
          api: this.gridOptionsWrapper.getApi(),
          columnApi: this.gridOptionsWrapper.getColumnApi()
        };
        this.element.classList.remove("ag-resizing"), this.resizerMap[r].element.classList.remove("ag-active"), this.dispatchEvent(o);
      }, t.prototype.refreshSize = function() {
        var e = this.element;
        this.config.popup && (this.config.width || this.setWidth(e.offsetWidth), this.config.height || this.setHeight(e.offsetHeight));
      }, t.prototype.onMoveStart = function(e) {
        this.boundaryEl = this.findBoundaryElement(), this.positioned || this.initialisePosition(), this.isMoving = !0, this.element.classList.add("ag-moving"), this.updateDragStartPosition(e.clientX, e.clientY);
      }, t.prototype.onMove = function(e) {
        if (this.isMoving) {
          var r = this.position, o = r.x, i = r.y, s;
          this.config.calculateTopBuffer && (s = this.config.calculateTopBuffer());
          var a = this.calculateMouseMovement({
            e,
            isTop: !0,
            anywhereWithin: !0,
            topBuffer: s
          }), l = a.movementX, u = a.movementY;
          this.offsetElement(o + l, i + u), this.updateDragStartPosition(e.clientX, e.clientY);
        }
      }, t.prototype.onMoveEnd = function() {
        this.isMoving = !1, this.boundaryEl = null, this.element.classList.remove("ag-moving");
      }, t.prototype.setOffsetParent = function() {
        this.config.forcePopupParentAsOffsetParent ? this.offsetParent = this.popupService.getPopupParent() : this.offsetParent = this.element.offsetParent;
      }, t.prototype.findBoundaryElement = function() {
        for (var e = this.element; e; ) {
          if (window.getComputedStyle(e).position !== "static")
            return e;
          e = e.parentElement;
        }
        return this.element;
      }, t.prototype.clearResizeListeners = function() {
        for (; this.resizeListeners.length; ) {
          var e = this.resizeListeners.pop();
          this.dragService.removeDragSource(e);
        }
      }, t.prototype.destroy = function() {
        n.prototype.destroy.call(this), this.moveElementDragListener && this.dragService.removeDragSource(this.moveElementDragListener), this.clearResizeListeners(), this.removeResizers();
      }, Iu([
        h("popupService")
      ], t.prototype, "popupService", void 0), Iu([
        h("dragService")
      ], t.prototype, "dragService", void 0), t;
    }(H)
  );
  var Dv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Uo = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Gu = (
    /** @class */
    function(n) {
      Dv(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.postConstruct = function() {
        var e = this;
        this.ctrlsService.whenReady(function(r) {
          e.centerRowContainerCtrl = r.centerRowContainerCtrl;
        });
      }, t.prototype.getPreferredWidthForColumn = function(e, r) {
        var o = this.getHeaderCellForColumn(e);
        if (!o)
          return -1;
        var i = this.rowRenderer.getAllCellsForColumn(e);
        return r || i.push(o), this.addElementsToContainerAndGetWidth(i);
      }, t.prototype.getPreferredWidthForColumnGroup = function(e) {
        var r = this.getHeaderCellForColumn(e);
        return r ? this.addElementsToContainerAndGetWidth([r]) : -1;
      }, t.prototype.addElementsToContainerAndGetWidth = function(e) {
        var r = this, o = document.createElement("span");
        o.style.position = "fixed";
        var i = this.centerRowContainerCtrl.getContainerElement();
        i.appendChild(o), e.forEach(function(l) {
          return r.cloneItemIntoDummy(l, o);
        });
        var s = o.offsetWidth;
        i.removeChild(o);
        var a = this.gridOptionsWrapper.getAutoSizePadding();
        return s + a;
      }, t.prototype.getHeaderCellForColumn = function(e) {
        var r = null;
        return this.ctrlsService.getHeaderRowContainerCtrls().forEach(function(o) {
          var i = o.getHtmlElementForColumnHeader(e);
          i != null && (r = i);
        }), r;
      }, t.prototype.cloneItemIntoDummy = function(e, r) {
        var o = e.cloneNode(!0);
        o.style.width = "", o.style.position = "static", o.style.left = "";
        var i = document.createElement("div"), s = i.classList, a = ["ag-header-cell", "ag-header-group-cell"].some(function(f) {
          return o.classList.contains(f);
        });
        a ? (s.add("ag-header", "ag-header-row"), i.style.position = "static") : s.add("ag-row");
        for (var l = e.parentElement; l; ) {
          var u = ["ag-header-row", "ag-row"].some(function(f) {
            return l.classList.contains(f);
          });
          if (u) {
            for (var p = 0; p < l.classList.length; p++) {
              var d = l.classList[p];
              d != "ag-row-position-absolute" && s.add(d);
            }
            break;
          }
          l = l.parentElement;
        }
        i.appendChild(o), r.appendChild(i);
      }, Uo([
        h("rowRenderer")
      ], t.prototype, "rowRenderer", void 0), Uo([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), Uo([
        h("rowCssClassCalculator")
      ], t.prototype, "rowCssClassCalculator", void 0), Uo([
        B
      ], t.prototype, "postConstruct", null), t = Uo([
        j("autoWidthCalculator")
      ], t), t;
    }(H)
  );
  var bv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), ut = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Fv = function(n, t) {
    var e = typeof Symbol == "function" && n[Symbol.iterator];
    if (!e) return n;
    var r = e.call(n), o, i = [], s;
    try {
      for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
    } catch (a) {
      s = { error: a };
    } finally {
      try {
        o && !o.done && (e = r.return) && e.call(r);
      } finally {
        if (s) throw s.error;
      }
    }
    return i;
  }, Hu = function() {
    for (var n = [], t = 0; t < arguments.length; t++) n = n.concat(Fv(arguments[t]));
    return n;
  }, Vu = (
    /** @class */
    function(n) {
      bv(t, n);
      function t() {
        var e = n !== null && n.apply(this, arguments) || this;
        return e.destroyFuncsForColumnListeners = [], e.rowCtrlsByRowIndex = {}, e.zombieRowCtrls = {}, e.allRowCtrls = [], e.topRowCtrls = [], e.bottomRowCtrls = [], e.refreshInProgress = !1, e;
      }
      return t.prototype.postConstruct = function() {
        var e = this;
        this.ctrlsService.whenReady(function() {
          e.gridBodyCtrl = e.ctrlsService.getGridBodyCtrl(), e.initialise();
        });
      }, t.prototype.initialise = function() {
        this.addManagedListener(this.eventService, m.EVENT_PAGINATION_CHANGED, this.onPageLoaded.bind(this)), this.addManagedListener(this.eventService, m.EVENT_PINNED_ROW_DATA_CHANGED, this.onPinnedRowDataChanged.bind(this)), this.addManagedListener(this.eventService, m.EVENT_DISPLAYED_COLUMNS_CHANGED, this.onDisplayedColumnsChanged.bind(this)), this.addManagedListener(this.eventService, m.EVENT_BODY_SCROLL, this.redrawAfterScroll.bind(this)), this.addManagedListener(this.eventService, m.EVENT_BODY_HEIGHT_CHANGED, this.redrawAfterScroll.bind(this)), this.addManagedListener(this.gridOptionsWrapper, z.PROP_DOM_LAYOUT, this.onDomLayoutChanged.bind(this)), this.addManagedListener(this.gridOptionsWrapper, z.PROP_ROW_CLASS, this.redrawRows.bind(this)), this.addManagedListener(this.eventService, m.EVENT_NEW_COLUMNS_LOADED, this.onNewColumnsLoaded.bind(this)), this.registerCellEventListeners(), this.initialiseCache(), this.printLayout = this.gridOptionsWrapper.getDomLayout() === E.DOM_LAYOUT_PRINT, this.embedFullWidthRows = this.printLayout || this.gridOptionsWrapper.isEmbedFullWidthRows(), this.redrawAfterModelUpdate();
      }, t.prototype.initialiseCache = function() {
        if (this.gridOptionsWrapper.isKeepDetailRows()) {
          var e = this.gridOptionsWrapper.getKeepDetailRowsCount(), r = e ?? 3;
          this.cachedRowCtrls = new Lv(r);
        }
      }, t.prototype.getRowCtrls = function() {
        return this.allRowCtrls;
      }, t.prototype.updateAllRowCtrls = function() {
        var e = Se(this.rowCtrlsByRowIndex);
        this.gridOptionsWrapper.isEnsureDomOrder() && e.sort(function(i, s) {
          return i.getRowNode().rowIndex - s.getRowNode.rowIndex;
        });
        var r = Se(this.zombieRowCtrls), o = this.cachedRowCtrls ? this.cachedRowCtrls.getEntries() : [];
        this.allRowCtrls = Hu(e, r, o);
      }, t.prototype.registerCellEventListeners = function() {
        var e = this;
        this.addManagedListener(this.eventService, m.EVENT_CELL_FOCUSED, function(o) {
          e.getAllCellCtrls().forEach(function(i) {
            return i.onCellFocused(o);
          }), e.getFullWidthRowCtrls().forEach(function(i) {
            i.onFullWidthRowFocused(o);
          });
        }), this.addManagedListener(this.eventService, m.EVENT_FLASH_CELLS, function(o) {
          e.getAllCellCtrls().forEach(function(i) {
            return i.onFlashCells(o);
          });
        }), this.addManagedListener(this.eventService, m.EVENT_COLUMN_HOVER_CHANGED, function() {
          e.getAllCellCtrls().forEach(function(o) {
            return o.onColumnHover();
          });
        }), this.addManagedListener(this.eventService, m.EVENT_DISPLAYED_COLUMNS_CHANGED, function() {
          e.getAllCellCtrls().forEach(function(o) {
            return o.onDisplayedColumnsChanged();
          });
        }), this.addManagedListener(this.eventService, m.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, function() {
          e.printLayout && e.getAllCellCtrls().forEach(function(o) {
            return o.onLeftChanged();
          });
        });
        var r = this.gridOptionsWrapper.isEnableRangeSelection();
        r && (this.addManagedListener(this.eventService, m.EVENT_RANGE_SELECTION_CHANGED, function() {
          e.getAllCellCtrls().forEach(function(o) {
            return o.onRangeSelectionChanged();
          });
        }), this.addManagedListener(this.eventService, m.EVENT_COLUMN_MOVED, function() {
          e.getAllCellCtrls().forEach(function(o) {
            return o.updateRangeBordersIfRangeCount();
          });
        }), this.addManagedListener(this.eventService, m.EVENT_COLUMN_PINNED, function() {
          e.getAllCellCtrls().forEach(function(o) {
            return o.updateRangeBordersIfRangeCount();
          });
        }), this.addManagedListener(this.eventService, m.EVENT_COLUMN_VISIBLE, function() {
          e.getAllCellCtrls().forEach(function(o) {
            return o.updateRangeBordersIfRangeCount();
          });
        })), this.refreshListenersToColumnsForCellComps(), this.addManagedListener(this.eventService, m.EVENT_GRID_COLUMNS_CHANGED, this.refreshListenersToColumnsForCellComps.bind(this)), this.addDestroyFunc(this.removeGridColumnListeners.bind(this));
      }, t.prototype.removeGridColumnListeners = function() {
        this.destroyFuncsForColumnListeners.forEach(function(e) {
          return e();
        }), this.destroyFuncsForColumnListeners.length = 0;
      }, t.prototype.refreshListenersToColumnsForCellComps = function() {
        var e = this;
        this.removeGridColumnListeners();
        var r = this.columnModel.getAllGridColumns();
        r && r.forEach(function(o) {
          var i = function(p) {
            e.getAllCellCtrls().forEach(function(d) {
              d.getColumn() === o && p(d);
            });
          }, s = function() {
            i(function(p) {
              return p.onLeftChanged();
            });
          }, a = function() {
            i(function(p) {
              return p.onWidthChanged();
            });
          }, l = function() {
            i(function(p) {
              return p.onFirstRightPinnedChanged();
            });
          }, u = function() {
            i(function(p) {
              return p.onLastLeftPinnedChanged();
            });
          };
          o.addEventListener(A.EVENT_LEFT_CHANGED, s), o.addEventListener(A.EVENT_WIDTH_CHANGED, a), o.addEventListener(A.EVENT_FIRST_RIGHT_PINNED_CHANGED, l), o.addEventListener(A.EVENT_LAST_LEFT_PINNED_CHANGED, u), e.destroyFuncsForColumnListeners.push(function() {
            o.removeEventListener(A.EVENT_LEFT_CHANGED, s), o.removeEventListener(A.EVENT_WIDTH_CHANGED, a), o.removeEventListener(A.EVENT_FIRST_RIGHT_PINNED_CHANGED, l), o.removeEventListener(A.EVENT_LAST_LEFT_PINNED_CHANGED, u);
          });
        });
      }, t.prototype.onDomLayoutChanged = function() {
        var e = this.gridOptionsWrapper.getDomLayout() === E.DOM_LAYOUT_PRINT, r = e || this.gridOptionsWrapper.isEmbedFullWidthRows(), o = r !== this.embedFullWidthRows || this.printLayout !== e;
        this.printLayout = e, this.embedFullWidthRows = r, o && this.redrawAfterModelUpdate();
      }, t.prototype.datasourceChanged = function() {
        this.firstRenderedRow = 0, this.lastRenderedRow = -1;
        var e = Object.keys(this.rowCtrlsByRowIndex);
        this.removeRowCtrls(e);
      }, t.prototype.onPageLoaded = function(e) {
        var r = {
          recycleRows: e.keepRenderedRows,
          animate: e.animate,
          newData: e.newData,
          newPage: e.newPage,
          // because this is a model updated event (not pinned rows), we
          // can skip updating the pinned rows. this is needed so that if user
          // is doing transaction updates, the pinned rows are not getting constantly
          // trashed - or editing cells in pinned rows are not refreshed and put into read mode
          onlyBody: !0
        };
        this.redrawAfterModelUpdate(r);
      }, t.prototype.getAllCellsForColumn = function(e) {
        var r = [];
        return this.getAllRowCtrls().forEach(function(o) {
          var i = o.getCellElement(e);
          i && r.push(i);
        }), r;
      }, t.prototype.refreshFloatingRowComps = function() {
        this.refreshFloatingRows(this.topRowCtrls, this.pinnedRowModel.getPinnedTopRowData()), this.refreshFloatingRows(this.bottomRowCtrls, this.pinnedRowModel.getPinnedBottomRowData());
      }, t.prototype.getTopRowCtrls = function() {
        return this.topRowCtrls;
      }, t.prototype.getBottomRowCtrls = function() {
        return this.bottomRowCtrls;
      }, t.prototype.refreshFloatingRows = function(e, r) {
        var o = this;
        e.forEach(function(i) {
          i.destroyFirstPass(), i.destroySecondPass();
        }), e.length = 0, r && r.forEach(function(i) {
          var s = new tr(i, o.beans, !1, !1, o.printLayout);
          e.push(s);
        });
      }, t.prototype.onPinnedRowDataChanged = function() {
        var e = {
          recycleRows: !0
        };
        this.redrawAfterModelUpdate(e);
      }, t.prototype.getRenderedIndexesForRowNodes = function(e) {
        var r = [];
        return C(e) || ie(this.rowCtrlsByRowIndex, function(o, i) {
          var s = i.getRowNode();
          e.indexOf(s) >= 0 && r.push(o);
        }), r;
      }, t.prototype.redrawRows = function(e) {
        var r = e != null && e.length > 0;
        if (r) {
          var o = this.getRenderedIndexesForRowNodes(e);
          this.removeRowCtrls(o);
        }
        this.redrawAfterModelUpdate({
          recycleRows: r
        });
      }, t.prototype.getCellToRestoreFocusToAfterRefresh = function(e) {
        var r = e.suppressKeepFocus ? null : this.focusService.getFocusCellToUseAfterRefresh();
        if (r == null)
          return null;
        var o = this.gridOptionsWrapper.getDocument(), i = o.activeElement, s = this.gridOptionsWrapper.getDomData(i, er.DOM_DATA_KEY_CELL_CTRL), a = this.gridOptionsWrapper.getDomData(i, tr.DOM_DATA_KEY_ROW_CTRL), l = s || a;
        return l ? r : null;
      }, t.prototype.redrawAfterModelUpdate = function(e) {
        e === void 0 && (e = {}), this.getLockOnRefresh();
        var r = this.getCellToRestoreFocusToAfterRefresh(e);
        this.updateContainerHeights(), this.scrollToTopIfNewData(e);
        var o = !this.printLayout && !!e.recycleRows, i = e.animate && this.gridOptionsWrapper.isAnimateRows(), s = o ? this.recycleRows() : null;
        o || this.removeAllRowComps();
        var a = function() {
          if (r == null || s == null)
            return !1;
          var u = !1;
          return ie(s, function(p, d) {
            var f = d.getRowNode(), v = f.rowIndex == r.rowIndex, y = f.rowPinned == r.rowPinned;
            v && y && (u = !0);
          }), u;
        }, l = a();
        this.redraw(s, i), e.onlyBody || this.refreshFloatingRowComps(), this.dispatchDisplayedRowsChanged(), l || this.restoreFocusedCell(r), this.releaseLockOnRefresh();
      }, t.prototype.scrollToTopIfNewData = function(e) {
        var r = e.newData || e.newPage, o = this.gridOptionsWrapper.isSuppressScrollOnNewData();
        r && !o && this.gridBodyCtrl.getScrollFeature().scrollToTop();
      }, t.prototype.updateContainerHeights = function() {
        if (this.printLayout) {
          this.rowContainerHeightService.setModelHeight(null);
          return;
        }
        var e = this.paginationProxy.getCurrentPageHeight();
        e === 0 && (e = 1), this.rowContainerHeightService.setModelHeight(e);
      }, t.prototype.getLockOnRefresh = function() {
        if (this.refreshInProgress)
          throw new Error("AG Grid: cannot get grid to draw rows when it is in the middle of drawing rows. Your code probably called a grid API method while the grid was in the render stage. To overcome this, put the API call into a timeout, e.g. instead of api.redrawRows(), call setTimeout(function() { api.redrawRows(); }, 0). To see what part of your code that caused the refresh check this stacktrace.");
        this.refreshInProgress = !0;
      }, t.prototype.releaseLockOnRefresh = function() {
        this.refreshInProgress = !1;
      }, t.prototype.isRefreshInProgress = function() {
        return this.refreshInProgress;
      }, t.prototype.restoreFocusedCell = function(e) {
        e && this.focusService.setFocusedCell(e.rowIndex, e.column, e.rowPinned, !0);
      }, t.prototype.stopEditing = function(e) {
        e === void 0 && (e = !1), this.getAllRowCtrls().forEach(function(r) {
          r.stopEditing(e);
        });
      }, t.prototype.onNewColumnsLoaded = function() {
        this.getAllCellCtrls().forEach(function(e) {
          return e.onNewColumnsLoaded();
        });
      }, t.prototype.getAllCellCtrls = function() {
        var e = [];
        return this.getAllRowCtrls().forEach(function(r) {
          return e = e.concat(r.getAllCellCtrls());
        }), e;
      }, t.prototype.getAllRowCtrls = function() {
        var e = this, r = Hu(this.topRowCtrls, this.bottomRowCtrls);
        return Object.keys(this.rowCtrlsByRowIndex).forEach(function(o) {
          return r.push(e.rowCtrlsByRowIndex[o]);
        }), r;
      }, t.prototype.addRenderedRowListener = function(e, r, o) {
        var i = this.rowCtrlsByRowIndex[r];
        i && i.addEventListener(e, o);
      }, t.prototype.flashCells = function(e) {
        e === void 0 && (e = {});
        var r = e.flashDelay, o = e.fadeDelay;
        this.getCellCtrls(e.rowNodes, e.columns).forEach(function(i) {
          return i.flashCell({ flashDelay: r, fadeDelay: o });
        });
      }, t.prototype.refreshCells = function(e) {
        e === void 0 && (e = {});
        var r = {
          forceRefresh: e.force,
          newData: !1,
          suppressFlash: e.suppressFlash
        };
        this.getCellCtrls(e.rowNodes, e.columns).forEach(function(o) {
          if (o.refreshShouldDestroy()) {
            var i = o.getRowCtrl();
            i && i.refreshCell(o);
          } else
            o.refreshCell(r);
        }), this.getFullWidthRowCtrls(e.rowNodes).forEach(function(o) {
          o.refreshFullWidth();
        });
      }, t.prototype.getCellRendererInstances = function(e) {
        var r = this.getCellCtrls(e.rowNodes, e.columns).map(function(o) {
          return o.getCellRenderer();
        }).filter(function(o) {
          return o != null;
        });
        return r;
      }, t.prototype.getCellEditorInstances = function(e) {
        var r = [];
        return this.getCellCtrls(e.rowNodes, e.columns).forEach(function(o) {
          var i = o.getCellEditor();
          i && r.push(i);
        }), r;
      }, t.prototype.getEditingCells = function() {
        var e = [];
        return this.getAllCellCtrls().forEach(function(r) {
          if (r.isEditing()) {
            var o = r.getCellPosition();
            e.push(o);
          }
        }), e;
      }, t.prototype.mapRowNodes = function(e) {
        if (e) {
          var r = {
            top: {},
            bottom: {},
            normal: {}
          };
          return e.forEach(function(o) {
            var i = o.id;
            o.rowPinned === E.PINNED_TOP ? r.top[i] = o : o.rowPinned === E.PINNED_BOTTOM ? r.bottom[i] = o : r.normal[i] = o;
          }), r;
        }
      }, t.prototype.isRowInMap = function(e, r) {
        var o = e.id, i = e.rowPinned;
        return i === E.PINNED_BOTTOM ? r.bottom[o] != null : i === E.PINNED_TOP ? r.top[o] != null : r.normal[o] != null;
      }, t.prototype.getCellCtrls = function(e, r) {
        var o = this, i = this.mapRowNodes(e), s = [], a;
        g(r) && (a = {}, r.forEach(function(u) {
          var p = o.columnModel.getGridColumn(u);
          g(p) && (a[p.getId()] = !0);
        }));
        var l = function(u) {
          var p = u.getRowNode();
          i != null && !o.isRowInMap(p, i) || u.getAllCellCtrls().forEach(function(d) {
            var f = d.getColumn().getId(), v = a && !a[f];
            v || s.push(d);
          });
        };
        return ie(this.rowCtrlsByRowIndex, function(u, p) {
          l(p);
        }), this.topRowCtrls && this.topRowCtrls.forEach(l), this.bottomRowCtrls && this.bottomRowCtrls.forEach(l), s;
      }, t.prototype.destroy = function() {
        this.removeAllRowComps(), n.prototype.destroy.call(this);
      }, t.prototype.removeAllRowComps = function() {
        var e = Object.keys(this.rowCtrlsByRowIndex);
        this.removeRowCtrls(e);
      }, t.prototype.recycleRows = function() {
        var e = [];
        ie(this.rowCtrlsByRowIndex, function(o, i) {
          var s = i.getRowNode().id == null;
          s && e.push(o);
        }), this.removeRowCtrls(e);
        var r = {};
        return ie(this.rowCtrlsByRowIndex, function(o, i) {
          var s = i.getRowNode();
          r[s.id] = i;
        }), this.rowCtrlsByRowIndex = {}, r;
      }, t.prototype.removeRowCtrls = function(e) {
        var r = this;
        e.forEach(function(o) {
          var i = r.rowCtrlsByRowIndex[o];
          i && (i.destroyFirstPass(), i.destroySecondPass()), delete r.rowCtrlsByRowIndex[o];
        });
      }, t.prototype.redrawAfterScroll = function() {
        this.getLockOnRefresh(), this.redraw(null, !1, !0), this.releaseLockOnRefresh(), this.dispatchDisplayedRowsChanged();
      }, t.prototype.removeRowCompsNotToDraw = function(e) {
        var r = {};
        e.forEach(function(s) {
          return r[s] = !0;
        });
        var o = Object.keys(this.rowCtrlsByRowIndex), i = o.filter(function(s) {
          return !r[s];
        });
        this.removeRowCtrls(i);
      }, t.prototype.calculateIndexesToDraw = function(e) {
        var r = this, o = il(this.firstRenderedRow, this.lastRenderedRow), i = function(s, a) {
          var l = a.getRowNode().rowIndex;
          l != null && (l < r.firstRenderedRow || l > r.lastRenderedRow) && r.doNotUnVirtualiseRow(a) && o.push(l);
        };
        return ie(this.rowCtrlsByRowIndex, i), ie(e, i), o.sort(function(s, a) {
          return s - a;
        }), o;
      }, t.prototype.redraw = function(e, r, o) {
        var i = this;
        r === void 0 && (r = !1), o === void 0 && (o = !1), this.rowContainerHeightService.updateOffset(), this.workOutFirstAndLastRowsToRender();
        var s = this.calculateIndexesToDraw(e);
        if (this.removeRowCompsNotToDraw(s), this.printLayout && (r = !1), s.forEach(function(l) {
          var u = i.createOrUpdateRowCtrl(l, e, r, o);
          g(u);
        }), e) {
          var a = o && !this.gridOptionsWrapper.isSuppressAnimationFrame() && !this.printLayout;
          a ? this.beans.animationFrameService.addDestroyTask(function() {
            i.destroyRowCtrls(e, r), i.updateAllRowCtrls(), i.dispatchDisplayedRowsChanged();
          }) : this.destroyRowCtrls(e, r);
        }
        this.updateAllRowCtrls(), this.gridBodyCtrl.updateRowCount();
      }, t.prototype.dispatchDisplayedRowsChanged = function() {
        var e = { type: m.EVENT_DISPLAYED_ROWS_CHANGED };
        this.eventService.dispatchEvent(e);
      }, t.prototype.onDisplayedColumnsChanged = function() {
        var e = this.columnModel.isPinningLeft(), r = this.columnModel.isPinningRight(), o = this.pinningLeft !== e || r !== this.pinningRight;
        o && (this.pinningLeft = e, this.pinningRight = r, this.embedFullWidthRows && this.redrawFullWidthEmbeddedRows());
      }, t.prototype.redrawFullWidthEmbeddedRows = function() {
        var e = [];
        this.getFullWidthRowCtrls().forEach(function(r) {
          var o = r.getRowNode().rowIndex;
          e.push(o.toString());
        }), this.refreshFloatingRowComps(), this.removeRowCtrls(e), this.redrawAfterScroll();
      }, t.prototype.getFullWidthRowCtrls = function(e) {
        var r = this, o = this.mapRowNodes(e);
        return Se(this.rowCtrlsByRowIndex).filter(function(i) {
          if (!i.isFullWidth())
            return !1;
          var s = i.getRowNode();
          return !(o != null && !r.isRowInMap(s, o));
        });
      }, t.prototype.refreshFullWidthRows = function(e) {
        var r = [], o = !!e, i = o ? {} : void 0;
        o && i && e.forEach(function(s) {
          return i[s.id] = !0;
        }), this.getFullWidthRowCtrls().forEach(function(s) {
          var a = s.getRowNode();
          if (o && i) {
            var l = a.level > 0 && a.parent ? a.parent.id : void 0, u = !i[a.id] && !i[l];
            if (u)
              return;
          }
          var p = s.refreshFullWidth();
          if (!p) {
            var d = s.getRowNode().rowIndex;
            r.push(d.toString());
          }
        }), this.removeRowCtrls(r), this.redrawAfterScroll();
      }, t.prototype.createOrUpdateRowCtrl = function(e, r, o, i) {
        var s, a = this.rowCtrlsByRowIndex[e];
        a || (s = this.paginationProxy.getRow(e), g(s) && g(r) && r[s.id] && s.alreadyRendered && (a = r[s.id], r[s.id] = null));
        var l = !a;
        if (l)
          if (s || (s = this.paginationProxy.getRow(e)), g(s))
            a = this.createRowCon(s, o, i);
          else
            return;
        return s && (s.alreadyRendered = !0), this.rowCtrlsByRowIndex[e] = a, a;
      }, t.prototype.destroyRowCtrls = function(e, r) {
        var o = this, i = [];
        ie(e, function(s, a) {
          if (a) {
            if (o.cachedRowCtrls && a.isCacheable()) {
              o.cachedRowCtrls.addRow(a);
              return;
            }
            a.destroyFirstPass(), r ? (o.zombieRowCtrls[a.getInstanceId()] = a, i.push(function() {
              a.destroySecondPass(), delete o.zombieRowCtrls[a.getInstanceId()];
            })) : a.destroySecondPass();
          }
        }), r && (i.push(function() {
          o.updateAllRowCtrls(), o.dispatchDisplayedRowsChanged();
        }), go(i));
      }, t.prototype.workOutFirstAndLastRowsToRender = function() {
        var e = this, r, o;
        if (!this.paginationProxy.isRowsToRender())
          r = 0, o = -1;
        else if (this.printLayout)
          r = this.paginationProxy.getPageFirstRow(), o = this.paginationProxy.getPageLastRow();
        else {
          var i = this.gridOptionsWrapper.getRowBufferInPixels(), s = this.ctrlsService.getGridBodyCtrl(), a = this.gridOptionsWrapper.isSuppressRowVirtualisation(), l = !1, u = void 0, p = void 0;
          do {
            var d = this.paginationProxy.getPixelOffset(), f = this.paginationProxy.getCurrentPagePixelRange(), v = f.pageFirstPixel, y = f.pageLastPixel, R = this.rowContainerHeightService.getDivStretchOffset();
            if (a)
              u = v + R, p = y + R;
            else {
              var _ = s.getScrollFeature().getVScrollPosition(), D = _.top, P = _.bottom;
              u = Math.max(D + d - i, v) + R, p = Math.min(P + d + i, y) + R;
            }
            l = this.ensureAllRowsInRangeHaveHeightsCalculated(u, p);
          } while (l);
          var F = this.paginationProxy.getRowIndexAtPixel(u), U = this.paginationProxy.getRowIndexAtPixel(p), X = this.paginationProxy.getPageFirstRow(), ce = this.paginationProxy.getPageLastRow();
          F < X && (F = X), U > ce && (U = ce), r = F, o = U;
        }
        var de = this.gridOptionsWrapper.getDomLayout() === E.DOM_LAYOUT_NORMAL, J = this.gridOptionsWrapper.isSuppressMaxRenderedRowRestriction(), fe = Math.max(this.gridOptionsWrapper.getRowBuffer(), 500);
        de && !J && o - r > fe && (o = r + fe);
        var ge = r !== this.firstRenderedRow, Pe = o !== this.lastRenderedRow;
        if (ge || Pe) {
          this.firstRenderedRow = r, this.lastRenderedRow = o;
          var Te = {
            type: m.EVENT_VIEWPORT_CHANGED,
            firstRow: r,
            lastRow: o,
            api: this.gridApi,
            columnApi: this.columnApi
          };
          this.eventService.dispatchEvent(Te);
        }
        if (this.paginationProxy.isRowsToRender()) {
          var mt = {
            type: m.EVENT_FIRST_DATA_RENDERED,
            firstRow: r,
            lastRow: o,
            api: this.gridApi,
            columnApi: this.columnApi
          };
          window.setTimeout(function() {
            return e.eventService.dispatchEventOnce(mt);
          }, 50);
        }
      }, t.prototype.ensureAllRowsInRangeHaveHeightsCalculated = function(e, r) {
        var o = this.paginationProxy.ensureRowHeightsValid(e, r, -1, -1);
        return o && this.updateContainerHeights(), o;
      }, t.prototype.getFirstVirtualRenderedRow = function() {
        return this.firstRenderedRow;
      }, t.prototype.getLastVirtualRenderedRow = function() {
        return this.lastRenderedRow;
      }, t.prototype.doNotUnVirtualiseRow = function(e) {
        var r = !1, o = !0, i = e.getRowNode(), s = this.focusService.isRowNodeFocused(i), a = e.isEditing(), l = i.detail, u = s || a || l;
        if (!u)
          return r;
        var p = this.paginationProxy.isRowPresent(i);
        return p ? o : r;
      }, t.prototype.createRowCon = function(e, r, o) {
        var i = this.cachedRowCtrls ? this.cachedRowCtrls.getRow(e) : null;
        if (i)
          return i;
        var s = this.gridOptionsWrapper.isSuppressAnimationFrame(), a = o && !s && !this.printLayout, l = new tr(e, this.beans, r, a, this.printLayout);
        return l;
      }, t.prototype.getRenderedNodes = function() {
        var e = this.rowCtrlsByRowIndex;
        return Object.keys(e).map(function(r) {
          return e[r].getRowNode();
        });
      }, t.prototype.getRowByPosition = function(e) {
        var r;
        switch (e.rowPinned) {
          case E.PINNED_TOP:
            r = this.topRowCtrls[e.rowIndex];
            break;
          case E.PINNED_BOTTOM:
            r = this.bottomRowCtrls[e.rowIndex];
            break;
          default:
            r = this.rowCtrlsByRowIndex[e.rowIndex];
            break;
        }
        return r;
      }, t.prototype.getRowNode = function(e) {
        switch (e.rowPinned) {
          case E.PINNED_TOP:
            return this.pinnedRowModel.getPinnedTopRowData()[e.rowIndex];
          case E.PINNED_BOTTOM:
            return this.pinnedRowModel.getPinnedBottomRowData()[e.rowIndex];
          default:
            return this.rowModel.getRow(e.rowIndex);
        }
      }, t.prototype.isRangeInRenderedViewport = function(e, r) {
        var o = e == null || r == null;
        if (o)
          return !1;
        var i = e > this.lastRenderedRow, s = r < this.firstRenderedRow, a = !s && !i;
        return a;
      }, ut([
        h("paginationProxy")
      ], t.prototype, "paginationProxy", void 0), ut([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), ut([
        h("pinnedRowModel")
      ], t.prototype, "pinnedRowModel", void 0), ut([
        h("rowModel")
      ], t.prototype, "rowModel", void 0), ut([
        h("focusService")
      ], t.prototype, "focusService", void 0), ut([
        h("columnApi")
      ], t.prototype, "columnApi", void 0), ut([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), ut([
        h("beans")
      ], t.prototype, "beans", void 0), ut([
        h("rowContainerHeightService")
      ], t.prototype, "rowContainerHeightService", void 0), ut([
        ve("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), ut([
        B
      ], t.prototype, "postConstruct", null), t = ut([
        j("rowRenderer")
      ], t), t;
    }(H)
  ), Lv = (
    /** @class */
    function() {
      function n(t) {
        this.entriesMap = {}, this.entriesList = [], this.maxCount = t;
      }
      return n.prototype.addRow = function(t) {
        if (this.entriesMap[t.getRowNode().id] = t, this.entriesList.push(t), t.setCached(!0), this.entriesList.length > this.maxCount) {
          var e = this.entriesList[0];
          e.destroyFirstPass(), e.destroySecondPass(), this.removeFromCache(e);
        }
      }, n.prototype.getRow = function(t) {
        if (t == null || t.id == null)
          return null;
        var e = this.entriesMap[t.id];
        if (!e)
          return null;
        this.removeFromCache(e), e.setCached(!1);
        var r = e.getRowNode() != t;
        return r ? null : e;
      }, n.prototype.removeFromCache = function(t) {
        var e = t.getRowNode().id;
        delete this.entriesMap[e], Ce(this.entriesList, t);
      }, n.prototype.getEntries = function() {
        return this.entriesList;
      }, n;
    }()
  );
  var Mv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Wu = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Bu = (
    /** @class */
    function(n) {
      Mv(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.formatValue = function(e, r, o, i, s) {
        s === void 0 && (s = !0);
        var a = null, l, u = e.getColDef();
        if (i ? l = i : s && (l = r && r.rowPinned && u.pinnedRowValueFormatter ? u.pinnedRowValueFormatter : u.valueFormatter), l) {
          var p = {
            value: o,
            node: r,
            data: r ? r.data : null,
            colDef: u,
            column: e,
            api: this.gridOptionsWrapper.getApi(),
            columnApi: this.gridOptionsWrapper.getColumnApi(),
            context: this.gridOptionsWrapper.getContext()
          };
          a = this.expressionService.evaluate(l, p);
        } else if (u.refData)
          return u.refData[o] || "";
        return a == null && Array.isArray(o) && (a = o.join(", ")), a;
      }, Wu([
        h("expressionService")
      ], t.prototype, "expressionService", void 0), t = Wu([
        j("valueFormatterService")
      ], t), t;
    }(H)
  );
  var Iv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), jo = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, ku = (
    /** @class */
    function(n) {
      Iv(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.init = function() {
        this.setPinnedTopRowData(this.gridOptionsWrapper.getPinnedTopRowData()), this.setPinnedBottomRowData(this.gridOptionsWrapper.getPinnedBottomRowData());
      }, t.prototype.isEmpty = function(e) {
        var r = e === E.PINNED_TOP ? this.pinnedTopRows : this.pinnedBottomRows;
        return S(r);
      }, t.prototype.isRowsToRender = function(e) {
        return !this.isEmpty(e);
      }, t.prototype.getRowAtPixel = function(e, r) {
        var o = r === E.PINNED_TOP ? this.pinnedTopRows : this.pinnedBottomRows;
        if (S(o))
          return 0;
        for (var i = 0; i < o.length; i++) {
          var s = o[i], a = s.rowTop + s.rowHeight - 1;
          if (a >= e)
            return i;
        }
        return o.length - 1;
      }, t.prototype.setPinnedTopRowData = function(e) {
        this.pinnedTopRows = this.createNodesFromData(e, !0);
        var r = {
          type: m.EVENT_PINNED_ROW_DATA_CHANGED,
          api: this.gridApi,
          columnApi: this.columnApi
        };
        this.eventService.dispatchEvent(r);
      }, t.prototype.setPinnedBottomRowData = function(e) {
        this.pinnedBottomRows = this.createNodesFromData(e, !1);
        var r = {
          type: m.EVENT_PINNED_ROW_DATA_CHANGED,
          api: this.gridApi,
          columnApi: this.columnApi
        };
        this.eventService.dispatchEvent(r);
      }, t.prototype.createNodesFromData = function(e, r) {
        var o = this, i = [];
        if (e) {
          var s = 0;
          e.forEach(function(a, l) {
            var u = new ue(o.beans);
            u.data = a;
            var p = r ? ue.ID_PREFIX_TOP_PINNED : ue.ID_PREFIX_BOTTOM_PINNED;
            u.id = p + l, u.rowPinned = r ? E.PINNED_TOP : E.PINNED_BOTTOM, u.setRowTop(s), u.setRowHeight(o.gridOptionsWrapper.getRowHeightForNode(u).height), u.setRowIndex(l), s += u.rowHeight, i.push(u);
          });
        }
        return i;
      }, t.prototype.getPinnedTopRowData = function() {
        return this.pinnedTopRows;
      }, t.prototype.getPinnedBottomRowData = function() {
        return this.pinnedBottomRows;
      }, t.prototype.getPinnedTopTotalHeight = function() {
        return this.getTotalHeight(this.pinnedTopRows);
      }, t.prototype.getPinnedTopRowCount = function() {
        return this.pinnedTopRows ? this.pinnedTopRows.length : 0;
      }, t.prototype.getPinnedBottomRowCount = function() {
        return this.pinnedBottomRows ? this.pinnedBottomRows.length : 0;
      }, t.prototype.getPinnedTopRow = function(e) {
        return this.pinnedTopRows[e];
      }, t.prototype.getPinnedBottomRow = function(e) {
        return this.pinnedBottomRows[e];
      }, t.prototype.forEachPinnedTopRow = function(e) {
        S(this.pinnedTopRows) || this.pinnedTopRows.forEach(e);
      }, t.prototype.forEachPinnedBottomRow = function(e) {
        S(this.pinnedBottomRows) || this.pinnedBottomRows.forEach(e);
      }, t.prototype.getPinnedBottomTotalHeight = function() {
        return this.getTotalHeight(this.pinnedBottomRows);
      }, t.prototype.getTotalHeight = function(e) {
        if (!e || e.length === 0)
          return 0;
        var r = M(e);
        return r.rowTop + r.rowHeight;
      }, jo([
        h("columnApi")
      ], t.prototype, "columnApi", void 0), jo([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), jo([
        h("beans")
      ], t.prototype, "beans", void 0), jo([
        B
      ], t.prototype, "init", null), t = jo([
        j("pinnedRowModel")
      ], t), t;
    }(H)
  );
  (function(n) {
    n.Applied = "Applied", n.StoreNotFound = "StoreNotFound", n.StoreLoading = "StoreLoading", n.StoreWaitingToLoad = "StoreWaitingToLoad", n.StoreLoadingFailed = "StoreLoadingFailed", n.StoreWrongType = "StoreWrongType", n.Cancelled = "Cancelled";
  })(c.ServerSideTransactionResultStatus || (c.ServerSideTransactionResultStatus = {}));
  var Yi = (
    /** @class */
    function() {
      function n(t, e) {
        this.active = !0, this.nodeIdsToColumns = {}, this.mapToItems = {}, this.keepingColumns = t, this.pathRoot = {
          rowNode: e,
          children: null
        }, this.mapToItems[e.id] = this.pathRoot;
      }
      return n.prototype.setInactive = function() {
        this.active = !1;
      }, n.prototype.isActive = function() {
        return this.active;
      }, n.prototype.depthFirstSearchChangedPath = function(t, e) {
        if (t.children)
          for (var r = 0; r < t.children.length; r++)
            this.depthFirstSearchChangedPath(t.children[r], e);
        e(t.rowNode);
      }, n.prototype.depthFirstSearchEverything = function(t, e, r) {
        if (t.childrenAfterGroup)
          for (var o = 0; o < t.childrenAfterGroup.length; o++) {
            var i = t.childrenAfterGroup[o];
            i.childrenAfterGroup ? this.depthFirstSearchEverything(t.childrenAfterGroup[o], e, r) : r && e(i);
          }
        e(t);
      }, n.prototype.forEachChangedNodeDepthFirst = function(t, e) {
        e === void 0 && (e = !1), this.active ? this.depthFirstSearchChangedPath(this.pathRoot, t) : this.depthFirstSearchEverything(this.pathRoot.rowNode, t, e);
      }, n.prototype.executeFromRootNode = function(t) {
        t(this.pathRoot.rowNode);
      }, n.prototype.createPathItems = function(t) {
        for (var e = t, r = 0; !this.mapToItems[e.id]; ) {
          var o = {
            rowNode: e,
            children: null
          };
          this.mapToItems[e.id] = o, r++, e = e.parent;
        }
        return r;
      }, n.prototype.populateColumnsMap = function(t, e) {
        var r = this;
        if (!(!this.keepingColumns || !e))
          for (var o = t; o; )
            this.nodeIdsToColumns[o.id] || (this.nodeIdsToColumns[o.id] = {}), e.forEach(function(i) {
              return r.nodeIdsToColumns[o.id][i.getId()] = !0;
            }), o = o.parent;
      }, n.prototype.linkPathItems = function(t, e) {
        for (var r = t, o = 0; o < e; o++) {
          var i = this.mapToItems[r.id], s = this.mapToItems[r.parent.id];
          s.children || (s.children = []), s.children.push(i), r = r.parent;
        }
      }, n.prototype.addParentNode = function(t, e) {
        if (!(!t || t.isRowPinned())) {
          var r = this.createPathItems(t);
          this.linkPathItems(t, r), this.populateColumnsMap(t, e);
        }
      }, n.prototype.canSkip = function(t) {
        return this.active && !this.mapToItems[t.id];
      }, n.prototype.getValueColumnsForNode = function(t, e) {
        if (!this.keepingColumns)
          return e;
        var r = this.nodeIdsToColumns[t.id], o = e.filter(function(i) {
          return r[i.getId()];
        });
        return o;
      }, n.prototype.getNotValueColumnsForNode = function(t, e) {
        if (!this.keepingColumns)
          return null;
        var r = this.nodeIdsToColumns[t.id], o = e.filter(function(i) {
          return !r[i.getId()];
        });
        return o;
      }, n;
    }()
  );
  var Nv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), qi = (
    /** @class */
    function(n) {
      Nv(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return r.state = t.STATE_WAITING_TO_LOAD, r.version = 0, r.id = e, r;
      }
      return t.prototype.getId = function() {
        return this.id;
      }, t.prototype.load = function() {
        this.state = t.STATE_LOADING, this.loadFromDatasource();
      }, t.prototype.getVersion = function() {
        return this.version;
      }, t.prototype.setStateWaitingToLoad = function() {
        this.version++, this.state = t.STATE_WAITING_TO_LOAD;
      }, t.prototype.getState = function() {
        return this.state;
      }, t.prototype.pageLoadFailed = function(e) {
        var r = this.isRequestMostRecentAndLive(e);
        r && (this.state = t.STATE_FAILED, this.processServerFail()), this.dispatchLoadCompleted(!1);
      }, t.prototype.success = function(e, r) {
        this.successCommon(e, r);
      }, t.prototype.pageLoaded = function(e, r, o) {
        this.successCommon(e, { rowData: r, rowCount: o });
      }, t.prototype.isRequestMostRecentAndLive = function(e) {
        var r = e === this.version, o = this.isAlive();
        return r && o;
      }, t.prototype.successCommon = function(e, r) {
        this.dispatchLoadCompleted();
        var o = this.isRequestMostRecentAndLive(e);
        o && (this.state = t.STATE_LOADED, this.processServerResult(r));
      }, t.prototype.dispatchLoadCompleted = function(e) {
        e === void 0 && (e = !0);
        var r = {
          type: t.EVENT_LOAD_COMPLETE,
          success: e,
          block: this
        };
        this.dispatchEvent(r);
      }, t.EVENT_LOAD_COMPLETE = "loadComplete", t.STATE_WAITING_TO_LOAD = "needsLoading", t.STATE_LOADING = "loading", t.STATE_LOADED = "loaded", t.STATE_FAILED = "failed", t;
    }(H)
  );
  var xv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), $s = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Gv = function(n, t) {
    return function(e, r) {
      t(e, r, n);
    };
  }, Uu = (
    /** @class */
    function(n) {
      xv(t, n);
      function t() {
        var r = n !== null && n.apply(this, arguments) || this;
        return r.activeBlockLoadsCount = 0, r.blocks = [], r.active = !0, r;
      }
      e = t, t.prototype.postConstruct = function() {
        this.maxConcurrentRequests = this.gridOptionsWrapper.getMaxConcurrentDatasourceRequests();
        var r = this.gridOptionsWrapper.getBlockLoadDebounceMillis();
        r && r > 0 && (this.checkBlockToLoadDebounce = re.debounce(this.performCheckBlocksToLoad.bind(this), r));
      }, t.prototype.setBeans = function(r) {
        this.logger = r.create("RowNodeBlockLoader");
      }, t.prototype.addBlock = function(r) {
        this.blocks.push(r), r.addEventListener(qi.EVENT_LOAD_COMPLETE, this.loadComplete.bind(this)), this.checkBlockToLoad();
      }, t.prototype.removeBlock = function(r) {
        re.removeFromArray(this.blocks, r);
      }, t.prototype.destroy = function() {
        n.prototype.destroy.call(this), this.active = !1;
      }, t.prototype.loadComplete = function() {
        this.activeBlockLoadsCount--, this.checkBlockToLoad(), this.activeBlockLoadsCount == 0 && this.dispatchEvent({ type: e.BLOCK_LOADER_FINISHED_EVENT });
      }, t.prototype.checkBlockToLoad = function() {
        this.checkBlockToLoadDebounce ? this.checkBlockToLoadDebounce() : this.performCheckBlocksToLoad();
      }, t.prototype.performCheckBlocksToLoad = function() {
        if (this.active) {
          if (this.printCacheStatus(), this.maxConcurrentRequests != null && this.activeBlockLoadsCount >= this.maxConcurrentRequests) {
            this.logger.log("checkBlockToLoad: max loads exceeded");
            return;
          }
          var r = null;
          this.blocks.forEach(function(o) {
            o.getState() === qi.STATE_WAITING_TO_LOAD && (r = o);
          }), r && (r.load(), this.activeBlockLoadsCount++, this.printCacheStatus());
        }
      }, t.prototype.getBlockState = function() {
        var r = {};
        return this.blocks.forEach(function(o) {
          var i = o.getBlockStateJson(), s = i.id, a = i.state;
          r[s] = a;
        }), r;
      }, t.prototype.printCacheStatus = function() {
        this.logger.isLogging() && this.logger.log("printCacheStatus: activePageLoadsCount = " + this.activeBlockLoadsCount + "," + (" blocks = " + JSON.stringify(this.getBlockState())));
      }, t.prototype.isLoading = function() {
        return this.activeBlockLoadsCount > 0;
      };
      var e;
      return t.BLOCK_LOADER_FINISHED_EVENT = "blockLoaderFinished", $s([
        B
      ], t.prototype, "postConstruct", null), $s([
        Gv(0, Ne("loggerFactory"))
      ], t.prototype, "setBeans", null), t = e = $s([
        j("rowNodeBlockLoader")
      ], t), t;
    }(H)
  );
  var Hv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), zo = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, ju = (
    /** @class */
    function(n) {
      Hv(t, n);
      function t() {
        var e = n !== null && n.apply(this, arguments) || this;
        return e.currentPage = 0, e.topDisplayedRowIndex = 0, e.bottomDisplayedRowIndex = 0, e.pixelOffset = 0, e.masterRowCount = 0, e;
      }
      return t.prototype.postConstruct = function() {
        this.active = this.gridOptionsWrapper.isPagination(), this.paginateChildRows = this.gridOptionsWrapper.isPaginateChildRows(), this.addManagedListener(this.eventService, m.EVENT_MODEL_UPDATED, this.onModelUpdated.bind(this)), this.addManagedListener(this.gridOptionsWrapper, "paginationPageSize", this.onPaginationPageSizeChanged.bind(this)), this.onModelUpdated();
      }, t.prototype.ensureRowHeightsValid = function(e, r, o, i) {
        var s = this.rowModel.ensureRowHeightsValid(e, r, this.getPageFirstRow(), this.getPageLastRow());
        return s && this.calculatePages(), s;
      }, t.prototype.onModelUpdated = function(e) {
        this.calculatePages();
        var r = {
          type: m.EVENT_PAGINATION_CHANGED,
          animate: e ? e.animate : !1,
          newData: e ? e.newData : !1,
          newPage: e ? e.newPage : !1,
          keepRenderedRows: e ? e.keepRenderedRows : !1,
          api: this.gridApi,
          columnApi: this.columnApi
        };
        this.eventService.dispatchEvent(r);
      }, t.prototype.onPaginationPageSizeChanged = function() {
        this.calculatePages();
        var e = {
          type: m.EVENT_PAGINATION_CHANGED,
          animate: !1,
          newData: !1,
          newPage: !1,
          // important to keep rendered rows, otherwise every time grid is resized,
          // we would destroy all the rows.
          keepRenderedRows: !0,
          api: this.gridApi,
          columnApi: this.columnApi
        };
        this.eventService.dispatchEvent(e);
      }, t.prototype.goToPage = function(e) {
        if (!(!this.active || this.currentPage === e)) {
          this.currentPage = e;
          var r = {
            type: m.EVENT_MODEL_UPDATED,
            animate: !1,
            keepRenderedRows: !1,
            newData: !1,
            newPage: !0,
            api: this.gridApi,
            columnApi: this.columnApi
          };
          this.onModelUpdated(r);
        }
      }, t.prototype.getPixelOffset = function() {
        return this.pixelOffset;
      }, t.prototype.getRow = function(e) {
        return this.rowModel.getRow(e);
      }, t.prototype.getRowNode = function(e) {
        return this.rowModel.getRowNode(e);
      }, t.prototype.getRowIndexAtPixel = function(e) {
        return this.rowModel.getRowIndexAtPixel(e);
      }, t.prototype.getCurrentPageHeight = function() {
        return C(this.topRowBounds) || C(this.bottomRowBounds) ? 0 : Math.max(this.bottomRowBounds.rowTop + this.bottomRowBounds.rowHeight - this.topRowBounds.rowTop, 0);
      }, t.prototype.getCurrentPagePixelRange = function() {
        var e = this.topRowBounds ? this.topRowBounds.rowTop : 0, r = this.bottomRowBounds ? this.bottomRowBounds.rowTop + this.bottomRowBounds.rowHeight : 0;
        return { pageFirstPixel: e, pageLastPixel: r };
      }, t.prototype.isRowPresent = function(e) {
        if (!this.rowModel.isRowPresent(e))
          return !1;
        var r = e.rowIndex >= this.topDisplayedRowIndex && e.rowIndex <= this.bottomDisplayedRowIndex;
        return r;
      }, t.prototype.isEmpty = function() {
        return this.rowModel.isEmpty();
      }, t.prototype.isRowsToRender = function() {
        return this.rowModel.isRowsToRender();
      }, t.prototype.getNodesInRangeForSelection = function(e, r) {
        return this.rowModel.getNodesInRangeForSelection(e, r);
      }, t.prototype.forEachNode = function(e) {
        return this.rowModel.forEachNode(e);
      }, t.prototype.getType = function() {
        return this.rowModel.getType();
      }, t.prototype.getRowBounds = function(e) {
        var r = this.rowModel.getRowBounds(e);
        return r.rowIndex = e, r;
      }, t.prototype.getPageFirstRow = function() {
        return this.topRowBounds ? this.topRowBounds.rowIndex : -1;
      }, t.prototype.getPageLastRow = function() {
        return this.bottomRowBounds ? this.bottomRowBounds.rowIndex : -1;
      }, t.prototype.getRowCount = function() {
        return this.rowModel.getRowCount();
      }, t.prototype.getPageForIndex = function(e) {
        return Math.floor(e / this.pageSize);
      }, t.prototype.goToPageWithIndex = function(e) {
        if (this.active) {
          var r = this.getPageForIndex(e);
          this.goToPage(r);
        }
      }, t.prototype.isRowInPage = function(e) {
        if (!this.active)
          return !0;
        var r = this.getPageForIndex(e.rowIndex);
        return r === this.currentPage;
      }, t.prototype.isLastPageFound = function() {
        return this.rowModel.isLastRowIndexKnown();
      }, t.prototype.getCurrentPage = function() {
        return this.currentPage;
      }, t.prototype.goToNextPage = function() {
        this.goToPage(this.currentPage + 1);
      }, t.prototype.goToPreviousPage = function() {
        this.goToPage(this.currentPage - 1);
      }, t.prototype.goToFirstPage = function() {
        this.goToPage(0);
      }, t.prototype.goToLastPage = function() {
        var e = this.rowModel.getRowCount(), r = Math.floor(e / this.pageSize);
        this.goToPage(r);
      }, t.prototype.getPageSize = function() {
        return this.pageSize;
      }, t.prototype.getTotalPages = function() {
        return this.totalPages;
      }, t.prototype.setPageSize = function() {
        this.pageSize = this.gridOptionsWrapper.getPaginationPageSize(), (this.pageSize == null || this.pageSize < 1) && (this.pageSize = 100);
      }, t.prototype.calculatePages = function() {
        this.active ? (this.setPageSize(), this.paginateChildRows ? this.calculatePagesAllRows() : this.calculatePagesMasterRowsOnly()) : this.calculatedPagesNotActive(), this.topRowBounds = this.rowModel.getRowBounds(this.topDisplayedRowIndex), this.topRowBounds && (this.topRowBounds.rowIndex = this.topDisplayedRowIndex), this.bottomRowBounds = this.rowModel.getRowBounds(this.bottomDisplayedRowIndex), this.bottomRowBounds && (this.bottomRowBounds.rowIndex = this.bottomDisplayedRowIndex), this.setPixelOffset(g(this.topRowBounds) ? this.topRowBounds.rowTop : 0);
      }, t.prototype.setPixelOffset = function(e) {
        this.pixelOffset !== e && (this.pixelOffset = e, this.eventService.dispatchEvent({ type: m.EVENT_PAGINATION_PIXEL_OFFSET_CHANGED }));
      }, t.prototype.setZeroRows = function() {
        this.masterRowCount = 0, this.topDisplayedRowIndex = 0, this.bottomDisplayedRowIndex = -1, this.currentPage = 0, this.totalPages = 0;
      }, t.prototype.calculatePagesMasterRowsOnly = function() {
        if (this.masterRowCount = this.rowModel.getTopLevelRowCount(), this.masterRowCount <= 0) {
          this.setZeroRows();
          return;
        }
        var e = this.masterRowCount - 1;
        this.totalPages = Math.floor(e / this.pageSize) + 1, this.currentPage >= this.totalPages && (this.currentPage = this.totalPages - 1), (!Ri(this.currentPage) || this.currentPage < 0) && (this.currentPage = 0);
        var r = this.pageSize * this.currentPage, o = this.pageSize * (this.currentPage + 1) - 1;
        if (o > e && (o = e), this.topDisplayedRowIndex = this.rowModel.getTopLevelRowDisplayedIndex(r), o === e)
          this.bottomDisplayedRowIndex = this.rowModel.getRowCount() - 1;
        else {
          var i = this.rowModel.getTopLevelRowDisplayedIndex(o + 1);
          this.bottomDisplayedRowIndex = i - 1;
        }
      }, t.prototype.getMasterRowCount = function() {
        return this.masterRowCount;
      }, t.prototype.calculatePagesAllRows = function() {
        if (this.masterRowCount = this.rowModel.getRowCount(), this.masterRowCount === 0) {
          this.setZeroRows();
          return;
        }
        var e = this.masterRowCount - 1;
        this.totalPages = Math.floor(e / this.pageSize) + 1, this.currentPage >= this.totalPages && (this.currentPage = this.totalPages - 1), (!Ri(this.currentPage) || this.currentPage < 0) && (this.currentPage = 0), this.topDisplayedRowIndex = this.pageSize * this.currentPage, this.bottomDisplayedRowIndex = this.pageSize * (this.currentPage + 1) - 1, this.bottomDisplayedRowIndex > e && (this.bottomDisplayedRowIndex = e);
      }, t.prototype.calculatedPagesNotActive = function() {
        this.pageSize = this.rowModel.getRowCount(), this.totalPages = 1, this.currentPage = 0, this.topDisplayedRowIndex = 0, this.bottomDisplayedRowIndex = this.rowModel.getRowCount() - 1;
      }, zo([
        h("rowModel")
      ], t.prototype, "rowModel", void 0), zo([
        h("columnApi")
      ], t.prototype, "columnApi", void 0), zo([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), zo([
        B
      ], t.prototype, "postConstruct", null), t = zo([
        j("paginationProxy")
      ], t), t;
    }(H)
  );
  var Vv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), zu = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, $u = (
    /** @class */
    function(n) {
      Vv(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.processAllCellClasses = function(e, r, o, i) {
        this.processClassRules(e.cellClassRules, r, o, i), this.processStaticCellClasses(e, r, o);
      }, t.prototype.processClassRules = function(e, r, o, i) {
        if (e != null) {
          for (var s = Object.keys(e), a = {}, l = {}, u = function(f) {
            var v = s[f], y = e[v], R;
            typeof y == "string" ? R = p.expressionService.evaluate(y, r) : typeof y == "function" && (R = y(r)), v.split(" ").forEach(function(_) {
              _ == null || _.trim() == "" || (R ? a[_] = !0 : l[_] = !0);
            });
          }, p = this, d = 0; d < s.length; d++)
            u(d);
          i && Object.keys(l).forEach(i), Object.keys(a).forEach(o);
        }
      }, t.prototype.getStaticCellClasses = function(e, r) {
        var o = e.cellClass;
        if (!o)
          return [];
        var i;
        if (typeof o == "function") {
          var s = o;
          i = s(r);
        } else
          i = o;
        return typeof i == "string" && (i = [i]), i || [];
      }, t.prototype.processStaticCellClasses = function(e, r, o) {
        var i = this.getStaticCellClasses(e, r);
        i.forEach(function(s) {
          o(s);
        });
      }, zu([
        h("expressionService")
      ], t.prototype, "expressionService", void 0), t = zu([
        j("stylingService")
      ], t), t;
    }(H)
  );
  var Wv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Ku = (
    /** @class */
    function(n) {
      Wv(t, n);
      function t(e) {
        return n.call(this, e, "ag-radio-button", "radio") || this;
      }
      return t.prototype.isSelected = function() {
        return this.eInput.checked;
      }, t.prototype.toggle = function() {
        this.eInput.disabled || this.isSelected() || this.setValue(!0);
      }, t.prototype.addInputListeners = function() {
        n.prototype.addInputListeners.call(this), this.addManagedListener(this.eventService, m.EVENT_CHECKBOX_CHANGED, this.onChange.bind(this));
      }, t.prototype.onChange = function(e) {
        e.selected && e.name && this.eInput.name && this.eInput.name === e.name && e.id && this.eInput.id !== e.id && this.setValue(!1, !0);
      }, t;
    }(Yr)
  );
  var Bv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Yu = (
    /** @class */
    function(n) {
      Bv(t, n);
      function t(e) {
        return n.call(this, e, "ag-toggle-button") || this;
      }
      return t.prototype.setValue = function(e, r) {
        return n.prototype.setValue.call(this, e, r), this.addOrRemoveCssClass("ag-selected", this.getValue()), this;
      }, t;
    }(Yr)
  );
  var kv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Ks = (
    /** @class */
    function(n) {
      kv(t, n);
      function t(e, r, o) {
        return r === void 0 && (r = "ag-text-field"), o === void 0 && (o = "text"), n.call(this, e, r, o) || this;
      }
      return t.prototype.postConstruct = function() {
        n.prototype.postConstruct.call(this), this.config.allowedCharPattern && this.preventDisallowedCharacters();
      }, t.prototype.setValue = function(e, r) {
        var o = n.prototype.setValue.call(this, e, r);
        return this.eInput.value !== e && (this.eInput.value = g(e) ? e : ""), o;
      }, t.prototype.preventDisallowedCharacters = function() {
        var e = new RegExp("[" + this.config.allowedCharPattern + "]"), r = function(o) {
          o.key && !e.test(o.key) && o.preventDefault();
        };
        this.addManagedListener(this.eInput, "keypress", r), this.addManagedListener(this.eInput, "paste", function(o) {
          var i, s = (i = o.clipboardData) === null || i === void 0 ? void 0 : i.getData("text");
          s && s.split("").some(function(a) {
            return !e.test(a);
          }) && o.preventDefault();
        });
      }, t;
    }(Ut)
  );
  var Uv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), qu = (
    /** @class */
    function(n) {
      Uv(t, n);
      function t(e) {
        return n.call(this, e, "ag-text-area", null, "textarea") || this;
      }
      return t.prototype.setValue = function(e, r) {
        var o = n.prototype.setValue.call(this, e, r);
        return this.eInput.value = e, o;
      }, t.prototype.setCols = function(e) {
        return this.eInput.cols = e, this;
      }, t.prototype.setRows = function(e) {
        return this.eInput.rows = e, this;
      }, t;
    }(Ut)
  );
  var jv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Xu = (
    /** @class */
    function(n) {
      jv(t, n);
      function t(e) {
        return n.call(this, e, "ag-number-field", "number") || this;
      }
      return t.prototype.postConstruct = function() {
        var e = this;
        n.prototype.postConstruct.call(this), this.addManagedListener(this.eInput, "blur", function() {
          var r = parseFloat(e.eInput.value), o = isNaN(r) ? "" : e.normalizeValue(r.toString());
          e.value !== o && e.setValue(o);
        }), this.eInput.step = "any";
      }, t.prototype.normalizeValue = function(e) {
        if (e === "")
          return "";
        this.precision && (e = this.adjustPrecision(e));
        var r = parseFloat(e);
        return this.min != null && r < this.min ? e = this.min.toString() : this.max != null && r > this.max && (e = this.max.toString()), e;
      }, t.prototype.adjustPrecision = function(e) {
        if (this.precision) {
          var r = parseFloat(e).toFixed(this.precision);
          e = parseFloat(r).toString();
        }
        return e;
      }, t.prototype.setMin = function(e) {
        return this.min === e ? this : (this.min = e, Do(this.eInput, "min", e), this);
      }, t.prototype.setMax = function(e) {
        return this.max === e ? this : (this.max = e, Do(this.eInput, "max", e), this);
      }, t.prototype.setPrecision = function(e) {
        return this.precision = e, this;
      }, t.prototype.setStep = function(e) {
        return this.step === e ? this : (this.step = e, Do(this.eInput, "step", e), this);
      }, t.prototype.setValue = function(e, r) {
        e = this.adjustPrecision(e);
        var o = this.normalizeValue(e);
        return e != o ? this : n.prototype.setValue.call(this, e, r);
      }, t;
    }(Ks)
  );
  var zv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Qu = (
    /** @class */
    function(n) {
      zv(t, n);
      function t(e) {
        return n.call(this, e, "ag-range-field", "range") || this;
      }
      return t.prototype.postConstruct = function() {
        n.prototype.postConstruct.call(this);
        var e = this.config, r = e.min, o = e.max, i = e.step;
        r != null && this.setMinValue(r), o != null && this.setMaxValue(o), this.setStep(i || 1);
      }, t.prototype.addInputListeners = function() {
        var e = this;
        this.addManagedListener(this.eInput, "input", function(r) {
          var o = r.target.value;
          e.setValue(o);
        });
      }, t.prototype.setMinValue = function(e) {
        return this.min = e, this.eInput.setAttribute("min", e.toString()), this;
      }, t.prototype.setMaxValue = function(e) {
        return this.max = e, this.eInput.setAttribute("max", e.toString()), this;
      }, t.prototype.setStep = function(e) {
        return this.eInput.setAttribute("step", e.toString()), this;
      }, t.prototype.setValue = function(e, r) {
        this.min != null && (e = Math.max(parseFloat(e), this.min).toString()), this.max != null && (e = Math.min(parseFloat(e), this.max).toString());
        var o = n.prototype.setValue.call(this, e, r);
        return this.eInput.value = e, o;
      }, t;
    }(Ut)
  );
  var $v = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Xi = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Zu = (
    /** @class */
    function(n) {
      $v(t, n);
      function t(e) {
        var r = n.call(this, e, t.TEMPLATE) || this;
        return r.labelAlignment = "top", r;
      }
      return t.prototype.init = function() {
        this.eSlider.addCssClass("ag-slider-field");
      }, t.prototype.onValueChange = function(e) {
        var r = this, o = Tt.EVENT_CHANGED;
        return this.addManagedListener(this.eText, o, function() {
          var i = parseFloat(r.eText.getValue());
          r.eSlider.setValue(i.toString(), !0), e(i || 0);
        }), this.addManagedListener(this.eSlider, o, function() {
          var i = r.eSlider.getValue();
          r.eText.setValue(i, !0), e(parseFloat(i));
        }), this;
      }, t.prototype.setSliderWidth = function(e) {
        return this.eSlider.setWidth(e), this;
      }, t.prototype.setTextFieldWidth = function(e) {
        return this.eText.setWidth(e), this;
      }, t.prototype.setMinValue = function(e) {
        return this.eSlider.setMinValue(e), this.eText.setMin(e), this;
      }, t.prototype.setMaxValue = function(e) {
        return this.eSlider.setMaxValue(e), this.eText.setMax(e), this;
      }, t.prototype.getValue = function() {
        return this.eText.getValue();
      }, t.prototype.setValue = function(e) {
        return this.getValue() === e ? this : (this.eText.setValue(e, !0), this.eSlider.setValue(e, !0), this.dispatchEvent({ type: Tt.EVENT_CHANGED }), this);
      }, t.prototype.setStep = function(e) {
        return this.eSlider.setStep(e), this.eText.setStep(e), this;
      }, t.TEMPLATE = `<div class="ag-slider">
            <label ref="eLabel"></label>
            <div class="ag-wrapper ag-slider-wrapper">
                <ag-input-range ref="eSlider"></ag-input-range>
                <ag-input-number-field ref="eText"></ag-input-number-field>
            </div>
        </div>`, Xi([
        I("eLabel")
      ], t.prototype, "eLabel", void 0), Xi([
        I("eSlider")
      ], t.prototype, "eSlider", void 0), Xi([
        I("eText")
      ], t.prototype, "eText", void 0), Xi([
        B
      ], t.prototype, "init", null), t;
    }(fs)
  );
  var Kv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), $o = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Ju = (
    /** @class */
    function(n) {
      Kv(t, n);
      function t(e) {
        var r = n.call(this, e, t.TEMPLATE) || this;
        return r.radius = 0, r.offsetX = 0, r.offsetY = 0, r;
      }
      return t.prototype.postConstruct = function() {
        var e = this;
        n.prototype.postConstruct.call(this), this.dragListener = {
          eElement: this.eParentCircle,
          dragStartPixels: 0,
          onDragStart: function(r) {
            e.parentCircleRect = e.eParentCircle.getBoundingClientRect();
          },
          onDragging: function(r) {
            return e.calculateAngleDrag(r);
          },
          onDragStop: function() {
          }
        }, this.dragService.addDragSource(this.dragListener), this.eAngleValue.setLabel("").setLabelWidth(5).setInputWidth(45).setMin(0).setMax(360).setValue("" + this.degrees).onValueChange(function(r) {
          (r == null || r === "") && (r = "0"), r = e.eAngleValue.normalizeValue(r);
          var o = parseFloat(r);
          o > 180 && (o = o - 360), e.setValue(o);
        }), this.updateNumberInput(), g(this.getValue()) && this.eAngleValue.setValue(this.normalizeNegativeValue(this.getValue()).toString()), this.addManagedListener(this, Tt.EVENT_CHANGED, function() {
          var r = e.gridOptionsWrapper.getDocument();
          e.eAngleValue.getInputElement().contains(r.activeElement) || e.updateNumberInput();
        });
      }, t.prototype.updateNumberInput = function() {
        var e = this.normalizeNegativeValue(this.getValue());
        this.eAngleValue.setValue(e.toString());
      }, t.prototype.positionChildCircle = function(e) {
        var r = this.parentCircleRect || { width: 24, height: 24 }, o = this.eChildCircle, i = r.width / 2, s = r.height / 2;
        o.style.left = i + Math.cos(e) * 8 + "px", o.style.top = s + Math.sin(e) * 8 + "px";
      }, t.prototype.calculatePolar = function() {
        var e = this.offsetX, r = this.offsetY, o = Math.atan2(r, e);
        this.degrees = this.toDegrees(o), this.radius = Math.sqrt(e * e + r * r), this.positionChildCircle(o);
      }, t.prototype.calculateCartesian = function() {
        var e = this.toRadians(this.getValue()), r = this.getRadius();
        this.setOffsetX(Math.cos(e) * r).setOffsetY(Math.sin(e) * r);
      }, t.prototype.setOffsetX = function(e) {
        return this.offsetX !== e && (this.offsetX = e, this.calculatePolar()), this;
      }, t.prototype.setOffsetY = function(e) {
        return this.offsetY !== e && (this.offsetY = e, this.calculatePolar()), this;
      }, t.prototype.calculateAngleDrag = function(e) {
        var r = this.parentCircleRect, o = r.width / 2, i = r.height / 2, s = e.clientX - r.left, a = e.clientY - r.top, l = s - o, u = a - i, p = Math.atan2(u, l);
        this.setValue(p, !0);
      }, t.prototype.toDegrees = function(e) {
        return e / Math.PI * 180;
      }, t.prototype.toRadians = function(e) {
        return e / 180 * Math.PI;
      }, t.prototype.normalizeNegativeValue = function(e) {
        return e < 0 ? 360 + e : e;
      }, t.prototype.normalizeAngle180 = function(e) {
        return e %= Math.PI * 2, e < -Math.PI ? e += Math.PI * 2 : e >= Math.PI && (e -= Math.PI * 2), e;
      }, t.prototype.getRadius = function() {
        return this.radius;
      }, t.prototype.setRadius = function(e) {
        return this.radius === e ? this : (this.radius = e, this.calculateCartesian(), this);
      }, t.prototype.onValueChange = function(e) {
        var r = this;
        return this.addManagedListener(this, Tt.EVENT_CHANGED, function() {
          e(r.degrees);
        }), this;
      }, t.prototype.getValue = function(e) {
        return e ? this.toRadians(this.degrees) : this.degrees;
      }, t.prototype.setValue = function(e, r) {
        var o;
        return r ? o = e : o = this.normalizeAngle180(this.toRadians(e)), e = this.toDegrees(o), this.degrees !== e && (this.degrees = Math.floor(e), this.calculateCartesian(), this.positionChildCircle(o), this.dispatchEvent({ type: Tt.EVENT_CHANGED })), this;
      }, t.prototype.setWidth = function(e) {
        return Pt(this.getGui(), e), this;
      }, t.prototype.destroy = function() {
        this.dragService.removeDragSource(this.dragListener), n.prototype.destroy.call(this);
      }, t.TEMPLATE = `<div class="ag-angle-select">
            <div ref="eLabel"></div>
            <div class="ag-wrapper ag-angle-select-wrapper">
                <div ref="eAngleSelectField" class="ag-angle-select-field">
                    <div ref="eParentCircle" class="ag-angle-select-parent-circle">
                        <div ref="eChildCircle" class="ag-angle-select-child-circle"></div>
                    </div>
                </div>
                <ag-input-number-field ref="eAngleValue"></ag-input-number-field>
            </div>
        </div>`, $o([
        I("eLabel")
      ], t.prototype, "eLabel", void 0), $o([
        I("eParentCircle")
      ], t.prototype, "eParentCircle", void 0), $o([
        I("eChildCircle")
      ], t.prototype, "eChildCircle", void 0), $o([
        I("eAngleValue")
      ], t.prototype, "eAngleValue", void 0), $o([
        h("dragService")
      ], t.prototype, "dragService", void 0), t;
    }(fs)
  );
  var Yv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), jt = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, qv = function(n, t) {
    var e = typeof Symbol == "function" && n[Symbol.iterator];
    if (!e) return n;
    var r = e.call(n), o, i = [], s;
    try {
      for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
    } catch (a) {
      s = { error: a };
    } finally {
      try {
        o && !o.done && (e = r.return) && e.call(r);
      } finally {
        if (s) throw s.error;
      }
    }
    return i;
  }, Xv = (
    /** @class */
    function(n) {
      Yv(t, n);
      function t(e) {
        var r = n.call(this, t.TEMPLATE) || this;
        return r.H = 1, r.S = 1, r.B = 1, r.A = 1, r.isSpectrumDragging = !1, r.isSpectrumHueDragging = !1, r.isSpectrumAlphaDragging = !1, r.colorChanged = !1, r.picker = e.picker, r;
      }
      return t.prototype.postConstruct = function() {
        var e = this.getGui();
        this.initRecentColors(), this.addManagedListener(this.spectrumVal, "mousedown", this.onSpectrumDraggerDown.bind(this)), this.addManagedListener(e, "mousemove", this.onSpectrumDraggerMove.bind(this)), this.addManagedListener(this.spectrumHue, "mousedown", this.onSpectrumHueDown.bind(this)), this.addManagedListener(e, "mousemove", this.onSpectrumHueMove.bind(this)), this.addManagedListener(this.spectrumAlpha, "mousedown", this.onSpectrumAlphaDown.bind(this)), this.addManagedListener(e, "mousemove", this.onSpectrumAlphaMove.bind(this)), this.addManagedListener(document, "mouseup", this.onMouseUp.bind(this)), this.addManagedListener(this.recentColors, "click", this.onRecentColorClick.bind(this));
      }, t.prototype.refreshSpectrumRect = function() {
        return this.spectrumValRect = this.spectrumVal.getBoundingClientRect();
      }, t.prototype.refreshHueRect = function() {
        return this.spectrumHueRect = this.spectrumHue.getBoundingClientRect();
      }, t.prototype.refreshAlphaRect = function() {
        return this.spectrumAlphaRect = this.spectrumAlpha.getBoundingClientRect();
      }, t.prototype.onSpectrumDraggerDown = function(e) {
        this.refreshSpectrumRect(), this.isSpectrumDragging = !0, this.moveDragger(e);
      }, t.prototype.onSpectrumDraggerMove = function(e) {
        this.isSpectrumDragging && this.moveDragger(e);
      }, t.prototype.onSpectrumHueDown = function(e) {
        this.refreshHueRect(), this.isSpectrumHueDragging = !0, this.moveHueSlider(e);
      }, t.prototype.onSpectrumHueMove = function(e) {
        this.isSpectrumHueDragging && this.moveHueSlider(e);
      }, t.prototype.onSpectrumAlphaDown = function(e) {
        this.refreshAlphaRect(), this.isSpectrumAlphaDragging = !0, this.moveAlphaSlider(e);
      }, t.prototype.onSpectrumAlphaMove = function(e) {
        this.isSpectrumAlphaDragging && this.moveAlphaSlider(e);
      }, t.prototype.onMouseUp = function() {
        this.isSpectrumDragging = !1, this.isSpectrumHueDragging = !1, this.isSpectrumAlphaDragging = !1;
      }, t.prototype.moveDragger = function(e) {
        var r = this.spectrumValRect;
        if (r) {
          var o = e.clientX - r.left, i = e.clientY - r.top;
          o = Math.max(o, 0), o = Math.min(o, r.width), i = Math.max(i, 0), i = Math.min(i, r.height), this.setSpectrumValue(o / r.width, 1 - i / r.height);
        }
      }, t.prototype.moveHueSlider = function(e) {
        var r = this.spectrumHueRect;
        if (r) {
          var o = this.spectrumHueSlider, i = o.getBoundingClientRect(), s = e.clientX - r.left;
          s = Math.max(s, 0), s = Math.min(s, r.width), this.H = 1 - s / r.width, o.style.left = s + i.width / 2 + "px", this.update();
        }
      }, t.prototype.moveAlphaSlider = function(e) {
        var r = this.spectrumAlphaRect;
        if (r) {
          var o = this.spectrumAlphaSlider, i = o.getBoundingClientRect(), s = e.clientX - r.left;
          s = Math.max(s, 0), s = Math.min(s, r.width), this.A = s / r.width, o.style.left = s + i.width / 2 + "px", this.update();
        }
      }, t.prototype.update = function() {
        var e = Gr.fromHSB(this.H * 360, this.S, this.B, this.A), r = Gr.fromHSB(this.H * 360, 1, 1), o = e.toRgbaString(), i = this.picker, s = Gr.fromString(i.getValue());
        s.toRgbaString() !== o && (this.colorChanged = !0), i.setValue(o), this.spectrumColor.style.backgroundColor = r.toRgbaString(), this.spectrumDragger.style.backgroundColor = o;
      }, t.prototype.setSpectrumValue = function(e, r) {
        var o = this.spectrumValRect || this.refreshSpectrumRect();
        if (o) {
          var i = this.spectrumDragger, s = i.getBoundingClientRect();
          e = Math.max(0, e), e = Math.min(1, e), r = Math.max(0, r), r = Math.min(1, r), this.S = e, this.B = r, i.style.left = e * o.width - s.width / 2 + "px", i.style.top = (1 - r) * o.height - s.height / 2 + "px", this.update();
        }
      }, t.prototype.initRecentColors = function() {
        var e = t.recentColors, r = e.map(function(o, i) {
          return '<div class="ag-recent-color" id=' + i + ' style="background-color: ' + o + '; width: 15px; height: 15px;" recent-color="' + o + '"></div>';
        });
        this.recentColors.innerHTML = r.join("");
      }, t.prototype.setValue = function(e) {
        var r = Gr.fromString(e), o = qv(r.toHSB(), 3), i = o[0], s = o[1], a = o[2];
        this.H = (isNaN(i) ? 0 : i) / 360, this.A = r.a;
        var l = this.spectrumHueRect || this.refreshHueRect(), u = this.spectrumAlphaRect || this.refreshAlphaRect();
        this.spectrumHueSlider.style.left = (this.H - 1) * -l.width + "px", this.spectrumAlphaSlider.style.left = this.A * u.width + "px", this.setSpectrumValue(s, a);
      }, t.prototype.onRecentColorClick = function(e) {
        var r = e.target;
        if (g(r.id)) {
          var o = parseInt(r.id, 10);
          this.setValue(t.recentColors[o]), this.destroy();
        }
      }, t.prototype.addRecentColor = function() {
        var e = Gr.fromHSB(this.H * 360, this.S, this.B, this.A), r = e.toRgbaString(), o = t.recentColors;
        !this.colorChanged || o[0] === r || (o = o.filter(function(i) {
          return i != r;
        }), o = [r].concat(o), o.length > t.maxRecentColors && (o = o.slice(0, t.maxRecentColors)), t.recentColors = o);
      }, t.prototype.destroy = function() {
        this.addRecentColor(), n.prototype.destroy.call(this);
      }, t.maxRecentColors = 8, t.recentColors = [], t.TEMPLATE = `<div class="ag-color-panel">
            <div ref="spectrumColor" class="ag-spectrum-color">
                <div class="ag-spectrum-sat ag-spectrum-fill">
                    <div ref="spectrumVal" class="ag-spectrum-val ag-spectrum-fill">
                        <div ref="spectrumDragger" class="ag-spectrum-dragger"></div>
                    </div>
                </div>
            </div>
            <div class="ag-spectrum-tools">
                <div ref="spectrumHue" class="ag-spectrum-hue ag-spectrum-tool">
                    <div class="ag-spectrum-hue-background"></div>
                    <div ref="spectrumHueSlider" class="ag-spectrum-slider"></div>
                </div>
                <div ref="spectrumAlpha" class="ag-spectrum-alpha ag-spectrum-tool">
                    <div class="ag-spectrum-alpha-background"></div>
                    <div ref="spectrumAlphaSlider" class="ag-spectrum-slider"></div>
                </div>
                <div ref="recentColors" class="ag-recent-colors"></div>
            </div>
        </div>`, jt([
        I("spectrumColor")
      ], t.prototype, "spectrumColor", void 0), jt([
        I("spectrumVal")
      ], t.prototype, "spectrumVal", void 0), jt([
        I("spectrumDragger")
      ], t.prototype, "spectrumDragger", void 0), jt([
        I("spectrumHue")
      ], t.prototype, "spectrumHue", void 0), jt([
        I("spectrumHueSlider")
      ], t.prototype, "spectrumHueSlider", void 0), jt([
        I("spectrumAlpha")
      ], t.prototype, "spectrumAlpha", void 0), jt([
        I("spectrumAlphaSlider")
      ], t.prototype, "spectrumAlphaSlider", void 0), jt([
        I("recentColors")
      ], t.prototype, "recentColors", void 0), jt([
        B
      ], t.prototype, "postConstruct", null), t;
    }(le)
  );
  var Qv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Ko = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Ys = (
    /** @class */
    function(n) {
      Qv(t, n);
      function t(e) {
        var r = n.call(this, t.getTemplate(e)) || this;
        return r.closable = !0, r.config = e, r;
      }
      return t.getTemplate = function(e) {
        var r = e && e.cssIdentifier || "default";
        return (
          /* html */
          '<div class="ag-panel ag-' + r + `-panel" tabindex="-1">
            <div ref="eTitleBar" class="ag-panel-title-bar ag-` + r + `-panel-title-bar ag-unselectable">
                <span ref="eTitle" class="ag-panel-title-bar-title ag-` + r + `-panel-title-bar-title"></span>
                <div ref="eTitleBarButtons" class="ag-panel-title-bar-buttons ag-` + r + `-panel-title-bar-buttons"></div>
            </div>
            <div ref="eContentWrapper" class="ag-panel-content-wrapper ag-` + r + `-panel-content-wrapper"></div>
        </div>`
        );
      }, t.prototype.postConstruct = function() {
        var e = this, r = this.config, o = r.component, i = r.closable, s = r.hideTitleBar, a = r.title, l = r.minWidth, u = l === void 0 ? 250 : l, p = r.width, d = r.minHeight, f = d === void 0 ? 250 : d, v = r.height, y = r.centered, R = r.popup, _ = r.x, D = r.y;
        this.positionableFeature = new xu(this.getGui(), {
          minWidth: u,
          width: p,
          minHeight: f,
          height: v,
          centered: y,
          x: _,
          y: D,
          popup: R,
          calculateTopBuffer: function() {
            return e.positionableFeature.getHeight() - e.getBodyHeight();
          }
        }), this.createManagedBean(this.positionableFeature);
        var P = this.getGui();
        o && this.setBodyComponent(o), s ? this.eTitleBar.classList.add("ag-hidden") : (a && this.setTitle(a), this.setClosable(i ?? this.closable)), this.addManagedListener(this.eTitleBar, "mousedown", function(F) {
          var U = e.gridOptionsWrapper.getDocument();
          if (P.contains(F.relatedTarget) || P.contains(U.activeElement) || e.eTitleBarButtons.contains(F.target)) {
            F.preventDefault();
            return;
          }
          var X = e.eContentWrapper.querySelector("button, [href], input, select, textarea, [tabindex]");
          X && X.focus();
        }), !(R && this.positionableFeature.isPositioned()) && (this.renderComponent && this.renderComponent(), this.positionableFeature.initialisePosition(), this.eContentWrapper.style.height = "0");
      }, t.prototype.renderComponent = function() {
        var e = this, r = this.getGui();
        r.focus(), this.close = function() {
          r.parentElement.removeChild(r), e.destroy();
        };
      }, t.prototype.getHeight = function() {
        return this.positionableFeature.getHeight();
      }, t.prototype.setHeight = function(e) {
        this.positionableFeature.setHeight(e);
      }, t.prototype.getWidth = function() {
        return this.positionableFeature.getWidth();
      }, t.prototype.setWidth = function(e) {
        this.positionableFeature.setWidth(e);
      }, t.prototype.setClosable = function(e) {
        if (e !== this.closable && (this.closable = e), e) {
          var r = this.closeButtonComp = new le(t.CLOSE_BTN_TEMPLATE);
          this.getContext().createBean(r);
          var o = r.getGui(), i = be("close", this.gridOptionsWrapper);
          i.classList.add("ag-panel-title-bar-button-icon"), o.appendChild(i), this.addTitleBarButton(r), r.addManagedListener(o, "click", this.onBtClose.bind(this));
        } else if (this.closeButtonComp) {
          var o = this.closeButtonComp.getGui();
          o.parentElement.removeChild(o), this.closeButtonComp = this.destroyBean(this.closeButtonComp);
        }
      }, t.prototype.setBodyComponent = function(e) {
        e.setParentComponent(this), this.eContentWrapper.appendChild(e.getGui());
      }, t.prototype.addTitleBarButton = function(e, r) {
        var o = this.eTitleBarButtons, i = o.children, s = i.length;
        r == null && (r = s), r = Math.max(0, Math.min(r, s)), e.addCssClass("ag-panel-title-bar-button");
        var a = e.getGui();
        r === 0 ? o.insertAdjacentElement("afterbegin", a) : r === s ? o.insertAdjacentElement("beforeend", a) : i[r - 1].insertAdjacentElement("afterend", a), e.setParentComponent(this);
      }, t.prototype.getBodyHeight = function() {
        return _o(this.eContentWrapper);
      }, t.prototype.getBodyWidth = function() {
        return Ci(this.eContentWrapper);
      }, t.prototype.setTitle = function(e) {
        this.eTitle.innerText = e;
      }, t.prototype.onBtClose = function() {
        this.close();
      }, t.prototype.destroy = function() {
        this.closeButtonComp && (this.closeButtonComp = this.destroyBean(this.closeButtonComp));
        var e = this.getGui();
        e && e.offsetParent && this.close(), n.prototype.destroy.call(this);
      }, t.CLOSE_BTN_TEMPLATE = '<div class="ag-button"></div>', Ko([
        I("eContentWrapper")
      ], t.prototype, "eContentWrapper", void 0), Ko([
        I("eTitleBar")
      ], t.prototype, "eTitleBar", void 0), Ko([
        I("eTitleBarButtons")
      ], t.prototype, "eTitleBarButtons", void 0), Ko([
        I("eTitle")
      ], t.prototype, "eTitle", void 0), Ko([
        B
      ], t.prototype, "postConstruct", null), t;
    }(le)
  );
  var Zv = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Qi = function() {
    return Qi = Object.assign || function(n) {
      for (var t, e = 1, r = arguments.length; e < r; e++) {
        t = arguments[e];
        for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
      }
      return n;
    }, Qi.apply(this, arguments);
  }, Jv = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, qs = (
    /** @class */
    function(n) {
      Zv(t, n);
      function t(e) {
        var r = n.call(this, Qi(Qi({}, e), { popup: !0 })) || this;
        return r.isMaximizable = !1, r.isMaximized = !1, r.maximizeListeners = [], r.resizeListenerDestroy = null, r.lastPosition = {
          x: 0,
          y: 0,
          width: 0,
          height: 0
        }, r;
      }
      return t.prototype.postConstruct = function() {
        var e = this, r = this.getGui(), o = this.config, i = o.movable, s = o.resizable, a = o.maximizable;
        this.addCssClass("ag-dialog"), n.prototype.postConstruct.call(this), this.addManagedListener(r, "focusin", function(l) {
          r.contains(l.relatedTarget) || e.popupService.bringPopupToFront(r);
        }), i && this.setMovable(i), a && this.setMaximizable(a), s && this.setResizable(s);
      }, t.prototype.renderComponent = function() {
        var e = this.getGui(), r = this.config, o = r.alwaysOnTop, i = r.modal, s = r.title, a = this.gridOptionsWrapper.getLocaleTextFunc(), l = this.popupService.addPopup({
          modal: i,
          eChild: e,
          closeOnEsc: !0,
          closedCallback: this.destroy.bind(this),
          alwaysOnTop: o,
          ariaLabel: s || a("ariaLabelDialog", "Dialog")
        });
        l && (this.close = l.hideFunc);
      }, t.prototype.toggleMaximize = function() {
        var e = this.positionableFeature.getPosition();
        if (this.isMaximized) {
          var r = this.lastPosition, o = r.x, i = r.y, s = r.width, a = r.height;
          this.setWidth(s), this.setHeight(a), this.positionableFeature.offsetElement(o, i);
        } else
          this.lastPosition.width = this.getWidth(), this.lastPosition.height = this.getHeight(), this.lastPosition.x = e.x, this.lastPosition.y = e.y, this.positionableFeature.offsetElement(0, 0), this.setHeight("100%"), this.setWidth("100%");
        this.isMaximized = !this.isMaximized, this.refreshMaximizeIcon();
      }, t.prototype.refreshMaximizeIcon = function() {
        Ee(this.maximizeIcon, !this.isMaximized), Ee(this.minimizeIcon, this.isMaximized);
      }, t.prototype.clearMaximizebleListeners = function() {
        this.maximizeListeners.length && (this.maximizeListeners.forEach(function(e) {
          return e();
        }), this.maximizeListeners.length = 0), this.resizeListenerDestroy && (this.resizeListenerDestroy(), this.resizeListenerDestroy = null);
      }, t.prototype.destroy = function() {
        this.maximizeButtonComp = this.destroyBean(this.maximizeButtonComp), this.clearMaximizebleListeners(), n.prototype.destroy.call(this);
      }, t.prototype.setResizable = function(e) {
        this.positionableFeature.setResizable(e);
      }, t.prototype.setMovable = function(e) {
        this.positionableFeature.setMovable(e, this.eTitleBar);
      }, t.prototype.setMaximizable = function(e) {
        var r = this;
        if (!e) {
          this.clearMaximizebleListeners(), this.maximizeButtonComp && (this.destroyBean(this.maximizeButtonComp), this.maximizeButtonComp = this.maximizeIcon = this.minimizeIcon = void 0);
          return;
        }
        var o = this.eTitleBar;
        if (!(!o || e === this.isMaximizable)) {
          var i = this.maximizeButtonComp = this.createBean(new le(
            /* html */
            '<div class="ag-dialog-button"></span>'
          )), s = i.getGui();
          s.appendChild(this.maximizeIcon = be("maximize", this.gridOptionsWrapper)), this.maximizeIcon.classList.add("ag-panel-title-bar-button-icon"), s.appendChild(this.minimizeIcon = be("minimize", this.gridOptionsWrapper)), this.minimizeIcon.classList.add("ag-panel-title-bar-button-icon", "ag-hidden"), i.addManagedListener(s, "click", this.toggleMaximize.bind(this)), this.addTitleBarButton(i, 0), this.maximizeListeners.push(this.addManagedListener(o, "dblclick", this.toggleMaximize.bind(this))), this.resizeListenerDestroy = this.addManagedListener(this, "resize", function() {
            r.isMaximized = !1, r.refreshMaximizeIcon();
          });
        }
      }, Jv([
        h("popupService")
      ], t.prototype, "popupService", void 0), t;
    }(Ys)
  );
  var em = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), ep = (
    /** @class */
    function(n) {
      em(t, n);
      function t(e) {
        var r = n.call(this, e, "ag-color-picker", "colorPicker") || this;
        return e && e.color && (r.value = e.color), r;
      }
      return t.prototype.postConstruct = function() {
        n.prototype.postConstruct.call(this), this.value && this.setValue(this.value);
      }, t.prototype.showPicker = function() {
        var e = this, r = this.getGui().getBoundingClientRect(), o = this.createBean(new qs({
          closable: !1,
          modal: !0,
          hideTitleBar: !0,
          minWidth: 190,
          width: 190,
          height: 250,
          x: r.right - 190,
          y: r.top - 250
        }));
        this.isPickerDisplayed = !0, o.addCssClass("ag-color-dialog"), tt(this.eWrapper, !0);
        var i = this.createBean(new Xv({ picker: this }));
        return i.addDestroyFunc(function() {
          o.isAlive() && e.destroyBean(o);
        }), o.setParentComponent(this), o.setBodyComponent(i), i.setValue(this.getValue()), o.addDestroyFunc(function() {
          e.isDestroyingPicker ? e.isDestroyingPicker = !1 : (e.isDestroyingPicker = !0, i.isAlive() && e.destroyBean(i)), e.isAlive() && (tt(e.eWrapper, !1), e.getFocusableElement().focus()), e.isPickerDisplayed = !1;
        }), o;
      }, t.prototype.setValue = function(e) {
        return this.value === e ? this : (this.eDisplayField.style.backgroundColor = e, n.prototype.setValue.call(this, e));
      }, t.prototype.getValue = function() {
        return this.value;
      }, t;
    }(yl)
  );
  var tm = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), rr = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, tp = (
    /** @class */
    function(n) {
      tm(t, n);
      function t(e) {
        e === void 0 && (e = {});
        var r = n.call(this, t.getTemplate(e)) || this;
        r.suppressEnabledCheckbox = !0, r.suppressOpenCloseIcons = !1;
        var o = e.title, i = e.enabled, s = e.items, a = e.suppressEnabledCheckbox, l = e.suppressOpenCloseIcons;
        return r.title = o, r.cssIdentifier = e.cssIdentifier || "default", r.enabled = i ?? !0, r.items = s || [], r.alignItems = e.alignItems || "center", a != null && (r.suppressEnabledCheckbox = a), l != null && (r.suppressOpenCloseIcons = l), r;
      }
      return t.getTemplate = function(e) {
        var r = e.cssIdentifier || "default", o = e.direction || "vertical";
        return (
          /* html */
          '<div class="ag-group ag-' + r + `-group" role="presentation">
            <div class="ag-group-title-bar ag-` + r + `-group-title-bar ag-unselectable" ref="eTitleBar" role="button">
                <span class="ag-group-title-bar-icon ag-` + r + `-group-title-bar-icon" ref="eGroupOpenedIcon" role="presentation"></span>
                <span class="ag-group-title-bar-icon ag-` + r + `-group-title-bar-icon" ref="eGroupClosedIcon" role="presentation"></span>
                <span ref="eTitle" class="ag-group-title ag-` + r + `-group-title"></span>
            </div>
            <div ref="eToolbar" class="ag-group-toolbar ag-` + r + `-group-toolbar">
                <ag-checkbox ref="cbGroupEnabled"></ag-checkbox>
            </div>
            <div ref="eContainer" class="ag-group-container ag-group-container-` + o + " ag-" + r + `-group-container"></div>
        </div>`
        );
      }, t.prototype.postConstruct = function() {
        if (this.items.length) {
          var e = this.items;
          this.items = [], this.addItems(e);
        }
        var r = this.gridOptionsWrapper.getLocaleTextFunc();
        this.cbGroupEnabled.setLabel(r("enabled", "Enabled")), this.title && this.setTitle(this.title), this.enabled && this.setEnabled(this.enabled), this.setAlignItems(this.alignItems), this.hideEnabledCheckbox(this.suppressEnabledCheckbox), this.hideOpenCloseIcons(this.suppressOpenCloseIcons), this.setupExpandContract(), this.refreshAriaStatus(), this.refreshChildDisplay();
      }, t.prototype.setupExpandContract = function() {
        var e = this;
        this.eGroupClosedIcon.appendChild(st("columnSelectClosed", this.gridOptionsWrapper, null)), this.eGroupOpenedIcon.appendChild(st("columnSelectOpen", this.gridOptionsWrapper, null)), this.addManagedListener(this.eTitleBar, "click", function() {
          return e.toggleGroupExpand();
        }), this.addManagedListener(this.eTitleBar, "keydown", function(r) {
          switch (r.key) {
            case N.ENTER:
            case N.SPACE:
              r.preventDefault(), e.toggleGroupExpand();
              break;
            case N.RIGHT:
            case N.LEFT:
              r.preventDefault(), e.toggleGroupExpand(r.key === N.RIGHT);
              break;
          }
        });
      }, t.prototype.refreshAriaStatus = function() {
        this.suppressOpenCloseIcons || tt(this.eTitleBar, this.expanded);
      }, t.prototype.refreshChildDisplay = function() {
        var e = !this.suppressOpenCloseIcons;
        Ee(this.eToolbar, this.expanded && !this.suppressEnabledCheckbox), Ee(this.eGroupOpenedIcon, e && this.expanded), Ee(this.eGroupClosedIcon, e && !this.expanded);
      }, t.prototype.isExpanded = function() {
        return this.expanded;
      }, t.prototype.setAlignItems = function(e) {
        this.alignItems !== e && this.removeCssClass("ag-group-item-alignment-" + this.alignItems), this.alignItems = e;
        var r = "ag-group-item-alignment-" + this.alignItems;
        return this.addCssClass(r), this;
      }, t.prototype.toggleGroupExpand = function(e) {
        return this.suppressOpenCloseIcons ? (this.expanded = !0, this.refreshChildDisplay(), Ee(this.eContainer, !0), this) : (e = e ?? !this.expanded, this.expanded === e ? this : (this.expanded = e, this.refreshAriaStatus(), this.refreshChildDisplay(), Ee(this.eContainer, e), this.dispatchEvent({ type: this.expanded ? t.EVENT_EXPANDED : t.EVENT_COLLAPSED }), this));
      }, t.prototype.addItems = function(e) {
        var r = this;
        e.forEach(function(o) {
          return r.addItem(o);
        });
      }, t.prototype.addItem = function(e) {
        var r = this.eContainer, o = e instanceof le ? e.getGui() : e;
        o.classList.add("ag-group-item", "ag-" + this.cssIdentifier + "-group-item"), r.appendChild(o), this.items.push(o);
      }, t.prototype.hideItem = function(e, r) {
        var o = this.items[r];
        o.classList.toggle("ag-hidden", e);
      }, t.prototype.setTitle = function(e) {
        return this.eTitle.innerText = e, this;
      }, t.prototype.addCssClassToTitleBar = function(e) {
        this.eTitleBar.classList.add(e);
      }, t.prototype.setEnabled = function(e, r) {
        return this.enabled = e, this.refreshDisabledStyles(), this.toggleGroupExpand(e), r || this.cbGroupEnabled.setValue(e), this;
      }, t.prototype.isEnabled = function() {
        return this.enabled;
      }, t.prototype.onEnableChange = function(e) {
        var r = this;
        return this.cbGroupEnabled.onValueChange(function(o) {
          r.setEnabled(o, !0), e(o);
        }), this;
      }, t.prototype.hideEnabledCheckbox = function(e) {
        return this.suppressEnabledCheckbox = e, this.refreshChildDisplay(), this.refreshDisabledStyles(), this;
      }, t.prototype.hideOpenCloseIcons = function(e) {
        return this.suppressOpenCloseIcons = e, e && this.toggleGroupExpand(!0), this;
      }, t.prototype.refreshDisabledStyles = function() {
        this.addOrRemoveCssClass("ag-disabled", !this.enabled), this.suppressEnabledCheckbox && !this.enabled ? (this.eTitleBar.classList.add("ag-disabled-group-title-bar"), this.eTitleBar.removeAttribute("tabindex")) : (this.eTitleBar.classList.remove("ag-disabled-group-title-bar"), this.eTitleBar.setAttribute("tabindex", "0")), this.eContainer.classList.toggle("ag-disabled-group-container", !this.enabled);
      }, t.EVENT_EXPANDED = "expanded", t.EVENT_COLLAPSED = "collapsed", rr([
        I("eTitleBar")
      ], t.prototype, "eTitleBar", void 0), rr([
        I("eGroupOpenedIcon")
      ], t.prototype, "eGroupOpenedIcon", void 0), rr([
        I("eGroupClosedIcon")
      ], t.prototype, "eGroupClosedIcon", void 0), rr([
        I("eToolbar")
      ], t.prototype, "eToolbar", void 0), rr([
        I("cbGroupEnabled")
      ], t.prototype, "cbGroupEnabled", void 0), rr([
        I("eTitle")
      ], t.prototype, "eTitle", void 0), rr([
        I("eContainer")
      ], t.prototype, "eContainer", void 0), rr([
        B
      ], t.prototype, "postConstruct", null), t;
    }(le)
  );
  var rm = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), rp = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, op = (
    /** @class */
    function(n) {
      rm(t, n);
      function t(e) {
        var r = n.call(this) || this;
        r.skipTabGuardFocus = !1;
        var o = e.comp, i = e.eTopGuard, s = e.eBottomGuard, a = e.focusInnerElement, l = e.onFocusIn, u = e.onFocusOut, p = e.shouldStopEventPropagation, d = e.onTabKeyDown, f = e.handleKeyDown, v = e.eFocusableElement;
        return r.comp = o, r.eTopGuard = i, r.eBottomGuard = s, r.providedFocusInnerElement = a, r.eFocusableElement = v, r.providedFocusIn = l, r.providedFocusOut = u, r.providedShouldStopEventPropagation = p, r.providedOnTabKeyDown = d, r.providedHandleKeyDown = f, r;
      }
      return t.prototype.postConstruct = function() {
        var e = this;
        this.createManagedBean(new kt(this.eFocusableElement, {
          shouldStopEventPropagation: function() {
            return e.shouldStopEventPropagation();
          },
          onTabKeyDown: function(r) {
            return e.onTabKeyDown(r);
          },
          handleKeyDown: function(r) {
            return e.handleKeyDown(r);
          },
          onFocusIn: function(r) {
            return e.onFocusIn(r);
          },
          onFocusOut: function(r) {
            return e.onFocusOut(r);
          }
        })), this.activateTabGuards(), [this.eTopGuard, this.eBottomGuard].forEach(function(r) {
          return e.addManagedListener(r, "focus", e.onFocus.bind(e));
        });
      }, t.prototype.handleKeyDown = function(e) {
        this.providedHandleKeyDown && this.providedHandleKeyDown(e);
      }, t.prototype.tabGuardsAreActive = function() {
        return !!this.eTopGuard && this.eTopGuard.hasAttribute("tabIndex");
      }, t.prototype.shouldStopEventPropagation = function() {
        return this.providedShouldStopEventPropagation ? this.providedShouldStopEventPropagation() : !1;
      }, t.prototype.activateTabGuards = function() {
        this.comp.setTabIndex(this.getGridTabIndex());
      }, t.prototype.deactivateTabGuards = function() {
        this.comp.setTabIndex();
      }, t.prototype.onFocus = function(e) {
        if (this.skipTabGuardFocus) {
          this.skipTabGuardFocus = !1;
          return;
        }
        var r = e.target === this.eBottomGuard;
        this.providedFocusInnerElement ? this.providedFocusInnerElement(r) : this.focusInnerElement(r);
      }, t.prototype.onFocusIn = function(e) {
        this.providedFocusIn && this.providedFocusIn(e) || this.deactivateTabGuards();
      }, t.prototype.onFocusOut = function(e) {
        this.providedFocusOut && this.providedFocusOut(e) || this.eFocusableElement.contains(e.relatedTarget) || this.activateTabGuards();
      }, t.prototype.onTabKeyDown = function(e) {
        var r = this;
        if (this.providedOnTabKeyDown) {
          this.providedOnTabKeyDown(e);
          return;
        }
        if (!e.defaultPrevented) {
          var o = this.tabGuardsAreActive();
          o && this.deactivateTabGuards();
          var i = this.getNextFocusableElement(e.shiftKey);
          o && setTimeout(function() {
            return r.activateTabGuards();
          }, 0), i && (i.focus(), e.preventDefault());
        }
      }, t.prototype.getGridTabIndex = function() {
        return this.gridOptionsWrapper.getGridTabIndex();
      }, t.prototype.focusInnerElement = function(e) {
        e === void 0 && (e = !1);
        var r = this.focusService.findFocusableElements(this.eFocusableElement);
        this.tabGuardsAreActive() && (r.splice(0, 1), r.splice(r.length - 1, 1)), r.length && r[e ? r.length - 1 : 0].focus();
      }, t.prototype.getNextFocusableElement = function(e) {
        return this.focusService.findNextFocusableElement(this.eFocusableElement, !1, e);
      }, t.prototype.forceFocusOutOfContainer = function(e) {
        e === void 0 && (e = !1);
        var r = e ? this.eTopGuard : this.eBottomGuard;
        this.activateTabGuards(), this.skipTabGuardFocus = !0, r.focus();
      }, rp([
        h("focusService")
      ], t.prototype, "focusService", void 0), rp([
        B
      ], t.prototype, "postConstruct", null), t;
    }(H)
  );
  var om = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), im = function(n, t) {
    var e = typeof Symbol == "function" && n[Symbol.iterator];
    if (!e) return n;
    var r = e.call(n), o, i = [], s;
    try {
      for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
    } catch (a) {
      s = { error: a };
    } finally {
      try {
        o && !o.done && (e = r.return) && e.call(r);
      } finally {
        if (s) throw s.error;
      }
    }
    return i;
  }, nm = function() {
    for (var n = [], t = 0; t < arguments.length; t++) n = n.concat(im(arguments[t]));
    return n;
  }, Yo = (
    /** @class */
    function(n) {
      om(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.initialiseTabGuard = function(e) {
        this.eTopGuard = this.createTabGuard("top"), this.eBottomGuard = this.createTabGuard("bottom"), this.eFocusableElement = this.getFocusableElement();
        var r = [this.eTopGuard, this.eBottomGuard], o = {
          setTabIndex: function(i) {
            r.forEach(function(s) {
              return i != null ? s.setAttribute("tabIndex", i) : s.removeAttribute("tabIndex");
            });
          }
        };
        this.addTabGuards(this.eTopGuard, this.eBottomGuard), this.tabGuardCtrl = this.createManagedBean(new op({
          comp: o,
          eTopGuard: this.eTopGuard,
          eBottomGuard: this.eBottomGuard,
          eFocusableElement: this.eFocusableElement,
          onFocusIn: e.onFocusIn,
          onFocusOut: e.onFocusOut,
          focusInnerElement: e.focusInnerElement,
          handleKeyDown: e.handleKeyDown,
          onTabKeyDown: e.onTabKeyDown,
          shouldStopEventPropagation: e.shouldStopEventPropagation
        }));
      }, t.prototype.createTabGuard = function(e) {
        var r = document.createElement("div");
        return r.classList.add("ag-tab-guard", "ag-tab-guard-" + e), ke(r, "presentation"), r;
      }, t.prototype.addTabGuards = function(e, r) {
        this.eFocusableElement.insertAdjacentElement("afterbegin", e), this.eFocusableElement.insertAdjacentElement("beforeend", r);
      }, t.prototype.removeAllChildrenExceptTabGuards = function() {
        var e = [this.eTopGuard, this.eBottomGuard];
        et(this.getFocusableElement()), this.addTabGuards.apply(this, nm(e));
      }, t.prototype.forceFocusOutOfContainer = function(e) {
        e === void 0 && (e = !1), this.tabGuardCtrl.forceFocusOutOfContainer(e);
      }, t.prototype.appendChild = function(e, r) {
        To(e) || (e = e.getGui());
        var o = this.eBottomGuard;
        o ? o.insertAdjacentElement("beforebegin", e) : n.prototype.appendChild.call(this, e, r);
      }, t;
    }(le)
  );
  var sm = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Zi = function() {
    return Zi = Object.assign || function(n) {
      for (var t, e = 1, r = arguments.length; e < r; e++) {
        t = arguments[e];
        for (var o in t) Object.prototype.hasOwnProperty.call(t, o) && (n[o] = t[o]);
      }
      return n;
    }, Zi.apply(this, arguments);
  }, ip = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, np = (
    /** @class */
    function(n) {
      sm(t, n);
      function t(e) {
        e === void 0 && (e = 1);
        var r = n.call(
          this,
          /* html */
          '<div class="ag-menu-list" role="tree"></div>'
        ) || this;
        return r.level = e, r.menuItems = [], r;
      }
      return t.prototype.postConstruct = function() {
        var e = this;
        this.initialiseTabGuard({
          onTabKeyDown: function(r) {
            return e.onTabKeyDown(r);
          },
          handleKeyDown: function(r) {
            return e.handleKeyDown(r);
          }
        });
      }, t.prototype.onTabKeyDown = function(e) {
        var r = this.getParentComponent(), o = r && r.getGui(), i = o && o.classList.contains("ag-focus-managed");
        i || e.preventDefault(), e.shiftKey && this.closeIfIsChild(e);
      }, t.prototype.handleKeyDown = function(e) {
        switch (e.key) {
          case N.UP:
          case N.RIGHT:
          case N.DOWN:
          case N.LEFT:
            e.preventDefault(), this.handleNavKey(e.key);
            break;
          case N.ESCAPE:
            var r = this.findTopMenu();
            r && this.focusService.focusInto(r.getGui());
            break;
        }
      }, t.prototype.clearActiveItem = function() {
        this.activeMenuItem && (this.activeMenuItem.deactivate(), this.activeMenuItem = null);
      }, t.prototype.addMenuItems = function(e) {
        var r = this;
        e?.forEach(function(o) {
          o === "separator" ? r.addSeparator() : typeof o == "string" ? console.warn("AG Grid: unrecognised menu item " + o) : r.addItem(o);
        });
      }, t.prototype.addItem = function(e) {
        var r = this, o = this.createManagedBean(new Qr(Zi(Zi({}, e), { isAnotherSubMenuOpen: function() {
          return r.menuItems.some(function(i) {
            return i.isSubMenuOpen();
          });
        } })));
        o.setParentComponent(this), qa(o.getGui(), this.level), this.menuItems.push(o), this.appendChild(o.getGui()), this.addManagedListener(o, Qr.EVENT_MENU_ITEM_SELECTED, function(i) {
          r.dispatchEvent(i);
        }), this.addManagedListener(o, Qr.EVENT_MENU_ITEM_ACTIVATED, function(i) {
          r.activeMenuItem && r.activeMenuItem !== i.menuItem && r.activeMenuItem.deactivate(), r.activeMenuItem = i.menuItem;
        });
      }, t.prototype.activateFirstItem = function() {
        var e = this.menuItems.filter(function(r) {
          return !r.isDisabled();
        })[0];
        e && e.activate();
      }, t.prototype.addSeparator = function() {
        var e = (
          /* html */
          `
            <div class="ag-menu-separator" aria-hidden="true">
                <div class="ag-menu-separator-part"></div>
                <div class="ag-menu-separator-part"></div>
                <div class="ag-menu-separator-part"></div>
                <div class="ag-menu-separator-part"></div>
            </div>`
        );
        this.appendChild(xe(e));
      }, t.prototype.findTopMenu = function() {
        var e = this.getParentComponent();
        if (!e && this instanceof t)
          return this;
        for (; ; ) {
          var r = e && e.getParentComponent && e.getParentComponent();
          if (!r || !(r instanceof t || r instanceof Qr))
            break;
          e = r;
        }
        return e instanceof t ? e : void 0;
      }, t.prototype.handleNavKey = function(e) {
        switch (e) {
          case N.UP:
          case N.DOWN:
            var r = this.findNextItem(e === N.UP);
            r && r !== this.activeMenuItem && r.activate();
            return;
        }
        var o = this.gridOptionsWrapper.isEnableRtl() ? N.RIGHT : N.LEFT;
        e === o ? this.closeIfIsChild() : this.openChild();
      }, t.prototype.closeIfIsChild = function(e) {
        var r = this.getParentComponent();
        r && r instanceof Qr && (e && e.preventDefault(), r.closeSubMenu(), r.getGui().focus());
      }, t.prototype.openChild = function() {
        this.activeMenuItem && this.activeMenuItem.openSubMenu(!0);
      }, t.prototype.findNextItem = function(e) {
        var r = this.menuItems.filter(function(l) {
          return !l.isDisabled();
        });
        if (r.length) {
          if (!this.activeMenuItem)
            return e ? M(r) : r[0];
          e && r.reverse();
          for (var o, i = !1, s = 0; s < r.length; s++) {
            var a = r[s];
            if (!i) {
              a === this.activeMenuItem && (i = !0);
              continue;
            }
            o = a;
            break;
          }
          return o || this.activeMenuItem;
        }
      }, t.prototype.destroy = function() {
        this.clearActiveItem(), n.prototype.destroy.call(this);
      }, ip([
        h("focusService")
      ], t.prototype, "focusService", void 0), ip([
        B
      ], t.prototype, "postConstruct", null), t;
    }(Yo)
  );
  var am = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), lm = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, sp = (
    /** @class */
    function(n) {
      am(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return r.wrappedComponent = e, r.setTemplateFromElement(e.getGui()), r;
      }
      return t.prototype.postConstruct = function() {
        var e = this;
        this.initialiseTabGuard({
          onTabKeyDown: function(r) {
            return e.onTabKeyDown(r);
          },
          handleKeyDown: function(r) {
            return e.handleKeyDown(r);
          }
        });
      }, t.prototype.handleKeyDown = function(e) {
        e.key === N.ESCAPE && this.closePanel();
      }, t.prototype.onTabKeyDown = function(e) {
        e.defaultPrevented || (this.closePanel(), e.preventDefault());
      }, t.prototype.closePanel = function() {
        var e = this.parentComponent;
        e.closeSubMenu(), setTimeout(function() {
          return e.getGui().focus();
        }, 0);
      }, lm([
        B
      ], t.prototype, "postConstruct", null), t;
    }(Yo)
  );
  var um = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), ap = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Qr = (
    /** @class */
    function(n) {
      um(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return r.params = e, r.isActive = !1, r.subMenuIsOpen = !1, r.setTemplate(
          /* html */
          '<div class="' + r.getClassName() + '" tabindex="-1" role="treeitem"></div>'
        ), r;
      }
      return t.prototype.init = function() {
        var e = this;
        this.addIcon(), this.addName(), this.addShortcut(), this.addSubMenu(), this.addTooltip();
        var r = this.getGui();
        this.params.disabled ? (this.addCssClass(this.getClassName("disabled")), Zn(r, !0)) : (this.addGuiEventListener("click", function(o) {
          return e.onItemSelected(o);
        }), this.addGuiEventListener("keydown", function(o) {
          (o.key === N.ENTER || o.key === N.SPACE) && (o.preventDefault(), e.onItemSelected(o));
        }), this.addGuiEventListener("mousedown", function(o) {
          o.stopPropagation(), o.preventDefault();
        }), this.addGuiEventListener("mouseenter", function() {
          return e.onMouseEnter();
        }), this.addGuiEventListener("mouseleave", function() {
          return e.onMouseLeave();
        })), this.params.cssClasses && this.params.cssClasses.forEach(function(o) {
          return e.addCssClass(o);
        });
      }, t.prototype.isDisabled = function() {
        return !!this.params.disabled;
      }, t.prototype.openSubMenu = function(e) {
        var r = this;
        if (e === void 0 && (e = !1), this.closeSubMenu(), !!this.params.subMenu) {
          var o = xe(
            /* html */
            '<div class="ag-menu" role="presentation"></div>'
          ), i;
          if (this.params.subMenu instanceof Array) {
            var s = $a(this.getGui()), a = isNaN(s) ? 1 : s + 1, l = this.createBean(new np(a));
            l.setParentComponent(this), l.addMenuItems(this.params.subMenu), o.appendChild(l.getGui()), this.addManagedListener(l, t.EVENT_MENU_ITEM_SELECTED, function(P) {
              return r.dispatchEvent(P);
            }), l.addGuiEventListener("mouseenter", function() {
              return r.cancelDeactivate();
            }), i = function() {
              return r.destroyBean(l);
            }, e && setTimeout(function() {
              return l.activateFirstItem();
            }, 0);
          } else {
            var u = this.params.subMenu, p = this.createBean(new sp(u));
            p.setParentComponent(this);
            var d = p.getGui(), f = "mouseenter", v = function() {
              return r.cancelDeactivate();
            };
            d.addEventListener(f, v), i = function() {
              return d.removeEventListener(f, v);
            }, o.appendChild(d), u.afterGuiAttached && setTimeout(function() {
              return u.afterGuiAttached();
            }, 0);
          }
          var y = this.getGui(), R = this.popupService.positionPopupForMenu.bind(this.popupService, { eventSource: y, ePopup: o }), _ = this.gridOptionsWrapper.getLocaleTextFunc(), D = this.popupService.addPopup({
            modal: !0,
            eChild: o,
            positionCallback: R,
            anchorToElement: y,
            ariaLabel: _("ariaLabelSubMenu", "SubMenu")
          });
          this.subMenuIsOpen = !0, tt(y, !0), this.hideSubMenu = function() {
            D && D.hideFunc(), r.subMenuIsOpen = !1, tt(y, !1), i();
          };
        }
      }, t.prototype.closeSubMenu = function() {
        this.hideSubMenu && (this.hideSubMenu(), this.hideSubMenu = null, tt(this.getGui(), !1));
      }, t.prototype.isSubMenuOpen = function() {
        return this.subMenuIsOpen;
      }, t.prototype.activate = function(e) {
        var r = this;
        this.cancelActivate(), !this.params.disabled && (this.isActive = !0, this.addCssClass(this.getClassName("active")), this.getGui().focus(), e && this.params.subMenu && window.setTimeout(function() {
          r.isAlive() && r.isActive && r.openSubMenu();
        }, 300), this.onItemActivated());
      }, t.prototype.deactivate = function() {
        this.cancelDeactivate(), this.removeCssClass(this.getClassName("active")), this.isActive = !1, this.subMenuIsOpen && this.hideSubMenu();
      }, t.prototype.addIcon = function() {
        if (!(!this.params.checked && !this.params.icon && this.params.isCompact)) {
          var e = xe(
            /* html */
            '<span ref="eIcon" class="' + this.getClassName("part") + " " + this.getClassName("icon") + '" role="presentation"></span>'
          );
          this.params.checked ? e.appendChild(be("check", this.gridOptionsWrapper)) : this.params.icon && (To(this.params.icon) ? e.appendChild(this.params.icon) : typeof this.params.icon == "string" ? e.innerHTML = this.params.icon : console.warn("AG Grid: menu item icon must be DOM node or string")), this.getGui().appendChild(e);
        }
      }, t.prototype.addName = function() {
        if (!(!this.params.name && this.params.isCompact)) {
          var e = xe(
            /* html */
            '<span ref="eName" class="' + this.getClassName("part") + " " + this.getClassName("text") + '">' + (this.params.name || "") + "</span>"
          );
          this.getGui().appendChild(e);
        }
      }, t.prototype.addTooltip = function() {
        this.params.tooltip && (this.tooltip = this.params.tooltip, this.gridOptionsWrapper.isEnableBrowserTooltips() ? this.getGui().setAttribute("title", this.tooltip) : this.createManagedBean(new _i(this)));
      }, t.prototype.getTooltipParams = function() {
        return {
          location: "menu",
          value: this.tooltip
        };
      }, t.prototype.addShortcut = function() {
        if (!(!this.params.shortcut && this.params.isCompact)) {
          var e = xe(
            /* html */
            '<span ref="eShortcut" class="' + this.getClassName("part") + " " + this.getClassName("shortcut") + '">' + (this.params.shortcut || "") + "</span>"
          );
          this.getGui().appendChild(e);
        }
      }, t.prototype.addSubMenu = function() {
        if (!(!this.params.subMenu && this.params.isCompact)) {
          var e = xe(
            /* html */
            '<span ref="ePopupPointer" class="' + this.getClassName("part") + " " + this.getClassName("popup-pointer") + '"></span>'
          ), r = this.getGui();
          if (this.params.subMenu) {
            var o = this.gridOptionsWrapper.isEnableRtl() ? "smallLeft" : "smallRight";
            tt(r, !1), e.appendChild(be(o, this.gridOptionsWrapper));
          }
          r.appendChild(e);
        }
      }, t.prototype.onItemSelected = function(e) {
        if (this.params.action ? this.params.action() : this.openSubMenu(e && e.type === "keydown"), !(this.params.subMenu && !this.params.action)) {
          var r = {
            type: t.EVENT_MENU_ITEM_SELECTED,
            action: this.params.action,
            checked: this.params.checked,
            cssClasses: this.params.cssClasses,
            disabled: this.params.disabled,
            icon: this.params.icon,
            name: this.params.name,
            shortcut: this.params.shortcut,
            subMenu: this.params.subMenu,
            tooltip: this.params.tooltip,
            event: e
          };
          this.dispatchEvent(r);
        }
      }, t.prototype.onItemActivated = function() {
        var e = {
          type: t.EVENT_MENU_ITEM_ACTIVATED,
          menuItem: this
        };
        this.dispatchEvent(e);
      }, t.prototype.cancelActivate = function() {
        this.activateTimeoutId && (window.clearTimeout(this.activateTimeoutId), this.activateTimeoutId = 0);
      }, t.prototype.cancelDeactivate = function() {
        this.deactivateTimeoutId && (window.clearTimeout(this.deactivateTimeoutId), this.deactivateTimeoutId = 0);
      }, t.prototype.onMouseEnter = function() {
        var e = this;
        this.cancelDeactivate(), this.params.isAnotherSubMenuOpen() ? this.activateTimeoutId = window.setTimeout(function() {
          return e.activate(!0);
        }, t.ACTIVATION_DELAY) : this.activate(!0);
      }, t.prototype.onMouseLeave = function() {
        var e = this;
        this.cancelActivate(), this.isSubMenuOpen() ? this.deactivateTimeoutId = window.setTimeout(function() {
          return e.deactivate();
        }, t.ACTIVATION_DELAY) : this.deactivate();
      }, t.prototype.getClassName = function(e) {
        var r = this.params.isCompact ? "ag-compact-menu-option" : "ag-menu-option";
        return e ? r + "-" + e : r;
      }, t.EVENT_MENU_ITEM_SELECTED = "menuItemSelected", t.EVENT_MENU_ITEM_ACTIVATED = "menuItemActivated", t.ACTIVATION_DELAY = 80, ap([
        h("popupService")
      ], t.prototype, "popupService", void 0), ap([
        B
      ], t.prototype, "init", null), t;
    }(le)
  );
  var pm = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), pt = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, cm = function(n, t) {
    var e = typeof Symbol == "function" && n[Symbol.iterator];
    if (!e) return n;
    var r = e.call(n), o, i = [], s;
    try {
      for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
    } catch (a) {
      s = { error: a };
    } finally {
      try {
        o && !o.done && (e = r.return) && e.call(r);
      } finally {
        if (s) throw s.error;
      }
    }
    return i;
  }, dm = function() {
    for (var n = [], t = 0; t < arguments.length; t++) n = n.concat(cm(arguments[t]));
    return n;
  }, Zr = (
    /** @class */
    function(n) {
      pm(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      e = t, t.addKeyboardModeEvents = function(r, o) {
        var i = e.instancesMonitored.get(r);
        i && i.length > 0 ? i.indexOf(o) === -1 && i.push(o) : (e.instancesMonitored.set(r, [o]), r.addEventListener("keydown", e.toggleKeyboardMode), r.addEventListener("mousedown", e.toggleKeyboardMode));
      }, t.removeKeyboardModeEvents = function(r, o) {
        var i = e.instancesMonitored.get(r), s = [];
        i && i.length && (s = dm(i).filter(function(a) {
          return a !== o;
        }), e.instancesMonitored.set(r, s)), s.length === 0 && (r.removeEventListener("keydown", e.toggleKeyboardMode), r.removeEventListener("mousedown", e.toggleKeyboardMode));
      }, t.toggleKeyboardMode = function(r) {
        var o = e.keyboardModeActive, i = r.type === "keydown";
        if (!(i && (r.ctrlKey || r.metaKey || r.altKey)) && !(o && i || !o && !i)) {
          e.keyboardModeActive = i;
          var s = r.target.ownerDocument;
          if (s) {
            var a = e.instancesMonitored.get(s);
            a && a.forEach(function(l) {
              l.dispatchEvent({ type: i ? m.EVENT_KEYBOARD_FOCUS : m.EVENT_MOUSE_FOCUS });
            });
          }
        }
      }, t.prototype.init = function() {
        var r = this, o = this.clearFocusedCell.bind(this);
        this.addManagedListener(this.eventService, m.EVENT_COLUMN_PIVOT_MODE_CHANGED, o), this.addManagedListener(this.eventService, m.EVENT_NEW_COLUMNS_LOADED, this.onColumnEverythingChanged.bind(this)), this.addManagedListener(this.eventService, m.EVENT_COLUMN_GROUP_OPENED, o), this.addManagedListener(this.eventService, m.EVENT_COLUMN_ROW_GROUP_CHANGED, o), this.ctrlsService.whenReady(function(i) {
          r.gridCtrl = i.gridCtrl;
          var s = r.gridOptionsWrapper.getDocument();
          e.addKeyboardModeEvents(s, r.gridCtrl), r.addDestroyFunc(function() {
            return r.unregisterGridCompController(r.gridCtrl);
          });
        });
      }, t.prototype.unregisterGridCompController = function(r) {
        var o = this.gridOptionsWrapper.getDocument();
        e.removeKeyboardModeEvents(o, r);
      }, t.prototype.onColumnEverythingChanged = function() {
        if (this.focusedCellPosition) {
          var r = this.focusedCellPosition.column, o = this.columnModel.getGridColumn(r.getId());
          r !== o && this.clearFocusedCell();
        }
      }, t.prototype.isKeyboardMode = function() {
        return e.keyboardModeActive;
      }, t.prototype.getFocusCellToUseAfterRefresh = function() {
        var r = this.gridOptionsWrapper.getDocument();
        return this.gridOptionsWrapper.isSuppressFocusAfterRefresh() || !this.focusedCellPosition || this.isDomDataMissingInHierarchy(r.activeElement, tr.DOM_DATA_KEY_ROW_CTRL) ? null : this.focusedCellPosition;
      }, t.prototype.getFocusHeaderToUseAfterRefresh = function() {
        var r = this.gridOptionsWrapper.getDocument();
        return this.gridOptionsWrapper.isSuppressFocusAfterRefresh() || !this.focusedHeaderPosition || this.isDomDataMissingInHierarchy(r.activeElement, Wo.DOM_DATA_KEY_HEADER_CTRL) ? null : this.focusedHeaderPosition;
      }, t.prototype.isDomDataMissingInHierarchy = function(r, o) {
        for (var i = r; i; ) {
          var s = this.gridOptionsWrapper.getDomData(i, o);
          if (s)
            return !1;
          i = i.parentNode;
        }
        return !0;
      }, t.prototype.clearFocusedCell = function() {
        this.focusedCellPosition = null, this.onCellFocused(!1);
      }, t.prototype.getFocusedCell = function() {
        return this.focusedCellPosition;
      }, t.prototype.setFocusedCell = function(r, o, i, s) {
        s === void 0 && (s = !1);
        var a = this.columnModel.getGridColumn(o);
        if (!a) {
          this.focusedCellPosition = null;
          return;
        }
        this.focusedCellPosition = a ? { rowIndex: r, rowPinned: w(i), column: a } : null, this.onCellFocused(s);
      }, t.prototype.isCellFocused = function(r) {
        return this.focusedCellPosition == null ? !1 : this.focusedCellPosition.column === r.column && this.isRowFocused(r.rowIndex, r.rowPinned);
      }, t.prototype.isRowNodeFocused = function(r) {
        return this.isRowFocused(r.rowIndex, r.rowPinned);
      }, t.prototype.isHeaderWrapperFocused = function(r) {
        if (this.focusedHeaderPosition == null)
          return !1;
        var o = r.getColumnGroupChild(), i = r.getRowIndex(), s = r.getPinned(), a = this.focusedHeaderPosition, l = a.column, u = a.headerRowIndex;
        return o === l && i === u && s == l.getPinned();
      }, t.prototype.clearFocusedHeader = function() {
        this.focusedHeaderPosition = null;
      }, t.prototype.getFocusedHeader = function() {
        return this.focusedHeaderPosition;
      }, t.prototype.setFocusedHeader = function(r, o) {
        this.focusedHeaderPosition = { headerRowIndex: r, column: o };
      }, t.prototype.focusHeaderPosition = function(r) {
        var o = r.direction, i = r.fromTab, s = r.allowUserOverride, a = r.event, l = r.headerPosition;
        if (s) {
          var u = this.gridOptionsWrapper, p = this.getFocusedHeader(), d = this.headerNavigationService.getHeaderRowCount();
          if (i) {
            var f = u.getTabToNextHeaderFunc();
            if (f) {
              var v = {
                backwards: o === "Before",
                previousHeaderPosition: p,
                nextHeaderPosition: l,
                headerRowCount: d
              };
              l = f(v);
            }
          } else {
            var f = u.getNavigateToNextHeaderFunc();
            if (f && a) {
              var y = {
                key: a.key,
                previousHeaderPosition: p,
                nextHeaderPosition: l,
                headerRowCount: d,
                event: a
              };
              l = f(y);
            }
          }
        }
        if (!l)
          return !1;
        if (l.headerRowIndex === -1)
          return this.focusGridView(l.column);
        this.headerNavigationService.scrollToColumn(l.column, o);
        var R = this.ctrlsService.getHeaderRowContainerCtrl(l.column.getPinned()), _ = R.focusHeader(l.headerRowIndex, l.column, a);
        return _;
      }, t.prototype.focusFirstHeader = function() {
        var r = this.columnModel.getAllDisplayedColumns()[0];
        return r ? (r.getParent() && (r = this.columnModel.getColumnGroupAtLevel(r, 0)), this.focusHeaderPosition({
          headerPosition: { headerRowIndex: 0, column: r }
        })) : !1;
      }, t.prototype.focusLastHeader = function(r) {
        var o = this.headerNavigationService.getHeaderRowCount() - 1, i = M(this.columnModel.getAllDisplayedColumns());
        return this.focusHeaderPosition({
          headerPosition: { headerRowIndex: o, column: i },
          event: r
        });
      }, t.prototype.isAnyCellFocused = function() {
        return !!this.focusedCellPosition;
      }, t.prototype.isRowFocused = function(r, o) {
        return this.focusedCellPosition == null ? !1 : this.focusedCellPosition.rowIndex === r && this.focusedCellPosition.rowPinned === w(o);
      }, t.prototype.findFocusableElements = function(r, o, i) {
        i === void 0 && (i = !1);
        var s = E.FOCUSABLE_SELECTOR, a = E.FOCUSABLE_EXCLUDE;
        o && (a += ", " + o), i && (a += ', [tabindex="-1"]');
        var l = Array.prototype.slice.apply(r.querySelectorAll(s)), u = Array.prototype.slice.apply(r.querySelectorAll(a));
        if (!u.length)
          return l;
        var p = function(d, f) {
          return d.filter(function(v) {
            return f.indexOf(v) === -1;
          });
        };
        return p(l, u);
      }, t.prototype.focusInto = function(r, o, i) {
        o === void 0 && (o = !1), i === void 0 && (i = !1);
        var s = this.findFocusableElements(r, null, i), a = o ? M(s) : s[0];
        return a ? (a.focus(), !0) : !1;
      }, t.prototype.findNextFocusableElement = function(r, o, i) {
        r === void 0 && (r = this.eGridDiv);
        var s = this.findFocusableElements(r, o ? ':not([tabindex="-1"])' : null), a = this.gridOptionsWrapper.getDocument(), l = a.activeElement, u;
        o ? u = s.findIndex(function(d) {
          return d.contains(l);
        }) : u = s.indexOf(l);
        var p = u + (i ? -1 : 1);
        return p < 0 || p >= s.length ? null : s[p];
      }, t.prototype.isFocusUnderManagedComponent = function(r) {
        var o = this.gridOptionsWrapper.getDocument(), i = r.querySelectorAll("." + kt.FOCUS_MANAGED_CLASS);
        if (!i.length)
          return !1;
        for (var s = 0; s < i.length; s++)
          if (i[s].contains(o.activeElement))
            return !0;
        return !1;
      }, t.prototype.findTabbableParent = function(r, o) {
        o === void 0 && (o = 5);
        for (var i = 0; r && vi(r) === null && ++i <= o; )
          r = r.parentElement;
        return vi(r) === null ? null : r;
      }, t.prototype.onCellFocused = function(r) {
        var o = {
          type: m.EVENT_CELL_FOCUSED,
          forceBrowserFocus: r,
          rowIndex: null,
          column: null,
          floating: null,
          api: this.gridApi,
          columnApi: this.columnApi,
          rowPinned: null,
          isFullWidthCell: !1
        };
        if (this.focusedCellPosition) {
          var i = o.rowIndex = this.focusedCellPosition.rowIndex, s = o.rowPinned = this.focusedCellPosition.rowPinned;
          o.column = this.focusedCellPosition.column;
          var a = this.rowRenderer.getRowByPosition({ rowIndex: i, rowPinned: s });
          a && (o.isFullWidthCell = a.isFullWidth());
        }
        this.eventService.dispatchEvent(o);
      }, t.prototype.focusGridView = function(r, o) {
        if (this.gridOptionsWrapper.isSuppressCellFocus())
          return o ? this.focusLastHeader() : this.focusNextGridCoreContainer(!1);
        var i = o ? this.rowPositionUtils.getLastRow() : this.rowPositionUtils.getFirstRow();
        if (!i)
          return !1;
        var s = i.rowIndex, a = i.rowPinned, l = this.getFocusedHeader();
        if (!r && l && (r = l.column), s == null || !r)
          return !1;
        if (this.navigationService.ensureCellVisible({ rowIndex: s, column: r, rowPinned: a }), this.setFocusedCell(s, r, w(a), !0), this.rangeService) {
          var u = { rowIndex: s, rowPinned: a, column: r };
          this.rangeService.setRangeToCell(u);
        }
        return !0;
      }, t.prototype.focusNextGridCoreContainer = function(r) {
        return this.gridCtrl.focusNextInnerContainer(r) ? !0 : (!r && !this.gridCtrl.isDetailGrid() && this.gridCtrl.forceFocusOutOfContainer(), !1);
      };
      var e;
      return t.AG_KEYBOARD_FOCUS = "ag-keyboard-focus", t.keyboardModeActive = !1, t.instancesMonitored = /* @__PURE__ */ new Map(), pt([
        h("eGridDiv")
      ], t.prototype, "eGridDiv", void 0), pt([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), pt([
        h("headerNavigationService")
      ], t.prototype, "headerNavigationService", void 0), pt([
        h("columnApi")
      ], t.prototype, "columnApi", void 0), pt([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), pt([
        h("rowRenderer")
      ], t.prototype, "rowRenderer", void 0), pt([
        h("rowPositionUtils")
      ], t.prototype, "rowPositionUtils", void 0), pt([
        ve("rangeService")
      ], t.prototype, "rangeService", void 0), pt([
        h("navigationService")
      ], t.prototype, "navigationService", void 0), pt([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), pt([
        B
      ], t.prototype, "init", null), t = e = pt([
        j("focusService")
      ], t), t;
    }(H)
  );
  var hm = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), qo = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, or;
  (function(n) {
    n[n.vertical = 0] = "vertical", n[n.horizontal = 1] = "horizontal";
  })(or || (or = {}));
  var fm = 0, lp = (
    /** @class */
    function(n) {
      hm(t, n);
      function t() {
        var e = n !== null && n.apply(this, arguments) || this;
        return e.popupList = [], e;
      }
      return t.prototype.postConstruct = function() {
        var e = this;
        this.ctrlsService.whenReady(function(r) {
          e.gridCtrl = r.gridCtrl, e.addManagedListener(e.gridCtrl, m.EVENT_KEYBOARD_FOCUS, function() {
            e.popupList.forEach(function(o) {
              return o.element.classList.add(Zr.AG_KEYBOARD_FOCUS);
            });
          }), e.addManagedListener(e.gridCtrl, m.EVENT_MOUSE_FOCUS, function() {
            e.popupList.forEach(function(o) {
              return o.element.classList.remove(Zr.AG_KEYBOARD_FOCUS);
            });
          });
        });
      }, t.prototype.getPopupParent = function() {
        var e = this.gridOptionsWrapper.getPopupParent();
        return e || this.gridCtrl.getGui();
      }, t.prototype.positionPopupForMenu = function(e) {
        var r = e.eventSource.getBoundingClientRect(), o = this.getParentRect(), i = this.keepXYWithinBounds(e.ePopup, r.top - o.top, or.vertical), s = e.ePopup.clientWidth > 0 ? e.ePopup.clientWidth : 200;
        e.ePopup.style.minWidth = s + "px";
        var a = o.right - o.left, l = a - s, u;
        this.gridOptionsWrapper.isEnableRtl() ? (u = d(), u < 0 && (u = p()), u > l && (u = 0)) : (u = p(), u > l && (u = d()), u < 0 && (u = 0)), e.ePopup.style.left = u + "px", e.ePopup.style.top = i + "px";
        function p() {
          return r.right - o.left - 2;
        }
        function d() {
          return r.left - o.left - s;
        }
      }, t.prototype.positionPopupUnderMouseEvent = function(e) {
        var r = e.ePopup, o = e.nudgeX, i = e.nudgeY, s = this.calculatePointerAlign(e.mouseEvent), a = s.x, l = s.y;
        this.positionPopup({
          ePopup: r,
          x: a,
          y: l,
          nudgeX: o,
          nudgeY: i,
          keepWithinBounds: !0
        }), this.callPostProcessPopup(e.type, e.ePopup, null, e.mouseEvent, e.column, e.rowNode);
      }, t.prototype.calculatePointerAlign = function(e) {
        var r = this.getParentRect();
        return {
          x: e.clientX - r.left,
          y: e.clientY - r.top
        };
      }, t.prototype.positionPopupUnderComponent = function(e) {
        var r = e.eventSource.getBoundingClientRect(), o = e.alignSide || "left", i = this.getParentRect(), s = r.left - i.left;
        o === "right" && (s -= e.ePopup.offsetWidth - r.width), this.positionPopup({
          ePopup: e.ePopup,
          nudgeX: e.nudgeX,
          nudgeY: e.nudgeY,
          x: s,
          y: r.top - i.top + r.height,
          keepWithinBounds: e.keepWithinBounds
        }), this.callPostProcessPopup(e.type, e.ePopup, e.eventSource, null, e.column, e.rowNode);
      }, t.prototype.positionPopupOverComponent = function(e) {
        var r = e.eventSource.getBoundingClientRect(), o = this.getParentRect();
        this.positionPopup({
          ePopup: e.ePopup,
          nudgeX: e.nudgeX,
          nudgeY: e.nudgeY,
          x: r.left - o.left,
          y: r.top - o.top,
          keepWithinBounds: e.keepWithinBounds
        }), this.callPostProcessPopup(e.type, e.ePopup, e.eventSource, null, e.column, e.rowNode);
      }, t.prototype.callPostProcessPopup = function(e, r, o, i, s, a) {
        var l = this.gridOptionsWrapper.getPostProcessPopupFunc();
        if (l) {
          var u = {
            column: s,
            rowNode: a,
            ePopup: r,
            type: e,
            eventSource: o,
            mouseEvent: i
          };
          l(u);
        }
      }, t.prototype.positionPopup = function(e) {
        var r = e.ePopup, o = e.keepWithinBounds, i = e.nudgeX, s = e.nudgeY, a = e.x, l = e.y;
        i && (a += i), s && (l += s), o && (a = this.keepXYWithinBounds(r, a, or.horizontal), l = this.keepXYWithinBounds(r, l, or.vertical)), r.style.left = a + "px", r.style.top = l + "px";
      }, t.prototype.getActivePopups = function() {
        return this.popupList.map(function(e) {
          return e.element;
        });
      }, t.prototype.getPopupList = function() {
        return this.popupList;
      }, t.prototype.getParentRect = function() {
        var e = this.gridOptionsWrapper.getDocument(), r = this.getPopupParent();
        r === e.body && (r = e.documentElement);
        var o = getComputedStyle(r), i = r.getBoundingClientRect();
        return {
          top: i.top + parseFloat(o.borderTopWidth) || 0,
          left: i.left + parseFloat(o.borderLeftWidth) || 0,
          right: i.right + parseFloat(o.borderRightWidth) || 0,
          bottom: i.bottom + parseFloat(o.borderBottomWidth) || 0
        };
      }, t.prototype.keepXYWithinBounds = function(e, r, o) {
        var i = o === or.vertical, s = i ? "clientHeight" : "clientWidth", a = i ? "top" : "left", l = i ? "offsetHeight" : "offsetWidth", u = i ? "scrollTop" : "scrollLeft", p = this.gridOptionsWrapper.getDocument(), d = p.documentElement, f = this.getPopupParent(), v = f.getBoundingClientRect(), y = p.documentElement.getBoundingClientRect(), R = f === p.body, _ = e[l], D = i ? Bn : wi, P = R ? D(d) + d[u] : f[s];
        R && (P -= Math.abs(y[a] - v[a]));
        var F = P - _;
        return Math.min(Math.max(r, 0), Math.abs(F));
      }, t.prototype.keepPopupPositionedRelativeTo = function(e) {
        var r = this, o = this.getPopupParent(), i = o.getBoundingClientRect(), s = e.element.getBoundingClientRect(), a = i.top - s.top, l = i.left - s.left, u = a, p = l, d = e.ePopup.style.top, f = parseInt(d.substring(0, d.length - 1), 10), v = e.ePopup.style.left, y = parseInt(v.substring(0, v.length - 1), 10);
        return new Qe(function(R) {
          r.getFrameworkOverrides().setInterval(function() {
            var _ = o.getBoundingClientRect(), D = e.element.getBoundingClientRect(), P = D.top == 0 && D.left == 0 && D.height == 0 && D.width == 0;
            if (P) {
              e.hidePopup();
              return;
            }
            var F = _.top - D.top;
            if (F != u) {
              var U = r.keepXYWithinBounds(e.ePopup, f + a - F, or.vertical);
              e.ePopup.style.top = U + "px";
            }
            u = F;
            var X = _.left - D.left;
            if (X != p) {
              var ce = r.keepXYWithinBounds(e.ePopup, y + l - X, or.horizontal);
              e.ePopup.style.left = ce + "px";
            }
            p = X;
          }, 200).then(function(_) {
            var D = function() {
              _ != null && window.clearInterval(_);
            };
            R(D);
          });
        });
      }, t.prototype.addPopup = function(e) {
        var r = this, o = e.modal, i = e.eChild, s = e.closeOnEsc, a = e.closedCallback, l = e.click, u = e.alwaysOnTop, p = e.afterGuiAttached, d = e.positionCallback, f = e.anchorToElement, v = e.ariaLabel, y = this.gridOptionsWrapper.getDocument(), R = new Qe(function(ge) {
          return ge(function() {
          });
        });
        if (!y)
          return console.warn("ag-grid: could not find the document, document is empty"), { hideFunc: function() {
          }, stopAnchoringPromise: R };
        var _ = this.popupList.findIndex(function(ge) {
          return ge.element === i;
        });
        if (_ !== -1) {
          var D = this.popupList[_];
          return { hideFunc: D.hideFunc, stopAnchoringPromise: D.stopAnchoringPromise };
        }
        var P = this.getPopupParent();
        i.style.top == null && (i.style.top = "0px"), i.style.left == null && (i.style.left = "0px");
        var F = document.createElement("div"), U = this.environment.getTheme().theme;
        U && F.classList.add(U), F.classList.add("ag-popup"), i.classList.add(this.gridOptionsWrapper.isEnableRtl() ? "ag-rtl" : "ag-ltr", "ag-popup-child"), i.hasAttribute("role") || ke(i, "dialog"), fr(i, v), this.focusService.isKeyboardMode() && i.classList.add(Zr.AG_KEYBOARD_FOCUS), F.appendChild(i), P.appendChild(F), u ? this.setAlwaysOnTop(F, !0) : this.bringPopupToFront(F);
        var X = !1, ce = function(ge) {
          if (F.contains(y.activeElement)) {
            var Pe = ge.key;
            Pe === N.ESCAPE && fe({ keyboardEvent: ge });
          }
        }, de = function(ge) {
          return fe({ mouseEvent: ge });
        }, J = function(ge) {
          return fe({ touchEvent: ge });
        }, fe = function(ge) {
          ge === void 0 && (ge = {});
          var Pe = ge.mouseEvent, Te = ge.touchEvent, mt = ge.keyboardEvent;
          // we don't hide popup if the event was on the child, or any
          // children of this child
          r.isEventFromCurrentPopup({ mouseEvent: Pe, touchEvent: Te }, i) || // if the event to close is actually the open event, then ignore it
          r.isEventSameChainAsOriginalEvent({ originalMouseEvent: l, mouseEvent: Pe, touchEvent: Te }) || // this method should only be called once. the client can have different
          // paths, each one wanting to close, so this method may be called multiple times.
          X || (X = !0, P.removeChild(F), y.removeEventListener("keydown", ce), y.removeEventListener("mousedown", de), y.removeEventListener("touchstart", J), y.removeEventListener("contextmenu", de), r.eventService.removeEventListener(m.EVENT_DRAG_STARTED, de), a && a(Pe || Te || mt), r.popupList = r.popupList.filter(function(yt) {
            return yt.element !== i;
          }), R && R.then(function(yt) {
            return yt && yt();
          }));
        };
        return p && p({ hidePopup: fe }), window.setTimeout(function() {
          s && y.addEventListener("keydown", ce), o && (y.addEventListener("mousedown", de), r.eventService.addEventListener(m.EVENT_DRAG_STARTED, de), y.addEventListener("touchstart", J), y.addEventListener("contextmenu", de));
        }, 0), d && d(), f && (R = this.keepPopupPositionedRelativeTo({
          element: f,
          ePopup: i,
          hidePopup: fe
        })), this.popupList.push({
          element: i,
          wrapper: F,
          hideFunc: fe,
          stopAnchoringPromise: R,
          instanceId: fm++,
          isAnchored: !!f
        }), {
          hideFunc: fe,
          stopAnchoringPromise: R
        };
      }, t.prototype.hasAnchoredPopup = function() {
        return this.popupList.some(function(e) {
          return e.isAnchored;
        });
      }, t.prototype.isEventFromCurrentPopup = function(e, r) {
        var o = e.mouseEvent, i = e.touchEvent, s = o || i;
        if (!s)
          return !1;
        var a = this.popupList.findIndex(function(p) {
          return p.element === r;
        });
        if (a === -1)
          return !1;
        for (var l = a; l < this.popupList.length; l++) {
          var u = this.popupList[l];
          if (fi(u.element, s))
            return !0;
        }
        return this.isElementWithinCustomPopup(s.target);
      }, t.prototype.isElementWithinCustomPopup = function(e) {
        for (var r = this.gridOptionsWrapper.getDocument(); e && e !== r.body; ) {
          if (e.classList.contains("ag-custom-component-popup") || e.parentElement === null)
            return !0;
          e = e.parentElement;
        }
        return !1;
      }, t.prototype.isEventSameChainAsOriginalEvent = function(e) {
        var r = e.originalMouseEvent, o = e.mouseEvent, i = e.touchEvent, s = null;
        if (o ? s = o : i && (s = i.touches[0]), s && r) {
          var a = o ? o.screenX : 0, l = o ? o.screenY : 0, u = Math.abs(r.screenX - a) < 5, p = Math.abs(r.screenY - l) < 5;
          if (u && p)
            return !0;
        }
        return !1;
      }, t.prototype.getWrapper = function(e) {
        for (; !e.classList.contains("ag-popup") && e.parentElement; )
          e = e.parentElement;
        return e.classList.contains("ag-popup") ? e : null;
      }, t.prototype.setAlwaysOnTop = function(e, r) {
        var o = this.getWrapper(e);
        o && (o.classList.toggle("ag-always-on-top", !!r), r && this.bringPopupToFront(o));
      }, t.prototype.bringPopupToFront = function(e) {
        var r = this.getPopupParent(), o = Array.prototype.slice.call(r.querySelectorAll(".ag-popup")), i = o.length, s = Array.prototype.slice.call(r.querySelectorAll(".ag-popup.ag-always-on-top")), a = s.length, l = this.getWrapper(e);
        if (!(!l || i <= 1 || !r.contains(e))) {
          var u = o.indexOf(l), p = l.querySelectorAll("div"), d = [];
          if (p.forEach(function(R) {
            R.scrollTop !== 0 && d.push([R, R.scrollTop]);
          }), a) {
            var f = l.classList.contains("ag-always-on-top");
            f ? u !== i - 1 && M(s).insertAdjacentElement("afterend", l) : u !== i - a - 1 && s[0].insertAdjacentElement("beforebegin", l);
          } else u !== i - 1 && M(o).insertAdjacentElement("afterend", l);
          for (; d.length; ) {
            var v = d.pop();
            v[0].scrollTop = v[1];
          }
          var y = {
            type: "popupToFront",
            api: this.gridOptionsWrapper.getApi(),
            columnApi: this.gridOptionsWrapper.getColumnApi(),
            eWrapper: l
          };
          this.eventService.dispatchEvent(y);
        }
      }, qo([
        h("environment")
      ], t.prototype, "environment", void 0), qo([
        h("focusService")
      ], t.prototype, "focusService", void 0), qo([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), qo([
        B
      ], t.prototype, "postConstruct", null), t = qo([
        j("popupService")
      ], t), t;
    }(H)
  );
  var gm = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Ji = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, vm = (
    /** @class */
    function(n) {
      gm(t, n);
      function t(e, r, o) {
        e === void 0 && (e = "default"), r === void 0 && (r = "listbox");
        var i = n.call(this, t.getTemplate(e)) || this;
        return i.cssIdentifier = e, i.ariaRole = r, i.listName = o, i.renderedRows = /* @__PURE__ */ new Map(), i.rowHeight = 20, i.isDestroyed = !1, i;
      }
      return t.prototype.postConstruct = function() {
        var e = this;
        this.addScrollListener(), this.rowHeight = this.getItemHeight(), this.addResizeObserver(), this.initialiseTabGuard({
          onFocusIn: function(r) {
            return e.onFocusIn(r);
          },
          onFocusOut: function(r) {
            return e.onFocusOut(r);
          },
          focusInnerElement: function(r) {
            return e.focusInnerElement(r);
          },
          onTabKeyDown: function(r) {
            return e.onTabKeyDown(r);
          },
          handleKeyDown: function(r) {
            return e.handleKeyDown(r);
          }
        }), this.setAriaProperties();
      }, t.prototype.setAriaProperties = function() {
        var e = this.gridOptionsWrapper.getLocaleTextFunc(), r = e("ariaDefaultListName", this.listName || "List"), o = this.eContainer;
        ke(o, this.ariaRole), fr(o, r);
      }, t.prototype.addResizeObserver = function() {
        var e = this.drawVirtualRows.bind(this), r = this.resizeObserverService.observeResize(this.getGui(), e);
        this.addDestroyFunc(r);
      }, t.prototype.focusInnerElement = function(e) {
        this.focusRow(e ? this.model.getRowCount() - 1 : 0);
      }, t.prototype.onFocusIn = function(e) {
        var r = e.target;
        return r.classList.contains("ag-virtual-list-item") && (this.lastFocusedRowIndex = Ka(r) - 1), !1;
      }, t.prototype.onFocusOut = function(e) {
        return this.getFocusableElement().contains(e.relatedTarget) || (this.lastFocusedRowIndex = null), !1;
      }, t.prototype.handleKeyDown = function(e) {
        switch (e.key) {
          case N.UP:
          case N.DOWN:
            this.navigate(e.key === N.UP) && e.preventDefault();
            break;
        }
      }, t.prototype.onTabKeyDown = function(e) {
        this.navigate(e.shiftKey) ? e.preventDefault() : this.focusService.focusInto(this.getGui(), !e.shiftKey);
      }, t.prototype.navigate = function(e) {
        if (this.lastFocusedRowIndex == null)
          return !1;
        var r = this.lastFocusedRowIndex + (e ? -1 : 1);
        return r < 0 || r >= this.model.getRowCount() ? !1 : (this.focusRow(r), !0);
      }, t.prototype.getLastFocusedRow = function() {
        return this.lastFocusedRowIndex;
      }, t.prototype.focusRow = function(e) {
        var r = this;
        this.ensureIndexVisible(e), window.setTimeout(function() {
          var o = r.renderedRows.get(e);
          o && o.eDiv.focus();
        }, 10);
      }, t.prototype.getComponentAt = function(e) {
        var r = this.renderedRows.get(e);
        return r && r.rowComponent;
      }, t.getTemplate = function(e) {
        return (
          /* html */
          `
            <div class="ag-virtual-list-viewport ag-` + e + `-virtual-list-viewport" role="presentation">
                <div class="ag-virtual-list-container ag-` + e + `-virtual-list-container" ref="eContainer"></div>
            </div>`
        );
      }, t.prototype.getItemHeight = function() {
        return this.gridOptionsWrapper.getListItemHeight();
      }, t.prototype.ensureIndexVisible = function(e) {
        var r = this.model.getRowCount();
        if (typeof e != "number" || e < 0 || e >= r) {
          console.warn("AG Grid: invalid row index for ensureIndexVisible: " + e);
          return;
        }
        var o = e * this.rowHeight, i = o + this.rowHeight, s = this.getGui(), a = s.scrollTop, l = s.offsetHeight, u = a + l, p = a > o, d = u < i;
        if (p)
          s.scrollTop = o;
        else if (d) {
          var f = i - l;
          s.scrollTop = f;
        }
      }, t.prototype.setComponentCreator = function(e) {
        this.componentCreator = e;
      }, t.prototype.getRowHeight = function() {
        return this.rowHeight;
      }, t.prototype.getScrollTop = function() {
        return this.getGui().scrollTop;
      }, t.prototype.setRowHeight = function(e) {
        this.rowHeight = e, this.refresh();
      }, t.prototype.refresh = function() {
        var e = this;
        if (!(this.model == null || this.isDestroyed)) {
          var r = this.model.getRowCount();
          this.eContainer.style.height = r * this.rowHeight + "px", ai(function() {
            return e.eContainer.clientHeight >= r * e.rowHeight;
          }, function() {
            e.isDestroyed || (e.clearVirtualRows(), e.drawVirtualRows());
          });
        }
      }, t.prototype.clearVirtualRows = function() {
        var e = this;
        this.renderedRows.forEach(function(r, o) {
          return e.removeRow(o);
        });
      }, t.prototype.drawVirtualRows = function() {
        var e = this.getGui(), r = e.scrollTop, o = r + e.offsetHeight, i = Math.floor(r / this.rowHeight), s = Math.floor(o / this.rowHeight);
        this.ensureRowsRendered(i, s);
      }, t.prototype.ensureRowsRendered = function(e, r) {
        var o = this;
        this.renderedRows.forEach(function(s, a) {
          (a < e || a > r) && a !== o.lastFocusedRowIndex && o.removeRow(a);
        });
        for (var i = e; i <= r; i++)
          this.renderedRows.has(i) || i < this.model.getRowCount() && this.insertRow(i);
      }, t.prototype.insertRow = function(e) {
        var r = this, o = this.model.getRow(e), i = document.createElement("div");
        if (i.classList.add("ag-virtual-list-item", "ag-" + this.cssIdentifier + "-virtual-list-item"), ke(i, this.ariaRole === "tree" ? "treeitem" : "option"), Jn(i, this.model.getRowCount()), es(i, e + 1), i.setAttribute("tabindex", "-1"), typeof this.model.isRowSelected == "function") {
          var s = this.model.isRowSelected(e);
          kr(i, !!s), ol(i, s);
        }
        i.style.height = this.rowHeight + "px", i.style.top = this.rowHeight * e + "px";
        var a = this.componentCreator(o, i);
        a.addGuiEventListener("focusin", function() {
          return r.lastFocusedRowIndex = e;
        }), i.appendChild(a.getGui()), this.renderedRows.has(e - 1) ? this.renderedRows.get(e - 1).eDiv.insertAdjacentElement("afterend", i) : this.renderedRows.has(e + 1) ? this.renderedRows.get(e + 1).eDiv.insertAdjacentElement("beforebegin", i) : this.eContainer.appendChild(i), this.renderedRows.set(e, { rowComponent: a, eDiv: i });
      }, t.prototype.removeRow = function(e) {
        var r = this.renderedRows.get(e);
        this.eContainer.removeChild(r.eDiv), this.destroyBean(r.rowComponent), this.renderedRows.delete(e);
      }, t.prototype.addScrollListener = function() {
        var e = this;
        this.addGuiEventListener("scroll", function() {
          return e.drawVirtualRows();
        });
      }, t.prototype.setModel = function(e) {
        this.model = e;
      }, t.prototype.destroy = function() {
        this.isDestroyed || (this.clearVirtualRows(), this.isDestroyed = !0, n.prototype.destroy.call(this));
      }, Ji([
        h("resizeObserverService")
      ], t.prototype, "resizeObserverService", void 0), Ji([
        h("focusService")
      ], t.prototype, "focusService", void 0), Ji([
        I("eContainer")
      ], t.prototype, "eContainer", void 0), Ji([
        B
      ], t.prototype, "postConstruct", null), t;
    }(Yo)
  );
  var mm = ["mouseover", "mouseout", "mouseenter", "mouseleave"], ym = ["touchstart", "touchend", "touchmove", "touchcancel"], up = (
    /** @class */
    function() {
      function n() {
        this.isOutsideAngular = function(t) {
          return Le(mm, t);
        };
      }
      return n.prototype.setTimeout = function(t, e) {
        window.setTimeout(t, e);
      }, n.prototype.setInterval = function(t, e) {
        return new Qe(function(r) {
          r(window.setInterval(t, e));
        });
      }, n.prototype.addEventListener = function(t, e, r, o) {
        var i = Le(ym, e);
        t.addEventListener(e, r, { capture: !!o, passive: i });
      }, n.prototype.dispatchEvent = function(t, e, r) {
        e();
      }, n.prototype.frameworkComponent = function(t) {
        return null;
      }, n.prototype.isFrameworkComponent = function(t) {
        return !1;
      }, n;
    }()
  );
  var Cm = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Xo = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, pp = (
    /** @class */
    function(n) {
      Cm(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.getNextCellToFocus = function(e, r, o) {
        return o === void 0 && (o = !1), o ? this.getNextCellToFocusWithCtrlPressed(e, r) : this.getNextCellToFocusWithoutCtrlPressed(e, r);
      }, t.prototype.getNextCellToFocusWithCtrlPressed = function(e, r) {
        var o = e === N.UP, i = e === N.DOWN, s = e === N.LEFT, a, l;
        if (o || i)
          l = o ? this.paginationProxy.getPageFirstRow() : this.paginationProxy.getPageLastRow(), a = r.column;
        else {
          var u = this.columnModel.getAllDisplayedColumns(), p = this.gridOptionsWrapper.isEnableRtl();
          l = r.rowIndex, a = s !== p ? u[0] : M(u);
        }
        return {
          rowIndex: l,
          rowPinned: null,
          column: a
        };
      }, t.prototype.getNextCellToFocusWithoutCtrlPressed = function(e, r) {
        for (var o = r, i = !1; !i; ) {
          switch (e) {
            case N.UP:
              o = this.getCellAbove(o);
              break;
            case N.DOWN:
              o = this.getCellBelow(o);
              break;
            case N.RIGHT:
              this.gridOptionsWrapper.isEnableRtl() ? o = this.getCellToLeft(o) : o = this.getCellToRight(o);
              break;
            case N.LEFT:
              this.gridOptionsWrapper.isEnableRtl() ? o = this.getCellToRight(o) : o = this.getCellToLeft(o);
              break;
            default:
              o = null, console.warn("AG Grid: unknown key for navigation " + e);
              break;
          }
          o ? i = this.isCellGoodToFocusOn(o) : i = !0;
        }
        return o;
      }, t.prototype.isCellGoodToFocusOn = function(e) {
        var r = e.column, o;
        switch (e.rowPinned) {
          case E.PINNED_TOP:
            o = this.pinnedRowModel.getPinnedTopRow(e.rowIndex);
            break;
          case E.PINNED_BOTTOM:
            o = this.pinnedRowModel.getPinnedBottomRow(e.rowIndex);
            break;
          default:
            o = this.rowModel.getRow(e.rowIndex);
            break;
        }
        if (!o)
          return !1;
        var i = r.isSuppressNavigable(o);
        return !i;
      }, t.prototype.getCellToLeft = function(e) {
        if (!e)
          return null;
        var r = this.columnModel.getDisplayedColBefore(e.column);
        return r ? {
          rowIndex: e.rowIndex,
          column: r,
          rowPinned: e.rowPinned
        } : null;
      }, t.prototype.getCellToRight = function(e) {
        if (!e)
          return null;
        var r = this.columnModel.getDisplayedColAfter(e.column);
        return r ? {
          rowIndex: e.rowIndex,
          column: r,
          rowPinned: e.rowPinned
        } : null;
      }, t.prototype.getRowBelow = function(e) {
        var r = e.rowIndex, o = e.rowPinned;
        if (this.isLastRowInContainer(e))
          switch (o) {
            case E.PINNED_BOTTOM:
              return null;
            case E.PINNED_TOP:
              return this.rowModel.isRowsToRender() ? { rowIndex: this.paginationProxy.getPageFirstRow(), rowPinned: null } : this.pinnedRowModel.isRowsToRender(E.PINNED_BOTTOM) ? { rowIndex: 0, rowPinned: E.PINNED_BOTTOM } : null;
            default:
              return this.pinnedRowModel.isRowsToRender(E.PINNED_BOTTOM) ? { rowIndex: 0, rowPinned: E.PINNED_BOTTOM } : null;
          }
        return { rowIndex: r + 1, rowPinned: o };
      }, t.prototype.getCellBelow = function(e) {
        if (!e)
          return null;
        var r = this.getRowBelow(e);
        return r ? {
          rowIndex: r.rowIndex,
          column: e.column,
          rowPinned: r.rowPinned
        } : null;
      }, t.prototype.isLastRowInContainer = function(e) {
        var r = e.rowPinned, o = e.rowIndex;
        if (r === E.PINNED_TOP) {
          var i = this.pinnedRowModel.getPinnedTopRowData().length - 1;
          return i <= o;
        }
        if (r === E.PINNED_BOTTOM) {
          var s = this.pinnedRowModel.getPinnedBottomRowData().length - 1;
          return s <= o;
        }
        var a = this.paginationProxy.getPageLastRow();
        return a <= o;
      }, t.prototype.getRowAbove = function(e) {
        var r = e.rowIndex, o = e.rowPinned, i = o ? r === 0 : r === this.paginationProxy.getPageFirstRow();
        return i ? o === E.PINNED_TOP ? null : o ? this.rowModel.isRowsToRender() ? this.getLastBodyCell() : this.pinnedRowModel.isRowsToRender(E.PINNED_TOP) ? this.getLastFloatingTopRow() : null : this.pinnedRowModel.isRowsToRender(E.PINNED_TOP) ? this.getLastFloatingTopRow() : null : { rowIndex: r - 1, rowPinned: o };
      }, t.prototype.getCellAbove = function(e) {
        if (!e)
          return null;
        var r = this.getRowAbove({ rowIndex: e.rowIndex, rowPinned: e.rowPinned });
        return r ? {
          rowIndex: r.rowIndex,
          column: e.column,
          rowPinned: r.rowPinned
        } : null;
      }, t.prototype.getLastBodyCell = function() {
        var e = this.paginationProxy.getPageLastRow();
        return { rowIndex: e, rowPinned: null };
      }, t.prototype.getLastFloatingTopRow = function() {
        var e = this.pinnedRowModel.getPinnedTopRowData().length - 1;
        return { rowIndex: e, rowPinned: E.PINNED_TOP };
      }, t.prototype.getNextTabbedCell = function(e, r) {
        return r ? this.getNextTabbedCellBackwards(e) : this.getNextTabbedCellForwards(e);
      }, t.prototype.getNextTabbedCellForwards = function(e) {
        var r = this.columnModel.getAllDisplayedColumns(), o = e.rowIndex, i = e.rowPinned, s = this.columnModel.getDisplayedColAfter(e.column);
        if (!s) {
          s = r[0];
          var a = this.getRowBelow(e);
          if (C(a) || !a.rowPinned && !this.paginationProxy.isRowInPage(a))
            return null;
          o = a ? a.rowIndex : null, i = a ? a.rowPinned : null;
        }
        return { rowIndex: o, column: s, rowPinned: i };
      }, t.prototype.getNextTabbedCellBackwards = function(e) {
        var r = this.columnModel.getAllDisplayedColumns(), o = e.rowIndex, i = e.rowPinned, s = this.columnModel.getDisplayedColBefore(e.column);
        if (!s) {
          s = M(r);
          var a = this.getRowAbove({ rowIndex: e.rowIndex, rowPinned: e.rowPinned });
          if (C(a) || !a.rowPinned && !this.paginationProxy.isRowInPage(a))
            return null;
          o = a ? a.rowIndex : null, i = a ? a.rowPinned : null;
        }
        return { rowIndex: o, column: s, rowPinned: i };
      }, Xo([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), Xo([
        h("rowModel")
      ], t.prototype, "rowModel", void 0), Xo([
        h("pinnedRowModel")
      ], t.prototype, "pinnedRowModel", void 0), Xo([
        h("paginationProxy")
      ], t.prototype, "paginationProxy", void 0), t = Xo([
        j("cellNavigationService")
      ], t), t;
    }(H)
  );
  var wm = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Qo = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Em = function(n, t) {
    return function(e, r) {
      t(e, r, n);
    };
  }, cp = (
    /** @class */
    function(n) {
      wm(t, n);
      function t() {
        var e = n !== null && n.apply(this, arguments) || this;
        return e.consuming = !1, e;
      }
      return t.prototype.setBeans = function(e) {
        this.logger = e.create("AlignedGridsService");
      }, t.prototype.init = function() {
        this.addManagedListener(this.eventService, m.EVENT_COLUMN_MOVED, this.fireColumnEvent.bind(this)), this.addManagedListener(this.eventService, m.EVENT_COLUMN_VISIBLE, this.fireColumnEvent.bind(this)), this.addManagedListener(this.eventService, m.EVENT_COLUMN_PINNED, this.fireColumnEvent.bind(this)), this.addManagedListener(this.eventService, m.EVENT_COLUMN_GROUP_OPENED, this.fireColumnEvent.bind(this)), this.addManagedListener(this.eventService, m.EVENT_COLUMN_RESIZED, this.fireColumnEvent.bind(this)), this.addManagedListener(this.eventService, m.EVENT_BODY_SCROLL, this.fireScrollEvent.bind(this));
      }, t.prototype.fireEvent = function(e) {
        if (!this.consuming) {
          var r = this.gridOptionsWrapper.getAlignedGrids();
          r && r.forEach(function(o) {
            if (o.api) {
              var i = o.api.__getAlignedGridService();
              e(i);
            }
          });
        }
      }, t.prototype.onEvent = function(e) {
        this.consuming = !0, e(), this.consuming = !1;
      }, t.prototype.fireColumnEvent = function(e) {
        this.fireEvent(function(r) {
          r.onColumnEvent(e);
        });
      }, t.prototype.fireScrollEvent = function(e) {
        e.direction === "horizontal" && this.fireEvent(function(r) {
          r.onScrollEvent(e);
        });
      }, t.prototype.onScrollEvent = function(e) {
        var r = this;
        this.onEvent(function() {
          var o = r.ctrlsService.getGridBodyCtrl();
          o.getScrollFeature().setHorizontalScrollPosition(e.left);
        });
      }, t.prototype.getMasterColumns = function(e) {
        var r = [];
        return e.columns ? e.columns.forEach(function(o) {
          r.push(o);
        }) : e.column && r.push(e.column), r;
      }, t.prototype.getColumnIds = function(e) {
        var r = [];
        return e.columns ? e.columns.forEach(function(o) {
          r.push(o.getColId());
        }) : e.column && r.push(e.column.getColId()), r;
      }, t.prototype.onColumnEvent = function(e) {
        var r = this;
        this.onEvent(function() {
          switch (e.type) {
            case m.EVENT_COLUMN_MOVED:
            case m.EVENT_COLUMN_VISIBLE:
            case m.EVENT_COLUMN_PINNED:
            case m.EVENT_COLUMN_RESIZED:
              var o = e;
              r.processColumnEvent(o);
              break;
            case m.EVENT_COLUMN_GROUP_OPENED:
              var i = e;
              r.processGroupOpenedEvent(i);
              break;
            case m.EVENT_COLUMN_PIVOT_CHANGED:
              console.warn("AG Grid: pivoting is not supported with aligned grids. You can only use one of these features at a time in a grid.");
              break;
          }
        });
      }, t.prototype.processGroupOpenedEvent = function(e) {
        var r = e.columnGroup, o = null;
        if (r) {
          var i = r.getGroupId();
          o = this.columnModel.getProvidedColumnGroup(i);
        }
        r && !o || (this.logger.log("onColumnEvent-> processing " + e + " expanded = " + r.isExpanded()), this.columnModel.setColumnGroupOpened(o, r.isExpanded(), "alignedGridChanged"));
      }, t.prototype.processColumnEvent = function(e) {
        var r = this, o = e.column, i = null;
        if (o && (i = this.columnModel.getPrimaryColumn(o.getColId())), !(o && !i)) {
          var s = this.getMasterColumns(e);
          switch (e.type) {
            case m.EVENT_COLUMN_MOVED:
              {
                var a = e, l = e.columnApi.getColumnState(), u = l.map(function(_) {
                  return { colId: _.colId };
                });
                this.columnModel.applyColumnState({ state: u, applyOrder: !0 }, "alignedGridChanged"), this.logger.log("onColumnEvent-> processing " + e.type + " toIndex = " + a.toIndex);
              }
              break;
            case m.EVENT_COLUMN_VISIBLE:
              {
                var p = e, l = e.columnApi.getColumnState(), u = l.map(function(P) {
                  return { colId: P.colId, hide: P.hide };
                });
                this.columnModel.applyColumnState({ state: u }, "alignedGridChanged"), this.logger.log("onColumnEvent-> processing " + e.type + " visible = " + p.visible);
              }
              break;
            case m.EVENT_COLUMN_PINNED:
              {
                var d = e, l = e.columnApi.getColumnState(), u = l.map(function(P) {
                  return { colId: P.colId, pinned: P.pinned };
                });
                this.columnModel.applyColumnState({ state: u }, "alignedGridChanged"), this.logger.log("onColumnEvent-> processing " + e.type + " pinned = " + d.pinned);
              }
              break;
            case m.EVENT_COLUMN_RESIZED:
              var f = e;
              s.forEach(function(_) {
                r.logger.log("onColumnEvent-> processing " + e.type + " actualWidth = " + _.getActualWidth());
                var D = [{ key: _.getColId(), newWidth: _.getActualWidth() }];
                r.columnModel.setColumnWidths(D, !1, f.finished, "alignedGridChanged");
              });
              break;
          }
          var v = this.ctrlsService.getGridBodyCtrl(), y = v.isVerticalScrollShowing(), R = this.gridOptionsWrapper.getAlignedGrids();
          R && R.forEach(function(_) {
            _.api && _.api.setAlwaysShowVerticalScroll(y);
          });
        }
      }, Qo([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), Qo([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), Qo([
        Em(0, Ne("loggerFactory"))
      ], t.prototype, "setBeans", null), Qo([
        B
      ], t.prototype, "init", null), t = Qo([
        j("alignedGridsService")
      ], t), t;
    }(H)
  );
  var Rm = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Jr = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Sm = function(n, t) {
    return function(e, r) {
      t(e, r, n);
    };
  }, dp = (
    /** @class */
    function(n) {
      Rm(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.setBeans = function(e) {
        this.logger = e.create("selectionService"), this.reset();
      }, t.prototype.init = function() {
        this.groupSelectsChildren = this.gridOptionsWrapper.isGroupSelectsChildren(), this.addManagedListener(this.eventService, m.EVENT_ROW_SELECTED, this.onRowSelected.bind(this));
      }, t.prototype.setLastSelectedNode = function(e) {
        this.lastSelectedNode = e;
      }, t.prototype.getLastSelectedNode = function() {
        return this.lastSelectedNode;
      }, t.prototype.getSelectedNodes = function() {
        var e = [];
        return ie(this.selectedNodes, function(r, o) {
          o && e.push(o);
        }), e;
      }, t.prototype.getSelectedRows = function() {
        var e = [];
        return ie(this.selectedNodes, function(r, o) {
          o && o.data && e.push(o.data);
        }), e;
      }, t.prototype.removeGroupsFromSelection = function() {
        var e = this;
        ie(this.selectedNodes, function(r, o) {
          o && o.group && (e.selectedNodes[o.id] = void 0);
        });
      }, t.prototype.updateGroupsFromChildrenSelections = function(e) {
        if (this.gridOptionsWrapper.isGroupSelectsChildren() && this.rowModel.getType() === E.ROW_MODEL_TYPE_CLIENT_SIDE) {
          var r = this.rowModel, o = r.getRootNode();
          e || (e = new Yi(!0, o), e.setInactive()), e.forEachChangedNodeDepthFirst(function(i) {
            i !== o && i.calculateSelectedFromChildren();
          });
        }
      }, t.prototype.getNodeForIdIfSelected = function(e) {
        return this.selectedNodes[e];
      }, t.prototype.clearOtherNodes = function(e) {
        var r = this, o = {}, i = 0;
        return ie(this.selectedNodes, function(s, a) {
          if (a && a.id !== e.id) {
            var l = r.selectedNodes[a.id];
            i += l.setSelectedParams({
              newValue: !1,
              clearSelection: !1,
              suppressFinishActions: !0
            }), r.groupSelectsChildren && a.parent && (o[a.parent.id] = a.parent);
          }
        }), ie(o, function(s, a) {
          a.calculateSelectedFromChildren();
        }), i;
      }, t.prototype.onRowSelected = function(e) {
        var r = e.node;
        this.groupSelectsChildren && r.group || (r.isSelected() ? this.selectedNodes[r.id] = r : this.selectedNodes[r.id] = void 0);
      }, t.prototype.syncInRowNode = function(e, r) {
        this.syncInOldRowNode(e, r), this.syncInNewRowNode(e);
      }, t.prototype.syncInOldRowNode = function(e, r) {
        var o = g(r) && e.id !== r.id;
        if (o && r) {
          var i = r.id, s = this.selectedNodes[i] == e;
          s && (this.selectedNodes[r.id] = r);
        }
      }, t.prototype.syncInNewRowNode = function(e) {
        g(this.selectedNodes[e.id]) ? (e.setSelectedInitialValue(!0), this.selectedNodes[e.id] = e) : e.setSelectedInitialValue(!1);
      }, t.prototype.reset = function() {
        this.logger.log("reset"), this.selectedNodes = {}, this.lastSelectedNode = null;
      }, t.prototype.getBestCostNodeSelection = function() {
        if (this.rowModel.getType() !== E.ROW_MODEL_TYPE_CLIENT_SIDE) {
          console.warn("AG Grid: `getBestCostNodeSelection` is only available when using normal row model");
          return;
        }
        var e = this.rowModel, r = e.getTopLevelNodes();
        if (r === null) {
          console.warn("AG Grid: `selectAll` not available doing `rowModel=virtual`");
          return;
        }
        var o = [];
        function i(s) {
          for (var a = 0, l = s.length; a < l; a++) {
            var u = s[a];
            if (u.isSelected())
              o.push(u);
            else {
              var p = u;
              p.group && p.children && i(p.children);
            }
          }
        }
        return i(r), o;
      }, t.prototype.setRowModel = function(e) {
        this.rowModel = e;
      }, t.prototype.isEmpty = function() {
        var e = 0;
        return ie(this.selectedNodes, function(r, o) {
          o && e++;
        }), e === 0;
      }, t.prototype.deselectAllRowNodes = function(e) {
        e === void 0 && (e = !1);
        var r = function(a) {
          return a.selectThisNode(!1);
        }, o = this.rowModel.getType() === E.ROW_MODEL_TYPE_CLIENT_SIDE;
        if (e) {
          if (!o) {
            console.error("AG Grid: selecting just filtered only works with In Memory Row Model");
            return;
          }
          var i = this.rowModel;
          i.forEachNodeAfterFilter(r);
        } else
          ie(this.selectedNodes, function(a, l) {
            l && r(l);
          }), this.reset();
        o && this.groupSelectsChildren && this.updateGroupsFromChildrenSelections();
        var s = {
          type: m.EVENT_SELECTION_CHANGED,
          api: this.gridApi,
          columnApi: this.columnApi
        };
        this.eventService.dispatchEvent(s);
      }, t.prototype.selectAllRowNodes = function(e) {
        if (e === void 0 && (e = !1), this.rowModel.getType() !== E.ROW_MODEL_TYPE_CLIENT_SIDE)
          throw new Error("selectAll only available with normal row model, ie not " + this.rowModel.getType());
        var r = this.rowModel, o = function(s) {
          return s.selectThisNode(!0);
        };
        e ? r.forEachNodeAfterFilter(o) : r.forEachNode(o), this.rowModel.getType() === E.ROW_MODEL_TYPE_CLIENT_SIDE && this.groupSelectsChildren && this.updateGroupsFromChildrenSelections();
        var i = {
          type: m.EVENT_SELECTION_CHANGED,
          api: this.gridApi,
          columnApi: this.columnApi
        };
        this.eventService.dispatchEvent(i);
      }, t.prototype.selectNode = function(e, r) {
        e && e.setSelectedParams({ newValue: !0, clearSelection: !r });
      }, t.prototype.deselectIndex = function(e) {
        var r = this.rowModel.getRow(e);
        this.deselectNode(r);
      }, t.prototype.deselectNode = function(e) {
        e && e.setSelectedParams({ newValue: !1, clearSelection: !1 });
      }, t.prototype.selectIndex = function(e, r) {
        var o = this.rowModel.getRow(e);
        this.selectNode(o, r);
      }, Jr([
        h("rowModel")
      ], t.prototype, "rowModel", void 0), Jr([
        h("columnApi")
      ], t.prototype, "columnApi", void 0), Jr([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), Jr([
        Sm(0, Ne("loggerFactory"))
      ], t.prototype, "setBeans", null), Jr([
        B
      ], t.prototype, "init", null), t = Jr([
        j("selectionService")
      ], t), t;
    }(H)
  );
  var Xs = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, hp = (
    /** @class */
    function() {
      function n() {
      }
      return n.prototype.sizeColumnsToFit = function(t) {
        typeof t > "u" && console.error("AG Grid: missing parameter to columnApi.sizeColumnsToFit(gridWidth)"), this.columnModel.sizeColumnsToFit(t, "api");
      }, n.prototype.setColumnGroupOpened = function(t, e) {
        this.columnModel.setColumnGroupOpened(t, e, "api");
      }, n.prototype.getColumnGroup = function(t, e) {
        return this.columnModel.getColumnGroup(t, e);
      }, n.prototype.getProvidedColumnGroup = function(t) {
        return this.columnModel.getProvidedColumnGroup(t);
      }, n.prototype.getDisplayNameForColumn = function(t, e) {
        return this.columnModel.getDisplayNameForColumn(t, e) || "";
      }, n.prototype.getDisplayNameForColumnGroup = function(t, e) {
        return this.columnModel.getDisplayNameForColumnGroup(t, e) || "";
      }, n.prototype.getColumn = function(t) {
        return this.columnModel.getPrimaryColumn(t);
      }, n.prototype.applyColumnState = function(t) {
        return this.columnModel.applyColumnState(t, "api");
      }, n.prototype.getColumnState = function() {
        return this.columnModel.getColumnState();
      }, n.prototype.resetColumnState = function() {
        this.columnModel.resetColumnState("api");
      }, n.prototype.getColumnGroupState = function() {
        return this.columnModel.getColumnGroupState();
      }, n.prototype.setColumnGroupState = function(t) {
        this.columnModel.setColumnGroupState(t, "api");
      }, n.prototype.resetColumnGroupState = function() {
        this.columnModel.resetColumnGroupState("api");
      }, n.prototype.isPinning = function() {
        return this.columnModel.isPinningLeft() || this.columnModel.isPinningRight();
      }, n.prototype.isPinningLeft = function() {
        return this.columnModel.isPinningLeft();
      }, n.prototype.isPinningRight = function() {
        return this.columnModel.isPinningRight();
      }, n.prototype.getDisplayedColAfter = function(t) {
        return this.columnModel.getDisplayedColAfter(t);
      }, n.prototype.getDisplayedColBefore = function(t) {
        return this.columnModel.getDisplayedColBefore(t);
      }, n.prototype.setColumnVisible = function(t, e) {
        this.columnModel.setColumnVisible(t, e, "api");
      }, n.prototype.setColumnsVisible = function(t, e) {
        this.columnModel.setColumnsVisible(t, e, "api");
      }, n.prototype.setColumnPinned = function(t, e) {
        this.columnModel.setColumnPinned(t, e, "api");
      }, n.prototype.setColumnsPinned = function(t, e) {
        this.columnModel.setColumnsPinned(t, e, "api");
      }, n.prototype.getAllColumns = function() {
        return this.columnModel.getAllPrimaryColumns();
      }, n.prototype.getAllGridColumns = function() {
        return this.columnModel.getAllGridColumns();
      }, n.prototype.getDisplayedLeftColumns = function() {
        return this.columnModel.getDisplayedLeftColumns();
      }, n.prototype.getDisplayedCenterColumns = function() {
        return this.columnModel.getDisplayedCenterColumns();
      }, n.prototype.getDisplayedRightColumns = function() {
        return this.columnModel.getDisplayedRightColumns();
      }, n.prototype.getAllDisplayedColumns = function() {
        return this.columnModel.getAllDisplayedColumns();
      }, n.prototype.getAllDisplayedVirtualColumns = function() {
        return this.columnModel.getViewportColumns();
      }, n.prototype.moveColumn = function(t, e) {
        typeof t == "number" ? (console.warn("AG Grid: you are using moveColumn(fromIndex, toIndex) - moveColumn takes a column key and a destination index, not two indexes, to move with indexes use moveColumnByIndex(from,to) instead"), this.columnModel.moveColumnByIndex(t, e, "api")) : this.columnModel.moveColumn(t, e, "api");
      }, n.prototype.moveColumnByIndex = function(t, e) {
        this.columnModel.moveColumnByIndex(t, e, "api");
      }, n.prototype.moveColumns = function(t, e) {
        this.columnModel.moveColumns(t, e, "api");
      }, n.prototype.moveRowGroupColumn = function(t, e) {
        this.columnModel.moveRowGroupColumn(t, e);
      }, n.prototype.setColumnAggFunc = function(t, e) {
        this.columnModel.setColumnAggFunc(t, e);
      }, n.prototype.setColumnWidth = function(t, e, r, o) {
        r === void 0 && (r = !0), this.columnModel.setColumnWidths([{ key: t, newWidth: e }], !1, r, o);
      }, n.prototype.setColumnWidths = function(t, e, r) {
        e === void 0 && (e = !0), this.columnModel.setColumnWidths(t, !1, e, r);
      }, n.prototype.setPivotMode = function(t) {
        this.columnModel.setPivotMode(t);
      }, n.prototype.isPivotMode = function() {
        return this.columnModel.isPivotMode();
      }, n.prototype.getSecondaryPivotColumn = function(t, e) {
        return this.columnModel.getSecondaryPivotColumn(t, e);
      }, n.prototype.setValueColumns = function(t) {
        this.columnModel.setValueColumns(t, "api");
      }, n.prototype.getValueColumns = function() {
        return this.columnModel.getValueColumns();
      }, n.prototype.removeValueColumn = function(t) {
        this.columnModel.removeValueColumn(t, "api");
      }, n.prototype.removeValueColumns = function(t) {
        this.columnModel.removeValueColumns(t, "api");
      }, n.prototype.addValueColumn = function(t) {
        this.columnModel.addValueColumn(t, "api");
      }, n.prototype.addValueColumns = function(t) {
        this.columnModel.addValueColumns(t, "api");
      }, n.prototype.setRowGroupColumns = function(t) {
        this.columnModel.setRowGroupColumns(t, "api");
      }, n.prototype.removeRowGroupColumn = function(t) {
        this.columnModel.removeRowGroupColumn(t, "api");
      }, n.prototype.removeRowGroupColumns = function(t) {
        this.columnModel.removeRowGroupColumns(t, "api");
      }, n.prototype.addRowGroupColumn = function(t) {
        this.columnModel.addRowGroupColumn(t, "api");
      }, n.prototype.addRowGroupColumns = function(t) {
        this.columnModel.addRowGroupColumns(t, "api");
      }, n.prototype.getRowGroupColumns = function() {
        return this.columnModel.getRowGroupColumns();
      }, n.prototype.setPivotColumns = function(t) {
        this.columnModel.setPivotColumns(t, "api");
      }, n.prototype.removePivotColumn = function(t) {
        this.columnModel.removePivotColumn(t, "api");
      }, n.prototype.removePivotColumns = function(t) {
        this.columnModel.removePivotColumns(t, "api");
      }, n.prototype.addPivotColumn = function(t) {
        this.columnModel.addPivotColumn(t, "api");
      }, n.prototype.addPivotColumns = function(t) {
        this.columnModel.addPivotColumns(t, "api");
      }, n.prototype.getPivotColumns = function() {
        return this.columnModel.getPivotColumns();
      }, n.prototype.getLeftDisplayedColumnGroups = function() {
        return this.columnModel.getDisplayedTreeLeft();
      }, n.prototype.getCenterDisplayedColumnGroups = function() {
        return this.columnModel.getDisplayedTreeCentre();
      }, n.prototype.getRightDisplayedColumnGroups = function() {
        return this.columnModel.getDisplayedTreeRight();
      }, n.prototype.getAllDisplayedColumnGroups = function() {
        return this.columnModel.getAllDisplayedTrees();
      }, n.prototype.autoSizeColumn = function(t, e) {
        return this.columnModel.autoSizeColumn(t, e, "api");
      }, n.prototype.autoSizeColumns = function(t, e) {
        this.columnModel.autoSizeColumns({ columns: t, skipHeader: e });
      }, n.prototype.autoSizeAllColumns = function(t) {
        this.columnModel.autoSizeAllColumns(t, "api");
      }, n.prototype.setSecondaryColumns = function(t) {
        this.columnModel.setSecondaryColumns(t, "api");
      }, n.prototype.getSecondaryColumns = function() {
        return this.columnModel.getSecondaryColumns();
      }, n.prototype.getPrimaryColumns = function() {
        return this.columnModel.getAllPrimaryColumns();
      }, n.prototype.cleanDownReferencesToAvoidMemoryLeakInCaseApplicationIsKeepingReferenceToDestroyedGrid = function() {
        setTimeout(re.removeAllReferences.bind(window, this, "Column API"), 100);
      }, n.prototype.columnGroupOpened = function(t, e) {
        console.error("AG Grid: columnGroupOpened no longer exists, use setColumnGroupOpened"), this.setColumnGroupOpened(t, e);
      }, n.prototype.hideColumns = function(t, e) {
        console.error("AG Grid: hideColumns is deprecated, use setColumnsVisible"), this.columnModel.setColumnsVisible(t, !e, "api");
      }, n.prototype.hideColumn = function(t, e) {
        console.error("AG Grid: hideColumn is deprecated, use setColumnVisible"), this.columnModel.setColumnVisible(t, !e, "api");
      }, n.prototype.setState = function(t) {
        return console.error("AG Grid: setState is deprecated, use setColumnState"), this.setColumnState(t);
      }, n.prototype.getState = function() {
        return console.error("AG Grid: getState is deprecated, use getColumnState"), this.getColumnState();
      }, n.prototype.resetState = function() {
        console.error("AG Grid: resetState is deprecated, use resetColumnState"), this.resetColumnState();
      }, n.prototype.getAggregationColumns = function() {
        return console.error("AG Grid: getAggregationColumns is deprecated, use getValueColumns"), this.columnModel.getValueColumns();
      }, n.prototype.removeAggregationColumn = function(t) {
        console.error("AG Grid: removeAggregationColumn is deprecated, use removeValueColumn"), this.columnModel.removeValueColumn(t, "api");
      }, n.prototype.removeAggregationColumns = function(t) {
        console.error("AG Grid: removeAggregationColumns is deprecated, use removeValueColumns"), this.columnModel.removeValueColumns(t, "api");
      }, n.prototype.addAggregationColumn = function(t) {
        console.error("AG Grid: addAggregationColumn is deprecated, use addValueColumn"), this.columnModel.addValueColumn(t, "api");
      }, n.prototype.addAggregationColumns = function(t) {
        console.error("AG Grid: addAggregationColumns is deprecated, use addValueColumns"), this.columnModel.addValueColumns(t, "api");
      }, n.prototype.setColumnAggFunction = function(t, e) {
        console.error("AG Grid: setColumnAggFunction is deprecated, use setColumnAggFunc"), this.columnModel.setColumnAggFunc(t, e, "api");
      }, n.prototype.getDisplayNameForCol = function(t) {
        return console.error("AG Grid: getDisplayNameForCol is deprecated, use getDisplayNameForColumn"), this.getDisplayNameForColumn(t, null);
      }, n.prototype.setColumnState = function(t) {
        return console.error("AG Grid: setColumnState is deprecated, use applyColumnState"), this.columnModel.applyColumnState({ state: t, applyOrder: !0 }, "api");
      }, n.prototype.getOriginalColumnGroup = function(t) {
        return console.error("AG Grid: getOriginalColumnGroup is deprecated, use getProvidedColumnGroup"), this.columnModel.getProvidedColumnGroup(t);
      }, Xs([
        h("columnModel")
      ], n.prototype, "columnModel", void 0), Xs([
        De
      ], n.prototype, "cleanDownReferencesToAvoidMemoryLeakInCaseApplicationIsKeepingReferenceToDestroyedGrid", null), n = Xs([
        j("columnApi")
      ], n), n;
    }()
  );
  var _m = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Zo = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, fp = (
    /** @class */
    function(n) {
      _m(t, n);
      function t() {
        var e = n !== null && n.apply(this, arguments) || this;
        return e.initialised = !1, e;
      }
      return t.prototype.init = function() {
        var e = this;
        this.cellExpressions = this.gridOptionsWrapper.isEnableCellExpressions(), this.initialised = !0, this.eventService.addEventListener(m.EVENT_CELL_VALUE_CHANGED, function(r) {
          return e.callColumnCellValueChangedHandler(r);
        }, this.gridOptionsWrapper.useAsyncEvents());
      }, t.prototype.getValue = function(e, r, o, i) {
        if (o === void 0 && (o = !1), i === void 0 && (i = !1), this.initialised || this.init(), !!r) {
          var s = e.getColDef(), a = s.field, l = e.getId(), u = r.data, p, d = r.groupData && r.groupData[l] !== void 0, f = !i && r.aggData && r.aggData[l] !== void 0;
          if (o && s.filterValueGetter ? p = this.executeFilterValueGetter(s.filterValueGetter, u, e, r) : this.gridOptionsWrapper.isTreeData() && f ? p = r.aggData[l] : this.gridOptionsWrapper.isTreeData() && s.valueGetter ? p = this.executeValueGetter(s.valueGetter, u, e, r) : this.gridOptionsWrapper.isTreeData() && a && u ? p = qe(u, a, e.isFieldContainsDots()) : d ? p = r.groupData[l] : f ? p = r.aggData[l] : s.valueGetter ? p = this.executeValueGetter(s.valueGetter, u, e, r) : a && u && (p = qe(u, a, e.isFieldContainsDots())), this.cellExpressions && typeof p == "string" && p.indexOf("=") === 0) {
            var v = p.substring(1);
            p = this.executeValueGetter(v, u, e, r);
          }
          if (p == null) {
            var y = this.getOpenedGroup(r, e);
            if (y != null)
              return y;
          }
          return p;
        }
      }, t.prototype.getOpenedGroup = function(e, r) {
        if (this.gridOptionsWrapper.isShowOpenedGroup()) {
          var o = r.getColDef();
          if (o.showRowGroup)
            for (var i = r.getColDef().showRowGroup, s = e.parent; s != null; ) {
              if (s.rowGroupColumn && (i === !0 || i === s.rowGroupColumn.getId()))
                return s.key;
              s = s.parent;
            }
        }
      }, t.prototype.setValue = function(e, r, o, i) {
        var s = this.columnModel.getPrimaryColumn(r);
        if (!e || !s)
          return !1;
        C(e.data) && (e.data = {});
        var a = s.getColDef(), l = a.field, u = a.newValueHandler, p = a.valueSetter;
        if (C(l) && C(u) && C(p))
          return console.warn("AG Grid: you need either field or valueSetter set on colDef for editing to work"), !1;
        var d = {
          node: e,
          data: e.data,
          oldValue: this.getValue(s, e),
          newValue: o,
          colDef: s.getColDef(),
          column: s,
          api: this.gridOptionsWrapper.getApi(),
          columnApi: this.gridOptionsWrapper.getColumnApi(),
          context: this.gridOptionsWrapper.getContext()
        };
        d.newValue = o;
        var f;
        if (u && g(u) ? f = u(d) : g(p) ? f = this.expressionService.evaluate(p, d) : f = this.setValueUsingField(e.data, l, o, s.isFieldContainsDots()), f === void 0 && (f = !0), !f)
          return !1;
        e.resetQuickFilterAggregateText(), this.valueCache.onDataChanged(), d.newValue = this.getValue(s, e);
        var v = {
          type: m.EVENT_CELL_VALUE_CHANGED,
          event: null,
          rowIndex: e.rowIndex,
          rowPinned: e.rowPinned,
          column: d.column,
          api: d.api,
          columnApi: d.columnApi,
          colDef: d.colDef,
          context: d.context,
          data: e.data,
          node: e,
          oldValue: d.oldValue,
          newValue: d.newValue,
          value: d.newValue,
          source: i
        };
        return this.eventService.dispatchEvent(v), !0;
      }, t.prototype.callColumnCellValueChangedHandler = function(e) {
        var r = e.colDef.onCellValueChanged;
        typeof r == "function" && r({
          node: e.node,
          data: e.data,
          oldValue: e.oldValue,
          newValue: e.newValue,
          colDef: e.colDef,
          column: e.column,
          api: e.api,
          columnApi: e.columnApi,
          context: e.context
        });
      }, t.prototype.setValueUsingField = function(e, r, o, i) {
        if (!r)
          return !1;
        var s = !1;
        if (!i)
          e[r] = o;
        else
          for (var a = r.split("."), l = e; a.length > 0 && l; ) {
            var u = a.shift();
            a.length === 0 ? l[u] = o : l = l[u];
          }
        return !s;
      }, t.prototype.executeFilterValueGetter = function(e, r, o, i) {
        var s = {
          data: r,
          node: i,
          column: o,
          colDef: o.getColDef(),
          api: this.gridOptionsWrapper.getApi(),
          columnApi: this.gridOptionsWrapper.getColumnApi(),
          context: this.gridOptionsWrapper.getContext(),
          getValue: this.getValueCallback.bind(this, i)
        };
        return this.expressionService.evaluate(e, s);
      }, t.prototype.executeValueGetter = function(e, r, o, i) {
        var s = o.getId(), a = this.valueCache.getValue(i, s);
        if (a !== void 0)
          return a;
        var l = {
          data: r,
          node: i,
          column: o,
          colDef: o.getColDef(),
          api: this.gridOptionsWrapper.getApi(),
          columnApi: this.gridOptionsWrapper.getColumnApi(),
          context: this.gridOptionsWrapper.getContext(),
          getValue: this.getValueCallback.bind(this, i)
        }, u = this.expressionService.evaluate(e, l);
        return this.valueCache.setValue(i, s, u), u;
      }, t.prototype.getValueCallback = function(e, r) {
        var o = this.columnModel.getPrimaryColumn(r);
        return o ? this.getValue(o, e) : null;
      }, t.prototype.getKeyForNode = function(e, r) {
        var o = this.getValue(e, r), i = e.getColDef().keyCreator, s = o;
        if (i) {
          var a = {
            value: o,
            colDef: e.getColDef(),
            column: e,
            node: r,
            data: r.data,
            api: this.gridOptionsWrapper.getApi(),
            columnApi: this.gridOptionsWrapper.getColumnApi(),
            context: this.gridOptionsWrapper.getContext()
          };
          s = i(a);
        }
        return typeof s == "string" || s == null || (s = String(s), s === "[object Object]" && me(function() {
          console.warn("AG Grid: a column you are grouping or pivoting by has objects as values. If you want to group by complex objects then either a) use a colDef.keyCreator (se AG Grid docs) or b) to toString() on the object to return a key");
        }, "getKeyForNode - warn about [object,object]")), s;
      }, Zo([
        h("expressionService")
      ], t.prototype, "expressionService", void 0), Zo([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), Zo([
        h("valueCache")
      ], t.prototype, "valueCache", void 0), Zo([
        B
      ], t.prototype, "init", null), t = Zo([
        j("valueService")
      ], t), t;
    }(H)
  );
  var Om = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), gp = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Am = function(n, t) {
    return function(e, r) {
      t(e, r, n);
    };
  }, vp = (
    /** @class */
    function(n) {
      Om(t, n);
      function t() {
        var e = n !== null && n.apply(this, arguments) || this;
        return e.expressionToFunctionCache = {}, e;
      }
      return t.prototype.setBeans = function(e) {
        this.logger = e.create("ExpressionService");
      }, t.prototype.evaluate = function(e, r) {
        if (typeof e == "function") {
          var o = e;
          return o(r);
        } else if (typeof e == "string") {
          var i = e;
          return this.evaluateExpression(i, r);
        } else
          console.error("AG Grid: value should be either a string or a function", e);
      }, t.prototype.evaluateExpression = function(e, r) {
        try {
          var o = this.createExpressionFunction(e), i = o(r.value, r.context, r.oldValue, r.newValue, r.value, r.node, r.data, r.colDef, r.rowIndex, r.api, r.columnApi, r.getValue, r.column, r.columnGroup);
          return i;
        } catch (s) {
          return console.log("Processing of the expression failed"), console.log("Expression = " + e), console.log("Params =", r), console.log("Exception = " + s), null;
        }
      }, t.prototype.createExpressionFunction = function(e) {
        if (this.expressionToFunctionCache[e])
          return this.expressionToFunctionCache[e];
        var r = this.createFunctionBody(e), o = new Function("x, ctx, oldValue, newValue, value, node, data, colDef, rowIndex, api, columnApi, getValue, column, columnGroup", r);
        return this.expressionToFunctionCache[e] = o, o;
      }, t.prototype.createFunctionBody = function(e) {
        return e.indexOf("return") >= 0 ? e : "return " + e + ";";
      }, gp([
        Am(0, Ne("loggerFactory"))
      ], t.prototype, "setBeans", null), t = gp([
        j("expressionService")
      ], t), t;
    }(H)
  );
  var Pm = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Tm = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, mp = (
    /** @class */
    function(n) {
      Pm(t, n);
      function t() {
        var e = n !== null && n.apply(this, arguments) || this;
        return e.templateCache = {}, e.waitingCallbacks = {}, e;
      }
      return t.prototype.getTemplate = function(e, r) {
        var o = this.templateCache[e];
        if (o)
          return o;
        var i = this.waitingCallbacks[e], s = this;
        if (!i) {
          i = [], this.waitingCallbacks[e] = i;
          var a = new XMLHttpRequest();
          a.onload = function() {
            s.handleHttpResult(this, e);
          }, a.open("GET", e), a.send();
        }
        return r && i.push(r), null;
      }, t.prototype.handleHttpResult = function(e, r) {
        if (e.status !== 200 || e.response === null) {
          console.warn("AG Grid: Unable to get template error " + e.status + " - " + r);
          return;
        }
        this.templateCache[r] = e.response || e.responseText;
        for (var o = this.waitingCallbacks[r], i = 0; i < o.length; i++) {
          var s = o[i];
          s();
        }
      }, t = Tm([
        j("templateService")
      ], t), t;
    }(H)
  );
  var Dm = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), yp = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, bm = function(n, t) {
    return function(e, r) {
      t(e, r, n);
    };
  }, Cp = (
    /** @class */
    function(n) {
      Dm(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.setBeans = function(e) {
        this.logging = e.isDebug();
      }, t.prototype.create = function(e) {
        return new en(e, this.isLogging.bind(this));
      }, t.prototype.isLogging = function() {
        return this.logging;
      }, yp([
        bm(0, Ne("gridOptionsWrapper"))
      ], t.prototype, "setBeans", null), t = yp([
        j("loggerFactory")
      ], t), t;
    }(H)
  ), en = (
    /** @class */
    function() {
      function n(t, e) {
        this.name = t, this.isLoggingFunc = e;
      }
      return n.prototype.isLogging = function() {
        return this.isLoggingFunc();
      }, n.prototype.log = function(t) {
        this.isLoggingFunc() && console.log("AG Grid." + this.name + ": " + t);
      }, n;
    }()
  );
  var Fm = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Rr = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, wp = (
    /** @class */
    function(n) {
      Fm(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.setComp = function(e, r, o) {
        var i = this;
        this.view = e, this.eGridHostDiv = r, this.eGui = o, this.mouseEventService.stampTopLevelGridCompWithGridInstance(r), this.createManagedBean(new bs(this.view)), this.addRtlSupport(), this.addManagedListener(this, m.EVENT_KEYBOARD_FOCUS, function() {
          i.view.addOrRemoveKeyboardFocusClass(!0);
        }), this.addManagedListener(this, m.EVENT_MOUSE_FOCUS, function() {
          i.view.addOrRemoveKeyboardFocusClass(!1);
        });
        var s = this.resizeObserverService.observeResize(this.eGridHostDiv, this.onGridSizeChanged.bind(this));
        this.addDestroyFunc(function() {
          return s();
        }), this.ctrlsService.registerGridCtrl(this);
      }, t.prototype.isDetailGrid = function() {
        var e, r, o = this.focusService.findTabbableParent(this.getGui());
        return ((r = (e = o) === null || e === void 0 ? void 0 : e.getAttribute("row-id")) === null || r === void 0 ? void 0 : r.startsWith("detail")) || !1;
      }, t.prototype.showDropZones = function() {
        return oe.isRegistered(c.ModuleNames.RowGroupingModule);
      }, t.prototype.showSideBar = function() {
        return oe.isRegistered(c.ModuleNames.SideBarModule);
      }, t.prototype.showStatusBar = function() {
        return oe.isRegistered(c.ModuleNames.StatusBarModule);
      }, t.prototype.showWatermark = function() {
        return oe.isRegistered(c.ModuleNames.EnterpriseCoreModule);
      }, t.prototype.onGridSizeChanged = function() {
        var e = {
          type: m.EVENT_GRID_SIZE_CHANGED,
          api: this.gridApi,
          columnApi: this.columnApi,
          clientWidth: this.eGridHostDiv.clientWidth,
          clientHeight: this.eGridHostDiv.clientHeight
        };
        this.eventService.dispatchEvent(e);
      }, t.prototype.addRtlSupport = function() {
        var e = this.gridOptionsWrapper.isEnableRtl() ? "ag-rtl" : "ag-ltr";
        this.view.setRtlClass(e);
      }, t.prototype.destroyGridUi = function() {
        this.view.destroyGridUi();
      }, t.prototype.getGui = function() {
        return this.eGui;
      }, t.prototype.setResizeCursor = function(e) {
        this.view.setCursor(e ? "ew-resize" : null);
      }, t.prototype.disableUserSelect = function(e) {
        this.view.setUserSelect(e ? "none" : null);
      }, t.prototype.focusNextInnerContainer = function(e) {
        var r = this.gridOptionsWrapper.getDocument(), o = this.view.getFocusableContainers(), i = o.findIndex(function(a) {
          return a.contains(r.activeElement);
        }), s = i + (e ? -1 : 1);
        return s <= 0 || s >= o.length ? !1 : this.focusService.focusInto(o[s]);
      }, t.prototype.focusInnerElement = function(e) {
        var r = this.view.getFocusableContainers();
        if (e) {
          if (r.length > 1)
            return this.focusService.focusInto(M(r), !0);
          var o = M(this.columnModel.getAllDisplayedColumns());
          if (this.focusService.focusGridView(o, !0))
            return !0;
        }
        return this.focusService.focusFirstHeader();
      }, t.prototype.forceFocusOutOfContainer = function(e) {
        e === void 0 && (e = !1), this.view.forceFocusOutOfContainer(e);
      }, Rr([
        h("columnApi")
      ], t.prototype, "columnApi", void 0), Rr([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), Rr([
        h("focusService")
      ], t.prototype, "focusService", void 0), Rr([
        h("resizeObserverService")
      ], t.prototype, "resizeObserverService", void 0), Rr([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), Rr([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), Rr([
        h("mouseEventService")
      ], t.prototype, "mouseEventService", void 0), t;
    }(H)
  );
  var Lm = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Jo = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Ep = (
    /** @class */
    function(n) {
      Lm(t, n);
      function t(e) {
        var r = n.call(this, void 0) || this;
        return r.eGridDiv = e, r;
      }
      return t.prototype.postConstruct = function() {
        var e = this;
        this.logger = this.loggerFactory.create("GridComp");
        var r = {
          destroyGridUi: function() {
            return e.destroyBean(e);
          },
          setRtlClass: function(i) {
            return e.addCssClass(i);
          },
          addOrRemoveKeyboardFocusClass: function(i) {
            return e.addOrRemoveCssClass(Zr.AG_KEYBOARD_FOCUS, i);
          },
          forceFocusOutOfContainer: this.forceFocusOutOfContainer.bind(this),
          updateLayoutClasses: this.updateLayoutClasses.bind(this),
          getFocusableContainers: this.getFocusableContainers.bind(this),
          setUserSelect: function(i) {
            e.getGui().style.userSelect = i ?? "", e.getGui().style.webkitUserSelect = i ?? "";
          },
          setCursor: function(i) {
            e.getGui().style.cursor = i ?? "";
          }
        };
        this.ctrl = this.createManagedBean(new wp());
        var o = this.createTemplate();
        this.setTemplate(o), this.ctrl.setComp(r, this.eGridDiv, this.getGui()), this.insertGridIntoDom(), this.initialiseTabGuard({
          // we want to override the default behaviour to do nothing for onTabKeyDown
          onTabKeyDown: function() {
          },
          focusInnerElement: function(i) {
            return e.ctrl.focusInnerElement(i);
          }
        });
      }, t.prototype.insertGridIntoDom = function() {
        var e = this, r = this.getGui();
        this.eGridDiv.appendChild(r), this.addDestroyFunc(function() {
          e.eGridDiv.removeChild(r), e.logger.log("Grid removed from DOM");
        });
      }, t.prototype.updateLayoutClasses = function(e, r) {
        var o = this.eRootWrapperBody.classList;
        o.toggle(c.LayoutCssClasses.AUTO_HEIGHT, r.autoHeight), o.toggle(c.LayoutCssClasses.NORMAL, r.normal), o.toggle(c.LayoutCssClasses.PRINT, r.print), this.addOrRemoveCssClass(c.LayoutCssClasses.AUTO_HEIGHT, r.autoHeight), this.addOrRemoveCssClass(c.LayoutCssClasses.NORMAL, r.normal), this.addOrRemoveCssClass(c.LayoutCssClasses.PRINT, r.print);
      }, t.prototype.createTemplate = function() {
        var e = this.ctrl.showDropZones() ? "<ag-grid-header-drop-zones></ag-grid-header-drop-zones>" : "", r = this.ctrl.showSideBar() ? '<ag-side-bar ref="sideBar"></ag-side-bar>' : "", o = this.ctrl.showStatusBar() ? '<ag-status-bar ref="statusBar"></ag-status-bar>' : "", i = this.ctrl.showWatermark() ? "<ag-watermark></ag-watermark>" : "", s = (
          /* html */
          `<div class="ag-root-wrapper">
                ` + e + `
                <div class="ag-root-wrapper-body" ref="rootWrapperBody">
                    <ag-grid-body ref="gridBody"></ag-grid-body>
                    ` + r + `
                </div>
                ` + o + `
                <ag-pagination></ag-pagination>
                ` + i + `
            </div>`
        );
        return s;
      }, t.prototype.getFocusableElement = function() {
        return this.eRootWrapperBody;
      }, t.prototype.getFocusableContainers = function() {
        var e = [
          this.gridBodyComp.getGui()
        ];
        return this.sideBarComp && e.push(this.sideBarComp.getGui()), e.filter(function(r) {
          return Br(r);
        });
      }, Jo([
        h("loggerFactory")
      ], t.prototype, "loggerFactory", void 0), Jo([
        I("gridBody")
      ], t.prototype, "gridBodyComp", void 0), Jo([
        I("sideBar")
      ], t.prototype, "sideBarComp", void 0), Jo([
        I("rootWrapperBody")
      ], t.prototype, "eRootWrapperBody", void 0), Jo([
        B
      ], t.prototype, "postConstruct", null), t;
    }(Yo)
  );
  var Mm = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), tn = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Rp = (
    /** @class */
    function(n) {
      Mm(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      e = t, t.prototype.progressSort = function(r, o, i) {
        var s = this.getNextSortDirection(r);
        this.setSortForColumn(r, s, o, i);
      }, t.prototype.setSortForColumn = function(r, o, i, s) {
        o !== E.SORT_ASC && o !== E.SORT_DESC && (o = null), r.setSort(o, s);
        var a = (i || this.gridOptionsWrapper.isAlwaysMultiSort()) && !this.gridOptionsWrapper.isSuppressMultiSort();
        a || this.clearSortBarThisColumn(r, s), this.updateSortIndex(r), this.dispatchSortChangedEvents(s);
      }, t.prototype.updateSortIndex = function(r) {
        var o = this.getColumnsWithSortingOrdered(), i = 0;
        o.forEach(function(a) {
          a !== r && (a.setSortIndex(i), i++);
        }), r.getSort() && r.setSortIndex(i);
        var s = this.columnModel.getPrimaryAndSecondaryAndAutoColumns();
        s.filter(function(a) {
          return a.getSort() == null;
        }).forEach(function(a) {
          return a.setSortIndex();
        });
      }, t.prototype.onSortChanged = function(r) {
        this.dispatchSortChangedEvents(r);
      }, t.prototype.isSortActive = function() {
        var r = this.columnModel.getPrimaryAndSecondaryAndAutoColumns(), o = r.filter(function(i) {
          return !!i.getSort();
        });
        return o && o.length > 0;
      }, t.prototype.dispatchSortChangedEvents = function(r) {
        var o = {
          type: m.EVENT_SORT_CHANGED,
          api: this.gridApi,
          columnApi: this.columnApi,
          source: r
        };
        this.eventService.dispatchEvent(o);
      }, t.prototype.clearSortBarThisColumn = function(r, o) {
        this.columnModel.getPrimaryAndSecondaryAndAutoColumns().forEach(function(i) {
          i !== r && i.setSort(void 0, o);
        });
      }, t.prototype.getNextSortDirection = function(r) {
        var o;
        if (r.getColDef().sortingOrder ? o = r.getColDef().sortingOrder : this.gridOptionsWrapper.getSortingOrder() ? o = this.gridOptionsWrapper.getSortingOrder() : o = e.DEFAULT_SORTING_ORDER, !Array.isArray(o) || o.length <= 0)
          return console.warn("AG Grid: sortingOrder must be an array with at least one element, currently it's " + o), null;
        var i = o.indexOf(r.getSort()), s = i < 0, a = i == o.length - 1, l;
        return s || a ? l = o[0] : l = o[i + 1], e.DEFAULT_SORTING_ORDER.indexOf(l) < 0 ? (console.warn("AG Grid: invalid sort type " + l), null) : l;
      }, t.prototype.getColumnsWithSortingOrdered = function() {
        var r = this.columnModel.getPrimaryAndSecondaryAndAutoColumns(), o = r.filter(function(s) {
          return !!s.getSort();
        }), i = {};
        return r.forEach(function(s, a) {
          return i[s.getId()] = a;
        }), o.sort(function(s, a) {
          var l = s.getSortIndex(), u = a.getSortIndex();
          if (l != null && u != null)
            return l - u;
          if (l == null && u == null) {
            var p = i[s.getId()], d = i[a.getId()];
            return p > d ? 1 : -1;
          } else return u == null ? -1 : 1;
        }), o;
      }, t.prototype.getSortModel = function() {
        return this.getColumnsWithSortingOrdered().map(function(r) {
          return {
            sort: r.getSort(),
            colId: r.getId()
          };
        });
      }, t.prototype.getSortOptions = function() {
        return this.getColumnsWithSortingOrdered().map(function(r) {
          return {
            sort: r.getSort(),
            column: r
          };
        });
      };
      var e;
      return t.DEFAULT_SORTING_ORDER = [E.SORT_ASC, E.SORT_DESC, null], tn([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), tn([
        h("columnApi")
      ], t.prototype, "columnApi", void 0), tn([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), t = e = tn([
        j("sortController")
      ], t), t;
    }(H)
  );
  var Im = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Qs = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Nm = (
    /** @class */
    function(n) {
      Im(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.setMouseOver = function(e) {
        this.selectedColumns = e;
        var r = {
          type: m.EVENT_COLUMN_HOVER_CHANGED,
          api: this.gridApi,
          columnApi: this.columnApi
        };
        this.eventService.dispatchEvent(r);
      }, t.prototype.clearMouseOver = function() {
        this.selectedColumns = null;
        var e = {
          type: m.EVENT_COLUMN_HOVER_CHANGED,
          api: this.gridApi,
          columnApi: this.columnApi
        };
        this.eventService.dispatchEvent(e);
      }, t.prototype.isHovered = function(e) {
        return !!this.selectedColumns && this.selectedColumns.indexOf(e) >= 0;
      }, Qs([
        h("columnApi")
      ], t.prototype, "columnApi", void 0), Qs([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), t = Qs([
        j("columnHoverService")
      ], t), t;
    }(H)
  );
  var xm = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Zs = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Gm = (
    /** @class */
    function(n) {
      xm(t, n);
      function t() {
        var e = n !== null && n.apply(this, arguments) || this;
        return e.executeNextFuncs = [], e.executeLaterFuncs = [], e.active = !1, e.animationThreadCount = 0, e;
      }
      return t.prototype.postConstruct = function() {
        var e = this;
        this.ctrlsService.whenReady(function(r) {
          return e.gridBodyCtrl = r.gridBodyCtrl;
        });
      }, t.prototype.isActive = function() {
        return this.active;
      }, t.prototype.start = function() {
        this.active || this.gridOptionsWrapper.isSuppressColumnMoveAnimation() || this.gridOptionsWrapper.isEnableRtl() || (this.ensureAnimationCssClassPresent(), this.active = !0);
      }, t.prototype.finish = function() {
        this.active && (this.flush(), this.active = !1);
      }, t.prototype.executeNextVMTurn = function(e) {
        this.active ? this.executeNextFuncs.push(e) : e();
      }, t.prototype.executeLaterVMTurn = function(e) {
        this.active ? this.executeLaterFuncs.push(e) : e();
      }, t.prototype.ensureAnimationCssClassPresent = function() {
        var e = this;
        this.animationThreadCount++;
        var r = this.animationThreadCount;
        this.gridBodyCtrl.setColumnMovingCss(!0), this.executeLaterFuncs.push(function() {
          e.animationThreadCount === r && e.gridBodyCtrl.setColumnMovingCss(!1);
        });
      }, t.prototype.flush = function() {
        var e = this.executeNextFuncs;
        this.executeNextFuncs = [];
        var r = this.executeLaterFuncs;
        this.executeLaterFuncs = [], !(e.length === 0 && r.length === 0) && (window.setTimeout(function() {
          return e.forEach(function(o) {
            return o();
          });
        }, 0), window.setTimeout(function() {
          return r.forEach(function(o) {
            return o();
          });
        }, 300));
      }, Zs([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), Zs([
        B
      ], t.prototype, "postConstruct", null), t = Zs([
        j("columnAnimationService")
      ], t), t;
    }(H)
  );
  var Hm = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Js = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Vm = (
    /** @class */
    function(n) {
      Hm(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      e = t, t.prototype.createAutoGroupColumns = function(r, o) {
        var i = this, s = [], a = this.gridOptionsWrapper.isTreeData(), l = this.gridOptionsWrapper.isGroupMultiAutoColumn();
        return a && l && (console.warn("AG Grid: you cannot mix groupMultiAutoColumn with treeData, only one column can be used to display groups when doing tree data"), l = !1), l ? o.forEach(function(u, p) {
          s.push(i.createOneAutoGroupColumn(r, u, p));
        }) : s.push(this.createOneAutoGroupColumn(r)), s;
      }, t.prototype.createOneAutoGroupColumn = function(r, o, i) {
        var s = this.generateDefaultColDef(o), a;
        o ? a = E.GROUP_AUTO_COLUMN_ID + "-" + o.getId() : a = e.GROUP_AUTO_COLUMN_BUNDLE_ID;
        var l = this.gridOptionsWrapper.getAutoGroupColumnDef();
        if (Fe(s, l), s = this.columnFactory.mergeColDefs(s), s.colId = a, !this.gridOptionsWrapper.isTreeData()) {
          var u = C(s.field) && C(s.valueGetter) && C(s.filterValueGetter);
          u && (s.filter = !1);
        }
        i && i > 0 && (s.headerCheckboxSelection = !1);
        var p = r.find(function(f) {
          return f.getId() == a;
        });
        if (p)
          return p.setColDef(s, null), this.columnFactory.applyColumnState(p, s), p;
        var d = new A(s, null, a, !0);
        return this.context.createBean(d), d;
      }, t.prototype.generateDefaultColDef = function(r) {
        var o = this.gridOptionsWrapper.getAutoGroupColumnDef(), i = this.gridOptionsWrapper.getLocaleTextFunc(), s = {
          headerName: i("group", "Group")
        }, a = o && (o.cellRenderer || o.cellRendererFramework || o.cellRendererSelector);
        if (a || (s.cellRenderer = "agGroupCellRenderer"), r) {
          var l = r.getColDef();
          Object.assign(s, {
            // cellRendererParams.groupKey: colDefToCopy.field;
            headerName: this.columnModel.getDisplayNameForColumn(r, "header"),
            headerValueGetter: l.headerValueGetter
          }), (l.cellRenderer || l.cellRendererFramework) && Object.assign(s, {
            cellRendererParams: {
              innerRenderer: l.cellRenderer,
              innerRendererFramework: l.cellRendererFramework,
              innerRendererParams: l.cellRendererParams
            }
          }), s.showRowGroup = r.getColId();
        } else
          s.showRowGroup = !0;
        return s;
      };
      var e;
      return t.GROUP_AUTO_COLUMN_BUNDLE_ID = E.GROUP_AUTO_COLUMN_ID, Js([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), Js([
        h("columnFactory")
      ], t.prototype, "columnFactory", void 0), t = e = Js([
        j("autoGroupColService")
      ], t), t;
    }(H)
  );
  var Wm = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), ea = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Bm = (
    /** @class */
    function(n) {
      Wm(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.postConstruct = function() {
        var e = this;
        this.ctrlsService.whenReady(function(r) {
          e.centerRowContainerCon = r.centerRowContainerCtrl, e.addManagedListener(e.eventService, m.EVENT_BODY_HEIGHT_CHANGED, e.onBodyHeightChanged.bind(e)), e.addManagedListener(e.eventService, m.EVENT_SCROLL_VISIBILITY_CHANGED, e.onScrollVisibilityChanged.bind(e)), e.checkPageSize();
        });
      }, t.prototype.notActive = function() {
        return !this.gridOptionsWrapper.isPaginationAutoPageSize();
      }, t.prototype.onScrollVisibilityChanged = function() {
        this.checkPageSize();
      }, t.prototype.onBodyHeightChanged = function() {
        this.checkPageSize();
      }, t.prototype.checkPageSize = function() {
        if (!this.notActive()) {
          var e = this.gridOptionsWrapper.getRowHeightAsNumber(), r = this.centerRowContainerCon.getViewportSizeFeature().getBodyHeight();
          if (r > 0) {
            var o = Math.floor(r / e);
            this.gridOptionsWrapper.setProperty("paginationPageSize", o);
          }
        }
      }, ea([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), ea([
        B
      ], t.prototype, "postConstruct", null), t = ea([
        j("paginationAutoPageSizeService")
      ], t), t;
    }(H)
  );
  var km = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Sp = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, _p = (
    /** @class */
    function(n) {
      km(t, n);
      function t() {
        var e = n !== null && n.apply(this, arguments) || this;
        return e.cacheVersion = 0, e;
      }
      return t.prototype.init = function() {
        this.active = this.gridOptionsWrapper.isValueCache(), this.neverExpires = this.gridOptionsWrapper.isValueCacheNeverExpires();
      }, t.prototype.onDataChanged = function() {
        this.neverExpires || this.expire();
      }, t.prototype.expire = function() {
        this.cacheVersion++;
      }, t.prototype.setValue = function(e, r, o) {
        this.active && (e.__cacheVersion !== this.cacheVersion && (e.__cacheVersion = this.cacheVersion, e.__cacheData = {}), e.__cacheData[r] = o);
      }, t.prototype.getValue = function(e, r) {
        if (!(!this.active || e.__cacheVersion !== this.cacheVersion))
          return e.__cacheData[r];
      }, Sp([
        B
      ], t.prototype, "init", null), t = Sp([
        j("valueCache")
      ], t), t;
    }(H)
  );
  var Um = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), rn = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, jm = (
    /** @class */
    function(n) {
      Um(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.init = function() {
        this.rowModel.getType() === E.ROW_MODEL_TYPE_CLIENT_SIDE && (this.clientSideRowModel = this.rowModel), this.addManagedListener(this.eventService, m.EVENT_CELL_VALUE_CHANGED, this.onCellValueChanged.bind(this));
      }, t.prototype.onCellValueChanged = function(e) {
        e.source !== E.SOURCE_PASTE && this.doChangeDetection(e.node, e.column);
      }, t.prototype.doChangeDetection = function(e, r) {
        if (!this.gridOptionsWrapper.isSuppressChangeDetection()) {
          if (this.clientSideRowModel && !e.isRowPinned()) {
            var o = this.gridOptionsWrapper.isAggregateOnlyChangedColumns(), i = new Yi(o, this.clientSideRowModel.getRootNode());
            i.addParentNode(e.parent, [r]), this.clientSideRowModel.doAggregate(i);
          }
          this.rowRenderer.refreshCells();
        }
      }, rn([
        h("rowModel")
      ], t.prototype, "rowModel", void 0), rn([
        h("rowRenderer")
      ], t.prototype, "rowRenderer", void 0), rn([
        B
      ], t.prototype, "init", null), t = rn([
        j("changeDetectionService")
      ], t), t;
    }(H)
  );
  var zm = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Op = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, $m = (
    /** @class */
    function(n) {
      zm(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.adaptFunction = function(e, r) {
        var o = this.componentMetadataProvider.retrieve(e);
        return o && o.functionAdapter ? o.functionAdapter(r) : null;
      }, t.prototype.adaptCellRendererFunction = function(e) {
        var r = (
          /** @class */
          function() {
            function o() {
            }
            return o.prototype.refresh = function(i) {
              return !1;
            }, o.prototype.getGui = function() {
              return this.eGui;
            }, o.prototype.init = function(i) {
              var s = e(i), a = typeof s;
              if (a === "string" || a === "number" || a === "boolean") {
                this.eGui = xe("<span>" + s + "</span>");
                return;
              }
              if (s == null) {
                this.eGui = xe("<span></span>");
                return;
              }
              this.eGui = s;
            }, o;
          }()
        );
        return r;
      }, t.prototype.doesImplementIComponent = function(e) {
        return e ? e.prototype && "getGui" in e.prototype : !1;
      }, Op([
        h("componentMetadataProvider")
      ], t.prototype, "componentMetadataProvider", void 0), t = Op([
        j("agComponentUtils")
      ], t), t;
    }(H)
  );
  var Km = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), ta = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Ym = (
    /** @class */
    function(n) {
      Km(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.postConstruct = function() {
        this.componentMetaData = {
          dateComponent: {
            mandatoryMethodList: ["getDate", "setDate"],
            optionalMethodList: ["afterGuiAttached", "setInputPlaceholder", "setInputAriaLabel"]
          },
          detailCellRenderer: {
            mandatoryMethodList: [],
            optionalMethodList: ["refresh"],
            functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)
          },
          headerComponent: {
            mandatoryMethodList: [],
            optionalMethodList: ["refresh"]
          },
          headerGroupComponent: {
            mandatoryMethodList: [],
            optionalMethodList: []
          },
          loadingCellRenderer: {
            mandatoryMethodList: [],
            optionalMethodList: []
          },
          loadingOverlayComponent: {
            mandatoryMethodList: [],
            optionalMethodList: []
          },
          noRowsOverlayComponent: {
            mandatoryMethodList: [],
            optionalMethodList: []
          },
          floatingFilterComponent: {
            mandatoryMethodList: ["onParentModelChanged"],
            optionalMethodList: ["afterGuiAttached"]
          },
          floatingFilterWrapperComponent: {
            mandatoryMethodList: [],
            optionalMethodList: []
          },
          cellRenderer: {
            mandatoryMethodList: [],
            optionalMethodList: ["refresh", "afterGuiAttached"],
            functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)
          },
          cellEditor: {
            mandatoryMethodList: ["getValue"],
            optionalMethodList: ["isPopup", "isCancelBeforeStart", "isCancelAfterEnd", "getPopupPosition", "focusIn", "focusOut", "afterGuiAttached"]
          },
          innerRenderer: {
            mandatoryMethodList: [],
            optionalMethodList: ["afterGuiAttached"],
            functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)
          },
          fullWidthCellRenderer: {
            mandatoryMethodList: [],
            optionalMethodList: ["refresh", "afterGuiAttached"],
            functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)
          },
          pinnedRowCellRenderer: {
            mandatoryMethodList: [],
            optionalMethodList: ["refresh", "afterGuiAttached"],
            functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)
          },
          groupRowRenderer: {
            mandatoryMethodList: [],
            optionalMethodList: ["afterGuiAttached"],
            functionAdapter: this.agComponentUtils.adaptCellRendererFunction.bind(this.agComponentUtils)
          },
          filter: {
            mandatoryMethodList: ["isFilterActive", "doesFilterPass", "getModel", "setModel"],
            optionalMethodList: ["afterGuiAttached", "onNewRowsLoaded", "getModelAsString", "onFloatingFilterChanged"]
          },
          filterComponent: {
            mandatoryMethodList: ["isFilterActive", "doesFilterPass", "getModel", "setModel"],
            optionalMethodList: ["afterGuiAttached", "onNewRowsLoaded", "getModelAsString", "onFloatingFilterChanged"]
          },
          statusPanel: {
            mandatoryMethodList: [],
            optionalMethodList: ["afterGuiAttached"]
          },
          toolPanel: {
            mandatoryMethodList: [],
            optionalMethodList: ["refresh", "afterGuiAttached"]
          },
          tooltipComponent: {
            mandatoryMethodList: [],
            optionalMethodList: []
          }
        };
      }, t.prototype.retrieve = function(e) {
        return this.componentMetaData[e];
      }, ta([
        h("agComponentUtils")
      ], t.prototype, "agComponentUtils", void 0), ta([
        B
      ], t.prototype, "postConstruct", null), t = ta([
        j("componentMetadataProvider")
      ], t), t;
    }(H)
  );
  var qm = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Ap = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, ra = 8, Xm = 4, oa = 4, ia = 6, Qm = {
    // this item is required for custom themes
    "ag-theme-custom": {
      headerHeight: 25,
      headerCellMinWidth: 24,
      listItemHeight: Xm * 5,
      rowHeight: 25,
      chartMenuPanelWidth: 220
    },
    "ag-theme-material": {
      headerHeight: ra * 7,
      headerCellMinWidth: 48,
      listItemHeight: ra * 4,
      rowHeight: ra * 6,
      chartMenuPanelWidth: 240
    },
    "ag-theme-balham": {
      headerHeight: oa * 8,
      headerCellMinWidth: 24,
      listItemHeight: oa * 6,
      rowHeight: oa * 7,
      chartMenuPanelWidth: 220
    },
    "ag-theme-alpine": {
      headerHeight: ia * 8,
      headerCellMinWidth: 36,
      listItemHeight: ia * 4,
      rowHeight: ia * 7,
      chartMenuPanelWidth: 240
    }
  }, Pp = {
    headerHeight: ["ag-header-row"],
    headerCellMinWidth: ["ag-header-cell"],
    listItemHeight: ["ag-virtual-list-item"],
    rowHeight: ["ag-row"],
    chartMenuPanelWidth: ["ag-chart-docked-container"]
  }, ei = {}, Tp = (
    /** @class */
    function(n) {
      qm(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.getSassVariable = function(e, r) {
        var o = "ag-theme-" + (e.match("material") ? "material" : e.match("balham") ? "balham" : e.match("alpine") ? "alpine" : "custom"), i = Qm[o][r], s = 0;
        ei[e] || (ei[e] = {});
        var a = ei[e][r];
        if (a != null)
          return a;
        if (Pp[r]) {
          var l = Pp[r], u = document.createElement("div");
          u.classList.add(e), u.style.position = "absolute";
          var p = l.reduce(function(f, v) {
            var y = document.createElement("div");
            return y.style.position = "static", y.classList.add(v), f.appendChild(y), y;
          }, u);
          if (document.body) {
            document.body.appendChild(u);
            var d = r.toLowerCase().indexOf("height") !== -1 ? "height" : "width";
            s = parseInt(window.getComputedStyle(p)[d], 10), document.body.removeChild(u);
          }
        }
        return ei[e][r] = s || i, ei[e][r];
      }, t.prototype.isThemeDark = function() {
        var e = this.getTheme().theme;
        return !!e && e.indexOf("dark") >= 0;
      }, t.prototype.chartMenuPanelWidth = function() {
        var e = this.getTheme().themeFamily;
        return this.getSassVariable(e, "chartMenuPanelWidth");
      }, t.prototype.getTheme = function() {
        for (var e = /\bag-(material|(?:theme-([\w\-]*)))\b/, r = this.eGridDiv, o = null; r && (o = e.exec(r.className), !o); )
          r = r.parentElement || void 0;
        if (!o)
          return {};
        var i = o[0], s = o[2] === void 0;
        if (s) {
          var a = i.replace("ag-", "ag-theme-");
          me(function() {
            return console.warn("AG Grid: As of v19 old theme are no longer provided. Please replace " + i + " with " + a + ".");
          }, "using-old-theme");
        }
        return { theme: i, el: r, themeFamily: i.replace(/-dark$/, "") };
      }, Ap([
        h("eGridDiv")
      ], t.prototype, "eGridDiv", void 0), t = Ap([
        j("environment")
      ], t), t;
    }(H)
  );
  var Zm = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), on = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Jm = function(n, t) {
    return function(e, r) {
      t(e, r, n);
    };
  }, ey = (
    /** @class */
    function(n) {
      Zm(t, n);
      function t() {
        var e = n !== null && n.apply(this, arguments) || this;
        return e.scrollY = 0, e.uiBodyHeight = 0, e;
      }
      return t.prototype.agWire = function(e) {
        this.logger = e.create("RowContainerHeightService");
      }, t.prototype.postConstruct = function() {
        this.addManagedListener(this.eventService, m.EVENT_BODY_HEIGHT_CHANGED, this.updateOffset.bind(this)), this.maxDivHeight = ba(), this.logger.log("maxDivHeight = " + this.maxDivHeight);
      }, t.prototype.isStretching = function() {
        return this.stretching;
      }, t.prototype.getDivStretchOffset = function() {
        return this.divStretchOffset;
      }, t.prototype.updateOffset = function() {
        if (this.stretching) {
          var e = this.ctrlsService.getGridBodyCtrl(), r = e.getScrollFeature().getVScrollPosition().top, o = this.getUiBodyHeight(), i = r !== this.scrollY || o !== this.uiBodyHeight;
          i && (this.scrollY = r, this.uiBodyHeight = o, this.calculateOffset());
        }
      }, t.prototype.calculateOffset = function() {
        this.setUiContainerHeight(this.maxDivHeight), this.pixelsToShave = this.modelHeight - this.uiContainerHeight, this.maxScrollY = this.uiContainerHeight - this.uiBodyHeight;
        var e = this.scrollY / this.maxScrollY, r = e * this.pixelsToShave;
        this.logger.log("Div Stretch Offset = " + r + " (" + this.pixelsToShave + " * " + e + ")"), this.setDivStretchOffset(r);
      }, t.prototype.setUiContainerHeight = function(e) {
        e !== this.uiContainerHeight && (this.uiContainerHeight = e, this.eventService.dispatchEvent({ type: m.EVENT_ROW_CONTAINER_HEIGHT_CHANGED }));
      }, t.prototype.clearOffset = function() {
        this.setUiContainerHeight(this.modelHeight), this.pixelsToShave = 0, this.setDivStretchOffset(0);
      }, t.prototype.setDivStretchOffset = function(e) {
        var r = typeof e == "number" ? Math.floor(e) : null;
        this.divStretchOffset !== r && (this.divStretchOffset = r, this.eventService.dispatchEvent({ type: m.EVENT_HEIGHT_SCALE_CHANGED }));
      }, t.prototype.setModelHeight = function(e) {
        this.modelHeight = e, this.stretching = e != null && this.maxDivHeight > 0 && e > this.maxDivHeight, this.stretching ? this.calculateOffset() : this.clearOffset();
      }, t.prototype.getUiContainerHeight = function() {
        return this.uiContainerHeight;
      }, t.prototype.getRealPixelPosition = function(e) {
        return e - this.divStretchOffset;
      }, t.prototype.getUiBodyHeight = function() {
        var e = this.ctrlsService.getGridBodyCtrl(), r = e.getScrollFeature().getVScrollPosition();
        return r.bottom - r.top;
      }, t.prototype.getScrollPositionForPixel = function(e) {
        if (this.pixelsToShave <= 0)
          return e;
        var r = this.modelHeight - this.getUiBodyHeight(), o = e / r, i = this.maxScrollY * o;
        return i;
      }, on([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), on([
        Jm(0, Ne("loggerFactory"))
      ], t.prototype, "agWire", null), on([
        B
      ], t.prototype, "postConstruct", null), t = on([
        j("rowContainerHeightService")
      ], t), t;
    }(H)
  );
  var ty = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Dp = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, bp = (
    /** @class */
    function(n) {
      ty(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.init = function() {
        this.groupSelectsChildren = this.gridOptionsWrapper.isGroupSelectsChildren(), this.isRowSelectableFunc = this.gridOptionsWrapper.getIsRowSelectableFunc();
      }, t.prototype.updateSelectableAfterGrouping = function(e) {
        if (this.isRowSelectableFunc) {
          var r = function(o) {
            return o.childrenAfterGroup;
          };
          this.recurseDown(e.childrenAfterGroup, r);
        }
      }, t.prototype.recurseDown = function(e, r) {
        var o = this;
        e && e.forEach(function(i) {
          if (i.group) {
            i.hasChildren() && o.recurseDown(r(i), r);
            var s;
            if (o.groupSelectsChildren) {
              var a = (r(i) || []).find(function(l) {
                return l.selectable === !0;
              });
              s = g(a);
            } else
              s = o.isRowSelectableFunc ? o.isRowSelectableFunc(i) : !1;
            i.setRowSelectable(s);
          }
        });
      }, Dp([
        B
      ], t.prototype, "init", null), t = Dp([
        j("selectableService")
      ], t), t;
    }(H)
  );
  var ry = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), ct = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, oy = (
    /** @class */
    function(n) {
      ry(t, n);
      function t() {
        var e = n.call(this) || this;
        return e.previousAndFirstButtonsDisabled = !1, e.nextButtonDisabled = !1, e.lastButtonDisabled = !1, e;
      }
      return t.prototype.postConstruct = function() {
        var e = this, r = this.gridOptionsWrapper.isEnableRtl();
        this.setTemplate(this.getTemplate()), this.btFirst.insertAdjacentElement("afterbegin", be(r ? "last" : "first", this.gridOptionsWrapper)), this.btPrevious.insertAdjacentElement("afterbegin", be(r ? "next" : "previous", this.gridOptionsWrapper)), this.btNext.insertAdjacentElement("afterbegin", be(r ? "previous" : "next", this.gridOptionsWrapper)), this.btLast.insertAdjacentElement("afterbegin", be(r ? "first" : "last", this.gridOptionsWrapper));
        var o = this.gridOptionsWrapper.isPagination(), i = o && !this.gridOptionsWrapper.isSuppressPaginationPanel();
        if (!i) {
          this.setDisplayed(!1);
          return;
        }
        this.addManagedListener(this.eventService, m.EVENT_PAGINATION_CHANGED, this.onPaginationChanged.bind(this)), [
          { el: this.btFirst, fn: this.onBtFirst.bind(this) },
          { el: this.btPrevious, fn: this.onBtPrevious.bind(this) },
          { el: this.btNext, fn: this.onBtNext.bind(this) },
          { el: this.btLast, fn: this.onBtLast.bind(this) }
        ].forEach(function(s) {
          var a = s.el, l = s.fn;
          e.addManagedListener(a, "click", l), e.addManagedListener(a, "keydown", function(u) {
            (u.key === N.ENTER || u.key === N.SPACE) && (u.preventDefault(), l());
          });
        }), this.onPaginationChanged();
      }, t.prototype.onPaginationChanged = function() {
        this.enableOrDisableButtons(), this.updateRowLabels(), this.setCurrentPageLabel(), this.setTotalLabels();
      }, t.prototype.onBtFirst = function() {
        this.previousAndFirstButtonsDisabled || this.paginationProxy.goToFirstPage();
      }, t.prototype.setCurrentPageLabel = function() {
        var e = this.paginationProxy.getTotalPages() > 0, r = this.paginationProxy.getCurrentPage(), o = e ? r + 1 : 0;
        this.lbCurrent.innerHTML = this.formatNumber(o);
      }, t.prototype.formatNumber = function(e) {
        var r = this.gridOptionsWrapper.getPaginationNumberFormatterFunc();
        if (r) {
          var o = { value: e };
          return r(o);
        }
        var i = this.gridOptionsWrapper.getLocaleTextFunc(), s = i("thousandSeparator", ","), a = i("decimalSeparator", ".");
        return is(e, s, a);
      }, t.prototype.getTemplate = function() {
        var e = this.gridOptionsWrapper.getLocaleTextFunc(), r = e("page", "Page"), o = e("to", "to"), i = e("of", "of"), s = e("firstPage", "First Page"), a = e("previousPage", "Previous Page"), l = e("nextPage", "Next Page"), u = e("lastPage", "Last Page"), p = this.getCompId();
        return (
          /* html */
          '<div class="ag-paging-panel ag-unselectable" id="ag-' + p + `">
                <span class="ag-paging-row-summary-panel" role="status">
                    <span id="ag-` + p + `-first-row" ref="lbFirstRowOnPage" class="ag-paging-row-summary-panel-number"></span>
                    <span id="ag-` + p + '-to">' + o + `</span>
                    <span id="ag-` + p + `-last-row" ref="lbLastRowOnPage" class="ag-paging-row-summary-panel-number"></span>
                    <span id="ag-` + p + '-of">' + i + `</span>
                    <span id="ag-` + p + `-row-count" ref="lbRecordCount" class="ag-paging-row-summary-panel-number"></span>
                </span>
                <span class="ag-paging-page-summary-panel" role="presentation">
                    <div ref="btFirst" class="ag-paging-button" role="button" aria-label="` + s + `"></div>
                    <div ref="btPrevious" class="ag-paging-button" role="button" aria-label="` + a + `"></div>
                    <span class="ag-paging-description" role="status">
                        <span id="ag-` + p + '-start-page">' + r + `</span>
                        <span id="ag-` + p + `-start-page-number" ref="lbCurrent" class="ag-paging-number"></span>
                        <span id="ag-` + p + '-of-page">' + i + `</span>
                        <span id="ag-` + p + `-of-page-number" ref="lbTotal" class="ag-paging-number"></span>
                    </span>
                    <div ref="btNext" class="ag-paging-button" role="button" aria-label="` + l + `"></div>
                    <div ref="btLast" class="ag-paging-button" role="button" aria-label="` + u + `"></div>
                </span>
            </div>`
        );
      }, t.prototype.onBtNext = function() {
        this.nextButtonDisabled || this.paginationProxy.goToNextPage();
      }, t.prototype.onBtPrevious = function() {
        this.previousAndFirstButtonsDisabled || this.paginationProxy.goToPreviousPage();
      }, t.prototype.onBtLast = function() {
        this.lastButtonDisabled || this.paginationProxy.goToLastPage();
      }, t.prototype.enableOrDisableButtons = function() {
        var e = this.paginationProxy.getCurrentPage(), r = this.paginationProxy.isLastPageFound(), o = this.paginationProxy.getTotalPages();
        this.previousAndFirstButtonsDisabled = e === 0, this.toggleButtonDisabled(this.btFirst, this.previousAndFirstButtonsDisabled), this.toggleButtonDisabled(this.btPrevious, this.previousAndFirstButtonsDisabled);
        var i = this.isZeroPagesToDisplay(), s = r && e === o - 1;
        this.nextButtonDisabled = s || i, this.lastButtonDisabled = !r || i || e === o - 1, this.toggleButtonDisabled(this.btNext, this.nextButtonDisabled), this.toggleButtonDisabled(this.btLast, this.lastButtonDisabled);
      }, t.prototype.toggleButtonDisabled = function(e, r) {
        Zn(e, r), e.classList.toggle("ag-disabled", r), r ? e.removeAttribute("tabindex") : e.setAttribute("tabindex", "0");
      }, t.prototype.updateRowLabels = function() {
        var e = this.paginationProxy.getCurrentPage(), r = this.paginationProxy.getPageSize(), o = this.paginationProxy.isLastPageFound(), i = this.paginationProxy.isLastPageFound() ? this.paginationProxy.getMasterRowCount() : null, s, a;
        this.isZeroPagesToDisplay() ? s = a = 0 : (s = r * e + 1, a = s + r - 1, o && a > i && (a = i)), this.lbFirstRowOnPage.innerHTML = this.formatNumber(s), this.rowNodeBlockLoader.isLoading() ? this.lbLastRowOnPage.innerHTML = "?" : this.lbLastRowOnPage.innerHTML = this.formatNumber(a);
      }, t.prototype.isZeroPagesToDisplay = function() {
        var e = this.paginationProxy.isLastPageFound(), r = this.paginationProxy.getTotalPages();
        return e && r === 0;
      }, t.prototype.setTotalLabels = function() {
        var e = this.paginationProxy.isLastPageFound(), r = this.paginationProxy.getTotalPages(), o = e ? this.paginationProxy.getMasterRowCount() : null;
        if (o === 1) {
          var i = this.paginationProxy.getRow(0), s = i && i.group && !(i.groupData || i.aggData);
          if (s) {
            this.setTotalLabelsToZero();
            return;
          }
        }
        if (e)
          this.lbTotal.innerHTML = this.formatNumber(r), this.lbRecordCount.innerHTML = this.formatNumber(o);
        else {
          var a = this.gridOptionsWrapper.getLocaleTextFunc()("more", "more");
          this.lbTotal.innerHTML = a, this.lbRecordCount.innerHTML = a;
        }
      }, t.prototype.setTotalLabelsToZero = function() {
        this.lbFirstRowOnPage.innerHTML = this.formatNumber(0), this.lbCurrent.innerHTML = this.formatNumber(0), this.lbLastRowOnPage.innerHTML = this.formatNumber(0), this.lbTotal.innerHTML = this.formatNumber(0), this.lbRecordCount.innerHTML = this.formatNumber(0);
      }, ct([
        h("paginationProxy")
      ], t.prototype, "paginationProxy", void 0), ct([
        h("rowNodeBlockLoader")
      ], t.prototype, "rowNodeBlockLoader", void 0), ct([
        I("btFirst")
      ], t.prototype, "btFirst", void 0), ct([
        I("btPrevious")
      ], t.prototype, "btPrevious", void 0), ct([
        I("btNext")
      ], t.prototype, "btNext", void 0), ct([
        I("btLast")
      ], t.prototype, "btLast", void 0), ct([
        I("lbRecordCount")
      ], t.prototype, "lbRecordCount", void 0), ct([
        I("lbFirstRowOnPage")
      ], t.prototype, "lbFirstRowOnPage", void 0), ct([
        I("lbLastRowOnPage")
      ], t.prototype, "lbLastRowOnPage", void 0), ct([
        I("lbCurrent")
      ], t.prototype, "lbCurrent", void 0), ct([
        I("lbTotal")
      ], t.prototype, "lbTotal", void 0), ct([
        B
      ], t.prototype, "postConstruct", null), t;
    }(le)
  );
  var iy = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), eo = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, to;
  (function(n) {
    n[n.Loading = 0] = "Loading", n[n.NoRows = 1] = "NoRows";
  })(to || (to = {}));
  var ny = (
    /** @class */
    function(n) {
      iy(t, n);
      function t() {
        var e = n.call(this, t.TEMPLATE) || this;
        return e.inProgress = !1, e.destroyRequested = !1, e.manuallyDisplayed = !1, e;
      }
      return t.prototype.updateLayoutClasses = function(e, r) {
        var o = this.eOverlayWrapper.classList;
        o.toggle(c.LayoutCssClasses.AUTO_HEIGHT, r.autoHeight), o.toggle(c.LayoutCssClasses.NORMAL, r.normal), o.toggle(c.LayoutCssClasses.PRINT, r.print);
      }, t.prototype.postConstruct = function() {
        this.createManagedBean(new bs(this)), this.setDisplayed(!1), this.addManagedListener(this.eventService, m.EVENT_ROW_DATA_CHANGED, this.onRowDataChanged.bind(this)), this.addManagedListener(this.eventService, m.EVENT_ROW_DATA_UPDATED, this.onRowDataChanged.bind(this)), this.addManagedListener(this.eventService, m.EVENT_NEW_COLUMNS_LOADED, this.onNewColumnsLoaded.bind(this)), this.gridOptionsWrapper.isRowModelDefault() && !this.gridOptionsWrapper.getRowData() && this.showLoadingOverlay(), this.gridApi.registerOverlayWrapperComp(this);
      }, t.prototype.setWrapperTypeClass = function(e) {
        var r = this.eOverlayWrapper.classList;
        r.toggle("ag-overlay-loading-wrapper", e === to.Loading), r.toggle("ag-overlay-no-rows-wrapper", e === to.NoRows);
      }, t.prototype.showLoadingOverlay = function() {
        if (!this.gridOptionsWrapper.isSuppressLoadingOverlay()) {
          var e = {}, r = this.userComponentFactory.getLoadingOverlayCompDetails(e), o = r.newAgStackInstance();
          this.showOverlay(o, to.Loading);
        }
      }, t.prototype.showNoRowsOverlay = function() {
        if (!this.gridOptionsWrapper.isSuppressNoRowsOverlay()) {
          var e = {}, r = this.userComponentFactory.getNoRowsOverlayCompDetails(e), o = r.newAgStackInstance();
          this.showOverlay(o, to.NoRows);
        }
      }, t.prototype.showOverlay = function(e, r) {
        var o = this;
        this.inProgress || (this.setWrapperTypeClass(r), this.destroyActiveOverlay(), this.inProgress = !0, e && e.then(function(i) {
          o.inProgress = !1, o.eOverlayWrapper.appendChild(i.getGui()), o.activeOverlay = i, o.destroyRequested && (o.destroyRequested = !1, o.destroyActiveOverlay());
        }), this.manuallyDisplayed = this.columnModel.isReady() && !this.paginationProxy.isEmpty(), this.setDisplayed(!0));
      }, t.prototype.destroyActiveOverlay = function() {
        if (this.inProgress) {
          this.destroyRequested = !0;
          return;
        }
        this.activeOverlay && (this.activeOverlay = this.getContext().destroyBean(this.activeOverlay), et(this.eOverlayWrapper));
      }, t.prototype.hideOverlay = function() {
        this.manuallyDisplayed = !1, this.destroyActiveOverlay(), this.setDisplayed(!1);
      }, t.prototype.destroy = function() {
        this.destroyActiveOverlay(), n.prototype.destroy.call(this);
      }, t.prototype.showOrHideOverlay = function() {
        var e = this.paginationProxy.isEmpty(), r = this.gridOptionsWrapper.isSuppressNoRowsOverlay();
        e && !r ? this.showNoRowsOverlay() : this.hideOverlay();
      }, t.prototype.onRowDataChanged = function() {
        this.showOrHideOverlay();
      }, t.prototype.onNewColumnsLoaded = function() {
        this.columnModel.isReady() && !this.paginationProxy.isEmpty() && !this.manuallyDisplayed && this.hideOverlay();
      }, t.TEMPLATE = `
        <div class="ag-overlay" aria-hidden="true">
            <div class="ag-overlay-panel">
                <div class="ag-overlay-wrapper" ref="eOverlayWrapper"></div>
            </div>
        </div>`, eo([
        h("userComponentFactory")
      ], t.prototype, "userComponentFactory", void 0), eo([
        h("paginationProxy")
      ], t.prototype, "paginationProxy", void 0), eo([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), eo([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), eo([
        I("eOverlayWrapper")
      ], t.prototype, "eOverlayWrapper", void 0), eo([
        B
      ], t.prototype, "postConstruct", null), t;
    }(le)
  );
  var sy = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), nn = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Fp = (
    /** @class */
    function(n) {
      sy(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.getFirstRow = function() {
        var e = 0, r;
        return this.pinnedRowModel.getPinnedTopRowCount() ? r = E.PINNED_TOP : this.rowModel.getRowCount() ? (r = null, e = this.paginationProxy.getPageFirstRow()) : this.pinnedRowModel.getPinnedBottomRowCount() && (r = E.PINNED_BOTTOM), r === void 0 ? null : { rowIndex: e, rowPinned: r };
      }, t.prototype.getLastRow = function() {
        var e, r = null, o = this.pinnedRowModel.getPinnedBottomRowCount(), i = this.pinnedRowModel.getPinnedTopRowCount();
        return o ? (r = E.PINNED_BOTTOM, e = o - 1) : this.rowModel.getRowCount() ? (r = null, e = this.paginationProxy.getPageLastRow()) : i && (r = E.PINNED_TOP, e = i - 1), e === void 0 ? null : { rowIndex: e, rowPinned: r };
      }, t.prototype.getRowNode = function(e) {
        switch (e.rowPinned) {
          case E.PINNED_TOP:
            return this.pinnedRowModel.getPinnedTopRowData()[e.rowIndex];
          case E.PINNED_BOTTOM:
            return this.pinnedRowModel.getPinnedBottomRowData()[e.rowIndex];
          default:
            return this.rowModel.getRow(e.rowIndex);
        }
      }, t.prototype.sameRow = function(e, r) {
        return !e && !r ? !0 : e && !r || !e && r ? !1 : e.rowIndex === r.rowIndex && e.rowPinned == r.rowPinned;
      }, t.prototype.before = function(e, r) {
        switch (e.rowPinned) {
          case E.PINNED_TOP:
            if (r.rowPinned !== E.PINNED_TOP)
              return !0;
            break;
          case E.PINNED_BOTTOM:
            if (r.rowPinned !== E.PINNED_BOTTOM)
              return !1;
            break;
          default:
            if (g(r.rowPinned))
              return r.rowPinned !== E.PINNED_TOP;
            break;
        }
        return e.rowIndex < r.rowIndex;
      }, nn([
        h("rowModel")
      ], t.prototype, "rowModel", void 0), nn([
        h("pinnedRowModel")
      ], t.prototype, "pinnedRowModel", void 0), nn([
        h("paginationProxy")
      ], t.prototype, "paginationProxy", void 0), t = nn([
        j("rowPositionUtils")
      ], t), t;
    }(H)
  );
  var ay = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), ly = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Lp = (
    /** @class */
    function(n) {
      ay(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.createId = function(e) {
        var r = e.rowIndex, o = e.rowPinned, i = e.column;
        return this.createIdFromValues(r, i, o);
      }, t.prototype.createIdFromValues = function(e, r, o) {
        return e + "." + (o ?? "null") + "." + r.getId();
      }, t.prototype.equals = function(e, r) {
        var o = e.column === r.column, i = e.rowPinned === r.rowPinned, s = e.rowIndex === r.rowIndex;
        return o && i && s;
      }, t = ly([
        j("cellPositionUtils")
      ], t), t;
    }(H)
  );
  var uy = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), sn = (
    /** @class */
    /* @__PURE__ */ function() {
      function n(t) {
        this.cellValueChanges = t;
      }
      return n;
    }()
  ), na = (
    /** @class */
    function(n) {
      uy(t, n);
      function t(e, r, o) {
        var i = n.call(this, e) || this;
        return i.initialRange = r, i.finalRange = o, i;
      }
      return t;
    }(sn)
  ), Mp = (
    /** @class */
    function() {
      function n(t) {
        this.actionStack = [], this.maxStackSize = t || n.DEFAULT_STACK_SIZE, this.actionStack = new Array(this.maxStackSize);
      }
      return n.prototype.pop = function() {
        return this.actionStack.pop();
      }, n.prototype.push = function(t) {
        var e = t.cellValueChanges && t.cellValueChanges.length > 0;
        e && (this.actionStack.length === this.maxStackSize && this.actionStack.shift(), this.actionStack.push(t));
      }, n.prototype.clear = function() {
        this.actionStack = [];
      }, n.prototype.getCurrentStackSize = function() {
        return this.actionStack.length;
      }, n.DEFAULT_STACK_SIZE = 10, n;
    }()
  );
  var py = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), ir = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, cy = (
    /** @class */
    function(n) {
      py(t, n);
      function t() {
        var e = n !== null && n.apply(this, arguments) || this;
        return e.cellValueChanges = [], e.activeCellEdit = null, e.activeRowEdit = null, e.isPasting = !1, e.isFilling = !1, e.onCellValueChanged = function(r) {
          var o = { column: r.column, rowIndex: r.rowIndex, rowPinned: r.rowPinned }, i = e.activeCellEdit !== null && e.cellPositionUtils.equals(e.activeCellEdit, o), s = e.activeRowEdit !== null && e.rowPositionUtils.sameRow(e.activeRowEdit, o), a = i || s || e.isPasting || e.isFilling;
          if (a) {
            var l = r.rowPinned, u = r.rowIndex, p = r.column, d = r.oldValue, f = r.value, v = {
              rowPinned: l,
              rowIndex: u,
              columnId: p.getColId(),
              newValue: f,
              oldValue: d
            };
            e.cellValueChanges.push(v);
          }
        }, e.clearStacks = function() {
          e.undoStack.clear(), e.redoStack.clear();
        }, e;
      }
      return t.prototype.init = function() {
        if (this.gridOptionsWrapper.isUndoRedoCellEditing()) {
          var e = this.gridOptionsWrapper.getUndoRedoCellEditingLimit();
          e <= 0 || (this.undoStack = new Mp(e), this.redoStack = new Mp(e), this.addRowEditingListeners(), this.addCellEditingListeners(), this.addPasteListeners(), this.addFillListeners(), this.addManagedListener(this.eventService, m.EVENT_CELL_VALUE_CHANGED, this.onCellValueChanged), this.addManagedListener(this.eventService, m.EVENT_MODEL_UPDATED, this.clearStacks), this.addManagedListener(this.eventService, m.EVENT_COLUMN_PIVOT_MODE_CHANGED, this.clearStacks), this.addManagedListener(this.eventService, m.EVENT_NEW_COLUMNS_LOADED, this.clearStacks), this.addManagedListener(this.eventService, m.EVENT_COLUMN_GROUP_OPENED, this.clearStacks), this.addManagedListener(this.eventService, m.EVENT_COLUMN_ROW_GROUP_CHANGED, this.clearStacks), this.addManagedListener(this.eventService, m.EVENT_COLUMN_MOVED, this.clearStacks), this.addManagedListener(this.eventService, m.EVENT_COLUMN_PINNED, this.clearStacks), this.addManagedListener(this.eventService, m.EVENT_COLUMN_VISIBLE, this.clearStacks), this.addManagedListener(this.eventService, m.EVENT_ROW_DRAG_END, this.clearStacks));
        }
      }, t.prototype.getCurrentUndoStackSize = function() {
        return this.undoStack ? this.undoStack.getCurrentStackSize() : 0;
      }, t.prototype.getCurrentRedoStackSize = function() {
        return this.redoStack ? this.redoStack.getCurrentStackSize() : 0;
      }, t.prototype.undo = function() {
        if (this.undoStack) {
          var e = this.undoStack.pop();
          !e || !e.cellValueChanges || (this.processAction(e, function(r) {
            return r.oldValue;
          }), e instanceof na ? this.processRangeAndCellFocus(e.cellValueChanges, e.initialRange) : this.processRangeAndCellFocus(e.cellValueChanges), this.redoStack.push(e));
        }
      }, t.prototype.redo = function() {
        if (this.redoStack) {
          var e = this.redoStack.pop();
          !e || !e.cellValueChanges || (this.processAction(e, function(r) {
            return r.newValue;
          }), e instanceof na ? this.processRangeAndCellFocus(e.cellValueChanges, e.finalRange) : this.processRangeAndCellFocus(e.cellValueChanges), this.undoStack.push(e));
        }
      }, t.prototype.processAction = function(e, r) {
        var o = this;
        e.cellValueChanges.forEach(function(i) {
          var s = i.rowIndex, a = i.rowPinned, l = i.columnId, u = { rowIndex: s, rowPinned: a }, p = o.getRowNode(u);
          p.displayed && p.setDataValue(l, r(i));
        });
      }, t.prototype.processRangeAndCellFocus = function(e, r) {
        var o;
        if (r) {
          var i = r.startRow, s = r.endRow;
          o = {
            rowPinned: i.rowPinned,
            rowIndex: i.rowIndex,
            columnId: r.startColumn.getColId()
          }, this.setLastFocusedCell(o);
          var a = {
            rowStartIndex: i.rowIndex,
            rowStartPinned: i.rowPinned,
            rowEndIndex: s.rowIndex,
            rowEndPinned: s.rowPinned,
            columnStart: r.startColumn,
            columns: r.columns
          };
          this.gridApi.addCellRange(a);
          return;
        }
        var l = e[0], u = l.rowIndex, p = l.rowPinned, d = { rowIndex: u, rowPinned: p }, f = this.getRowNode(d);
        o = {
          rowPinned: l.rowPinned,
          rowIndex: f.rowIndex,
          columnId: l.columnId
        }, this.setLastFocusedCell(o);
      }, t.prototype.setLastFocusedCell = function(e) {
        var r = e.rowIndex, o = e.columnId, i = e.rowPinned;
        this.gridApi.ensureIndexVisible(r), this.gridApi.ensureColumnVisible(o), oe.isRegistered(c.ModuleNames.RangeSelectionModule) && this.gridApi.clearRangeSelection(), this.focusService.setFocusedCell(r, o, i, !0);
      }, t.prototype.addRowEditingListeners = function() {
        var e = this;
        this.addManagedListener(this.eventService, m.EVENT_ROW_EDITING_STARTED, function(r) {
          e.activeRowEdit = { rowIndex: r.rowIndex, rowPinned: r.rowPinned };
        }), this.addManagedListener(this.eventService, m.EVENT_ROW_EDITING_STOPPED, function() {
          var r = new sn(e.cellValueChanges);
          e.pushActionsToUndoStack(r), e.activeRowEdit = null;
        });
      }, t.prototype.addCellEditingListeners = function() {
        var e = this;
        this.addManagedListener(this.eventService, m.EVENT_CELL_EDITING_STARTED, function(r) {
          e.activeCellEdit = { column: r.column, rowIndex: r.rowIndex, rowPinned: r.rowPinned };
        }), this.addManagedListener(this.eventService, m.EVENT_CELL_EDITING_STOPPED, function() {
          e.activeCellEdit = null;
          var r = !e.activeRowEdit && !e.isPasting && !e.isFilling;
          if (r) {
            var o = new sn(e.cellValueChanges);
            e.pushActionsToUndoStack(o);
          }
        });
      }, t.prototype.addPasteListeners = function() {
        var e = this;
        this.addManagedListener(this.eventService, m.EVENT_PASTE_START, function() {
          e.isPasting = !0;
        }), this.addManagedListener(this.eventService, m.EVENT_PASTE_END, function() {
          var r = new sn(e.cellValueChanges);
          e.pushActionsToUndoStack(r), e.isPasting = !1;
        });
      }, t.prototype.addFillListeners = function() {
        var e = this;
        this.addManagedListener(this.eventService, m.EVENT_FILL_START, function() {
          e.isFilling = !0;
        }), this.addManagedListener(this.eventService, m.EVENT_FILL_END, function(r) {
          var o = new na(e.cellValueChanges, r.initialRange, r.finalRange);
          e.pushActionsToUndoStack(o), e.isFilling = !1;
        });
      }, t.prototype.pushActionsToUndoStack = function(e) {
        this.undoStack.push(e), this.cellValueChanges = [], this.redoStack.clear();
      }, t.prototype.getRowNode = function(e) {
        switch (e.rowPinned) {
          case E.PINNED_TOP:
            return this.pinnedRowModel.getPinnedTopRowData()[e.rowIndex];
          case E.PINNED_BOTTOM:
            return this.pinnedRowModel.getPinnedBottomRowData()[e.rowIndex];
          default:
            return this.rowModel.getRow(e.rowIndex);
        }
      }, ir([
        h("focusService")
      ], t.prototype, "focusService", void 0), ir([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), ir([
        h("rowModel")
      ], t.prototype, "rowModel", void 0), ir([
        h("pinnedRowModel")
      ], t.prototype, "pinnedRowModel", void 0), ir([
        h("cellPositionUtils")
      ], t.prototype, "cellPositionUtils", void 0), ir([
        h("rowPositionUtils")
      ], t.prototype, "rowPositionUtils", void 0), ir([
        B
      ], t.prototype, "init", null), t = ir([
        j("undoRedoService")
      ], t), t;
    }(H)
  );
  var dy = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), sa = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Ip = (
    /** @class */
    function(n) {
      dy(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.findHeader = function(e, r) {
        var o, i, s;
        if (e.column instanceof We ? (i = "getDisplayedGroup" + r, o = this.columnModel[i](e.column)) : (s = "getDisplayedCol" + r, o = this.columnModel[s](e.column)), o)
          return {
            column: o,
            headerRowIndex: e.headerRowIndex
          };
      }, t.prototype.findColAtEdgeForHeaderRow = function(e, r) {
        var o = this.columnModel.getAllDisplayedColumns(), i = o[r === "start" ? 0 : o.length - 1];
        if (i) {
          var s = this.ctrlsService.getHeaderRowContainerCtrl(i.getPinned()), a = s.getRowType(e);
          if (a == c.HeaderRowType.COLUMN_GROUP) {
            var l = this.columnModel.getColumnGroupAtLevel(i, e);
            return {
              headerRowIndex: e,
              column: l
            };
          }
          return {
            // if type==null, means the header level didn't exist
            headerRowIndex: a == null ? -1 : e,
            column: i
          };
        }
      }, sa([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), sa([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), t = sa([
        j("headerPositionUtils")
      ], t), t;
    }(H)
  );
  var hy = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, fy = (
    /** @class */
    function() {
      function n() {
      }
      return n.prototype.buildColumnDefs = function(t, e, r) {
        var o = this, i = [], s = {};
        return t.forEach(function(a) {
          for (var l = o.createDefFromColumn(a, e, r), u = !0, p = l, d = a.getOriginalParent(); d; ) {
            var f = null;
            if (d.isPadding()) {
              d = d.getOriginalParent();
              continue;
            }
            var v = s[d.getGroupId()];
            if (v) {
              v.children.push(p), u = !1;
              break;
            }
            f = o.createDefFromGroup(d), f && (f.children = [p], s[f.groupId] = f, p = f, d = d.getOriginalParent());
          }
          u && i.push(p);
        }), i;
      }, n.prototype.createDefFromGroup = function(t) {
        var e = ft(t.getColGroupDef(), ["children"]);
        return e && (e.groupId = t.getGroupId()), e;
      }, n.prototype.createDefFromColumn = function(t, e, r) {
        var o = ft(t.getColDef());
        return o.colId = t.getColId(), o.width = t.getActualWidth(), o.rowGroup = t.isRowGroupActive(), o.rowGroupIndex = t.isRowGroupActive() ? e.indexOf(t) : null, o.pivot = t.isPivotActive(), o.pivotIndex = t.isPivotActive() ? r.indexOf(t) : null, o.aggFunc = t.isValueActive() ? t.getAggFunc() : null, o.hide = t.isVisible() ? void 0 : !0, o.pinned = t.isPinned() ? t.getPinned() : null, o.sort = t.getSort() ? t.getSort() : null, o.sortIndex = t.getSortIndex() != null ? t.getSortIndex() : null, o;
      }, n = hy([
        j("columnDefFactory")
      ], n), n;
    }()
  );
  var aa = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, gy = (
    /** @class */
    function() {
      function n() {
      }
      return n.prototype.getInitialRowClasses = function(t) {
        var e = [];
        return g(t.extraCssClass) && e.push(t.extraCssClass), e.push("ag-row"), e.push(t.rowFocused ? "ag-row-focus" : "ag-row-no-focus"), t.fadeRowIn && e.push("ag-opacity-zero"), e.push(t.rowIsEven ? "ag-row-even" : "ag-row-odd"), t.rowNode.isRowPinned() && e.push("ag-row-pinned"), t.rowNode.isSelected() && e.push("ag-row-selected"), t.rowNode.footer && e.push("ag-row-footer"), e.push("ag-row-level-" + t.rowLevel), t.rowNode.stub && e.push("ag-row-loading"), t.fullWidthRow && e.push("ag-full-width-row"), t.expandable && (e.push("ag-row-group"), e.push(t.rowNode.expanded ? "ag-row-group-expanded" : "ag-row-group-contracted")), t.rowNode.dragging && e.push("ag-row-dragging"), Nr(e, this.processClassesFromGridOptions(t.rowNode)), Nr(e, this.preProcessRowClassRules(t.rowNode)), e.push(t.printLayout ? "ag-row-position-relative" : "ag-row-position-absolute"), t.firstRowOnPage && e.push("ag-row-first"), t.lastRowOnPage && e.push("ag-row-last"), t.fullWidthRow && (t.pinned === E.PINNED_LEFT && e.push("ag-cell-last-left-pinned"), t.pinned === E.PINNED_RIGHT && e.push("ag-cell-first-right-pinned")), e;
      }, n.prototype.processClassesFromGridOptions = function(t) {
        var e = [], r = function(l) {
          typeof l == "string" ? e.push(l) : Array.isArray(l) && l.forEach(function(u) {
            return e.push(u);
          });
        }, o = this.gridOptionsWrapper.getRowClass();
        if (o) {
          if (typeof o == "function")
            return console.warn("AG Grid: rowClass should not be a function, please use getRowClass instead"), [];
          r(o);
        }
        var i = this.gridOptionsWrapper.getRowClassFunc();
        if (i) {
          var s = {
            data: t.data,
            node: t,
            rowIndex: t.rowIndex
          }, a = i(s);
          r(a);
        }
        return e;
      }, n.prototype.preProcessRowClassRules = function(t) {
        var e = [];
        return this.processRowClassRules(t, function(r) {
          e.push(r);
        }, function(r) {
        }), e;
      }, n.prototype.processRowClassRules = function(t, e, r) {
        var o = {
          data: t.data,
          node: t,
          rowIndex: t.rowIndex,
          api: this.gridOptionsWrapper.getApi(),
          columnApi: this.gridOptionsWrapper.getColumnApi(),
          context: this.gridOptionsWrapper.getContext()
        };
        this.stylingService.processClassRules(this.gridOptionsWrapper.rowClassRules(), o, e, r);
      }, n.prototype.calculateRowLevel = function(t) {
        return t.group ? t.level : t.parent ? t.parent.level + 1 : 0;
      }, aa([
        h("stylingService")
      ], n.prototype, "stylingService", void 0), aa([
        h("gridOptionsWrapper")
      ], n.prototype, "gridOptionsWrapper", void 0), n = aa([
        j("rowCssClassCalculator")
      ], n), n;
    }()
  );
  var an = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Np = (
    /** @class */
    function() {
      function n() {
      }
      return n.prototype.doFullSort = function(t, e) {
        var r = function(i, s) {
          return { currentPos: s, rowNode: i };
        }, o = t.map(r);
        return o.sort(this.compareRowNodes.bind(this, e)), o.map(function(i) {
          return i.rowNode;
        });
      }, n.prototype.compareRowNodes = function(t, e, r) {
        for (var o = e.rowNode, i = r.rowNode, s = 0, a = t.length; s < a; s++) {
          var l = t[s], u = l.sort === E.SORT_DESC, p = this.getValue(o, l.column), d = this.getValue(i, l.column), f = void 0, v = this.getComparator(l, o);
          v ? f = v(p, d, o, i, u) : f = re.defaultComparator(p, d, this.gridOptionsWrapper.isAccentedSort());
          var y = !isNaN(f);
          if (y && f !== 0)
            return l.sort === E.SORT_ASC ? f : f * -1;
        }
        return e.currentPos - r.currentPos;
      }, n.prototype.getComparator = function(t, e) {
        var r = t.column, o = r.getColDef().comparator;
        if (o != null)
          return o;
        if (e.rowGroupColumn)
          return e.rowGroupColumn.getColDef().comparator;
        if (r.getColDef().showRowGroup) {
          var i = !e.group && r.getColDef().field;
          if (i) {
            var s = this.columnModel.getPrimaryColumn(i);
            if (s)
              return s.getColDef().comparator;
          }
        }
      }, n.prototype.getValue = function(t, e) {
        return this.valueService.getValue(e, t, !1, !1);
      }, an([
        h("gridOptionsWrapper")
      ], n.prototype, "gridOptionsWrapper", void 0), an([
        h("valueService")
      ], n.prototype, "valueService", void 0), an([
        h("columnModel")
      ], n.prototype, "columnModel", void 0), n = an([
        j("rowNodeSorter")
      ], n), n;
    }()
  );
  var vy = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), my = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, xp = (
    /** @class */
    function(n) {
      vy(t, n);
      function t() {
        var r = n !== null && n.apply(this, arguments) || this;
        return r.ready = !1, r.readyCallbacks = [], r;
      }
      e = t, t.prototype.checkReady = function() {
        if (this.ready = this.gridCtrl != null && this.gridBodyCtrl != null && this.centerRowContainerCtrl != null && this.leftRowContainerCtrl != null && this.rightRowContainerCtrl != null && this.bottomCenterRowContainerCtrl != null && this.bottomLeftRowContainerCtrl != null && this.bottomRightRowContainerCtrl != null && this.topCenterRowContainerCtrl != null && this.topLeftRowContainerCtrl != null && this.topRightRowContainerCtrl != null && this.centerHeaderRowContainerCtrl != null && this.leftHeaderRowContainerCtrl != null && this.rightHeaderRowContainerCtrl != null && this.fakeHScrollCtrl != null && this.gridHeaderCtrl != null, this.ready) {
          var r = this.createReadyParams();
          this.readyCallbacks.forEach(function(o) {
            return o(r);
          }), this.readyCallbacks.length = 0;
        }
      }, t.prototype.whenReady = function(r) {
        this.ready ? r(this.createReadyParams()) : this.readyCallbacks.push(r);
      }, t.prototype.createReadyParams = function() {
        return {
          centerRowContainerCtrl: this.centerRowContainerCtrl,
          leftRowContainerCtrl: this.leftRowContainerCtrl,
          rightRowContainerCtrl: this.rightRowContainerCtrl,
          bottomCenterRowContainerCtrl: this.bottomCenterRowContainerCtrl,
          bottomLeftRowContainerCtrl: this.bottomLeftRowContainerCtrl,
          bottomRightRowContainerCtrl: this.bottomRightRowContainerCtrl,
          topCenterRowContainerCtrl: this.topCenterRowContainerCtrl,
          topLeftRowContainerCtrl: this.topLeftRowContainerCtrl,
          topRightRowContainerCtrl: this.topRightRowContainerCtrl,
          centerHeaderRowContainerCtrl: this.centerHeaderRowContainerCtrl,
          leftHeaderRowContainerCtrl: this.leftHeaderRowContainerCtrl,
          rightHeaderRowContainerCtrl: this.rightHeaderRowContainerCtrl,
          fakeHScrollCtrl: this.fakeHScrollCtrl,
          gridBodyCtrl: this.gridBodyCtrl,
          gridCtrl: this.gridCtrl,
          gridHeaderCtrl: this.gridHeaderCtrl
        };
      }, t.prototype.registerFakeHScrollCtrl = function(r) {
        this.fakeHScrollCtrl = r, this.checkReady();
      }, t.prototype.registerGridHeaderCtrl = function(r) {
        this.gridHeaderCtrl = r, this.checkReady();
      }, t.prototype.registerCenterRowContainerCtrl = function(r) {
        this.centerRowContainerCtrl = r, this.checkReady();
      }, t.prototype.registerLeftRowContainerCtrl = function(r) {
        this.leftRowContainerCtrl = r, this.checkReady();
      }, t.prototype.registerRightRowContainerCtrl = function(r) {
        this.rightRowContainerCtrl = r, this.checkReady();
      }, t.prototype.registerTopCenterRowContainerCtrl = function(r) {
        this.topCenterRowContainerCtrl = r, this.checkReady();
      }, t.prototype.registerTopLeftRowContainerCon = function(r) {
        this.topLeftRowContainerCtrl = r, this.checkReady();
      }, t.prototype.registerTopRightRowContainerCtrl = function(r) {
        this.topRightRowContainerCtrl = r, this.checkReady();
      }, t.prototype.registerBottomCenterRowContainerCtrl = function(r) {
        this.bottomCenterRowContainerCtrl = r, this.checkReady();
      }, t.prototype.registerBottomLeftRowContainerCtrl = function(r) {
        this.bottomLeftRowContainerCtrl = r, this.checkReady();
      }, t.prototype.registerBottomRightRowContainerCtrl = function(r) {
        this.bottomRightRowContainerCtrl = r, this.checkReady();
      }, t.prototype.registerHeaderContainer = function(r, o) {
        switch (o) {
          case E.PINNED_LEFT:
            this.leftHeaderRowContainerCtrl = r;
            break;
          case E.PINNED_RIGHT:
            this.rightHeaderRowContainerCtrl = r;
            break;
          default:
            this.centerHeaderRowContainerCtrl = r;
            break;
        }
        this.checkReady();
      }, t.prototype.registerGridBodyCtrl = function(r) {
        this.gridBodyCtrl = r, this.checkReady();
      }, t.prototype.registerGridCtrl = function(r) {
        this.gridCtrl = r, this.checkReady();
      }, t.prototype.getFakeHScrollCtrl = function() {
        return this.fakeHScrollCtrl;
      }, t.prototype.getGridHeaderCtrl = function() {
        return this.gridHeaderCtrl;
      }, t.prototype.getGridCtrl = function() {
        return this.gridCtrl;
      }, t.prototype.getCenterRowContainerCtrl = function() {
        return this.centerRowContainerCtrl;
      }, t.prototype.getTopCenterRowContainerCtrl = function() {
        return this.topCenterRowContainerCtrl;
      }, t.prototype.getBottomCenterRowContainerCtrl = function() {
        return this.bottomCenterRowContainerCtrl;
      }, t.prototype.getGridBodyCtrl = function() {
        return this.gridBodyCtrl;
      }, t.prototype.getHeaderRowContainerCtrls = function() {
        return [this.leftHeaderRowContainerCtrl, this.rightHeaderRowContainerCtrl, this.centerHeaderRowContainerCtrl];
      }, t.prototype.getHeaderRowContainerCtrl = function(r) {
        switch (r) {
          case E.PINNED_LEFT:
            return this.leftHeaderRowContainerCtrl;
          case E.PINNED_RIGHT:
            return this.rightHeaderRowContainerCtrl;
          default:
            return this.centerHeaderRowContainerCtrl;
        }
      };
      var e;
      return t.NAME = "ctrlsService", t = e = my([
        j(e.NAME)
      ], t), t;
    }(H)
  );
  var yy = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Cy = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, wy = (
    /** @class */
    function(n) {
      yy(t, n);
      function t() {
        var e = n !== null && n.apply(this, arguments) || this;
        return e.registry = {}, e;
      }
      return t.prototype.register = function(e) {
        this.registry[e.controllerName] = e.controllerClass;
      }, t.prototype.getInstance = function(e) {
        var r = this.registry[e];
        if (r != null)
          return new r();
      }, t = Cy([
        j("ctrlsFactory")
      ], t), t;
    }(H)
  );
  var Ey = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), ln = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Ry = (
    /** @class */
    function(n) {
      Ey(t, n);
      function t() {
        return n.call(this) || this;
      }
      return t.prototype.setComp = function(e, r, o, i) {
        this.view = e, this.eViewport = o, this.eContainer = i, this.eGui = r, this.addManagedListener(this.eventService, m.EVENT_SCROLL_VISIBILITY_CHANGED, this.onScrollVisibilityChanged.bind(this)), this.onScrollVisibilityChanged();
        var s = this.setFakeHScrollSpacerWidths.bind(this);
        this.addManagedListener(this.eventService, m.EVENT_DISPLAYED_COLUMNS_CHANGED, s), this.addManagedListener(this.eventService, m.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, s), this.addManagedListener(this.gridOptionsWrapper, z.PROP_DOM_LAYOUT, s), this.setFakeHScrollSpacerWidths(), this.invisibleScrollbar && (this.hideAndShowInvisibleScrollAsNeeded(), this.addActiveListenerToggles()), this.ctrlsService.registerFakeHScrollCtrl(this);
      }, t.prototype.addActiveListenerToggles = function() {
        var e = this, r = ["mouseenter", "mousedown", "touchstart"], o = ["mouseleave", "mouseup", "touchend"];
        r.forEach(function(i) {
          return e.addManagedListener(e.eGui, i, function() {
            return e.view.addOrRemoveCssClass("ag-scrollbar-active", !0);
          });
        }), o.forEach(function(i) {
          return e.addManagedListener(e.eGui, i, function() {
            return e.view.addOrRemoveCssClass("ag-scrollbar-active", !1);
          });
        });
      }, t.prototype.postConstruct = function() {
        this.enableRtl = this.gridOptionsWrapper.isEnableRtl(), this.invisibleScrollbar = Ma();
      }, t.prototype.onScrollVisibilityChanged = function() {
        this.setScrollVisible(), this.setFakeHScrollSpacerWidths();
      }, t.prototype.hideAndShowInvisibleScrollAsNeeded = function() {
        var e = this;
        this.addManagedListener(this.eventService, m.EVENT_BODY_SCROLL, function(r) {
          r.direction === "horizontal" && e.view.addOrRemoveCssClass("ag-scrollbar-scrolling", !0);
        }), this.addManagedListener(this.eventService, m.EVENT_BODY_SCROLL_END, function() {
          return e.view.addOrRemoveCssClass("ag-scrollbar-scrolling", !1);
        });
      }, t.prototype.setFakeHScrollSpacerWidths = function() {
        var e = this.scrollVisibleService.isVerticalScrollShowing(), r = this.columnModel.getDisplayedColumnsRightWidth(), o = !this.enableRtl && e, i = this.gridOptionsWrapper.getScrollbarWidth();
        o && (r += i), this.view.setRightSpacerFixedWidth(r), this.view.includeRightSpacerScrollerCss("ag-scroller-corner", r <= i);
        var s = this.columnModel.getDisplayedColumnsLeftWidth(), a = this.enableRtl && e;
        a && (s += i), this.view.setLeftSpacerFixedWidth(s), this.view.includeLeftSpacerScrollerCss("ag-scroller-corner", s <= i);
      }, t.prototype.setScrollVisible = function() {
        var e = this.scrollVisibleService.isHorizontalScrollShowing(), r = this.invisibleScrollbar, o = this.gridOptionsWrapper.isSuppressHorizontalScroll(), i = e && this.gridOptionsWrapper.getScrollbarWidth() || 0, s = i === 0 && r ? 15 : i, a = o ? 0 : s;
        this.view.addOrRemoveCssClass("ag-scrollbar-invisible", r), this.view.setHeight(a), this.view.setViewportHeight(a), this.view.setContainerHeight(a);
      }, t.prototype.getViewport = function() {
        return this.eViewport;
      }, t.prototype.getContainer = function() {
        return this.eContainer;
      }, ln([
        h("scrollVisibleService")
      ], t.prototype, "scrollVisibleService", void 0), ln([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), ln([
        h("ctrlsService")
      ], t.prototype, "ctrlsService", void 0), ln([
        B
      ], t.prototype, "postConstruct", null), t;
    }(H)
  );
  var Sy = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), ti = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, _y = (
    /** @class */
    function(n) {
      Sy(t, n);
      function t() {
        return n.call(this, t.TEMPLATE) || this;
      }
      return t.prototype.postConstruct = function() {
        var e = this, r = {
          addOrRemoveCssClass: function(i, s) {
            return e.addOrRemoveCssClass(i, s);
          },
          setHeight: function(i) {
            return dr(e.getGui(), i);
          },
          setContainerHeight: function(i) {
            return dr(e.eContainer, i);
          },
          setViewportHeight: function(i) {
            return dr(e.eViewport, i);
          },
          setRightSpacerFixedWidth: function(i) {
            return Pt(e.eRightSpacer, i);
          },
          setLeftSpacerFixedWidth: function(i) {
            return Pt(e.eLeftSpacer, i);
          },
          includeLeftSpacerScrollerCss: function(i, s) {
            return e.eLeftSpacer.classList.toggle(i, s);
          },
          includeRightSpacerScrollerCss: function(i, s) {
            return e.eRightSpacer.classList.toggle(i, s);
          }
        }, o = this.createManagedBean(new Ry());
        o.setComp(r, this.getGui(), this.eViewport, this.eContainer), this.createManagedBean(new Ns(function(i) {
          return e.eContainer.style.width = i + "px";
        }));
      }, t.TEMPLATE = `<div class="ag-body-horizontal-scroll" aria-hidden="true">
            <div class="ag-horizontal-left-spacer" ref="eLeftSpacer"></div>
            <div class="ag-body-horizontal-scroll-viewport" ref="eViewport">
                <div class="ag-body-horizontal-scroll-container" ref="eContainer"></div>
            </div>
            <div class="ag-horizontal-right-spacer" ref="eRightSpacer"></div>
        </div>`, ti([
        I("eLeftSpacer")
      ], t.prototype, "eLeftSpacer", void 0), ti([
        I("eRightSpacer")
      ], t.prototype, "eRightSpacer", void 0), ti([
        I("eViewport")
      ], t.prototype, "eViewport", void 0), ti([
        I("eContainer")
      ], t.prototype, "eContainer", void 0), ti([
        B
      ], t.prototype, "postConstruct", null), t;
    }(le)
  );
  var Oy = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), la = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Ay = (
    /** @class */
    function(n) {
      Oy(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.postConstruct = function() {
        var e = this.checkContainerWidths.bind(this);
        this.addManagedListener(this.eventService, m.EVENT_DISPLAYED_COLUMNS_CHANGED, e), this.addManagedListener(this.eventService, m.EVENT_DISPLAYED_COLUMNS_WIDTH_CHANGED, e), this.addManagedListener(this.gridOptionsWrapper, z.PROP_DOM_LAYOUT, e);
      }, t.prototype.checkContainerWidths = function() {
        var e = this.gridOptionsWrapper.getDomLayout() === E.DOM_LAYOUT_PRINT, r = e ? 0 : this.columnModel.getDisplayedColumnsLeftWidth(), o = e ? 0 : this.columnModel.getDisplayedColumnsRightWidth();
        r != this.leftWidth && (this.leftWidth = r, this.eventService.dispatchEvent({ type: m.EVENT_LEFT_PINNED_WIDTH_CHANGED })), o != this.rightWidth && (this.rightWidth = o, this.eventService.dispatchEvent({ type: m.EVENT_RIGHT_PINNED_WIDTH_CHANGED }));
      }, t.prototype.getPinnedRightWidth = function() {
        return this.rightWidth;
      }, t.prototype.getPinnedLeftWidth = function() {
        return this.leftWidth;
      }, la([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), la([
        B
      ], t.prototype, "postConstruct", null), t = la([
        j("pinnedWidthService")
      ], t), t;
    }(H)
  );
  var Py = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), un = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Ty = (
    /** @class */
    function(n) {
      Py(t, n);
      function t() {
        var e = n !== null && n.apply(this, arguments) || this;
        return e.events = [], e;
      }
      return t.prototype.postConstruct = function() {
        this.rowModel.getType() == E.ROW_MODEL_TYPE_CLIENT_SIDE && (this.clientSideRowModel = this.rowModel);
      }, t.prototype.dispatchExpanded = function(e) {
        var r = this;
        if (this.clientSideRowModel == null) {
          this.eventService.dispatchEvent(e);
          return;
        }
        this.events.push(e);
        var o = function() {
          r.clientSideRowModel && r.clientSideRowModel.onRowGroupOpened(), r.events.forEach(function(i) {
            return r.eventService.dispatchEvent(i);
          }), r.events = [];
        };
        this.dispatchExpandedDebounced == null && (this.dispatchExpandedDebounced = this.animationFrameService.debounce(o)), this.dispatchExpandedDebounced();
      }, un([
        h("animationFrameService")
      ], t.prototype, "animationFrameService", void 0), un([
        h("rowModel")
      ], t.prototype, "rowModel", void 0), un([
        B
      ], t.prototype, "postConstruct", null), t = un([
        j("rowNodeEventThrottle")
      ], t), t;
    }(H)
  );
  var Dy = function(n, t) {
    var e = typeof Symbol == "function" && n[Symbol.iterator];
    if (!e) return n;
    var r = e.call(n), o, i = [], s;
    try {
      for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
    } catch (a) {
      s = { error: a };
    } finally {
      try {
        o && !o.done && (e = r.return) && e.call(r);
      } finally {
        if (s) throw s.error;
      }
    }
    return i;
  }, Gp = function() {
    for (var n = [], t = 0; t < arguments.length; t++) n = n.concat(Dy(arguments[t]));
    return n;
  }, by = (
    /** @class */
    function() {
      function n(t, e, r) {
        if (!e) {
          console.error("AG Grid: no gridOptions provided to the grid");
          return;
        }
        this.gridOptions = e, new Hp().create(t, e, function(o) {
          var i = new Ep(t);
          o.createBean(i);
        }, void 0, r);
      }
      return n.prototype.destroy = function() {
        this.gridOptions && this.gridOptions.api && this.gridOptions.api.destroy();
      }, n;
    }()
  ), Hp = (
    /** @class */
    function() {
      function n() {
      }
      return n.prototype.create = function(t, e, r, o, i) {
        var s = this, a = !!e.debug, l = this.getRegisteredModules(i), u = this.createBeansList(e.rowModelType, l), p = this.createProvidedBeans(t, e, i);
        if (u) {
          var d = {
            providedBeanInstances: p,
            beanClasses: u,
            debug: a
          }, f = new en("AG Grid", function() {
            return e.debug;
          }), v = new en("Context", function() {
            return d.debug;
          }), y = new ui(d, v), R = y.getBean("beans");
          this.registerModuleUserComponents(R, l), this.registerStackComponents(R, l), this.registerControllers(R, l), r(y), R.ctrlsService.whenReady(function() {
            s.setColumnsAndData(R), s.dispatchGridReadyEvent(R, e);
            var _ = oe.isRegistered(c.ModuleNames.EnterpriseCoreModule);
            f.log("initialised successfully, enterprise = " + _);
          }), o && o(y);
        }
      }, n.prototype.registerControllers = function(t, e) {
        e.forEach(function(r) {
          r.controllers && r.controllers.forEach(function(o) {
            return t.ctrlsFactory.register(o);
          });
        });
      }, n.prototype.registerStackComponents = function(t, e) {
        var r = this.createAgStackComponentsList(e);
        t.agStackComponentsRegistry.setupComponents(r);
      }, n.prototype.getRegisteredModules = function(t) {
        var e = t ? t.modules : null, r = oe.getRegisteredModules(), o = [], i = {};
        function s(a, l) {
          function u(p) {
            i[p.moduleName] || (i[p.moduleName] = !0, o.push(p), oe.register(p, a));
          }
          u(l), l.dependantModules && l.dependantModules.forEach(s.bind(null, a));
        }
        return e && e.forEach(s.bind(null, !0)), r && r.forEach(s.bind(null, !oe.isPackageBased())), o;
      }, n.prototype.registerModuleUserComponents = function(t, e) {
        var r = this.extractModuleEntity(e, function(o) {
          return o.userComponents ? o.userComponents : [];
        });
        r.forEach(function(o) {
          t.userComponentRegistry.registerDefaultComponent(o.componentName, o.componentClass);
        });
      }, n.prototype.createProvidedBeans = function(t, e, r) {
        var o = r ? r.frameworkOverrides : null;
        C(o) && (o = new up());
        var i = {
          gridOptions: e,
          eGridDiv: t,
          globalEventListener: r ? r.globalEventListener : null,
          frameworkOverrides: o
        };
        return r && r.providedBeanInstances && Object.assign(i, r.providedBeanInstances), i;
      }, n.prototype.createAgStackComponentsList = function(t) {
        var e = [
          { componentName: "AgCheckbox", componentClass: Yr },
          { componentName: "AgRadioButton", componentClass: Ku },
          { componentName: "AgToggleButton", componentClass: Yu },
          { componentName: "AgInputTextField", componentClass: Ks },
          { componentName: "AgInputTextArea", componentClass: qu },
          { componentName: "AgInputNumberField", componentClass: Xu },
          { componentName: "AgInputRange", componentClass: Qu },
          { componentName: "AgSelect", componentClass: gs },
          { componentName: "AgSlider", componentClass: Zu },
          { componentName: "AgAngleSelect", componentClass: Ju },
          { componentName: "AgColorPicker", componentClass: ep },
          { componentName: "AgGridBody", componentClass: su },
          { componentName: "AgHeaderRoot", componentClass: Tu },
          { componentName: "AgPagination", componentClass: oy },
          { componentName: "AgOverlayWrapper", componentClass: ny },
          { componentName: "AgGroupComponent", componentClass: tp },
          { componentName: "AgPanel", componentClass: Ys },
          { componentName: "AgDialog", componentClass: qs },
          { componentName: "AgRowContainer", componentClass: hu },
          { componentName: "AgFakeHorizontalScroll", componentClass: _y }
        ], r = this.extractModuleEntity(t, function(o) {
          return o.agStackComponents ? o.agStackComponents : [];
        });
        return e = e.concat(r), e;
      }, n.prototype.createBeansList = function(t, e) {
        var r = this.getRowModelClass(t, e);
        if (r) {
          var o = [
            r,
            Ms,
            Fp,
            Lp,
            Ip,
            Bm,
            wu,
            Gl,
            $m,
            Ym,
            Lu,
            Bl,
            ey,
            Du,
            ku,
            kl,
            Oa,
            nt,
            z,
            lp,
            dp,
            Ul,
            Sa,
            Au,
            ju,
            Vu,
            vp,
            Ca,
            mp,
            cp,
            pu,
            _p,
            fp,
            Cp,
            _a,
            Gu,
            bu,
            $e,
            hp,
            Zr,
            uu,
            Tp,
            pp,
            Bu,
            $u,
            au,
            Rp,
            Nm,
            Gm,
            bp,
            Vm,
            jm,
            Mu,
            cy,
            Pa,
            fy,
            gy,
            Uu,
            Np,
            xp,
            Ay,
            Ty,
            wy
          ], i = this.extractModuleEntity(e, function(a) {
            return a.beans ? a.beans : [];
          });
          o.push.apply(o, Gp(i));
          var s = [];
          return o.forEach(function(a) {
            s.indexOf(a) < 0 && s.push(a);
          }), s;
        }
      }, n.prototype.extractModuleEntity = function(t, e) {
        return [].concat.apply([], Gp(t.map(e)));
      }, n.prototype.setColumnsAndData = function(t) {
        var e = t.gridOptionsWrapper.getColumnDefs();
        t.columnModel.setColumnDefs(e || [], "gridInitializing"), t.rowModel.start();
      }, n.prototype.dispatchGridReadyEvent = function(t, e) {
        var r = {
          type: m.EVENT_GRID_READY,
          api: e.api,
          columnApi: e.columnApi
        };
        t.eventService.dispatchEvent(r);
      }, n.prototype.getRowModelClass = function(t, e) {
        t || (t = E.ROW_MODEL_TYPE_CLIENT_SIDE);
        var r = {};
        e.forEach(function(i) {
          ie(i.rowModels, function(s, a) {
            r[s] = a;
          });
        });
        var o = r[t];
        if (g(o))
          return o;
        oe.isPackageBased() ? [E.ROW_MODEL_TYPE_VIEWPORT, E.ROW_MODEL_TYPE_SERVER_SIDE].includes(t) ? console.error('AG Grid: Row Model "' + t + `" not found. Please ensure the package 'ag-grid-enterprise' is imported. Please see: https://www.ag-grid.com/javascript-grid/packages/`) : console.error("AG Grid: could not find row model for rowModelType " + t) : t === E.ROW_MODEL_TYPE_INFINITE ? console.error('AG Grid: Row Model "Infinite" not found. Please ensure the ' + c.ModuleNames.InfiniteRowModelModule + " module is registered. Please see: https://www.ag-grid.com/javascript-grid/modules/") : t === E.ROW_MODEL_TYPE_VIEWPORT ? console.error('AG Grid: Row Model "Viewport" not found. Please ensure the AG Grid Enterprise Module ' + c.ModuleNames.ViewportRowModelModule + " module is registered. Please see: https://www.ag-grid.com/javascript-grid/modules/") : t === E.ROW_MODEL_TYPE_SERVER_SIDE ? console.error('AG Grid: Row Model "Server Side" not found. Please ensure the AG Grid Enterprise Module ' + c.ModuleNames.ServerSideRowModelModule + " module is registered. Please see: https://www.ag-grid.com/javascript-grid/modules/") : t === E.ROW_MODEL_TYPE_CLIENT_SIDE ? console.error('AG Grid: Row Model "Client Side" not found. Please ensure the ' + c.ModuleNames.ClientSideRowModelModule + " module is registered. Please see: https://www.ag-grid.com/javascript-grid/modules/") : console.error("AG Grid: could not find row model for rowModelType " + t);
      }, n;
    }()
  );
  function Fy(n, t, e, r, o) {
    o === void 0 && (o = !1), console.warn("AG Grid: Since ag-grid 11.0.0 defaultGroupComparator is not necessary. You can remove this from your colDef");
    var i = g(e) && e.group, s = g(r) && r.group, a = i && s, l = !i && !s;
    return a ? $(e.key, r.key, o) : l ? $(n, t, o) : i ? 1 : -1;
  }
  var Ly = (
    /** @class */
    function() {
      function n() {
      }
      return n.prototype.wrap = function(t, e, r, o) {
        var i = this;
        r === void 0 && (r = []);
        var s = this.createWrapper(t, o);
        return e.forEach(function(a) {
          i.createMethod(s, a, !0);
        }), r.forEach(function(a) {
          i.createMethod(s, a, !1);
        }), s;
      }, n.prototype.unwrap = function(t) {
        return t;
      }, n.prototype.createMethod = function(t, e, r) {
        t.addMethod(e, this.createMethodProxy(t, e, r));
      }, n.prototype.createMethodProxy = function(t, e, r) {
        return function() {
          return t.hasMethod(e) ? t.callMethod(e, arguments) : (r && console.warn("AG Grid: Framework component is missing the method " + e + "()"), null);
        };
      }, n;
    }()
  );
  (function(n) {
    n.InsideBase = "insideBase", n.InsideEnd = "insideEnd", n.Center = "center", n.OutsideEnd = "outsideEnd";
  })(c.BarColumnLabelPlacement || (c.BarColumnLabelPlacement = {}));
  var ro = typeof Xp > "u" ? {} : Xp;
  ro.HTMLElement = typeof HTMLElement > "u" ? {} : HTMLElement, ro.HTMLButtonElement = typeof HTMLButtonElement > "u" ? {} : HTMLButtonElement, ro.HTMLSelectElement = typeof HTMLSelectElement > "u" ? {} : HTMLSelectElement, ro.HTMLInputElement = typeof HTMLInputElement > "u" ? {} : HTMLInputElement, ro.Node = typeof Node > "u" ? {} : Node, ro.MouseEvent = typeof MouseEvent > "u" ? {} : MouseEvent;
  var My = function(n, t) {
    var e = typeof Symbol == "function" && n[Symbol.iterator];
    if (!e) return n;
    var r = e.call(n), o, i = [], s;
    try {
      for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
    } catch (a) {
      s = { error: a };
    } finally {
      try {
        o && !o.done && (e = r.return) && e.call(r);
      } finally {
        if (s) throw s.error;
      }
    }
    return i;
  }, Iy = function() {
    for (var n = [], t = 0; t < arguments.length; t++) n = n.concat(My(arguments[t]));
    return n;
  }, Ny = (
    /** @class */
    function() {
      function n(t, e, r, o, i, s, a, l) {
        this.nextId = 0, this.allNodesMap = {}, this.rootNode = t, this.gridOptionsWrapper = e, this.eventService = r, this.columnModel = o, this.gridApi = i, this.columnApi = s, this.beans = l, this.selectionService = a, this.rootNode.group = !0, this.rootNode.level = -1, this.rootNode.id = n.ROOT_NODE_ID, this.rootNode.allLeafChildren = [], this.rootNode.childrenAfterGroup = [], this.rootNode.childrenAfterSort = [], this.rootNode.childrenAfterAggFilter = [], this.rootNode.childrenAfterFilter = [], this.postConstruct();
      }
      return n.prototype.postConstruct = function() {
        this.suppressParentsInRowNodes = this.gridOptionsWrapper.isSuppressParentsInRowNodes(), this.isRowMasterFunc = this.gridOptionsWrapper.getIsRowMasterFunc(), this.doingTreeData = this.gridOptionsWrapper.isTreeData(), this.doingMasterDetail = this.gridOptionsWrapper.isMasterDetail();
      }, n.prototype.getCopyOfNodesMap = function() {
        return re.cloneObject(this.allNodesMap);
      }, n.prototype.getRowNode = function(t) {
        return this.allNodesMap[t];
      }, n.prototype.setRowData = function(t) {
        var e = this;
        if (typeof t == "string") {
          console.warn("AG Grid: rowData must be an array, however you passed in a string. If you are loading JSON, make sure you convert the JSON string to JavaScript objects first");
          return;
        }
        var r = this.rootNode, o = this.rootNode.sibling;
        r.childrenAfterFilter = null, r.childrenAfterGroup = null, r.childrenAfterAggFilter = null, r.childrenAfterSort = null, r.childrenMapped = null, r.updateHasChildren(), this.nextId = 0, this.allNodesMap = {}, t ? r.allLeafChildren = t.map(function(i) {
          return e.createNode(i, e.rootNode, n.TOP_LEVEL);
        }) : (r.allLeafChildren = [], r.childrenAfterGroup = []), o && (o.childrenAfterFilter = r.childrenAfterFilter, o.childrenAfterGroup = r.childrenAfterGroup, o.childrenAfterAggFilter = r.childrenAfterAggFilter, o.childrenAfterSort = r.childrenAfterSort, o.childrenMapped = r.childrenMapped, o.allLeafChildren = r.allLeafChildren);
      }, n.prototype.updateRowData = function(t, e) {
        var r = {
          remove: [],
          update: [],
          add: []
        }, o = [];
        return this.executeRemove(t, r, o), this.executeUpdate(t, r, o), this.executeAdd(t, r), this.updateSelection(o), e && re.sortRowNodesByOrder(this.rootNode.allLeafChildren, e), r;
      }, n.prototype.updateSelection = function(t) {
        var e = t.length > 0;
        if (e && t.forEach(function(o) {
          o.setSelected(!1, !1, !0);
        }), this.selectionService.updateGroupsFromChildrenSelections(), e) {
          var r = {
            type: m.EVENT_SELECTION_CHANGED,
            api: this.gridApi,
            columnApi: this.columnApi
          };
          this.eventService.dispatchEvent(r);
        }
      }, n.prototype.executeAdd = function(t, e) {
        var r = this, o = t.add, i = t.addIndex;
        if (!re.missingOrEmpty(o)) {
          var s = o.map(function(f) {
            return r.createNode(f, r.rootNode, n.TOP_LEVEL);
          }), a = typeof i == "number" && i >= 0, l, u;
          if (a) {
            var p = this.rootNode.allLeafChildren, d = i === 0 ? 0 : p.reduce(function(f, v, y) {
              var R, _ = v.rowIndex, D = (R = p[f]) === null || R === void 0 ? void 0 : R.rowIndex, P = _ != null && D != null && _ < i && _ > D;
              return P ? y : f;
            }, 0) + 1;
            l = p.slice(0, d), u = p.slice(d, p.length);
          } else
            l = this.rootNode.allLeafChildren, u = [];
          this.rootNode.allLeafChildren = Iy(l, s, u), this.rootNode.sibling && (this.rootNode.sibling.allLeafChildren = this.rootNode.allLeafChildren), e.add = s;
        }
      }, n.prototype.executeRemove = function(t, e, r) {
        var o = this, i = t.remove;
        if (!re.missingOrEmpty(i)) {
          var s = {};
          i.forEach(function(a) {
            var l = o.lookupRowNode(a);
            l && (l.isSelected() && r.push(l), l.clearRowTopAndRowIndex(), s[l.id] = !0, delete o.allNodesMap[l.id], e.remove.push(l));
          }), this.rootNode.allLeafChildren = this.rootNode.allLeafChildren.filter(function(a) {
            return !s[a.id];
          }), this.rootNode.sibling && (this.rootNode.sibling.allLeafChildren = this.rootNode.allLeafChildren);
        }
      }, n.prototype.executeUpdate = function(t, e, r) {
        var o = this, i = t.update;
        re.missingOrEmpty(i) || i.forEach(function(s) {
          var a = o.lookupRowNode(s);
          a && (a.updateData(s), !a.selectable && a.isSelected() && r.push(a), o.setMasterForRow(a, s, n.TOP_LEVEL, !1), e.update.push(a));
        });
      }, n.prototype.lookupRowNode = function(t) {
        var e = this.gridOptionsWrapper.getRowIdFunc(), r;
        if (e) {
          var o = e({ data: t, level: 0 });
          if (r = this.allNodesMap[o], !r)
            return console.error("AG Grid: could not find row id=" + o + ", data item was not found for this id"), null;
        } else if (r = this.rootNode.allLeafChildren.find(function(i) {
          return i.data === t;
        }), !r)
          return console.error("AG Grid: could not find data item as object was not found", t), console.error("Consider using getRowId to help the Grid find matching row data"), null;
        return r || null;
      }, n.prototype.createNode = function(t, e, r) {
        var o = new ue(this.beans);
        return o.group = !1, this.setMasterForRow(o, t, r, !0), e && !this.suppressParentsInRowNodes && (o.parent = e), o.level = r, o.setDataAndId(t, this.nextId.toString()), this.allNodesMap[o.id] && console.warn("AG Grid: duplicate node id '" + o.id + "' detected from getRowId callback, this could cause issues in your grid."), this.allNodesMap[o.id] = o, this.nextId++, o;
      }, n.prototype.setMasterForRow = function(t, e, r, o) {
        if (this.doingTreeData)
          t.setMaster(!1), o && (t.expanded = !1);
        else if (this.doingMasterDetail ? this.isRowMasterFunc ? t.setMaster(this.isRowMasterFunc(e)) : t.setMaster(!0) : t.setMaster(!1), o) {
          var i = this.columnModel.getRowGroupColumns(), s = i ? i.length : 0, a = r + s;
          t.expanded = t.master ? this.isExpanded(a) : !1;
        }
      }, n.prototype.isExpanded = function(t) {
        var e = this.gridOptionsWrapper.getGroupDefaultExpanded();
        return e === -1 ? !0 : t < e;
      }, n.TOP_LEVEL = 0, n.ROOT_NODE_ID = "ROOT_NODE_ID", n;
    }()
  ), xy = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Be = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Mt;
  (function(n) {
    n[n.Normal = 0] = "Normal", n[n.AfterFilter = 1] = "AfterFilter", n[n.AfterFilterAndSort = 2] = "AfterFilterAndSort", n[n.PivotNodes = 3] = "PivotNodes";
  })(Mt || (Mt = {}));
  var Gy = (
    /** @class */
    function(n) {
      xy(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.init = function() {
        var e = this.refreshModel.bind(this, { step: c.ClientSideRowModelSteps.EVERYTHING }), r = !this.gridOptionsWrapper.isSuppressAnimationFrame(), o = this.refreshModel.bind(this, {
          step: c.ClientSideRowModelSteps.EVERYTHING,
          afterColumnsChanged: !0,
          keepRenderedRows: !0,
          animate: r
        });
        this.addManagedListener(this.eventService, m.EVENT_NEW_COLUMNS_LOADED, o), this.addManagedListener(this.eventService, m.EVENT_COLUMN_ROW_GROUP_CHANGED, e), this.addManagedListener(this.eventService, m.EVENT_COLUMN_VALUE_CHANGED, this.onValueChanged.bind(this)), this.addManagedListener(this.eventService, m.EVENT_COLUMN_PIVOT_CHANGED, this.refreshModel.bind(this, { step: c.ClientSideRowModelSteps.PIVOT })), this.addManagedListener(this.eventService, m.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this)), this.addManagedListener(this.eventService, m.EVENT_SORT_CHANGED, this.onSortChanged.bind(this)), this.addManagedListener(this.eventService, m.EVENT_COLUMN_PIVOT_MODE_CHANGED, e);
        var i = this.refreshModel.bind(this, {
          step: c.ClientSideRowModelSteps.MAP,
          keepRenderedRows: !0,
          animate: r
        });
        this.addManagedListener(this.gridOptionsWrapper, z.PROP_GROUP_REMOVE_SINGLE_CHILDREN, i), this.addManagedListener(this.gridOptionsWrapper, z.PROP_GROUP_REMOVE_LOWEST_SINGLE_CHILDREN, i), this.rootNode = new ue(this.beans), this.nodeManager = new Ny(this.rootNode, this.gridOptionsWrapper, this.eventService, this.columnModel, this.gridApi, this.columnApi, this.selectionService, this.beans);
      }, t.prototype.start = function() {
        var e = this.gridOptionsWrapper.getRowData();
        e && this.setRowData(e);
      }, t.prototype.ensureRowHeightsValid = function(e, r, o, i) {
        var s, a = !1;
        do {
          s = !1;
          for (var l = this.getRowIndexAtPixel(e), u = this.getRowIndexAtPixel(r), p = Math.max(l, o), d = Math.min(u, i), f = p; f <= d; f++) {
            var v = this.getRow(f);
            if (v.rowHeightEstimated) {
              var y = this.gridOptionsWrapper.getRowHeightForNode(v);
              v.setRowHeight(y.height), s = !0, a = !0;
            }
          }
          s && this.setRowTopAndRowIndex();
        } while (s);
        return a;
      }, t.prototype.setRowTopAndRowIndex = function() {
        for (var e = this.gridOptionsWrapper.getDefaultRowHeight(), r = 0, o = /* @__PURE__ */ new Set(), i = this.gridOptionsWrapper.getDomLayout() === E.DOM_LAYOUT_NORMAL, s = 0; s < this.rowsToDisplay.length; s++) {
          var a = this.rowsToDisplay[s];
          if (a.id != null && o.add(a.id), a.rowHeight == null) {
            var l = this.gridOptionsWrapper.getRowHeightForNode(a, i, e);
            a.setRowHeight(l.height, l.estimated);
          }
          a.setRowTop(r), a.setRowIndex(s), r += a.rowHeight;
        }
        return o;
      }, t.prototype.clearRowTopAndRowIndex = function(e, r) {
        var o = e.isActive(), i = function(a) {
          a && a.id != null && !r.has(a.id) && a.clearRowTopAndRowIndex();
        }, s = function(a) {
          if (i(a), i(a.detailNode), i(a.sibling), a.hasChildren() && a.childrenAfterGroup) {
            var l = a.level == -1, u = o && !l && !a.expanded;
            u || a.childrenAfterGroup.forEach(s);
          }
        };
        s(this.rootNode);
      }, t.prototype.ensureRowsAtPixel = function(e, r, o) {
        var i = this;
        o === void 0 && (o = 0);
        var s = this.getRowIndexAtPixel(r), a = this.getRow(s), l = !this.gridOptionsWrapper.isSuppressAnimationFrame();
        return a === e[0] ? !1 : (e.forEach(function(u) {
          re.removeFromArray(i.rootNode.allLeafChildren, u);
        }), e.forEach(function(u, p) {
          re.insertIntoArray(i.rootNode.allLeafChildren, u, Math.max(s + o, 0) + p);
        }), this.refreshModel({
          step: c.ClientSideRowModelSteps.EVERYTHING,
          keepRenderedRows: !0,
          keepEditingRows: !0,
          animate: l
        }), !0);
      }, t.prototype.highlightRowAtPixel = function(e, r) {
        var o = r != null ? this.getRowIndexAtPixel(r) : null, i = o != null ? this.getRow(o) : null;
        if (!i || !e || i === e || r == null) {
          this.lastHighlightedRow && (this.lastHighlightedRow.setHighlighted(null), this.lastHighlightedRow = null);
          return;
        }
        var s = this.getHighlightPosition(r, i);
        this.lastHighlightedRow && this.lastHighlightedRow !== i && (this.lastHighlightedRow.setHighlighted(null), this.lastHighlightedRow = null), i.setHighlighted(s), this.lastHighlightedRow = i;
      }, t.prototype.getHighlightPosition = function(e, r) {
        if (!r) {
          var o = this.getRowIndexAtPixel(e);
          if (r = this.getRow(o || 0), !r)
            return c.RowHighlightPosition.Below;
        }
        var i = r.rowTop, s = r.rowHeight;
        return e - i < s / 2 ? c.RowHighlightPosition.Above : c.RowHighlightPosition.Below;
      }, t.prototype.getLastHighlightedRowNode = function() {
        return this.lastHighlightedRow;
      }, t.prototype.isLastRowIndexKnown = function() {
        return !0;
      }, t.prototype.getRowCount = function() {
        return this.rowsToDisplay ? this.rowsToDisplay.length : 0;
      }, t.prototype.getTopLevelRowCount = function() {
        var e = this.rowsToDisplay && this.rowsToDisplay[0] === this.rootNode;
        if (e)
          return 1;
        var r = this.rootNode.childrenAfterAggFilter;
        return r ? r.length : 0;
      }, t.prototype.getTopLevelRowDisplayedIndex = function(e) {
        var r = this.rowsToDisplay && this.rowsToDisplay[0] === this.rootNode;
        if (r)
          return e;
        var o = this.rootNode.childrenAfterSort[e];
        if (this.gridOptionsWrapper.isGroupHideOpenParents())
          for (; o.expanded && o.childrenAfterSort && o.childrenAfterSort.length > 0; )
            o = o.childrenAfterSort[0];
        return o.rowIndex;
      }, t.prototype.getRowBounds = function(e) {
        if (re.missing(this.rowsToDisplay))
          return null;
        var r = this.rowsToDisplay[e];
        return r ? {
          rowTop: r.rowTop,
          rowHeight: r.rowHeight
        } : null;
      }, t.prototype.onRowGroupOpened = function() {
        var e = this.gridOptionsWrapper.isAnimateRows();
        this.refreshModel({ step: c.ClientSideRowModelSteps.MAP, keepRenderedRows: !0, animate: e });
      }, t.prototype.onFilterChanged = function(e) {
        if (!e.afterDataChange) {
          var r = this.gridOptionsWrapper.isAnimateRows(), o = e.columns.length === 0 || e.columns.some(function(s) {
            return s.isPrimary();
          }), i = o ? c.ClientSideRowModelSteps.FILTER : c.ClientSideRowModelSteps.FILTER_AGGREGATES;
          this.refreshModel({ step: i, keepRenderedRows: !0, animate: r });
        }
      }, t.prototype.onSortChanged = function() {
        var e = this.gridOptionsWrapper.isAnimateRows();
        this.refreshModel({ step: c.ClientSideRowModelSteps.SORT, keepRenderedRows: !0, animate: e, keepEditingRows: !0 });
      }, t.prototype.getType = function() {
        return E.ROW_MODEL_TYPE_CLIENT_SIDE;
      }, t.prototype.onValueChanged = function() {
        this.columnModel.isPivotActive() ? this.refreshModel({ step: c.ClientSideRowModelSteps.PIVOT }) : this.refreshModel({ step: c.ClientSideRowModelSteps.AGGREGATE });
      }, t.prototype.createChangePath = function(e) {
        var r = re.missingOrEmpty(e), o = new Yi(!1, this.rootNode);
        return (r || this.gridOptionsWrapper.isTreeData()) && o.setInactive(), o;
      }, t.prototype.isSuppressModelUpdateAfterUpdateTransaction = function(e) {
        if (!this.gridOptionsWrapper.isSuppressModelUpdateAfterUpdateTransaction() || e.rowNodeTransactions == null)
          return !1;
        var r = e.rowNodeTransactions.filter(function(i) {
          return i.add != null && i.add.length > 0 || i.remove != null && i.remove.length > 0;
        }), o = r == null || r.length == 0;
        return o;
      }, t.prototype.refreshModel = function(e) {
        if (!this.isSuppressModelUpdateAfterUpdateTransaction(e)) {
          var r = this.createChangePath(e.rowNodeTransactions);
          switch (e.step) {
            case c.ClientSideRowModelSteps.EVERYTHING:
              this.doRowGrouping(e.groupState, e.rowNodeTransactions, e.rowNodeOrder, r, !!e.afterColumnsChanged);
            case c.ClientSideRowModelSteps.FILTER:
              this.doFilter(r);
            case c.ClientSideRowModelSteps.PIVOT:
              this.doPivot(r);
            case c.ClientSideRowModelSteps.AGGREGATE:
              this.doAggregate(r);
            case c.ClientSideRowModelSteps.FILTER_AGGREGATES:
              this.doFilterAggregates(r);
            case c.ClientSideRowModelSteps.SORT:
              this.doSort(e.rowNodeTransactions, r);
            case c.ClientSideRowModelSteps.MAP:
              this.doRowsToDisplay();
          }
          var o = this.setRowTopAndRowIndex();
          this.clearRowTopAndRowIndex(r, o);
          var i = {
            type: m.EVENT_MODEL_UPDATED,
            api: this.gridApi,
            columnApi: this.columnApi,
            animate: e.animate,
            keepRenderedRows: e.keepRenderedRows,
            newData: e.newData,
            newPage: !1
          };
          this.eventService.dispatchEvent(i);
        }
      }, t.prototype.isEmpty = function() {
        var e = re.missing(this.rootNode.allLeafChildren) || this.rootNode.allLeafChildren.length === 0;
        return re.missing(this.rootNode) || e || !this.columnModel.isReady();
      }, t.prototype.isRowsToRender = function() {
        return re.exists(this.rowsToDisplay) && this.rowsToDisplay.length > 0;
      }, t.prototype.getNodesInRangeForSelection = function(e, r) {
        var o = !r, i = !1, s, a = [], l = this.gridOptionsWrapper.isGroupSelectsChildren();
        return this.forEachNodeAfterFilterAndSort(function(u) {
          var p = o && !i;
          o || (u === r || u === e) && (o = !0);
          var d = u.group && l;
          if (!d) {
            var f = o && !i, v = u.isParentOfNode(s);
            (f || v) && a.push(u);
          }
          p && (u === r || u === e) && (i = !0, u === r ? s = r : s = e);
        }), a;
      }, t.prototype.setDatasource = function(e) {
        console.error("AG Grid: should never call setDatasource on clientSideRowController");
      }, t.prototype.getTopLevelNodes = function() {
        return this.rootNode ? this.rootNode.childrenAfterGroup : null;
      }, t.prototype.getRootNode = function() {
        return this.rootNode;
      }, t.prototype.getRow = function(e) {
        return this.rowsToDisplay[e];
      }, t.prototype.isRowPresent = function(e) {
        return this.rowsToDisplay.indexOf(e) >= 0;
      }, t.prototype.getRowIndexAtPixel = function(e) {
        if (this.isEmpty())
          return -1;
        var r = 0, o = this.rowsToDisplay.length - 1;
        if (e <= 0)
          return 0;
        var i = re.last(this.rowsToDisplay);
        if (i.rowTop <= e)
          return this.rowsToDisplay.length - 1;
        for (; ; ) {
          var s = Math.floor((r + o) / 2), a = this.rowsToDisplay[s];
          if (this.isRowInPixel(a, e))
            return s;
          a.rowTop < e ? r = s + 1 : a.rowTop > e && (o = s - 1);
        }
      }, t.prototype.isRowInPixel = function(e, r) {
        var o = e.rowTop, i = e.rowTop + e.rowHeight, s = o <= r && i > r;
        return s;
      }, t.prototype.forEachLeafNode = function(e) {
        this.rootNode.allLeafChildren && this.rootNode.allLeafChildren.forEach(function(r, o) {
          return e(r, o);
        });
      }, t.prototype.forEachNode = function(e) {
        this.recursivelyWalkNodesAndCallback(this.rootNode.childrenAfterGroup, e, Mt.Normal, 0);
      }, t.prototype.forEachNodeAfterFilter = function(e) {
        this.recursivelyWalkNodesAndCallback(this.rootNode.childrenAfterAggFilter, e, Mt.AfterFilter, 0);
      }, t.prototype.forEachNodeAfterFilterAndSort = function(e) {
        this.recursivelyWalkNodesAndCallback(this.rootNode.childrenAfterSort, e, Mt.AfterFilterAndSort, 0);
      }, t.prototype.forEachPivotNode = function(e) {
        this.recursivelyWalkNodesAndCallback([this.rootNode], e, Mt.PivotNodes, 0);
      }, t.prototype.recursivelyWalkNodesAndCallback = function(e, r, o, i) {
        if (!e)
          return i;
        for (var s = 0; s < e.length; s++) {
          var a = e[s];
          if (r(a, i++), a.hasChildren()) {
            var l = null;
            switch (o) {
              case Mt.Normal:
                l = a.childrenAfterGroup;
                break;
              case Mt.AfterFilter:
                l = a.childrenAfterAggFilter;
                break;
              case Mt.AfterFilterAndSort:
                l = a.childrenAfterSort;
                break;
              case Mt.PivotNodes:
                l = a.leafGroup ? null : a.childrenAfterSort;
                break;
            }
            l && (i = this.recursivelyWalkNodesAndCallback(l, r, o, i));
          }
        }
        return i;
      }, t.prototype.doAggregate = function(e) {
        this.aggregationStage && this.aggregationStage.execute({ rowNode: this.rootNode, changedPath: e });
      }, t.prototype.doFilterAggregates = function(e) {
        this.filterAggregatesStage ? this.filterAggregatesStage.execute({ rowNode: this.rootNode, changedPath: e }) : this.rootNode.childrenAfterAggFilter = this.rootNode.childrenAfterFilter;
      }, t.prototype.expandOrCollapseAll = function(e) {
        var r = this.gridOptionsWrapper.isTreeData(), o = this.columnModel.isPivotActive(), i = function(l) {
          l && l.forEach(function(u) {
            var p = function() {
              u.expanded = e, i(u.childrenAfterGroup);
            };
            if (r) {
              var d = re.exists(u.childrenAfterGroup);
              d && p();
              return;
            }
            if (o) {
              var f = !u.leafGroup;
              f && p();
              return;
            }
            var v = u.group;
            v && p();
          });
        };
        this.rootNode && i(this.rootNode.childrenAfterGroup), this.refreshModel({ step: c.ClientSideRowModelSteps.MAP });
        var s = e ? "expandAll" : "collapseAll", a = {
          api: this.gridApi,
          columnApi: this.columnApi,
          type: m.EVENT_EXPAND_COLLAPSE_ALL,
          source: s
        };
        this.eventService.dispatchEvent(a);
      }, t.prototype.doSort = function(e, r) {
        this.sortStage.execute({
          rowNode: this.rootNode,
          rowNodeTransactions: e,
          changedPath: r
        });
      }, t.prototype.doRowGrouping = function(e, r, o, i, s) {
        this.groupStage ? (r ? this.groupStage.execute({
          rowNode: this.rootNode,
          rowNodeTransactions: r,
          rowNodeOrder: o,
          changedPath: i
        }) : (this.groupStage.execute({
          rowNode: this.rootNode,
          changedPath: i,
          afterColumnsChanged: s
        }), this.restoreGroupState(e)), this.gridOptionsWrapper.isGroupSelectsChildren() && this.selectionService.updateGroupsFromChildrenSelections(i)) : (this.rootNode.childrenAfterGroup = this.rootNode.allLeafChildren, this.rootNode.sibling && (this.rootNode.sibling.childrenAfterGroup = this.rootNode.childrenAfterGroup), this.rootNode.updateHasChildren());
      }, t.prototype.restoreGroupState = function(e) {
        e && re.traverseNodesWithKey(this.rootNode.childrenAfterGroup, function(r, o) {
          typeof e[o] == "boolean" && (r.expanded = e[o]);
        });
      }, t.prototype.doFilter = function(e) {
        this.filterStage.execute({ rowNode: this.rootNode, changedPath: e });
      }, t.prototype.doPivot = function(e) {
        this.pivotStage && this.pivotStage.execute({ rowNode: this.rootNode, changedPath: e });
      }, t.prototype.getGroupState = function() {
        if (!this.rootNode.childrenAfterGroup || !this.gridOptionsWrapper.isRememberGroupStateWhenNewData())
          return null;
        var e = {};
        return re.traverseNodesWithKey(this.rootNode.childrenAfterGroup, function(r, o) {
          return e[o] = r.expanded;
        }), e;
      }, t.prototype.getCopyOfNodesMap = function() {
        return this.nodeManager.getCopyOfNodesMap();
      }, t.prototype.getRowNode = function(e) {
        var r = typeof e == "string" && e.indexOf(ue.ID_PREFIX_ROW_GROUP) == 0;
        if (r) {
          var o = void 0;
          return this.forEachNode(function(i) {
            i.id === e && (o = i);
          }), o;
        }
        return this.nodeManager.getRowNode(e);
      }, t.prototype.setRowData = function(e) {
        var r = this.getGroupState();
        this.nodeManager.setRowData(e), this.selectionService.reset(), this.filterManager.onNewRowsLoaded("rowDataUpdated");
        var o = {
          type: m.EVENT_ROW_DATA_CHANGED,
          api: this.gridApi,
          columnApi: this.columnApi
        };
        this.eventService.dispatchEvent(o), this.refreshModel({
          step: c.ClientSideRowModelSteps.EVERYTHING,
          groupState: r,
          newData: !0
        });
      }, t.prototype.batchUpdateRowData = function(e, r) {
        var o = this;
        if (this.applyAsyncTransactionsTimeout == null) {
          this.rowDataTransactionBatch = [];
          var i = this.gridOptionsWrapper.getAsyncTransactionWaitMillis();
          this.applyAsyncTransactionsTimeout = window.setTimeout(function() {
            o.executeBatchUpdateRowData();
          }, i);
        }
        this.rowDataTransactionBatch.push({ rowDataTransaction: e, callback: r });
      }, t.prototype.flushAsyncTransactions = function() {
        this.applyAsyncTransactionsTimeout != null && (clearTimeout(this.applyAsyncTransactionsTimeout), this.executeBatchUpdateRowData());
      }, t.prototype.executeBatchUpdateRowData = function() {
        var e = this;
        this.valueCache.onDataChanged();
        var r = [], o = [], i = !1;
        if (this.rowDataTransactionBatch && this.rowDataTransactionBatch.forEach(function(a) {
          var l = e.nodeManager.updateRowData(a.rowDataTransaction, void 0);
          o.push(l), a.callback && r.push(a.callback.bind(null, l)), typeof a.rowDataTransaction.addIndex == "number" && (i = !0);
        }), this.commonUpdateRowData(o, void 0, i), r.length > 0 && window.setTimeout(function() {
          r.forEach(function(a) {
            return a();
          });
        }, 0), o.length > 0) {
          var s = {
            api: this.gridOptionsWrapper.getApi(),
            columnApi: this.gridOptionsWrapper.getColumnApi(),
            type: m.EVENT_ASYNC_TRANSACTIONS_FLUSHED,
            results: o
          };
          this.eventService.dispatchEvent(s);
        }
        this.rowDataTransactionBatch = null, this.applyAsyncTransactionsTimeout = void 0;
      }, t.prototype.updateRowData = function(e, r) {
        this.valueCache.onDataChanged();
        var o = this.nodeManager.updateRowData(e, r), i = typeof e.addIndex == "number";
        return this.commonUpdateRowData([o], r, i), o;
      }, t.prototype.createRowNodeOrder = function() {
        var e = this.gridOptionsWrapper.isSuppressMaintainUnsortedOrder();
        if (!e) {
          var r = {};
          if (this.rootNode && this.rootNode.allLeafChildren)
            for (var o = 0; o < this.rootNode.allLeafChildren.length; o++) {
              var i = this.rootNode.allLeafChildren[o];
              r[i.id] = o;
            }
          return r;
        }
      }, t.prototype.commonUpdateRowData = function(e, r, o) {
        var i = !this.gridOptionsWrapper.isSuppressAnimationFrame();
        o && (r = this.createRowNodeOrder()), this.refreshModel({
          step: c.ClientSideRowModelSteps.EVERYTHING,
          rowNodeTransactions: e,
          rowNodeOrder: r,
          keepRenderedRows: !0,
          keepEditingRows: !0,
          animate: i
        });
        var s = {
          type: m.EVENT_ROW_DATA_UPDATED,
          api: this.gridApi,
          columnApi: this.columnApi
        };
        this.eventService.dispatchEvent(s);
      }, t.prototype.doRowsToDisplay = function() {
        this.rowsToDisplay = this.flattenStage.execute({ rowNode: this.rootNode });
      }, t.prototype.onRowHeightChanged = function() {
        this.refreshModel({ step: c.ClientSideRowModelSteps.MAP, keepRenderedRows: !0, keepEditingRows: !0 });
      }, t.prototype.resetRowHeights = function() {
        var e = !1;
        this.forEachNode(function(r) {
          r.setRowHeight(r.rowHeight, !0);
          var o = r.detailNode;
          o && o.setRowHeight(o.rowHeight, !0), e = !0;
        }), e && this.onRowHeightChanged();
      }, Be([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), Be([
        h("selectionService")
      ], t.prototype, "selectionService", void 0), Be([
        h("filterManager")
      ], t.prototype, "filterManager", void 0), Be([
        h("valueCache")
      ], t.prototype, "valueCache", void 0), Be([
        h("columnApi")
      ], t.prototype, "columnApi", void 0), Be([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), Be([
        h("animationFrameService")
      ], t.prototype, "animationFrameService", void 0), Be([
        h("beans")
      ], t.prototype, "beans", void 0), Be([
        h("filterStage")
      ], t.prototype, "filterStage", void 0), Be([
        h("sortStage")
      ], t.prototype, "sortStage", void 0), Be([
        h("flattenStage")
      ], t.prototype, "flattenStage", void 0), Be([
        ve("groupStage")
      ], t.prototype, "groupStage", void 0), Be([
        ve("aggregationStage")
      ], t.prototype, "aggregationStage", void 0), Be([
        ve("pivotStage")
      ], t.prototype, "pivotStage", void 0), Be([
        ve("filterAggregatesStage")
      ], t.prototype, "filterAggregatesStage", void 0), Be([
        B
      ], t.prototype, "init", null), t = Be([
        j("rowModel")
      ], t), t;
    }(H)
  ), Hy = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Vp = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Vy = (
    /** @class */
    function(n) {
      Hy(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.execute = function(e) {
        var r = e.changedPath;
        this.filterService.filter(r);
      }, Vp([
        h("filterService")
      ], t.prototype, "filterService", void 0), t = Vp([
        j("filterStage")
      ], t), t;
    }(H)
  ), Wy = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), pn = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, By = (
    /** @class */
    function(n) {
      Wy(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.execute = function(e) {
        var r = this.sortController.getSortOptions(), o = re.exists(r) && r.length > 0, i = o && re.exists(e.rowNodeTransactions) && this.gridOptionsWrapper.isDeltaSort(), s = r.some(function(a) {
          return !!a.column.getColDef().showRowGroup;
        });
        this.sortService.sort(r, o, i, e.rowNodeTransactions, e.changedPath, s);
      }, pn([
        h("sortService")
      ], t.prototype, "sortService", void 0), pn([
        h("sortController")
      ], t.prototype, "sortController", void 0), pn([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), t = pn([
        j("sortStage")
      ], t), t;
    }(H)
  ), ky = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), ua = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Uy = (
    /** @class */
    function(n) {
      ky(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.execute = function(e) {
        var r = e.rowNode, o = [], i = { value: 0 }, s = this.columnModel.isPivotMode(), a = s && r.leafGroup, l = a ? [r] : r.childrenAfterSort;
        this.recursivelyAddToRowsToDisplay(l, o, i, s, 0);
        var u = o.length > 0, p = !a && u && this.gridOptionsWrapper.isGroupIncludeTotalFooter();
        return p && (this.ensureFooterNodeExists(r), this.addRowNodeToRowsToDisplay(r.sibling, o, i, 0)), o;
      }, t.prototype.recursivelyAddToRowsToDisplay = function(e, r, o, i, s) {
        if (!re.missingOrEmpty(e))
          for (var a = this.gridOptionsWrapper.isGroupHideOpenParents(), l = this.gridOptionsWrapper.isGroupRemoveSingleChildren(), u = !l && this.gridOptionsWrapper.isGroupRemoveLowestSingleChildren(), p = 0; p < e.length; p++) {
            var d = e[p], f = d.hasChildren(), v = i && !f, y = l && f && d.childrenAfterGroup.length === 1, R = u && f && d.leafGroup && d.childrenAfterGroup.length === 1, _ = i && d.leafGroup, D = a && d.expanded && !d.master && !_, P = !v && !D && !y && !R;
            if (P && this.addRowNodeToRowsToDisplay(d, r, o, s), !(i && d.leafGroup)) {
              if (f) {
                var F = y || R;
                if (d.expanded || F) {
                  var U = F ? s : s + 1;
                  this.recursivelyAddToRowsToDisplay(d.childrenAfterSort, r, o, i, U), this.gridOptionsWrapper.isGroupIncludeFooter() && (this.ensureFooterNodeExists(d), this.addRowNodeToRowsToDisplay(d.sibling, r, o, s));
                }
              } else if (d.master && d.expanded) {
                var X = this.createDetailNode(d);
                this.addRowNodeToRowsToDisplay(X, r, o, s);
              }
            }
          }
      }, t.prototype.addRowNodeToRowsToDisplay = function(e, r, o, i) {
        var s = this.gridOptionsWrapper.isGroupMultiAutoColumn();
        r.push(e), e.setUiLevel(s ? 0 : i);
      }, t.prototype.ensureFooterNodeExists = function(e) {
        if (!re.exists(e.sibling)) {
          var r = new ue(this.beans);
          Object.keys(e).forEach(function(o) {
            r[o] = e[o];
          }), r.footer = !0, r.setRowTop(null), r.setRowIndex(null), r.oldRowTop = null, re.exists(r.id) && (r.id = "rowGroupFooter_" + r.id), r.sibling = e, e.sibling = r;
        }
      }, t.prototype.createDetailNode = function(e) {
        if (re.exists(e.detailNode))
          return e.detailNode;
        var r = new ue(this.beans);
        return r.detail = !0, r.selectable = !1, r.parent = e, re.exists(e.id) && (r.id = "detail_" + e.id), r.data = e.data, r.level = e.level + 1, e.detailNode = r, r;
      }, ua([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), ua([
        h("beans")
      ], t.prototype, "beans", void 0), t = ua([
        j("flattenStage")
      ], t), t;
    }(H)
  ), jy = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), cn = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, zy = (
    /** @class */
    function(n) {
      jy(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.init = function() {
        this.postSortFunc = this.gridOptionsWrapper.getPostSortFunc();
      }, t.prototype.sort = function(e, r, o, i, s, a) {
        var l = this, u = this.gridOptionsWrapper.isGroupMaintainOrder(), p = this.columnModel.getAllGridColumns().some(function(y) {
          return y.isRowGroupActive();
        }), d = {};
        o && i && (d = this.calculateDirtyNodes(i));
        var f = this.columnModel.isPivotMode(), v = function(y) {
          l.pullDownGroupDataForHideOpenParents(y.childrenAfterAggFilter, !0);
          var R = f && y.leafGroup, _ = u && p && !y.leafGroup && !a;
          if (!r || _ || R) {
            var D = y.childrenAfterAggFilter.slice(0);
            if (u && y.childrenAfterSort) {
              var P = y.childrenAfterSort.reduce(function(U, X, ce) {
                return U[X.id] = ce, U;
              }, {});
              D.sort(function(U, X) {
                return (P[U.id] || 0) - (P[X.id] || 0);
              });
            }
            y.childrenAfterSort = D;
          } else o ? y.childrenAfterSort = l.doDeltaSort(y, d, s, e) : y.childrenAfterSort = l.rowNodeSorter.doFullSort(y.childrenAfterAggFilter, e);
          if (y.sibling && (y.sibling.childrenAfterSort = y.childrenAfterSort), l.updateChildIndexes(y), l.postSortFunc) {
            var F = { nodes: y.childrenAfterSort };
            l.postSortFunc(F);
          }
        };
        s && s.forEachChangedNodeDepthFirst(v), this.updateGroupDataForHideOpenParents(s);
      }, t.prototype.calculateDirtyNodes = function(e) {
        var r = {}, o = function(i) {
          i && i.forEach(function(s) {
            return r[s.id] = !0;
          });
        };
        return e && e.forEach(function(i) {
          o(i.add), o(i.update), o(i.remove);
        }), r;
      }, t.prototype.doDeltaSort = function(e, r, o, i) {
        var s = this, a = e.childrenAfterAggFilter, l = e.childrenAfterSort;
        if (!l)
          return this.rowNodeSorter.doFullSort(a, i);
        var u = {}, p = [];
        a.forEach(function(y) {
          r[y.id] || !o.canSkip(y) ? p.push(y) : u[y.id] = !0;
        });
        var d = l.filter(function(y) {
          return u[y.id];
        }), f = function(y, R) {
          return { currentPos: R, rowNode: y };
        }, v = p.map(f).sort(function(y, R) {
          return s.rowNodeSorter.compareRowNodes(i, y, R);
        });
        return this.mergeSortedArrays(i, v, d.map(f)).map(function(y) {
          var R = y.rowNode;
          return R;
        });
      }, t.prototype.mergeSortedArrays = function(e, r, o) {
        for (var i = [], s = 0, a = 0; s < r.length && a < o.length; ) {
          var l = this.rowNodeSorter.compareRowNodes(e, r[s], o[a]);
          l < 0 ? i.push(r[s++]) : i.push(o[a++]);
        }
        for (; s < r.length; )
          i.push(r[s++]);
        for (; a < o.length; )
          i.push(o[a++]);
        return i;
      }, t.prototype.updateChildIndexes = function(e) {
        if (!re.missing(e.childrenAfterSort))
          for (var r = e.childrenAfterSort, o = 0; o < r.length; o++) {
            var i = r[o], s = o === 0, a = o === e.childrenAfterSort.length - 1;
            i.setFirstChild(s), i.setLastChild(a), i.setChildIndex(o);
          }
      }, t.prototype.updateGroupDataForHideOpenParents = function(e) {
        var r = this;
        if (this.gridOptionsWrapper.isGroupHideOpenParents()) {
          if (this.gridOptionsWrapper.isTreeData()) {
            var o = "AG Grid: The property hideOpenParents dose not work with Tree Data. This is because Tree Data has values at the group level, it doesn't make sense to hide them (as opposed to Row Grouping, which only has Aggregated Values at the group level).";
            return re.doOnce(function() {
              return console.warn(o);
            }, "sortService.hideOpenParentsWithTreeData"), !1;
          }
          var i = function(s) {
            r.pullDownGroupDataForHideOpenParents(s.childrenAfterSort, !1), s.childrenAfterSort.forEach(function(a) {
              a.hasChildren() && i(a);
            });
          };
          e && e.executeFromRootNode(function(s) {
            return i(s);
          });
        }
      }, t.prototype.pullDownGroupDataForHideOpenParents = function(e, r) {
        var o = this;
        !this.gridOptionsWrapper.isGroupHideOpenParents() || re.missing(e) || e.forEach(function(i) {
          var s = o.columnModel.getGroupDisplayColumns();
          s.forEach(function(a) {
            var l = a.getColDef().showRowGroup;
            if (typeof l != "string") {
              console.error("AG Grid: groupHideOpenParents only works when specifying specific columns for colDef.showRowGroup");
              return;
            }
            var u = l, p = o.columnModel.getPrimaryColumn(u), d = p === i.rowGroupColumn;
            if (!d)
              if (r)
                i.setGroupValue(a.getId(), void 0);
              else {
                var f = i.getFirstChildOfFirstChild(p);
                f && i.setGroupValue(a.getId(), f.key);
              }
          });
        });
      }, cn([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), cn([
        h("rowNodeSorter")
      ], t.prototype, "rowNodeSorter", void 0), cn([
        B
      ], t.prototype, "init", null), t = cn([
        j("sortService")
      ], t), t;
    }(H)
  ), $y = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Wp = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Ky = (
    /** @class */
    function(n) {
      $y(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.filter = function(e) {
        var r = this.filterManager.isColumnFilterPresent() || this.filterManager.isQuickFilterPresent() || this.gridOptionsWrapper.isExternalFilterPresent();
        this.filterNodes(r, e);
      }, t.prototype.filterNodes = function(e, r) {
        var o = this, i = function(u, p) {
          u.hasChildren() && e && !p ? u.childrenAfterFilter = u.childrenAfterGroup.filter(function(d) {
            var f = d.childrenAfterFilter && d.childrenAfterFilter.length > 0, v = d.data && o.filterManager.doesRowPassFilter({ rowNode: d });
            return f || v;
          }) : u.childrenAfterFilter = u.childrenAfterGroup, u.sibling && (u.sibling.childrenAfterFilter = u.childrenAfterFilter);
        };
        if (this.doingTreeDataFiltering()) {
          var s = function(u, p) {
            if (u.childrenAfterGroup)
              for (var d = 0; d < u.childrenAfterGroup.length; d++) {
                var f = u.childrenAfterGroup[d], v = p || o.filterManager.doesRowPassFilter({ rowNode: f });
                f.childrenAfterGroup ? s(u.childrenAfterGroup[d], v) : i(f, v);
              }
            i(u, p);
          }, a = function(u) {
            return s(u, !1);
          };
          r.executeFromRootNode(a);
        } else {
          var l = function(u) {
            return i(u, !1);
          };
          r.forEachChangedNodeDepthFirst(l, !0);
        }
      }, t.prototype.doingTreeDataFiltering = function() {
        return this.gridOptionsWrapper.isTreeData() && !this.gridOptionsWrapper.isExcludeChildrenWhenTreeDataFiltering();
      }, Wp([
        h("filterManager")
      ], t.prototype, "filterManager", void 0), t = Wp([
        j("filterService")
      ], t), t;
    }(H)
  ), Yy = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), oo = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, qy = function(n, t) {
    var e = typeof Symbol == "function" && n[Symbol.iterator];
    if (!e) return n;
    var r = e.call(n), o, i = [], s;
    try {
      for (; (t === void 0 || t-- > 0) && !(o = r.next()).done; ) i.push(o.value);
    } catch (a) {
      s = { error: a };
    } finally {
      try {
        o && !o.done && (e = r.return) && e.call(r);
      } finally {
        if (s) throw s.error;
      }
    }
    return i;
  }, Xy = (
    /** @class */
    function(n) {
      Yy(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.postConstruct = function() {
        this.rowModel.getType() === E.ROW_MODEL_TYPE_CLIENT_SIDE && (this.clientSideRowModel = this.rowModel);
      }, t.prototype.isActive = function() {
        return this.gridOptionsWrapper.isImmutableData();
      }, t.prototype.setRowData = function(e) {
        var r = this.createTransactionForRowData(e);
        if (r) {
          var o = qy(r, 2), i = o[0], s = o[1], a = this.clientSideRowModel.updateRowData(i, s);
          a && this.rowRenderer.refreshFullWidthRows(a.update);
          var l = {
            type: m.EVENT_ROW_DATA_CHANGED,
            api: this.gridApi,
            columnApi: this.columnApi
          };
          this.eventService.dispatchEvent(l);
        }
      }, t.prototype.createTransactionForRowData = function(e) {
        if (re.missing(this.clientSideRowModel)) {
          console.error("AG Grid: ImmutableService only works with ClientSideRowModel");
          return;
        }
        var r = this.gridOptionsWrapper.getRowIdFunc();
        if (r == null) {
          console.error("AG Grid: ImmutableService requires getRowId() callback to be implemented, your row data needs IDs!");
          return;
        }
        var o = {
          remove: [],
          update: [],
          add: []
        }, i = this.clientSideRowModel.getCopyOfNodesMap(), s = this.gridOptionsWrapper.isSuppressMaintainUnsortedOrder(), a = s ? void 0 : {};
        return re.exists(e) && e.forEach(function(l, u) {
          var p = r({ data: l, level: 0 }), d = i[p];
          if (a && (a[p] = u), d) {
            var f = d.data !== l;
            f && o.update.push(l), i[p] = void 0;
          } else
            o.add.push(l);
        }), re.iterateObject(i, function(l, u) {
          u && o.remove.push(u.data);
        }), [o, a];
      }, oo([
        h("rowModel")
      ], t.prototype, "rowModel", void 0), oo([
        h("rowRenderer")
      ], t.prototype, "rowRenderer", void 0), oo([
        h("columnApi")
      ], t.prototype, "columnApi", void 0), oo([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), oo([
        B
      ], t.prototype, "postConstruct", null), t = oo([
        j("immutableService")
      ], t), t;
    }(H)
  ), Qy = {
    moduleName: c.ModuleNames.ClientSideRowModelModule,
    beans: [Vy, By, Uy, zy, Ky, Xy],
    rowModels: { clientSide: Gy }
  }, Zy = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), pa = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, Bp = (
    /** @class */
    function(n) {
      Zy(t, n);
      function t(e, r, o) {
        var i = n.call(this, e) || this;
        return i.parentCache = r, i.params = o, i.startRow = e * o.blockSize, i.endRow = i.startRow + o.blockSize, i;
      }
      return t.prototype.postConstruct = function() {
        this.createRowNodes();
      }, t.prototype.getBlockStateJson = function() {
        return {
          id: "" + this.getId(),
          state: {
            blockNumber: this.getId(),
            startRow: this.getStartRow(),
            endRow: this.getEndRow(),
            pageStatus: this.getState()
          }
        };
      }, t.prototype.setDataAndId = function(e, r, o) {
        !e.id && e.alreadyRendered && (e.alreadyRendered = !1), re.exists(r) ? e.setDataAndId(r, o.toString()) : e.setDataAndId(void 0, void 0);
      }, t.prototype.loadFromDatasource = function() {
        var e = this, r = this.createLoadParams();
        if (re.missing(this.params.datasource.getRows)) {
          console.warn("AG Grid: datasource is missing getRows method");
          return;
        }
        window.setTimeout(function() {
          e.params.datasource.getRows(r);
        }, 0);
      }, t.prototype.processServerFail = function() {
      }, t.prototype.createLoadParams = function() {
        var e = {
          startRow: this.getStartRow(),
          endRow: this.getEndRow(),
          successCallback: this.pageLoaded.bind(this, this.getVersion()),
          failCallback: this.pageLoadFailed.bind(this, this.getVersion()),
          sortModel: this.params.sortModel,
          filterModel: this.params.filterModel,
          context: this.gridOptionsWrapper.getContext()
        };
        return e;
      }, t.prototype.forEachNode = function(e, r, o) {
        var i = this;
        this.rowNodes.forEach(function(s, a) {
          var l = i.startRow + a;
          l < o && e(s, r.next());
        });
      }, t.prototype.getLastAccessed = function() {
        return this.lastAccessed;
      }, t.prototype.getRow = function(e, r) {
        r === void 0 && (r = !1), r || (this.lastAccessed = this.params.lastAccessedSequence.next());
        var o = e - this.startRow;
        return this.rowNodes[o];
      }, t.prototype.getStartRow = function() {
        return this.startRow;
      }, t.prototype.getEndRow = function() {
        return this.endRow;
      }, t.prototype.createRowNodes = function() {
        this.rowNodes = [];
        for (var e = 0; e < this.params.blockSize; e++) {
          var r = this.startRow + e, o = new ue(this.beans);
          o.setRowHeight(this.params.rowHeight), o.uiLevel = 0, o.setRowIndex(r), o.setRowTop(this.params.rowHeight * r), this.rowNodes.push(o);
        }
      }, t.prototype.processServerResult = function(e) {
        var r = this;
        this.rowNodes.forEach(function(i, s) {
          var a = e.rowData ? e.rowData[s] : void 0;
          r.setDataAndId(i, a, r.startRow + s);
        });
        var o = e.rowCount != null && e.rowCount >= 0 ? e.rowCount : void 0;
        this.parentCache.pageLoaded(this, o);
      }, t.prototype.destroyRowNodes = function() {
        this.rowNodes.forEach(function(e) {
          e.clearRowTopAndRowIndex();
        });
      }, pa([
        h("beans")
      ], t.prototype, "beans", void 0), pa([
        B
      ], t.prototype, "postConstruct", null), pa([
        De
      ], t.prototype, "destroyRowNodes", null), t;
    }(qi)
  ), Jy = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), dn = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, eC = function(n, t) {
    return function(e, r) {
      t(e, r, n);
    };
  }, tC = (
    /** @class */
    function(n) {
      Jy(t, n);
      function t(e) {
        var r = n.call(this) || this;
        return r.lastRowIndexKnown = !1, r.blocks = {}, r.blockCount = 0, r.rowCount = e.initialRowCount, r.params = e, r;
      }
      return t.prototype.setBeans = function(e) {
        this.logger = e.create("InfiniteCache");
      }, t.prototype.getRow = function(e, r) {
        r === void 0 && (r = !1);
        var o = Math.floor(e / this.params.blockSize), i = this.blocks[o];
        if (!i) {
          if (r)
            return;
          i = this.createBlock(o);
        }
        return i.getRow(e);
      }, t.prototype.createBlock = function(e) {
        var r = this.createBean(new Bp(e, this, this.params));
        return this.blocks[r.getId()] = r, this.blockCount++, this.purgeBlocksIfNeeded(r), this.params.rowNodeBlockLoader.addBlock(r), r;
      }, t.prototype.refreshCache = function() {
        var e = this.blockCount == 0;
        if (e) {
          this.purgeCache();
          return;
        }
        this.getBlocksInOrder().forEach(function(r) {
          return r.setStateWaitingToLoad();
        }), this.params.rowNodeBlockLoader.checkBlockToLoad();
      }, t.prototype.destroyAllBlocks = function() {
        var e = this;
        this.getBlocksInOrder().forEach(function(r) {
          return e.destroyBlock(r);
        });
      }, t.prototype.getRowCount = function() {
        return this.rowCount;
      }, t.prototype.isLastRowIndexKnown = function() {
        return this.lastRowIndexKnown;
      }, t.prototype.pageLoaded = function(e, r) {
        this.isAlive() && (this.logger.log("onPageLoaded: page = " + e.getId() + ", lastRow = " + r), this.checkRowCount(e, r), this.onCacheUpdated());
      }, t.prototype.purgeBlocksIfNeeded = function(e) {
        var r = this, o = this.getBlocksInOrder().filter(function(u) {
          return u != e;
        }), i = function(u, p) {
          return p.getLastAccessed() - u.getLastAccessed();
        };
        o.sort(i);
        var s = this.params.maxBlocksInCache > 0, a = s ? this.params.maxBlocksInCache - 1 : null, l = t.MAX_EMPTY_BLOCKS_TO_KEEP - 1;
        o.forEach(function(u, p) {
          var d = u.getState() === Bp.STATE_WAITING_TO_LOAD && p >= l, f = s ? p >= a : !1;
          if (d || f) {
            if (r.isBlockCurrentlyDisplayed(u) || r.isBlockFocused(u))
              return;
            r.removeBlockFromCache(u);
          }
        });
      }, t.prototype.isBlockFocused = function(e) {
        var r = this.focusService.getFocusCellToUseAfterRefresh();
        if (!r || r.rowPinned != null)
          return !1;
        var o = e.getStartRow(), i = e.getEndRow(), s = r.rowIndex >= o && r.rowIndex < i;
        return s;
      }, t.prototype.isBlockCurrentlyDisplayed = function(e) {
        var r = e.getStartRow(), o = e.getEndRow() - 1;
        return this.rowRenderer.isRangeInRenderedViewport(r, o);
      }, t.prototype.removeBlockFromCache = function(e) {
        e && this.destroyBlock(e);
      }, t.prototype.checkRowCount = function(e, r) {
        if (typeof r == "number" && r >= 0)
          this.rowCount = r, this.lastRowIndexKnown = !0;
        else if (!this.lastRowIndexKnown) {
          var o = (e.getId() + 1) * this.params.blockSize, i = o + this.params.overflowSize;
          this.rowCount < i && (this.rowCount = i);
        }
      }, t.prototype.setRowCount = function(e, r) {
        this.rowCount = e, re.exists(r) && (this.lastRowIndexKnown = r), this.lastRowIndexKnown || this.rowCount % this.params.blockSize === 0 && this.rowCount++, this.onCacheUpdated();
      }, t.prototype.forEachNodeDeep = function(e) {
        var r = this, o = new gr();
        this.getBlocksInOrder().forEach(function(i) {
          return i.forEachNode(e, o, r.rowCount);
        });
      }, t.prototype.getBlocksInOrder = function() {
        var e = function(o, i) {
          return o.getId() - i.getId();
        }, r = re.getAllValuesInObject(this.blocks).sort(e);
        return r;
      }, t.prototype.destroyBlock = function(e) {
        delete this.blocks[e.getId()], this.destroyBean(e), this.blockCount--, this.params.rowNodeBlockLoader.removeBlock(e);
      }, t.prototype.onCacheUpdated = function() {
        if (this.isAlive()) {
          this.destroyAllBlocksPastVirtualRowCount();
          var e = {
            type: m.EVENT_STORE_UPDATED
          };
          this.eventService.dispatchEvent(e);
        }
      }, t.prototype.destroyAllBlocksPastVirtualRowCount = function() {
        var e = this, r = [];
        this.getBlocksInOrder().forEach(function(o) {
          var i = o.getId() * e.params.blockSize;
          i >= e.rowCount && r.push(o);
        }), r.length > 0 && r.forEach(function(o) {
          return e.destroyBlock(o);
        });
      }, t.prototype.purgeCache = function() {
        var e = this;
        this.getBlocksInOrder().forEach(function(r) {
          return e.removeBlockFromCache(r);
        }), this.lastRowIndexKnown = !1, this.rowCount === 0 && (this.rowCount = this.params.initialRowCount), this.onCacheUpdated();
      }, t.prototype.getRowNodesInRange = function(e, r) {
        var o = this, i = [], s = -1, a = !1, l = new gr();
        re.missing(e) && (a = !0);
        var u = !1;
        this.getBlocksInOrder().forEach(function(d) {
          if (!u) {
            if (a && s + 1 !== d.getId()) {
              u = !0;
              return;
            }
            s = d.getId(), d.forEachNode(function(f) {
              var v = f === e || f === r;
              (a || v) && i.push(f), v && (a = !a);
            }, l, o.rowCount);
          }
        });
        var p = u || a;
        return p ? [] : i;
      }, t.MAX_EMPTY_BLOCKS_TO_KEEP = 2, dn([
        h("rowRenderer")
      ], t.prototype, "rowRenderer", void 0), dn([
        h("focusService")
      ], t.prototype, "focusService", void 0), dn([
        eC(0, Ne("loggerFactory"))
      ], t.prototype, "setBeans", null), dn([
        De
      ], t.prototype, "destroyAllBlocks", null), t;
    }(H)
  ), rC = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), It = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, oC = (
    /** @class */
    function(n) {
      rC(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.getRowBounds = function(e) {
        return {
          rowHeight: this.rowHeight,
          rowTop: this.rowHeight * e
        };
      }, t.prototype.ensureRowHeightsValid = function(e, r, o, i) {
        return !1;
      }, t.prototype.init = function() {
        var e = this;
        this.gridOptionsWrapper.isRowModelInfinite() && (this.rowHeight = this.gridOptionsWrapper.getRowHeightAsNumber(), this.addEventListeners(), this.addDestroyFunc(function() {
          return e.destroyCache();
        }), this.verifyProps());
      }, t.prototype.verifyProps = function() {
        if (this.gridOptionsWrapper.getInitialGroupOrderComparator() != null) {
          var e = "AG Grid: initialGroupOrderComparator cannot be used with Infinite Row Model. If using Infinite Row Model, then sorting is done on the server side, nothing to do with the client.";
          re.doOnce(function() {
            return console.warn(e);
          }, "IRM.InitialGroupOrderComparator");
        }
      }, t.prototype.start = function() {
        this.setDatasource(this.gridOptionsWrapper.getDatasource());
      }, t.prototype.destroyDatasource = function() {
        this.datasource && (this.getContext().destroyBean(this.datasource), this.rowRenderer.datasourceChanged(), this.datasource = null);
      }, t.prototype.addEventListeners = function() {
        this.addManagedListener(this.eventService, m.EVENT_FILTER_CHANGED, this.onFilterChanged.bind(this)), this.addManagedListener(this.eventService, m.EVENT_SORT_CHANGED, this.onSortChanged.bind(this)), this.addManagedListener(this.eventService, m.EVENT_NEW_COLUMNS_LOADED, this.onColumnEverything.bind(this)), this.addManagedListener(this.eventService, m.EVENT_STORE_UPDATED, this.onCacheUpdated.bind(this));
      }, t.prototype.onFilterChanged = function() {
        this.reset();
      }, t.prototype.onSortChanged = function() {
        this.reset();
      }, t.prototype.onColumnEverything = function() {
        var e;
        this.cacheParams ? e = this.isSortModelDifferent() : e = !0, e && this.reset();
      }, t.prototype.isSortModelDifferent = function() {
        return !re.jsonEquals(this.cacheParams.sortModel, this.sortController.getSortModel());
      }, t.prototype.getType = function() {
        return E.ROW_MODEL_TYPE_INFINITE;
      }, t.prototype.setDatasource = function(e) {
        this.destroyDatasource(), this.datasource = e, e && this.reset();
      }, t.prototype.isEmpty = function() {
        return !this.infiniteCache;
      }, t.prototype.isRowsToRender = function() {
        return !!this.infiniteCache;
      }, t.prototype.getNodesInRangeForSelection = function(e, r) {
        return this.infiniteCache ? this.infiniteCache.getRowNodesInRange(e, r) : [];
      }, t.prototype.reset = function() {
        if (this.datasource) {
          var e = this.gridOptionsWrapper.getRowIdFunc(), r = e != null;
          r || this.selectionService.reset(), this.resetCache();
          var o = this.createModelUpdatedEvent();
          this.eventService.dispatchEvent(o);
        }
      }, t.prototype.createModelUpdatedEvent = function() {
        return {
          type: m.EVENT_MODEL_UPDATED,
          api: this.gridApi,
          columnApi: this.columnApi,
          // not sure if these should all be false - noticed if after implementing,
          // maybe they should be true?
          newPage: !1,
          newData: !1,
          keepRenderedRows: !0,
          animate: !1
        };
      }, t.prototype.resetCache = function() {
        this.destroyCache(), this.cacheParams = {
          // the user provided datasource
          datasource: this.datasource,
          // sort and filter model
          filterModel: this.filterManager.getFilterModel(),
          sortModel: this.sortController.getSortModel(),
          rowNodeBlockLoader: this.rowNodeBlockLoader,
          // properties - this way we take a snapshot of them, so if user changes any, they will be
          // used next time we create a new cache, which is generally after a filter or sort change,
          // or a new datasource is set
          initialRowCount: this.defaultIfInvalid(this.gridOptionsWrapper.getInfiniteInitialRowCount(), 1),
          maxBlocksInCache: this.gridOptionsWrapper.getMaxBlocksInCache(),
          rowHeight: this.gridOptionsWrapper.getRowHeightAsNumber(),
          // if user doesn't provide overflow, we use default overflow of 1, so user can scroll past
          // the current page and request first row of next page
          overflowSize: this.defaultIfInvalid(this.gridOptionsWrapper.getCacheOverflowSize(), 1),
          // page size needs to be 1 or greater. having it at 1 would be silly, as you would be hitting the
          // server for one page at a time. so the default if not specified is 100.
          blockSize: this.defaultIfInvalid(this.gridOptionsWrapper.getCacheBlockSize(), 100),
          // the cache could create this, however it is also used by the pages, so handy to create it
          // here as the settings are also passed to the pages
          lastAccessedSequence: new gr()
        }, this.infiniteCache = this.createBean(new tC(this.cacheParams));
      }, t.prototype.defaultIfInvalid = function(e, r) {
        return e > 0 ? e : r;
      }, t.prototype.destroyCache = function() {
        this.infiniteCache && (this.infiniteCache = this.destroyBean(this.infiniteCache));
      }, t.prototype.onCacheUpdated = function() {
        var e = this.createModelUpdatedEvent();
        this.eventService.dispatchEvent(e);
      }, t.prototype.getRow = function(e) {
        if (this.infiniteCache && !(e >= this.infiniteCache.getRowCount()))
          return this.infiniteCache.getRow(e);
      }, t.prototype.getRowNode = function(e) {
        var r;
        return this.forEachNode(function(o) {
          o.id === e && (r = o);
        }), r;
      }, t.prototype.forEachNode = function(e) {
        this.infiniteCache && this.infiniteCache.forEachNodeDeep(e);
      }, t.prototype.getTopLevelRowCount = function() {
        return this.getRowCount();
      }, t.prototype.getTopLevelRowDisplayedIndex = function(e) {
        return e;
      }, t.prototype.getRowIndexAtPixel = function(e) {
        if (this.rowHeight !== 0) {
          var r = Math.floor(e / this.rowHeight), o = this.getRowCount() - 1;
          return r > o ? o : r;
        }
        return 0;
      }, t.prototype.getRowCount = function() {
        return this.infiniteCache ? this.infiniteCache.getRowCount() : 0;
      }, t.prototype.isRowPresent = function(e) {
        var r = this.getRowNode(e.id);
        return !!r;
      }, t.prototype.refreshCache = function() {
        this.infiniteCache && this.infiniteCache.refreshCache();
      }, t.prototype.purgeCache = function() {
        this.infiniteCache && this.infiniteCache.purgeCache();
      }, t.prototype.isLastRowIndexKnown = function() {
        return this.infiniteCache ? this.infiniteCache.isLastRowIndexKnown() : !1;
      }, t.prototype.setRowCount = function(e, r) {
        this.infiniteCache && this.infiniteCache.setRowCount(e, r);
      }, It([
        h("filterManager")
      ], t.prototype, "filterManager", void 0), It([
        h("sortController")
      ], t.prototype, "sortController", void 0), It([
        h("selectionService")
      ], t.prototype, "selectionService", void 0), It([
        h("gridApi")
      ], t.prototype, "gridApi", void 0), It([
        h("columnApi")
      ], t.prototype, "columnApi", void 0), It([
        h("rowRenderer")
      ], t.prototype, "rowRenderer", void 0), It([
        h("rowNodeBlockLoader")
      ], t.prototype, "rowNodeBlockLoader", void 0), It([
        B
      ], t.prototype, "init", null), It([
        De
      ], t.prototype, "destroyDatasource", null), t = It([
        j("rowModel")
      ], t), t;
    }(H)
  ), iC = {
    moduleName: c.ModuleNames.InfiniteRowModelModule,
    rowModels: { infinite: oC }
  }, kp = (
    /** @class */
    function() {
      function n() {
      }
      return n.prototype.setBeans = function(t) {
        this.beans = t;
      }, n.prototype.getFileName = function(t) {
        var e = this.getDefaultFileExtension();
        return (t == null || !t.length) && (t = this.getDefaultFileName()), t.indexOf(".") === -1 ? t + "." + e : t;
      }, n.prototype.getData = function(t) {
        var e = this.createSerializingSession(t), r = this.beans.gridSerializer.serialize(e, t);
        return r;
      }, n;
    }()
  ), Up = (
    /** @class */
    function() {
      function n(t) {
        this.groupColumns = [];
        var e = t.columnModel, r = t.valueService, o = t.gridOptionsWrapper, i = t.processCellCallback, s = t.processHeaderCallback, a = t.processGroupHeaderCallback, l = t.processRowGroupCallback;
        this.columnModel = e, this.valueService = r, this.gridOptionsWrapper = o, this.processCellCallback = i, this.processHeaderCallback = s, this.processGroupHeaderCallback = a, this.processRowGroupCallback = l;
      }
      return n.prototype.prepare = function(t) {
        this.groupColumns = t.filter(function(e) {
          return !!e.getColDef().showRowGroup;
        });
      }, n.prototype.extractHeaderValue = function(t) {
        var e = this.getHeaderName(this.processHeaderCallback, t);
        return e ?? "";
      }, n.prototype.extractRowCellValue = function(t, e, r, o, i) {
        var s = this.gridOptionsWrapper.isGroupMultiAutoColumn() ? i.rowGroupIndex : 0, a = (
          // on group rows
          i && i.group && // in the group column if groups appear in regular grid cells
          (e === s && this.groupColumns.indexOf(t) !== -1 || e === 0 && this.gridOptionsWrapper.isGroupUseEntireRow(this.columnModel.isPivotMode()))
        ), l;
        a ? l = this.createValueForGroupNode(i) : l = this.valueService.getValue(t, i);
        var u = this.processCell(r, i, t, l, this.processCellCallback, o);
        return u ?? "";
      }, n.prototype.getHeaderName = function(t, e) {
        return t ? t({
          column: e,
          api: this.gridOptionsWrapper.getApi(),
          columnApi: this.gridOptionsWrapper.getColumnApi(),
          context: this.gridOptionsWrapper.getContext()
        }) : this.columnModel.getDisplayNameForColumn(e, "csv", !0);
      }, n.prototype.createValueForGroupNode = function(t) {
        if (this.processRowGroupCallback)
          return this.processRowGroupCallback({
            node: t,
            api: this.gridOptionsWrapper.getApi(),
            columnApi: this.gridOptionsWrapper.getColumnApi(),
            context: this.gridOptionsWrapper.getContext()
          });
        var e = [t.key];
        if (!this.gridOptionsWrapper.isGroupMultiAutoColumn())
          for (; t.parent; )
            t = t.parent, e.push(t.key);
        return e.reverse().join(" -> ");
      }, n.prototype.processCell = function(t, e, r, o, i, s) {
        return i ? i({
          accumulatedRowIndex: t,
          column: r,
          node: e,
          value: o,
          api: this.gridOptionsWrapper.getApi(),
          columnApi: this.gridOptionsWrapper.getColumnApi(),
          context: this.gridOptionsWrapper.getContext(),
          type: s
        }) : o ?? "";
      }, n;
    }()
  ), jp = (
    /** @class */
    function() {
      function n() {
      }
      return n.download = function(t, e) {
        var r = document.defaultView || window;
        if (!r) {
          console.warn("AG Grid: There is no `window` associated with the current `document`");
          return;
        }
        var o = document.createElement("a"), i = r.URL.createObjectURL(e);
        o.setAttribute("href", i), o.setAttribute("download", t), o.style.display = "none", document.body.appendChild(o), o.dispatchEvent(new MouseEvent("click", {
          bubbles: !1,
          cancelable: !0,
          view: r
        })), document.body.removeChild(o), r.setTimeout(function() {
          r.URL.revokeObjectURL(i);
        }, 0);
      }, n;
    }()
  ), nC = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), zp = `\r
`, sC = (
    /** @class */
    function(n) {
      nC(t, n);
      function t(e) {
        var r = n.call(this, e) || this;
        r.isFirstLine = !0, r.result = "";
        var o = e.suppressQuotes, i = e.columnSeparator;
        return r.suppressQuotes = o, r.columnSeparator = i, r;
      }
      return t.prototype.addCustomContent = function(e) {
        var r = this;
        e && (typeof e == "string" ? (/^\s*\n/.test(e) || this.beginNewLine(), e = e.replace(/\r?\n/g, zp), this.result += e) : e.forEach(function(o) {
          r.beginNewLine(), o.forEach(function(i, s) {
            s !== 0 && (r.result += r.columnSeparator), r.result += r.putInQuotes(i.data.value || ""), i.mergeAcross && r.appendEmptyCells(i.mergeAcross);
          });
        }));
      }, t.prototype.onNewHeaderGroupingRow = function() {
        return this.beginNewLine(), {
          onColumn: this.onNewHeaderGroupingRowColumn.bind(this)
        };
      }, t.prototype.onNewHeaderGroupingRowColumn = function(e, r, o) {
        r != 0 && (this.result += this.columnSeparator), this.result += this.putInQuotes(e), this.appendEmptyCells(o);
      }, t.prototype.appendEmptyCells = function(e) {
        for (var r = 1; r <= e; r++)
          this.result += this.columnSeparator + this.putInQuotes("");
      }, t.prototype.onNewHeaderRow = function() {
        return this.beginNewLine(), {
          onColumn: this.onNewHeaderRowColumn.bind(this)
        };
      }, t.prototype.onNewHeaderRowColumn = function(e, r) {
        r != 0 && (this.result += this.columnSeparator), this.result += this.putInQuotes(this.extractHeaderValue(e));
      }, t.prototype.onNewBodyRow = function() {
        return this.beginNewLine(), {
          onColumn: this.onNewBodyRowColumn.bind(this)
        };
      }, t.prototype.onNewBodyRowColumn = function(e, r, o) {
        r != 0 && (this.result += this.columnSeparator), this.result += this.putInQuotes(this.extractRowCellValue(e, r, r, E.EXPORT_TYPE_CSV, o));
      }, t.prototype.putInQuotes = function(e) {
        if (this.suppressQuotes)
          return e;
        if (e == null)
          return '""';
        var r;
        typeof e == "string" ? r = e : typeof e.toString == "function" ? r = e.toString() : (console.warn("AG Grid: unknown value type during csv conversion"), r = "");
        var o = r.replace(/"/g, '""');
        return '"' + o + '"';
      }, t.prototype.parse = function() {
        return this.result;
      }, t.prototype.beginNewLine = function() {
        this.isFirstLine || (this.result += zp), this.isFirstLine = !1;
      }, t;
    }(Up)
  ), aC = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), io = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  }, $p = (
    /** @class */
    function(n) {
      aC(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.postConstruct = function() {
        this.setBeans({
          gridSerializer: this.gridSerializer,
          gridOptionsWrapper: this.gridOptionsWrapper
        });
      }, t.prototype.getMergedParams = function(e) {
        var r = this.gridOptionsWrapper.getDefaultExportParams("csv");
        return Object.assign({}, r, e);
      }, t.prototype.export = function(e) {
        if (this.isExportSuppressed())
          return console.warn("AG Grid: Export cancelled. Export is not allowed as per your configuration."), "";
        var r = this.getMergedParams(e), o = this.getData(r), i = new Blob(["\uFEFF", o], { type: "text/plain" });
        return jp.download(this.getFileName(r.fileName), i), o;
      }, t.prototype.exportDataAsCsv = function(e) {
        return this.export(e);
      }, t.prototype.getDataAsCsv = function(e) {
        var r = this.getMergedParams(e);
        return this.getData(r);
      }, t.prototype.getDefaultFileName = function() {
        return "export.csv";
      }, t.prototype.getDefaultFileExtension = function() {
        return "csv";
      }, t.prototype.createSerializingSession = function(e) {
        var r = this, o = r.columnModel, i = r.valueService, s = r.gridOptionsWrapper, a = e, l = a.processCellCallback, u = a.processHeaderCallback, p = a.processGroupHeaderCallback, d = a.processRowGroupCallback, f = a.suppressQuotes, v = a.columnSeparator;
        return new sC({
          columnModel: o,
          valueService: i,
          gridOptionsWrapper: s,
          processCellCallback: l || void 0,
          processHeaderCallback: u || void 0,
          processGroupHeaderCallback: p || void 0,
          processRowGroupCallback: d || void 0,
          suppressQuotes: f || !1,
          columnSeparator: v || ","
        });
      }, t.prototype.isExportSuppressed = function() {
        return this.gridOptionsWrapper.isSuppressCsvExport();
      }, io([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), io([
        h("valueService")
      ], t.prototype, "valueService", void 0), io([
        h("gridSerializer")
      ], t.prototype, "gridSerializer", void 0), io([
        h("gridOptionsWrapper")
      ], t.prototype, "gridOptionsWrapper", void 0), io([
        B
      ], t.prototype, "postConstruct", null), t = io([
        j("csvCreator")
      ], t), t;
    }(kp)
  ), lC = /* @__PURE__ */ function() {
    var n = function(t, e) {
      return n = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(r, o) {
        r.__proto__ = o;
      } || function(r, o) {
        for (var i in o) o.hasOwnProperty(i) && (r[i] = o[i]);
      }, n(t, e);
    };
    return function(t, e) {
      n(t, e);
      function r() {
        this.constructor = t;
      }
      t.prototype = e === null ? Object.create(e) : (r.prototype = e.prototype, new r());
    };
  }(), Sr = function(n, t, e, r) {
    var o = arguments.length, i = o < 3 ? t : r === null ? r = Object.getOwnPropertyDescriptor(t, e) : r, s;
    if (typeof Reflect == "object" && typeof Reflect.decorate == "function") i = Reflect.decorate(n, t, e, r);
    else for (var a = n.length - 1; a >= 0; a--) (s = n[a]) && (i = (o < 3 ? s(i) : o > 3 ? s(t, e, i) : s(t, e)) || i);
    return o > 3 && i && Object.defineProperty(t, e, i), i;
  };
  (function(n) {
    n[n.HEADER_GROUPING = 0] = "HEADER_GROUPING", n[n.HEADER = 1] = "HEADER", n[n.BODY = 2] = "BODY";
  })(c.RowType || (c.RowType = {}));
  var Kp = (
    /** @class */
    function(n) {
      lC(t, n);
      function t() {
        return n !== null && n.apply(this, arguments) || this;
      }
      return t.prototype.serialize = function(e, r) {
        r === void 0 && (r = {});
        var o = this.getColumnsToExport(r.allColumns, r.columnKeys), i = re.compose(
          // first pass, put in the header names of the cols
          this.prepareSession(o),
          this.prependContent(r),
          this.exportColumnGroups(r, o),
          this.exportHeaders(r, o),
          this.processPinnedTopRows(r, o),
          this.processRows(r, o),
          this.processPinnedBottomRows(r, o),
          this.appendContent(r)
        );
        return i(e).parse();
      }, t.prototype.processRow = function(e, r, o, i) {
        var s = this, a = r.shouldRowBeSkipped || function() {
          return !1;
        }, l = this.gridOptionsWrapper, u = l.getContext(), p = l.getApi(), d = l.getColumnApi(), f = l.isGroupRemoveSingleChildren(), v = l.isGroupHideOpenParents(), y = l.isGroupRemoveLowestSingleChildren(), R = this.columnModel.isPivotMode() ? i.leafGroup : !i.group, _ = r.skipGroups || r.skipRowGroups, D = y && i.leafGroup, P = i.allChildrenCount === 1 && (f || D);
        _ && r.skipGroups && re.doOnce(function() {
          return console.warn("AG Grid: Since v25.2 `skipGroups` has been renamed to `skipRowGroups`.");
        }, "gridSerializer-skipGroups");
        var F = { rowIndex: i.rowIndex, rowPinned: i.rowPinned };
        if (!(!R && (r.skipRowGroups || P || v) || r.onlySelected && !i.isSelected() || r.rowNodes && !r.rowNodes.some(function(J) {
          return s.rowPositionUtils.sameRow(J, F);
        }) || r.skipPinnedTop && i.rowPinned === "top" || r.skipPinnedBottom && i.rowPinned === "bottom")) {
          var U = i.level === -1;
          if (!(U && !i.leafGroup)) {
            var X = a({ node: i, api: p, columnApi: d, context: u });
            if (!X) {
              var ce = e.onNewBodyRow();
              if (o.forEach(function(J, fe) {
                ce.onColumn(J, fe, i);
              }), r.getCustomContentBelowRow) {
                var de = r.getCustomContentBelowRow({ node: i, api: p, columnApi: d, context: u });
                de && e.addCustomContent(de);
              }
            }
          }
        }
      }, t.prototype.appendContent = function(e) {
        return function(r) {
          var o = e.customFooter || e.appendContent;
          return o && (e.customFooter && re.doOnce(function() {
            return console.warn("AG Grid: Since version 25.2.0 the `customFooter` param has been deprecated. Use `appendContent` instead.");
          }, "gridSerializer-customFooter"), r.addCustomContent(o)), r;
        };
      }, t.prototype.prependContent = function(e) {
        return function(r) {
          var o = e.customHeader || e.prependContent;
          return o && (e.customHeader && re.doOnce(function() {
            return console.warn("AG Grid: Since version 25.2.0 the `customHeader` param has been deprecated. Use `prependContent` instead.");
          }, "gridSerializer-customHeader"), r.addCustomContent(o)), r;
        };
      }, t.prototype.prepareSession = function(e) {
        return function(r) {
          return r.prepare(e), r;
        };
      }, t.prototype.exportColumnGroups = function(e, r) {
        var o = this;
        return function(i) {
          if (e.skipColumnGroupHeaders)
            e.columnGroups && re.doOnce(function() {
              return console.warn("AG Grid: Since v25.2 the `columnGroups` param has deprecated, and groups are exported by default.");
            }, "gridSerializer-columnGroups");
          else {
            var s = new Pn(), a = o.displayedGroupCreator.createDisplayedGroups(r, o.columnModel.getGridBalancedTree(), s, null);
            o.recursivelyAddHeaderGroups(a, i, e.processGroupHeaderCallback);
          }
          return i;
        };
      }, t.prototype.exportHeaders = function(e, r) {
        return function(o) {
          if (!e.skipHeader && !e.skipColumnHeaders) {
            var i = o.onNewHeaderRow();
            r.forEach(function(s, a) {
              i.onColumn(s, a, void 0);
            });
          } else e.skipHeader && re.doOnce(function() {
            return console.warn("AG Grid: Since v25.2 the `skipHeader` param has been renamed to `skipColumnHeaders`.");
          }, "gridSerializer-skipHeader");
          return o;
        };
      }, t.prototype.processPinnedTopRows = function(e, r) {
        var o = this;
        return function(i) {
          var s = o.processRow.bind(o, i, e, r);
          return o.pinnedRowModel.forEachPinnedTopRow(s), i;
        };
      }, t.prototype.processRows = function(e, r) {
        var o = this;
        return function(i) {
          var s = o.rowModel, a = s.getType(), l = a === E.ROW_MODEL_TYPE_CLIENT_SIDE, u = a === E.ROW_MODEL_TYPE_SERVER_SIDE, p = !l && e.onlySelected, d = o.processRow.bind(o, i, e, r);
          if (o.columnModel.isPivotMode())
            l ? s.forEachPivotNode(d) : s.forEachNode(d);
          else if (e.onlySelectedAllPages || p) {
            var f = o.selectionService.getSelectedNodes();
            f.forEach(d);
          } else
            l || u ? s.forEachNodeAfterFilterAndSort(d) : s.forEachNode(d);
          return i;
        };
      }, t.prototype.processPinnedBottomRows = function(e, r) {
        var o = this;
        return function(i) {
          var s = o.processRow.bind(o, i, e, r);
          return o.pinnedRowModel.forEachPinnedBottomRow(s), i;
        };
      }, t.prototype.getColumnsToExport = function(e, r) {
        e === void 0 && (e = !1);
        var o = this.columnModel.isPivotMode();
        if (r && r.length)
          return this.columnModel.getGridColumns(r);
        if (e && !o) {
          var i = this.gridOptionsWrapper.isTreeData() ? this.columnModel.getGridColumns([E.GROUP_AUTO_COLUMN_ID]) : [];
          return i.concat(this.columnModel.getAllPrimaryColumns() || []);
        }
        return this.columnModel.getAllDisplayedColumns();
      }, t.prototype.recursivelyAddHeaderGroups = function(e, r, o) {
        var i = [];
        e.forEach(function(s) {
          var a = s;
          a.getChildren && a.getChildren().forEach(function(l) {
            return i.push(l);
          });
        }), e.length > 0 && e[0] instanceof We && this.doAddHeaderHeader(r, e, o), i && i.length > 0 && this.recursivelyAddHeaderGroups(i, r, o);
      }, t.prototype.doAddHeaderHeader = function(e, r, o) {
        var i = this, s = e.onNewHeaderGroupingRow(), a = 0;
        r.forEach(function(l) {
          var u = l, p;
          o ? p = o({
            columnGroup: u,
            api: i.gridOptionsWrapper.getApi(),
            columnApi: i.gridOptionsWrapper.getColumnApi(),
            context: i.gridOptionsWrapper.getContext()
          }) : p = i.columnModel.getDisplayNameForColumnGroup(u, "header");
          var d = u.getLeafColumns().reduce(function(f, v, y, R) {
            var _ = re.last(f), D = v.getColumnGroupShow() === "open";
            return D ? (!_ || _[1] != null) && (_ = [y], f.push(_)) : _ && _[1] == null && (_[1] = y - 1), y === R.length - 1 && _ && _[1] == null && (_[1] = y), f;
          }, []);
          s.onColumn(p || "", a++, u.getLeafColumns().length - 1, d);
        });
      }, Sr([
        h("displayedGroupCreator")
      ], t.prototype, "displayedGroupCreator", void 0), Sr([
        h("columnModel")
      ], t.prototype, "columnModel", void 0), Sr([
        h("rowModel")
      ], t.prototype, "rowModel", void 0), Sr([
        h("pinnedRowModel")
      ], t.prototype, "pinnedRowModel", void 0), Sr([
        h("selectionService")
      ], t.prototype, "selectionService", void 0), Sr([
        h("rowPositionUtils")
      ], t.prototype, "rowPositionUtils", void 0), t = Sr([
        j("gridSerializer")
      ], t), t;
    }(H)
  ), Yp = {
    moduleName: c.ModuleNames.CsvExportModule,
    beans: [$p, Kp]
  }, hn = `\r
`, uC = (
    /** @class */
    function() {
      function n() {
      }
      return n.createHeader = function(t) {
        t === void 0 && (t = {});
        var e = "<?", r = "?>", o = ["version"];
        t.version || (t.version = "1.0"), t.encoding && o.push("encoding"), t.standalone && o.push("standalone");
        var i = o.map(function(s) {
          return s + '="' + t[s] + '"';
        }).join(" ");
        return e + "xml " + i + " " + r;
      }, n.createXml = function(t, e) {
        var r = this, o = "";
        t.properties && (t.properties.prefixedAttributes && t.properties.prefixedAttributes.forEach(function(s) {
          Object.keys(s.map).forEach(function(a) {
            o += r.returnAttributeIfPopulated(s.prefix + a, s.map[a], e);
          });
        }), t.properties.rawMap && Object.keys(t.properties.rawMap).forEach(function(s) {
          o += r.returnAttributeIfPopulated(s, t.properties.rawMap[s], e);
        }));
        var i = "<" + t.name + o;
        return !t.children && t.textNode == null ? i + "/>" + hn : t.textNode != null ? i + ">" + t.textNode + "</" + t.name + ">" + hn : (i += ">" + hn, t.children && t.children.forEach(function(s) {
          i += r.createXml(s, e);
        }), i + "</" + t.name + ">" + hn);
      }, n.returnAttributeIfPopulated = function(t, e, r) {
        if (!e && e !== "" && e !== 0)
          return "";
        var o = e;
        return typeof e == "boolean" && r && (o = r(e)), " " + t + '="' + o + '"';
      }, n;
    }()
  ), pC = function(n) {
    var t = typeof Symbol == "function" && Symbol.iterator, e = t && n[t], r = 0;
    if (e) return e.call(n);
    if (n && typeof n.length == "number") return {
      next: function() {
        return n && r >= n.length && (n = void 0), { value: n && n[r++], done: !n };
      }
    };
    throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
  }, cC = new Uint32Array([
    0,
    1996959894,
    3993919788,
    2567524794,
    124634137,
    1886057615,
    3915621685,
    2657392035,
    249268274,
    2044508324,
    3772115230,
    2547177864,
    162941995,
    2125561021,
    3887607047,
    2428444049,
    498536548,
    1789927666,
    4089016648,
    2227061214,
    450548861,
    1843258603,
    4107580753,
    2211677639,
    325883990,
    1684777152,
    4251122042,
    2321926636,
    335633487,
    1661365465,
    4195302755,
    2366115317,
    997073096,
    1281953886,
    3579855332,
    2724688242,
    1006888145,
    1258607687,
    3524101629,
    2768942443,
    901097722,
    1119000684,
    3686517206,
    2898065728,
    853044451,
    1172266101,
    3705015759,
    2882616665,
    651767980,
    1373503546,
    3369554304,
    3218104598,
    565507253,
    1454621731,
    3485111705,
    3099436303,
    671266974,
    1594198024,
    3322730930,
    2970347812,
    795835527,
    1483230225,
    3244367275,
    3060149565,
    1994146192,
    31158534,
    2563907772,
    4023717930,
    1907459465,
    112637215,
    2680153253,
    3904427059,
    2013776290,
    251722036,
    2517215374,
    3775830040,
    2137656763,
    141376813,
    2439277719,
    3865271297,
    1802195444,
    476864866,
    2238001368,
    4066508878,
    1812370925,
    453092731,
    2181625025,
    4111451223,
    1706088902,
    314042704,
    2344532202,
    4240017532,
    1658658271,
    366619977,
    2362670323,
    4224994405,
    1303535960,
    984961486,
    2747007092,
    3569037538,
    1256170817,
    1037604311,
    2765210733,
    3554079995,
    1131014506,
    879679996,
    2909243462,
    3663771856,
    1141124467,
    855842277,
    2852801631,
    3708648649,
    1342533948,
    654459306,
    3188396048,
    3373015174,
    1466479909,
    544179635,
    3110523913,
    3462522015,
    1591671054,
    702138776,
    2966460450,
    3352799412,
    1504918807,
    783551873,
    3082640443,
    3233442989,
    3988292384,
    2596254646,
    62317068,
    1957810842,
    3939845945,
    2647816111,
    81470997,
    1943803523,
    3814918930,
    2489596804,
    225274430,
    2053790376,
    3826175755,
    2466906013,
    167816743,
    2097651377,
    4027552580,
    2265490386,
    503444072,
    1762050814,
    4150417245,
    2154129355,
    426522225,
    1852507879,
    4275313526,
    2312317920,
    282753626,
    1742555852,
    4189708143,
    2394877945,
    397917763,
    1622183637,
    3604390888,
    2714866558,
    953729732,
    1340076626,
    3518719985,
    2797360999,
    1068828381,
    1219638859,
    3624741850,
    2936675148,
    906185462,
    1090812512,
    3747672003,
    2825379669,
    829329135,
    1181335161,
    3412177804,
    3160834842,
    628085408,
    1382605366,
    3423369109,
    3138078467,
    570562233,
    1426400815,
    3317316542,
    2998733608,
    733239954,
    1555261956,
    3268935591,
    3050360625,
    752459403,
    1541320221,
    2607071920,
    3965973030,
    1969922972,
    40735498,
    2617837225,
    3943577151,
    1913087877,
    83908371,
    2512341634,
    3803740692,
    2075208622,
    213261112,
    2463272603,
    3855990285,
    2094854071,
    198958881,
    2262029012,
    4057260610,
    1759359992,
    534414190,
    2176718541,
    4139329115,
    1873836001,
    414664567,
    2282248934,
    4279200368,
    1711684554,
    285281116,
    2405801727,
    4167216745,
    1634467795,
    376229701,
    2685067896,
    3608007406,
    1308918612,
    956543938,
    2808555105,
    3495958263,
    1231636301,
    1047427035,
    2932959818,
    3654703836,
    1088359270,
    936918e3,
    2847714899,
    3736837829,
    1202900863,
    817233897,
    3183342108,
    3401237130,
    1404277552,
    615818150,
    3134207493,
    3453421203,
    1423857449,
    601450431,
    3009837614,
    3294710456,
    1567103746,
    711928724,
    3020668471,
    3272380065,
    1510334235,
    755167117
  ]), dC = (
    /** @class */
    function() {
      function n() {
      }
      return n.addFolders = function(t) {
        t.forEach(this.addFolder.bind(this));
      }, n.addFolder = function(t) {
        this.folders.push({
          path: t,
          created: /* @__PURE__ */ new Date(),
          isBase64: !1
        });
      }, n.addFile = function(t, e, r) {
        r === void 0 && (r = !1), this.files.push({
          path: t,
          created: /* @__PURE__ */ new Date(),
          content: e,
          isBase64: r
        });
      }, n.getContent = function(t) {
        t === void 0 && (t = "application/zip");
        var e = this.buildFileStream(), r = this.buildUint8Array(e);
        return this.clearStream(), new Blob([r], { type: t });
      }, n.clearStream = function() {
        this.folders = [], this.files = [];
      }, n.buildFileStream = function(t) {
        var e, r;
        t === void 0 && (t = "");
        var o = this.folders.concat(this.files), i = o.length, s = "", a = 0, l = 0;
        try {
          for (var u = pC(o), p = u.next(); !p.done; p = u.next()) {
            var d = p.value, f = this.getHeader(d, a), v = f.fileHeader, y = f.folderHeader, R = f.content;
            a += v.length + R.length, l += y.length, t += v + R, s += y;
          }
        } catch (D) {
          e = { error: D };
        } finally {
          try {
            p && !p.done && (r = u.return) && r.call(u);
          } finally {
            if (e) throw e.error;
          }
        }
        var _ = this.buildFolderEnd(i, l, a);
        return t + s + _;
      }, n.getHeader = function(t, e) {
        var r = t.content, o = t.path, i = t.created, s = t.isBase64, a = re.utf8_encode, l = re.decToHex, u = a(o), p = u !== o, d = this.convertTime(i), f = this.convertDate(i), v = "";
        if (p) {
          var y = l(1, 1) + l(this.getFromCrc32Table(u), 4) + u;
          v = "up" + l(y.length, 2) + y;
        }
        var R = r ? this.getConvertedContent(r, s) : { size: 0, content: "" }, _ = R.size, D = R.content, P = `
\0` + (p ? "\0\b" : "\0\0") + "\0\0" + l(d, 2) + // last modified time
        l(f, 2) + // last modified date
        l(_ ? this.getFromCrc32Table(D) : 0, 4) + l(_, 4) + // compressed size
        l(_, 4) + // uncompressed size
        l(u.length, 2) + // file name length
        l(v.length, 2), F = "PK" + P + u + v, U = "PK\0" + P + // file header
        "\0\0\0\0\0\0" + (r ? "\0\0\0\0" : "\0\0\0") + // external file attributes
        l(e, 4) + // relative offset of local header
        u + // file name
        v;
        return { fileHeader: F, folderHeader: U, content: D || "" };
      }, n.getConvertedContent = function(t, e) {
        return e === void 0 && (e = !1), e && (t = t.split(";base64,")[1]), t = e ? atob(t) : t, {
          size: t.length,
          content: t
        };
      }, n.buildFolderEnd = function(t, e, r) {
        var o = re.decToHex;
        return "PK\0\0\0\0" + o(t, 2) + // total number of entries in the central folder
        o(t, 2) + // total number of entries in the central folder
        o(e, 4) + // size of the central folder
        o(r, 4) + // central folder start offset
        "\0\0";
      }, n.buildUint8Array = function(t) {
        for (var e = new Uint8Array(t.length), r = 0; r < e.length; r++)
          e[r] = t.charCodeAt(r);
        return e;
      }, n.getFromCrc32Table = function(t) {
        if (!t.length)
          return 0;
        for (var e = t.length, r = new Uint8Array(e), o = 0; o < e; o++)
          r[o] = t.charCodeAt(o);
        for (var i = -1, s = 0, a = 0, l = 0, o = 0; o < e; o++)
          s = r[o], a = (i ^ s) & 255, l = cC[a], i = i >>> 8 ^ l;
        return i ^ -1;
      }, n.convertTime = function(t) {
        var e = t.getHours();
        return e <<= 6, e = e | t.getMinutes(), e <<= 5, e = e | t.getSeconds() / 2, e;
      }, n.convertDate = function(t) {
        var e = t.getFullYear() - 1980;
        return e <<= 4, e = e | t.getMonth() + 1, e <<= 5, e = e | t.getDate(), e;
      }, n.folders = [], n.files = [], n;
    }()
  );
  oe.register(Qy, !1), oe.register(iC, !1), oe.register(Yp, !1), c.AbstractHeaderCellCtrl = Wo, c.AgAbstractField = Tt, c.AgAngleSelect = Ju, c.AgCheckbox = Yr, c.AgColorPicker = ep, c.AgDialog = qs, c.AgGroupComponent = tp, c.AgInputNumberField = Xu, c.AgInputRange = Qu, c.AgInputTextArea = qu, c.AgInputTextField = Ks, c.AgMenuItemComponent = Qr, c.AgMenuList = np, c.AgMenuPanel = sp, c.AgPanel = Ys, c.AgPromise = Qe, c.AgRadioButton = Ku, c.AgSelect = gs, c.AgSlider = Zu, c.AgStackComponentsRegistry = Pa, c.AgToggleButton = Yu, c.AlignedGridsService = cp, c.AnimateShowChangeCellRenderer = bl, c.AnimateSlideCellRenderer = Fl, c.AnimationFrameService = Mu, c.AutoScrollService = ql, c.AutoWidthCalculator = Gu, c.Autowired = h, c.BaseComponentWrapper = Ly, c.BaseCreator = kp, c.BaseGridSerializingSession = Up, c.Bean = j, c.BeanStub = H, c.Beans = Ms, c.BodyDropPivotTarget = gu, c.BodyDropTarget = mu, c.CellComp = du, c.CellCtrl = er, c.CellNavigationService = pp, c.CellPositionUtils = Lp, c.ChangedPath = Yi, c.CheckboxSelectionComponent = _s, c.ColDefUtil = Fn, c.Color = Gr, c.Column = A, c.ColumnApi = hp, c.ColumnFactory = Ca, c.ColumnGroup = We, c.ColumnKeyCreator = te, c.ColumnModel = Sa, c.ColumnUtils = _a, c.Component = le, c.ComponentUtil = Xt, c.Constants = E, c.Context = ui, c.CssClassApplier = Gs, c.CssClassManager = dl, c.CsvCreator = $p, c.CsvExportModule = Yp, c.CtrlsService = xp, c.CustomTooltipFeature = _i, c.DateFilter = ys, c.DisplayedGroupCreator = Oa, c.Downloader = jp, c.DragAndDropService = $e, c.DragService = kl, c.Environment = Tp, c.EventService = nt, c.Events = m, c.ExpressionService = vp, c.FilterManager = Ul, c.FloatingFilterMapper = Wl, c.FocusService = Zr, c.Grid = by, c.GridApi = wu, c.GridBodyComp = su, c.GridBodyCtrl = Jl, c.GridComp = Ep, c.GridCoreCreator = Hp, c.GridCtrl = wp, c.GridHeaderComp = Tu, c.GridHeaderCtrl = Pu, c.GridOptionsWrapper = z, c.GridSerializer = Kp, c.GroupCellRenderer = Os, c.GroupCellRendererCtrl = Nl, c.GroupInstanceIdCreator = Pn, c.HeaderCellCtrl = Su, c.HeaderFilterCellComp = jl, c.HeaderFilterCellCtrl = Ru, c.HeaderGroupCellCtrl = _u, c.HeaderNavigationService = Au, c.HeaderPositionUtils = Ip, c.HeaderRowComp = Cu, c.HeaderRowContainerComp = zi, c.HeaderRowContainerCtrl = Ou, c.HeaderRowCtrl = ji, c.HorizontalResizeService = Du, c.KeyCode = N, c.LargeTextCellEditor = Al, c.Logger = en, c.LoggerFactory = Cp, c.ManagedFocusFeature = kt, c.ModuleRegistry = oe, c.MouseEventService = uu, c.MoveColumnFeature = vu, c.NavigationService = pu, c.NumberFilter = ws, c.NumberSequence = gr, c.Optional = ve, c.PaginationProxy = ju, c.PinnedRowModel = ku, c.PopupComponent = Ur, c.PopupEditorWrapper = cu, c.PopupSelectCellEditor = Tl, c.PopupService = lp, c.PopupTextCellEditor = Dl, c.PositionableFeature = xu, c.PostConstruct = B, c.PreConstruct = Co, c.PreDestroy = De, c.PropertyKeys = At, c.ProvidedColumnGroup = _e, c.ProvidedFilter = Fo, c.Qualifier = Ne, c.QuerySelector = bd, c.RefSelector = I, c.ResizeObserverService = Lu, c.RowContainerComp = hu, c.RowContainerCtrl = Vi, c.RowCtrl = tr, c.RowNode = ue, c.RowNodeBlock = qi, c.RowNodeBlockLoader = Uu, c.RowNodeSorter = Np, c.RowPositionUtils = Fp, c.RowRenderer = Vu, c.ScalarFilter = Ie, c.ScrollVisibleService = au, c.SelectCellEditor = Ss, c.SelectableService = bp, c.SelectionService = dp, c.SetLeftFeature = Bi, c.SimpleFilter = Ae, c.SortController = Rp, c.StandardMenuFactory = bu, c.StylingService = $u, c.TabGuardComp = Yo, c.TabGuardCtrl = op, c.TabbedLayout = Rv, c.TemplateService = mp, c.TextCellEditor = bi, c.TextFilter = Di, c.TextFloatingFilter = Ol, c.Timer = Ad, c.TouchListener = at, c.UserComponentFactory = Bl, c.UserComponentRegistry = Gl, c.ValueCache = _p, c.ValueFormatterService = Bu, c.ValueService = fp, c.VanillaFrameworkOverrides = up, c.VirtualList = vm, c.XmlFactory = uC, c.ZipContainer = dC, c._ = re, c.defaultGroupComparator = Fy, c.getRowContainerTypeForName = nu, c.simpleHttpRequest = Sv, c.stringToArray = Da;
})(wt);
var ri = function() {
  return ri = Object.assign || function(c) {
    for (var w, g = 1, C = arguments.length; g < C; g++) {
      w = arguments[g];
      for (var S in w) Object.prototype.hasOwnProperty.call(w, S) && (c[S] = w[S]);
    }
    return c;
  }, ri.apply(this, arguments);
}, OC = function() {
  for (var c = 0, w = 0, g = arguments.length; w < g; w++) c += arguments[w].length;
  for (var C = Array(c), S = 0, w = 0; w < g; w++)
    for (var O = arguments[w], L = 0, x = O.length; L < x; L++, S++)
      C[S] = O[L];
  return C;
}, lc = (
  /** @class */
  function() {
    function c() {
    }
    return c.getComponentDefinition = function(w, g) {
      var C;
      return typeof w == "string" ? C = this.searchForComponentInstance(g, w) : C = { extends: Ye(ri({}, w)) }, C || console.error("Could not find component with name of " + w + ". Is it in Vue.components?"), C.extends ? (C.extends.setup && (C.setup = C.extends.setup), C.extends.props = this.addParamsToProps(C.extends.props)) : C.props = this.addParamsToProps(C.props), C;
    }, c.addParamsToProps = function(w) {
      return !w || Array.isArray(w) && w.indexOf("params") === -1 ? w = OC(["params"], w || []) : typeof w == "object" && !w.params && (w.params = {
        type: Object
      }), w;
    }, c.createAndMountComponent = function(w, g, C) {
      var S = c.getComponentDefinition(w, C);
      if (S) {
        var O = this.mount(S, { params: Object.freeze(g) }, C), L = O.vNode, x = O.destroy, G = O.el;
        return {
          componentInstance: L.component.proxy,
          element: G,
          destroy: x
        };
      }
    }, c.mount = function(w, g, C) {
      var S = vn(w, g);
      S.appContext = C.$.appContext, S.appContext.provides = ri(ri({}, S.appContext.provides ? S.appContext.provides : {}), C.$parent.$options.provide ? C.$parent.$options.provide : {});
      var O = document.createElement("div");
      Qp(S, O);
      var L = function() {
        O && Qp(null, O), O = null, S = null;
      };
      return { vNode: S, destroy: L, el: O };
    }, c.searchForComponentInstance = function(w, g, C, S) {
      C === void 0 && (C = 10), S === void 0 && (S = !1);
      for (var O = null, L = w.$parent, x = 0; !O && L && L.$options && ++x < C; ) {
        var G = L;
        O = G.$options && G.$options.components ? G.$options.components[g] : null, L = L.$parent;
      }
      if (!O) {
        var se = w.$.appContext.components;
        se && se[g] && (O = se[g]);
      }
      return !O && !S ? (console.error("Could not find component with name of " + g + ". Is it in Vue.components?"), null) : O;
    }, c;
  }()
), ec = /* @__PURE__ */ function() {
  var c = function(w, g) {
    return c = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(C, S) {
      C.__proto__ = S;
    } || function(C, S) {
      for (var O in S) Object.prototype.hasOwnProperty.call(S, O) && (C[O] = S[O]);
    }, c(w, g);
  };
  return function(w, g) {
    c(w, g);
    function C() {
      this.constructor = w;
    }
    w.prototype = g === null ? Object.create(g) : (C.prototype = g.prototype, new C());
  };
}(), AC = (
  /** @class */
  function(c) {
    ec(w, c);
    function w(g) {
      var C = c.call(this) || this;
      return C.parent = g, C;
    }
    return w.prototype.createWrapper = function(g) {
      var C = this, S = (
        /** @class */
        function(L) {
          ec(x, L);
          function x() {
            return L !== null && L.apply(this, arguments) || this;
          }
          return x.prototype.init = function(G) {
            L.prototype.init.call(this, G);
          }, x.prototype.hasMethod = function(G) {
            return O.getFrameworkComponentInstance()[G] != null;
          }, x.prototype.callMethod = function(G, se) {
            var Q = this.getFrameworkComponentInstance(), $ = O.getFrameworkComponentInstance();
            return $[G].apply(Q, se);
          }, x.prototype.addMethod = function(G, se) {
            O[G] = se;
          }, x.prototype.overrideProcessing = function(G) {
            return C.parent.autoParamsRefresh && G === "refresh";
          }, x.prototype.processMethod = function(G, se) {
            return G === "refresh" && (this.getFrameworkComponentInstance().params = se[0]), this.hasMethod(G) ? this.callMethod(G, se) : G === "refresh";
          }, x.prototype.createComponent = function(G) {
            return C.createComponent(g, G);
          }, x;
        }(PC)
      ), O = new S();
      return O;
    }, w.prototype.createComponent = function(g, C) {
      return lc.createAndMountComponent(g, C, this.parent);
    }, w.prototype.createMethodProxy = function(g, C, S) {
      return function() {
        return g.overrideProcessing(C) ? g.processMethod(C, arguments) : g.hasMethod(C) ? g.callMethod(C, arguments) : (S && console.warn("AG Grid: Framework component is missing the method " + C + "()"), null);
      };
    }, w.prototype.destroy = function() {
      this.parent = null;
    }, w;
  }(wt.BaseComponentWrapper)
), PC = (
  /** @class */
  function() {
    function c() {
    }
    return c.prototype.getGui = function() {
      return this.element;
    }, c.prototype.destroy = function() {
      this.getFrameworkComponentInstance() && typeof this.getFrameworkComponentInstance().destroy == "function" && this.getFrameworkComponentInstance().destroy(), this.unmount();
    }, c.prototype.getFrameworkComponentInstance = function() {
      return this.componentInstance;
    }, c.prototype.init = function(w) {
      var g = this.createComponent(w), C = g.componentInstance, S = g.element, O = g.destroy;
      this.componentInstance = C, this.unmount = O, this.element = S.firstElementChild;
    }, c;
  }()
), TC = function(c) {
  return c.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
}, DC = function(c) {
  return "on" + c.charAt(0).toUpperCase() + c.substring(1, c.length);
}, bC = function() {
  var c = {}, w = wt.ComponentUtil.PUBLIC_EVENTS.map(function(C) {
    return DC(TC(C));
  });
  w.forEach(function(C) {
    return c[C] = void 0;
  });
  var g = {};
  return wt.ComponentUtil.ALL_PROPERTIES.filter(function(C) {
    return C != "gridOptions";
  }).forEach(function(C) {
    c[C] = {}, g[C] = {
      handler: function(S, O) {
        this.processChanges(C, S, O);
      },
      deep: C !== "popupParent" && C !== "context"
    };
  }), [c, g];
}, tc = (
  /** @class */
  function() {
    function c() {
    }
    return c.hasChildColumns = function(w) {
      return w && w.default && w.default.length > 0;
    }, c.mapChildColumnDefs = function(w) {
      return w.default.map(function(g) {
        return c.toColDef(g);
      });
    }, c.toColDef = function(w) {
      var g = c.createColDefFromGridColumn(w);
      return w.children && w.children.length > 0 && (g.children = c.getChildColDefs(w.children)), g;
    }, c.getChildColDefs = function(w) {
      return w.map(function(g) {
        return c.createColDefFromGridColumn(g);
      });
    }, c.createColDefFromGridColumn = function(w) {
      var g = {};
      return Object.assign(g, w.data.attrs), delete g.children, wt.ColDefUtil.BOOLEAN_PROPERTIES.forEach(function(C) {
        var S = g;
        S[C] === "" && (S[C] = !0);
      }), g;
    }, c;
  }()
), FC = /* @__PURE__ */ function() {
  var c = function(w, g) {
    return c = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(C, S) {
      C.__proto__ = S;
    } || function(C, S) {
      for (var O in S) Object.prototype.hasOwnProperty.call(S, O) && (C[O] = S[O]);
    }, c(w, g);
  };
  return function(w, g) {
    c(w, g);
    function C() {
      this.constructor = w;
    }
    w.prototype = g === null ? Object.create(g) : (C.prototype = g.prototype, new C());
  };
}(), LC = (
  /** @class */
  function(c) {
    FC(w, c);
    function w(g) {
      var C = c.call(this) || this;
      return C.parent = g, C;
    }
    return w.prototype.frameworkComponent = function(g) {
      return lc.searchForComponentInstance(this.parent, g, 10, !0) ? g : null;
    }, w.prototype.isFrameworkComponent = function(g) {
      return typeof g == "object";
    }, w;
  }(wt.VanillaFrameworkOverrides)
), mn = function() {
  return mn = Object.assign || function(c) {
    for (var w, g = 1, C = arguments.length; g < C; g++) {
      w = arguments[g];
      for (var S in w) Object.prototype.hasOwnProperty.call(w, S) && (c[S] = w[S]);
    }
    return c;
  }, mn.apply(this, arguments);
}, MC = ["rowDataChanged", "rowDataUpdated", "cellValueChanged", "rowValueChanged"], rc = "onUpdate:modelValue", IC = "update:modelValue", uc = bC(), NC = uc[0], xC = uc[1], GC = Ye({
  render: function() {
    return fC("div");
  },
  props: mn({ gridOptions: {
    type: Object,
    default: function() {
      return {};
    }
  }, autoParamsRefresh: {
    type: Boolean,
    default: function() {
      return !1;
    }
  }, componentDependencies: {
    type: Array,
    default: function() {
      return [];
    }
  }, plugins: [], modules: {
    type: Array,
    default: function() {
      return [];
    }
  }, modelValue: {
    type: Array,
    default: void 0,
    required: !1
  } }, NC),
  data: function() {
    return {
      gridCreated: !1,
      isDestroyed: !1,
      gridReadyFired: !1,
      emitRowModel: void 0
    };
  },
  watch: mn({ modelValue: {
    handler: function(c, w) {
      this.processChanges("rowData", c, w);
    },
    deep: !0
  } }, xC),
  methods: {
    globalEventListener: function(c, w) {
      this.isDestroyed || (c === "gridReady" && (this.gridReadyFired = !0), this.updateModelIfUsed(c));
    },
    processChanges: function(c, w, g) {
      if (this.gridCreated) {
        if (this.skipChange(c, w, g))
          return;
        var C = {};
        C[c] = {
          // decouple the row data - if we don't when the grid changes row data directly that'll trigger this component to react to rowData changes,
          // which can reset grid state (ie row selection)
          currentValue: c === "rowData" ? Object.isFrozen(w) ? w : lo(ca(w)) : w,
          previousValue: g
        }, wt.ComponentUtil.processOnChange(C, this.gridOptions, this.gridOptions.api, this.gridOptions.columnApi);
      }
    },
    checkForBindingConflicts: function() {
      var c = this;
      (c.rowData || this.gridOptions.rowData) && c.modelValue && console.warn("AG Grid: Using both rowData and v-model. rowData will be ignored.");
    },
    getRowData: function() {
      var c = [];
      return this.gridOptions.api.forEachNode(function(w) {
        c.push(w.data);
      }), c;
    },
    updateModelIfUsed: function(c) {
      this.gridReadyFired && this.$attrs[rc] && MC.indexOf(c) !== -1 && this.emitRowModel && this.emitRowModel();
    },
    getRowDataBasedOnBindings: function() {
      var c = this, w = c.modelValue;
      return w || (c.rowData ? c.rowData : c.gridOptions.rowData);
    },
    /*
    * Prevents an infinite loop when using v-model for the rowData
    */
    skipChange: function(c, w, g) {
      if (this.gridReadyFired && c === "rowData" && this.$attrs[rc]) {
        if (w === g)
          return !0;
        if (w && g) {
          var C = w, S = g;
          if (C.length === S.length) {
            for (var O = 0; O < C.length; O++)
              if (C[O] !== S[O])
                return !1;
            return !0;
          }
        }
      }
      return !1;
    },
    debounce: function(c, w) {
      var g;
      return function() {
        var C = function() {
          c();
        };
        window.clearTimeout(g), g = window.setTimeout(C, w);
      };
    }
  },
  mounted: function() {
    var c = this;
    this.emitRowModel = this.debounce(function() {
      c.$emit(IC, Object.freeze(c.getRowData()));
    }, 20);
    var w = new AC(this), g = lo(wt.ComponentUtil.copyAttributesToGridOptions(ca(this.gridOptions), this));
    this.checkForBindingConflicts();
    var C = this.getRowDataBasedOnBindings();
    g.rowData = C && (Object.isFrozen(C) ? C : lo(ca(C))), tc.hasChildColumns(this.$slots) && (g.columnDefs = tc.mapChildColumnDefs(this.$slots));
    var S = {
      globalEventListener: this.globalEventListener.bind(this),
      frameworkOverrides: new LC(this),
      providedBeanInstances: {
        frameworkComponentWrapper: w
      },
      modules: this.modules
    };
    new wt.Grid(this.$el, g, S), this.gridCreated = !0;
  },
  unmounted: function() {
    this.gridCreated && (this.gridOptions.api && this.gridOptions.api.destroy(), this.isDestroyed = !0);
  }
});
const HC = ["onClick"], VC = { class: "md-icon-small inline" }, WC = {
  key: 0,
  height: "18",
  width: "18",
  viewBox: "0 0 24 24",
  class: "inline float-right"
}, BC = /* @__PURE__ */ Ye({
  __name: "column-dropdown",
  props: {
    columnDefs: { type: Object, required: !0 },
    columnApi: { type: Object },
    systemCols: { type: Object }
  },
  setup(c) {
    const w = co("iApi"), { t: g } = Et();
    return (C, S) => {
      const O = fa("dropdown-menu");
      return ae(), ga(O, {
        class: "relative",
        position: "bottom-end",
        tooltip: ee(g)("grid.label.columns"),
        tooltipPlacementAlt: "left",
        centered: !1
      }, {
        header: uo(() => S[0] || (S[0] = [
          V("div", { class: "flex p-8" }, [
            V("svg", {
              xmlns: "http://www.w3.org/2000/svg",
              fit: "",
              height: "24px",
              width: "24px",
              preserveAspectRatio: "xMidYMid meet",
              viewBox: "0 0 23 24",
              focusable: "false",
              class: "inline fill-current"
            }, [
              V("g", { id: "format-list-checks_cache966" }, [
                V("path", { d: "M3,5H9V11H3V5M5,7V9H7V7H5M11,7H21V9H11V7M11,15H21V17H11V15M5,20L1.5,16.5L2.91,15.09L5,17.17L9.59,12.59L11,14L5,20Z" })
              ])
            ])
          ], -1)
        ])),
        default: uo(() => [
          (ae(!0), he(nc, null, ic(c.columnDefs.filter(
            (L) => L.headerName && L.headerName.length > 0 && !(!ee(w).ui.exposeOids && c.systemCols?.has(L.headerName)) && !(!ee(w).ui.exposeMeasurements && (c.systemCols?.has(L.headerName) || c.systemCols?.has(L.field)))
          ), (L) => (ae(), he("a", {
            key: L.headerName,
            onClick: (x) => {
              c.columnApi?.setColumnVisible(L.field, L.hide), L.hide = !L.hide, C.$emit("refreshHeaders");
            },
            href: "javascript:;",
            class: "flex leading-snug items-center w-256"
          }, [
            V("div", VC, [
              Ct(He(L.headerName) + " ", 1),
              L.hide ? Ke("", !0) : (ae(), he("svg", WC, S[1] || (S[1] = [
                V("g", { id: "done" }, [
                  V("path", { d: "M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z" })
                ], -1)
              ])))
            ])
          ], 8, HC))), 128))
        ]),
        _: 1
      }, 8, ["tooltip"]);
    };
  }
}), kC = ".ag-root", UC = ".ag-header-viewport .ag-header-row";
class oc {
  element;
  agGrid;
  headerRows;
  agGridApi;
  agColumnApi;
  mousedown = !1;
  /**
   * Triggered by ag-grid whenever a key is pressed on a focused/active cell.
   * For our use case we open a new browser tab (or window, it's based on the users browser settings)
   * for each href attribute found in the cell content when the 'Enter' key is pressed.
   *
   * Note that for security/performance purposes some browsers limit the number
   * of tabs that can be opened to one. The user can disable this limitation by
   * allowing popups from the website hosting a ramp map (shows up as an icon in the url bar of chrome,
   * other browser may vary).
   */
  static onCellKeyPress({ event: w }) {
    function g(C) {
      C.forEach((S) => {
        S.href && window.open(S.href), S.childNodes.length > 0 && g(S.childNodes);
      });
    }
    w.key == "Enter" && g(w.target.childNodes);
  }
  /**
   * Initializes focus lists and listeners for grid keyboard navigation.
   *
   * @param {HTMLElement} element The grid element
   * @param {GridApi} agGridApi The ag-grid grid api
   * @param {ColumnApi} agColumnApi The ag-grid column api
   */
  constructor(w, g, C) {
    this.element = w, this.agGridApi = g, this.agColumnApi = C, this.agGrid = this.element.querySelector(kC), this.headerRows = Array.prototype.slice.call(
      this.element.querySelectorAll(UC)
    ), this.element.querySelector(".ag-body-horizontal-scroll-viewport")?.setAttribute("tabindex", "-1"), this.initAccessibilityListeners(), this.initScrollListeners();
  }
  /**
   * Set up the listeners for the grid
   */
  initAccessibilityListeners() {
    Array.prototype.slice.call(
      this.headerRows[0].querySelectorAll(".ag-header-cell")
    ).forEach((g, C) => {
      if (C < 3)
        return;
      const S = Array.prototype.slice.call(g.querySelectorAll("button"));
      g.addEventListener("keydown", (O) => {
        this.cellKeydownHandler(O, g, S);
      }), g.addEventListener("blur", (O) => {
        this.cellBlurHandler(O, g, S);
      }), S[S.length - 1].addEventListener("keydown", (O) => {
        this.cellButtonTabHandler(O, g, S, !1);
      }), S[0].addEventListener("keydown", (O) => {
        this.cellButtonTabHandler(O, g, S, !0);
      });
    });
  }
  /**
   * Remove all accessibility listeners from the grid
   */
  removeAccessibilityListeners() {
    Array.prototype.slice.call(
      this.headerRows[0].querySelectorAll(".ag-header-cell")
    ).forEach((g, C) => {
      if (C < 3)
        return;
      const S = Array.prototype.slice.call(g.querySelectorAll("button"));
      g.removeEventListener("keydown", (O) => {
        this.cellKeydownHandler(O, g, S);
      }), g.removeEventListener("blur", (O) => {
        this.cellBlurHandler(O, g, S);
      }), S[S.length - 1].removeEventListener("keydown", (O) => {
        this.cellButtonTabHandler(O, g, S, !1);
      }), S[0].removeEventListener("keydown", (O) => {
        this.cellButtonTabHandler(O, g, S, !0);
      });
    });
  }
  /**
   * Makes `enter` allow navigation within the cell
   *
   * @param {KeyboardEvent} event The event to handle
   * @param {HTMLElement} cell The grid header cell
   * @param {HTMLElement[]} buttons The list of buttons in the cell
   */
  cellKeydownHandler(w, g, C) {
    w.key === "Enter" && w.target === g && (w.preventDefault(), C.forEach((S) => {
      S.setAttribute("tabindex", "0");
    }), C[0].focus());
  }
  /**
   * Removes ability to tab to inner items when focus leaves the cell (and inner items)
   *
   * @param {FocusEvent} event The event to handle
   * @param {HTMLElement} cell The grid header cell
   * @param {HTMLElement[]} buttons The list of buttons in the cell
   */
  cellBlurHandler(w, g, C) {
    w.target === g && !C.includes(w.relatedTarget) && C.forEach((S) => {
      S.setAttribute("tabindex", "-1");
    });
  }
  /**
   * Handles giving focus back to the cell after shift+tabbing on the first inner item or tabbing on the last
   *
   * @param event The event to handle
   * @param cell The grid header cell
   * @param buttons The list of buttons in the cell
   * @param shift Whether to handle shift tab or regular tab
   */
  cellButtonTabHandler(w, g, C, S) {
    w.key === "Tab" && (S && w.shiftKey || !S && !w.shiftKey) && (w.preventDefault(), g.focus(), C.forEach((O) => {
      O.setAttribute("tabindex", "-1");
    }));
  }
  //  **** CLICK & DRAG SCROLLING ****
  /**
   * Initializes the handlers needed for click + drag scrolling
   */
  initScrollListeners() {
    this.agGrid.style.cursor = "grab", this.agGrid.addEventListener("mousedown", (w) => {
      this.scrollMouseDownHandler(w);
    });
  }
  /**
   * Removes the handlers for click + drag scrolling
   */
  removeScrollListeners() {
    this.agGrid.style.cursor = "default", this.agGrid.removeEventListener("mousedown", (w) => {
      this.scrollMouseDownHandler(w);
    });
  }
  /**
   * Handles starting click + drag scrolling on mousedown
   *
   * @param {MouseEvent} event The mousedown event
   */
  scrollMouseDownHandler(w) {
    const g = this.element.querySelector(".ag-body-horizontal-scroll-viewport"), C = g.scrollLeft, S = w.clientX;
    this.agGrid.style.cursor = "grabbing";
    const O = (x) => {
      const G = x.clientX - S;
      g.scrollLeft = C - G;
    }, L = () => {
      this.agGrid.style.cursor = "grab", this.agGrid.removeEventListener("mousemove", O), this.agGrid.removeEventListener("mouseup", L), this.agGrid.removeEventListener("mouseleave", L);
    };
    this.agGrid.addEventListener("mousemove", O), this.agGrid.addEventListener("mouseup", L), this.agGrid.addEventListener("mouseleave", L);
  }
}
function jC(c) {
  const w = c.previousHeaderPosition.column, g = c.previousHeaderPosition.headerRowIndex;
  let C = c.backwards ? g - 1 : g + 1;
  return C === -1 ? null : (C === c.headerRowCount && (C = -1), { headerRowIndex: C, column: w });
}
function zC(c) {
  return c.backwards ? { column: c.previousCellPosition.column, rowIndex: -1 } : null;
}
const $C = { class: "h-full flex items-center justify-center" }, KC = ["placeholder", "aria-label", "disabled"], YC = ["placeholder", "aria-label", "disabled"], qC = {
  methods: {
    onParentModelChanged() {
    }
  }
}, XC = /* @__PURE__ */ Ye({
  ...qC,
  __name: "custom-number-filter",
  props: ["params"],
  setup(c) {
    const w = oi(), { t: g } = Et(), C = c, S = ne(""), O = ne(""), L = ne(C.params.stateManager.columns[C.params.column.colDef.field].filter.static), x = () => {
      S.value = S.value !== "" && !isNaN(S.value) ? S.value : null, C.params.parentFilterInstance((Q) => {
        se(Q), C.params.stateManager.setColumnFilterValue(C.params.column.colDef.field, S.value, "min");
      });
    }, G = () => {
      O.value = O.value !== "" && !isNaN(O.value) ? O.value : null, C.params.parentFilterInstance((Q) => {
        se(Q), C.params.stateManager.setColumnFilterValue(C.params.column.colDef.field, O.value, "max");
      });
    }, se = (Q) => {
      (isNaN(S.value) || S.value === null) && (S.value = ""), (isNaN(O.value) || O.value === null) && (O.value = ""), O.value !== "" && S.value !== "" ? Q.setModel({
        filterType: "number",
        type: "inRange",
        filter: S.value,
        filterTo: O.value
      }) : S.value === "" ? Q.setModel({
        filterType: "number",
        type: "lessThanOrEqual",
        filter: O.value
      }) : O.value === "" ? Q.setModel({
        filterType: "number",
        type: "greaterThanOrEqual",
        filter: S.value
      }) : Q.setModel(null), C.params.api.onFilterChanged();
    };
    return ii(() => {
      S.value = C.params.stateManager.getColumnFilterValue(C.params.column.colDef.field, "min"), O.value = C.params.stateManager.getColumnFilterValue(C.params.column.colDef.field, "max"), x(), G();
    }), (Q, $) => (ae(), he("div", $C, [
      Re(V("input", {
        class: Nt(["rv-min rv-input bg-white text-black-75 h-24 py-16 px-8 border-2 rounded", {
          "cursor-not-allowed": L.value
        }]),
        style: { width: "45%" },
        type: "number",
        "onUpdate:modelValue": $[0] || ($[0] = (W) => S.value = W),
        onInput: $[1] || ($[1] = (W) => x()),
        onMousedown: $[2] || ($[2] = dt(() => {
        }, ["stop"])),
        onKeypress: $[3] || ($[3] = ht(dt(() => {
        }, ["prevent"]), ["enter"])),
        onKeyup: $[4] || ($[4] = ht((W) => {
          ee(w).mobileView && W.target.blur();
        }, ["enter"])),
        enterkeyhint: "done",
        placeholder: ee(g)("grid.filters.number.min"),
        "aria-label": ee(g)("grid.filters.number.min"),
        disabled: L.value
      }, null, 42, KC), [
        [po, S.value]
      ]),
      $[10] || ($[10] = V("span", { class: "w-12" }, null, -1)),
      Re(V("input", {
        class: Nt(["rv-max rv-input bg-white text-black-75 h-24 py-16 px-8 border-2 rounded", {
          "cursor-not-allowed": L.value
        }]),
        style: { width: "45%" },
        type: "number",
        "onUpdate:modelValue": $[5] || ($[5] = (W) => O.value = W),
        onInput: $[6] || ($[6] = (W) => G()),
        onMousedown: $[7] || ($[7] = dt(() => {
        }, ["stop"])),
        onKeypress: $[8] || ($[8] = ht(dt(() => {
        }, ["prevent"]), ["enter"])),
        onKeyup: $[9] || ($[9] = ht((W) => {
          ee(w).mobileView && W.target.blur();
        }, ["enter"])),
        enterkeyhint: "done",
        placeholder: ee(g)("grid.filters.number.max"),
        "aria-label": ee(g)("grid.filters.number.max"),
        disabled: L.value
      }, null, 42, YC), [
        [po, O.value]
      ])
    ]));
  }
}), QC = /* @__PURE__ */ ni(XC, [["__scopeId", "data-v-6583eadd"]]), ZC = { class: "h-full flex items-center justify-center" }, JC = ["placeholder", "aria-label", "disabled"], ew = {
  methods: {
    onParentModelChanged() {
    }
  }
}, tw = /* @__PURE__ */ Ye({
  ...ew,
  __name: "custom-text-filter",
  props: ["params"],
  setup(c) {
    const w = oi(), { t: g } = Et(), C = c, S = ne(""), O = ne(C.params.stateManager.columns[C.params.column.colDef.field].filter.static), L = () => {
      C.params.parentFilterInstance((x) => {
        S.value = S.value ? S.value : "", x.setModel({
          filterType: "text",
          type: "contains",
          filter: S.value
        }), C.params.stateManager.setColumnFilterValue(C.params.column.colDef.field, S.value), C.params.api.onFilterChanged();
      });
    };
    return ii(() => {
      S.value = C.params.stateManager.getColumnFilterValue(C.params.column.colDef.field), L();
    }), (x, G) => (ae(), he("div", ZC, [
      Re(V("input", {
        class: Nt(["rv-input w-full bg-white text-black-75 h-24 py-16 px-8 border-2 rounded", {
          "cursor-not-allowed": O.value
        }]),
        type: "text",
        onInput: G[0] || (G[0] = (se) => L()),
        "onUpdate:modelValue": G[1] || (G[1] = (se) => S.value = se),
        onMousedown: G[2] || (G[2] = dt(() => {
        }, ["stop"])),
        onKeypress: G[3] || (G[3] = ht(dt(() => {
        }, ["prevent"]), ["enter"])),
        onKeyup: G[4] || (G[4] = ht((se) => {
          ee(w).mobileView && se.target.blur();
        }, ["enter"])),
        enterkeyhint: "done",
        placeholder: ee(g)("grid.filters.column.label.text", [c.params.column.colDef.headerName]),
        "aria-label": ee(g)("grid.filters.column.label.text", [c.params.column.colDef.headerName]),
        disabled: O.value
      }, null, 42, JC), [
        [po, S.value]
      ])
    ]));
  }
}), rw = { class: "h-full flex items-center justify-center" }, ow = ["aria-label", "disabled"], iw = ["value"], nw = {
  methods: {
    onParentModelChanged() {
    }
  }
}, sw = /* @__PURE__ */ Ye({
  ...nw,
  __name: "custom-selector-filter",
  props: ["params"],
  setup(c) {
    const w = c, g = ne(""), C = ne([]), S = ne(w.params.stateManager.columns[w.params.column.colDef.field].filter.static), O = () => {
      g.value = g.value ? g.value : "", w.params.parentFilterInstance((L) => {
        g.value === "..." ? (L.setModel(null), g.value = "") : L.setModel({
          filterType: "text",
          type: "contains",
          filter: g.value
        }), w.params.stateManager.setColumnFilterValue(w.params.column.colDef.field, g.value), w.params.api.onFilterChanged();
      });
    };
    return ii(() => {
      g.value = w.params.stateManager.getColumnFilterValue(w.params.column.colDef.field);
      let L = w.params.rowData;
      L = L.map((x) => x[w.params.column.colId]), C.value = L.filter((x, G) => L.indexOf(x) === G), C.value.unshift("..."), O();
    }), (L, x) => (ae(), he("div", rw, [
      Re(V("select", {
        class: Nt(["rv-input w-full bg-white text-black-75 h-24 py-0 px-8 border-2 rounded", {
          "cursor-not-allowed": S.value
        }]),
        "onUpdate:modelValue": x[0] || (x[0] = (G) => g.value = G),
        onChange: x[1] || (x[1] = (G) => O()),
        onMousedown: x[2] || (x[2] = dt(() => {
        }, ["stop"])),
        "aria-label": g.value,
        disabled: S.value
      }, [
        (ae(!0), he(nc, null, ic(C.value, (G) => (ae(), he("option", {
          value: G,
          key: G
        }, He(G), 9, iw))), 128))
      ], 42, ow), [
        [gC, g.value]
      ])
    ]));
  }
}), aw = /* @__PURE__ */ ni(sw, [["__scopeId", "data-v-f1c7aa13"]]), lw = { class: "h-full flex items-center justify-center w-full" }, uw = ["placeholder", "aria-label", "disabled"], pw = ["placeholder", "aria-label", "disabled"], cw = {
  methods: {
    onParentModelChanged() {
    }
  }
}, dw = /* @__PURE__ */ Ye({
  ...cw,
  __name: "custom-date-filter",
  props: ["params"],
  setup(c) {
    const w = oi(), { t: g } = Et(), C = c, S = ne(""), O = ne(""), L = ne(C.params.stateManager.columns[C.params.column.colDef.field].filter.static), x = () => {
      C.params.parentFilterInstance((Q) => {
        se(Q), C.params.stateManager.setColumnFilterValue(C.params.column.colDef.field, S.value, "min");
      });
    }, G = () => {
      C.params.parentFilterInstance((Q) => {
        se(Q), C.params.stateManager.setColumnFilterValue(C.params.column.colDef.field, O.value, "max");
      });
    }, se = (Q) => {
      O.value === "" && S.value === "" ? Q.setModel(null) : O.value !== "" && S.value !== "" ? Q.setModel({
        filterType: "date",
        type: "inRange",
        dateFrom: S.value,
        dateTo: O.value
      }) : S.value === "" ? Q.setModel({
        filterType: "date",
        type: "lessThan",
        dateFrom: O.value
      }) : O.value === "" && Q.setModel({
        filterType: "date",
        type: "greaterThan",
        dateFrom: S.value
      }), C.params.api.onFilterChanged();
    };
    return ii(() => {
      S.value = C.params.stateManager.getColumnFilterValue(C.params.column.colDef.field, "min") || "", O.value = C.params.stateManager.getColumnFilterValue(C.params.column.colDef.field, "max") || "", x(), G();
    }), (Q, $) => (ae(), he("div", lw, [
      Re(V("input", {
        class: Nt(["m-0 py-1 w-1/2 rv-input bg-white text-black-75 h-24 py-16 px-8 border-2 rounded", {
          "cursor-not-allowed": L.value
        }]),
        type: "date",
        placeholder: ee(g)("grid.filters.date.min"),
        "aria-label": ee(g)("grid.filters.date.min"),
        "onUpdate:modelValue": $[0] || ($[0] = (W) => S.value = W),
        onInput: $[1] || ($[1] = (W) => x()),
        onMousedown: $[2] || ($[2] = dt(() => {
        }, ["stop"])),
        onKeypress: $[3] || ($[3] = ht(dt(() => {
        }, ["prevent"]), ["enter"])),
        onKeyup: $[4] || ($[4] = ht((W) => {
          ee(w).mobileView && W.target.blur();
        }, ["enter"])),
        enterkeyhint: "done",
        disabled: L.value
      }, null, 42, uw), [
        [po, S.value]
      ]),
      $[10] || ($[10] = V("span", { class: "w-12" }, null, -1)),
      Re(V("input", {
        class: Nt(["m-0 py-1 w-1/2 rv-input bg-white text-black-75 h-24 py-16 px-8 border-2 rounded", {
          "cursor-not-allowed": L.value
        }]),
        type: "date",
        placeholder: ee(g)("grid.filters.date.max"),
        "aria-label": ee(g)("grid.filters.date.max"),
        "onUpdate:modelValue": $[5] || ($[5] = (W) => O.value = W),
        onInput: $[6] || ($[6] = (W) => G()),
        onMousedown: $[7] || ($[7] = dt(() => {
        }, ["stop"])),
        onKeypress: $[8] || ($[8] = ht(dt(() => {
        }, ["prevent"]), ["enter"])),
        onKeyup: $[9] || ($[9] = ht((W) => {
          ee(w).mobileView && W.target.blur();
        }, ["enter"])),
        enterkeyhint: "done",
        disabled: L.value
      }, null, 42, pw), [
        [po, O.value]
      ])
    ]));
  }
}), hw = /* @__PURE__ */ ni(dw, [["__scopeId", "data-v-9db9be0a"]]), fw = ["content", "disabled"], gw = /* @__PURE__ */ Ye({
  __name: "clear-filter",
  props: ["params"],
  setup(c) {
    const w = c, { t: g } = Et(), C = ne(), S = () => w.params.clearFilters();
    return ho(async () => {
      await gn();
      const O = C.value?.closest(".ag-header-cell"), L = O.closest(".ag-pinned-left-header");
      O.addEventListener("keydown", async (x) => {
        x.key === "Enter" && (x.stopPropagation(), S(), await gn(), L.querySelector(".ag-header-cell.ag-floating-filter").focus());
      }), O.addEventListener("focus", () => {
        C.value._tippy.show();
      }), O.addEventListener("blur", () => {
        C.value._tippy.hide();
      });
    }), Ar(() => {
      const O = C.value?.closest(".ag-header-cell"), L = O.closest(".ag-pinned-left-header");
      O.removeEventListener("keydown", async (x) => {
        x.key === "Enter" && (x.stopPropagation(), S(), await gn(), L.querySelector(".ag-header-cell.ag-floating-filter").focus());
      }), O.removeEventListener("focus", () => {
        C.value._tippy.show();
      }), O.removeEventListener("blur", () => {
        C.value._tippy.hide();
      });
    }), (O, L) => {
      const x = Gt("tippy");
      return Re((ae(), he("button", {
        type: "button",
        class: "clearFilterButton flex items-center justify-center w-full h-full disabled:opacity-30 disabled:cursor-default text-gray-500 hover:text-black",
        onClick: S,
        content: ee(g)("grid.filters.clear"),
        disabled: !c.params.stateManager.filtered,
        tabindex: "-1",
        ref_key: "el",
        ref: C
      }, L[0] || (L[0] = [
        V("svg", {
          xmlns: "http://www.w3.org/2000/svg",
          "enable-background": "new 0 0 24 24",
          class: "h-24 w-24 fill-current",
          viewBox: "0 0 24 24"
        }, [
          V("g", null, [
            V("rect", {
              fill: "none",
              height: "24",
              width: "24"
            })
          ]),
          V("g", null, [
            V("g", null, [
              V("path", { d: "M19.79,5.61C20.3,4.95,19.83,4,19,4H6.83l7.97,7.97L19.79,5.61z" }),
              V("path", { d: "M2.81,2.81L1.39,4.22L10,13v6c0,0.55,0.45,1,1,1h2c0.55,0,1-0.45,1-1v-2.17l5.78,5.78l1.41-1.41L2.81,2.81z" })
            ])
          ])
        ], -1)
      ]), 8, fw)), [
        [x, { placement: "bottom" }]
      ]);
    };
  }
}), vw = {
  key: 0,
  class: "flex flex-1 items-center min-w-0",
  "truncate-trigger": ""
}, mw = ["content", "aria-label"], yw = {
  key: 1,
  class: "customHeaderLabel",
  role: "columnheader"
}, Cw = {
  key: 2,
  class: "flex"
}, ww = {
  key: 0,
  class: "w-24 inline-block"
}, Ew = {
  key: 1,
  class: "customSortDownLabel"
}, Rw = {
  key: 2,
  class: "customSortUpLabel"
}, Sw = ["content", "aria-label", "disabled"], _w = ["content", "aria-label", "disabled"], Ow = /* @__PURE__ */ Ye({
  __name: "custom-header",
  props: ["params"],
  setup(c) {
    const { t: w } = Et(), g = c, C = ne(), S = ne(0), O = ne(!1), L = ne(!1), x = ne(!1), G = ne(null), se = () => {
      const we = G.value.getAllDisplayedColumns(), te = we.indexOf(g.params.column);
      L.value = te > 3 && !we[te - 1].colDef.isStatic, x.value = te < we.length - 1 && !we[te + 1].colDef.isStatic;
    }, Q = () => {
      const we = G.value.getAllDisplayedColumns(), te = G.value.getAllGridColumns(), ie = te.indexOf(we[we.indexOf(g.params.column) - 1]);
      L.value && (G.value.moveColumn(g.params.column, ie), g.params.api.ensureColumnVisible(te[ie]), C.value?.closest(".ag-header-row")?.querySelector(`[col-id="${g.params.column.colId}"]`)?.querySelector(".move-left")?.focus());
    }, $ = () => {
      const we = G.value.getAllDisplayedColumns(), te = G.value.getAllGridColumns(), ie = te.indexOf(we[we.indexOf(g.params.column) + 1]);
      x.value && (G.value.moveColumn(g.params.column, ie), g.params.api.ensureColumnVisible(te[ie]));
    }, W = (we) => {
      S.value = (S.value + 1) % 3, S.value === 1 ? g.params.setSort("asc", we.shiftKey) : S.value === 2 ? g.params.setSort("desc", we.shiftKey) : g.params.setSort("none", we.shiftKey);
    };
    return ho(() => {
      O.value = g.params.column.colDef.sortable, G.value = g.params.columnApi, g.params.sort === "asc" ? (S.value = 1, g.params.setSort("asc")) : g.params.sort === "desc" && (S.value = 2, g.params.setSort("desc")), se(), g.params.column.addEventListener("leftChanged", () => {
        se();
      });
    }), Ar(() => {
      g.params.column.removeEventListener("leftChanged", () => {
        se();
      });
    }), (we, te) => {
      const ie = Gt("truncate"), Rt = Gt("tippy");
      return ae(), he("div", {
        class: "ag-custom-header flex flex-1 items-center h-full w-full",
        ref_key: "el",
        ref: C
      }, [
        O.value ? (ae(), he("div", vw, [
          Re((ae(), he("button", {
            type: "button",
            onClick: te[0] || (te[0] = (ze) => W(ze)),
            content: ee(w)(`grid.header.sort.${S.value}`),
            "aria-label": ee(w)(`grid.header.sort.${S.value}`),
            class: "customHeaderLabel hover:bg-gray-300 font-bold p-8 max-w-full",
            role: "columnheader",
            tabindex: "-1"
          }, [
            Re((ae(), he("div", null, [
              Ct(He(c.params.displayName), 1)
            ])), [
              [ie, { externalTrigger: !0 }]
            ])
          ], 8, mw)), [
            [Rt, { placement: "top", hideOnClick: !1 }]
          ])
        ])) : Re((ae(), he("span", yw, [
          Ct(He(c.params.displayName), 1)
        ])), [
          [ie]
        ]),
        O.value ? (ae(), he("div", Cw, [
          c.params.enableSorting && S.value === 0 ? (ae(), he("span", ww)) : Ke("", !0),
          c.params.enableSorting && S.value === 1 ? (ae(), he("span", Ew, te[3] || (te[3] = [
            V("div", { class: "md-icon-small" }, [
              V("svg", {
                height: "24",
                width: "24"
              }, [
                V("g", { id: "arrow_upward" }, [
                  V("path", { d: "M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z" })
                ])
              ])
            ], -1)
          ]))) : Ke("", !0),
          c.params.enableSorting && S.value === 2 ? (ae(), he("span", Rw, te[4] || (te[4] = [
            V("div", { class: "md-icon-small" }, [
              V("svg", {
                height: "24",
                width: "24"
              }, [
                V("g", { id: "arrow_downward" }, [
                  V("path", { d: "M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z" })
                ])
              ])
            ], -1)
          ]))) : Ke("", !0),
          Re((ae(), he("button", {
            type: "button",
            content: ee(w)("grid.header.reorder.left"),
            "aria-label": ee(w)("grid.header.reorder.left"),
            onClick: te[1] || (te[1] = (ze) => Q()),
            class: "move-left opacity-60 hover:opacity-90 disabled:opacity-30 disabled:cursor-default flex justify-center items-center",
            tabindex: "-1",
            disabled: !L.value
          }, te[5] || (te[5] = [
            V("div", { class: "inline-block" }, [
              V("svg", {
                height: "24",
                width: "24"
              }, [
                V("g", { id: "keyboard_arrow_left" }, [
                  V("path", { d: "M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z" })
                ])
              ])
            ], -1)
          ]), 8, Sw)), [
            [Rt, { placement: "top" }]
          ]),
          Re((ae(), he("button", {
            type: "button",
            content: ee(w)("grid.header.reorder.right"),
            "aria-label": ee(w)("grid.header.reorder.right"),
            onClick: te[2] || (te[2] = (ze) => $()),
            class: "move-right opacity-60 hover:opacity-90 disabled:opacity-30 disabled:cursor-default flex justify-center items-center",
            tabindex: "-1",
            disabled: !x.value
          }, te[6] || (te[6] = [
            V("div", { class: "inline-block" }, [
              V("svg", {
                height: "24",
                width: "24"
              }, [
                V("g", { id: "keyboard_arrow_right" }, [
                  V("path", { d: "M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z" })
                ])
              ])
            ], -1)
          ]), 8, _w)), [
            [Rt, { placement: "top" }]
          ])
        ])) : Ke("", !0)
      ], 512);
    };
  }
}), Aw = ["content"], Pw = /* @__PURE__ */ Ye({
  __name: "details-button-renderer",
  props: ["params"],
  setup(c) {
    const w = c, { t: g } = Et(), C = co("iApi"), S = ne(), O = async () => {
      const L = w.params.data, x = L.rvUid, G = C.geo.layer.getLayer(x), se = G.oidField, $ = w.params.layerCols[G.id].find(
        (we) => we.origAttr === se
      )?.mappedAttr || se, W = await G.getGraphic(L[$], {
        getAttribs: !0
      });
      C.event.emit(
        Or.DETAILS_TOGGLE,
        {
          data: W.attributes,
          uid: x,
          format: vC.ESRI
        },
        !0
      ), w.params.isTeleport && C.scrollToInstance();
    };
    return ho(() => {
      w.params.eGridCell.addEventListener("keydown", (L) => {
        L.key === "Enter" && O();
      }), w.params.eGridCell.addEventListener("focus", () => {
        S.value._tippy.show();
      }), w.params.eGridCell.addEventListener("blur", () => {
        S.value._tippy.hide();
      });
    }), Ar(() => {
      w.params.eGridCell.removeEventListener("keydown", (L) => {
        L.key === "Enter" && O();
      }), w.params.eGridCell.removeEventListener("focus", () => {
        S.value._tippy.show();
      }), w.params.eGridCell.removeEventListener("blur", () => {
        S.value._tippy.hide();
      });
    }), (L, x) => {
      const G = Gt("tippy");
      return Re((ae(), he("button", {
        type: "button",
        class: "flex items-center justify-center w-40 h-36",
        content: ee(g)("grid.cells.details"),
        onClick: O,
        tabindex: "-1",
        ref_key: "el",
        ref: S
      }, x[0] || (x[0] = [
        V("svg", {
          class: "m-auto",
          xmlns: "http://www.w3.org/2000/svg",
          height: "16",
          viewBox: "0 0 24 24",
          width: "16"
        }, [
          V("path", {
            d: "M0 0h24v24H0z",
            fill: "none"
          }),
          V("path", {
            style: { fill: "#979797" },
            d: "M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z"
          })
        ], -1)
      ]), 8, Aw)), [
        [G, { placement: "top" }]
      ]);
    };
  }
}), Tw = ["content"], Dw = {
  key: 0,
  class: "m-auto animate-spin spinner h-20 w-20"
}, bw = {
  key: 1,
  xmlns: "http://www.w3.org/2000/svg",
  fill: "none",
  viewBox: "0 0 24 24",
  "stroke-width": "1.5",
  stroke: "green",
  class: "w-20 h-20"
}, Fw = {
  key: 2,
  xmlns: "http://www.w3.org/2000/svg",
  fill: "none",
  viewBox: "0 0 24 24",
  "stroke-width": "1.5",
  stroke: "red",
  class: "w-20 h-20"
}, Lw = ["innerHTML"], Mw = /* @__PURE__ */ Ye({
  __name: "zoom-button-renderer",
  props: ["params"],
  setup(c) {
    const w = ne("none"), g = c, C = co("iApi"), S = mC(), O = ne(), { t: L } = Et(), x = xt(() => {
      const Q = S.getLayerByUid(g.params.data.rvUid);
      return !!Q && Q.mapLayer;
    }), G = () => {
      if (w.value !== "none")
        return;
      w.value = "zooming";
      const Q = S.getLayerByUid(g.params.data.rvUid);
      if (Q === void 0 || !Q.isLoaded) {
        se("error");
        return;
      }
      const $ = g.params.layerCols[Q.id].find((te) => te.origAttr === Q.oidField), W = g.params.data[$ ? $.mappedAttr ?? $.origAttr : Q.oidField], we = () => {
        const te = { getGeom: !0 };
        Q.getGraphic(W, te).then((ie) => {
          ie.geometry.invalid() ? (console.error(`Could not find graphic for objectid ${W}`), se("error")) : (C.geo.map.zoomMapTo(ie.geometry), se("zoomed"), C.updateAlert(C.$i18n.t("grid.cells.alert.zoom")), g.params.isTeleport && C.scrollToInstance());
        }).catch(() => {
          se("error");
        });
      };
      Q.layerType === yC.FEATURE && Q.geomType !== CC.POINT ? Q.getGraphicExtent(W).then((te) => {
        C.geo.map.zoomMapTo(te), se("zoomed"), C.updateAlert(C.$i18n.t("grid.cells.alert.zoom")), g.params.isTeleport && C.scrollToInstance();
      }).catch(() => {
        we();
      }) : we();
    }, se = (Q) => {
      Q === "zoomed" || Q === "error" ? setTimeout(() => {
        w.value = Q, O.value?._tippy.show(), setTimeout(() => {
          O.value?._tippy.hide(), w.value = "none";
        }, 3e3);
      }, 300) : w.value = Q;
    };
    return ho(() => {
      x.value && (g.params.eGridCell.addEventListener("keydown", (Q) => {
        Q.key === "Enter" && w.value === "none" && G();
      }), g.params.eGridCell.addEventListener("focus", () => {
        O.value?._tippy.show();
      }), g.params.eGridCell.addEventListener("blur", () => {
        O.value?._tippy.hide();
      }));
    }), Ar(() => {
      x.value && (g.params.eGridCell.removeEventListener("keydown", (Q) => {
        Q.key === "Enter" && G();
      }), g.params.eGridCell.removeEventListener("focus", () => {
        O.value?._tippy.show();
      }), g.params.eGridCell.removeEventListener("blur", () => {
        O.value?._tippy.hide();
      }));
    }), (Q, $) => {
      const W = Gt("tippy");
      return x.value ? Re((ae(), he("button", {
        key: 0,
        type: "button",
        class: "flex items-center justify-center w-40 h-36",
        content: ee(L)(`grid.cells.zoom${w.value === "none" ? "" : `.${w.value}`}`),
        onClick: G,
        tabindex: "-1",
        ref_key: "button",
        ref: O
      }, [
        w.value === "zooming" ? (ae(), he("div", Dw)) : w.value === "zoomed" ? (ae(), he("svg", bw, $[0] || ($[0] = [
          V("path", {
            "stroke-linecap": "round",
            "stroke-linejoin": "round",
            d: "M4.5 12.75l6 6 9-13.5"
          }, null, -1)
        ]))) : w.value === "error" ? (ae(), he("svg", Fw, $[1] || ($[1] = [
          V("path", {
            "stroke-linecap": "round",
            "stroke-linejoin": "round",
            d: "M6 18L18 6M6 6l12 12"
          }, null, -1)
        ]))) : (ae(), he("span", {
          key: 3,
          innerHTML: ee(C).ui.getZoomIcon()
        }, null, 8, Lw))
      ], 8, Tw)), [
        [W, { placement: "top" }]
      ]) : Ke("", !0);
    };
  }
}), Iw = ["content"], Nw = ["innerHTML"], xw = /* @__PURE__ */ Ye({
  __name: "custom-button-renderer",
  props: ["params"],
  setup(c) {
    const w = c, g = co("iApi"), C = ne(), S = xt(() => {
      let L = Object.assign({}, w.params.data);
      const x = g.geo.layer.getLayer(L.rvUid), G = w.params.config.displayOn;
      return !(!x || G === "geo" && !x.mapLayer || G === "data" && x.mapLayer);
    }), O = () => {
      let L = Object.assign({}, w.params.data);
      const x = g.geo.layer.getLayer(L.rvUid), G = w.params.layerCols[x.id].find((Q) => Q.origAttr === x.oidField), se = G.mappedAttr ? L[G.mappedAttr] : L[G.origAttr];
      x.getGraphic(se, { getAttribs: !0 }).then((Q) => {
        g.event.emit(w.params.config.actionEvent, {
          data: Q.attributes,
          layer: x,
          uid: w.params.data.rvUid,
          oid: se
        });
      });
    };
    return ho(() => {
      w.params.eGridCell.addEventListener("keydown", (L) => {
        L.key === "Enter" && O();
      }), w.params.eGridCell.addEventListener("focus", () => {
        C.value._tippy.show();
      }), w.params.eGridCell.addEventListener("blur", () => {
        C.value._tippy.hide();
      });
    }), Ar(() => {
      w.params.eGridCell.removeEventListener("keydown", (L) => {
        L.key === "Enter" && O();
      }), w.params.eGridCell.removeEventListener("focus", () => {
        C.value._tippy.show();
      }), w.params.eGridCell.removeEventListener("blur", () => {
        C.value._tippy.hide();
      });
    }), (L, x) => {
      const G = Gt("tippy");
      return S.value ? Re((ae(), he("button", {
        key: 0,
        type: "button",
        class: "flex items-center justify-center w-42 h-38",
        content: w.params.config.tooltip,
        onClick: O,
        tabindex: "-1",
        ref_key: "el",
        ref: C
      }, [
        V("span", {
          innerHTML: w.params.config.icon
        }, null, 8, Nw)
      ], 8, Iw)), [
        [G, { placement: "top" }]
      ]) : Ke("", !0);
    };
  }
}), Gw = ["name", "content", "innerHTML"], Hw = ["content"], ha = /* @__PURE__ */ Ye({
  __name: "cell-renderer",
  props: ["params"],
  setup(c) {
    const w = oi(), g = co("iApi"), { t: C } = Et(), S = ne(), O = ne(), L = ne(!1), x = c, G = xt(() => w.mobileView), se = () => {
      O.value?.textContent && (L.value = !0, S.value?._tippy.show(), navigator.clipboard.writeText(O.value?.textContent), setTimeout(() => {
        L.value = !1;
      }, 2e3));
    }, Q = xt(() => x.params.type === "number" ? x.params.value == null ? "" : g.ui.formatNumber(x.params.value) : x.params.type === "date" ? x.params.value == null ? "" : new Date(x.params.value).toISOString().slice(0, 10) : x.params.type === "string" ? !x.params.value || /<a[^>]*>[^<]+<\/a>/g.test(x.params.value) ? x.params.value : wC(x.params.value, {
      target: "_blank",
      validate: {
        url: (W) => /^https?:\/\//.test(W)
        // only links that begin with a protocol will be hyperlinked
      }
    }) : ""), $ = xt(() => /<a[^>]*>[^<]+<\/a>/g.test(x.params.value) || /(http(s)?:\/\/.*)/g.test(x.params.value));
    return ho(() => {
      x.params.eGridCell.addEventListener("dblclick", () => {
        se();
      }), x.params.eGridCell.addEventListener("keydown", (W) => {
        W.ctrlKey && W.code === "KeyC" && se();
      }), x.params.eGridCell.addEventListener("blur", () => {
        O.value._tippy.hide(), S.value?._tippy.hide();
      }), x.params.eGridCell.addEventListener("focus", () => {
        O.value?._tippy.show(), setTimeout(() => {
          document.activeElement === x.params.eGridCell && S.value?._tippy.show();
        }, 1e3), O.value._tippy.reference.clientWidth >= O.value._tippy.reference.scrollWidth && O.value._tippy.hide();
      });
    }), Ar(() => {
      x.params.eGridCell.removeEventListener("dblclick", () => {
        se();
      }), x.params.eGridCell.removeEventListener("keydown", (W) => {
        W.ctrlKey && W.code === "KeyC" && se();
      }), x.params.eGridCell.removeEventListener("blur", () => {
        O.value._tippy.hide(), S.value?._tippy.hide();
      }), x.params.eGridCell.removeEventListener("focus", () => {
        O.value._tippy.show(), S.value?._tippy.show();
      });
    }), (W, we) => {
      const te = Gt("truncate"), ie = Gt("tippy");
      return ae(), he("div", null, [
        Re(V("div", {
          name: Q.value,
          content: Q.value,
          tabindex: "-1",
          innerHTML: Q.value,
          ref_key: "el",
          ref: O
        }, null, 8, Gw), [
          [te, {
            options: {
              placement: "top",
              hideOnClick: !1,
              theme: "ramp4",
              maxWidth: G.value ? 300 : 700,
              // remove this once scrollable tooltip option is implemented
              animation: "scale",
              interactive: $.value
            }
          }]
        ]),
        O.value?.textContent ? Re((ae(), he("div", {
          key: 0,
          ref_key: "copyTooltip",
          ref: S,
          content: ee(C)(`grid.label.${L.value ? "copied" : "copy"}`)
        }, null, 8, Hw)), [
          [ie, {
            triggerTarget: O.value,
            placement: "bottom",
            theme: "ramp4",
            hideOnClick: !1,
            delay: [1e3, 0]
          }]
        ]) : Ke("", !0)
      ]);
    };
  }
});
var Vw = {
  // Set Filter
  selectAll: "(Select All)",
  selectAllSearchResults: "(Select All Search Results)",
  addCurrentSelectionToFilter: "Add current selection to filter",
  searchOoo: "Search...",
  blanks: "(Blanks)",
  noMatches: "No matches",
  // Number Filter & Text Filter
  filterOoo: "Filter...",
  equals: "Equals",
  notEqual: "Does not equal",
  blank: "Blank",
  notBlank: "Not blank",
  empty: "Choose one",
  // Number Filter
  lessThan: "Less than",
  greaterThan: "Greater than",
  lessThanOrEqual: "Less than or equal to",
  greaterThanOrEqual: "Greater than or equal to",
  inRange: "Between",
  inRangeStart: "From",
  inRangeEnd: "To",
  // Text Filter
  contains: "Contains",
  notContains: "Does not contain",
  startsWith: "Begins with",
  endsWith: "Ends with",
  // Date Filter
  dateFormatOoo: "yyyy-mm-dd",
  before: "Before",
  after: "After",
  // Filter Conditions
  andCondition: "AND",
  orCondition: "OR",
  // Filter Buttons
  applyFilter: "Apply",
  resetFilter: "Reset",
  clearFilter: "Clear",
  cancelFilter: "Cancel",
  // Filter Titles
  textFilter: "Text Filter",
  numberFilter: "Number Filter",
  dateFilter: "Date Filter",
  setFilter: "Set Filter",
  // Group Column Filter
  groupFilterSelect: "Select field:",
  // Advanced Filter
  advancedFilterContains: "contains",
  advancedFilterNotContains: "does not contain",
  advancedFilterTextEquals: "equals",
  advancedFilterTextNotEqual: "does not equal",
  advancedFilterStartsWith: "begins with",
  advancedFilterEndsWith: "ends with",
  advancedFilterBlank: "is blank",
  advancedFilterNotBlank: "is not blank",
  advancedFilterEquals: "=",
  advancedFilterNotEqual: "!=",
  advancedFilterGreaterThan: ">",
  advancedFilterGreaterThanOrEqual: ">=",
  advancedFilterLessThan: "<",
  advancedFilterLessThanOrEqual: "<=",
  advancedFilterTrue: "is true",
  advancedFilterFalse: "is false",
  advancedFilterAnd: "AND",
  advancedFilterOr: "OR",
  advancedFilterApply: "Apply",
  advancedFilterBuilder: "Builder",
  advancedFilterValidationMissingColumn: "Column is missing",
  advancedFilterValidationMissingOption: "Option is missing",
  advancedFilterValidationMissingValue: "Value is missing",
  advancedFilterValidationInvalidColumn: "Column not found",
  advancedFilterValidationInvalidOption: "Option not found",
  advancedFilterValidationMissingQuote: "Value is missing an end quote",
  advancedFilterValidationNotANumber: "Value is not a number",
  advancedFilterValidationInvalidDate: "Value is not a valid date",
  advancedFilterValidationMissingCondition: "Condition is missing",
  advancedFilterValidationJoinOperatorMismatch: "Join operators within a condition must be the same",
  advancedFilterValidationInvalidJoinOperator: "Join operator not found",
  advancedFilterValidationMissingEndBracket: "Missing end bracket",
  advancedFilterValidationExtraEndBracket: "Too many end brackets",
  advancedFilterValidationMessage: "Expression has an error. ${variable} - ${variable}.",
  advancedFilterValidationMessageAtEnd: "Expression has an error. ${variable} at end of expression.",
  advancedFilterBuilderTitle: "Advanced Filter",
  advancedFilterBuilderApply: "Apply",
  advancedFilterBuilderCancel: "Cancel",
  advancedFilterBuilderAddButtonTooltip: "Add Filter or Group",
  advancedFilterBuilderRemoveButtonTooltip: "Remove",
  advancedFilterBuilderMoveUpButtonTooltip: "Move Up",
  advancedFilterBuilderMoveDownButtonTooltip: "Move Down",
  advancedFilterBuilderAddJoin: "Add Group",
  advancedFilterBuilderAddCondition: "Add Filter",
  advancedFilterBuilderSelectColumn: "Select a column",
  advancedFilterBuilderSelectOption: "Select an option",
  advancedFilterBuilderEnterValue: "Enter a value...",
  advancedFilterBuilderValidationAlreadyApplied: "Current filter already applied.",
  advancedFilterBuilderValidationIncomplete: "Not all conditions are complete.",
  advancedFilterBuilderValidationSelectColumn: "Must select a column.",
  advancedFilterBuilderValidationSelectOption: "Must select an option.",
  advancedFilterBuilderValidationEnterValue: "Must enter a value.",
  // Side Bar
  columns: "Columns",
  filters: "Filters",
  // columns tool panel
  pivotMode: "Pivot Mode",
  groups: "Row Groups",
  rowGroupColumnsEmptyMessage: "Drag here to set row groups",
  values: "Values",
  valueColumnsEmptyMessage: "Drag here to aggregate",
  pivots: "Column Labels",
  pivotColumnsEmptyMessage: "Drag here to set column labels",
  // Header of the Default Group Column
  group: "Group",
  // Row Drag
  rowDragRow: "row",
  rowDragRows: "rows",
  // Other
  loadingOoo: "Loading...",
  loadingError: "ERR",
  noRowsToShow: "No Rows To Show",
  enabled: "Enabled",
  // Menu
  pinColumn: "Pin Column",
  pinLeft: "Pin Left",
  pinRight: "Pin Right",
  noPin: "No Pin",
  valueAggregation: "Value Aggregation",
  noAggregation: "None",
  autosizeThisColumn: "Autosize This Column",
  autosizeAllColumns: "Autosize All Columns",
  groupBy: "Group by",
  ungroupBy: "Un-Group by",
  ungroupAll: "Un-Group All",
  addToValues: "Add ${variable} to values",
  removeFromValues: "Remove ${variable} from values",
  addToLabels: "Add ${variable} to labels",
  removeFromLabels: "Remove ${variable} from labels",
  resetColumns: "Reset Columns",
  expandAll: "Expand All Row Groups",
  collapseAll: "Close All Row Groups",
  copy: "Copy",
  ctrlC: "Ctrl+C",
  ctrlX: "Ctrl+X",
  copyWithHeaders: "Copy With Headers",
  copyWithGroupHeaders: "Copy with Group Headers",
  cut: "Cut",
  paste: "Paste",
  ctrlV: "Ctrl+V",
  export: "Export",
  csvExport: "CSV Export",
  excelExport: "Excel Export",
  columnFilter: "Column Filter",
  columnChooser: "Choose Columns",
  sortAscending: "Sort Ascending",
  sortDescending: "Sort Descending",
  sortUnSort: "Clear Sort",
  // Enterprise Menu Aggregation and Status Bar
  sum: "Sum",
  first: "First",
  last: "Last",
  min: "Min",
  max: "Max",
  none: "None",
  count: "Count",
  avg: "Average",
  filteredRows: "Filtered",
  selectedRows: "Selected",
  totalRows: "Total Rows",
  totalAndFilteredRows: "Rows",
  more: "More",
  to: "to",
  of: "of",
  page: "Page",
  pageLastRowUnknown: "?",
  nextPage: "Next Page",
  lastPage: "Last Page",
  firstPage: "First Page",
  previousPage: "Previous Page",
  pageSizeSelectorLabel: "Page Size:",
  footerTotal: "Total",
  // Pivoting
  pivotColumnGroupTotals: "Total",
  // Enterprise Menu (Charts)
  pivotChartAndPivotMode: "Pivot Chart & Pivot Mode",
  pivotChart: "Pivot Chart",
  chartRange: "Chart Range",
  columnChart: "Column",
  groupedColumn: "Grouped",
  stackedColumn: "Stacked",
  normalizedColumn: "100% Stacked",
  barChart: "Bar",
  groupedBar: "Grouped",
  stackedBar: "Stacked",
  normalizedBar: "100% Stacked",
  pieChart: "Pie",
  pie: "Pie",
  donut: "Donut",
  line: "Line",
  xyChart: "X Y (Scatter)",
  scatter: "Scatter",
  bubble: "Bubble",
  areaChart: "Area",
  area: "Area",
  stackedArea: "Stacked",
  normalizedArea: "100% Stacked",
  histogramChart: "Histogram",
  polarChart: "Polar",
  radarLine: "Radar Line",
  radarArea: "Radar Area",
  nightingale: "Nightingale",
  radialColumn: "Radial Column",
  radialBar: "Radial Bar",
  statisticalChart: "Statistical",
  boxPlot: "Box Plot",
  rangeBar: "Range Bar",
  rangeArea: "Range Area",
  hierarchicalChart: "Hierarchical",
  treemap: "Treemap",
  sunburst: "Sunburst",
  specializedChart: "Specialized",
  waterfall: "Waterfall",
  heatmap: "Heatmap",
  combinationChart: "Combination",
  columnLineCombo: "Column & Line",
  AreaColumnCombo: "Area & Column",
  // Charts
  pivotChartTitle: "Pivot Chart",
  rangeChartTitle: "Range Chart",
  settings: "Chart",
  data: "Set Up",
  format: "Customize",
  categories: "Categories",
  defaultCategory: "(None)",
  series: "Series",
  switchCategorySeries: "Switch Category / Series",
  categoryValues: "Category Values",
  seriesLabels: "Series Labels",
  aggregate: "Aggregate",
  xyValues: "X Y Values",
  paired: "Paired Mode",
  axis: "Axis",
  xAxis: "Horizontal Axis",
  yAxis: "Vertical Axis",
  polarAxis: "Polar Axis",
  radiusAxis: "Radius Axis",
  navigator: "Navigator",
  zoom: "Zoom",
  animation: "Animation",
  crosshair: "Crosshair",
  color: "Color",
  thickness: "Thickness",
  preferredLength: "Preferred Length",
  xType: "X Type",
  axisType: "Axis Type",
  automatic: "Automatic",
  category: "Category",
  number: "Number",
  time: "Time",
  timeFormat: "Time Format",
  autoRotate: "Auto Rotate",
  labelRotation: "Rotation",
  circle: "Circle",
  polygon: "Polygon",
  square: "Square",
  cross: "Cross",
  diamond: "Diamond",
  plus: "Plus",
  triangle: "Triangle",
  heart: "Heart",
  orientation: "Orientation",
  fixed: "Fixed",
  parallel: "Parallel",
  perpendicular: "Perpendicular",
  radiusAxisPosition: "Position",
  ticks: "Ticks",
  gridLines: "Grid Lines",
  width: "Width",
  height: "Height",
  length: "Length",
  padding: "Padding",
  spacing: "Spacing",
  chartStyle: "Chart Style",
  title: "Title",
  chartTitles: "Titles",
  chartTitle: "Chart Title",
  chartSubtitle: "Subtitle",
  horizontalAxisTitle: "Horizontal Axis Title",
  verticalAxisTitle: "Vertical Axis Title",
  polarAxisTitle: "Polar Axis Title",
  titlePlaceholder: "Chart Title",
  background: "Background",
  font: "Font",
  weight: "Weight",
  top: "Top",
  right: "Right",
  bottom: "Bottom",
  left: "Left",
  labels: "Labels",
  calloutLabels: "Callout Labels",
  sectorLabels: "Sector Labels",
  positionRatio: "Position Ratio",
  size: "Size",
  shape: "Shape",
  minSize: "Minimum Size",
  maxSize: "Maximum Size",
  legend: "Legend",
  position: "Position",
  markerSize: "Marker Size",
  markerStroke: "Marker Stroke",
  markerPadding: "Marker Padding",
  itemSpacing: "Item Spacing",
  itemPaddingX: "Item Padding X",
  itemPaddingY: "Item Padding Y",
  layoutHorizontalSpacing: "Horizontal Spacing",
  layoutVerticalSpacing: "Vertical Spacing",
  strokeWidth: "Stroke Width",
  offset: "Offset",
  offsets: "Offsets",
  tooltips: "Tooltips",
  callout: "Callout",
  markers: "Markers",
  shadow: "Shadow",
  blur: "Blur",
  xOffset: "X Offset",
  yOffset: "Y Offset",
  lineWidth: "Line Width",
  lineDash: "Line Dash",
  lineDashOffset: "Dash Offset",
  scrollingZoom: "Scrolling",
  scrollingStep: "Scrolling Step",
  selectingZoom: "Selecting",
  durationMillis: "Duration (ms)",
  crosshairLabel: "Label",
  crosshairSnap: "Snap to Node",
  normal: "Normal",
  bold: "Bold",
  italic: "Italic",
  boldItalic: "Bold Italic",
  predefined: "Predefined",
  fillOpacity: "Fill Opacity",
  strokeColor: "Line Color",
  strokeOpacity: "Line Opacity",
  miniChart: "Mini-Chart",
  histogramBinCount: "Bin count",
  connectorLine: "Connector Line",
  seriesItems: "Series Items",
  seriesItemType: "Item Type",
  seriesItemPositive: "Positive",
  seriesItemNegative: "Negative",
  seriesItemLabels: "Item Labels",
  columnGroup: "Column",
  barGroup: "Bar",
  pieGroup: "Pie",
  lineGroup: "Line",
  scatterGroup: "X Y (Scatter)",
  areaGroup: "Area",
  polarGroup: "Polar",
  statisticalGroup: "Statistical",
  hierarchicalGroup: "Hierarchical",
  specializedGroup: "Specialized",
  combinationGroup: "Combination",
  groupedColumnTooltip: "Grouped",
  stackedColumnTooltip: "Stacked",
  normalizedColumnTooltip: "100% Stacked",
  groupedBarTooltip: "Grouped",
  stackedBarTooltip: "Stacked",
  normalizedBarTooltip: "100% Stacked",
  pieTooltip: "Pie",
  donutTooltip: "Donut",
  lineTooltip: "Line",
  groupedAreaTooltip: "Area",
  stackedAreaTooltip: "Stacked",
  normalizedAreaTooltip: "100% Stacked",
  scatterTooltip: "Scatter",
  bubbleTooltip: "Bubble",
  histogramTooltip: "Histogram",
  radialColumnTooltip: "Radial Column",
  radialBarTooltip: "Radial Bar",
  radarLineTooltip: "Radar Line",
  radarAreaTooltip: "Radar Area",
  nightingaleTooltip: "Nightingale",
  rangeBarTooltip: "Range Bar",
  rangeAreaTooltip: "Range Area",
  boxPlotTooltip: "Box Plot",
  treemapTooltip: "Treemap",
  sunburstTooltip: "Sunburst",
  waterfallTooltip: "Waterfall",
  heatmapTooltip: "Heatmap",
  columnLineComboTooltip: "Column & Line",
  areaColumnComboTooltip: "Area & Column",
  customComboTooltip: "Custom Combination",
  innerRadius: "Inner Radius",
  startAngle: "Start Angle",
  endAngle: "End Angle",
  reverseDirection: "Reverse Direction",
  groupPadding: "Group Padding",
  seriesPadding: "Series Padding",
  tile: "Tile",
  whisker: "Whisker",
  cap: "Cap",
  capLengthRatio: "Length Ratio",
  labelPlacement: "Placement",
  inside: "Inside",
  outside: "Outside",
  noDataToChart: "No data available to be charted.",
  pivotChartRequiresPivotMode: "Pivot Chart requires Pivot Mode enabled.",
  chartSettingsToolbarTooltip: "Menu",
  chartLinkToolbarTooltip: "Linked to Grid",
  chartUnlinkToolbarTooltip: "Unlinked from Grid",
  chartDownloadToolbarTooltip: "Download Chart",
  chartMenuToolbarTooltip: "Menu",
  chartEdit: "Edit Chart",
  chartAdvancedSettings: "Advanced Settings",
  chartLink: "Link to Grid",
  chartUnlink: "Unlink from Grid",
  chartDownload: "Download Chart",
  histogramFrequency: "Frequency",
  seriesChartType: "Series Chart Type",
  seriesType: "Series Type",
  secondaryAxis: "Secondary Axis",
  seriesAdd: "Add a series",
  categoryAdd: "Add a category",
  bar: "Bar",
  column: "Column",
  histogram: "Histogram",
  advancedSettings: "Advanced Settings",
  direction: "Direction",
  horizontal: "Horizontal",
  vertical: "Vertical",
  seriesGroupType: "Group Type",
  groupedSeriesGroupType: "Grouped",
  stackedSeriesGroupType: "Stacked",
  normalizedSeriesGroupType: "100% Stacked",
  legendEnabled: "Enabled",
  invalidColor: "Color value is invalid",
  groupedColumnFull: "Grouped Column",
  stackedColumnFull: "Stacked Column",
  normalizedColumnFull: "100% Stacked Column",
  groupedBarFull: "Grouped Bar",
  stackedBarFull: "Stacked Bar",
  normalizedBarFull: "100% Stacked Bar",
  stackedAreaFull: "Stacked Area",
  normalizedAreaFull: "100% Stacked Area",
  customCombo: "Custom Combination",
  // ARIA
  ariaAdvancedFilterBuilderItem: "${variable}. Level ${variable}. Press ENTER to edit",
  ariaAdvancedFilterBuilderItemValidation: "${variable}. Level ${variable}. ${variable} Press ENTER to edit",
  ariaAdvancedFilterBuilderList: "Advanced Filter Builder List",
  ariaAdvancedFilterBuilderFilterItem: "Filter Condition",
  ariaAdvancedFilterBuilderGroupItem: "Filter Group",
  ariaAdvancedFilterBuilderColumn: "Column",
  ariaAdvancedFilterBuilderOption: "Option",
  ariaAdvancedFilterBuilderValueP: "Value",
  ariaAdvancedFilterBuilderJoinOperator: "Join Operator",
  ariaAdvancedFilterInput: "Advanced Filter Input",
  ariaChecked: "checked",
  ariaColumn: "Column",
  ariaColumnGroup: "Column Group",
  ariaColumnFiltered: "Column Filtered",
  ariaColumnSelectAll: "Toggle Select All Columns",
  ariaDateFilterInput: "Date Filter Input",
  ariaDefaultListName: "List",
  ariaFilterColumnsInput: "Filter Columns Input",
  ariaFilterFromValue: "Filter from value",
  ariaFilterInput: "Filter Input",
  ariaFilterList: "Filter List",
  ariaFilterToValue: "Filter to value",
  ariaFilterValue: "Filter Value",
  ariaFilterMenuOpen: "Open Filter Menu",
  ariaFilteringOperator: "Filtering Operator",
  ariaHidden: "hidden",
  ariaIndeterminate: "indeterminate",
  ariaInputEditor: "Input Editor",
  ariaMenuColumn: "Press ALT DOWN to open column menu",
  ariaFilterColumn: "Press CTRL ENTER to open filter",
  ariaRowDeselect: "Press SPACE to deselect this row",
  ariaRowSelectAll: "Press Space to toggle all rows selection",
  ariaRowToggleSelection: "Press Space to toggle row selection",
  ariaRowSelect: "Press SPACE to select this row",
  ariaRowSelectionDisabled: "Row Selection is disabled for this row",
  ariaSearch: "Search",
  ariaSortableColumn: "Press ENTER to sort",
  ariaToggleVisibility: "Press SPACE to toggle visibility",
  ariaToggleCellValue: "Press SPACE to toggle cell value",
  ariaUnchecked: "unchecked",
  ariaVisible: "visible",
  ariaSearchFilterValues: "Search filter values",
  ariaPageSizeSelectorLabel: "Page Size",
  ariaChartMenuClose: "Close Chart Edit Menu",
  ariaChartSelected: "Selected",
  ariaSkeletonCellLoadingFailed: "Row failed to load",
  ariaSkeletonCellLoading: "Row data is loading",
  // ARIA Labels for Drop Zones
  ariaRowGroupDropZonePanelLabel: "Row Groups",
  ariaValuesDropZonePanelLabel: "Values",
  ariaPivotDropZonePanelLabel: "Column Labels",
  ariaDropZoneColumnComponentDescription: "Press DELETE to remove",
  ariaDropZoneColumnValueItemDescription: "Press ENTER to change the aggregation type",
  ariaDropZoneColumnGroupItemDescription: "Press ENTER to sort",
  // used for aggregate drop zone, format: {aggregation}{ariaDropZoneColumnComponentAggFuncSeparator}{column name}
  ariaDropZoneColumnComponentAggFuncSeparator: " of ",
  ariaDropZoneColumnComponentSortAscending: "ascending",
  ariaDropZoneColumnComponentSortDescending: "descending",
  ariaLabelDialog: "Dialog",
  ariaLabelColumnMenu: "Column Menu",
  ariaLabelColumnFilter: "Column Filter",
  ariaLabelCellEditor: "Cell Editor",
  ariaLabelSelectField: "Select Field",
  // aria labels for rich select
  ariaLabelRichSelectField: "Rich Select Field",
  ariaLabelRichSelectToggleSelection: "Press SPACE to toggle selection",
  ariaLabelRichSelectDeselectAllItems: "Press DELETE to deselect all items",
  ariaLabelRichSelectDeleteSelection: "Press DELETE to deselect item",
  ariaLabelTooltip: "Tooltip",
  ariaLabelContextMenu: "Context Menu",
  ariaLabelSubMenu: "SubMenu",
  ariaLabelAggregationFunction: "Aggregation Function",
  ariaLabelAdvancedFilterAutocomplete: "Advanced Filter Autocomplete",
  ariaLabelAdvancedFilterBuilderAddField: "Advanced Filter Builder Add Field",
  ariaLabelAdvancedFilterBuilderColumnSelectField: "Advanced Filter Builder Column Select Field",
  ariaLabelAdvancedFilterBuilderOptionSelectField: "Advanced Filter Builder Option Select Field",
  ariaLabelAdvancedFilterBuilderJoinSelectField: "Advanced Filter Builder Join Operator Select Field",
  // ARIA Labels for the Side Bar
  ariaColumnPanelList: "Column List",
  ariaFilterPanelList: "Filter List",
  // Number Format (Status Bar, Pagination Panel)
  thousandSeparator: ",",
  decimalSeparator: ".",
  // Data types
  true: "True",
  false: "False",
  invalidDate: "Invalid Date",
  invalidNumber: "Invalid Number",
  january: "January",
  february: "February",
  march: "March",
  april: "April",
  may: "May",
  june: "June",
  july: "July",
  august: "August",
  september: "September",
  october: "October",
  november: "November",
  december: "December",
  // Time formats
  timeFormatSlashesDDMMYYYY: "DD/MM/YYYY",
  timeFormatSlashesMMDDYYYY: "MM/DD/YYYY",
  timeFormatSlashesDDMMYY: "DD/MM/YY",
  timeFormatSlashesMMDDYY: "MM/DD/YY",
  timeFormatDotsDDMYY: "DD.M.YY",
  timeFormatDotsMDDYY: "M.DD.YY",
  timeFormatDashesYYYYMMDD: "YYYY-MM-DD",
  timeFormatSpacesDDMMMMYYYY: "DD MMMM YYYY",
  timeFormatHHMMSS: "HH:MM:SS",
  timeFormatHHMMSSAmPm: "HH:MM:SS AM/PM"
}, Ww = {
  // Set Filter
  selectAll: "(Sélectionner tout)",
  selectAllSearchResults: "(Sélectionner tous les résultats de recherche)",
  addCurrentSelectionToFilter: "Ajouter la sélection actuelle au filtre",
  searchOoo: "Chercher...",
  blanks: "(Vides)",
  noMatches: "Aucune correspondance",
  // Number Filter & Text Filter
  filterOoo: "Filtrer...",
  equals: "Égal à",
  notEqual: "N'est pas égal à",
  blank: "Vide",
  notBlank: "Non vide",
  empty: "Choisissez-en un",
  // Number Filter
  lessThan: "Moins de",
  greaterThan: "Plus de",
  lessThanOrEqual: "Moins de ou égal à",
  greaterThanOrEqual: "Plus de ou égal à",
  inRange: "Entre",
  inRangeStart: "De",
  inRangeEnd: "À",
  // Text Filter
  contains: "Contient",
  notContains: "Ne contient pas",
  startsWith: "Commence par",
  endsWith: "Se termine par",
  // Date Filter
  dateFormatOoo: "yyyy-mm-dd",
  before: "Avant",
  after: "Après",
  // Filter Conditions
  andCondition: "ET",
  orCondition: "OU",
  // Filter Buttons
  applyFilter: "Appliquer",
  resetFilter: "Réinitialiser",
  clearFilter: "Effacer",
  cancelFilter: "Annuler",
  // Filter Titles
  textFilter: "Filtre de texte",
  numberFilter: "Filtre numérique",
  dateFilter: "Filtre de date",
  setFilter: "Filtre de jeu",
  // Group Column Filter
  groupFilterSelect: "Sélectionner le champ :",
  // Advanced Filter
  advancedFilterContains: "contient",
  advancedFilterNotContains: "ne contient pas",
  advancedFilterTextEquals: "égal",
  advancedFilterTextNotEqual: "n'est pas égal",
  advancedFilterStartsWith: "commence par",
  advancedFilterEndsWith: "se termine par",
  advancedFilterBlank: "est vide",
  advancedFilterNotBlank: "n'est pas vide",
  advancedFilterEquals: "=",
  advancedFilterNotEqual: "!=",
  advancedFilterGreaterThan: ">",
  advancedFilterGreaterThanOrEqual: ">=",
  advancedFilterLessThan: "<",
  advancedFilterLessThanOrEqual: "<=",
  advancedFilterTrue: "est vrai",
  advancedFilterFalse: "est faux",
  advancedFilterAnd: "ET",
  advancedFilterOr: "OU",
  advancedFilterApply: "Appliquer",
  advancedFilterBuilder: "Constructeur",
  advancedFilterValidationMissingColumn: "La colonne est manquante",
  advancedFilterValidationMissingOption: "L'option est manquante",
  advancedFilterValidationMissingValue: "La valeur est manquante",
  advancedFilterValidationInvalidColumn: "Colonne non trouvée",
  advancedFilterValidationInvalidOption: "Option non trouvée",
  advancedFilterValidationMissingQuote: "Il manque une guillemet de fin à la valeur",
  advancedFilterValidationNotANumber: "La valeur n'est pas un nombre",
  advancedFilterValidationInvalidDate: "La valeur n'est pas une date valide",
  advancedFilterValidationMissingCondition: "La condition est manquante",
  advancedFilterValidationJoinOperatorMismatch: "Les opérateurs de jonction au sein d'une condition doivent être identiques",
  advancedFilterValidationInvalidJoinOperator: "Opérateur de jonction non trouvé",
  advancedFilterValidationMissingEndBracket: "Guillemet de fin manquante",
  advancedFilterValidationExtraEndBracket: "Trop de crochets de fin",
  advancedFilterValidationMessage: "L'expression contient une erreur. ${variable} - ${variable}.",
  advancedFilterValidationMessageAtEnd: "L'expression contient une erreur. ${variable} à la fin de l'expression.",
  advancedFilterBuilderTitle: "Filtre Avancé",
  advancedFilterBuilderApply: "Appliquer",
  advancedFilterBuilderCancel: "Annuler",
  advancedFilterBuilderAddButtonTooltip: "Ajouter un filtre ou un groupe",
  advancedFilterBuilderRemoveButtonTooltip: "Supprimer",
  advancedFilterBuilderMoveUpButtonTooltip: "Monter",
  advancedFilterBuilderMoveDownButtonTooltip: "Descendre",
  advancedFilterBuilderAddJoin: "Ajouter un groupe",
  advancedFilterBuilderAddCondition: "Ajouter un filtre",
  advancedFilterBuilderSelectColumn: "Sélectionner une colonne",
  advancedFilterBuilderSelectOption: "Sélectionner une option",
  advancedFilterBuilderEnterValue: "Entrer une valeur...",
  advancedFilterBuilderValidationAlreadyApplied: "Le filtre actuel est déjà appliqué.",
  advancedFilterBuilderValidationIncomplete: "Toutes les conditions ne sont pas remplies.",
  advancedFilterBuilderValidationSelectColumn: "Vous devez sélectionner une colonne.",
  advancedFilterBuilderValidationSelectOption: "Vous devez sélectionner une option.",
  advancedFilterBuilderValidationEnterValue: "Vous devez entrer une valeur.",
  // Side Bar
  columns: "Colonnes",
  filters: "Filtres",
  // columns tool panel
  pivotMode: "Mode pivot",
  groups: "Groupes de lignes",
  rowGroupColumnsEmptyMessage: "Faites glisser ici pour définir les groupes de lignes",
  values: "Valeurs",
  valueColumnsEmptyMessage: "Faites glisser ici pour agréger",
  pivots: "Étiquettes de colonnes",
  pivotColumnsEmptyMessage: "Faites glisser ici pour définir les étiquettes de colonnes",
  // Header of the Default Group Column
  group: "Groupe",
  // Row Drag
  rowDragRow: "rang",
  rowDragRows: "rangs",
  // Other
  loadingOoo: "Chargement...",
  loadingError: "ERR",
  noRowsToShow: "Aucune ligne à afficher",
  enabled: "Activé",
  // Menu
  pinColumn: "Épingler la colonne",
  pinLeft: "Épingler à gauche",
  pinRight: "Épingler à droite",
  noPin: "Pas d'épingle",
  valueAggregation: "Agrégation de valeur",
  noAggregation: "Aucun",
  autosizeThisColumn: "Ajuster automatiquement cette colonne",
  autosizeAllColumns: "Ajuster automatiquement toutes les colonnes",
  groupBy: "Grouper par",
  ungroupBy: "Dégrouper par",
  ungroupAll: "Dégrouper tout",
  addToValues: "Ajouter ${variable} aux valeurs",
  removeFromValues: "Retirer ${variable} des valeurs",
  addToLabels: "Ajouter ${variable} aux étiquettes",
  removeFromLabels: "Retirer ${variable} des étiquettes",
  resetColumns: "Réinitialiser les colonnes",
  expandAll: "Développer tous les groupes de lignes",
  collapseAll: "Fermer tous les groupes de lignes",
  copy: "Copier",
  ctrlC: "Ctrl+C",
  ctrlX: "Ctrl+X",
  copyWithHeaders: "Copier avec en-têtes",
  copyWithGroupHeaders: "Copier avec en-têtes de groupe",
  cut: "Couper",
  paste: "Coller",
  ctrlV: "Ctrl+V",
  export: "Exporter",
  csvExport: "Export CSV",
  excelExport: "Export Excel",
  columnFilter: "Filtre de colonne",
  columnChooser: "Choisir les colonnes",
  sortAscending: "Trier par ordre croissant",
  sortDescending: "Trier par ordre décroissant",
  sortUnSort: "Effacer le tri",
  // Enterprise Menu Aggregation and Status Bar
  sum: "Somme",
  first: "Premier",
  last: "Dernier",
  min: "Min",
  max: "Max",
  none: "Aucun",
  count: "Nombre",
  avg: "Moyenne",
  filteredRows: "Filtré",
  selectedRows: "Sélectionné",
  totalRows: "Total des Lignes",
  totalAndFilteredRows: "Lignes",
  more: "Plus",
  to: "à",
  of: "de",
  page: "Page",
  pageLastRowUnknown: "?",
  nextPage: "Page Suivante",
  lastPage: "Dernière Page",
  firstPage: "Première Page",
  previousPage: "Page Précédente",
  pageSizeSelectorLabel: "Taille de la Page :",
  footerTotal: "Total",
  // Pivoting
  pivotColumnGroupTotals: "Total",
  // Enterprise Menu (Charts)
  pivotChartAndPivotMode: "Graphique pivot et mode pivot",
  pivotChart: "Graphique pivot",
  chartRange: "Plage de graphique",
  columnChart: "Colonne",
  groupedColumn: "Groupé",
  stackedColumn: "Empilé",
  normalizedColumn: "100% empilé",
  barChart: "Barre",
  groupedBar: "Groupé",
  stackedBar: "Empilé",
  normalizedBar: "100% empilé",
  pieChart: "Camembert",
  pie: "Camembert",
  donut: "Donut",
  line: "Ligne",
  xyChart: "X Y (Nuage de points)",
  scatter: "Nuage de points",
  bubble: "Bulle",
  areaChart: "Aire",
  area: "Aire",
  stackedArea: "Empilé",
  normalizedArea: "100% empilé",
  histogramChart: "Histogramme",
  polarChart: "Polaire",
  radarLine: "Ligne radar",
  radarArea: "Aire radar",
  nightingale: "Nightingale",
  radialColumn: "Colonne radiale",
  radialBar: "Barre radiale",
  statisticalChart: "Statistique",
  boxPlot: "Boîte à moustaches",
  rangeBar: "Barre de plage",
  rangeArea: "Aire de plage",
  hierarchicalChart: "Hiérarchique",
  treemap: "Arborescence",
  sunburst: "Rayonnement",
  specializedChart: "Spécialisé",
  waterfall: "Cascade",
  heatmap: "Carte thermique",
  combinationChart: "Combinaison",
  columnLineCombo: "Colonne et ligne",
  AreaColumnCombo: "Aire et colonne",
  // Charts
  pivotChartTitle: "Graphique croisé dynamique",
  rangeChartTitle: "Graphique en plage",
  settings: "Graphique",
  data: "Configurer",
  format: "Personnaliser",
  categories: "Catégories",
  defaultCategory: "(Aucun)",
  series: "Séries",
  switchCategorySeries: "Changer Catégorie / Séries",
  categoryValues: "Valeurs de catégorie",
  seriesLabels: "Étiquettes de séries",
  aggregate: "Agrégat",
  xyValues: "Valeurs X Y",
  paired: "Mode apparié",
  axis: "Axe",
  xAxis: "Axe horizontal",
  yAxis: "Axe vertical",
  polarAxis: "Axe polaire",
  radiusAxis: "Axe de rayon",
  navigator: "Navigateur",
  zoom: "Zoom",
  animation: "Animation",
  crosshair: "Réticule",
  color: "Couleur",
  thickness: "Épaisseur",
  preferredLength: "Longueur préférée",
  xType: "Type X",
  axisType: "Type d'axe",
  automatic: "Automatique",
  category: "Catégorie",
  number: "Nombre",
  time: "Temps",
  timeFormat: "Format de temps",
  autoRotate: "Rotation auto",
  labelRotation: "Rotation",
  circle: "Cercle",
  polygon: "Polygone",
  square: "Carré",
  cross: "Croix",
  diamond: "Diamant",
  plus: "Plus",
  triangle: "Triangle",
  heart: "Cœur",
  orientation: "Orientation",
  fixed: "Fixé",
  parallel: "Parallèle",
  perpendicular: "Perpendiculaire",
  radiusAxisPosition: "Position",
  ticks: "Graduations",
  gridLines: "Lignes de grille",
  width: "Largeur",
  height: "Hauteur",
  length: "Longueur",
  padding: "Rembourrage",
  spacing: "Espacement",
  chartStyle: "Style de graphique",
  title: "Titre",
  chartTitles: "Titres",
  chartTitle: "Titre du graphique",
  chartSubtitle: "Sous-titre",
  horizontalAxisTitle: "Titre de l'axe horizontal",
  verticalAxisTitle: "Titre de l'axe vertical",
  polarAxisTitle: "Titre de l'axe polaire",
  titlePlaceholder: "Titre du graphique",
  background: "Arrière-plan",
  font: "Police",
  weight: "Poids",
  top: "Haut",
  right: "Droite",
  bottom: "Bas",
  left: "Gauche",
  labels: "Étiquettes",
  calloutLabels: "Étiquettes d'appel",
  sectorLabels: "Étiquettes de secteur",
  positionRatio: "Ratio de position",
  size: "Taille",
  shape: "Forme",
  minSize: "Taille minimum",
  maxSize: "Taille maximum",
  legend: "Légende",
  position: "Position",
  markerSize: "Taille du marqueur",
  markerStroke: "Contour du marqueur",
  markerPadding: "Rembourrage du marqueur",
  itemSpacing: "Espacement des éléments",
  itemPaddingX: "Rembourrage d'élément X",
  itemPaddingY: "Rembourrage d'élément Y",
  layoutHorizontalSpacing: "Espacement horizontal",
  layoutVerticalSpacing: "Espacement vertical",
  strokeWidth: "Épaisseur du trait",
  offset: "Décalage",
  offsets: "Décalages",
  tooltips: "Info-bulles",
  callout: "Appel",
  markers: "Marqueurs",
  shadow: "Ombre",
  blur: "Flou",
  xOffset: "Décalage X",
  yOffset: "Décalage Y",
  lineWidth: "Épaisseur de la ligne",
  lineDash: "Tirets de la ligne",
  lineDashOffset: "Décalage des tirets",
  scrollingZoom: "Défilement",
  scrollingStep: "Étape de défilement",
  selectingZoom: "Sélection",
  durationMillis: "Durée (ms)",
  crosshairLabel: "Étiquette",
  crosshairSnap: "Accrocher au nœud",
  normal: "Normal",
  bold: "Gras",
  italic: "Italique",
  boldItalic: "Gras Italique",
  predefined: "Prédéfini",
  fillOpacity: "Opacité de remplissage",
  strokeColor: "Couleur du trait",
  strokeOpacity: "Opacité du trait",
  miniChart: "Mini-Graphique",
  histogramBinCount: "Nombre de bins",
  connectorLine: "Ligne de connexion",
  seriesItems: "Éléments de série",
  seriesItemType: "Type d'élément",
  seriesItemPositive: "Positif",
  seriesItemNegative: "Négatif",
  seriesItemLabels: "Étiquettes d'éléments",
  columnGroup: "Colonne",
  barGroup: "Barre",
  pieGroup: "Camembert",
  lineGroup: "Ligne",
  scatterGroup: "X Y (Nuage de points)",
  areaGroup: "Zone",
  polarGroup: "Polaire",
  statisticalGroup: "Statistique",
  hierarchicalGroup: "Hiérarchique",
  specializedGroup: "Spécialisé",
  combinationGroup: "Combinaison",
  groupedColumnTooltip: "Groupe",
  stackedColumnTooltip: "Empilé",
  normalizedColumnTooltip: "100% Empilé",
  groupedBarTooltip: "Groupe",
  stackedBarTooltip: "Empilé",
  normalizedBarTooltip: "100% Empilé",
  pieTooltip: "Camembert",
  donutTooltip: "Donut",
  lineTooltip: "Ligne",
  groupedAreaTooltip: "Zone",
  stackedAreaTooltip: "Empilé",
  normalizedAreaTooltip: "100% Empilé",
  scatterTooltip: "Nuage de points",
  bubbleTooltip: "Bulle",
  histogramTooltip: "Histogramme",
  radialColumnTooltip: "Colonne radiale",
  radialBarTooltip: "Barre radiale",
  radarLineTooltip: "Ligne radar",
  radarAreaTooltip: "Zone radar",
  nightingaleTooltip: "Nightingale",
  rangeBarTooltip: "Barre de plage",
  rangeAreaTooltip: "Zone de plage",
  boxPlotTooltip: "Boîte à moustaches",
  treemapTooltip: "Treemap",
  sunburstTooltip: "Rayon de soleil",
  waterfallTooltip: "Chute d'eau",
  heatmapTooltip: "Carte thermique",
  columnLineComboTooltip: "Colonne & Ligne",
  areaColumnComboTooltip: "Zone & Colonne",
  customComboTooltip: "Combinaison Personnalisée",
  innerRadius: "Rayon intérieur",
  startAngle: "Angle de départ",
  endAngle: "Angle de fin",
  reverseDirection: "Inverser la direction",
  groupPadding: "Rembourrage de groupe",
  seriesPadding: "Rembourrage de séries",
  tile: "Tuile",
  whisker: "Moustache",
  cap: "Capuchon",
  capLengthRatio: "Ratio de longueur",
  labelPlacement: "Placement",
  inside: "À l'intérieur",
  outside: "À l'extérieur",
  noDataToChart: "Aucune donnée disponible à afficher.",
  pivotChartRequiresPivotMode: "Le graphique croisé dynamique nécessite le mode croisé activé.",
  chartSettingsToolbarTooltip: "Menu",
  chartLinkToolbarTooltip: "Lié à la grille",
  chartUnlinkToolbarTooltip: "Détaché de la grille",
  chartDownloadToolbarTooltip: "Télécharger le graphique",
  chartMenuToolbarTooltip: "Menu",
  chartEdit: "Modifier le graphique",
  chartAdvancedSettings: "Paramètres avancés",
  chartLink: "Lier à la grille",
  chartUnlink: "Détacher de la grille",
  chartDownload: "Télécharger le graphique",
  histogramFrequency: "Fréquence",
  seriesChartType: "Type de graphique de séries",
  seriesType: "Type de série",
  secondaryAxis: "Axe secondaire",
  seriesAdd: "Ajouter une série",
  categoryAdd: "Ajouter une catégorie",
  bar: "Barre",
  column: "Colonne",
  histogram: "Histogramme",
  advancedSettings: "Paramètres avancés",
  direction: "Direction",
  horizontal: "Horizontal",
  vertical: "Vertical",
  seriesGroupType: "Type de groupe",
  groupedSeriesGroupType: "Groupé",
  stackedSeriesGroupType: "Empilé",
  normalizedSeriesGroupType: "100% Empilé",
  legendEnabled: "Activé",
  invalidColor: "La valeur de couleur est invalide",
  groupedColumnFull: "Colonne groupée",
  stackedColumnFull: "Colonne empilée",
  normalizedColumnFull: "Colonne 100% empilée",
  groupedBarFull: "Barre groupée",
  stackedBarFull: "Barre empilée",
  normalizedBarFull: "Barre 100% empilée",
  stackedAreaFull: "Zone empilée",
  normalizedAreaFull: "Zone 100% empilée",
  customCombo: "Combinaison personnalisée",
  // ARIA
  ariaAdvancedFilterBuilderItem: "${variable}. Niveau ${variable}. Appuyez sur ENTER pour éditer.",
  ariaAdvancedFilterBuilderItemValidation: "${variable}. Niveau ${variable}. ${variable} Appuyez sur ENTER pour éditer.",
  ariaAdvancedFilterBuilderList: "Liste de cadre de filtre avancé",
  ariaAdvancedFilterBuilderFilterItem: "Condition de filtre",
  ariaAdvancedFilterBuilderGroupItem: "Groupe de filtre",
  ariaAdvancedFilterBuilderColumn: "Colonne",
  ariaAdvancedFilterBuilderOption: "Option",
  ariaAdvancedFilterBuilderValueP: "Valeur",
  ariaAdvancedFilterBuilderJoinOperator: "Opérateur de jonction",
  ariaAdvancedFilterInput: "Entrée de filtre avancé",
  ariaChecked: "coché",
  ariaColumn: "Colonne",
  ariaColumnGroup: "Groupe de colonnes",
  ariaColumnFiltered: "Colonne filtrée",
  ariaColumnSelectAll: "Basculer la sélection de toutes les colonnes",
  ariaDateFilterInput: "Entrée de filtre de date",
  ariaDefaultListName: "Liste",
  ariaFilterColumnsInput: "Entrée de filtre de colonnes",
  ariaFilterFromValue: "Filtrer depuis la valeur",
  ariaFilterInput: "Entrée de filtre",
  ariaFilterList: "Liste de filtres",
  ariaFilterToValue: "Filtrer jusqu'à la valeur",
  ariaFilterValue: "Valeur du filtre",
  ariaFilterMenuOpen: "Ouvrir le menu de filtre",
  ariaFilteringOperator: "Opérateur de filtrage",
  ariaHidden: "caché",
  ariaIndeterminate: "indéterminé",
  ariaInputEditor: "Éditeur d'entrée",
  ariaMenuColumn: "Appuyez sur ALT BAS pour ouvrir le menu de colonne",
  ariaFilterColumn: "Appuyez sur CTRL ENTER pour ouvrir le filtre",
  ariaRowDeselect: "Appuyez sur ESPACE pour désélectionner cette ligne",
  ariaRowSelectAll: "Appuyez sur ESPACE pour basculer la sélection de toutes les lignes",
  ariaRowToggleSelection: "Appuyez sur ESPACE pour basculer la sélection de la ligne",
  ariaRowSelect: "Appuyez sur ESPACE pour sélectionner cette ligne",
  ariaRowSelectionDisabled: "La sélection de lignes est désactivée pour cette ligne",
  ariaSearch: "Rechercher",
  ariaSortableColumn: "Appuyez sur ENTER pour trier",
  ariaToggleVisibility: "Appuyez sur ESPACE pour basculer la visibilité",
  ariaToggleCellValue: "Appuyez sur ESPACE pour basculer la valeur de la cellule",
  ariaUnchecked: "non coché",
  ariaVisible: "visible",
  ariaSearchFilterValues: "Rechercher les valeurs de filtre",
  ariaPageSizeSelectorLabel: "Taille de page",
  ariaChartMenuClose: "Fermer le menu d'édition de graphique",
  ariaChartSelected: "Sélectionné",
  ariaSkeletonCellLoadingFailed: "Le chargement de la ligne a échoué",
  ariaSkeletonCellLoading: "Les données de la ligne sont en cours de chargement",
  // ARIA Labels for Drop Zones
  ariaRowGroupDropZonePanelLabel: "Groupes de lignes",
  ariaValuesDropZonePanelLabel: "Valeurs",
  ariaPivotDropZonePanelLabel: "Étiquettes de colonnes",
  ariaDropZoneColumnComponentDescription: "Appuyez sur SUPPRIMER pour enlever",
  ariaDropZoneColumnValueItemDescription: "Appuyez sur ENTRÉE pour changer le type d'agrégation",
  ariaDropZoneColumnGroupItemDescription: "Appuyez sur ENTRÉE pour trier",
  // used for aggregate drop zone, format: {aggregation}{ariaDropZoneColumnComponentAggFuncSeparator}{column name}
  ariaDropZoneColumnComponentAggFuncSeparator: " de ",
  ariaDropZoneColumnComponentSortAscending: "ascendant",
  ariaDropZoneColumnComponentSortDescending: "descendant",
  ariaLabelDialog: "Dialogue",
  ariaLabelColumnMenu: "Menu de colonne",
  ariaLabelColumnFilter: "Filtre de colonne",
  ariaLabelCellEditor: "Éditeur de cellule",
  ariaLabelSelectField: "Champ de sélection",
  // aria labels for rich select
  ariaLabelRichSelectField: "Champ de sélection enrichie",
  ariaLabelRichSelectToggleSelection: "Appuyez sur ESPACE pour basculer la sélection",
  ariaLabelRichSelectDeselectAllItems: "Appuyez sur SUPPRIMER pour désélectionner tous les éléments",
  ariaLabelRichSelectDeleteSelection: "Appuyez sur SUPPRIMER pour désélectionner l'élément",
  ariaLabelTooltip: "Info-bulle",
  ariaLabelContextMenu: "Menu contextuel",
  ariaLabelSubMenu: "Sous-menu",
  ariaLabelAggregationFunction: "Fonction d'agrégation",
  ariaLabelAdvancedFilterAutocomplete: "Filtre avancé auto-complétion",
  ariaLabelAdvancedFilterBuilderAddField: "Filtre avancé constructeur Ajouter un champ",
  ariaLabelAdvancedFilterBuilderColumnSelectField: "Filtre avancé constructeur Sélectionnez le champ de colonne",
  ariaLabelAdvancedFilterBuilderOptionSelectField: "Filtre avancé constructeur Sélectionnez le champ d'option",
  ariaLabelAdvancedFilterBuilderJoinSelectField: "Filtre avancé constructeur Sélectionnez le champ de l'opérateur de jointure",
  // ARIA Labels for the Side Bar
  ariaColumnPanelList: "Liste des colonnes",
  ariaFilterPanelList: "Liste des filtres",
  // Number Format (Status Bar, Pagination Panel)
  thousandSeparator: ",",
  decimalSeparator: ".",
  // Data types
  true: "Vrai",
  false: "Faux",
  invalidDate: "Date invalide",
  invalidNumber: "Nombre invalide",
  january: "Janvier",
  february: "Février",
  march: "Mars",
  april: "Avril",
  may: "Mai",
  june: "Juin",
  july: "Juillet",
  august: "Août",
  september: "Septembre",
  october: "Octobre",
  november: "Novembre",
  december: "Décembre",
  // Time formats
  timeFormatSlashesDDMMYYYY: "JJ/MM/AAAA",
  timeFormatSlashesMMDDYYYY: "MM/JJ/AAAA",
  timeFormatSlashesDDMMYY: "JJ/MM/AA",
  timeFormatSlashesMMDDYY: "MM/JJ/AA",
  timeFormatDotsDDMYY: "JJ.M.AA",
  timeFormatDotsMDDYY: "M.JJ.AA",
  timeFormatDashesYYYYMMDD: "AAAA-MM-JJ",
  timeFormatSpacesDDMMMMYYYY: "JJ MMMM AAAA",
  timeFormatHHMMSS: "HH:MM:SS",
  timeFormatHHMMSSAmPm: "HH:MM:SS AM/PM"
};
const Bw = { class: "pl-8" }, kw = { class: "flex flex-col justify-center items-center h-full" }, Uw = { class: "flex flex-row" }, jw = { class: "font-bold text-2xl" }, zw = { class: "mt-20 text-xl" }, $w = { class: "my-20" }, Kw = { class: "text-sm" }, Yw = ["aria-label"], qw = { class: "flex flex-wrap gap-y-8 items-center pl-8 pb-8" }, Xw = { class: "flex flex-1 flex-col max-w-full mr-8" }, Qw = { class: "w-full font-bold" }, Zw = { class: "w-full text-sm" }, Jw = { key: 0 }, eE = { class: "flex flex-1 grow-[1.4] items-center max-w-full" }, tE = { class: "flex flex-1 min-w-0 items-center pb-4 mr-8" }, rE = ["aria-label", "placeholder"], oE = { class: "-ml-30" }, iE = {
  key: 0,
  xmlns: "http://www.w3.org/2000/svg",
  fit: "",
  preserveAspectRatio: "xMidYMid meet",
  viewBox: "0 0 24 24",
  focusable: "false",
  class: "fill-current w-24 h-24 flex-shrink-0"
}, nE = { class: "pb-2 flex ml-auto justify-end" }, sE = ["content", "aria-label"], aE = ["aria-label"], lE = { class: "md-icon-small inline items-start" }, uE = {
  key: 0,
  height: "18",
  width: "18",
  viewBox: "0 0 24 24",
  class: "inline float-right"
}, pE = ["aria-label"], cE = { class: "md-icon-small inline items-start" }, dE = {
  key: 0,
  height: "18",
  width: "18",
  viewBox: "0 0 24 24",
  class: "inline float-right"
}, hE = ["aria-label"], fE = { class: "md-icon-small inline items-start" }, gE = {
  key: 0,
  height: "18",
  width: "18",
  viewBox: "0 0 24 24",
  class: "inline float-right"
}, vE = ["aria-label"], mE = {
  key: 0,
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24",
  class: "fill-current inline w-20 h-20 mr-2 text-gray-500"
}, yE = {
  key: 1,
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24",
  class: "fill-current inline w-20 h-20 mr-2 text-gray-500"
}, CE = {
  key: 2,
  height: "18",
  width: "18",
  viewBox: "0 0 24 24",
  class: "inline float-right"
}, wE = ["aria-label"], EE = /* @__PURE__ */ Ye({
  __name: "table-component",
  props: {
    panel: {
      type: sc,
      required: !0
    },
    gridId: {
      type: String,
      required: !0
    }
  },
  setup(c) {
    const w = [so.OID, so.DOUBLE, so.SINGLE, so.INTEGER], g = co("iApi"), C = ac(), S = oi(), O = xt(() => S.mobileView), L = ne(!O.value), x = ne(), { t: G, locale: se } = Et(), Q = () => EC()?.proxy?.$forceUpdate(), $ = c, W = ne({
      id: "dummy",
      layerIds: [],
      state: new SC(),
      fieldMap: {}
    }), we = ne(!0), te = ne(new wt.GridApi()), ie = ne(), Rt = ne(), ze = ne(!1), ft = ne(!1), zt = ne([]), Pr = ne(0), Ht = ne([]), nr = ne([]), Tr = ne(""), Se = ne(new wt.ColumnApi()), Fe = ne([]), sr = ne([]), Dr = ne("OBJECTID"), fo = ne(void 0), si = oc.onCellKeyPress, qe = ne({ firstRow: 0, lastRow: 0, visibleRows: 0 }), ar = ne({}), $t = g.geo.layer.getLayer($.gridId), lr = ne({}), yn = ne(C.grids[$.gridId].layerIds), Xe = xt(() => C.grids[$.gridId] ? C.grids[$.gridId].layerIds.map((A) => g.geo.layer.getLayer(A)).filter((A) => A !== void 0) : []), br = ne(/* @__PURE__ */ new Set()), me = ne([]), Fr = (A) => {
      te.value = A.api, Se.value = A.columnApi, Tr.value = W.value.state.title || $t?.name || $.gridId, Lr(), sr.value.length > 0 && Se.value.autoSizeAllColumns();
      const b = () => {
        document.querySelectorAll(".ag-input-field-input.ag-checkbox-input").forEach((M, k) => {
          const Z = Se.value.getAllDisplayedColumns()[k].getColDef();
          M.setAttribute("aria-label", Z.headerName ?? G("grid.label.specialColumn"));
        });
      };
      b(), te.value.addEventListener("rowDataChanged", b), Ht.value.push(
        g.event.on(Or.FILTER_CHANGE, ({ uid: K, filterKey: M }) => {
          M !== fn.GRID && K && Xe.value.map((k) => k.uid).includes(K) && j();
        })
      ), Ht.value.push(
        g.event.on(
          Or.LAYER_VISIBILITYCHANGE,
          ({ layer: K }) => {
            K.uid && Xe.value.map((M) => M.uid).includes(K.uid) && j();
          }
        )
      ), Ht.value.push(
        g.event.on(Or.LAYER_RELOAD_END, (K) => {
          K.loadPromise().then(() => {
            Xe.value.map((M) => M.uid).includes(K.uid) && j();
          });
        })
      ), Ht.value.push(
        g.event.on(Or.CONFIG_CHANGE, () => {
          te.value.redrawRows({
            force: !0
          });
        })
      ), Ht.value.push(
        g.event.on(
          Or.MAP_EXTENTCHANGE,
          Zp(100, () => {
            W.value.state.filterByExtent && j();
          })
        )
      ), Ht.value.push(
        g.event.on(Or.LAYER_REMOVE, (K) => {
          yn.value.includes(K.id) && Xe.value.length !== 0 && di();
        })
      ), j();
    }, Cn = () => {
      Se.value.autoSizeAllColumns(), fo.value = new oc(
        x.value,
        te.value,
        Se.value
      );
    }, ur = () => {
      te.value.setQuickFilter(W.value.state.searchFilter);
    }, go = () => {
      W.value.state.searchFilter = "", ur();
    }, vo = () => {
      go(), Mr(), j();
    }, mo = () => {
      W.value.state.filterByExtent = !W.value.state.filterByExtent, j();
    }, yo = () => {
      let A = ie.value.api.getColumnDefs();
      W.value.state.colFilter = !W.value.state.colFilter, A.forEach((b) => {
        b.floatingFilter = W.value.state.colFilter;
      }), ie.value.api.setColumnDefs(A);
    }, Lr = () => {
      te.value && !ze.value && (W.value.state.searchFilter !== "" && ur(), W.value.state.applyToMap && ve(), gn(() => {
        let A = Se.value.getAllDisplayedColumns();
        ie.value.api.refreshCells({
          columns: [A[0]]
          // Limits the refresh action to the row number column.
        }), it();
      }));
    }, it = () => {
      qe.value.firstRow = te.value.getFirstDisplayedRow() + 1, qe.value.lastRow = te.value.getLastDisplayedRow() + 1, qe.value.visibleRows = te.value.getDisplayedRowCount();
    }, Mr = () => {
      te.value.setFilterModel({}), W.value.state.clearFilters(), te.value.refreshHeader();
    }, ai = () => {
      L.value = !L.value;
      let A = Se.value.getAllDisplayedColumns();
      Se.value.setColumnsPinned(A.slice(1, 3), L.value ? "left" : "");
    }, wn = () => {
      const A = Se.value.getAllDisplayedColumns().filter((b) => !b.getColDef().preventExport);
      te.value.exportDataAsCsv({
        columnKeys: A,
        suppressQuotes: !0,
        processCellCallback: (b) => {
          let K = b.column.getColDef().cellRendererParams;
          return !b.value || K && K.type === "number" ? b.value : K && K.type === "date" ? `"${new Date(b.value).toLocaleDateString("en-CA", {
            timeZone: "UTC",
            year: "numeric",
            month: "2-digit",
            day: "2-digit",
            hour: "2-digit",
            minute: "2-digit",
            second: "2-digit"
          })}"` : `"${b.value.toString().replace(/"/g, '""')}"`;
        }
      });
    }, li = (A, b) => {
      A.floatingFilterComponent = "dateFloatingFilter", A.filterParams.comparator = function(K, M) {
        let k = new Date(M);
        return k.getUTCFullYear() > K.getUTCFullYear() ? 1 : k.getUTCFullYear() < K.getUTCFullYear() ? -1 : k.getUTCMonth() > K.getUTCMonth() ? 1 : k.getUTCMonth() < K.getUTCMonth() ? -1 : k.getUTCDate() - K.getUTCDate();
      }, A.filterParams.inRangeInclusive = !0, A.floatingFilterComponentParams = {
        suppressFilterButton: !0,
        stateManager: b
      };
    }, En = (A, b, K) => {
      A.floatingFilterComponent = "selectorFloatingFilter", A.filterParams.inRangeInclusive = !0, A.floatingFilterComponentParams = {
        suppressFilterButton: !0,
        stateManager: K,
        rowData: b
      };
    }, ui = (A, b) => {
      A.floatingFilterComponent = "numberFloatingFilter", A.filterParams.inRangeInclusive = !0, A.floatingFilterComponentParams = {
        suppressFilterButton: !0,
        stateManager: b
      };
    }, Rn = (A, b) => {
      A.floatingFilterComponent = "textFloatingFilter", A.floatingFilterComponentParams = {
        suppressFilterButton: !0,
        stateManager: b
      }, A.filterParams.textMatcher = function(M) {
        const k = M.filterText.replace(/\*/, "\\*").replace(/[()\[\]]/g, "\\$&");
        return new RegExp(`^.*${k}.*`).test(M.value);
      };
      let K = function(M) {
        let k = M.toLowerCase();
        return k = k.replace(new RegExp("[àáâãäå]", "g"), "a"), k = k.replace(new RegExp("æ", "g"), "ae"), k = k.replace(new RegExp("ç", "g"), "c"), k = k.replace(new RegExp("[èéêë]", "g"), "e"), k = k.replace(new RegExp("[ìíîï]", "g"), "i"), k = k.replace(new RegExp("ñ", "g"), "n"), k = k.replace(new RegExp("[òóôõö]", "g"), "o"), k = k.replace(new RegExp("œ", "g"), "oe"), k = k.replace(new RegExp("[ùúûü]", "g"), "u"), k = k.replace(new RegExp("[ýÿ]", "g"), "y"), k;
      };
      A.filterParams.textFormatter = function(M) {
        return K(M);
      };
    }, Co = (A, b, K) => {
      if (A.field === "rvRowIndex") {
        let M = {
          sortable: !1,
          lockPosition: !0,
          valueGetter: "node.rowIndex + 1",
          suppressMovable: !0,
          suppressMenu: !0,
          floatingFilter: W.value.state.colFilter,
          pinned: "left",
          maxWidth: 42,
          cellStyle: () => ({
            "padding-left": "2px",
            "padding-right": "2px",
            display: "flex",
            "justify-content": "center"
          }),
          floatingFilterComponent: "clearFloatingFilter",
          floatingFilterComponentParams: {
            stateManager: K,
            clearFilters: Mr,
            suppressFilterButton: !0
          },
          filter: !0,
          preventExport: !0
        };
        b.push(M);
      }
      if (A.field === "rvInteractive") {
        const M = W.value.state.controls;
        let k = {
          sortable: !1,
          pinned: O.value ? "" : "left",
          filter: !1,
          lockPosition: !0,
          isStatic: !0,
          maxWidth: 42,
          cellStyle: () => ({
            padding: "0px"
          }),
          cellRenderer: Pw,
          cellRendererParams: {
            $iApi: g,
            t: G,
            layerCols: lr.value,
            isTeleport: $.panel.teleport !== void 0
          },
          preventExport: !0
        };
        if (M.includes("details") && b.push(k), oe.value) {
          let Y = {
            sortable: !1,
            pinned: O.value ? "" : "left",
            filter: !1,
            lockPosition: !0,
            isStatic: !0,
            maxWidth: 42,
            cellStyle: () => ({
              padding: "0px"
            }),
            cellRenderer: Mw,
            cellRendererParams: {
              $iApi: g,
              layerCols: lr.value,
              isTeleport: $.panel.teleport !== void 0
            },
            preventExport: !0
          };
          M.includes("zoom") && b.push(Y);
        }
        M.forEach((Y) => {
          if (Y === "zoom" || Y === "details") return;
          let Z = {
            sortable: !1,
            pinned: O.value ? "" : "left",
            filter: !1,
            lockPosition: !0,
            isStatic: !0,
            maxWidth: 42,
            cellStyle: () => ({
              padding: "0px"
            }),
            cellRenderer: xw,
            cellRendererParams: {
              $iApi: g,
              t: G,
              layerCols: lr.value,
              config: Y
            },
            preventExport: !0
          };
          b.push(Z);
        });
      }
      if (A.field === "rvSymbol") {
        let M = {
          sortable: !1,
          filter: !1,
          lockPosition: !0,
          isStatic: !0,
          maxWidth: 42,
          cellRenderer: (k) => {
            const Y = g.geo.layer.getLayer(k.data.rvUid);
            if (Y === void 0) return;
            const Z = document.createElement("span"), Ve = k.data[Dr.value];
            return Y.getIcon(Ve).then((q) => {
              Z.innerHTML = q;
            }), Z;
          },
          cellStyle: () => ({
            paddingTop: "3px",
            textAlign: "center",
            paddingLeft: "5px",
            paddingRight: "0px"
          }),
          cellRendererParams: {
            $iApi: g,
            oidField: Dr.value
          },
          preventExport: !0
        };
        b.push(M);
      }
    }, B = () => !Object.values(ar.value).every((A) => A === void 0), De = (A) => {
      const b = ar.value[A.data.rvUid];
      return b === void 0 || b.includes(A.data[Dr.value]);
    }, j = async () => {
      const A = new RC(), b = me.value.slice().map((M) => M.getPromise());
      me.value.push(A), await Promise.all(b), await Promise.all(
        Xe.value.map(async (M) => {
          M && M.visibility ? await M.getFilterOIDs(
            [fn.GRID],
            W.value.state.filterByExtent ? g.geo.map.getExtent() : void 0
          ).then((k) => {
            ar.value[M.uid] = k;
          }) : ar.value[M.uid] = [];
        })
      ), te.value.onFilterChanged(), A.resolveMe();
      const K = me.value.indexOf(A);
      K === -1 ? console.error("Grid could not find filter blocker in filter queue") : me.value.splice(K, 1);
    }, h = () => {
      W.value.state.applyToMap = !W.value.state.applyToMap, ve();
    }, ve = () => {
      Xe.value.filter((A) => A.mapLayer).forEach((A) => {
        if (!W.value.state.applyToMap)
          A.setSqlFilter(fn.GRID, "");
        else {
          const b = pi(A.id);
          A.setSqlFilter(fn.GRID, b);
        }
      });
    }, pi = (A) => {
      const b = te.value.getFilterModel();
      let K = [];
      if (Object.keys(b).forEach((M) => {
        const k = St(A, M);
        k ? K.push(Ne(k.origAttr, b[M])) : K.push("1=2");
      }), W.value.state.searchFilter && W.value.state.searchFilter.length > 0) {
        const M = Vt(A) || "1=2";
        M.length > 0 && K.push(`(${M})`);
      }
      return K.join(" AND ");
    }, Ne = (A, b) => {
      switch (b.filterType) {
        case "number": {
          switch (b.type) {
            case "greaterThanOrEqual":
              return `${A} >= ${b.filter}`;
            case "lessThanOrEqual":
              return `${A} <= ${b.filter}`;
            case "inRange":
              return `${A} >= ${b.filter} AND ${A} <= ${b.filterTo}`;
          }
          break;
        }
        case "text": {
          let K = b.filter.replace(/'/g, /''/);
          if (K !== "") {
            const M = /\\[(!"#$&'+,.\\/:;<=>?@[\]^`{|}~)]/g;
            let k = K, Y = "", Z = M.exec(K), Ve = 0;
            for (; Z; )
              Y = Y + K.substr(Ve, Z.index - Ve) + Z[0].slice(-1), Ve = Z.index + 2, k = K.substr(Z.index + 2), Z = M.exec(K);
            Y = Y + k, Y = Y.replace(/%/g, "ௌ%"), Y = Y.replace(/_/g, "ௌ_"), Y = `*${Y}`;
            let q = `UPPER(${A}) LIKE '${Y.replace(/\*/g, "%").toUpperCase()}%'`;
            return q.includes("ௌ%") || q.includes("ௌ_") ? `${q} ESCAPE 'ௌ'` : q;
          }
          break;
        }
        case "date": {
          const K = new Date(b.dateFrom ?? 0), M = new Date(b.dateTo ?? 864e13), k = K ? `${K.getMonth() + 1}/${K.getDate()}/${K.getFullYear()}` : void 0, Y = M ? `${M.getMonth() + 1}/${M.getDate()}/${M.getFullYear()}` : void 0;
          switch (b.type) {
            case "greaterThan":
              return `${A} >= DATE '${k}'`;
            case "lessThan":
              return `${A} <= DATE '${k}'`;
            case "inRange":
              return `${A} >= DATE '${k}' AND ${A} <= DATE '${Y}'`;
          }
        }
      }
    }, Vt = (A) => {
      const K = W.value.state.searchFilter.replace(/'/g, "''").split(" "), M = te.value.rowModel.rowsToDisplay, k = Se.value.getAllDisplayedColumns().filter(
        (Z) => (Z.colDef.filter === "agTextColumnFilter" || Z.colDef.filter === "agNumberColumnFilter") && St(A, Z.getColId())
      );
      let Y = [];
      return M.forEach((Z) => {
        let Ve = !0, q = "";
        for (let Ce of K) {
          const Wt = new RegExp(`.*${Ce.split(" ").join(".*").toUpperCase()}`), Kt = `%${Ce.replace(/\*/g, "%").split(" ").join("%").toUpperCase()}`;
          let Yt = !1;
          for (let cr of k) {
            const Le = cr.getColId(), Ir = St(A, cr.getColId())?.origAttr, Nr = cr.getColDef();
            if (Z.data[Le] === void 0)
              Yt = !1;
            else if (Nr.filter === "agTextColumnFilter") {
              const Bt = Z.data[Le] === null ? null : Z.data[Le].toString();
              if (Bt !== null && Wt.test(Bt.toUpperCase())) {
                q ? q = q.concat(" AND ", `(UPPER(${Ir}) LIKE '${Kt}%')`) : q = q.concat("(", `(UPPER(${Ir}) LIKE '${Kt}%')`), Y.includes(q + ")") ? Yt = !1 : Yt = !0;
                break;
              }
            } else if (Nr.filter === "agNumberColumnFilter") {
              const Bt = Z.data[Le] === null ? null : Z.data[Le];
              if (Bt !== null && Wt.test(Bt)) {
                q ? q = q.concat(" AND ", `(${Ir} = ${Bt})`) : q = q.concat("(", `(${Ir} = ${Bt})`), Y.includes(q + ")") ? Yt = !1 : Yt = !0;
                break;
              }
            }
          }
          if (!Yt) {
            Ve = !1;
            break;
          }
        }
        Ve && Y.push(q + ")");
      }), Y.join(" OR ");
    }, ci = (A) => {
      ["ArrowDown", "Down", "ArrowLeft", "Left", "ArrowUp", "Up", "ArrowRight", "Right"].includes(A.key) && A.stopPropagation();
    }, pr = () => {
      nt(), $.panel.isOpen && $.panel.close();
    }, nt = () => {
      (ze.value || ft.value) && Xe.value.forEach((A) => {
        A.abortAttributeLoad(), A.clearFeatureCache();
      });
    }, E = xt(() => {
      const A = Xe.value.map((M) => M.visibility && M.canModifyLayer && M.mapLayer), b = Xe.value.some(
        (M) => M.visibility && M.mapLayer && !M.canModifyLayer
      ), K = A.some(Boolean);
      return b && K ? "partial" : K ? "enabled" : "disabled";
    }), oe = xt(
      () => Xe.value.some((A) => A.isLoaded && A.supportsFeatures && A.mapLayer)
    ), St = (A, b) => lr.value[A].find((K) => (K.mappedAttr ?? K.origAttr) === b), di = () => {
      const A = Xe.value.filter(
        (b) => b && b.supportsFeatures && b.isLoaded
      );
      A.length === 0 && pr(), Pr.value = A.reduce((b, { featureCount: K }) => b + K, 0), zt.value = new Array(Xe.value.length).fill(0), A.forEach((b, K) => zt.value[K] += b.downloadedAttributes()), A.forEach((b, K) => {
        nr.value.push(
          da(
            () => b.downloadedAttributes(),
            (M) => {
              zt.value[K] = M;
            }
          )
        );
      }), Promise.all(A.map((b) => b.loadPromise())).then(() => {
        const b = A.map((K) => lo(K).getTabularAttributes().then((M) => {
          const k = W?.value?.state?.state;
          if (k?.columns && k.columnMetadata?.exclusiveColumns) {
            const Y = k.columns.map((Z) => Z.field);
            M.columns = M.columns.filter(
              (Z) => Y.includes(Z.data)
            );
          }
          return M;
        }));
        Promise.all(b).then((K) => {
          if (A.every((k) => k.attribLoadAborted())) {
            ze.value = !1;
            return;
          }
          const M = {
            columns: [],
            rows: [],
            fields: [],
            oidField: ""
          };
          K.forEach((k, Y) => {
            const Z = [], Ve = A[Y].id;
            k.columns.forEach((q) => {
              W.value.fieldMap && W.value.fieldMap[q.data] ? (Z.push({
                origAttr: q.data,
                mappedAttr: W.value.fieldMap[q.data]
              }), q.data = W.value.fieldMap[q.data], q.title = q.data) : Z.push({
                origAttr: q.data,
                mappedAttr: void 0
              }), M.columns.map((Ce) => Ce.data).includes(q.data) || M.columns.push(q);
            }), M.rows = M.rows.concat(
              k.rows.map((q) => {
                if (W.value.fieldMap)
                  for (const [Ce, Wt] of Object.entries(W.value.fieldMap))
                    q[Ce] !== void 0 && q[Wt] === void 0 && (q[Wt] = q[Ce], delete q[Ce]);
                return q;
              })
            );
            for (let q = 0; q < M.rows.length; q++)
              for (const [Ce] of Object.entries(M.rows[q]))
                g.ui.isPlainText(M.rows[q][Ce]) && (M.rows[q][Ce] = g.ui.escapeHtml(M.rows[q][Ce]));
            M.fields = M.fields.concat(
              k.fields.map((q) => ((!g.ui.exposeOids && q.type === "oid" || !g.ui.exposeMeasurements && (q.name.toLowerCase() === "shape_length" || q.name.toLowerCase() === "shape_area")) && br.value.add(q.name), {
                name: W.value.fieldMap && W.value.fieldMap[q.name] ? W.value.fieldMap[q.name] : q.name,
                type: q.type,
                alias: q.alias ?? void 0,
                length: q.length ?? void 0
              }))
            ), M.oidField = W.value.fieldMap && W.value.fieldMap[k.oidField] ? W.value.fieldMap[k.oidField] : k.oidField, lr.value[Ve] = Z;
          }), Dr.value = M.oidField, ["rvRowIndex", "rvInteractive", "rvSymbol", ...M.columns].forEach((k) => {
            W.value.state?.columns[k.data] === void 0 && (W.value.state.columns[k.data] = new _C({
              field: k.data,
              title: k.title
            })), (!g.ui.exposeOids || !g.ui.exposeMeasurements) && br.value.has(k.data) && (W.value.state.columns[k.data].visible = !1);
            let Y = W.value.state?.columns[k.data], Z = {
              headerName: Y.title ?? k.title,
              headerComponent: "agColumnHeader",
              headerComponentParams: {
                sort: Y.sort
              },
              field: k.data ?? k,
              isSelector: Y.filter.type === "selector",
              sortable: !0,
              lockPosition: !0,
              filterParams: {},
              floatingFilter: W.value.state.colFilter && Y.searchable,
              hide: !Y?.visible,
              minWidth: Y.width,
              maxWidth: Y.width ?? 400,
              cellRenderer: (q) => q.value,
              suppressHeaderKeyboardEvent: (q) => {
                const Ce = q.event;
                return q.headerRowIndex === 0 && (Ce.key === "Enter" || !Ce.target.classList.contains("ag-header-cell") && Ce.key === "Tab");
              }
            }, Ve = M.fields.find((q) => q.name === Z.field);
            k === "rvRowIndex" || k === "rvSymbol" || k === "rvInteractive" ? Co(Z, Fe.value, W.value.state) : (w.indexOf(Ve.type) > -1 ? (ui(Z, W.value.state), Z.filter = "agNumberColumnFilter", Z.autoHeight = !0, Z.cellRenderer = Y.template === "" ? ha : g.component(Y.template), Z.cellRendererParams = {
              type: "number"
            }) : Ve.type === so.DATE ? (li(Z, W.value.state), Z.filter = "agDateColumnFilter", Z.autoHeight = !0, Z.minWidth = 400, Z.cellRenderer = Y.template === "" ? ha : g.component(Y.template), Z.cellRendererParams = {
              type: "date"
            }) : Ve.type === so.STRING && (Z.isSelector ? En(Z, M.rows, W.value.state) : Rn(Z, W.value.state), Z.filter = "agTextColumnFilter", Z.autoHeight = !0, Z.cellRenderer = Y.template === "" ? ha : g.component(Y.template), Z.cellRendererParams = {
              type: "string"
            }), Fe.value.push(Z));
          }), sr.value = lo(M.rows), Fe.value = lo(Fe.value), Lr(), ze.value = !1;
        }).catch((K) => {
          console.error(K), ft.value = !0, ze.value = !1;
        });
      });
    };
    return ii(() => {
      W.value = C.grids[$.gridId], ze.value = !0, Q(), qe.value = {
        firstRow: 0,
        lastRow: 0,
        visibleRows: 0
      }, Rt.value = {
        agColumnHeader: Ow,
        numberFloatingFilter: QC,
        textFloatingFilter: tw,
        selectorFloatingFilter: aw,
        dateFloatingFilter: hw,
        clearFloatingFilter: gw
      }, ie.value = {
        // lets header navigation be predictable, otherwise focus lists will be out of sync as soon as a column is shifted
        ensureDomOrder: !0,
        rowHeight: 40,
        suppressRowTransform: !0,
        onFilterChanged: () => {
          ve(), Lr();
        },
        onBodyScroll: () => {
          [...document.querySelectorAll("[id^=tippy]")].forEach((A) => {
            A._tippy && x.value?.contains(A._tippy.reference) && A._tippy.hide();
          });
        },
        onBodyScrollEnd: () => {
          it();
        },
        rowBuffer: 0,
        suppressColumnVirtualisation: !0,
        // shift tab -> header, tab -> out of grid
        tabToNextCell: zC,
        // tab vertically instead of horizontally
        tabToNextHeader: jC,
        onModelUpdated: Zp(300, () => Se.value.autoSizeAllColumns())
      }, di(), E.value === "partial" && g.notify.show(Jp.WARNING, g.$i18n.t("layer.filterwarning")), nr.value.push(
        da(se, () => {
          we.value = !1, setTimeout(() => {
            we.value = !0;
          }, 10);
        })
      ), nr.value.push(
        da(E, (A) => {
          A === "partial" && g.notify.show(Jp.WARNING, g.$i18n.t("layer.filterwarning"));
        })
      );
    }), Ar(() => {
      nt(), Ht.value.forEach((A) => g.event.off(A)), nr.value.forEach((A) => A()), fo.value?.removeAccessibilityListeners(), fo.value?.removeScrollListeners();
    }), (A, b) => {
      const K = fa("dropdown-menu"), M = Gt("truncate"), k = Gt("tippy");
      return ae(), he("div", {
        class: "flex flex-col w-full h-full bg-white",
        ref_key: "el",
        ref: x
      }, [
        Re(V("div", null, [
          V("p", Bw, He(ee(G)("grid.splash.error")), 1)
        ], 512), [
          [ao, ft.value]
        ]),
        Re(V("div", kw, [
          V("div", Uw, [
            V("span", jw, He(zt.value.reduce((Y, Z) => Y + Z, 0)), 1),
            b[12] || (b[12] = V("svg", {
              class: "stroke-black stroke-1",
              height: "50",
              width: "25"
            }, [
              V("line", {
                x1: "0",
                y1: "50",
                x2: "25",
                y2: "0"
              })
            ], -1)),
            V("span", zw, He(Pr.value), 1)
          ]),
          V("div", $w, [
            V("span", Kw, He(zt.value.reduce((Y, Z) => Y + Z, 0) < Pr.value ? ee(G)("grid.splash.loading") : ee(G)("grid.splash.building")), 1)
          ]),
          V("div", null, [
            V("button", {
              type: "button",
              onClick: pr,
              class: "py-8 px-8 sm:px-16 bg-gray-300",
              "aria-label": ee(G)("grid.splash.cancel")
            }, He(ee(G)("grid.splash.cancel")), 9, Yw)
          ])
        ], 512), [
          [ao, ze.value && !ft.value]
        ]),
        Re(V("div", qw, [
          V("div", Xw, [
            Re((ae(), he("div", Qw, [
              Ct(He(Tr.value), 1)
            ])), [
              [ao, Tr.value !== ""],
              [M]
            ]),
            Re((ae(), he("div", Zw, [
              Ct(He(ee(G)("grid.filters.label.info", {
                range: qe.value.visibleRows !== 0 ? `${qe.value.firstRow} - ${qe.value.lastRow}` : "0",
                total: qe.value.visibleRows
              })) + " ", 1),
              qe.value.visibleRows !== sr.value.length ? (ae(), he("span", Jw, He(ee(G)("grid.filters.label.filtered", {
                max: sr.value.length
              })), 1)) : Ke("", !0)
            ])), [
              [M]
            ])
          ]),
          V("div", eE, [
            Re(V("div", tE, [
              Re(V("input", {
                onInput: b[0] || (b[0] = (Y) => ur()),
                onKeypress: b[1] || (b[1] = ht(dt(() => {
                }, ["prevent"]), ["enter"])),
                onKeyup: b[2] || (b[2] = ht((Y) => {
                  ee(S).mobileView && Y?.target?.blur();
                }, ["enter"])),
                enterkeyhint: "done",
                "onUpdate:modelValue": b[3] || (b[3] = (Y) => W.value.state.searchFilter = Y),
                class: "rv-global-search rv-input pr-32 min-w-0",
                "aria-invalid": "false",
                "aria-label": ee(G)("grid.filters.label.global"),
                placeholder: ee(G)("grid.filters.label.global")
              }, null, 40, rE), [
                [po, W.value.state.searchFilter]
              ]),
              V("div", oE, [
                W.value.state.searchFilter.length < 3 ? (ae(), he("svg", iE, b[13] || (b[13] = [
                  V("g", { id: "search_cache224" }, [
                    V("path", { d: "M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z" })
                  ], -1)
                ]))) : (ae(), he("button", {
                  key: 1,
                  class: "flex justify-center fill-current ml-6 cursor-pointer",
                  onClick: b[4] || (b[4] = (Y) => go())
                }, b[14] || (b[14] = [
                  V("svg", {
                    "data-v-486a0302": "",
                    xmlns: "http://www.w3.org/2000/svg",
                    viewBox: "0 0 352 512",
                    class: "w-18 h-18 mt-2"
                  }, [
                    V("path", {
                      "data-v-486a0302": "",
                      d: "M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"
                    })
                  ], -1)
                ])))
              ])
            ], 512), [
              [ao, W.value.state.search]
            ]),
            V("div", nE, [
              vn(BC, {
                columnApi: Se.value,
                columnDefs: Fe.value,
                systemCols: br.value,
                onRefreshHeaders: b[5] || (b[5] = (Y) => te.value.refreshHeader())
              }, null, 8, ["columnApi", "columnDefs", "systemCols"]),
              Re((ae(), he("button", {
                type: "button",
                class: "grid-clearall p-4 h-40 text-gray-500 hover:text-black",
                onClick: b[6] || (b[6] = (Y) => vo()),
                content: ee(G)("grid.clearAll"),
                "aria-label": ee(G)("grid.clearAll")
              }, b[15] || (b[15] = [
                V("svg", {
                  xmlns: "http://www.w3.org/2000/svg",
                  height: "24px",
                  width: "24px",
                  viewBox: "0 0 24 24",
                  class: "inline fill-current"
                }, [
                  V("g", { id: "filter_cache958" }, [
                    V("path", { d: "M 14.7574,20.8284L 17.6036,17.9822L 14.7574,15.1716L 16.1716,13.7574L 19.0178,16.568L 21.8284,13.7574L 23.2426,15.1716L 20.432,17.9822L 23.2426,20.8284L 21.8284,22.2426L 19.0178,19.3964L 16.1716,22.2426L 14.7574,20.8284 Z M 2,2L 19.9888,2.00001L 20,2.00001L 20,2.01122L 20,3.99999L 19.9207,3.99999L 13,10.9207L 13,22.909L 8.99999,18.909L 8.99999,10.906L 2.09405,3.99999L 2,3.99999L 2,2 Z " })
                  ])
                ], -1)
              ]), 8, sE)), [
                [k, {
                  placement: "bottom"
                }]
              ]),
              vn(K, {
                class: "h-40 w-40",
                position: "bottom-end",
                tooltip: ee(G)("panels.controls.optionsMenu"),
                centered: !1
              }, {
                header: uo(() => b[16] || (b[16] = [
                  V("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    viewBox: "0 0 24 24",
                    class: "fill-current m-8 w-24 h-24"
                  }, [
                    V("path", { d: "M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z" })
                  ], -1)
                ])),
                default: uo(() => [
                  V("a", {
                    href: "javascript:;",
                    class: Nt(["flex leading-snug items-center w-256", {
                      hover: E.value !== "disabled" ? "none" : "text-black",
                      disabled: E.value === "disabled"
                    }]),
                    onClick: b[7] || (b[7] = (Y) => E.value !== "disabled" && h()),
                    role: "button",
                    "aria-label": ee(G)("grid.label.filters.apply")
                  }, [
                    V("div", lE, [
                      b[18] || (b[18] = V("svg", {
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        class: "fill-current inline w-20 h-20 mr-2 text-gray-500"
                      }, [
                        V("path", { d: "m 15.585999,21.223066 2.414,-2.414 v 1.811 A 3.616,3.616 0 0 0 21.2,15.309066 l 0.881,-0.881 a 4.82,4.82 0 0 1 -4.080001,7.4 v 1.811 z m -13.5859988,-9.224 a 10,10 0 1 1 19.9999998,0 c 0,0.172 0,0.346 -0.013,0.517 a 5.971,5.971 0 0 0 -2.014001,-1.184001 7.935,7.935 0 0 0 -4.973,-6.742999 v 0.41 a 2,2 0 0 1 -2,2 h -2 v 2 A 1,1 0 0 1 10,9.9990662 H 8.0000002 v 1.9999998 h 5.9999988 a 1,1 0 0 1 0.495,0.131 6,6 0 0 0 -0.184,9.6 10.009,10.009 0 0 1 -12.3109988,-9.731 z m 2,0 a 8,8 0 0 0 6.9999988,7.93 v -1.93 a 2,2 0 0 1 -1.9999988,-2 v -1 l -4.79,-4.79 a 8.07,8.07 0 0 0 -0.21,1.79 z m 9.1729988,5 a 4.827,4.827 0 0 1 4.827,-4.828 v -1.81 l 2.414,2.414 -2.414,2.413 v -1.809 a 3.623,3.623 0 0 0 -3.62,3.62 3.537,3.537 0 0 0 0.42,1.69 l -0.881,0.881 a 4.787,4.787 0 0 1 -0.746,-2.571 z" })
                      ], -1)),
                      Ct(" " + He(ee(G)("grid.label.filters.apply")) + " ", 1),
                      E.value !== "disabled" && W.value.state.applyToMap ? (ae(), he("svg", uE, b[17] || (b[17] = [
                        V("g", { id: "done" }, [
                          V("path", { d: "M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z" })
                        ], -1)
                      ]))) : Ke("", !0)
                    ])
                  ], 10, aE),
                  V("a", {
                    href: "javascript:;",
                    class: "flex leading-snug items-center w-256 hover:text-black",
                    onClick: b[8] || (b[8] = (Y) => yo()),
                    role: "button",
                    "aria-label": ee(G)("grid.label.filters.show")
                  }, [
                    V("div", cE, [
                      b[20] || (b[20] = V("svg", {
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        class: "fill-current inline w-20 h-20 mr-2 text-gray-500"
                      }, [
                        V("path", { d: "M 3,2L 20.9888,2L 21,2L 21,2.01122L 21,3.99999L 20.9207,3.99999L 14,10.9207L 14,22.909L 9.99999,18.909L 10,10.906L 3.09405,3.99999L 3,3.99999L 3,2 Z " })
                      ], -1)),
                      Ct(" " + He(ee(G)("grid.label.filters.show")) + " ", 1),
                      W.value.state.colFilter ? (ae(), he("svg", dE, b[19] || (b[19] = [
                        V("g", { id: "done" }, [
                          V("path", { d: "M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z" })
                        ], -1)
                      ]))) : Ke("", !0)
                    ])
                  ], 8, pE),
                  V("a", {
                    href: "javascript:;",
                    class: Nt(["flex leading-snug items-center w-256", {
                      hover: E.value !== "disabled" ? "none" : "text-black",
                      disabled: E.value === "disabled"
                    }]),
                    onClick: b[9] || (b[9] = (Y) => E.value !== "disabled" && mo()),
                    role: "button",
                    "aria-label": ee(G)("grid.filters.label.extent")
                  }, [
                    V("div", fE, [
                      b[22] || (b[22] = V("svg", {
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        class: "fill-current inline w-20 h-20 mr-2 text-gray-500"
                      }, [
                        V("path", { d: "M 4 10 Z M 2 2 L 19.9888 2 L 20 2 L 20 2.0112 L 20 4 L 19.9207 4 L 13 10.9207 L 13 22.909 L 9 18.909 L 9 10.906 L 2.0941 4 L 2 4 L 2 2 Z M 24 13 L 21 14 L 18 13 L 15 14 V 22 L 18 21 l 3 1 l 3 -1 z M 21 21 l -3 -1 V 14 l 3 1.055 z" })
                      ], -1)),
                      Ct(" " + He(ee(G)("grid.filters.label.extent")) + " ", 1),
                      E.value !== "disabled" && W.value.state.filterByExtent ? (ae(), he("svg", gE, b[21] || (b[21] = [
                        V("g", { id: "done" }, [
                          V("path", { d: "M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z" })
                        ], -1)
                      ]))) : Ke("", !0)
                    ])
                  ], 10, hE),
                  V("a", {
                    href: "javascript:;",
                    class: Nt(["flex leading-snug items-center w-256", { hover: "text-black" }]),
                    onClick: b[10] || (b[10] = (Y) => ai()),
                    role: "button",
                    "aria-label": ee(G)("grid.label.pinColumns")
                  }, [
                    L.value ? (ae(), he("svg", mE, b[23] || (b[23] = [
                      V("path", { d: "M18,8H17V6A5,5 0 0,0 12,1A5,5 0 0,0 7,6V8H6A2,2 0 0,0 4,10V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V10A2,2 0 0,0 18,8M12,3A3,3 0 0,1 15,6V8H9V6A3,3 0 0,1 12,3Z" }, null, -1)
                    ]))) : L.value ? Ke("", !0) : (ae(), he("svg", yE, b[24] || (b[24] = [
                      V("path", { d: "M18 1.5c2.9 0 5.25 2.35 5.25 5.25v3.75a.75.75 0 01-1.5 0V6.75a3.75 3.75 0 10-7.5 0v3a3 3 0 013 3v6.75a3 3 0 01-3 3H3.75a3 3 0 01-3-3v-6.75a3 3 0 013-3h9v-3c0-2.9 2.35-5.25 5.25-5.25z" }, null, -1)
                    ]))),
                    Ct(" " + He(ee(G)("grid.label.pinColumns")) + " ", 1),
                    L.value ? (ae(), he("svg", CE, b[25] || (b[25] = [
                      V("g", { id: "done" }, [
                        V("path", { d: "M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z" })
                      ], -1)
                    ]))) : Ke("", !0)
                  ], 8, vE),
                  V("a", {
                    href: "javascript:;",
                    class: Nt(["flex leading-snug items-center w-256", { hover: "text-black" }]),
                    onClick: b[11] || (b[11] = (Y) => wn()),
                    role: "button",
                    "aria-label": ee(G)("grid.label.export")
                  }, [
                    b[26] || (b[26] = V("svg", {
                      xmlns: "http://www.w3.org/2000/svg",
                      viewBox: "0 0 24 24",
                      class: "fill-current inline w-20 h-20 mr-2 text-gray-500"
                    }, [
                      V("g", null, [
                        V("path", { d: "M6 2c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6H6zm7 7V3.5L18.5 9H13z" })
                      ])
                    ], -1)),
                    Ct(" " + He(ee(G)("grid.label.export")), 1)
                  ], 8, wE)
                ]),
                _: 1
              }, 8, ["tooltip"])
            ])
          ])
        ], 512), [
          [ao, !ze.value && !ft.value]
        ]),
        we.value ? Re((ae(), ga(ee(GC), {
          key: 0,
          class: "ag-theme-material flex-grow",
          enableCellTextSelection: "true",
          accentedSort: "true",
          localeText: ee(se) === "en" ? ee(Vw) : ee(Ww),
          gridOptions: ie.value,
          columnDefs: Fe.value,
          rowData: sr.value,
          components: Rt.value,
          onGridReady: Fr,
          onKeydown: ci,
          onFirstDataRendered: Cn,
          onCellKeyPress: ee(si),
          doesExternalFilterPass: De,
          isExternalFilterPresent: B
        }, null, 8, ["localeText", "gridOptions", "columnDefs", "rowData", "components", "onCellKeyPress"])), [
          [ao, !ze.value && !ft.value]
        ]) : Ke("", !0)
      ], 512);
    };
  }
}), RE = /* @__PURE__ */ ni(EE, [["__scopeId", "data-v-e89358eb"]]), SE = /* @__PURE__ */ Ye({
  __name: "screen",
  props: {
    panel: {
      type: sc,
      required: !0
    }
  },
  setup(c) {
    const w = ac(), { t: g } = Et(), C = xt(() => w.currentId);
    return (S, O) => {
      const L = fa("panel-screen");
      return ae(), ga(L, { panel: c.panel }, {
        header: uo(() => [
          Ct(He(ee(g)("grid.title")), 1)
        ]),
        content: uo(() => [
          vn(RE, {
            class: "rv-grid",
            gridId: C.value,
            panel: c.panel
          }, null, 8, ["gridId", "panel"])
        ]),
        _: 1
      }, 8, ["panel"]);
    };
  }
}), AE = /* @__PURE__ */ ni(SE, [["__scopeId", "data-v-904e67ef"]]);
export {
  AE as default
};
//# sourceMappingURL=screen-DPURa_pV.js.map
