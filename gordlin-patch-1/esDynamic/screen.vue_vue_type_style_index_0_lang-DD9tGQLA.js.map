{"version":3,"file":"screen.vue_vue_type_style_index_0_lang-DD9tGQLA.js","sources":["../../src/fixtures/metadata/files/xstyle_default_en.xsl?raw","../../src/fixtures/metadata/files/xstyle_default_fr.xsl?raw","../../src/fixtures/metadata/screen.vue"],"sourcesContent":["export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<xsl:stylesheet version=\\\"1.0\\\"\\n                xmlns:xsl=\\\"http://www.w3.org/1999/XSL/Transform\\\"\\n                xmlns:gmd=\\\"http://www.isotc211.org/2005/gmd\\\"\\n                xmlns:gco=\\\"http://www.isotc211.org/2005/gco\\\"\\n                xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n                xmlns:gmdl=\\\"http://www.canada.gc.ca/ns/gmdl\\\"\\n                xmlns:napec=\\\"http://www.ec.gc.ca/data_donnees/standards/schemas/napec\\\"\\n                xmlns:gml=\\\"http://www.opengis.net/gml\\\"\\n                xmlns:geonet=\\\"http://www.fao.org/geonetwork\\\"\\n                xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\"\\n                xsi:schemaLocation=\\\"http://www.ec.gc.ca/data_donnees/standards/schemas/napec/schema.xsd\\\">\\n\\n  <xsl:param name=\\\"catalogue_url\\\" />\\n  <xsl:decimal-format NaN=\\\"\\\"/>\\n\\n  <xsl:template match=\\\"/\\\">\\n\\n    <div class=\\\"metadata-view\\\">\\n\\n      <xsl:if test=\\\"//gmd:abstract/gco:CharacterString/text() != ''\\\">\\n        <h5 class=\\\"text-xl font-bold mb-3\\\">{{metadata.xslt.Abstract}}</h5>\\n        <p>\\n          <xsl:value-of select=\\\"//gmd:abstract/gco:CharacterString/text()\\\" />\\n        </p>\\n      </xsl:if>\\n\\n      <xsl:comment>\\n        <h5 class=\\\"text-xl font-bold mb-3\\\">{{metadata.xslt.Scope}}</h5>\\n        <p>{{metadata.xslt.hereBeScope}}</p>\\n      </xsl:comment>\\n\\n      <xsl:if test=\\\"//gml:TimePeriod//* != ''\\\">\\n        <h5 class=\\\"text-xl font-bold mb-3\\\">{{metadata.xslt.timePeriod}}</h5>\\n        <p>\\n          <xsl:value-of select=\\\"//gml:TimePeriod//gml:beginPosition\\\" />\\n          <xsl:if test=\\\"//gml:TimePeriod//gml:beginPosition/text() != '' and //gml:TimePeriod//gml:endPosition/text() != ''\\\">\\n            -\\n          </xsl:if>\\n          <xsl:value-of select=\\\"//gml:TimePeriod//gml:endPosition\\\" />\\n        </p>\\n      </xsl:if>\\n\\n      <xsl:comment>\\n        <xsl:if test=\\\"//gmd:supplementalInformation/gco:CharacterString/text() != ''\\\">\\n          <h5 class=\\\"text-xl font-bold mb-3\\\">{{metadata.xslt.supplementalData}}</h5>\\n          <p>\\n            <xsl:value-of select=\\\"//gmd:supplementalInformation/gco:CharacterString/text()\\\" />\\n          </p>\\n        </xsl:if>\\n      </xsl:comment>\\n\\n      <xsl:if test=\\\"//gmd:pointOfContact//gmd:individualName/* != '' \\n              or //gmd:pointOfContact//gmd:organisationName/gco:CharacterString/text() != ''\\n              or //gmd:pointOfContact//gmd:positionName/gco:CharacterString/text() != ''\\n              or //gmd:pointOfContact//gmd:electronicMailAddress/* != ''\\n              or //gmd:pointOfContact//gmd:role/gmd:CI_RoleCode/@codeListValue != ''\\\">\\n        <h5 class=\\\"text-xl font-bold mb-3\\\">{{metadata.xslt.contactInfo}}</h5>\\n        <p>\\n          <xsl:value-of select=\\\"//gmd:pointOfContact//gmd:individualName\\\" />\\n        </p>\\n        <p>\\n          <xsl:value-of select=\\\"//gmd:pointOfContact//gmd:organisationName/gco:CharacterString/text()\\\" />\\n        </p>\\n        <p>\\n          <xsl:value-of select=\\\"//gmd:pointOfContact//gmd:positionName/gco:CharacterString/text()\\\" />\\n        </p>\\n        <p>\\n          <a href=\\\"mailto:{//gmd:pointOfContact//gmd:electronicMailAddress/gco:CharacterString/text()}?Subject={//gmd:identificationInfo//gmd:title/gco:CharacterString/text()}\\\">\\n            <xsl:value-of select=\\\"//gmd:pointOfContact//gmd:electronicMailAddress\\\" />\\n          </a>\\n        </p>\\n        <p>\\n          <xsl:variable name=\\\"roleCode\\\" >\\n            <xsl:value-of select=\\\"concat(substring(//gmd:pointOfContact//gmd:role/gmd:CI_RoleCode/@codeListValue,1,1),\\n                        substring(//gmd:pointOfContact//gmd:role/gmd:CI_RoleCode/@codeListValue, 2))\\\" />\\n          </xsl:variable>\\n\\n          <xsl:choose>\\n            <xsl:when test=\\\"$roleCode = 'resourceProvider'\\\">{{metadata.xslt.resourceProvider}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'custodian'\\\">{{metadata.xslt.custodian}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'owner'\\\">{{metadata.xslt.owner}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'user'\\\">{{metadata.xslt.user}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'distributor'\\\">{{metadata.xslt.distributor}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'originator'\\\">{{metadata.xslt.originator}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'pointOfContact'\\\">{{metadata.xslt.pointOfContact}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'principalInvestigator'\\\">{{metadata.xslt.principalInvestigator}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'processor'\\\">{{metadata.xslt.processor}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'publisher'\\\">{{metadata.xslt.publisher}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'author'\\\">{{metadata.xslt.author}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'collaborator'\\\">{{metadata.xslt.collaborator}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'editor'\\\">{{metadata.xslt.editor}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'mediator'\\\">{{metadata.xslt.mediator}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'rightsHolder'\\\">{{metadata.xslt.rightsHolder}}</xsl:when>\\n          </xsl:choose>\\n        </p>\\n      </xsl:if>\\n\\n      <xsl:if test=\\\"$catalogue_url != ''\\\">\\n        <h5 class=\\\"text-xl font-bold mb-3\\\">{{metadata.xslt.cataloguePage}}</h5>\\n        <p>\\n          <a href=\\\"{$catalogue_url}\\\"\\n             rel=\\\"external\\\" target=\\\"_blank\\\" class=\\\"ui-link\\\">\\n            {{metadata.xslt.metadata}}\\n          </a>\\n        </p>\\n      </xsl:if>\\n    </div>\\n  </xsl:template>\\n</xsl:stylesheet>\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<xsl:stylesheet version=\\\"1.0\\\"\\n                xmlns:xsl=\\\"http://www.w3.org/1999/XSL/Transform\\\"\\n                xmlns:gmd=\\\"http://www.isotc211.org/2005/gmd\\\"\\n                xmlns:gco=\\\"http://www.isotc211.org/2005/gco\\\"\\n                xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n                xmlns:gmdl=\\\"http://www.canada.gc.ca/ns/gmdl\\\"\\n                xmlns:napec=\\\"http://www.ec.gc.ca/data_donnees/standards/schemas/napec\\\"\\n                xmlns:gml=\\\"http://www.opengis.net/gml\\\"\\n                xmlns:geonet=\\\"http://www.fao.org/geonetwork\\\"\\n                xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\"\\n                xsi:schemaLocation=\\\"http://www.ec.gc.ca/data_donnees/standards/schemas/napec/schema.xsd\\\">\\n\\n  <xsl:param name=\\\"catalogue_url\\\" />\\n  <xsl:decimal-format NaN=\\\"\\\"/>\\n\\n  <xsl:template match=\\\"/\\\">\\n\\n    <div class=\\\"metadata-view\\\">\\n\\n      <xsl:if test=\\\"//gmd:abstract//gmd:LocalisedCharacterString[@locale='#fra']/text() != ''\\\">\\n        <h5 class=\\\"text-xl font-bold mb-3\\\">{{metadata.xslt.Abstract}}</h5>\\n        <p>\\n          <xsl:value-of select=\\\"//gmd:abstract//gmd:LocalisedCharacterString[@locale='#fra']/text()\\\" />\\n        </p>\\n      </xsl:if>\\n\\n      <xsl:comment>\\n        <h5 class=\\\"text-xl font-bold mb-3\\\">{{metadata.xslt.Scope}}</h5>\\n        <p>{{metadata.xslt.hereBeScope}}</p>\\n      </xsl:comment>\\n\\n      <xsl:if test=\\\"//gml:TimePeriod//* != ''\\\">\\n        <h5 class=\\\"text-xl font-bold mb-3\\\">{{metadata.xslt.timePeriod}}</h5>\\n        <p>\\n          <xsl:value-of select=\\\"//gml:TimePeriod//gml:beginPosition\\\" />\\n          <xsl:if test=\\\"//gml:TimePeriod//gml:beginPosition/text() != '' and //gml:TimePeriod//gml:endPosition/text() != ''\\\">\\n            -\\n          </xsl:if>\\n          <xsl:value-of select=\\\"//gml:TimePeriod//gml:endPosition\\\" />\\n        </p>\\n      </xsl:if>\\n\\n      <xsl:comment>\\n        <xsl:if test=\\\"//gmd:supplementalInformation//gmd:LocalisedCharacterString[@locale='#fra']/text() != ''\\\">\\n          <h5 class=\\\"text-xl font-bold mb-3\\\">{{metadata.xslt.supplementalData}}</h5>\\n          <p>\\n            <xsl:value-of select=\\\"//gmd:supplementalInformation//gmd:LocalisedCharacterString[@locale='#fra']/text()\\\" />\\n          </p>\\n        </xsl:if>\\n      </xsl:comment>\\n\\n      <xsl:if test=\\\"//gmd:pointOfContact//gmd:individualName/* != '' \\n              or //gmd:pointOfContact//gmd:organisationName//gmd:LocalisedCharacterString[@locale='#fra']/text() != ''\\n              or //gmd:pointOfContact//gmd:positionName//gmd:LocalisedCharacterString[@locale='#fra']/text() != ''\\n              or //gmd:pointOfContact//gmd:electronicMailAddress/* != ''\\n              or //gmd:pointOfContact//gmd:role/gmd:CI_RoleCode/@codeListValue != ''\\\">\\n        <h5 class=\\\"text-xl font-bold mb-3\\\">{{metadata.xslt.contactInfo}}</h5>\\n        <p>\\n          <xsl:value-of select=\\\"//gmd:pointOfContact//gmd:individualName\\\" />\\n        </p>\\n        <p>\\n          <xsl:value-of select=\\\"//gmd:pointOfContact//gmd:organisationName//gmd:LocalisedCharacterString[@locale='#fra']/text()\\\" />\\n        </p>\\n        <p>\\n          <xsl:value-of select=\\\"//gmd:pointOfContact//gmd:positionName//gmd:LocalisedCharacterString[@locale='#fra']/text()\\\" />\\n        </p>\\n        <p>\\n          <a href=\\\"mailto:{//gmd:pointOfContact//gmd:electronicMailAddress//gmd:LocalisedCharacterString[@locale='#fra']/text()}?Subject={//gmd:identificationInfo//gmd:title//gmd:LocalisedCharacterString[@locale='#fra']/text()}\\\">\\n            <xsl:value-of select=\\\"//gmd:pointOfContact//gmd:electronicMailAddress\\\" />\\n          </a>\\n        </p>\\n        <p>\\n          <xsl:variable name=\\\"roleCode\\\" >\\n            <xsl:value-of select=\\\"concat(substring(//gmd:pointOfContact//gmd:role/gmd:CI_RoleCode/@codeListValue,1,1),\\n                        substring(//gmd:pointOfContact//gmd:role/gmd:CI_RoleCode/@codeListValue, 2))\\\" />\\n          </xsl:variable>\\n\\n          <xsl:choose>\\n            <xsl:when test=\\\"$roleCode = 'resourceProvider'\\\">{{metadata.xslt.resourceProvider}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'custodian'\\\">{{metadata.xslt.custodian}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'owner'\\\">{{metadata.xslt.owner}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'user'\\\">{{metadata.xslt.user}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'distributor'\\\">{{metadata.xslt.distributor}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'originator'\\\">{{metadata.xslt.originator}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'pointOfContact'\\\">{{metadata.xslt.pointOfContact}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'principalInvestigator'\\\">{{metadata.xslt.principalInvestigator}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'processor'\\\">{{metadata.xslt.processor}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'publisher'\\\">{{metadata.xslt.publisher}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'author'\\\">{{metadata.xslt.author}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'collaborator'\\\">{{metadata.xslt.collaborator}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'editor'\\\">{{metadata.xslt.editor}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'mediator'\\\">{{metadata.xslt.mediator}}</xsl:when>\\n            <xsl:when test=\\\"$roleCode = 'rightsHolder'\\\">{{metadata.xslt.rightsHolder}}</xsl:when>\\n          </xsl:choose>\\n        </p>\\n      </xsl:if>\\n\\n      <xsl:if test=\\\"$catalogue_url != ''\\\">\\n        <h5 class=\\\"text-xl font-bold mb-3\\\">{{metadata.xslt.cataloguePage}}</h5>\\n        <p>\\n          <a href=\\\"{$catalogue_url}\\\"\\n             rel=\\\"external\\\" target=\\\"_blank\\\" class=\\\"ui-link\\\">\\n            {{metadata.xslt.metadata}}\\n          </a>\\n        </p>\\n      </xsl:if>\\n    </div>\\n  </xsl:template>\\n</xsl:stylesheet>\\n\"","<template>\n    <panel-screen :panel=\"panel\" ref=\"el\">\n        <template #header> {{ t('metadata.title') }}: {{ payload.layerName }} </template>\n\n        <template #content>\n            <div v-if=\"layerExists\">\n                <div class=\"flex justify-center\">\n                    <!-- Loading Screen -->\n                    <div v-if=\"status == 'loading'\" class=\"flex flex-col justify-center text-center\">\n                        {{ t('metadata.loading') }}\n                    </div>\n\n                    <!-- Found Screen, XML -->\n                    <div\n                        v-else-if=\"payload.type === 'xml' && status == 'success'\"\n                        v-html=\"response\"\n                        class=\"flex flex-col justify-center xml-content\"\n                    ></div>\n\n                    <!-- Found Screen, HTML -->\n                    <div\n                        v-else-if=\"(payload.type === 'html' || payload.type === 'md') && status == 'success'\"\n                        v-html=\"response\"\n                        class=\"flex flex-col justify-center max-w-full metadata-view\"\n                    ></div>\n\n                    <!-- Error Screen -->\n                    <div v-else class=\"flex flex-col justify-center text-center\">\n                        <img src=\"https://i.imgur.com/fA5EqV6.png\" />\n\n                        <span class=\"text-xl mt-20\">\n                            {{ t('metadata.error') }}\n                        </span>\n                    </div>\n                </div>\n            </div>\n            <div v-else class=\"p-5\">\n                <span>{{ t('metadata.label.no.layer') }}</span>\n            </div>\n        </template>\n    </panel-screen>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, inject, onBeforeUnmount, onMounted, reactive, ref, watch, type PropType } from 'vue';\nimport { GlobalEvents, InstanceAPI, LayerInstance, type PanelInstance } from '@/api';\nimport type { MetadataCache, MetadataPayload, MetadataResult } from './store';\nimport { useMetadataStore } from './store';\nimport { marked } from 'marked';\n\nimport XSLT_en from './files/xstyle_default_en.xsl?raw';\nimport XSLT_fr from './files/xstyle_default_fr.xsl?raw';\nimport { useI18n } from 'vue-i18n';\n\nconst metadataStore = useMetadataStore();\nconst { t } = useI18n();\nconst iApi = inject('iApi') as InstanceAPI;\nconst el = ref();\n\nconst props = defineProps({\n    panel: {\n        type: Object as PropType<PanelInstance>,\n        required: true\n    },\n    payload: {\n        type: Object as PropType<MetadataPayload>,\n        required: true\n    }\n});\n\nconst status = computed(() => metadataStore.status);\nconst response = computed(() => metadataStore.response);\nconst layerExists = ref(false); // tracks whether the layer still exists\nconst cache = reactive<MetadataCache>({});\nconst handlers = reactive<Array<string>>([]);\nconst watchers = reactive<Array<Function>>([]);\n\nonMounted(() => {\n    loadMetadata();\n\n    // if layer is removed with its metadata open close this panel\n    handlers.push(\n        iApi.event.on(GlobalEvents.LAYER_REMOVE, (removedLayer: LayerInstance) => {\n            if (props.payload.layer?.uid === removedLayer.uid) {\n                props.panel.close();\n            }\n        })\n    );\n\n    // watch for when metadata is opened for a new layer\n    watchers.push(\n        watch(\n            () => props.payload.layer!.uid,\n            (newUid: string, oldUid: string) => {\n                // update with new content\n                if (newUid !== oldUid) {\n                    loadMetadata();\n                }\n            }\n        )\n    );\n});\n\nonBeforeUnmount(() => {\n    // remove all event handlers and watchers\n    handlers.forEach(handler => iApi.event.off(handler));\n    watchers.forEach(unwatch => unwatch());\n});\n\nconst loadMetadata = () => {\n    // check if layer has not been removed\n    layerExists.value = props.payload.layer !== undefined && !props.payload.layer!.isRemoved;\n\n    if (props.payload.type === 'xml') {\n        loadFromURL(props.payload.url, []).then((r: any) => {\n            metadataStore.status = 'success';\n\n            // Append the content to the panel.\n            if (r !== null) {\n                const textContainer = document.createElement('div');\n\n                textContainer.appendChild(stringToFragment(`${r.firstElementChild.outerHTML}`));\n\n                if (props.payload.catalogueUrl || props.payload.url) {\n                    textContainer.appendChild(\n                        stringToFragment(`<h5 class=\"text-xl font-bold mb-3\">${t('metadata.xslt.metadata')}</h5>`)\n                    );\n                }\n\n                // Append catalogue URL link if it exists\n                if (props.payload.catalogueUrl) {\n                    textContainer.appendChild(\n                        stringToFragment(\n                            `<p><a style=\"color: blue;\" href=\"${props.payload.catalogueUrl}\" target=\"_blank\">${t(\n                                'metadata.xslt.cataloguePage'\n                            )}</a></p>`\n                        )\n                    );\n                }\n\n                // Append raw XML link\n                textContainer.appendChild(\n                    stringToFragment(\n                        `<p><a style=\"color: blue;\" href=\"${props.payload.url}\" target=\"_blank\">${t(\n                            'metadata.xslt.metadataPage'\n                        )}</a> (xml)</p>`\n                    )\n                );\n\n                //@ts-ignore\n                metadataStore.response = textContainer.outerHTML;\n            }\n        });\n    } else if (props.payload.type === 'html') {\n        requestContent(props.payload.url).then(r => {\n            metadataStore.status = r.status;\n            //@ts-ignore\n            metadataStore.response = r.response;\n        });\n    } else if (props.payload.type === 'md') {\n        requestContent(props.payload.url).then(r => {\n            metadataStore.status = r.status;\n            //@ts-ignore\n            metadataStore.response = marked(r.response);\n        });\n    }\n};\n\n/**\n * Applies an XSLT to XML, XML is provided but the XSLT is stored in a string constant.\n *\n * @method loadFromURL\n * @param {String} xmlUrl Location of the xml file\n * @param {Array} params an array which never seems to be set and is never used\n * @return {Promise} a promise resolving with an HTML fragment\n */\nconst loadFromURL = (xmlUrl: string, params: any[]) => {\n    let XSLT = iApi.language === 'en' ? XSLT_en : XSLT_fr;\n\n    // Translate headers.\n    XSLT = XSLT.replace(/\\{\\{([\\w.]+)\\}\\}/g, (_: string, tag: string) => t(tag));\n\n    if (!cache[xmlUrl]) {\n        return requestContent(xmlUrl).then(xmlData => {\n            cache[xmlUrl] = xmlData.response;\n            return applyXSLT(cache[xmlUrl], XSLT, params);\n        });\n    } else {\n        return Promise.resolve(applyXSLT(cache[xmlUrl], XSLT, params));\n    }\n};\n\n/**\n * Transform XML using XSLT\n * @function applyXSLT\n * @private\n * @param {string} xmlString text data of the XML document\n * @param {string} xslString text data of the XSL document\n * in IE)}\n * @param {Array} params a list of paramters to apply to the transform\n * @return {object} transformed document\n */\nconst applyXSLT = (xmlString: string, xslString: string, params: any[]) => {\n    let output = null;\n\n    if (window.XSLTProcessor) {\n        const xsltProc = new window.XSLTProcessor();\n        const parser = new DOMParser();\n\n        const xmlDoc = parser.parseFromString(xmlString, 'text/xml');\n        const xslDoc = parser.parseFromString(xslString, 'text/xml');\n        xsltProc.importStylesheet(xslDoc);\n        // [patched from ECDMP] Add parameters to xsl document (setParameter = Chrome/FF/Others)\n        if (params) {\n            params.forEach(p => xsltProc.setParameter('', p.key, p.value || ''));\n        }\n        output = xsltProc.transformToFragment(xmlDoc, document);\n    }\n    // ('-')7 IE retirement (╯°□°）╯︵ ┻━┻\n\n    return output;\n};\n\n/**\n * Sends a GET request to the provided URL. Returns a promise containing information received from the webpage.\n * */\nconst requestContent = (url: string): Promise<MetadataResult> => {\n    return new Promise(resolve => {\n        const xobj = new XMLHttpRequest();\n        xobj.open('GET', url, true);\n        xobj.responseType = 'text';\n        xobj.onload = () => {\n            if (xobj.status === 200) {\n                resolve({ status: 'success', response: xobj.response });\n            } else {\n                resolve({\n                    status: 'error',\n                    response: 'Could not load results from remote service.'\n                });\n            }\n        };\n        xobj.onerror = () => {\n            resolve({\n                status: 'error',\n                response: 'Could not load results from remote service.'\n            });\n        };\n        xobj.send();\n    });\n};\n\n// Helper function to convert a HTML string to an HTMLElement.\nfunction stringToFragment(string: string) {\n    const temp = document.createElement('div');\n    temp.innerHTML = string;\n    return temp;\n}\n</script>\n\n<style lang=\"scss\">\n.xml-content {\n    font-size: 14px;\n}\n\n// Tailwind removes basic heading styling, so add some here\n// to make the markdown presentable.\n.metadata-view {\n    a {\n        color: blue;\n    }\n\n    h1 {\n        font-size: 1.5em;\n        margin: 0.1em 0px;\n        font-weight: bold;\n    }\n    h2 {\n        font-size: 1.2em;\n        margin: 0.1em 0px;\n        font-weight: bold;\n    }\n\n    h3 {\n        font-size: 1em;\n        margin: 0.1em 0px;\n        font-weight: bold;\n    }\n\n    p {\n        margin: 0.2em 0px;\n    }\n}\n</style>\n"],"names":["XSLT_en","XSLT_fr","metadataStore","useMetadataStore","t","useI18n","iApi","inject","el","ref","props","__props","status","computed","response","layerExists","cache","reactive","handlers","watchers","onMounted","loadMetadata","GlobalEvents","removedLayer","watch","newUid","oldUid","onBeforeUnmount","handler","unwatch","loadFromURL","r","textContainer","stringToFragment","requestContent","marked","xmlUrl","params","XSLT","_","tag","applyXSLT","xmlData","xmlString","xslString","output","xsltProc","parser","xmlDoc","xslDoc","p","url","resolve","xobj","string","temp"],"mappings":"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"}