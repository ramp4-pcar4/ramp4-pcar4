{"version":3,"file":"index-O7bc9buO.js","sources":["../../src/fixtures/mapnav/buttons/divider-nav.vue","../../src/fixtures/mapnav/buttons/zoom-nav.vue","../../src/fixtures/mapnav/mapnav.vue","../../src/fixtures/mapnav/api/mapnav.ts","../../src/fixtures/mapnav/lang/lang.csv?raw","../../src/fixtures/mapnav/index.ts"],"sourcesContent":["<template>\n    <span class=\"border-b p-0 self-center w-2/3\"></span>\n</template>\n\n<script setup lang=\"ts\"></script>\n\n<style lang=\"scss\" scoped></style>\n","<template>\n    <div>\n        <mapnav-button :onClickFunction=\"zoomIn\" :tooltip=\"t('mapnav.zoomIn')\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"fill-current w-32 h-20\">\n                <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" />\n                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            </svg>\n        </mapnav-button>\n        <divider-nav></divider-nav>\n        <mapnav-button :onClickFunction=\"zoomOut\" :tooltip=\"t('mapnav.zoomOut')\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"fill-current w-32 h-20\">\n                <path d=\"M19 13H5v-2h14v2z\" />\n                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            </svg>\n        </mapnav-button>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { InstanceAPI } from '@/api';\nimport { throttle } from 'throttle-debounce';\nimport { inject } from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport DividerNav from './divider-nav.vue';\n\nconst { t } = useI18n();\nconst iApi = inject('iApi') as InstanceAPI;\n\nconst zoomIn = throttle(400, true, () => iApi.geo.map.zoomIn());\nconst zoomOut = throttle(400, true, () => iApi.geo.map.zoomOut());\n</script>\n\n<style lang=\"scss\" scoped></style>\n","<template>\n    <div class=\"mapnav absolute right-0 bottom-0 pb-36 sm:pb-48 pr-12\">\n        <div\n            class=\"flex flex-col\"\n            v-focus-list\n            :content=\"t('panels.controls.items')\"\n            v-tippy=\"{\n                trigger: 'manual',\n                placement: 'top-end',\n                maxWidth: 190\n            }\"\n            ref=\"el\"\n        >\n            <zoom-nav-section class=\"mapnav-section bg-white-75 hover:bg-white\"></zoom-nav-section>\n            <span class=\"py-1\"></span>\n            <div class=\"mapnav-section bg-white-75 hover:bg-white\">\n                <template v-for=\"(button, index) in visible\" :key=\"button.id + 'button'\">\n                    <component :is=\"button.id + '-nav-button'\"></component>\n                    <divider-nav class=\"mapnav-divider\" v-if=\"index !== visible.length - 1\"></divider-nav>\n                </template>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, onBeforeUnmount, onMounted, ref } from 'vue';\nimport { useMapnavStore } from './store';\nimport { useI18n } from 'vue-i18n';\nimport ZoomNavSection from './buttons/zoom-nav.vue';\nimport DividerNav from './buttons/divider-nav.vue';\n\nconst mapnavStore = useMapnavStore();\nconst { t } = useI18n();\nconst el = ref<Element>();\n\nconst blurEvent = () => {\n    (el.value as any)._tippy.hide();\n};\n\nconst keyupEvent = (e: Event) => {\n    const evt = e as KeyboardEvent;\n    if (evt.key === 'Tab' && el.value?.matches(':focus')) {\n        (el.value as any)._tippy.show();\n    }\n};\n\nonMounted(() => {\n    el.value?.addEventListener('blur', blurEvent);\n\n    el.value?.addEventListener('keyup', keyupEvent);\n});\n\nonBeforeUnmount(() => {\n    el.value?.removeEventListener('blur', blurEvent);\n\n    el.value?.removeEventListener('keyup', keyupEvent);\n});\n\n/**\n * Return a list of mapnav items with registered components (ones that can be rendered right now).\n */\nconst visible = computed(() => mapnavStore.order.map(id => mapnavStore.items[id]).filter(item => item.componentId));\n</script>\n\n<style lang=\"scss\" scoped>\n.mapnav-section {\n    @apply flex-col flex shadow-tm pointer-events-auto;\n\n    .focused {\n        @apply text-black;\n    }\n}\n</style>\n","import { FixtureInstance } from '@/api';\n\nimport type { MapnavFixtureConfig, MapnavItem, MapnavItemSet } from '../store';\nimport { useMapnavStore } from '../store';\n\nexport class MapnavAPI extends FixtureInstance {\n    private mapnavStore = useMapnavStore(this.$vApp.$pinia);\n    /**\n     * Returns `MapnavFixtureConfig` section of the global config file.\n     *\n     * @readonly\n     * @type {MapnavFixtureConfig}\n     * @memberof MapnavFixture\n     */\n    get config(): MapnavFixtureConfig | undefined {\n        return super.config;\n    }\n\n    /**\n     * Parses the mapnav config JSON snippet from the config file and save resulting objects to the fixture store.\n     *\n     * @param {MapnavFixtureConfig} [mapnavConfig]\n     * @returns\n     * @memberof MapnavAPI\n     */\n    _parseConfig(mapnavConfig?: MapnavFixtureConfig) {\n        if (!mapnavConfig) {\n            return;\n        }\n\n        const mapnavItems: MapnavItem[] = mapnavConfig.items.map((item: string) => ({\n            id: item\n        }));\n\n        // save mapnav items as a collection to the store\n        // they are saves as a set for easy by-id access\n        this.mapnavStore.items = mapnavItems.reduce<MapnavItemSet>((map: any, item: any) => {\n            map[item.id] = item;\n            return map;\n        }, {});\n\n        // save an ordered list of item ids to use when rendering components\n        this.mapnavStore.order = mapnavItems.map((item: any) => item.id);\n\n        this._validateItems();\n    }\n\n    /**\n     * Checks if components specified as mapnav items are registered or not.\n     * Will check the literal id values, and id values with `-nav-button` suffixes appended.\n     *\n     * @memberof MapnavAPI\n     */\n    _validateItems() {\n        // system mapnav controls that are not tied to a fixture\n        const systemControls: string[] = ['geolocator', 'zoom', 'home', 'fullscreen'];\n\n        // get the ordered list of items and see if any of them are registered\n        this.mapnavStore.order.forEach((id: string) => {\n            // can't check if the nav button component is registered\n            // so we make the assumption that it will always have the `-nav-button` prefix\n\n            // check if fixture exists, or if control is a system control\n            if (this.$iApi.fixture.exists(id) || systemControls.includes(id)) {\n                this.mapnavStore.items[id].componentId = `${id}-nav-button`;\n            }\n        });\n    }\n}\n","export default \"key,enValue,enValid,frValue,frValid\\nmapnav.zoomIn,Zoom In,1,Zoom avant,1\\nmapnav.zoomOut,Zoom Out,1,Zoom arrière,1\\nmapnav.home,Home,1,Accueil,1\\nmapnav.fullscreen,Full Screen,1,Plein Écran,1\\nmapnav.geolocator,Your Location,1,Votre position,1\\nmapnav.geolocator.error.permission,The location request was denied. Please check your browser permission settings.,1,Demande de localisation refusée. Veuillez vérifier les paramètres d'autorisation de votre navigateur.,1\\nmapnav.geolocator.error.internal,Your location could not be found.,1,Votre emplacement n'a pu être trouvé.,1\"","import MapnavV from './mapnav.vue';\nimport { MapnavAPI } from './api/mapnav';\nimport { useMapnavStore, type MapnavItemSet } from './store';\nimport type { MapnavFixtureConfig } from './store';\nimport { GlobalEvents } from '@/api';\nimport messages from './lang/lang.csv?raw';\n\nclass MapnavFixture extends MapnavAPI {\n    async added() {\n        // console.log(`[fixture] ${this.id} added`);\n\n        // since this has no panel we need to merge in translations ourselves\n        // TODO?: see if giving fixtures a nicer way to merge translations w/o panel makes sense\n        Object.entries(messages).forEach(value => (<any>this.$iApi.$i18n).mergeLocaleMessage(...value));\n\n        const { destroy, el } = this.mount(MapnavV, {\n            app: this.$element\n        });\n        const innerShell = this.$vApp.$el.getElementsByClassName('inner-shell')[0];\n        innerShell.appendChild(el.childNodes[0]);\n\n        this._parseConfig(this.config);\n        const unwatch = this.$vApp.$watch(\n            () => this.config,\n            (value: MapnavFixtureConfig | undefined) => this._parseConfig(value)\n        );\n\n        // since components used in appbar can be registered after this point, listen to the global component registration event and re-validate items\n        // TODO revist. this seems to be self-contained to the mapnav fixture, so ideally can stay as is and not worry about events api.\n        const handler = this.$iApi.event.on(GlobalEvents.COMPONENT, () => {\n            this._parseConfig(this.config);\n        });\n\n        // override the removed method here to get access to scope\n        this.removed = () => {\n            // console.log(`[fixture] ${this.id} removed`);\n            unwatch();\n            this.$iApi.event.off(handler);\n\n            // gracefully remove all buttons first (in case anything is watching for button removal)\n            const mapnavStore = useMapnavStore(this.$vApp.$pinia);\n            const items: MapnavItemSet = { ...mapnavStore.items };\n            Object.keys(items).forEach(item => mapnavStore.removeItem(item));\n            mapnavStore.$reset();\n            destroy();\n        };\n    }\n}\n\nexport default MapnavFixture;\n"],"names":["_sfc_render","_ctx","_cache","t","useI18n","iApi","inject","zoomIn","throttle","zoomOut","mapnavStore","useMapnavStore","el","ref","blurEvent","keyupEvent","e","onMounted","onBeforeUnmount","visible","computed","id","item","MapnavAPI","FixtureInstance","mapnavConfig","mapnavItems","map","systemControls","messages","MapnavFixture","value","destroy","MapnavV","unwatch","handler","GlobalEvents","items"],"mappings":"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"}