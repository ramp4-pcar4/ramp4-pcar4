{"version":3,"file":"conditionalSlot-D4LZhoz-.js","sources":["../../node_modules/@esri/calcite-components/dist/components/conditionalSlot.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.6.0\n */\nimport { forceUpdate } from '@stencil/core/internal/client/index.js';\nimport { c as createObserver } from './observers.js';\n\nconst observed = new Set();\nlet mutationObserver;\nconst observerOptions = { childList: true };\n/**\n * Helper to set up a conditional slot component on connectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nfunction connectConditionalSlotComponent(component) {\n    if (!mutationObserver) {\n        mutationObserver = createObserver(\"mutation\", processMutations);\n    }\n    mutationObserver.observe(component.el, observerOptions);\n}\n/**\n * Helper to tear down a conditional slot component on disconnectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nfunction disconnectConditionalSlotComponent(component) {\n    observed.delete(component.el);\n    // we explicitly process queued mutations and disconnect and reconnect\n    // the observer until MutationObserver gets an `unobserve` method\n    // see https://github.com/whatwg/dom/issues/126\n    processMutations(mutationObserver.takeRecords());\n    mutationObserver.disconnect();\n    for (const [element] of observed.entries()) {\n        mutationObserver.observe(element, observerOptions);\n    }\n}\nfunction processMutations(mutations) {\n    mutations.forEach(({ target }) => {\n        forceUpdate(target);\n    });\n}\n\nexport { connectConditionalSlotComponent as c, disconnectConditionalSlotComponent as d };\n\n//# sourceMappingURL=conditionalSlot.js.map"],"names":["observed","mutationObserver","observerOptions","connectConditionalSlotComponent","component","createObserver","processMutations","disconnectConditionalSlotComponent","element","mutations","target","forceUpdate"],"mappings":";;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,MAAMA,IAAW,oBAAI;AACrB,IAAIC;AACJ,MAAMC,IAAkB,EAAE,WAAW;AAWrC,SAASC,EAAgCC,GAAW;AAChD,EAAKH,MACDA,IAAmBI,EAAe,YAAYC,CAAgB,IAElEL,EAAiB,QAAQG,EAAU,IAAIF,CAAe;AAC1D;AAWA,SAASK,EAAmCH,GAAW;AACnD,EAAAJ,EAAS,OAAOI,EAAU,EAAE,GAI5BE,EAAiBL,EAAiB,YAAW,CAAE,GAC/CA,EAAiB,WAAU;AAC3B,aAAW,CAACO,CAAO,KAAKR,EAAS,QAAO;AACpC,IAAAC,EAAiB,QAAQO,GAASN,CAAe;AAEzD;AACA,SAASI,EAAiBG,GAAW;AACjC,EAAAA,EAAU,QAAQ,CAAC,EAAE,QAAAC,QAAa;AAC9B,IAAAC,EAAYD,CAAM;AAAA,EAC1B,CAAK;AACL;","x_google_ignoreList":[0]}