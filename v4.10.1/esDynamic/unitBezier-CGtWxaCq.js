function u(c,i,l,f){const t=3*c,b=3*(l-c)-t,x=1-t-b,h=3*i,I=3*(f-i)-h,O=1-h-I;function N(e){return((x*e+b)*e+t)*e}function g(e){return((O*e+I)*e+h)*e}function k(e){return(3*x*e+2*b)*e+t}function y(e,p){let a,s,n,o,m,M;for(n=e,M=0;M<8;M++){if(o=N(n)-e,Math.abs(o)<p)return n;if(m=k(n),Math.abs(m)<1e-6)break;n-=o/m}if(a=0,s=1,n=e,n<a)return a;if(n>s)return s;for(;a<s;){if(o=N(n),Math.abs(o-e)<p)return n;e>o?a=n:s=n,n=.5*(s-a)+a}return n}return function(e,p=1e-6){return g(y(e,p))}}const z=/^cubic-bezier\((.*)\)/,r={};function F(c){let i=r[c]||null;if(!i){const l=z.exec(c);if(l){const f=l[1].split(",").map(t=>parseFloat(t.trim()));f.length!==4||f.some(t=>isNaN(t))||(i=u.apply(u,f))}}return i}r.ease=u(.25,.1,.25,1),r.linear=u(0,0,1,1),r.easeIn=r["ease-in"]=u(.42,0,1,1),r.easeOut=r["ease-out"]=u(0,0,.58,1),r.easeInOut=r["ease-in-out"]=u(.42,0,.58,1);export{u as e,F as r,r as t};
