{"version":3,"file":"icon-D6eEhJ_f.js","sources":["../../node_modules/@esri/calcite-components/dist/components/icon.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.13.2\n */\nimport { getAssetPath, proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { a as getElementDir, t as toAriaBoolean } from './dom.js';\nimport { c as createObserver } from './observers.js';\nimport { i as isBrowser } from './browser.js';\n\nconst CSS = {\n    icon: \"icon\",\n    flipRtl: \"flip-rtl\",\n};\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nconst iconCache = {};\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nconst requestCache = {};\nconst scaleToPx = {\n    s: 16,\n    m: 24,\n    l: 32,\n};\nfunction generateIconId({ icon, scale }) {\n    const size = scaleToPx[scale];\n    const name = normalizeIconName(icon);\n    const filled = name.charAt(name.length - 1) === \"F\";\n    const iconName = filled ? name.substring(0, name.length - 1) : name;\n    return `${iconName}${size}${filled ? \"F\" : \"\"}`;\n}\nasync function fetchIcon(props) {\n    const cachedIconKey = generateIconId(props);\n    const cachedIconData = getCachedIconDataByKey(cachedIconKey);\n    if (cachedIconData) {\n        return cachedIconData;\n    }\n    if (!requestCache[cachedIconKey]) {\n        requestCache[cachedIconKey] = fetch(getAssetPath(`./assets/icon/${cachedIconKey}.json`))\n            .then((resp) => resp.json())\n            .catch(() => {\n            console.error(`\"${cachedIconKey}\" is not a valid calcite-ui-icon name`);\n            return \"\";\n        });\n    }\n    const path = await requestCache[cachedIconKey];\n    iconCache[cachedIconKey] = path;\n    return path;\n}\n/**\n * Util to retrieve cached icon data based on icon name and scale.\n *\n * @param props – icon properties\n */\nfunction getCachedIconData(props) {\n    return getCachedIconDataByKey(generateIconId(props));\n}\nfunction getCachedIconDataByKey(id) {\n    return iconCache[id];\n}\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nfunction normalizeIconName(name) {\n    const numberLeadingName = !isNaN(Number(name.charAt(0)));\n    const parts = name.split(\"-\");\n    const kebabCased = parts.length > 0;\n    if (kebabCased) {\n        const firstNonDigitInPartPattern = /[a-z]/i;\n        name = parts\n            .map((part, partIndex) => {\n            return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n                const isFirstCharInName = partIndex === 0 && offset === 0;\n                if (isFirstCharInName) {\n                    return match;\n                }\n                return match.toUpperCase();\n            });\n        })\n            .join(\"\");\n    }\n    return numberLeadingName ? `i${name}` : name;\n}\n\nconst iconCss = \":host{display:inline-flex;color:var(--calcite-icon-color, var(--calcite-ui-icon-color, currentColor))}:host([scale=s]){inline-size:16px;block-size:16px;min-inline-size:16px;min-block-size:16px}:host([scale=m]){inline-size:24px;block-size:24px;min-inline-size:24px;min-block-size:24px}:host([scale=l]){inline-size:32px;block-size:32px;min-inline-size:32px;min-block-size:32px}.flip-rtl{transform:scaleX(-1)}.svg{display:block}:host([hidden]){display:none}[hidden]{display:none}\";\nconst CalciteIconStyle0 = iconCss;\n\nconst Icon = /*@__PURE__*/ proxyCustomElement(class Icon extends HTMLElement {\n    constructor() {\n        super();\n        this.__registerHost();\n        this.__attachShadow();\n        this.icon = null;\n        this.flipRtl = false;\n        this.scale = \"m\";\n        this.textLabel = undefined;\n        this.pathData = undefined;\n        this.visible = false;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    connectedCallback() {\n        if (!this.visible) {\n            this.waitUntilVisible(() => {\n                this.visible = true;\n                this.loadIconPathData();\n            });\n        }\n    }\n    disconnectedCallback() {\n        this.intersectionObserver?.disconnect();\n        this.intersectionObserver = null;\n    }\n    render() {\n        const { el, flipRtl, pathData, scale, textLabel } = this;\n        const dir = getElementDir(el);\n        const size = scaleToPx[scale];\n        const semantic = !!textLabel;\n        const paths = [].concat(pathData || \"\");\n        return (h(Host, { key: '724265acdc6fb528bf7b25d7ec445c73a63f4c8e', \"aria-hidden\": toAriaBoolean(!semantic), \"aria-label\": semantic ? textLabel : null, role: semantic ? \"img\" : null }, h(\"svg\", { key: '864ee2d80bebd282543ba5d94c57f84b48a6204d', \"aria-hidden\": \"true\", class: {\n                [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n                svg: true,\n            }, fill: \"currentColor\", height: \"100%\", viewBox: `0 0 ${size} ${size}`, width: \"100%\", xmlns: \"http://www.w3.org/2000/svg\" }, paths.map((path) => typeof path === \"string\" ? (h(\"path\", { d: path })) : (h(\"path\", { d: path.d, opacity: \"opacity\" in path ? path.opacity : 1 }))))));\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    async loadIconPathData() {\n        const { icon, scale, visible } = this;\n        if (!isBrowser() || !icon || !visible) {\n            return;\n        }\n        const fetchIconProps = { icon, scale };\n        const pathData = getCachedIconData(fetchIconProps) || (await fetchIcon(fetchIconProps));\n        // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n        if (icon !== this.icon) {\n            return;\n        }\n        this.pathData = pathData;\n    }\n    waitUntilVisible(callback) {\n        this.intersectionObserver = createObserver(\"intersection\", (entries) => {\n            entries.forEach((entry) => {\n                if (entry.isIntersecting) {\n                    this.intersectionObserver.disconnect();\n                    this.intersectionObserver = null;\n                    callback();\n                }\n            });\n        }, { rootMargin: \"50px\" });\n        if (!this.intersectionObserver) {\n            callback();\n            return;\n        }\n        this.intersectionObserver.observe(this.el);\n    }\n    static get assetsDirs() { return [\"assets\"]; }\n    get el() { return this; }\n    static get watchers() { return {\n        \"icon\": [\"loadIconPathData\"],\n        \"scale\": [\"loadIconPathData\"]\n    }; }\n    static get style() { return CalciteIconStyle0; }\n}, [1, \"calcite-icon\", {\n        \"icon\": [513],\n        \"flipRtl\": [516, \"flip-rtl\"],\n        \"scale\": [513],\n        \"textLabel\": [1, \"text-label\"],\n        \"pathData\": [32],\n        \"visible\": [32]\n    }, undefined, {\n        \"icon\": [\"loadIconPathData\"],\n        \"scale\": [\"loadIconPathData\"]\n    }]);\nfunction defineCustomElement() {\n    if (typeof customElements === \"undefined\") {\n        return;\n    }\n    const components = [\"calcite-icon\"];\n    components.forEach(tagName => { switch (tagName) {\n        case \"calcite-icon\":\n            if (!customElements.get(tagName)) {\n                customElements.define(tagName, Icon);\n            }\n            break;\n    } });\n}\ndefineCustomElement();\n\nexport { Icon as I, defineCustomElement as d };\n\n//# sourceMappingURL=icon.js.map"],"names":["CSS","iconCache","requestCache","scaleToPx","generateIconId","icon","scale","size","name","normalizeIconName","filled","fetchIcon","props","cachedIconKey","cachedIconData","getCachedIconDataByKey","getAssetPath","resp","path","getCachedIconData","id","numberLeadingName","parts","firstNonDigitInPartPattern","part","partIndex","match","offset","iconCss","CalciteIconStyle0","Icon","proxyCustomElement","HTMLElement","el","flipRtl","pathData","textLabel","dir","getElementDir","semantic","paths","h","Host","toAriaBoolean","visible","isBrowser","fetchIconProps","callback","createObserver","entries","entry","defineCustomElement","tagName"],"mappings":"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","x_google_ignoreList":[0]}