import{bS as et,bR as tt,bF as Qs,aw as Zs,D as L,dj as ft,a5 as yt,bs as Hs,bt as Js,b1 as w,j8 as _e,eP as st,E as Xt,G as K,bv as Ks,q as Q,u as ye,C as Qt,aF as Zt,aG as Ge,s as B,ah as er,n as tr,eQ as ke,aM as ve,fq as sr,eN as rr,U as rt,ey as ir,hK as nr,hH as ar,h7 as Ht,aR as or,ej as Jt,bg as dr,gF as ur,aO as cr}from"./main-DVcB5zI_.js";import{O as it,c as lr}from"./workers-CY8xHZs2.js";import{z as hr}from"./TileInfo-DhYUgyXn.js";import{i as _r,h as pr,g as gr}from"./Tile-CAWO6zY7.js";import{e as nt}from"./TileKey-Bz77V7QA.js";import{a as T}from"./definitions-C0Jy3zs7.js";import{d as Kt,y as mt,s as bt}from"./diffUtils-DtX_28hR.js";import{a as wt,d as fr,M as Ce,p as at,e as es,i as ot,s as yr,b as mr,f as br,g as wr}from"./AttributeStore-Ccsw_J_s.js";import{r as Ir,j as vr}from"./MeshWriterRegistry-Bqq7kStV.js";import{_ as ts}from"./QueueProcessor-C6GPWQzh.js";import{g as xr,K as ss,a as J,O as Sr,N as Fr,w as kr,r as Cr,e as Tr,c as rs,b as Mr,n as is,p as $r,f as ns}from"./featureConversionUtils-Y0Xsf7-x.js";import{s as M,a as pe,e as Z}from"./OptimizedFeature-CIptWNVu.js";import{j as xe,x as qr}from"./queryUtils-DW_UbLHk.js";import{Z as le}from"./FieldsIndex-BqGmfyQl.js";import{o as Er}from"./optimizedFeatureQueryEngineAdapter-B92x0BB9.js";import{V as as}from"./QueryEngine-BF8bwIuf.js";import{d as Or,c as It,S as Rr}from"./query-VKD_R4TO.js";import{g as Ar}from"./arcgisLayerUrl-euAJ5jxV.js";import{b as os}from"./Query-5sYd3NzA.js";import{p as Pr}from"./TimeExtent-BMnBstjf.js";import{s as ds}from"./quantizationUtils-HkuvLbsQ.js";import{$ as vt}from"./ogcFeatureUtils-CvZN9q26.js";import{n as jr}from"./pbf-B3kRTLB9.js";import{b as Dr,h as Lr}from"./pbfQueryUtils-I7mt3-_E.js";import{t as xt}from"./CircularArray-CujHzHWW.js";import{createConnection as zr}from"./createConnection-DnPvpMKL.js";import{i as Ur}from"./UpdateTracking2D-cuVCRNRD.js";import"./preload-helper-ExcqyqRp.js";import"./TileKey-DZd6gJy7.js";import"./common-DQOJ18NT.js";import"./vec2-DGVIkCvT.js";import"./quickselect-QQC62dOK.js";import"./LabelMetric-C0VauK1H.js";import"./enums-CmIX1y88.js";import"./Texture-DbH8YzE1.js";import"./enums-Dk3osxpS.js";import"./Program-D_qKh8JQ.js";import"./BufferObject-B3tUf6Mp.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./vec2f32-BbH2jxlN.js";import"./TimeOnly-pAp-gj4B.js";import"./UnknownTimeZone-B5Y7Jezq.js";import"./timeSupport-ETjMvZSL.js";import"./labelUtils-CPaUXkM9.js";import"./PieChartMeshWriter-CQtzCxv4.js";import"./GeometryUtils-D9cp-PY1.js";import"./TurboLine-BeWB_7Yj.js";import"./utils-QWndGYJy.js";import"./earcut-Lltz9D9k.js";import"./constants-F8oTIn7N.js";import"./vec2f64-B7N_6o8F.js";import"./grouping-CWtmaSAo.js";import"./ReactiveMap-_K9BMkOn.js";import"./signal-B7JiYuXd.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./projection-DjziTCz4.js";import"./projectBuffer-B7AMRl4P.js";import"./normalizeUtils-BpU5i4_g.js";import"./normalizeUtilsCommon-D8VYrgzx.js";import"./utils-DrUkmw0x.js";import"./utils-BRf9xhkT.js";import"./json-Wa8cmqdu.js";import"./LRUCache-BWNn7yXO.js";import"./WhereClause-BIYI3I-G.js";import"./fieldType-CvjC4q_e.js";import"./QueryEngineCapabilities-DjYb9CEb.js";import"./utils-B17qSIAE.js";import"./heatmapUtils-D-_zNk3H.js";import"./vec42-CKs01hkn.js";import"./vec4f64-CMoMXWBi.js";import"./utils-DEbI6vk4.js";import"./Basemap-CMw_k2_s.js";import"./loadAll-CJCy9vk7.js";import"./PortalItem-CptTE56-.js";import"./writeUtils-vFOV-ALC.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-CP7NBZcJ.js";import"./utils-CaC7VQkc.js";import"./ClassBreaksDefinition-KnS6uP00.js";import"./Scheduler-CWFw9Bw5.js";import"./queryZScale-5NWWGPkz.js";import"./Field-BdhLPXiD.js";import"./geojson-rUVnxUSF.js";import"./date-Dw3OHnFv.js";import"./clientSideDefaults-B0aLP15N.js";import"./capabilities-Y9lFlGVh.js";import"./sourceUtils-CA7VJhEa.js";import"./BidiEngine-DNnuvc1i.js";import"./Rect-CUzevAry.js";import"./BindType-BmZEZMMh.js";import"./Util-C4yWdKVH.js";import"./UpdatingHandles-DAC2m1vS.js";let Wr=class{constructor(e){this._client=e,this.layerView=this._client.createInvokeProxy(""),this.container=this._client.createInvokeProxy("container"),this._eventLog=this._client.createInvokeProxy("eventLog")}onEvent(e){it(this._eventLog.onEvent(e))}};const Te=1,dt=2,Me=4,ut=8,ct=16,$e=32,lt=64,qe=128;function Pe(o){switch(o){case Te:case ut:case $e:return-1;case dt:case lt:return 0;case Me:case ct:case qe:return 1}}function je(o){switch(o){case Te:case dt:case Me:return-1;case ut:case ct:return 0;case $e:case lt:case qe:return 1}}const St=Te|ut|$e,Ft=Me|ct|qe,kt=Te|dt|Me,Ct=$e|lt|qe;let Gr=class{constructor(e,t,s,r,i=0){this.tileKey=e,this._bufferingEnabled=t,this._sizeHint=i,this._meshes={self:new wt(this.id,this._sizeHint),neighbors:new Array},this._currentRecordOverlaps=0,this._currentEntityOverlaps=0;const n=r?1:0;this._copyBufferedDataIntoSelf=s&&this._bufferingEnabled&&e.level===n}get id(){return this.tileKey.id}vertexCount(){return this._meshes.self.vertexCount()}indexCount(){return this._meshes.self.indexCount()}indexEnsureSize(e){this._meshes.self.indexEnsureSize(e)}entityStart(e,t=e){this._currentEntityOverlaps=0,this._meshes.self.entityStart(e,t)}entityRecordCount(){return this._meshes.self.entityRecordCount()}entityEnd(){if(this._meshes.self.entityEnd(),this._bufferingEnabled){if(this._copyBufferedDataIntoSelf)return;for(let e=0;e<8;e++){const t=1<<e;this._currentEntityOverlaps&t&&this._meshes.neighbors[e].entityEnd()}}}recordStart(e,t,s){this._currentRecordOverlaps=0,this._meshes.self.recordStart(e,t,s)}recordEnd(e=0){const t=this._meshes.self.recordEnd(this._currentRecordOverlaps);return t&&this._currentRecordOverlaps!==0?(this._copyIntoNeighbors(),this._currentEntityOverlaps|=this._currentRecordOverlaps,!0):t}recordBounds(e,t,s,r){this._bufferingEnabled&&this._addOverlap(e,t,s,r)}recordCount(){return this._meshes.self.recordCount()}metricStart(e){this._meshes.self.metricStart(e)}metricBoxWrite(e){this._meshes.self.metricBoxWrite(e)}metricEnd(){this._meshes.self.metricEnd()}vertexWrite(e){this._meshes.self.vertexWrite(e)}vertexWriteF32(e){this._meshes.self.vertexWriteF32(e)}vertexWriteRegion(e){this._meshes.self.vertexWriteRegion(e)}indexWrite(e){this._meshes.self.indexWrite(e)}serialize(e){const t={message:[],transferList:[]},s=this._meshes.self.serialize();return t.message.push({tileId:this.tileKey.id,...s.message}),t.transferList.push(...s.transferList),this._meshes.neighbors.forEach((r,i)=>{const n=r.serialize(),a=1<<i,d=Pe(a),u=je(a),l=new nt(this.tileKey).getNormalizedNeighbor(d,u,e);t.message.push({tileId:l.id,...n.message}),t.transferList.push(...n.transferList)}),t}_addOverlap(e,t,s,r){const i=Math.min(T/2,s),n=Math.min(T/2,r),a=255^((e<0+i?Ft:e>=T-i?St:Ft|St)|(t<0+n?Ct:t>=T-n?kt:Ct|kt));this._currentRecordOverlaps|=a}_copyIntoNeighbors(){for(let e=0;e<8;e++){const t=1<<e;if(this._currentRecordOverlaps&t){if(this._copyBufferedDataIntoSelf){const n=-Pe(t)*T,a=-je(t)*T;if(a!==0)continue;this._meshes.self.copyLast(n,a);continue}if(!this._meshes.neighbors[e]){const n=Math.floor(this._sizeHint/16);this._meshes.neighbors[e]=new wt(t,n)}const s=this._meshes.neighbors[e],r=-Pe(t)*T,i=-je(t)*T;s.copyLastFrom(this._meshes.self,r,i)}}}},Nr=class{},V=class us{constructor(){this._defaultResult=null,this._backgroundFillResult=null}static async from(e,t){const s=new us;return s.setDefault(await e.createMeshWriters(t.meshes)),s}size(){return 1}getDefault(){return this._defaultResult}setDefault(e){this._defaultResult=e}getBackgroundFill(){return this._backgroundFillResult}setBackgroundFill(e){this._backgroundFillResult=e}match(e,t){const s=this.doMatch(e,t)||this.getDefault();if(s&&s.length>0){const r=this.getBackgroundFill();if(r)return[...r,...s]}return s}getSortKey(e,t){return 0}doMatch(e,t){return null}async fetchResources(e,t){}},Br=class cs extends V{static async fromDictionaryRenderer(e,t){return new cs(e,t)}constructor(e,t){super(),this._context=e,this._schema=t,this._hashToGroup=new Map}get fieldMap(){return this._schema.fieldMap}async fetchResources(e,t){const s=t.getCursor(),r=[];for(;s.next();)r.push(this._updateMeshWriterGroup(e,s));await Promise.all(r)}match(e,t){const s=e.getAttributeHash();return this._hashToGroup.get(s)}async _updateMeshWriterGroup(e,t){const s=t.readLegacyFeatureForDisplay(),r=t.getAttributeHash();if(this._hashToGroup.has(r))return;this._hashToGroup.set(r,null);const i=await e.fetchDictionaryResourceImmediate({type:"dictionary-request",feature:s});if(!i)return;const n=await this._context.createMeshWriters(i.meshes);this._hashToGroup.set(r,n)}},Vr=class ls extends V{constructor(e,t){super(),this._intervals=[],this._isMaxInclusive=t,this._field=e}static async fromIntervalSchema(e,t){const s=await e.storage.createComputedField(t),r=new ls(s,t.isMaxInclusive);await Promise.all(t.intervals.map(async a=>{const d=await e.createMeshWriters(a.meshes);r.add(a,d)}));const i=await e.createMeshWriters(t.defaultSymbol);r.setDefault(i);const n=await e.createMeshWriters(t.backgroundFill);return r.setBackgroundFill(n),r}add(e,t){this._intervals.push({interval:e,result:t}),this._intervals.sort((s,r)=>s.interval.min-r.interval.min)}size(){return super.size()+this._intervals.length}doMatch(e,t){const s=this._field?.read(e,t);if(s==null||isNaN(s)||s===1/0||s===-1/0)return null;for(let r=0;r<this._intervals.length;r++){const{interval:i,result:n}=this._intervals[r],a=s>=i.min,d=this._isMaxInclusive?s<=i.max:s<i.max;if(a&&d)return n}return null}},Yr=class hs extends V{static async fromLabelSchema(e,t){const s=t.classes.map(async i=>{const n=await e.createMeshWriters(i.meshes);return{minScale:i.minScale,maxScale:i.maxScale,meshes:n,expression:null,where:await e.storage.createWhereClause(i.where)}}),r=await Promise.all(s);return new hs(r)}constructor(e){super(),this._labels=e}match(e,t){if(!this._labels.length)return null;const s=this._getLabels(t.$view.scale),r=[];for(const i of s)i.where&&!i.where(e)||r.push(...i.meshes);return r}_getLabels(e){return this._labels.filter(t=>this._validForTileScale(t,e))}_validForTileScale(e,t){const s=t-t/4,r=t+t/2;return(!e.minScale||e.minScale>=s)&&(!e.maxScale||e.maxScale<=r)}},Xr=class _s extends V{constructor(e,t){super(),this._defaultSymbolSortKey=0,this._nullResult=null,this._resultsMap=new Map,this._fields=[],this._fields=e,this._separator=t||""}static async fromMatcherSchema(e,t){const s=t.expression?[e.storage.createComputedField({expression:t.expression})]:[t.field?e.storage.createComputedField({field:t.field}):null,t.field2?e.storage.createComputedField({field:t.field2}):null,t.field3?e.storage.createComputedField({field:t.field3}):null],r=(await Promise.all(s)).filter(d=>!!d),i=new _s(r,t.fieldDelimiter),n=await e.createMeshWriters(t.defaultSymbol);i.setDefault(n);const a=await e.createMeshWriters(t.backgroundFill);return i.setBackgroundFill(a),await Promise.all(t.map.map(async(d,u)=>{const l=await e.createMeshWriters(d.symbol);d.value==="<Null>"?i.setNullResult(l):i.add(d.value,l,u+1)})),i}setNullResult(e){this._nullResult=e}getSortKey(e,t){const s=this._getValueFromFields(e,t);if(s==null||s===""||s==="<Null>")return 0;const r=this._resultsMap.get(s.toString());return r?r.sortKey:this._defaultSymbolSortKey}add(e,t,s){this._resultsMap.set(e.toString(),{meshWriters:t,sortKey:s}),this._defaultSymbolSortKey=Math.max(this._defaultSymbolSortKey,s+1)}size(){return super.size()+this._resultsMap.size}doMatch(e,t){const s=this._getValueFromFields(e,t);if(this._nullResult!==null&&(s==null||s===""||s==="<Null>"))return this._nullResult;if(s==null)return null;const r=s.toString();return this._resultsMap.get(r)?.meshWriters}_getValueFromFields(e,t){const s=[];for(const r of this._fields){const i=r.read(e,t);i==null||i===""?s.push("<Null>"):s.push(i)}return s.join(this._separator)}};async function ue(o,e){switch(e.type){case"simple":case"heatmap":case"dot-density":case"pie-chart":return V.from(o,e);case"interval":return Vr.fromIntervalSchema(o,e);case"dictionary":return Br.fromDictionaryRenderer(o,e);case"label":return Yr.fromLabelSchema(o,e);case"map":return Xr.fromMatcherSchema(o,e);case"subtype":return Qr.fromSubtypes(o,e);case"cluster":return Zr.fromClusterSchema(o,e);default:throw new Error("Impl")}}let Qr=class ps extends V{constructor(e,t){super(),this._subMatchers=e,this._subtypeField=t}static async fromSubtypes(e,t){const s=new Map,r=[];for(const i in t.renderers){const n=parseInt(i,10),a=ue(e,t.renderers[i]).then(d=>s.set(n,d));r.push(a)}return await Promise.all(r),new ps(s,t.subtypeField)}match(e,t){const s=e.readAttribute(this._subtypeField),r=this._subMatchers.get(s);return r?r.match(e,t):null}},Zr=class gs extends V{static async fromClusterSchema(e,t){const[s,r]=await Promise.all([ue(e,t.feature),ue(e,t.cluster)]);return new gs(s,r)}constructor(e,t){super(),this._featureMatcher=e,this._clusterMatcher=t}match(e,t){return e.readAttribute("cluster_count")===1?this._featureMatcher.match(e,t):this._clusterMatcher.match(e,t)}},Hr=class fs extends Nr{static async create(e,t){const s=await ue(e,t.symbology),r=t.labels?await ue(e,t.labels):null;return new fs(s,r)}constructor(e,t){super(),this._symbology=e,this._labels=t}destroy(){}async enqueueMatcherRequests(e,t){await Promise.all([this._symbology.fetchResources(e,t),this._labels?.fetchResources(e,t)])}enqueueWriterRequests(e,t,s){const r=this._symbology.match(t,s);if(r){for(const i of r)i.enqueueRequest(e,t,s);if(this._labels){const i=this._labels.match(t,s);if(!i)return;for(const n of i)n.enqueueRequest(e,t,s)}}}write(e,t,s,r,i){const n=this._symbology.match(s,r);if(n){for(const a of n)a.write(e,t,s,r,i);if(e.entityRecordCount()>=1&&this._labels){const a=this._labels.match(s,r);if(!a)return;for(const d of a)d.setReferences(n),d.write(e,t,s,r,i)}}}getSortKey(e,t){return this._symbology.getSortKey(e,t)}},Jr=class{constructor(e,t,s,r){this.storage=e,this.proxy=t,this.viewParams=s,this.registry=r}async createMeshWriters(e){const t=e.map(s=>this.registry.createMeshWriter(this.storage,this.proxy,this.viewParams,s));return Promise.all(t)}},Kr=class{constructor(e){this._outstandingMessages=[],this._queue=new ts({concurrency:e.concurrency,process:t=>e.process(t)})}async push(e){if(e.end)return await Promise.all(this._outstandingMessages),await this._queue.push(e),void(this._outstandingMessages=[]);const t=this._queue.push(e);return this._outstandingMessages.push(t),t}},ys=class Ne{static async create(e,t){if(t.statisticType==="count"){const r=new Ir(1);return new Ne(t.name,t.alias,t.type,t.statisticType,r)}const s=await e.createComputedField({expression:t.onStatisticExpression?.expression,field:t.onStatisticField});return new Ne(t.name,t.alias,t.type,t.statisticType,s)}constructor(e,t,s,r,i){this.name=e,this.alias=t,this.type=s,this.statisticType=r,this.computed=i}},ht=class{constructor(e){this.subscription=e,this.handledChunks=new Set}destroy(){}},ms=class{constructor(e,t){this._source=e,this._attributeStore=t,this._sendStates=new Map}destroy(){}get enablePixelBuffering(){return!0}onSubscribe(e){const t=this.createState(e);this._sendStates.set(e.key.id,t),this.updateChunks()}onUnsubscribe(e){this._sendStates.get(e.key.id)?.destroy(),this._sendStates.delete(e.key.id)}invalidate(){const e=Array.from(this._sendStates.values());this._sendStates.clear();for(const t of e)t.destroy(),this.onSubscribe(t.subscription)}invalidateAttributeData(){}getFeatureObjectIdsForAggregate(e){throw new Error("InternalError: AggregateId lookup not supported")}getDisplayIds(e){return this.displayMap(e,t=>t,t=>t)}getDisplayAndObjectIds(e){return this.displayMap(e,t=>t,(t,s,r)=>[t,r])}beforeUpdateChunks(){}afterUpdateChunks(){}},bs=class extends ms{constructor(e,t,s,r){super(e,t),this.spatialReference=s,this.aggregateFields=r,this.events=new et,this.featureAdapter=Er}get aggregateQueryEngine(){return this._aggregateQueryEngine||(this._aggregateQueryEngine=new as({featureStore:this,fieldsIndex:this._metadata.fieldsIndex,geometryType:this._metadata.geometryType,objectIdField:this._metadata.objectIdField,spatialReference:this.spatialReference})),this._aggregateQueryEngine}removeChunks(e){}forEach(e){return this.forEachAggregateWorldSpace(e)}forEachInBounds(e,t){}forEachBounds(e,t){const s=tt();for(const r of e){const i=xr(s,r.geometry,!1,!1);i&&t(i)}}},_t=class{constructor(e,t,s,r,i){this.subscription=e,this.reader=t,this.clear=s,this.end=r,this.debugInfo=i,this.type="append"}get id(){return this.subscription.tile.id}createMessage(e,t,s){return{type:"append",clear:this.clear,id:this.id,append:e,end:this.end,debugInfo:this.debugInfo,subscriptionVesrion:this.subscription.version,version:t,attributeEpoch:s}}},Be=class{constructor(e,t,s,r,i){this.subscription=e,this.reader=t,this.remove=s,this.end=r,this.debugInfo=i,this.type="update"}get id(){return this.subscription.tile.id}createMessage(e,t,s){return{type:"update",id:this.id,modify:e,debugInfo:this.debugInfo,remove:this.remove,version:t,subscriptionVesrion:this.subscription.version,end:this.end,attributeEpoch:s}}},ei=class ws{static fromReader(e){const t=[],s=e.copy(),r=tt();for(;s.next();)s.getBounds(r)&&t.push(s.getIndex());const i=_r(9,n=>(s.setIndex(n),{minX:s.getBoundsXMin(),minY:s.getBoundsYMin(),maxX:s.getBoundsXMax(),maxY:s.getBoundsYMax()}));return i.load(t),new ws(i)}constructor(e){this._index=e}search(e){const t={minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]};return this._index.search(t)}};const ti=64;function si(o,e,t,s){const r=[o.xmin,o.ymin,o.xmax,o.ymax],i=Qs.fromExtent(Zs.fromBounds(r,s)),n=xe(i,s,L.WGS84,{densificationStep:e*ti});if(!n)return null;const a=ss(new M,n,!1,!1),d=a.coords.filter((f,m)=>!(m%2)),u=a.coords.filter((f,m)=>m%2),l=Math.min(...d),c=Math.min(...u),_=Math.max(...d),g=Math.max(...u),p=Ve(l,c,t,L.WGS84),y=Ve(_,g,t,L.WGS84);return p&&y?{bounds:r,geohashBounds:{xLL:p[0],yLL:p[1],xTR:y[0],yTR:y[1]},level:t}:null}function Ve(o,e,t,s){if(s.isWebMercator){const n=ft(o/yt.radius),a=n-360*Math.floor((n+180)/360),d=[0,0];return Tt(d,0,ft(Math.PI/2-2*Math.atan(Math.exp(-e/yt.radius))),a,t),d}const r=xe({x:o,y:e},s,L.WGS84);if(!r)return null;const i=[0,0];return Tt(i,0,r.y,r.x,t),i}function ri(o,e){let t=-90,s=90,r=-180,i=180;for(let n=0;n<e;n++){const a=Math.ceil((n+1)/2),d=Math.floor((n+1)/2),u=1-n%2,l=30-(3*a+2*d),c=30-(2*a+3*d),_=3*u+2*(1-u),g=2*u+3*(1-u),p=3*u+7*(1-u)<<c,y=(7*u+3*(1-u)<<l&o.geohashX)>>l,f=(p&o.geohashY)>>c;for(let m=_-1;m>=0;m--){const v=(r+i)/2,x=y&1<<m?1:0;r=(1-x)*r+x*v,i=(1-x)*v+x*i}for(let m=g-1;m>=0;m--){const v=(t+s)/2,x=f&1<<m?1:0;t=(1-x)*t+x*v,s=(1-x)*v+x*s}}return[r,t,i,s]}function Tt(o,e,t,s,r){r%2&&(r+=1);let i=0,n=0,a=-90,d=90,u=-180,l=180;for(let c=0;c<r/2;c++){for(let _=0;_<5;_++){const g=(u+l)/2,p=s>g?1:0;i|=p<<29-(_+5*c),u=(1-p)*u+p*g,l=(1-p)*g+p*l}for(let _=0;_<5;_++){const g=(a+d)/2,p=t>g?1:0;n|=p<<29-(_+5*c),a=(1-p)*a+p*g,d=(1-p)*g+p*d}}o[2*e]=i,o[2*e+1]=n}let Is=class{constructor(e){this._statistics=e}get statistics(){return this._statistics}};const Mt=Math.PI/180;let vs=class Ye{static create(e){return new Ye(e.map(t=>ii(t)))}constructor(e){this._statistics=e}values(){return this._statistics.values()}insert(e,t){for(const s of this._statistics)s.insert(e,t)}merge(e){for(let t=0;t<this._statistics.length;t++){const s=this._statistics[t],r=e._statistics[t];if(s.field.name!==r.field.name)throw new Error("InternalError: Tried to merge incompatible statistics");s.merge(r)}}clone(){return new Ye(this._statistics.map(e=>e.clone()))}};function ii(o){switch(o.statisticType){case"min":return new ni(o);case"max":return new ai(o);case"avg":return new di(o);case"avg_angle":return new ui(o);case"sum":case"count":return new oi(o);case"mode":return new ci(o)}}let se=class{constructor(e){this.field=e}insert(e,t){if(!this.field.computed)return;const s=this.field.computed.read(e,t);fr(s)||this._insertValue(s)}},ni=class xs extends se{constructor(){super(...arguments),this.type="min",this.value=Number.MAX_VALUE}_insertValue(e){this.value=Math.min(this.value,e)}merge(e){this.value=Math.min(this.value,e.value)}clone(){const e=new xs(this.field);return e.value=this.value,e}},ai=class Ss extends se{constructor(){super(...arguments),this.type="max",this.value=Number.MIN_VALUE}_insertValue(e){this.value=Math.max(this.value,e)}merge(e){this.value=Math.max(this.value,e.value)}clone(){const e=new Ss(this.field);return e.value=this.value,e}},oi=class Fs extends se{constructor(){super(...arguments),this.type="sum",this.value=0}_insertValue(e){this.value+=e}merge(e){this.value+=e.value}clone(){const e=new Fs(this.field);return e.value=this.value,e}},di=class ks extends se{constructor(){super(...arguments),this.type="avg",this._total=0,this._count=0}get value(){return this._total/this._count}_insertValue(e){this._total+=e,this._count+=1}merge(e){this._total+=e._total,this._count+=e._count}clone(){const e=new ks(this.field);return e._total=this._total,e._count=this._count,e}},ui=class Cs extends se{constructor(){super(...arguments),this.type="avg_angle",this._x=0,this._y=0,this._count=0}get value(){const e=this._x/this._count,t=this._y/this._count,s=180/Math.PI;return Math.atan2(t,e)*s}_insertValue(e){this._x=this._x+Math.cos(e*Mt),this._y=this._y+Math.sin(e*Mt),this._count+=1}merge(e){this._x+=e._x,this._y+=e._y,this._count+=e._count}clone(){const e=new Cs(this.field);return e._x=this._x,e._y=this._y,e._count=this._count,e}},ci=class Ts extends se{constructor(){super(...arguments),this._frequencies=new Map}get value(){let e,t=0;for(const[s,r]of this._frequencies.entries())r>t&&(t=r,e=s);return e}_insertValue(e){const t=this._frequencies.get(e);t!=null?this._frequencies.set(e,t+1):this._frequencies.set(e,1)}merge(e){for(const[t,s]of e._frequencies.entries()){const r=this._frequencies.get(t);r!=null?this._frequencies.set(t,r+s):this._frequencies.set(t,s)}}clone(){const e=new Ts(this.field);return e._frequencies=new Map(this._frequencies),e}},$t=class Xe extends Is{static create(e,t,s,r){const i=vs.create(e),n=new Array(32);for(let a=0;a<n.length;a++)n[a]=null;return new Xe(i,t,s,r,n)}constructor(e,t,s,r,i){super(e),this.xNode=t,this.yNode=s,this.depth=r,this.children=i,this._objectIds=new Set,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._xGeohashTotal=0,this._yGeohashTotal=0,this.next=null}get id(){return`${this.xNode}.${this.yNode}`}get containedObjectIds(){return this._objectIds}get count(){return this._count}clone(){const e=new Xe(this._statistics.clone(),this.xNode,this.yNode,this.depth,this.children);return e._count=this._count,e._xWorldTotal=this._xWorldTotal,e._yWorldTotal=this._yWorldTotal,e._xGeohashTotal=this._xGeohashTotal,e._yGeohashTotal=this._yGeohashTotal,e.next=this.next,e._objectIds=new Set(this._objectIds),e}insert(e,t,s,r,i,n){this._count+=1,this._xWorldTotal+=t,this._yWorldTotal+=s,this._xGeohashTotal+=r,this._yGeohashTotal+=i,this._statistics.insert(e,n),this._objectIds.add(e.getObjectId())}merge(e){if(e._count!==0){this._count+=e._count,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._xGeohashTotal+=e._xWorldTotal,this._yGeohashTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getCentroid(e){throw new Error("getCentroid not supported for GeohashNode")}getGeometry(e,t){const s=this._getLngLatBounds(),[r,i,n,a]=s,d=xe({rings:[[[r,i],[r,a],[n,a],[n,i],[r,i]]]},L.WGS84,e),u=ss(new M,d,!1,!1);return t!=null?J(new M,u,!1,!1,"esriGeometryPolygon",t,!1,!1):u}getGeometricCentroid(e,t){const s=this._getLngLatBounds(),[r,i,n,a]=s,d=xe({x:(r+n)/2,y:(i+a)/2},L.WGS84,e),u=Sr(new M,d);return t!=null?J(new M,u,!1,!1,"esriGeometryPoint",t,!1,!1):u}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return e.aggregateCount=this._count,e}find(e,t,s,r,i,n){if(r>=s)return this;const a=1-r%2,d=3*a+2*(1-a),u=2*a+3*(1-a),l=30-i-d,c=30-n-u,_=((e&7*a+3*(1-a)<<l)>>l)+((t&3*a+7*(1-a)<<c)>>c)*(8*a+4*(1-a)),g=this.children[_];return g==null?null:g.find(e,t,s,r+1,i+d,n+u)}_getLngLatBounds(){const e=this.depth,t=Math.ceil(e/2),s=Math.floor(e/2),r=30-(3*t+2*s),i=30-(2*t+3*s),n=this.xNode<<r,a=this.yNode<<i;return ri({geohashX:n,geohashY:a},this.depth)}};class li{constructor(e){this._fields=e,this._size=0,this._depth=0,this._root=$t.create(this._fields,0,0,0)}destroy(){}get size(){return this._size}get depth(){return this._depth}find(e,t,s){return this._root.find(e,t,s,0,0,0)}insert(e,t,s,r,i,n,a){let d=this._root,u=0,l=0,c=0;for(;d!==null;){if(d.insert(e,t,s,r,i,a),u>=n)return;const _=Math.ceil((u+1)/2),g=Math.floor((u+1)/2),p=1-u%2,y=30-(3*_+2*g),f=30-(2*_+3*g),m=(r&7*p+3*(1-p)<<y)>>y,v=(i&3*p+7*(1-p)<<f)>>f,x=m+v*(8*p+4*(1-p));l=l<<3*p+2*(1-p)|m,c=c<<2*p+3*(1-p)|v,d.children[x]==null&&(d.children[x]=$t.create(this._fields,l,c,u+1),this._depth=Math.max(this._depth,u+1),this._size+=1),u+=1,d=d.children[x]}}putBins(e,t){for(const s of this.getNodes(t)){const r=e.get(s.id);r?r.merge(s):e.set(s.id,s.clone())}}getNodes(e){const t=[],{geohashBounds:s,level:r}=e;let i=this._root;for(;i!==null;){const n=i.depth,a=i.xNode,d=i.yNode;if(n>=r){t.push(i),i=i.next;continue}const u=Math.ceil((n+1)/2),l=Math.floor((n+1)/2),c=1-n%2,_=30-(3*u+2*l),g=30-(2*u+3*l),p=~((1<<_)-1),y=~((1<<g)-1),f=(s.xLL&p)>>_,m=(s.yLL&y)>>g,v=(s.xTR&p)>>_,x=(s.yTR&y)>>g,C=a<<3*c+2*(1-c),E=d<<2*c+3*(1-c),F=C+8*c+4*(1-c),k=E+4*c+8*(1-c),S=Math.max(C,f),$=Math.max(E,m),P=Math.min(F,v),O=Math.min(k,x);let R=null,A=null;for(let W=$;W<=O;W++)for(let Ae=S;Ae<=P;Ae++){const Xs=Ae-C+(W-E)*(8*c+4*(1-c)),ie=i.children[Xs];ie&&(R||(R=ie,R.next=i.next),A&&(A.next=ie),A=ie,ie.next=i.next)}i=R||i.next}return t}}let Ms=class{constructor(e){this._options=e}insert(e,t){const s=e.getCursor(),r={$view:{scale:this._options.scale,timeZone:this._options.timeZone}};for(;s.next();)this._insertFeature(s,r,t)}_insertFeature(e,t,s){const{featureFilter:r}=this._options;if(r!==null&&!r.check(e))return;let i=0,n=0;if(e.geometryType==="esriGeometryPoint")i=e.readXWorldSpace(),n=e.readYWorldSpace();else{if(s){const d=e.readCentroidForDisplay();if(d==null)return;const[u,l]=d.coords;if(u<0||u>T||l<0||l>T)return}const a=e.readCentroidWorldSpace();if(a==null)return;i=a.coords[0],n=a.coords[1]}this._insert(e,i,n,t)}},hi=class extends Ms{constructor(e){super(e),this._tree=new li(this._options.fields)}put(e){throw new Error("Geohash tree does not support put")}putBounded(e,t,s){const{geohashLevel:r,spatialReference:i}=this._options,n=si(t,s,r,i);n!=null&&this._tree.putBins(e,n)}_insert(e,t,s,r){const{geohashLevel:i,spatialReference:n}=this._options,a=Ve(t,s,i,n);a&&this._tree.insert(e,t,s,a[0],a[1],i,r)}},Qe=class me extends Is{static createId(e,t){return`${e}.${t}`}static create(e,t,s,r){return new me(e,t,vs.create(s),r)}constructor(e,t,s,r){super(s),this.gridX=e,this.gridY=t,this._worldUnitsPerCell=r,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._objectIds=new Set}get id(){return me.createId(this.gridX,this.gridY)}get containedObjectIds(){return this._objectIds}get count(){return this._count}get firstObjectId(){return this._objectIds.values().next().value}get centroidXWorld(){return this._xWorldTotal/this._count}get centroidYWorld(){return this._yWorldTotal/this._count}clone(){const e=new me(this.gridX,this.gridY,this._statistics.clone(),this._worldUnitsPerCell);return e._count=this._count,e._xWorldTotal=this._xWorldTotal,e._yWorldTotal=this._yWorldTotal,e._firstFeatureAttributes=this._firstFeatureAttributes,e._objectIds=new Set(this._objectIds),e}insert(e,t,s,r){this._count===0?this._firstFeatureAttributes=e.readAttributes():this._firstFeatureAttributes=null,this._count+=1,this._xWorldTotal+=s,this._yWorldTotal+=r,this._statistics.insert(e,t),this._objectIds.add(e.getObjectId())}merge(e){if(e._count!==0){this._count+=e._count,this._firstFeatureAttributes=e._firstFeatureAttributes,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getCentroidX(e){return e==null?this.centroidXWorld:Fr(e,this.centroidXWorld)}getCentroidY(e){return e==null?this.centroidYWorld:kr(e,this.centroidYWorld)}getGeometry(e,t){const s=this.gridX*this._worldUnitsPerCell,r=this.gridY*this._worldUnitsPerCell,i=new M([4],[s,r,s+this._worldUnitsPerCell,r,s+this._worldUnitsPerCell,r+this._worldUnitsPerCell,s,r+this._worldUnitsPerCell]);if(t!=null){const n=new M;return J(n,i,!1,!1,"esriGeometryPolygon",t)}return i}getCentroid(e){const t=new M([],[this.centroidXWorld,this.centroidYWorld]);if(e!=null){const s=new M;return J(s,t,!1,!1,"esriGeometryPoint",e)}return t}getGeometricCentroid(e,t){const s=this.gridX*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,r=this.gridY*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,i=new M([],[s,r]);if(t!=null){const n=new M;return J(n,i,!1,!1,"esriGeometryPoint",t)}return i}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return this._firstFeatureAttributes!=null?{...e,...this._firstFeatureAttributes}:e}};const _i=96;function Ze(o,e){return Hs(o)*Js*_i/e}let pi=class extends Ms{constructor(e){super(e),this._cells=new Map,this._pixelsPerMapUnit=Ze(e.spatialReference,e.scale)}put(e){for(const t of this._cells.values()){const s=e.get(t.id);s?s.merge(t):e.set(t.id,t.clone())}}putBounded(e,t,s){const r=[t.xmin,t.ymin,t.xmax,t.ymax],[i,n,a,d]=r,u=Math.floor(i*this._pixelsPerMapUnit/this._options.cellSize),l=Math.floor(n*this._pixelsPerMapUnit/this._options.cellSize),c=Math.ceil(a*this._pixelsPerMapUnit/this._options.cellSize),_=Math.ceil(d*this._pixelsPerMapUnit/this._options.cellSize);for(let g=l;g<=_;g++)for(let p=u;p<=c;p++){const y=`${p}.${g}`,f=this._cells.get(y);if(!f)continue;const m=e.get(f.id);m?f&&!e.has(f.id)&&m.merge(f):e.set(f.id,f.clone())}}_insert(e,t,s,r){const i=t*this._pixelsPerMapUnit,n=s*this._pixelsPerMapUnit,a=Math.floor(i/this._options.cellSize),d=Math.floor(n/this._options.cellSize);this._getCellOrCreate(a,d).insert(e,r,t,s)}_getCellOrCreate(e,t){const s=Qe.createId(e,t);let r=this._cells.get(s);if(!r){const i=1*this._options.cellSize/this._pixelsPerMapUnit;r=Qe.create(e,t,this._options.fields,i),this._cells.set(s,r)}return r}},gi=class He extends Ce{static from(e,t){return new He(e.copy(),t)}constructor(e,t){super(e.metadata),this._currentIndex=-1,this._displayTranslationX=0,this._displayTranslationY=0,this._displayScaleX=1,this._displayScaleY=1,this._reader=e,this._indices=t,this._isPoint=e.geometryType==="esriGeometryPoint"}setTransformForDisplay(e){const t=this._reader.getInTransform();if(t==null){const[c,_]=e.scale,[g,p]=e.translate;return this._displayTranslationX=-g/c,this._displayScaleX=1/c,this._displayTranslationY=p/_,this._displayScaleY=1/-_,void(this._displayTransform=e)}const[s,r]=t.scale,[i,n]=t.translate,[a,d]=e.scale,[u,l]=e.translate;if(this._displayScaleX=s/a,this._displayTranslationX=(i-u)/a,this._displayScaleY=r/d,this._displayTranslationY=(-n+l)/d,!this._isPoint&&t)throw new Error("InternalError: Relative transformations not supported for non-point features");this._displayTransform=e}getInTransform(){return this._reader.getInTransform()}get fields(){return this._reader.fields}get hasNext(){return this._currentIndex+1<this._indices.length}getSize(){return this._indices.length}getCursor(){return this.copy()}copy(){const e=new He(this._reader.copy(),this._indices);return e._currentIndex=this._currentIndex,e._displayTransform=this._displayTransform,e._displayTranslationX=this._displayTranslationX,e._displayTranslationY=this._displayTranslationY,e._displayScaleX=this._displayScaleX,e._displayScaleY=this._displayScaleY,e}get contextTimeZone(){return this._reader.contextTimeZone}set contextTimeZone(e){this._reader.contextTimeZone=e}_nextIndex(){return++this._currentIndex<this._indices.length&&(this._reader.setIndex(this._indices[this._currentIndex]),!0)}next(){for(;this._nextIndex()&&!this._reader._getExists(););return this._currentIndex<this._indices.length}readXForDisplay(){return this._reader.readXForDisplay()*this._displayScaleX+this._displayTranslationX}readYForDisplay(){return this._reader.readYForDisplay()*this._displayScaleY+this._displayTranslationY}readGeometryForDisplay(){const e=this._reader.readGeometryForDisplay();if(!this._displayTransform)return e;const t=new M;return J(t,e,this.hasZ,this.hasM,this.geometryType,this._displayTransform),t.deltaDecode()}readCentroidForDisplay(){const e=this._reader.readCentroidForDisplay()?.clone();if(e){const[t,s]=e.coords;e.coords[0]=t*this._displayScaleX+this._displayTranslationX,e.coords[1]=s*this._displayScaleY+this._displayTranslationY}return e}get geometryType(){return this._reader.geometryType}get hasFeatures(){return this._reader.hasFeatures}get exceededTransferLimit(){return this._reader.exceededTransferLimit}get hasZ(){return this._reader.hasZ}get hasM(){return this._reader.hasM}readAttribute(e,t=!1){return this._reader.readAttribute(e,t)}readAttributes(){return this._reader.readAttributes()}joinAttributes(e){return this._reader.joinAttributes(e)}getBounds(e){return this._reader.getBounds(e)}getAttributeHash(){return this._reader.getAttributeHash()}getObjectId(){return this._reader.getObjectId()}getDisplayId(){return this._reader.getDisplayId()}setDisplayId(e){return this._reader.setDisplayId(e)}setIndex(e){return this._reader.setIndex(e)}getIndex(){return this._reader.getIndex()}readXWorldSpace(){return this._reader.readXWorldSpace()}readYWorldSpace(){return this._reader.readYWorldSpace()}_readX(){return this._reader.readXForDisplay()}_readY(){return this._reader.readYForDisplay()}_readServerCentroid(){return this._reader._readServerCentroid()}readLegacyFeatureForDisplay(){const e=this.readCentroidForDisplay();return{attributes:this.readAttributes(),geometry:this.readLegacyGeometryForDisplay(),centroid:(e&&{x:e.coords[0],y:e.coords[1]})??null}}readLegacyGeometryForDisplay(){const e=this.readGeometryForDisplay();return Cr(e,this.geometryType,!1,!1)}readGeometryArea(){return this._reader.readGeometryArea()}readGeometryWorldSpace(){return this._reader.readGeometryWorldSpace()}_readGeometry(){return this._reader._readGeometry()}_readAttribute(e,t){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}_readAttributes(){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}readArcadeFeature(){return this._reader.readArcadeFeature()}geometry(){return this._reader.geometry()}field(e){return this._reader.field(e)}hasField(e){return this._reader.hasField(e)}setField(e,t){return this._reader.setField(e,t)}keys(){return this._reader.keys()}castToText(e=!1){return this._reader.castToText(e)}},he=class{size(){return this.reader.getSize()}get fields(){return this.reader.fields}invalidate(){this._aggregateIndex=null,this._aggregateIndexHash=null,this._spatialIndex=null}queryFeaturesInBounds(e){const t=this._getSpatialIndex().search(e);return gi.from(this.reader,t)}getAggregateIndex(e){const t=JSON.stringify(e);if(t!==this._aggregateIndexHash){switch(this._aggregateIndexHash=t,e.type){case"grid":this._aggregateIndex=new pi(e);break;case"geohash":this._aggregateIndex=new hi(e)}this._aggregateIndex.insert(this.reader,this.isTiled)}return this._aggregateIndex}_getSpatialIndex(){return this._spatialIndex||(this._spatialIndex=ei.fromReader(this.reader)),this._spatialIndex}},q=class G extends Ce{static fromFeatures(e,t){const{objectIdField:s,geometryType:r}=t,i=Tr([],e,r,!1,!1,s);for(let n=0;n<i.length;n++)i[n].displayId=e[n].displayId;return G.fromOptimizedFeatures(i,t)}static fromFeatureSet(e,t){const s=rs(e,t.objectIdField);return G.fromOptimizedFeatureSet(s,t)}static fromOptimizedFeatureSet(e,t){const s=G.fromOptimizedFeatures(e.features,t);return s._exceededTransferLimit=e.exceededTransferLimit,s._transform=e.transform,s._fieldsIndex=new le(e.fields),s}static fromOptimizedFeatures(e,t,s){const r=new G(e,t);return r._fieldsIndex=t.fieldsIndex,r._transform=s,r}static empty(e){return new G([],e)}constructor(e,t){super(t),this._exceededTransferLimit=!1,this._featureIndex=-1,this._fieldsIndex=null,this._geometryType=t.geometryType,this._features=e}get fields(){return this._fieldsIndex}get geometryType(){return this._geometryType}get hasFeatures(){return!!this._features.length}get hasNext(){return this._featureIndex+1<this._features.length}get exceededTransferLimit(){return this._exceededTransferLimit}get hasZ(){return!1}get hasM(){return!1}get _current(){return this._features[this._featureIndex]}removeIds(e){const t=new Set(e);this._features=this._features.filter(s=>!(s.objectId!=null&&t.has(s.objectId)))}getSize(){return this._features.length}getCursor(){return this.copy()}getInTransform(){return this._transform}getAttributeHash(){let e="";for(const t in this._current.attributes)e+=this._current.attributes[t];return e}getIndex(){return this._featureIndex}setIndex(e){this._featureIndex=e}getObjectId(){return this._current?.objectId}getDisplayId(){return this._current.displayId}setDisplayId(e){this._current.displayId=e}copy(){const e=new G(this._features,this.metadata);return this.copyInto(e),e}next(){for(;++this._featureIndex<this._features.length&&!this._getExists(););return this._featureIndex<this._features.length}readGeometryArea(){return pe(this._current)?Mr(this._current.geometry,2):0}_readX(){return pe(this._current)?this._current.geometry.coords[0]:0}_readY(){return pe(this._current)?this._current.geometry.coords[1]:0}_readGeometry(){return pe(this._current)?this._current.geometry??null:null}_readServerCentroid(){return this._current.centroid}_readAttribute(e,t){if(!this._fieldsIndex){const i=this._current.attributes[e];if(i!==void 0)return i;const n=e.toLowerCase();for(const a in this._current.attributes)if(a.toLowerCase()===n)return this._current.attributes[a];return}const s=this._fieldsIndex.get(e);if(!s)return;const r=this._current.attributes[s.name];return r==null?r:t&&this.fields.isDateField(e)?new Date(r):r}_readAttributes(){return this._current.attributes}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._transform=this._transform,e._fieldsIndex=this._fieldsIndex}};function $s(o){return o.chunkId==="localEdit"}let Je=class extends he{constructor(e,t){super(),this.metadata=e,this.removed=new Set,this.overriddenIds=new Set,this._features=[],this.chunkId=t,this.normalizedChunkId=t}get reader(){return q.fromOptimizedFeatures(this._features,this.metadata)}get queryInfo(){return{}}get first(){return!1}get end(){return!1}get isTiled(){return!1}get lastLocalEditDropped(){return this._lastLocalEditDropped}applyOverrides(e){this._onChange();const{reader:t,removed:s}=e,r=[],i=new Set,n=t.getCursor(),a=new Set(s);for(this.overriddenIds.clear();n.next();){const d=n.readOptimizedFeatureWorldSpace(),u=d.objectId;r.push(d),i.add(u),this.overriddenIds.add(u),this.removed.delete(u)}for(const d of this._features){const u=d.objectId;a.has(u)||i.has(u)||(r.push(d),this.overriddenIds.add(u))}this._features=r;for(const d of i.values())this.removed.delete(d);for(const d of s)this.removed.add(d),this.overriddenIds.add(d)}removeOverrides(e){this._lastLocalEditDropped=performance.now(),this._onChange();const t=e.reader.getCursor(),s=new Set;for(;t.next();){const r=t.getObjectId();this.overriddenIds.has(r)&&(s.add(r),this.overriddenIds.delete(r))}this._features=this._features.filter(r=>!s.has(r.objectId))}getTileReader(e){if(!this._features.length)return null;const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}_onChange(){this.invalidate()}},fi=class extends ht{constructor(e,t){super(e),this.bins=new Map,this.featureCache=new Map,this.done=!1,this._store=t}reset(){this.destroy(),this.done=!1}invaldateForLocalEditDropped(){this.handledChunks.clear(),this.bins.clear()}destroy(){const e=this.subscription.tile.key.level;for(const t of this.featureCache.keys())this._store.releaseDisplayIdForObjectId(`${t}.${e}`);this.bins.clear(),this.featureCache.clear(),this.handledChunks.clear()}get tile(){return this.subscription.tile}*featuresWorldSpace(){for(const e of this.featureCache.values()){const t=e.clone();t.geometry&&$r(t.geometry,t.geometry,!1,!1,this.subscription.tile.transform),yield t}}},yi=class qs extends bs{static async create(e,t,s,r,i){const n=new at({spatialReference:t}),a=await Promise.all(e.fields.map(async u=>ys.create(n,u))),d=e.featureFilter?await es.create({geometryType:s.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:s.metadata.timeInfo,fieldsIndex:s.metadata.fieldsIndex,spatialReference:t,filterJSON:e.featureFilter}):null;return e.index.type==="geohash"&&await qr(t,L.WGS84),new qs(e,d,i,a,t,s,r)}constructor(e,t,s,r,i,n,a){super(n,a,i,r),this._schema=e,this._featureFilter=t,this._timeZone=s,this._metadata=ot.createFeature({geometryType:"esriGeometryPolygon",objectIdField:"aggregateId",fieldsIndex:new le(e.fields).toJSON(),globalIdField:null,spatialReference:n.metadata.spatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,typeIdField:null,types:null})}createState(e){return new fi(e,this._attributeStore)}async*applyLocalEdit(e){for(const t of this._sendStates.values())t.reset(),yield new _t(t.subscription,q.empty(this._source.metadata),!0,!1,{})}displayMap(e,t,s){const r=new Map(e.map(n=>[t(n),n])),i=[];for(const n of this._sendStates.values())for(const a of n.featuresWorldSpace()){const{objectId:d,displayId:u}=a,l=r.get(d);if(l!=null){const c=s(u,l,d);i.push(c),r.delete(d)}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const i of this._sendStates.values())for(const n of i.featuresWorldSpace())t.has(n.displayId)&&!s.has(n.objectId)&&(n.geometry&&r.push({...is(n,this._metadata.geometryType,!1,!1),displayId:n.displayId}),s.add(n.objectId));return{features:[],aggregates:r}}getFeatureObjectIdsForAggregate(e){for(const t of this._sendStates.values())for(const s of t.bins.values())if(s.id===e)return Array.from(s.containedObjectIds);return[]}beforeUpdateChunks(){const e=this._source.chunks();if(!e.length)return;let t=!1;for(const s of e)$s(s)&&s.lastLocalEditDropped!==this._lastHandledLocalEdit&&(this._lastHandledLocalEdit=s.lastLocalEditDropped,t=!0);if(t)for(const s of this._sendStates.values())s.invaldateForLocalEditDropped()}async*updateChunks(){for(const e of this._sendStates.values())yield*this._update(e,this._source)}forEachAggregateWorldSpace(e){const t=new Set;for(const s of this._sendStates.values())for(const r of s.featuresWorldSpace())t.has(r.objectId)||(e(r),t.add(r.objectId))}_createIndexOptions(e){switch(this._schema.index.type){case"geohash":return{type:"geohash",fields:this.aggregateFields,featureFilter:this._featureFilter,geohashLevel:this._schema.index.fixBinLevel,spatialReference:this.spatialReference,timeZone:this._timeZone,scale:e.scale};case"grid":{const t=this._schema.index.fixedBinLevel,s=t!=null?e.tileInfoView.getLODInfoAt(t).scale:e.scale;return{type:"grid",fields:this.aggregateFields,cellSize:this._schema.index.size,featureFilter:this._featureFilter,spatialReference:this.spatialReference,timeZone:this._timeZone,scale:s}}}}async*_update(e,t){const{handledChunks:s,subscription:r,bins:i,featureCache:n}=e,a=r.tile;if(e.done)return;for(const y of t.chunks()){if(s.has(y.chunkId))continue;s.add(y.chunkId);const f=y.queryInfo;if("tileId"in f){const m=new nt(f.tileId);if(m.level!==a.level||m.world!==a.key.world)continue}y.getAggregateIndex(this._createIndexOptions(e.tile)).putBounded(i,e.tile.extent,e.tile.resolution)}const d=[],u=r.tile.transform,l=r.tile.key.level;for(const y of i.values()){let f=n.get(y.id);if(f)f.attributes=y.getAttributes();else{const m=y.getGeometry(this.spatialReference,u);f=new Z(m,y.getAttributes(),null),m||(f.centroid=y.getGeometricCentroid(this.spatialReference,u)),f.objectId=y.id,f.displayId=this._attributeStore.createDisplayIdForObjectId(`${f.objectId}.${l}`),n.set(y.id,f)}d.push(f)}this.events.emit("changed"),e.done=!t.updateTracking.updating;const c=q.fromOptimizedFeatures(d,this._metadata,u),_=c.getCursor(),g=e.subscription.tile.createArcadeEvaluationOptions(this._timeZone);for(;_.next();)this._attributeStore.setAttributeData(_.getDisplayId(),_,g);yield new Be(e.subscription,c,[],e.done,{})}},mi=class{constructor(e,t){this.inner=e,this.displayId=t}};const ge=128;let bi=class extends ht{constructor(e){super(e),this.didSend=!1,this.done=!1}},wi=class{constructor(e,t,s,r,i){this._level=e,this._scale=t,this._indexOptions=s,this._clusterRadius=r,this._store=i,this._cells=new Map,this._handledChunks=new Set,this._statistics=new Map,this._clusters=new Map}destroy(){this._clearClusters()}_clearClusters(){for(const e of this._clusters.values())this._store.releaseDisplayIdForObjectId(e.inner.id);this._clusters.clear()}*aggregatesWorldSpace(){for(const e of this._clusters.values()){const t=e.inner.getCentroid(null),s=new Z(t,e.inner.getAttributes(),null);s.objectId=e.inner.id,s.displayId=e.displayId,yield s}}clusters(){return this._clusters.values()}updateChunks(e,t){let s=!1;for(const a of e){const d=a.queryInfo;"tileId"in d&&new nt(d.tileId).level!==this._level||this._handledChunks.has(a.normalizedChunkId)||(this._handledChunks.add(a.normalizedChunkId),s=!0,a.getAggregateIndex({...this._indexOptions,scale:this._scale}).put(this._cells))}const r={xMin:1/0,yMin:1/0,xMax:-1/0,yMax:-1/0},i=Ze(this._indexOptions.spatialReference,this._scale),n=this._indexOptions.cellSize;for(const{subscription:a}of t){const d=a.tile.bounds,u=Math.floor(d[0]*i/n),l=Math.floor(d[1]*i/n),c=Math.ceil(d[2]*i/n),_=Math.ceil(d[3]*i/n);r.xMin=Math.min(r.xMin,u),r.yMin=Math.min(r.yMin,l),r.xMax=Math.max(r.xMax,c),r.yMax=Math.max(r.yMax,_)}return this._lastCellBounds!=null&&r.xMin===this._lastCellBounds.xMin&&r.yMin===this._lastCellBounds.yMin&&r.yMin===this._lastCellBounds.yMin&&r.yMax===this._lastCellBounds.yMax||(s=!0,this._lastCellBounds=r),s&&this._clusterCells(r),s}async updateStatistics(e){let t=!1;for(const s of this._clusters.values())s.inner.count>1&&(t=this._updateAggregateStatistics(this._statistics,s.inner)||t);if(t){const s=Array.from(this._statistics.entries()).map(([r,i])=>({fieldName:r,minValue:i.minValue,maxValue:i.maxValue}));await e.container.updateStatistics(this._level,s)}}createAggregateFeatures(e,t){const s=e.subscription,r=[],i=s.tile.transform;for(const n of this._clusters.values()){let a=n.inner.getCentroidX(i);const d=n.inner.getCentroidY(i),u=s.tile.lod,l=u.wrap?u.worldSize[0]:null,c=n.inner.count===1?n.inner.firstObjectId:n.inner.id,_=n.displayId;if(l!=null)if(l===1){const g=new M([],[a,d]),p=new Z(g,n.inner.getAttributes(),null);p.geometry.coords[0]-=T,p.objectId=c,p.displayId=_,r.push(p);const y=new M([],[a,d]),f=new Z(y,n.inner.getAttributes(),null);f.geometry.coords[0]+=T,f.objectId=c,f.displayId=_,r.push(f)}else a>T+T/2?a-=l*T:a<-T/2&&(a+=l*T);if(a<T+ge&&a>=-ge&&d<T+ge&&d>=-ge){const g=new M([],[a,d]),p=new Z(g,n.inner.getAttributes(),null);p.objectId=c,p.displayId=_,r.push(p)}}return q.fromOptimizedFeatures(r,t,s.tile.transform)}_clusterCells(e){let t=Array.from(this._cells.values());t=t.sort((a,d)=>d.count-a.count);const s=[];for(const a of this._clusters.values())s.push(a.inner.id);this._clusters.clear();const r=this._clusterRadius*(1/Ze(this._indexOptions.spatialReference,this._scale)),i=1+this._clusterRadius/this._indexOptions.cellSize,n=new Set;for(const a of t){if(n.has(a.id)||a.gridX<e.xMin||a.gridX>e.xMax||a.gridY<e.yMin||a.gridY>e.yMax)continue;const d=this._store.createDisplayIdForObjectId(a.id),u=new mi(a.clone(),d);n.add(a.id),this._clusters.set(a.id,u);const l=a.centroidXWorld,c=a.centroidYWorld;for(let _=a.gridY-i;_<=a.gridY+i;_++)for(let g=a.gridX-i;g<=a.gridX+i;g++){if(_===a.gridY&&g===a.gridX)continue;const p=this._cells.get(Qe.createId(g,_));if(!p||n.has(p.id))continue;const y=Math.abs(p.centroidXWorld-l),f=Math.abs(p.centroidYWorld-c);y<r&&f<r&&(u.inner.merge(p),n.add(p.id))}}for(const a of s)this._store.releaseDisplayIdForObjectId(a)}_updateAggregateStatistics(e,t){let s=!1;for(const r of t.statistics.values()){if(r.field.type==="esriFieldTypeString")continue;const i=r.value,n=r.field,a=e.get(n.name);if(a){const{minValue:d,maxValue:u}=a,l=Math.min(a.minValue,i),c=Math.max(a.maxValue,i);d===l&&u===c||(a.minValue=l,a.maxValue=c,s=!0)}else e.set(n.name,{minValue:i,maxValue:i}),s=!0}return s}},Ii=class Es extends bs{static async create(e,t,s,r,i,n){const a=new at({spatialReference:s}),d={type:"grid",fields:await Promise.all(t.fields.map(async u=>ys.create(a,u))),spatialReference:s,featureFilter:t.featureFilter?await es.create({geometryType:r.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:r.metadata.timeInfo,fieldsIndex:r.metadata.fieldsIndex,spatialReference:s,filterJSON:t.featureFilter}):null,cellSize:t.clusterRadius/4,timeZone:n};return new Es(e,t.clusterRadius,d,t.fields,r,i)}constructor(e,t,s,r,i,n){super(i,n,s.spatialReference,s.fields),this._connection=e,this._clusterRadius=t,this._indexOptions=s,this._cellsPerScale=new Map,this._metadata=ot.createFeature({geometryType:"esriGeometryPoint",objectIdField:"aggregateId",fieldsIndex:new le([...r,...this._source.metadata.fieldsIndex.fields,{name:"aggregateId",alias:"aggregateId",type:"esriFieldTypeOID"}]).toJSON(),globalIdField:null,spatialReference:i.metadata.spatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,typeIdField:null,types:null})}get enablePixelBuffering(){return!1}invalidate(){super.invalidate();for(const e of this._cellsPerScale.values())e.destroy();this._cellsPerScale.clear()}onSubscribe(e){super.onSubscribe(e),this._requiredLevel=e.tile.level,this._requiredScale=e.tile.scale}createState(e){return new bi(e)}async*applyLocalEdit(e){for(const t of this._cellsPerScale.values())t.destroy();this._cellsPerScale.clear();for(const t of this._sendStates.values())t.done=!1}displayMap(e,t,s){const r=new Map(e.map(a=>[t(a),a])),i=[],n=this._getClusterState(this._requiredLevel,this._requiredScale);for(const a of n.clusters()){const d=r.get(a.inner.id);if(d==null){if(a.inner.count===1){const u=r.get(a.inner.firstObjectId);if(u!=null){const l=s(a.displayId,u,a.inner.firstObjectId);i.push(l),r.delete(a.inner.firstObjectId)}}}else{const u=s(a.displayId,d,a.inner.id);i.push(u),r.delete(a.inner.id)}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[],i=[],n=this._getClusterState(this._requiredLevel,this._requiredScale);for(const a of n.aggregatesWorldSpace())if(t.has(a.displayId)&&!s.has(a.displayId)){const d=is(a,this._metadata.geometryType,!1,!1);if(s.add(a.displayId),d.attributes.cluster_count===1){r.push({...d,displayId:a.displayId});continue}i.push({...d,displayId:a.displayId})}return{features:r,aggregates:i}}getFeatureObjectIdsForAggregate(e){const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.clusters())if(s.inner.id===e)return Array.from(s.inner.containedObjectIds);return[]}async*updateChunks(){const e=this._source.chunks();if(!e.length)return;for(const n of e)$s(n)&&n.lastLocalEditDropped!==this._lastHandledLocalEdit&&(this.invalidate(),this._lastHandledLocalEdit=n.lastLocalEditDropped);const t=this._getClusterState(this._requiredLevel,this._requiredScale),s=Array.from(this._sendStates.values()).filter(n=>n.subscription.tile.level===this._requiredLevel);if(t.updateChunks(e,s)||!this._source.updateTracking.updating)for(const n of s)n.subscription.tile.level===this._requiredLevel&&(n.didSend=!1,n.done=!1);const r=Array.from(this._sendStates.values()).filter(n=>n.done).map(n=>n.subscription.tile.key),i=new Set(r);for(const n of this._sendStates.values())this._source.updateTracking.updating&&(r.some(a=>a.containsChild(n.subscription.tile.key))||n.subscription.tile.key.getChildKeys().every(a=>i.has(a)))||n.didSend||n.subscription.tile.level!==this._requiredLevel||(n.didSend=!0,yield*this._update(n,t,this._source));await t.updateStatistics(this._connection)}forEachAggregateWorldSpace(e){if(this._requiredLevel==null||this._requiredScale==null)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.aggregatesWorldSpace())e(s)}_getClusterState(e,t){if(e==null||t==null)throw new Error("InternalError: Level and scale must be defined");let s=this._cellsPerScale.get(t);return s||(s=new wi(e,t,this._indexOptions,this._clusterRadius,this._attributeStore),this._cellsPerScale.set(t,s)),s}async*_update(e,t,s){if(e.done)return;const r=t.createAggregateFeatures(e,this._metadata);this.events.emit("changed"),e.done=!s.updateTracking.updating;const i=r.getCursor(),n=e.subscription.tile.createArcadeEvaluationOptions(this._indexOptions.timeZone);for(;i.next();)this._attributeStore.setAttributeData(i.getDisplayId(),i,n);yield new _t(e.subscription,r,!0,e.done,{})}},vi=class extends ht{},xi=class extends ms{constructor(e,t,s){super(e,t),this._timeZone=s,this.handledChunks=new Set,this.handledChunksForIdCreation=new Set,this.handledChunksForAttributeData=new Set,this._streamLayerDeferredObjectIdsToRemove=[]}destroy(){super.destroy();for(const e of this._source.chunks())this._cleanupChunkIds(e)}invalidateAttributeData(){this.handledChunksForAttributeData.clear()}onSubscribe(e){super.onSubscribe(e),this._evalOptions=e.tile.createArcadeEvaluationOptions(this._timeZone)}createState(e){return new vi(e)}get aggregateQueryEngine(){return null}displayMap(e,t,s){const r=new Map(e.map(n=>[t(n),n])),i=[];for(const n of this._source.chunks()){const a=n.reader.getCursor();for(;a.next();){const d=a.getObjectId(),u=a.getDisplayId(),l=r.get(d);if(l!=null){const c=s(u,l,d);i.push(c),r.delete(d)}}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const i of this._source.chunks()){const n=i.reader.getCursor();for(;n.next();){const a=n.getObjectId(),d=n.getDisplayId();t.has(d)&&!s.has(a)&&(r.push({...n.readLegacyFeatureWorldSpace(),displayId:d}),s.add(a))}}return{features:r,aggregates:[]}}async*applyLocalEdit(e){const t=[],s=e.reader.getCursor();for(;s.next();){const n=s.getObjectId(),a=this._attributeStore.createDisplayIdForObjectId(n);s.setDisplayId(a),this._attributeStore.setAttributeData(a,s,this._evalOptions),t.push(a)}const r=[];for(const n of e.removed){const a=this._attributeStore.getDisplayIdForObjectId(n);a!=null&&r.push(a)}w("esri-2d-update-debug")&&console.debug("FeatureUpdateStrategy.applyLocalEdit",{message:e,modifiedDisplayIds:t,removedDisplayIds:r});const i=new Je(this._source.metadata,"localEdit");i.applyOverrides(e),this.handledChunks.add(i.chunkId),this.handledChunksForAttributeData.add(i.chunkId),this.handledChunksForIdCreation.add(i.chunkId);for(const n of this._sendStates.values())n.handledChunks.add(i.chunkId),yield new Be(n.subscription,null,t,!1,i.queryInfo);for(const n of this._sendStates.values()){const a=i.getTileReader(n.subscription.tile);yield new Be(n.subscription,a,r,!1,i.queryInfo)}for(const n of e.removed)this._attributeStore.releaseDisplayIdForObjectId(n)}async*updateChunks(){if(this._source.chunks().length){await this._updateAttributeData();for(const e of this._sendStates.values())yield*this._update(e)}}removeChunks(e){for(const t of e)this.handledChunks.delete(t.chunkId),this.handledChunksForAttributeData.delete(t.chunkId),this._cleanupChunkIds(t)}afterUpdateChunks(){for(const e of this._streamLayerDeferredObjectIdsToRemove)this._attributeStore.releaseDisplayIdForObjectId(e);this._streamLayerDeferredObjectIdsToRemove=[]}_cleanupChunkIds(e){if(this.handledChunksForIdCreation.has(e.chunkId)){const t=e.reader.getCursor();for(;t.next();){const s=t.getObjectId();this._source.isStream?this._streamLayerDeferredObjectIdsToRemove.push(s):this._attributeStore.releaseDisplayIdForObjectId(s)}this.handledChunksForIdCreation.delete(e.chunkId)}}async _updateAttributeData(){for(const e of this._source.chunks()){const{chunkId:t,reader:s}=e;if(!this.handledChunksForIdCreation.has(t)){this.handledChunksForIdCreation.add(t);const r=s.getCursor();for(;r.next();){const i=this._attributeStore.createDisplayIdForObjectId(r.getObjectId());r.setDisplayId(i)}}}for(const e of this._source.chunks())if(!this.handledChunksForAttributeData.has(e.chunkId)){this.handledChunksForAttributeData.add(e.chunkId);const t=e.reader.getCursor();for(;t.next();){const s=t.getDisplayId();this._attributeStore.setAttributeData(s,t,this._evalOptions)}}}*_update(e){const{subscription:t,handledChunks:s}=e;for(const r of this._source.chunks()){const{chunkId:i}=r;if(s.has(i))continue;s.add(i);const n=r.getTileReader(t.tile);n&&(yield new _t(e.subscription,n,!1,r.end,r.queryInfo))}}},Si=class{constructor(e,t){this._connection=e,this._source=t,this._version=1,this._registry=new vr,this._proxy=new yr({fetch:(s,r)=>this._connection.layerView.fetch(s,r),fetchDictionary:(s,r)=>this._connection.layerView.fetchDictionary(s,r)}),this._attributeStore=new mr({isLocal:!1,update:s=>it(this._connection.container.updateAttributeView(s))})}destroy(){this._proxy.destroy(),this._strategy?.destroy(),this._attributeStore.destroy()}get aggregateQueryEngine(){return this._strategy?.aggregateQueryEngine}getDisplayFeatures(e){return this._strategy?this._strategy.getDisplayFeatures(e):{features:[],aggregates:[]}}getDisplayIds(e){const t={};return this._strategy&&this._strategy.displayMap(e,s=>s,(s,r,i)=>{t[i]=s}),t}getFeatureObjectIdsForAggregate(e){return this._strategy?this._strategy.getFeatureObjectIdsForAggregate(e):[]}onSubscribe(e){this._strategy?.onSubscribe(e)}onUnsubscribe(e){this._strategy?.onUnsubscribe(e)}async update(e,t,s,r,i){const n=e.processor,a=_e(this._schema?.storage,n.storage),d=_e(this._schema?.mesh.properties,n.mesh.properties),u=_e(this._schema?.mesh.factory,n.mesh.factory),l=_e(this._schema?.mesh.strategy,n.mesh.strategy),c=d||u||l;if(!(a||c)&&!r)return;w("esri-2d-update-debug")&&console.debug(`Version[${this._version}] SymbolProcessor.update`,{changes:Kt(this._schema,n),schema:n}),this._schema=n;const _=L.fromJSON(this._source.service.outSpatialReference),g=new at({fields:this._source.metadata.fieldsIndex,spatialReference:_});if(await this._attributeStore.update(n.storage,g,this._source.metadata,_,t),this._strategy?.invalidateAttributeData(),!r&&!c)return;(l||d)&&await this._updateStrategy(n.mesh.strategy,_,i,n.mesh.properties.timeZone),this._updateSortKey(g,"sortKey"in n.mesh.properties?n.mesh.properties.sortKey:null);const p=new Jr(g,this._proxy,s,this._registry);return(u||n.mesh.factory.symbology.type==="dictionary")&&(this._factory=await Hr.create(p,n.mesh.factory)),this._invalidate(),this._version=t,this._connection.container.updateRenderState(this._version)}async applyLocalEdit(e){if(!this._strategy)return;const t=this._strategy.applyLocalEdit(e);for await(const s of t)try{await this._process(s)}catch{}}async updateChunks(){this._strategy?.beforeUpdateChunks(),await this._doUpdateChunks(),this._strategy?.afterUpdateChunks()}async removeChunks(e){this._strategy?.removeChunks(e),this._attributeStore.incrementDisplayIdGeneration()}updateHighlight({highlights:e}){if(!this._strategy)return void this._attributeStore.setHighlight(e.map(({objectId:s,highlightFlags:r})=>({objectId:s,highlightFlags:r,displayId:-1})),e);const t=this._strategy.displayMap(e,({objectId:s})=>s,(s,{highlightFlags:r},i)=>({objectId:i,displayId:s,highlightFlags:r}));this._attributeStore.setHighlight(t,e)}async _doUpdateChunks(){if(!this._strategy)return;const e=this._strategy.updateChunks(),t=[],s=new Map;for await(const r of e){let i=s.get(r.id);i==null&&(i=new Kr({concurrency:16,process:a=>this._process(a)}),s.set(r.id,i));const n=i.push(r).catch(a=>st(a));t.push(n)}try{await Promise.all(t)}catch{}w("esri-2d-update-debug")&&console.log("SendUpdates"),this._attributeStore.sendUpdates(),w("esri-2d-update-debug")&&console.log("SendUpdates.await")}async _updateStrategy(e,t,s,r){switch(this._strategy?.destroy(),e.type){case"feature":this._strategy=new xi(this._source,this._attributeStore,r);break;case"binning":this._strategy=await yi.create(e,t,this._source,this._attributeStore,r);break;case"cluster":this._strategy=await Ii.create(this._connection,e,t,this._source,this._attributeStore,r)}for(const i of s)this._strategy.onSubscribe(i)}async _updateSortKey(e,t){if(this._sortInfo=Xt(this._sortInfo?.computed),t!=null){const s=t.byRenderer?null:await e.createComputedField(t);this._sortInfo={...t,computed:s}}}_invalidate(){this._strategy&&this._strategy.invalidate()}async _process(e){const t=e.subscription;if(w("esri-2d-update-debug")){const d=t.tile;console.debug(`Version[${this._version}] Tile[${d.key.id}, end=${e.end}] Processor._process`)}await this._fetchResources(e),K(t.signal);const s=await this._write(e,t.tile.createArcadeEvaluationOptions(this._schema?.mesh.properties.timeZone)),r=t.tile.tileInfoView.getLODInfoAt(t.tile.key),{message:i,transferList:n}=s.serialize(r),a={objectIdMap:null,inner:e.createMessage(i,this._version,this._attributeStore.epoch)};if(this._schema?.mesh.properties.returnMeshObjectId){a.objectIdMap={};const d=e.reader?.getCursor();if(d)for(;d.next();)a.objectIdMap[d.getDisplayId()]=d.getObjectId()}if(K(t.signal),await this._connection.container.onMessage(a,{signal:t.signal,transferList:n}),this._attributeStore.sendUpdates(),w("esri-2d-update-debug")){const d=t.tile;console.debug(`Version[${this._version}] Tile[${d.key.id}, end=${e.end}] Processor._process.await`)}}async _fetchResources(e){await this._fetchMatcherResources(e),await this._fetchWriterResources(e)}async _fetchMatcherResources(e){if(e.reader)return this._factory.enqueueMatcherRequests(this._proxy,e.reader)}async _fetchWriterResources(e){if(!e.reader)return;const t=e.reader.getCursor(),s=e.subscription.tile.createArcadeEvaluationOptions(this._schema.mesh.properties.timeZone);for(;t.next();)this._factory.enqueueWriterRequests(this._proxy,t,s);await this._proxy.fetchEnqueuedResources()}async _write(e,t){const s=e.subscription.tile,r=e.reader?.getCursor(),i=r?.getSize()??0,n=s.tileInfoView.tileInfo.isWrappable,a=s.tileInfoView.tileInfo.spatialReference.isWGS84,d=new Gr(s.key,this._strategy.enablePixelBuffering,n,a,i);if(!r)return d;const u=s.createArcadeEvaluationOptions(this._schema.mesh.properties.timeZone);for(;r.next();){const l=this._getSortKeyValue(r,t);d.entityStart(r.getDisplayId(),l),this._factory.write(d,this._proxy,r,u,s.level),d.entityEnd()}return d}_getSortKeyValue(e,t){if(!this._sortInfo)return 0;const{computed:s,order:r,byRenderer:i}=this._sortInfo,n=i?this._factory.getSortKey(e,t):s?.read(e,t);return n==null||isNaN(n)?0:n*(r==="asc"?-1:1)}},Fi=class Os{static from(e){let t=0,s=0,r=0;return e.forEach(i=>{const n=i._readGeometry();n&&(s+=n.isPoint?1:n.lengths.reduce((a,d)=>a+d,0),r+=n.isPoint?1:n.lengths.length,t+=1)}),new Os(t,s,r)}constructor(e,t,s){this.featureCount=e,this.vertexCount=t,this.ringCount=s}toJSON(){return{featureCount:this.featureCount,ringCount:this.featureCount,vertexCount:this.featureCount}}};const De=4;function ki(o,e,t){const s=o.orderByFields??t.objectIdField+" ASC",r=o.source,i={returnCentroid:!(r!==null&&typeof r=="object"&&"path"in r&&Ar(r.path))&&t.serviceGeometryType==="esriGeometryPolygon",returnGeometry:!0,timeReferenceUnknownClient:t.timeReferenceUnknownClient??void 0,outSpatialReference:L.fromJSON(o.outSpatialReference),orderByFields:o.type==="memory"?[]:[s],where:e.mutable.dataFilter.definitionExpression??"1=1",outFields:e.mutable.availableFields,multipatchOption:t.serviceGeometryType==="esriGeometryMultiPatch"?"xyFootprint":null};if(e.type==="feature"){const{gdbVersion:n,historicMoment:a,timeExtent:d}=e.mutable.dataFilter;return{...i,gdbVersion:n,historicMoment:a?new Date(a):null,timeExtent:d?Pr.fromJSON(d):null,outFields:e.mutable.availableFields}}return i}let Ci=class Rs{static fromSchema(e,t,s){const r=t.type==="feature"?t.mutable.dataFilter.queryScaleRanges:[];return new Rs(ki(e,t,s),r,s.subtypeField,t.mutable.dataFilter.customParameters,s.geometryType,e.queryMetadata)}constructor(e,t,s,r,i,n){this._queryParams=e,this._queryScaleRanges=t,this._subtypeField=s,this._customParameters=r,this._geometryType=i,this._queryMetadata=n}get pageSize(){if(this._queryMetadata==null)throw new Error("InternalError: Service does not support paged queries");const e=this._queryMetadata.supportsMaxRecordCountFactor?De:null,t=(this._queryMetadata.maxRecordCount??8e3)*(e??1);return Math.min(8e3,t)}updateHistoricMoment(e){this._queryParams.historicMoment=e}updateFields(e){this._queryParams.outFields=e}createPatchFieldsQuery(e,t){if(!t.getSize())return null;const s=e.clone();if(this._queryParams.outFields[0]==="*"){if((s.outFields??[])[0]==="*")return null;s.outFields=this._queryParams.outFields}else{const r=new Set(this._queryParams.outFields),i=[];for(const n of r)t.hasField(n)||i.push(n);if(i.length===0)return null;s.outFields=i}return s.returnGeometry=!1,s.returnCentroid=!1,s.quantizationParameters=null,s.cacheHint=!0,{inner:s,customParameters:this._customParameters}}createQuery(e={}){if(!this._queryParams)throw new Error("InternalError: queryInfo should be defined");return{inner:new os({...this._queryParams,...e}),customParameters:this._customParameters}}createTileQuery(e,t){if(this._queryMetadata==null)throw new Error("InternalError: Service does not support tile queries");const s=this.createQuery(t),r=s.inner;if(this._queryScaleRanges.length){const i=this._queryScaleRanges.filter(n=>(!n.minScale||n.minScale>=e.maxScale)&&(!n.maxScale||n.maxScale<=e.minScale)).map(n=>n.subtypeCode);if(i.length){const n=`${this._subtypeField} IN (${i})`;r.where=Ks(r.where,n)}}if(r.quantizationParameters=t.quantizationParameters??e.getQuantizationParameters(),r.resultType="tile",r.geometry=e.extent,this._queryMetadata.supportsQuantization?this._geometryType==="esriGeometryPolyline"&&(r.maxAllowableOffset=e.resolution*w("feature-polyline-generalization-factor")):this._geometryType!=="esriGeometryPolyline"&&this._geometryType!=="esriGeometryPolygon"||(r.maxAllowableOffset=e.resolution,this._geometryType==="esriGeometryPolyline"&&(r.maxAllowableOffset*=w("feature-polyline-generalization-factor"))),r.defaultSpatialReferenceEnabled=this._queryMetadata.supportsDefaultSpatialReference,r.compactGeometryEnabled=this._queryMetadata.supportsCompactGeometry,this._queryMetadata.supportsMaxRecordCountFactor&&(r.maxRecordCountFactor=De),w("esri-tiles-debug")){const i=e.id.replaceAll("/",".");s.customParameters=s.customParameters?{...s.customParameters,tileId:i}:{tileId:i}}return s}createPagedTileQuery(e,t){const s=this.pageSize;return this.createTileQuery(e,{start:s*t,num:s,returnExceededLimitFeatures:!0})}createPagedQuery(e){const t=this.pageSize;return this.createQuery({start:t*e,num:t,returnExceededLimitFeatures:!0,maxRecordCountFactor:De})}};const Ti=2500;let be=class extends Zt{constructor(e){super(),this._connection=e,this._enabledEventTypes=new Set,this._updateInfo={websocket:0,client:0},this._lastTime=performance.now(),this._queuedCommands=[],this.addHandles([Ge(()=>this._strategy?.connectionStatus??"disconnected",t=>{this._layerView.setProperty({propertyName:"pipelineConnectionStatus",value:t})},{initial:!0}),Ge(()=>this._strategy?.errorString||null,t=>this._layerView.setProperty({propertyName:"pipelineErrorString",value:t}),{initial:!0})])}destroy(){this._strategy=null,this.removeAllHandles()}get _layerView(){return this._connection.layerView}set strategy(e){this._strategy==null&&this._resetUpdateInfo(performance.now());const t="event-handles";this.removeHandles(t),e!=null&&(this.addHandles([e.events.on("data-received",s=>this._onFeature(s)),e.events.on("message-received",s=>this._onWebSocketMessage(s)),e.events.on("features-updated",s=>this._onUpdate(s)),e.events.on("tick",()=>this._onTick())],t),this._queuedCommands.forEach(s=>s(e)),this._queuedCommands=[]),this._strategy=e}updateCustomParameters(e){e!=null&&this._callOrEnqueue(t=>t.updateCustomParameters(e))}sendMessageToSocket(e){this._callOrEnqueue(t=>t.sendMessageToSocket(e))}sendMessageToClient(e){this._callOrEnqueue(t=>t.sendMessageToClient(e))}enableEvent(e,t){t?this._enabledEventTypes.add(e):this._enabledEventTypes.delete(e)}disconnect(){this._strategy?.disconnect()}connect(){this._strategy?.connect()}clear(){this._strategy?.clear()}_onWebSocketMessage(e){this._enabledEventTypes.has("message-received")&&this._layerView.emitEvent({name:"message-received",event:e})}_onFeature(e){this._updateInfo.websocket++,this._enabledEventTypes.has("data-received")&&this._layerView.emitEvent({name:"data-received",event:{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry}})}_onUpdate(e){this._updateInfo.client+=e}_onTick(){const e=performance.now(),t=e-this._lastTime;if(t>Ti){const s=Math.round(this._updateInfo.client/(t/1e3)),r=Math.round(this._updateInfo.websocket/(t/1e3));this._resetUpdateInfo(e),this._layerView.emitEvent({name:"update-rate",event:{client:s,websocket:r}})}}_resetUpdateInfo(e){this._lastTime=e,this._updateInfo.client=0,this._updateInfo.websocket=0}_callOrEnqueue(e){this._strategy!=null?e(this._strategy):this._queuedCommands.push(e)}};Q([ye()],be.prototype,"_strategy",void 0),be=Q([Qt("esri.views.2d.layers.features.sources.StreamMessenger")],be);let pt=class{constructor(e){this._store=e,this._controller=new AbortController}destroy(){this._controller.abort()}get _options(){return{signal:this._controller.signal}}unsafeSetQueryHistoricMoment(e){throw new Error("InternalError: LoadStrategy does not support query info")}async queryOverride(e){throw new Error("InternalError: LoadStrategy does not support fetching")}async queryByObjectId(e){throw new Error("InternalError: LoadStrategy does not support fetching")}async addParquetFile(e){throw new Error("InternalError: LoadStrategy does not support loading blobs")}};const Le=268435455;let Mi=class{constructor(){this.hasFeatures=!1,this.exceededTransferLimit=!1,this.fieldCount=0,this.featureCount=0,this.objectIdFieldIndex=0,this.vertexCount=0,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}};function $i(o,e,t=!1){const u=o.asUnsafe(),l=u.pos(),c=new Mi;let _=0,g=0;const p=1,y=2,f=4,m=3;let v=null,x=null,C=null,E=!1;const F=[];for(;u.next();)switch(u.tag()){case 1:v=u.getString();break;case 3:x=u.getString();break;case 12:C=u.processMessage(Lr);break;case 9:if(c.exceededTransferLimit=u.getBool(),c.exceededTransferLimit){c.offsets.geometry=t?new Float64Array(8e3):new Int32Array(8e3),c.centroid=t?new Float64Array(16e3):new Int32Array(16e3);for(let S=0;S<c.centroid.length;S++)c.centroid[S]=Le}break;case 13:{const S=u.processMessage(Dr);S.index=_++,F.push(S);break}case 15:{const S=u.getLength(),$=u.pos()+S;if(!c.exceededTransferLimit){const O=c.offsets.geometry,R=c.centroid;O.push(0),R.push(Le),R.push(Le)}!E&&c.exceededTransferLimit&&(E=!0,c.offsets.attributes=t?new Float64Array(8e3*_):new Uint32Array(8e3*_));let P=g*_;for(;u.pos()<$&&u.next();)switch(u.tag()){case p:{E?c.offsets.attributes[P++]=u.pos():c.offsets.attributes.push(u.pos());const O=u.getLength();u.skipLen(O);break}case y:if(e){const O=u.getLength(),R=u.pos()+O;for(;u.pos()<R&&u.next();)switch(u.tag()){case m:{u.getUInt32();const A=u.getSInt64(),W=u.getSInt64();c.centroid[2*g]=A,c.centroid[2*g+1]=W;break}default:u.skip()}}else{c.offsets.geometry[g]=u.pos();const O=u.getLength();c.vertexCount+=O,u.skipLen(O)}break;case f:{const O=u.getLength(),R=u.pos()+O;for(;u.pos()<R&&u.next();)switch(u.tag()){case m:{u.getUInt32();const A=u.getSInt64(),W=u.getSInt64();c.centroid[2*g]=A,c.centroid[2*g+1]=W;break}default:u.skip()}break}default:u.skip()}g++,c.hasFeatures=!0;break}default:u.skip()}const k=v||x;if(!k)throw new B("FeatureSet has no objectId or globalId field name");return c.fields=new le(F),c.featureCount=g,c.fieldCount=_,c.objectIdFieldIndex=c.fields.get(k)?.index,c.transform=C,c.displayIds=new Uint32Array(c.featureCount),c.groupIds=new Uint16Array(c.featureCount),u.move(l),c}const qi=!0,qt=268435455,Et=128,Ot=128e3,Y={small:{delta:new Int32Array(Et),decoded:new Int32Array(Et)},large:{delta:new Int32Array(Ot),decoded:new Int32Array(Ot)}};function Rt(o){return o<=Y.small.delta.length?Y.small:(o<=Y.large.delta.length||(Y.large.delta=new Int32Array(Math.round(1.25*o)),Y.large.decoded=new Int32Array(Math.round(1.25*o))),Y.large)}function Ei(o){try{const t=new jr(new Uint8Array(o),new DataView(o));for(;t.next();){if(t.tag()===2)return Oi(t.getMessage());t.skip()}}catch(e){const t=new B("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:e});tr.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF").error(t)}return null}function Oi(o){for(;o.next();){if(o.tag()===1)return o.getMessage();o.skip()}return null}function Ri(o){const l=o.getLength(),c=o.pos()+l;for(;o.pos()<c&&o.next();)switch(o.tag()){case 1:return o.getString();case 2:return o.getFloat();case 3:return o.getDouble();case 4:return o.getSInt32();case 5:return o.getUInt32();case 6:return o.getInt64();case 7:return o.getUInt64();case 8:return o.getSInt64();case 9:return o.getBool();default:return o.skip(),null}return null}function Ai(o,e,t,s,r,i){return .5*Math.abs(o*s+t*i+r*e-o*i-t*e-r*s)}function ze(o,e,t,s,r){return o?e*r-s*t===0&&e*s+t*r>0:!1}let Pi=class Ke extends Ce{static fromBuffer(e,t,s=!1){const r=t.geometryType,i=Ei(e),n=$i(i,r==="esriGeometryPoint",s);return new Ke(i,n,t)}constructor(e,t,s){super(s),this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0,centroid:void 0,legacyFeature:void 0,optFeature:void 0},this._parseCaches=new Array,this._geometryType=s.geometryType,this._reader=e,this._header=t,this._hasNext=t.hasFeatures,this._isPoints=s.geometryType==="esriGeometryPoint"}get _size(){return this._header.featureCount}get fields(){return this._header.fields}get geometryType(){return this._geometryType}get hasZ(){return!1}get hasM(){return!1}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}getSize(){return this._size}getInTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0,this._featureIndex=e}getAttributeHash(){let e="";for(const t of this._header.fields.fields)e+=this._readAttributeAtIndex(t.index)+".";return e}getObjectId(){return this._readAttributeAtIndex(this._header.objectIdFieldIndex)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}readGeometryArea(){return this._cache.area||this._readGeometry(!0),this._cache.area}copy(){const e=this._reader.clone(),t=new Ke(e,this._header,this.metadata);return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0;++this._featureIndex<this._size&&!this._getExists(););return this._featureIndex<this._size}_readX(){return this._header.centroid[2*this._featureIndex]}_readY(){return this._header.centroid[2*this._featureIndex+1]}_readServerCentroid(){const e=this._header.centroid[2*this._featureIndex],t=this._header.centroid[2*this._featureIndex+1];return e===qt?null:new M([],[e,t])}_readGeometry(e=!1){if(this._cache.geometry===void 0){let t=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===qt)return null;const s=this._header.centroid[2*this._featureIndex],r=this._header.centroid[2*this._featureIndex+1];t=new M([],[s,r])}else{const s=this._header.offsets.geometry[this._featureIndex],r=this._reader;if(s===0)return null;r.move(s);try{t=e?this._parseGeometryForDisplay(r):this._parseGeometry(r)}catch{return null}}return t?.coords.length===0&&(t=null),this._cache.geometry=t,t}return this._cache.geometry}_readAttribute(e,t){const s=this._header.fields.get(e);if(s==null)return;const r=this._readAttributeAtIndex(s.index),i=this._header.fields.isDateField(s.name);return t?r==null?r:i?new Date(r):r:r}_readAttributes(){const e={};for(const t of this._header.fields.fields)e[t.name]=this._readAttributeAtIndex(t.index);return e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext,e._parseCaches=this._parseCaches}_readAttributeAtIndex(e){let t=this._parseCaches[e];if(t||(t=new br(this.getSize()),this._parseCaches[e]=t),t.has(this._featureIndex))return t.get(this._featureIndex);const s=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],r=this._reader;r.move(s);const i=Ri(r);return t.set(this._featureIndex,i),i}_readGeometryDeltaDecoded(e=!1){if(this._cache.unquantGeometry===void 0){const t=this._readGeometry(e);if(!t)return this._cache.unquantGeometry=void 0,null;if(!this.getInTransform())return this._cache.unquantGeometry=t,t;const s=Rt(t.coords.length).decoded,r=t.clone(s),i=r.coords;let n=0;for(const a of r.lengths){for(let d=1;d<a;d++){const u=2*(n+d),l=2*(n+d-1);i[u]+=i[l],i[u+1]+=i[l+1]}n+=a}return this._cache.unquantGeometry=r,r}return this._cache.unquantGeometry}_parseGeometry(e){const r=e.asUnsafe(),i=r.getLength(),n=r.pos()+i,a=[],d=[];for(;r.pos()<n&&r.next();)switch(r.tag()){case 2:{const u=r.getUInt32(),l=r.pos()+u;for(;r.pos()<l;)d.push(r.getUInt32());break}case 3:{const u=r.getUInt32(),l=r.pos()+u;for(a.push(r.getSInt64()),a.push(r.getSInt64()),this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64();r.pos()<l;)a.push(r.getSInt64()),a.push(r.getSInt64()),this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64();break}default:r.skip()}return new M(d,a)}_parseGeometryForDisplay(e){const r=e.asUnsafe(),i=r.getLength(),n=r.pos()+i,a=[],d=[];let u=0,l=0,c=null,_=0;const g=this.geometryType==="esriGeometryPolygon",p=this.geometryType==="esriGeometryPolyline",y=g||p;for(;r.pos()<n&&r.next();)switch(r.tag()){case 2:{const f=r.getUInt32(),m=r.pos()+f;for(;r.pos()<m;){const v=r.getUInt32();a.push(v),u+=v}c=Rt(2*u).delta;break}case 3:{r.getUInt32();const f=2+(this.hasZ?1:0)+(this.hasM?1:0);er(c);for(const m of a)if(l+f*m>c.length)for(let v=0;v<m;v++)r.getSInt32(),r.getSInt32(),this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32();else if(g&&qi){const v=this.getAreaSimplificationThreshold(m,this._header.vertexCount);let x=2,C=1;const E=!1;let F=r.getSInt32(),k=r.getSInt32();c[l++]=F,c[l++]=k,this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32();let S=r.getSInt32(),$=r.getSInt32();for(this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32();x<m;){let P=r.getSInt32(),O=r.getSInt32();this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32();const R=F+S,A=k+$;Ai(F,k,R,A,R+P,A+O)>=v?(_+=-.5*(R-F)*(A+k),C>1&&ze(y,c[l-2],c[l-1],S,$)?(c[l-2]+=S,c[l-1]+=$):(c[l++]=S,c[l++]=$,C++),F=R,k=A):(P+=S,O+=$),S=P,$=O,x++}C<3||E?l-=2*C:(_+=-.5*(F+S-F)*(k+$+k),ze(y,c[l-2],c[l-1],S,$)?(c[l-2]+=S,c[l-1]+=$,d.push(C)):(c[l++]=S,c[l++]=$,d.push(++C)))}else{let v=0,x=r.getSInt32(),C=r.getSInt32();this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32(),c[l++]=x,c[l++]=C,v+=1;for(let E=1;E<m;E++){const F=r.getSInt32(),k=r.getSInt32(),S=x+F,$=C+k;_+=-.5*(S-x)*($+C),this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32(),E>2&&ze(y,c[l-2],c[l-1],F,k)?(c[l-2]+=F,c[l-1]+=k):(c[l++]=F,c[l++]=k,v+=1),x=S,C=$}d.push(v)}break}default:r.skip()}return this._cache.area=_,d.length?new M(d,c):c!=null?this._createQuantizedExtrudedGeometry(c[0],c[1]):null}},Ee=class{constructor(e,t){this.service=e,this._metadata=t}destroy(){}};function ji(o,e){switch(o.type){case"memory":return new Li(o,e);case"ogc":return new Wi(o,e);case"feature-service":return o.queryMetadata.supportsFormatPBF&&w("featurelayer-pbf")?new zi(o,e):new Ui(o,e)}}async function Di(o){const e=new lr;return await e.open(o,{}),e}let Li=class extends Ee{constructor(e,t){super(e,t),this._portsOpen=Di(e.source).then(s=>this.client=s)}destroy(){this.client.close(),this.client=null}async executeQuery(e,t){await this._portsOpen;const s=await this.client.invoke("queryFeatures",e.toJSON(),t);return q.fromFeatureSet(s,this._metadata)}},zi=class extends Ee{async executeQuery(e,t){const{data:s}=await Or(this.service.source,e,t),r=!e.quantizationParameters;return Pi.fromBuffer(s,this._metadata,r)}},Ui=class extends Ee{async executeQuery(e,t){const{source:s,queryMetadata:r}=this.service;if(e.quantizationParameters!=null&&!r.supportsQuantization){const n=e.clone(),a=ds(n.quantizationParameters);n.quantizationParameters=null;const{data:d}=await It(s,n,this._metadata.spatialReference,t),u=rs(d,this._metadata.objectIdField);return ns(a,u),q.fromOptimizedFeatureSet(u,this._metadata)}const{data:i}=await It(s,e,this._metadata.spatialReference,t);return this._metadata.geometryType==="esriGeometryPoint"&&(i.features=i.features?.filter(n=>{if(n.geometry!=null){const a=n.geometry;return Number.isFinite(a.x)&&Number.isFinite(a.y)}return!0})),q.fromFeatureSet(i,this._metadata)}},Wi=class extends Ee{async executeQuery(e,t){if(e.quantizationParameters&&!this.service.queryMetadata.supportsQuantization){const r=e.clone(),i=ds(r.quantizationParameters);r.quantizationParameters=null;const n=await vt(this.service.source,e,t);return ns(i,n),q.fromOptimizedFeatureSet(n,this._metadata)}const s=await vt(this.service.source,e,t);return q.fromOptimizedFeatureSet(s,this._metadata)}},As=class extends pt{constructor(e,t,s,r,i){super(s),this._serviceInfo=e,this._queryInfo=t,this._metadata=r,this._connection=i,this._queue=new ts({concurrency:16,process:async n=>{const a={signal:n.options?.signal,query:n.query.customParameters};return this._adapter.executeQuery(n.query.inner,a)}}),this._adapter=ji(e,r)}unsafeSetQueryHistoricMoment(e){this._queryInfo.updateHistoricMoment(e)}async updateFields(e){this._queryInfo.updateFields(e);const t=Array.from(this._store.chunks()).map(async r=>{const i=os.fromJSON(r.queryInfo.queryJSON);if(i)try{return await this._tryUpdateFields(r.reader,i),null}catch(n){return n}}),s=(await Promise.all(t)).filter(r=>r);if(s.length)throw new B("featurelayer-query","Encountered errors when downloading fields",{errors:s})}async queryByObjectId(e){if(e.length===0)return q.empty(this._metadata);const t=this._queryInfo.createQuery({objectIds:e});return this._fetch(t)}async _fetch(e,t){const s=await this._enqueue(e,t);return await this._tryUpdateFields(s,e.inner),s}async _tryUpdateFields(e,t){const s=this._queryInfo.createPatchFieldsQuery(t,e);if(!s)return;const r=await this._enqueue(s,this._options);e.joinAttributes(r)}async _enqueue(e,t){return this._connection.onEvent({type:"fetchStart"}),this._queue.push({query:e,options:t}).finally(()=>{this._connection.onEvent({type:"fetchEnd",done:this._queue.length===0})})}},Ps=class extends As{constructor(){super(...arguments),this._chunksById=new Map}unload(e){this._removeChunks(e.tile)}_addChunk(e){const t=e.tile.id;this._chunksById.has(t)||this._chunksById.set(t,[]);const s=e.size();(s||e.first||e.end)&&(w("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] ATileLoadStrategy.addChunk [count=${s}]`),this._chunksById.get(t).push(e),this._store.insert(e))}_removeChunks(e){const t=this._chunksById.get(e.key.id)??[];for(const s of t)w("esri-2d-update-debug")&&console.debug(`Tile[${e.key.id}] Chunk[${s.chunkId}] ATileLoadStrategy.removeChunk`),this._store.remove(s);this._chunksById.delete(e.key.id)}},At=class extends he{constructor(e,t,s,r,i,n){super(),this._reader=e,this._queryJSON=t,this._tile=s,this._sourceTile=r,this._sourceTileDepth=i,this._end=n,this.chunkId=`${this._tile.key.id}.${this._sourceTile?.key.id}${this._end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._sourceTile?.key.normalizedId}${this._end?"e":""}`}get queryInfo(){return{type:"drill-down-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,sourceTileDepth:this._sourceTileDepth,sourceTileId:this._sourceTile?.key.id,size:this.size(),end:this.end}}get first(){return this._sourceTileDepth===0}get reader(){return this._reader}get end(){return this._end}get tile(){return this._tile}get isTiled(){return!0}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}},Gi=class{constructor(e,t){this.subscription=e,this._tileIdToResult=new Map,this._controller=new AbortController,this._handles=ke([ve(e.signal,()=>this._controller.abort()),ve(t,()=>this._controller.abort())])}destroy(){this._controller.abort(),this._handles.remove()}get(e){return this._tileIdToResult.get(e)}set(e,t){this._tileIdToResult.set(e,t)}get options(){return{signal:this._controller.signal}}},Ni=class extends Ps{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const e of this._loadStates.values())e.destroy();this._loadStates.clear()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){this._loadStates.has(e.key.id)||this._loadStates.set(e.key.id,new Gi(e,this._options));const t=this._loadStates.get(e.key.id);let s;try{for await(const i of this._fetchChunkInfos(t,e.tile,0)){const{queryJSON:n,reader:a,sourceTile:d,sourceTileDepth:u,tile:l}=i,c=new At(a,n,l,d,u,!1);K(t.options),this._addChunk(c)}}catch(i){s=i}const r=new At(q.empty(this._metadata),null,e.tile,null,-1,!0);if(this._addChunk(r),s)throw s}unload(e){super.unload(e),this._loadStates.get(e.key.id)?.destroy(),this._loadStates.delete(e.key.id)}async*_fetchChunkInfos(e,t,s){let r=e.get(t.id);const i=!!r;if(r||(r=await this._fetchChunkInfo(e,t,s),e.set(t.id,r)),r.reader.exceededTransferLimit&&s<w("featurelayer-query-max-depth"))for(const n of t.createChildTiles())yield*this._fetchChunkInfos(e,n,s+1);else i||(yield r)}async _fetchChunkInfo(e,t,s){const r=e.subscription.tile.getQuantizationParameters(),i=this._queryInfo.createTileQuery(t,{returnExceededLimitFeatures:!1,quantizationParameters:r});return{reader:await this._fetch(i,e.options),queryJSON:i.inner.toJSON(),tile:e.subscription.tile,sourceTile:t,sourceTileDepth:s}}},Pt=class extends he{constructor(e,t,s,r,i){super(),this._reader=e,this._queryJSON=t,this._tile=s,this._page=r,this._end=i,this.chunkId=`${this._tile.key.id}.${this._page}${this.end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._page}${this.end?"e":""}`}get queryInfo(){return{type:"paged-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get reader(){return this._reader}get first(){return this._page===0}get end(){return this._end}get page(){return this._page}get tile(){return this._tile}get isTiled(){return!0}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}},Bi=class{constructor(e,t){this.subscription=e,this._pages=new Set,this._controller=new AbortController,this._done=!1,this._handles=ke([ve(e.signal,()=>this._controller.abort()),ve(t,()=>this._controller.abort())])}destroy(){this._controller.abort(),this._handles.remove()}get pageStart(){let e=-1;for(const t of this._pages.values())e=Math.max(e,t);return e+1}get done(){return this._done}get options(){return{signal:this._controller.signal}}add(e,t){this._pages.add(e),this._done=this._done||t}},Vi=class extends Ps{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const e of this._loadStates.values())e.destroy();this._loadStates.clear()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){this._loadStates.has(e.key.id)||this._loadStates.set(e.key.id,new Bi(e,this._options));const t=this._loadStates.get(e.key.id);let s;try{await this._fetchPages(t)}catch(i){s=i}const r=new Pt(q.empty(this._metadata),null,e.tile,-1,!0);if(sr(t.options)||this._addChunk(r),s)throw s}unload(e){super.unload(e),this._loadStates.get(e.key.id)?.destroy(),this._loadStates.delete(e.key.id)}async _fetchPages(e){let r=0,i=e.pageStart,n=1;for(;r<20&&!e.done;){const a=[];for(let u=0;u<n;u++)a.push(this._fetchChunk(e,i++));const d=await Promise.all(a);for(const u of d)(u.size()!==0||u.first)&&(e.add(u.page,!u.reader.exceededTransferLimit),K(e.options),this._addChunk(u));r++,n=Math.min(n+1,4)}}async _fetchChunk(e,t){const s=e.subscription.tile,r=this._queryInfo.createPagedTileQuery(s,t),i=await this._fetch(r,e.options);return new Pt(i,r.inner.toJSON(),s,t,!1)}},h;const D=new Array(128).fill(void 0);function I(o){return D[o]}D.push(void 0,null,!0,!1);let oe=D.length;function Yi(o){o<132||(D[o]=oe,oe=o)}function U(o){const e=I(o);return Yi(o),e}function b(o){oe===D.length&&D.push(D.length+1);const e=oe;return oe=D[e],D[e]=o,e}const js=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};typeof TextDecoder<"u"&&js.decode();let ne=null;function we(){return ne!==null&&ne.byteLength!==0||(ne=new Uint8Array(h.memory.buffer)),ne}function H(o,e){return o>>>=0,js.decode(we().subarray(o,o+e))}const jt=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(o=>{h.__wbindgen_export_0.get(o.dtor)(o.a,o.b)});function Xi(o,e,t,s){const r={a:o,b:e,cnt:1,dtor:t},i=(...n)=>{r.cnt++;const a=r.a;r.a=0;try{return s(a,r.b,...n)}finally{--r.cnt==0?(h.__wbindgen_export_0.get(r.dtor)(a,r.b),jt.unregister(r)):r.a=a}};return i.original=r,jt.register(i,r,r),i}function Qi(o,e,t){h._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h7be72b1871260ae2(o,e,b(t))}function Zi(){h.enableTracing()}let j=0;const Ie=typeof TextEncoder<"u"?new TextEncoder("utf-8"):{encode:()=>{throw Error("TextEncoder not available")}},Hi=typeof Ie.encodeInto=="function"?function(o,e){return Ie.encodeInto(o,e)}:function(o,e){const t=Ie.encode(o);return e.set(t),{read:o.length,written:t.length}};function ce(o,e,t){if(t===void 0){const a=Ie.encode(o),d=e(a.length,1)>>>0;return we().subarray(d,d+a.length).set(a),j=a.length,d}let s=o.length,r=e(s,1)>>>0;const i=we();let n=0;for(;n<s;n++){const a=o.charCodeAt(n);if(a>127)break;i[r+n]=a}if(n!==s){n!==0&&(o=o.slice(n)),r=t(r,s,s=n+3*o.length,1)>>>0;const a=we().subarray(r+n,r+s);n+=Hi(o,a).written,r=t(r,s,n,1)>>>0}return j=n,r}let N=null;function ee(){return(N===null||N.buffer.detached===!0||N.buffer.detached===void 0&&N.buffer!==h.memory.buffer)&&(N=new DataView(h.memory.buffer)),N}function z(o,e){try{return o.apply(this,e)}catch(t){h.__wbindgen_exn_store(b(t))}}function Ji(o,e,t,s){h.wasm_bindgen__convert__closures__invoke2_mut__h35729c14da098d24(o,e,b(t),b(s))}let ae=null;function Ki(){return ae!==null&&ae.byteLength!==0||(ae=new Uint16Array(h.memory.buffer)),ae}function Dt(o,e){const t=e(2*o.length,2)>>>0;return Ki().set(o,t/2),j=o.length,t}function Ds(o,e,t){const s=ce(o,h.__wbindgen_malloc,h.__wbindgen_realloc),r=j;return U(h.readMetadata(s,r,b(e),b(t)))}function Lt(o,e){if(!(o instanceof e))throw new Error(`expected instance of ${e.name}`);return o.ptr}function en(o,e,t,s,r){const i=ce(o,h.__wbindgen_malloc,h.__wbindgen_realloc),n=j;Lt(s,re);var a=s.__destroy_into_raw();Lt(r,te);var d=r.__destroy_into_raw();return U(h.readFile(i,n,b(e),b(t),a,d))}function Ue(o){return o==null}const zt=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(o=>h.__wbg_fieldmetadata_free(o>>>0,1));class Oe{static __wrap(e){e>>>=0;const t=Object.create(Oe.prototype);return t.__wbg_ptr=e,zt.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,zt.unregister(this),e}free(){const e=this.__destroy_into_raw();h.__wbg_fieldmetadata_free(e,0)}get name(){let e,t;try{const i=h.__wbindgen_add_to_stack_pointer(-16);h.fieldmetadata_name(i,this.__wbg_ptr);var s=ee().getInt32(i+0,!0),r=ee().getInt32(i+4,!0);return e=s,t=r,H(s,r)}finally{h.__wbindgen_add_to_stack_pointer(16),h.__wbindgen_free(e,t,1)}}get index(){return h.fieldmetadata_index(this.__wbg_ptr)}get type(){return["esriFieldTypeSmallInteger","esriFieldTypeInteger","esriFieldTypeBigInteger","esriFieldTypeSingle","esriFieldTypeDouble","esriFieldTypeLong","esriFieldTypeString","esriFieldTypeDate","esriFieldTypeOID","esriFieldTypeGeometry","esriFieldTypeBlob","esriFieldTypeRaster","esriFieldTypeGUID","esriFieldTypeGlobalID","esriFieldTypeXML","esriFieldTypeDateOnly","esriFieldTypeTimeOnly","esriFieldTypeTimestampOffset"][h.fieldmetadata_esri_type(this.__wbg_ptr)]}}const Ut=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(o=>h.__wbg_filemetadata_free(o>>>0,1));class re{static __wrap(e){e>>>=0;const t=Object.create(re.prototype);return t.__wbg_ptr=e,Ut.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Ut.unregister(this),e}free(){const e=this.__destroy_into_raw();h.__wbg_filemetadata_free(e,0)}version(){return h.filemetadata_version(this.__wbg_ptr)}numRows(){return h.filemetadata_numRows(this.__wbg_ptr)>>>0}numFields(){return h.filemetadata_numFields(this.__wbg_ptr)>>>0}keyValueMetadata(e){try{const r=h.__wbindgen_add_to_stack_pointer(-16),i=ce(e,h.__wbindgen_malloc,h.__wbindgen_realloc),n=j;h.filemetadata_keyValueMetadata(r,this.__wbg_ptr,i,n);var t=ee().getInt32(r+0,!0),s=ee().getInt32(r+4,!0);let a;return t!==0&&(a=H(t,s).slice(),h.__wbindgen_free(t,1*s,1)),a}finally{h.__wbindgen_add_to_stack_pointer(16)}}getFieldIndex(e){const t=ce(e,h.__wbindgen_malloc,h.__wbindgen_realloc),s=j,r=h.filemetadata_getFieldIndex(this.__wbg_ptr,t,s);return r===16777215?void 0:r}getFieldByIndex(e){const t=h.filemetadata_getFieldByIndex(this.__wbg_ptr,e);return t===0?void 0:Oe.__wrap(t)}}const Wt=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(o=>h.__wbg_geometryinfodescriptor_free(o>>>0,1));class te{static __wrap(e){e>>>=0;const t=Object.create(te.prototype);return t.__wbg_ptr=e,Wt.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Wt.unregister(this),e}free(){const e=this.__destroy_into_raw();h.__wbg_geometryinfodescriptor_free(e,0)}get wkbIndex(){const e=h.__wbg_get_geometryinfodescriptor_wkbIndex(this.__wbg_ptr);return e===16777215?void 0:e}set wkbIndex(e){h.__wbg_set_geometryinfodescriptor_wkbIndex(this.__wbg_ptr,Ue(e)?16777215:e)}get lngIndex(){const e=h.__wbg_get_geometryinfodescriptor_lngIndex(this.__wbg_ptr);return e===16777215?void 0:e}set lngIndex(e){h.__wbg_set_geometryinfodescriptor_lngIndex(this.__wbg_ptr,Ue(e)?16777215:e)}get latIndex(){const e=h.__wbg_get_geometryinfodescriptor_latIndex(this.__wbg_ptr);return e===16777215?void 0:e}set latIndex(e){h.__wbg_set_geometryinfodescriptor_latIndex(this.__wbg_ptr,Ue(e)?16777215:e)}static new(){const e=h.geometryinfodescriptor_new();return te.__wrap(e)}}const Gt=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(o=>h.__wbg_parquetchunk_free(o>>>0,1));class Re{static __wrap(e){e>>>=0;const t=Object.create(Re.prototype);return t.__wbg_ptr=e,Gt.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Gt.unregister(this),e}free(){const e=this.__destroy_into_raw();h.__wbg_parquetchunk_free(e,0)}size(){return h.parquetchunk_size(this.__wbg_ptr)>>>0}hasField(e){return h.parquetchunk_hasField(this.__wbg_ptr,e)!==0}readX(e){return h.parquetchunk_readX(this.__wbg_ptr,e)}readY(e){return h.parquetchunk_readY(this.__wbg_ptr,e)}readAttributes(e){return U(h.parquetchunk_readAttributes(this.__wbg_ptr,e))}readAttribute(e,t){return U(h.parquetchunk_readAttribute(this.__wbg_ptr,e,t))}}const Nt=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(o=>h.__wbg_parquetfile_free(o>>>0,1));let Ls=class zs{static __wrap(e){e>>>=0;const t=Object.create(zs.prototype);return t.__wbg_ptr=e,Nt.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Nt.unregister(this),e}free(){const e=this.__destroy_into_raw();h.__wbg_parquetfile_free(e,0)}metadata(){const e=h.parquetfile_metadata(this.__wbg_ptr);return re.__wrap(e)}readChunksWithCallback(e,t){const s=Dt(e,h.__wbindgen_malloc),r=j;return U(h.parquetfile_readChunksWithCallback(this.__wbg_ptr,s,r,b(t)))}updateChunks(e){const t=Dt(e,h.__wbindgen_malloc),s=j;return U(h.parquetfile_updateChunks(this.__wbg_ptr,t,s))}};const Bt=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(o=>h.__wbg_rangeproviderjs_free(o>>>0,1));class de{static __wrap(e){e>>>=0;const t=Object.create(de.prototype);return t.__wbg_ptr=e,Bt.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Bt.unregister(this),e}free(){const e=this.__destroy_into_raw();h.__wbg_rangeproviderjs_free(e,0)}static new(e,t){const s=h.rangeproviderjs_new(b(e),b(t));return de.__wrap(s)}static withFetch(){const e=h.rangeproviderjs_withFetch();return de.__wrap(e)}}async function tn(o,e){if(typeof Response=="function"&&o instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(o,e)}catch(s){if(o.headers.get("Content-Type")=="application/wasm")throw s;console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",s)}const t=await o.arrayBuffer();return await WebAssembly.instantiate(t,e)}{const t=await WebAssembly.instantiate(o,e);return t instanceof WebAssembly.Instance?{instance:t,module:o}:t}}function Us(){const o={wbg:{}};return o.wbg.__wbg_new_abda76e883ba8a5f=function(){return b(new Error)},o.wbg.__wbg_stack_658279fe44541cf6=function(e,t){const s=ce(I(t).stack,h.__wbindgen_malloc,h.__wbindgen_realloc),r=j;ee().setInt32(e+4,r,!0),ee().setInt32(e+0,s,!0)},o.wbg.__wbg_error_f851667af71bcfc6=function(e,t){let s,r;try{s=e,r=t,console.error(H(e,t))}finally{h.__wbindgen_free(s,r,1)}},o.wbg.__wbindgen_object_drop_ref=function(e){U(e)},o.wbg.__wbindgen_is_function=function(e){return typeof I(e)=="function"},o.wbg.__wbg_self_3093d5d1f7bcb682=function(){return z(function(){return b(self.self)},arguments)},o.wbg.__wbg_window_3bcfc4d31bc012f8=function(){return z(function(){return b(window.window)},arguments)},o.wbg.__wbg_globalThis_86b222e13bdf32ed=function(){return z(function(){return b(globalThis.globalThis)},arguments)},o.wbg.__wbg_global_e5a3fe56f8be9485=function(){return z(function(){return b(global.global)},arguments)},o.wbg.__wbindgen_is_undefined=function(e){return I(e)===void 0},o.wbg.__wbg_newnoargs_76313bd6ff35d0f2=function(e,t){return b(new Function(H(e,t)))},o.wbg.__wbindgen_object_clone_ref=function(e){return b(I(e))},o.wbg.__wbindgen_number_new=function(e){return b(e)},o.wbg.__wbg_new_525245e2b9901204=function(){return b(new Object)},o.wbg.__wbindgen_string_new=function(e,t){return b(H(e,t))},o.wbg.__wbg_call_1084a111329e68ce=function(){return z(function(e,t){return b(I(e).call(I(t)))},arguments)},o.wbg.__wbg_call_89af060b4e1523f2=function(){return z(function(e,t,s){return b(I(e).call(I(t),I(s)))},arguments)},o.wbg.__wbg_call_7de908392845a9a5=function(){return z(function(e,t,s,r,i){return b(I(e).call(I(t),I(s),I(r),I(i)))},arguments)},o.wbg.__wbg_valueOf_563b3487b1b116aa=function(e){return I(e).valueOf()},o.wbg.__wbg_set_eacc7d73fefaafdf=function(){return z(function(e,t,s){return Reflect.set(I(e),I(t),I(s))},arguments)},o.wbg.__wbg_buffer_b7b08af79b0b0974=function(e){return b(I(e).buffer)},o.wbg.__wbg_new_b85e72ed1bfd57f9=function(e,t){try{var s={a:e,b:t},r=(i,n)=>{const a=s.a;s.a=0;try{return Ji(a,s.b,i,n)}finally{s.a=a}};return b(new Promise(r))}finally{s.a=s.b=0}},o.wbg.__wbg_resolve_570458cb99d56a43=function(e){return b(Promise.resolve(I(e)))},o.wbg.__wbg_then_95e6edc0f89b73b1=function(e,t){return b(I(e).then(I(t)))},o.wbg.__wbg_then_876bb3c633745cc6=function(e,t,s){return b(I(e).then(I(t),I(s)))},o.wbg.__wbg_new_ea1883e1e5e86686=function(e){return b(new Uint8Array(I(e)))},o.wbg.__wbg_length_8339fcf5d8ecd12e=function(e){return I(e).length},o.wbg.__wbg_set_d1e79e2388520f18=function(e,t,s){I(e).set(I(t),s>>>0)},o.wbg.__wbindgen_throw=function(e,t){throw new Error(H(e,t))},o.wbg.__wbindgen_memory=function(){return b(h.memory)},o.wbg.__wbg_queueMicrotask_48421b3cc9052b68=function(e){return b(I(e).queueMicrotask)},o.wbg.__wbindgen_cb_drop=function(e){const t=U(e).original;return t.cnt--==1?(t.a=0,!0):!1},o.wbg.__wbg_queueMicrotask_12a30234db4045d3=function(e){queueMicrotask(I(e))},o.wbg.__wbg_parquetchunk_new=function(e){return b(Re.__wrap(e))},o.wbg.__wbindgen_bigint_from_i64=function(e){return b(e)},o.wbg.__wbg_parquetfile_new=function(e){return b(Ls.__wrap(e))},o.wbg.__wbg_filemetadata_new=function(e){return b(re.__wrap(e))},o.wbg.__wbindgen_closure_wrapper1401=function(e,t,s){return b(Xi(e,t,74,Qi))},o}function Ws(o,e){return h=o.exports,Gs.__wbindgen_wasm_module=e,N=null,ae=null,ne=null,h}function sn(o){if(h!==void 0)return h;o!==void 0&&Object.getPrototypeOf(o)===Object.prototype?{module:o}=o:console.warn("using deprecated parameters for `initSync()`; pass a single object instead");const e=Us();return o instanceof WebAssembly.Module||(o=new WebAssembly.Module(o)),Ws(new WebAssembly.Instance(o,e),o)}async function Gs(o){if(h!==void 0)return h;o!==void 0&&Object.getPrototypeOf(o)===Object.prototype?{module_or_path:o}=o:console.warn("using deprecated parameters for the initialization function; pass a single object instead");const e=Us();(typeof o=="string"||typeof Request=="function"&&o instanceof Request||typeof URL=="function"&&o instanceof URL)&&(o=fetch(o));const{instance:t,module:s}=await tn(await o,e);return Ws(t,s)}const rn=Object.freeze(Object.defineProperty({__proto__:null,FieldMetadata:Oe,FileMetadata:re,GeometryInfoDescriptor:te,ParquetChunk:Re,ParquetFile:Ls,RangeProviderJs:de,default:Gs,enableTracing:Zi,initSync:sn,readFile:en,readMetadata:Ds},Symbol.toStringTag,{value:"Module"}));let We=null;async function Ns(){return We||(We=nn()),We}async function nn(){const o=await Promise.resolve().then(()=>rn);return await o.default({module_or_path:rr("esri/libs/parquet/pkg/arcgis_parquet_bg.wasm")}),o.enableTracing(),o}const Bs=o=>async function(e,t,s){const r=o(),{data:i}=await rt(e,{responseType:"array-buffer",query:r,headers:{range:`bytes=${t}-${s}`}});return i},Vs=o=>async function(e){const t=o(),{data:s}=await rt(e,{responseType:"native",method:"head",query:t}),r=s.headers.get("Content-Length");if(r==null)throw new Error("Unable to parse content length");return parseInt(r,10)};class Se{static async create(e,t){const s=await Ns(),r=await s.readMetadata(e,Bs(t),Vs(t));return Se.fromFileMetadata(r)}static fromFileMetadata(e){const t=[];for(let s=0;s<e.numFields();s++){const r=e.getFieldByIndex(s);t.push({name:r.name,type:r.type,alias:r.name,index:r.index}),r.free()}return new Se(e,t)}constructor(e,t){this._inner=e,this.fields=t}destroy(){this._inner.free()}[Symbol.dispose](){this.destroy()}get size(){return this._inner.numRows()}getFieldIndex(e){return this._inner.getFieldIndex(e)}tryReadGeoMetadata(){const e=this._inner.keyValueMetadata("geo");return e==null?null:JSON.parse(e)}}class gt{static async create(e,t){const s=await Ns(),r=Bs(t.getCustomParameters),i=Vs(t.getCustomParameters),n=await Ds(e,r,i),{geometryInfo:a}=t,d=te.new();a.type==="location"?(d.latIndex=n.getFieldIndex(a.latitudeFieldName),d.lngIndex=n.getFieldIndex(a.longitudeFieldName)):d.wkbIndex=n.getFieldIndex(a.primaryFieldName);const u=await s.readFile(e,r,i,n,d);return new gt(u,Se.fromFileMetadata(u.metadata()))}constructor(e,t){this.inner=e,this.metadata=t}destroy(){this.inner.free(),this.metadata.destroy()}[Symbol.dispose](){this.destroy()}}let Fe=class extends he{constructor(e,t,s,r){super(),this._reader=e,this._queryJSON=t,this._page=s,this._end=r,this.chunkId=`${this._page}${this.end?"e":""}`,this.normalizedChunkId=this.chunkId}get reader(){return this._reader}get first(){return this._page===0}get end(){return this._end}get queryInfo(){return{type:"snapshot",chunkId:this.chunkId,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}},an=class Ys extends Ce{constructor(e,t,s,r,i,n=new Uint32Array(r.size())){super(e),this._fields=t,this._geometryInfo=s,this._inner=r,this._chunkId=i,this._displayIds=n,this._index=-1,this._size=this._inner.size(),this._geometryInfo.type==="geometry"&&(this._primaryGeometryIndex=this._fields.get(this._geometryInfo.primaryFieldName)?.index),e.objectIdField!=null&&(this._objectIdFieldIndex=this._fields.get(e.objectIdField)?.index),this._chunkId>65535&&console.error("Exceeded max allowed parquet reader size")}destroy(){super.destroy(),this._inner.free()}get fields(){return this._fields}get geometryType(){return"esriGeometryPoint"}get hasFeatures(){return!0}get hasNext(){throw new Error("Method not implemented.")}get exceededTransferLimit(){return!1}get hasZ(){return!1}get hasM(){return!1}getInTransform(){return null}getSize(){return this._size}getCursor(){return this.copy()}getAttributeHash(){let e="";for(const t of this.fields.fields)e+=this._readAttribute(t.name,!1)+".";return e}getObjectId(){return this._objectIdFieldIndex!=null?this._inner.readAttribute(this._index,this._objectIdFieldIndex):this._index<<16|this._chunkId}getDisplayId(){return this._displayIds[this._index]}setDisplayId(e){this._displayIds[this._index]=e}setIndex(e){this._index=e}getIndex(){return this._index}next(){for(;++this._index<this._size&&!this._getExists(););return this._index<this._size}readGeometryArea(){throw new Error("Method not implemented.")}copy(){const e=new Ys(this.metadata,this._fields,this._geometryInfo,this._inner,this._chunkId,this._displayIds);return this.copyInto(e),e}copyInto(e){super.copyInto(e),e._index=this._index}_readGeometry(e){const t=ir(this._inner.readX(this._index),this._inner.readY(this._index));return new M([],t)}_readX(){return this._readGeometry()?.coords[0]}_readY(){return this._readGeometry()?.coords[1]}_readServerCentroid(){return null}_readAttribute(e,t){const s=this.fields.get(e);if(!s)return;const r=this._inner.readAttribute(this._index,s.index);if(r==null)return r;const i=this.fields.isDateField(s.name);return t?r==null?r:i?new Date(r):r:r}_readAttributes(){const e={};for(const t of this._fields.fields)this._inner.hasField(t.index)&&t.index!==this._primaryGeometryIndex&&(e[t.name]=this._readAttribute(t.name,!1));return this._objectIdFieldIndex==null&&(e.__OBJECTID=this.getObjectId()),e}};class on extends pt{constructor(e,t,s,r){super(r),this._service=e,this._metadata=t,this._schema=s,this._chunkId=0,this._files=[],this._availableFields=new Set(s.mutable.availableFields);const{geometryInfo:i}=this._service;i.type==="location"?(this._availableFields.add(i.latitudeFieldName),this._availableFields.add(i.longitudeFieldName)):this._availableFields.add(i.primaryFieldName)}destroy(){for(const e of this._files)e.destroy()}get about(){return{willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}async updateFields(e){await this._promise;const t=new Set(e),s=nr(t,this._availableFields);this._availableFields=ar(s,this._availableFields),await Promise.all(this._files.map(r=>{const i=Array.from(s).map(n=>r.metadata.getFieldIndex(n));return r.inner.updateChunks(new Uint16Array(i))}))}async load(e){return this._promise==null&&(this._promise=this._download()),this._promise}unload(e){}async addParquetFile(e){this._insert(e)}async _insert(e){const t=await gt.create(e,{geometryInfo:this._service.geometryInfo,outSpatialReference:this._service.outSpatialReference,getCustomParameters:()=>this._schema.mutable.dataFilter.customParameters}),{geometryInfo:s}=this._service;K(this._options);const{fields:r,timeZoneByFieldName:i}=this._service.metadata.fieldsIndex,n=r.map(u=>({...u,index:t.metadata.getFieldIndex(u.name)})),a=le.fromJSON({fields:n,timeZoneByFieldName:i}),d=new Uint16Array(Array.from(this._availableFields.values()).map(u=>a.get(u)?.index));await t.inner.readChunksWithCallback(d,u=>{const l=this._chunkId++,c=new an(this._metadata,a,s,u,l),_=new Fe(c,null,l,!1);this._store.insert(_)}),this._files.push(t)}async _download(){try{await Promise.all(this._service.source.urls.map(t=>this._insert(t)));const e=new Fe(q.empty(this._metadata),null,-1,!0);this._store.insert(e)}catch(e){throw console.error(e),e}}}class dn extends As{constructor(e,t,s,r,i,n){super(e,t,s,i,n),this._random=new Ht(1e3),this._featureCount=r}get about(){return{willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}load(e){return this._promise==null&&(this._promise=this._downloadPages(this._featureCount)),this._promise}unload(e){}async _downloadPages(e){const t=Math.ceil(e/this._queryInfo.pageSize),s=Array.from({length:t},(a,d)=>d).sort((a,d)=>this._random.getInt()-this._random.getInt()),r=await Promise.all(s.map(a=>this._downloadPage(a))),i=new Fe(q.empty(this._metadata),null,-1,!0);this._store.insert(i);const n=r.filter(a=>a);if(n.length)throw new B("featurelayer-query","Encountered errors when downloading data",{errors:n})}async _downloadPage(e){try{const t=this._queryInfo.createPagedQuery(e),s=await this._fetch(t,this._options),r=new Fe(s,t.inner.toJSON(),e,!1);return K(this._options),this._store.insert(r),null}catch(t){return t}}}const un="__esri_stream_id__",Vt="__esri_timestamp__",Yt=1e3;class cn{constructor(e,t,s,r,i=128){this._trackIdToObservations=new Map,this._idCounter=0,this._lastPurge=performance.now(),this._addOrUpdated=new Map,this._removed=[],this._maxAge=0,this._timeInfo=s,this._purgeOptions=r,this.store=e,this.objectIdField=t,this.purgeInterval=i,this._useGeneratedIds=this.objectIdField===un}removeById(e){this._removed.push(e)}removeByTrackId(e){const t=this._trackIdToObservations.get(e);if(t)for(const s of t.entries)this._removed.push(s)}add(e){if(this._useGeneratedIds){const n=this._nextId();e.attributes[this.objectIdField]=n,e.objectId=n}else e.objectId=e.attributes[this.objectIdField];const t=e.objectId;if(this._addOrUpdated.set(t,e),this._maxAge=Math.max(this._maxAge,e.attributes[this._timeInfo.startTimeField]),!this._timeInfo.trackIdField)return this._trackIdLessObservations==null&&(this._trackIdLessObservations=new xt(1e5)),void this._trackIdLessObservations.enqueue(t);const s=e.attributes[this._timeInfo.trackIdField];if(!this._trackIdToObservations.has(s)){const n=this._purgeOptions?.maxObservations!=null?this._purgeOptions.maxObservations:Yt,a=or(n,0,Yt);this._trackIdToObservations.set(s,new xt(a))}const r=this._trackIdToObservations.get(s),i=r?.enqueue(t);i!=null&&(this._addOrUpdated.has(i)?this._addOrUpdated.delete(i):this._removed.push(i))}checkForUpdates(){const e=this._getToAdd(),t=this._getToRemove(),s=performance.now();s-this._lastPurge>=this.purgeInterval&&(this._purge(s),this._lastPurge=s);const r=[];if(t!=null)for(const n of t){const a=this.store.removeById(n);a!=null&&r.push(a)}const i=[];if(e!=null){const n=new Set(t??[]);for(const a of e)n.has(a.objectId)||(a.attributes[Vt]=s,this.store.add(a),i.push(a))}return!(!i.length&&!r?.length)&&(this.store.update(i,r),!0)}_getToAdd(){if(!this._addOrUpdated.size)return null;const e=new Array(this._addOrUpdated.size);let t=0;return this._addOrUpdated.forEach(s=>e[t++]=s),this._addOrUpdated.clear(),e}_getToRemove(){const e=this._removed;return this._removed.length?(this._removed=[],e):null}_nextId(){const e=this._idCounter;return this._idCounter=(this._idCounter+1)%4294967294+1,e}_purge(e){const t=this._purgeOptions;t!=null&&(this._purgeSomeByDisplayCount(t),this._purgeByAge(t),this._purgeByAgeReceived(e,t),this._purgeTracks())}_purgeSomeByDisplayCount(e){if(!e.displayCount)return;let t=this.store.size;if(t>e.displayCount){if(this._timeInfo.trackIdField){for(const s of this._trackIdToObservations.values())if(t>e.displayCount&&s.size){const r=s.dequeue();this._removed.push(r),t--}}if(this._trackIdLessObservations!=null){let s=t-e.displayCount;for(;s-- >0;){const r=this._trackIdLessObservations.dequeue();r!=null&&this._removed.push(r)}}}}_purgeByAge(e){const t=this._timeInfo?.startTimeField;if(!e.age||!t)return;const s=60*e.age*1e3,r=this._maxAge-s;this.store.forEach(i=>{i.attributes[t]<r&&this._removed.push(i.objectId)})}_purgeByAgeReceived(e,t){if(!t.ageReceived)return;const s=e-60*t.ageReceived*1e3;this.store.forEach(r=>{r.attributes[Vt]<s&&this._removed.push(r.objectId)})}_purgeTracks(){this._trackIdToObservations.forEach((e,t)=>{e.size===0&&this._trackIdToObservations.delete(t)})}}let X=class extends Zt{constructor(o){super(o)}get connectionStatus(){return this.connection?.connectionStatus}get errorString(){return this.connection?.errorString}};Q([ye()],X.prototype,"connection",void 0),Q([ye()],X.prototype,"connectionStatus",null),Q([ye()],X.prototype,"errorString",null),X=Q([Qt("esri.views.2d.layers.features.sources.StreamConnectionState")],X);let ln=class{constructor(e,t){this._metadata=e,this._onUpdate=t,this._objectIdToFeature=new Map}get size(){return this._objectIdToFeature.size}get reader(){return q.fromFeatures([...this._objectIdToFeature.values()],this._metadata)}add(e){this._objectIdToFeature.set(e.objectId,e)}forEach(e){this._objectIdToFeature.forEach(e)}removeById(e){const t=this._objectIdToFeature.get(e);return t?(this._objectIdToFeature.delete(e),t):null}clear(){this._objectIdToFeature=new Map}update(e,t){this._onUpdate(e?.length??0)}};class hn extends he{constructor(e){super(),this._reader=e,this.chunkId="stream-chunk",this.normalizedChunkId="stream-chunk"}get reader(){return this._reader}get first(){return!0}get end(){return!0}get queryInfo(){return{type:"stream",chunkId:this.chunkId,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}}class _n extends pt{constructor(e,t,s,r,i){super(s),this._service=e,this._dataFilter=t,this._streamOptions=r,this._metadata=i,this._connectionState=new X,this._forceRefresh=!1,this.events=new et;const{objectIdField:n,timeInfo:a}=this._metadata,{purgeOptions:d}=t;this._stagingStore=new ln(this._metadata,u=>this.events.emit("features-updated",u)),this._manager=new cn(this._stagingStore,n,a,d),this.connect()}destroy(){super.destroy(),this.disconnect()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}get connectionStatus(){return this._connectionState.connectionStatus}get errorString(){return this._connectionState?.errorString}async refresh(){const e=this._chunk!=null;this._manager.checkForUpdates()||!e||this._forceRefresh?(this._chunk&&this._store.remove(this._chunk),this._forceRefresh=!1,this._chunk=new hn(this._stagingStore.reader),this._store.insert(this._chunk),this.events.emit("tick")):this.events.emit("tick")}async updateFields(e){throw new Error("Updating available fields not supported for StreamLayer")}async load(e){}unload(e){}disconnect(){this._connection=Xt(this._connection),this._connectionState.connection=null,this._handlesGroup?.remove()}connect(){if(this._connection!=null)return;const{geometryType:e,spatialReference:t}=this._metadata,{maxReconnectionAttempts:s,maxReconnectionInterval:r,geometryDefinition:i,definitionExpression:n,customParameters:a}=this._dataFilter;this._connection=zr(this._service.source,t,this._streamOptions.outSR,e,n,i,s,r,a),this._handlesGroup=ke([this._connection.on("data-received",d=>this._onFeature(d)),this._connection.on("message-received",d=>this._onWebSocketMessage(d))]),this._connectionState.connection=this._connection}clear(){this._manager.checkForUpdates(),this._stagingStore.clear(),this._forceRefresh=!0}updateCustomParameters(e){this._connection?.updateCustomParameters(e)}sendMessageToSocket(e){this._connection?.sendMessageToSocket(e)}sendMessageToClient(e){this._connection?.sendMessageToClient(e)}_onWebSocketMessage(e){if("type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this._manager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this._manager.removeByTrackId(t);break;case"clear":this.clear()}this.events.emit("message-received",e)}_onFeature(e){try{this._manager.add(e),this.events.emit("data-received",e)}catch{}}}class pn{constructor(e){this._onChange=e,this._chunks=new Map,this._chunksToRemove=[],this.events=new et,this.featureAdapter=new wr}destroy(){this.clear()}clear(){for(const e of this._chunks.values())this._chunksToRemove.push(e);this._chunks.clear(),this._localEditChunk!=null&&this._chunksToRemove.push(this._localEditChunk),this._localEditChunk=null}*chunks(){this._localEditChunk&&(yield this._localEditChunk),this._localOverridesChunk&&(yield this._localOverridesChunk),yield*this._chunks.values()}dataChunks(){return this._chunks.values()}insert(e){w("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.insert`),this._localOverridesChunk?.overriddenIds.size&&(e.reader.removeIds(this._localOverridesChunk.overriddenIds),e.invalidate()),this._localEditChunk?.overriddenIds.size&&this._localEditChunk.removeOverrides(e),this._chunks.set(e.chunkId,e),this.events.emit("changed"),this._onChange()}remove(e){w("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.remove`),this._chunks.delete(e.chunkId),this._chunksToRemove.push(e)}cleanupRemovedChunks(){const e=this._chunksToRemove;return this._chunksToRemove=[],e}applyLocalOverrides(e,t){this._localOverridesChunk==null&&(this._localOverridesChunk=new Je(t,"localOverride")),this._localOverridesChunk.applyOverrides(e);for(const s of this._chunks.values())s.reader.removeIds(this._localOverridesChunk.overriddenIds),s.invalidate();this.events.emit("changed")}applyLocalEdit(e,t){this._localEditChunk==null&&(this._localEditChunk=new Je(t,"localEdit")),this._localEditChunk.applyOverrides(e);for(const s of this._chunks.values())s.reader.removeIds(this._localEditChunk.overriddenIds),s.invalidate();this.events.emit("changed")}forEach(e){const t=new Set;for(const s of this.chunks()){const r=s.reader.getCursor();for(;r.next();){const i=r.getObjectId();t.has(i)||(e(r.copy()),t.add(i))}}}forEachUnsafe(e){const t=new Set;for(const s of this.chunks()){const r=s.reader.getCursor();for(;r.next();){const i=r.getObjectId();t.has(i)||(e(r),t.add(i))}}}forEachInBounds(e,t){const s=new Set;for(const r of this.chunks()){const i=r.queryFeaturesInBounds(e);for(;i.next();){const n=i.getObjectId();s.has(n)||(t(i.copy()),s.add(n))}}}forEachBounds(e,t){const s=tt();for(const r of e)r.getBounds(s)&&t(s)}}class gn{constructor(e,t,s,r,i){this.service=e,this._aggregateAdapter=t,this._subscriptions=s,this._onChange=r,this._connection=i,this._updateTracking=new Ur({debugName:"FeatureSource"}),this._didInvalidateData=!1,this._store=new pn(this._onChange),this._metadata=ot.createFeature(e.metadata)}destroy(){this._strategy?.destroy(),this._store.destroy(),this._streamMessenger?.destroy(),this.service.type==="memory"&&this.service.source.map(e=>e.close())}get metadata(){if(!this._metadata)throw new Error("InternalError: Metadata not defined. Was update called?");return this._metadata}get store(){return this._store}get streamMessenger(){return this._streamMessenger==null&&this._initStreamMessenger(),this._streamMessenger}get statistics(){return Fi.from(this._store)}get updateTracking(){return this._updateTracking}get queryEngine(){if(!this._queryEngine){if(!this._schema)return null;const{dataFilter:e}=this._schema.mutable,t=this._schema.mutable.availableFields,s=this._metadata;this._queryEngine=new as({featureStore:this._store,fieldsIndex:s.fieldsIndex,geometryType:s.geometryType,objectIdField:s.objectIdField,hasM:!1,hasZ:!1,spatialReference:this.service.outSpatialReference,aggregateAdapter:this._aggregateAdapter,timeInfo:s.timeInfo,definitionExpression:e.definitionExpression,availableFields:t})}return this._queryEngine}get isStream(){return this._schema.type==="stream"}chunks(){return Array.from(this._store.chunks())}cleanupRemovedChunks(){return this._store.cleanupRemovedChunks()}onSubscribe(e){this._connection.onEvent({type:"subscribe",tile:e.tile.id});const t=this._strategy?.load(e);t&&(t.then(()=>this._connection.onEvent({type:"loaded",tile:e.tile.id})).catch(s=>this._connection.onEvent({type:"error",tile:e.tile.id,error:s})),this._updateTracking.addPromise(t))}onResume(e){this._updateTracking.addPromise(Jt(this._strategy?.load(e)))}onUnsubscribe(e){this._connection.onEvent({type:"unsubscribe",tile:e.tile.id}),this._strategy?.unload(e)}getLocalEdit(e){return this._updateTracking.addPromise(this._getGetLocalEdit(e))}applyLocalEdit(e){this._didInvalidateData=!0,this._store.applyLocalEdit(e,this.metadata)}async update(e,t){const s=e.source,r=Kt(this._schema?.mutable,s.mutable);if(!r)return!1;if(w("esri-2d-update-debug")&&console.debug(`Version[${t}] FeatureSource.update`,{changes:r}),this._schema=s,this._queryEngine?.destroy(),this._queryEngine=null,this.service.type==="feature-service"&&this.service.queryMetadata.lastEditDate!=null&&(this._lastEditDate=this.service.queryMetadata.lastEditDate),this._streamMessenger==null&&this._schema.type==="stream"&&this._initStreamMessenger(),mt(r,"sourceRefreshVersion")&&this._strategy?.refresh)return await this._strategy.refresh(),!0;if((s.type==="feature"||s.type==="parquet")&&mt(r,"availableFields")){if(await this._queryLastEditDateChanged()||this._didInvalidateData)this._didInvalidateData=!1,await this._updateStrategy(t);else{this._connection.onEvent({type:"updateFieldsStart"});try{await this._strategy.updateFields(s.mutable.availableFields),this._connection.onEvent({type:"updateFieldsEnd"})}catch(i){this._connection.onEvent({type:"updateFieldsError",error:i})}}return!1}return!(!bt(r,"dataFilter")&&!bt(r,"sourceRefreshVersion"))&&(await this._updateStrategy(t),!0)}async addParquetFile(e){this._strategy.addParquetFile(e)}_initStreamMessenger(){this._streamMessenger==null&&(this._streamMessenger=new be(this._connection))}async _getGetLocalEdit(e){if(e.historicMoment&&this._schema.type==="feature"&&(this._schema.mutable.dataFilter.historicMoment=e.historicMoment,this._strategy.unsafeSetQueryHistoricMoment(new Date(e.historicMoment))),e.type==="edit-by-feature"){const r=[...e.added,...e.updated].map(i=>Z.fromJSON(i,this.metadata.objectIdField));return{reader:q.fromOptimizedFeatures(r,this.metadata),removed:this._resolveIdentifiers(e.removed)}}const t=this._resolveIdentifiers(e.removed);if(!e.updated.length&&!e.added.length)return{reader:q.empty(this.metadata),removed:t};const s=this._resolveIdentifiers([...e.added,...e.updated]);return{reader:await this._strategy.queryByObjectId(s),removed:t}}_resolveIdentifiers(e){const t=[],s=[];for(const r of e)r.objectId!=null&&r.objectId!==-1?s.push(r.objectId):t.push(r.globalId);if(t.length){const r=new Set(t),i=this.metadata.globalIdField;if(i==null)throw new Error("InternalError: Recieved an edit with globalIds, but not supported by the service");this._store.forEachUnsafe(n=>{const a=n.readAttribute(i);r.has(a)&&s.push(n.getObjectId())})}return s}async _queryLastEditDateChanged(){if(this._lastEditDate==null)return!1;const e=this.service.source,t={...e.query,f:"json"},s=(await rt(e.path,{query:t,responseType:"json"})).data.editingInfo.lastEditDate;return s!==this._lastEditDate&&(this._lastEditDate=s,!0)}async _createStrategy(){const e="isSourceHosted"in this.service&&this.service.isSourceHosted,t=Array.isArray(this.service.source),s=this.service.source&&"collection"in this.service.source,r=e||t||s;if(this._schema.type==="stream"){const d=new _n(this.service,this._schema.mutable.dataFilter,this._store,{outSR:this.service.outSpatialReference},this.metadata);return this._streamMessenger.strategy=d,d}if(this._schema.type==="parquet"){const d=this.service;return new on(d,this._metadata,this._schema,this._store)}const i=this.service,n=Ci.fromSchema(i,this._schema,this._metadata),a=await this._supportSnapshotMode(i,n);return a?new dn(i,n,this._store,a.featureCount,this.metadata,this._connection):r?new Vi(i,n,this._store,this.metadata,this._connection):new Ni(i,n,this._store,this.metadata,this._connection)}async _updateStrategy(e){const t=await this._createStrategy();this._connection.onEvent({type:"updateStrategyStart",about:t.about});const s=!!this._strategy;this._store.clear(),this._strategy?.destroy(),this._strategy=t,w("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategy`,{strategy:t});const r=Array.from(this._subscriptions.values());if(!r.length)return void this._connection.onEvent({type:"updateStrategyEnd"});const i=Promise.all(r.map(n=>this._strategy.load(n).then(()=>this._connection.onEvent({type:"loaded",tile:n.tile.id})).catch(a=>this._connection.onEvent({type:"error",tile:n.tile.id,error:a}))));this._updateTracking.addPromise(i);try{s&&await i}catch(n){st(n)}this._connection.onEvent({type:"updateStrategyEnd"}),w("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategyEnd`,{strategy:t})}async _supportSnapshotMode(e,t){const{queryMetadata:s}=e,r=s.snapshotInfo;if(!r||!r.supportsSnapshotMinThreshold||!r.snapshotCountThresholds)return null;const i=e.source,n=t.createQuery();n.inner.orderByFields=[],n.inner.returnGeometry=!1;const a=(await Rr(i,n.inner,{query:n.customParameters})).data.count,{min:d,max:u}=r.snapshotCountThresholds;return a<=d||r.supportsSnapshotMaxThreshold&&a<u?{featureCount:a}:null}}class fn{constructor(e,t){this.tile=e,this.version=t,this._abortController=new AbortController}get key(){return this.tile.key}get signal(){return this._abortController.signal}abort(){this._abortController.abort()}}class fe{constructor(e){this.inner=e,this.resolver=cr()}}class No{constructor(){this._aggregateAdapter={getFeatureObjectIds:e=>this._processor.getFeatureObjectIdsForAggregate(e)},this._subscriptions=new Map,this._updateRequested=!1,this._updateSubscriptionRequests=[],this._updateHighlightRequests=[]}destroy(){this._subscriptions.clear(),this._processor?.destroy(),this._source?.destroy(),this._handles?.remove(),this._updateLocalEditsRequest=null,this._tileInfoView=null}onAttach(e){w("esri-2d-update-debug")&&console.debug("Pipeline.onAttach");const t=this._connection,s=hr.fromJSON(e.tileInfoJSON);this._tileInfoView=new pr(s),this._source=new gn(e.service,this._aggregateAdapter,this._subscriptions,()=>this._requestUpdate(),t),this._processor=new Si(t,this._source),this._handles=ke([Ge(()=>this._source.updateTracking.updating,()=>{this._requestUpdate(),Jt(this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0}))})])}onDetach(){w("esri-2d-update-debug")&&console.debug("Pipeline.onDetach"),this.destroy()}set remoteClient(e){this._connection=new Wr(e)}get features(){const e=this._source?.queryEngine;if(!e)throw new B("no-queryEngine","No query engine defined");return e}get aggregates(){const e=this._processor?.aggregateQueryEngine;if(!e)throw new B("no-queryEngine","No aggregate query engine defined");return e}get processor(){return this._processor}get streamMessenger(){return this._source.streamMessenger}getDisplayFeatures(e){return this._processor.getDisplayFeatures(e)}getDisplayIds(e){return this._processor.getDisplayIds(e)}async updateSchema(e,t){return w("esri-2d-update-debug")&&this._updateSchemaRequest&&console.error("InternalError: Schema already updating"),this._updateSchemaRequest=new fe({schema:e,version:t}),this._requestUpdate(),this._updateSchemaRequest.resolver.promise}updateSubscriptions(e){const t=new fe(e);return this._updateSubscriptionRequests.push(t),this._requestUpdate(),t.resolver.promise}updateHighlight(e){const t=new fe(e);return this._updateHighlightRequests.push(t),this._requestUpdate(),t.resolver.promise}async addParquetFile(e){return this._source.addParquetFile(e)}async onEdits(e){if(this._updateLocalEditsRequest!=null)throw new B("InternalError - Already processing an edit");this._updateLocalEditsRequest=new fe(e);const t=this._updateLocalEditsRequest.resolver.promise;return this._requestUpdate(),t}queryStatistics(){return this._source.statistics.toJSON()}async queryVisibleFeatures(e,t){return this.features.executeQuery(e,t)}async queryHeatmapStatistics(e){const t=Math.round(dr(e.radius));let s=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY;const i=typeof e.fieldOffset=="string",n=e.fieldOffset??0,a=Array.from(this._subscriptions.values()),d=this._source.chunks(),u=t**2,l=3/(Math.PI*u),c=2*t,_=Math.ceil(T/c);for(const g of a){const p=g.tile,y=new Float64Array(_*_);for(const f of d){const m=f.getTileReader(p);if(!m)continue;const v=m.getCursor();for(;v.next();){let x=1;if(e.field!=null){const P=v.readAttribute(e.field);x=i?-1*+P:+P+n}const C=v.readXForDisplay()/c,E=v.readYForDisplay()/c,F=Math.floor(C),k=Math.floor(E);if(F<0||k<0||F>=_||k>=_)continue;const S=((.5+F-C)*c)**2+((.5+k-E)*c)**2;if(S>u)continue;const $=x*(l*(1-S/u)**2);y[k+F*_]+=$}}for(let f=0;f<y.length;f++)s=Math.min(s,y[f]),r=Math.max(r,y[f])}return{max:r,min:s}}async getSampleFeatures(e){const t=this._source.chunks();if(t.reduce((d,u)=>d+u.size(),0)<=e.minFeatureCount){if(!this._source.updateTracking.updating){const d=[];return this._source.store.forEachUnsafe(u=>d.push(u.readLegacyFeatureWorldSpace())),d}return null}const s=new Set,r=[],i=t.map(d=>d.reader.getCursor()),n=new Ht,a=3*e.sampleSize;for(let d=0;d<a&&r.length<e.sampleSize;d++){const u=i[n.getIntRange(0,t.length-1)];if(u.getSize()===0)continue;const l=n.getIntRange(0,u.getSize()-1);u.setIndex(l);const c=u.getObjectId();s.has(c)||(s.add(c),r.push(u.readLegacyFeatureWorldSpace()))}return r.length>=e.sampleSize?r:null}_requestUpdate(){this._updateRequested||(this._updateRequested=!0,ur(()=>this._scheduleNextUpdate()))}_scheduleNextUpdate(){this._updateRequested&&(this._ongoingUpdate||(this._ongoingUpdate=it(this._doUpdate()).finally(()=>{this._ongoingUpdate=null,this._scheduleNextUpdate()}),this._updateRequested=!1))}_subscribe(e){const t=e.tileId;if(this._subscriptions.has(t))return;w("esri-2d-update-debug")&&console.debug(`Tile[${t}] Pipeline.subscribe`);const s=new gr(this._tileInfoView,t),r=new fn(s,e.version);this._subscriptions.set(t,r),this._source.onSubscribe(r),this._processor.onSubscribe(r)}_unsubscribe(e){const t=this._subscriptions.get(e);t&&(w("esri-2d-update-debug")&&console.debug(`Tile[${e}] Pipeline.unsubscribe`),t.abort(),this._source.onUnsubscribe(t),this._processor.onUnsubscribe(t),this._subscriptions.delete(t.key.id))}async _doUpdate(){if(w("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateStart"),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0}),this._updateSubscriptionRequests.length){const r=this._updateSubscriptionRequests;this._updateSubscriptionRequests=[];for(const i of r)this._doUpdateSubscriptions(i.inner),i.resolver.resolve()}const e=this._updateSchemaRequest;if(this._updateSchemaRequest=null,e!=null){const{schema:r,version:i}=e.inner;await this._doUpdateSchema(r,i)}const t=this._updateLocalEditsRequest;if(this._updateLocalEditsRequest=null,t!=null){w("esri-2d-update-debug")&&console.debug("Pipeline.applyEditOverride",t.inner);const r=await this._source.getLocalEdit(t.inner);await this._processor.applyLocalEdit(r),this._source.applyLocalEdit(r),w("esri-2d-update-debug")&&console.debug("Pipeline.endEditOverride",t.inner)}if(this._updateHighlightRequests.length){const r=this._updateHighlightRequests;this._updateHighlightRequests=[];for(const i of r)this._processor.updateHighlight(i.inner),i.resolver.resolve()}const s=this._source.cleanupRemovedChunks();this._processor.removeChunks(s);try{this._subscriptions.size&&(w("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksStart"),await this._processor.updateChunks(),w("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksEnd"))}catch(r){st(r)}t?.resolver.resolve(),e?.resolver.resolve(),this._updateRequested?(w("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=true]"),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0})):(w("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=false, After flush]"),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:this._updateRequested}))}async _doUpdateSchema(e,t){w("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateStart`,{schema:e});const s={tileInfo:this._tileInfoView?.tileInfo},r=await this._source.update(e,t),i=Array.from(this._subscriptions.values());await this._processor.update(e,t,s,r,i),w("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateEnd`)}_doUpdateSubscriptions(e){w("esri-2d-update-debug")&&console.debug("Pipeline.updateSubscriptions",e);for(const t of e.subscribe)this._subscribe(t);for(const t of e.unsubscribe)this._unsubscribe(t)}}export{No as default};
