function i(f,a,l,c){const e=3*f,p=3*(l-f)-e,x=1-e-p,h=3*a,I=3*(c-a)-h,O=1-h-I;function N(t){return((x*t+p)*t+e)*t}function g(t){return((O*t+I)*t+h)*t}function k(t){return(3*x*t+2*p)*t+e}function y(t,b){let u,o,n,s,m,M;for(n=t,M=0;M<8;M++){if(s=N(n)-t,Math.abs(s)<b)return n;if(m=k(n),Math.abs(m)<1e-6)break;n-=s/m}if(u=0,o=1,n=t,n<u)return u;if(n>o)return o;for(;u<o;){if(s=N(n),Math.abs(s-t)<b)return n;t>s?u=n:o=n,n=.5*(o-u)+u}return n}return function(t,b=1e-6){return g(y(t,b))}}const z=/^cubic-bezier\((.*)\)/,r={};function F(f){let a=r[f]||null;if(!a){const l=z.exec(f);if(l){const c=l[1].split(",").map(e=>parseFloat(e.trim()));c.length!==4||c.some(e=>isNaN(e))||(a=i.apply(i,c))}}return a}r.ease=i(.25,.1,.25,1),r.linear=i(0,0,1,1),r.easeIn=r["ease-in"]=i(.42,0,1,1),r.easeOut=r["ease-out"]=i(0,0,.58,1),r.easeInOut=r["ease-in-out"]=i(.42,0,.58,1);export{i as e,F as r,r as t};
