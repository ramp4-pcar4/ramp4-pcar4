{"version":3,"file":"p2-screen-1-4xOyLlFC.js","sources":["../../src/fixtures/gazebo/p2-screen-1.vue"],"sourcesContent":["<template>\n    <panel-screen :panel=\"panel\">\n        <template #header> Gazebo/Panel 2/Screen A </template>\n\n        <template #content>\n            {{ t('gz.hello') }}\n\n            <div class=\"flex flex-row justify-center items-center mt-16\">\n                <!-- âœ” this is the correct way to switch between screens in the same panel ðŸ‘‡ -->\n                <button\n                    type=\"button\"\n                    @click=\"\n                        panel.show({\n                            screen: 'p-2-screen-2',\n                            props: { greeting: 'Howdy?' }\n                        })\n                    \"\n                    class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-8 px-16 m-2\"\n                >\n                    Go back to B\n                </button>\n\n                <button\n                    type=\"button\"\n                    @click=\"panel.show('p-2-screen-3')\"\n                    class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-8 px-16 m-2\"\n                >\n                    Go to C\n                </button>\n            </div>\n\n            <p class=\"mt-16\">{{ greeting }}</p>\n        </template>\n    </panel-screen>\n</template>\n\n<script setup lang=\"ts\">\nimport type { PropType } from 'vue';\nimport type { PanelInstance } from '@/api';\nimport { useI18n } from 'vue-i18n';\n\nconst { t } = useI18n();\n\ndefineProps({\n    panel: { type: Object as PropType<PanelInstance>, required: true },\n    greeting: { type: String }\n});\n</script>\n\n<style lang=\"scss\" scoped></style>\n"],"names":["t","useI18n"],"mappings":";;;;;;;;AAyCM,UAAA,EAAE,GAAAA,MAAMC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}