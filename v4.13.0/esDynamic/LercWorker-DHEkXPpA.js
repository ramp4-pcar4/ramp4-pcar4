import{cY as P}from"./main-BFDurRCu.js";var M={};M.defaultNoDataValue=P(-1/0),M.decode=function(n,i){var r=(i=i||{}).encodedMaskData||i.encodedMaskData===null,e=E(n,i.inputOffset||0,r),d=i.noDataValue!=null?P(i.noDataValue):M.defaultNoDataValue,t=Y(e,i.pixelType||Float32Array,i.encodedMaskData,d,i.returnMask),l={width:e.width,height:e.height,pixelData:t.resultPixels,minValue:e.pixels.minValue,maxValue:e.pixels.maxValue,noDataValue:d};return t.resultMask&&(l.maskData=t.resultMask),i.returnEncodedMask&&e.mask&&(l.encodedMaskData=e.mask.bitset?e.mask.bitset:null),i.returnFileInfo&&(l.fileInfo=F(e,d),i.computeUsedBitDepths&&(l.fileInfo.bitDepths=X(e))),l};var Y=function(n,i,r,e,d){var t,l,c=0,u=n.pixels.numBlocksX,x=n.pixels.numBlocksY,y=Math.floor(n.width/u),v=Math.floor(n.height/x),p=2*n.maxZError;r=r||(n.mask?n.mask.bitset:null),t=new i(n.width*n.height),d&&r&&(l=new Uint8Array(n.width*n.height));for(var g,h,k=new Float32Array(y*v),b=0;b<=x;b++){var B=b!==x?v:n.height%x;if(B!==0)for(var D=0;D<=u;D++){var o=D!==u?y:n.width%u;if(o!==0){var U,a,f,w,s=b*n.width*v+D*y,V=n.width-o,m=n.pixels.blocks[c];if(m.encoding<2?(m.encoding===0?U=m.rawData:(S(m.stuffedData,m.bitsPerPixel,m.numValidPixels,m.offset,p,k,n.pixels.maxValue),U=k),a=0):f=m.encoding===2?0:m.offset,r)for(h=0;h<B;h++){for(7&s&&(w=r[s>>3],w<<=7&s),g=0;g<o;g++)7&s||(w=r[s>>3]),128&w?(l&&(l[s]=1),t[s++]=m.encoding<2?U[a++]:f):(l&&(l[s]=0),t[s++]=e),w<<=1;s+=V}else if(m.encoding<2)for(h=0;h<B;h++){for(g=0;g<o;g++)t[s++]=U[a++];s+=V}else for(h=0;h<B;h++)if(t.fill)t.fill(f,s,s+o),s+=o+V;else{for(g=0;g<o;g++)t[s++]=f;s+=V}if(m.encoding===1&&a!==m.numValidPixels)throw"Block and Mask do not match";c++}}}return{resultPixels:t,resultMask:l}},F=function(n,i){return{fileIdentifierString:n.fileIdentifierString,fileVersion:n.fileVersion,imageType:n.imageType,height:n.height,width:n.width,maxZError:n.maxZError,eofOffset:n.eofOffset,mask:n.mask?{numBlocksX:n.mask.numBlocksX,numBlocksY:n.mask.numBlocksY,numBytes:n.mask.numBytes,maxValue:n.mask.maxValue}:null,pixels:{numBlocksX:n.pixels.numBlocksX,numBlocksY:n.pixels.numBlocksY,numBytes:n.pixels.numBytes,maxValue:n.pixels.maxValue,minValue:n.pixels.minValue,noDataValue:i}}},X=function(n){for(var i=n.pixels.numBlocksX*n.pixels.numBlocksY,r={},e=0;e<i;e++){var d=n.pixels.blocks[e];d.encoding===0?r.float32=!0:d.encoding===1?r[d.bitsPerPixel]=!0:r[0]=!0}return Object.keys(r)},E=function(n,i,r){var e={},d=new Uint8Array(n,i,10);if(e.fileIdentifierString=String.fromCharCode.apply(null,d),e.fileIdentifierString.trim()!="CntZImage")throw"Unexpected file identifier string: "+e.fileIdentifierString;i+=10;var t=new DataView(n,i,24);if(e.fileVersion=t.getInt32(0,!0),e.imageType=t.getInt32(4,!0),e.height=t.getUint32(8,!0),e.width=t.getUint32(12,!0),e.maxZError=t.getFloat64(16,!0),i+=24,!r)if(t=new DataView(n,i,16),e.mask={},e.mask.numBlocksY=t.getUint32(0,!0),e.mask.numBlocksX=t.getUint32(4,!0),e.mask.numBytes=t.getUint32(8,!0),e.mask.maxValue=t.getFloat32(12,!0),i+=16,e.mask.numBytes>0){var l=new Uint8Array(Math.ceil(e.width*e.height/8)),c=(t=new DataView(n,i,e.mask.numBytes)).getInt16(0,!0),u=2,x=0;do{if(c>0)for(;c--;)l[x++]=t.getUint8(u++);else{var y=t.getUint8(u++);for(c=-c;c--;)l[x++]=y}c=t.getInt16(u,!0),u+=2}while(u<e.mask.numBytes);if(c!==-32768||x<l.length)throw"Unexpected end of mask RLE encoding";e.mask.bitset=l,i+=e.mask.numBytes}else(e.mask.numBytes|e.mask.numBlocksY|e.mask.maxValue)===0&&(l=new Uint8Array(Math.ceil(e.width*e.height/8)),e.mask.bitset=l);t=new DataView(n,i,16),e.pixels={},e.pixels.numBlocksY=t.getUint32(0,!0),e.pixels.numBlocksX=t.getUint32(4,!0),e.pixels.numBytes=t.getUint32(8,!0),e.pixels.maxValue=t.getFloat32(12,!0),i+=16;var v=e.pixels.numBlocksX,p=e.pixels.numBlocksY,g=v+(e.width%v>0?1:0),h=p+(e.height%p>0?1:0);e.pixels.blocks=new Array(g*h);for(var k=1e9,b=0,B=0;B<h;B++)for(var D=0;D<g;D++){var o=0,U=n.byteLength-i;t=new DataView(n,i,Math.min(10,U));var a={};e.pixels.blocks[b++]=a;var f=t.getUint8(0);if(o++,a.encoding=63&f,a.encoding>3)throw"Invalid block encoding ("+a.encoding+")";if(a.encoding!==2){if(f!==0&&f!==2){if(f>>=6,a.offsetType=f,f===2)a.offset=t.getInt8(1),o++;else if(f===1)a.offset=t.getInt16(1,!0),o+=2;else{if(f!==0)throw"Invalid block offset type";a.offset=t.getFloat32(1,!0),o+=4}if(k=Math.min(a.offset,k),a.encoding===1)if(f=t.getUint8(o),o++,a.bitsPerPixel=63&f,f>>=6,a.numValidPixelsType=f,f===2)a.numValidPixels=t.getUint8(o),o++;else if(f===1)a.numValidPixels=t.getUint16(o,!0),o+=2;else{if(f!==0)throw"Invalid valid pixel count type";a.numValidPixels=t.getUint32(o,!0),o+=4}}var w;if(i+=o,a.encoding!=3){if(a.encoding===0){var s=(e.pixels.numBytes-1)/4;if(s!==Math.floor(s))throw"uncompressed block has invalid length";w=new ArrayBuffer(4*s),new Uint8Array(w).set(new Uint8Array(n,i,4*s));for(var V=new Float32Array(w),m=0;m<V.length;m++)k=Math.min(k,V[m]);a.rawData=V,i+=4*s}else if(a.encoding===1){var A=Math.ceil(a.numValidPixels*a.bitsPerPixel/8),I=Math.ceil(A/4);w=new ArrayBuffer(4*I),new Uint8Array(w).set(new Uint8Array(n,i,A)),a.stuffedData=new Uint32Array(w),i+=A}}}else i++,k=Math.min(k,0)}return e.pixels.minValue=k,e.eofOffset=i,e},S=function(n,i,r,e,d,t,l){var c,u,x,y=(1<<i)-1,v=0,p=0,g=Math.ceil((l-e)/d),h=4*n.length-Math.ceil(i*r/8);for(n[n.length-1]<<=8*h,c=0;c<r;c++){if(p===0&&(x=n[v++],p=32),p>=i)u=x>>>p-i&y,p-=i;else{var k=i-p;u=(x&y)<<k&y,u+=(x=n[v++])>>>(p=32-k)}t[c]=u<g?e+u*d:l}return t};const T=M.decode;class O{_decode(i){const r=T(i.buffer,i.options);return Promise.resolve({result:r,transferList:[r.pixelData.buffer]})}}function Z(){return new O}export{Z as default};
