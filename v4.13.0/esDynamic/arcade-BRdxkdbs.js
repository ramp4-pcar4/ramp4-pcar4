import{bs as _,s as O,Z as U,bv as ee,c7 as j,i as G,h as te}from"./main-BFDurRCu.js";import{r as B,i as J,h as P}from"./TimeOnly-CGkId3bj.js";import{t as ae}from"./ImmutableArray-CiJxhY8_.js";import re from"./FeatureLayer-D09djTpa.js";import{g as ne}from"./FeatureSet-BVGGhhH9.js";let v=null;function oe(e,n,r,o={}){const a=n.elementType,c="value",p=a.type==="array"?[{name:c,type:a.type,elementType:a.elementType}]:a.type==="dictionary"?[{name:c,type:a.type,properties:a.properties}]:[{name:c,type:a.type}];return new ae(e.map(s=>{const t={};return R(t,p,{[c]:s},r,o),t[c]}))}function ce(e,n,r={}){const o=e instanceof ne?new re({source:e.features,geometryType:e.geometryType,fields:e.fields,spatialReference:e.spatialReference}):e;return n.constructFeatureSet(o,r.spatialReference,null,!0,r.lruCache,r.interceptor)}function se(e,n,r={}){const{spatialReference:o,interceptor:a,lruCache:c}=r;return typeof e=="string"?n.createFeatureSetCollectionFromService(e,o,c,a):n.createFeatureSetCollectionFromMap(e,o,c,a)}function ie(e,n,r,o={}){const a=Object.create(null);return R(a,n.properties,e,r,o),new v.Dictionary(a)}function R(e,n,r,o,a={}){const c={};for(const p of Object.keys(r))c[p.toLowerCase()]=r[p];for(const p of n){const s=p.name.toLowerCase();if(a.variablesPreProcessed)e[s]=c[s];else switch(p.type){case"array":{const t=c[s];e[s]=t==null?null:oe(t,p,o,a);break}case"feature":{const t=c[s];e[s]=t==null?null:v.Feature.createFromGraphic(t,a?.timeZone);break}case"featureSet":{const t=c[s];e[s]=t==null?null:o?ce(t,o,a):null;break}case"featureSetCollection":{const t=c[s];e[s]=t==null?null:o?se(t,o,a):null;break}case"dictionary":{const t=c[s];e[s]=t==null?null:ie(t,p,o,a);break}case"date":{const t=c[s];e[s]=t?t instanceof P?t:a?.timeZone?P.dateJSAndZoneToArcadeDate(t,a?.timeZone):P.dateJSToArcadeDate(t):null;break}case"dateOnly":{const t=c[s];e[s]=t?t instanceof J?t:J.fromReader(t):null;break}case"time":{const t=c[s];e[s]=t?t instanceof B?t:B.fromReader(t):null;break}case"knowledgeGraph":case"geometry":case"boolean":case"text":case"number":e[s]=c[s];break;case"voxel":{const t=c[s];e[s]=t==null?null:new v.Voxel(t,a?.timeZone);break}}}}function M(e,n){for(const r of e)n.push(r),r.type==="dictionary"&&M(r.properties,n);return n}function Z(e,n,r,o,a){const{spatialReference:c,interceptor:p,lruCache:s,console:t,abortSignal:x,timeZone:C,services:h={portal:U.getDefault()}}=r,b={vars:{},spatialReference:c,interceptor:p,timeZone:C,lrucache:s,useAsync:a,services:h,console:t,abortSignal:x};return n&&R(b.vars,e.variables,n,o,r),b}function g(e,n){switch(n.getArcadeType(e)){case"number":case"text":case"boolean":case"point":case"polygon":case"polyline":case"multipoint":case"extent":return e;case"date":return e.toJSDate();case"time":case"dateOnly":return e.toString();case"feature":{const r=(e.type,e),o="geometry"in r?r.geometry():null,a="readAttributes"in r?r.readAttributes():r.attributes;return new ee({geometry:o,attributes:a})}case"dictionary":{const r=e,o=r.attributes,a={};for(const c of Object.keys(o))a[c]=g(r.field(c),n);return a}case"array":return("toArray"in e?e.toArray():e).map(r=>g(r,n))}return e}const z={variables:[{name:"$feature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$userInput",type:"geometry"},{name:"$graph",type:"knowledgeGraph"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]},N={variables:[{name:"$feature",type:"feature"},{name:"$aggregatedFeatures",type:"featureSet"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]},V={variables:[{name:"$voxel",type:"voxel"}]},Y=new Map([["aggregate-field",{variables:[{name:"$feature",type:"feature"}]}],["form-constraint",{variables:[{name:"$feature",type:"feature"}]}],["feature-z",{variables:[{name:"$feature",type:"feature"}]}],["field-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$datastore",type:"featureSetCollection"}]}],["form-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$originalFeature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$featureSet",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$editContext",type:"dictionary",properties:[{name:"editType",type:"text"}]}]}],["labeling",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]}],["popup",z],["popup-element",z],["popup-feature-reduction",N],["popup-element-feature-reduction",N],["visualization",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"},{name:"timeProperties",type:"dictionary",properties:[{name:"currentStart",type:"date"},{name:"currentEnd",type:"date"},{name:"startIncluded",type:"boolean"},{name:"endIncluded",type:"boolean"}]}]}]}],["popup-voxel",V],["popup-element-voxel",V]]);function pe(e){e==="feature-reduction-popup"?(j(G.getLogger("esri.arcade"),'profile name: "feature-reduction-popup"',{replacement:'"popup-feature-reduction"',version:"4.32",warnOnce:!0}),e="popup-feature-reduction"):e==="feature-reduction-popup-element"&&(j(G.getLogger("esri.arcade"),'profile name: "feature-reduction-popup-element"',{replacement:'"popup-element-feature-reduction"',version:"4.32",warnOnce:!0}),e="popup-element-feature-reduction");const n=Y.get(e);if(!n){const r=Array.from(Y.keys()).map(o=>`'${o}'`).join(", ");throw new O("createArcadeProfile:invalid-profile-name",`Invalid profile name '${e}'. You must specify one of the following values: ${r}`)}return te(n)}async function ue(e,n,r={}){v||(v=await _());const{arcade:o,arcadeUtils:a,batchExec:{createBatchExecutor:c},aiServices:{BatchTranslationServiceFactory:p,PortalTranslationService:s}}=v,{loadScriptDependencies:t,referencesMember:x,scriptIsAsync:C}=o,h=M(n.variables,[]),b=h.filter(i=>i.type==="featureSet"||i.type==="featureSetCollection").map(i=>i.name.toLowerCase()),m=o.parseScript(e,b);if(!m)throw new O("arcade:invalid-script","Unable to create SyntaxTree");const q=a.extractFieldNames(m),H=o.scriptTouchesGeometry(m),D=h.map(i=>i.name.toLowerCase()).filter(i=>x(m,i)),f=C(m,b);await t(m,f,b);const E={vars:{},useAsync:f};for(const i of D)E.vars[i]="any";const{lruCache:A,services:k}=r,T=o.compileScript(m,E),F=o.featureSetUtils();return{execute:(i,l={})=>{if(f)throw new O("arcade:invalid-execution-mode","Cannot execute the script in synchronous mode");const u={...k,...l.services},d={lruCache:A,...l,services:u},y=T(Z(n,i,d,F,f));return l.rawOutput?y:g(y,a)},executeAsync:async(i,l={})=>{const u={...k,...l.services},d={lruCache:A,...l,services:u},y=await T(Z(n,i,d,F,f));return l.rawOutput?y:g(y,a)},executeAsyncBatch:async(i,l,u={})=>{const d=[],y=c(i,async(w,S)=>{const Q=l(w);try{const $={...I,translation:K.create(S)},W={lruCache:A,...u,services:$},L=await T(Z(n,Q,W,F,f)),X=u.rawOutput?L:g(L,a);d.push({id:S.id,result:{status:"fulfilled",value:X}})}catch($){throw d.push({id:S.id,result:{status:"rejected",reason:$}}),$}},u.maxConcurrency??64,u.abortSignal),I={...k,...u.services},K=new p(y,I.translation??new s(I.portal??U.getDefault(),u.console));return await y.run(),d.sort(({id:w},{id:S})=>w-S).map(({result:w})=>w)},isAsync:f,variablesUsed:D,fieldsUsed:q,geometryUsed:H,syntaxTree:m}}export{ue as createArcadeExecutor,pe as createArcadeProfile};
