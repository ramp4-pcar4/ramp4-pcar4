import{cZ as g,c_ as _,c$ as y,a7 as b}from"./main-BFDurRCu.js";import{e as v}from"./geodeticCurveType-D_etKnbP.js";let n;function l(){return!!n&&y()}async function S(){if(!l()){const[e,r]=await Promise.all([import("./OperatorGeodeticArea-CYEZyWFg.js"),import("./ProjectionTransformation-DQ4GElxa.js").then(t=>t.aV).then(t=>t.aG).then(({injectPe:t})=>t),g()]);n=new e.OperatorGeodeticArea,r(_)}}function j(e,r,t){return n.execute(e,r,t,null)}function O(){return n.supportsCurves()}let a,f,p,u;function i(){return!!a&&l()}async function s(){if(!i()){const[e]=await Promise.all([import("./apiConverter-CSuukuP9.js"),S()]);a=e.fromGeometry,f=e.fromSpatialReference,p=e.getSpatialReference,u=O()}}function m(e,r={}){const{curveType:t="geodesic",unit:c}=r,d=p(e);let o=j(a(e),f(d),v[t]);return o&&c&&(o=b(o,"square-meters",c)),o}const P=Object.freeze(Object.defineProperty({__proto__:null,execute:m,isLoaded:i,load:s,get supportsCurves(){return u}},Symbol.toStringTag,{value:"Module"})),h=Object.freeze(Object.defineProperty({__proto__:null,execute:m,isLoaded:i,load:s,get supportsCurves(){return u}},Symbol.toStringTag,{value:"Module"}));export{P as f,h as g,s as m};
