import{P as c,$ as o}from"./utils-DyDDSDvN.js";import{t as p}from"./datasetUtils-DYlC2Qty.js";import{l as g,c as u,E as i,u as v}from"./portalItemUtils-BfWDJg-S.js";const y="Image Service",f="imagery-layer-save",d="imagery-layer-save-as",T="imagery-tile-layer-save",w="imagery-tile-layer-save-as",l="WCS",I="wcs-layer-save",x="wcs-layer-save-as";function m(e){if(e.type==="imagery"||e.type==="wcs")return{isValid:!0};const{raster:t}=e,r=p(t)[0];return{isValid:r?.datasetFormat==="RasterTileServer"&&(r.tileType==="Raster"||r.tileType==="Map"),errorMessage:"imagery tile layer should be created from a tiled image service."}}function n(e){const t=e.layerJSON;return Promise.resolve(t&&Object.keys(t).length?t:null)}async function A(e,t){const{parsedUrl:r,title:a,fullExtent:s}=e;t.url=r.path,t.title||=a;try{t.extent=await g(s)}catch{t.extent=void 0}u(t,i.METADATA),v(t,i.TILED_IMAGERY,e.type==="imagery-tile")}async function h(e,t){const r=e.type==="imagery"?f:e.type==="imagery-tile"?T:I,a=e.type==="wcs"?l:y;return c({layer:e,itemType:a,validateLayer:m,createItemData:n,errorNamePrefix:r},t)}async function D(e,t,r){const a=e.type==="imagery"?d:e.type==="imagery-tile"?w:x,s=e.type==="wcs"?l:y;return o({layer:e,itemType:s,validateLayer:m,createItemData:n,errorNamePrefix:a,newItem:t,setItemProperties:A},r)}export{h as save,D as saveAs};
