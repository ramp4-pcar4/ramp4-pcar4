{"version":3,"file":"utils-CdIngiRE.js","sources":["../../node_modules/@arcgis/core/smartMapping/support/utils.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\n*/\nimport{formatDate as t,convertDateFormatToIntlOptions as e,formatTimestamp as n,formatTimeOnly as o,formatDateOnly as r}from\"../../intl/date.js\";import{isDateField as i,isDateOnlyField as s,isTimestampOffsetField as a}from\"../../layers/support/fieldUtils.js\";import{getWellKnownBasemapId as l}from\"../../support/basemapUtils.js\";import{loadArcade as u}from\"../../support/loadArcade.js\";import{utc as m}from\"../../time/constants.js\";import{getTimeZoneFormattingOptions as d}from\"../../time/timeZoneUtils.js\";const f=\",\",c={light:[\"streets\",\"gray\",\"topo\",\"terrain\",\"oceans\",\"osm\",\"gray-vector\",\"streets-vector\",\"topo-vector\",\"streets-relief-vector\",\"streets-navigation-vector\",\"topo-3d\",\"navigation-3d\",\"streets-3d\",\"osm-3d\",\"gray-3d\"],dark:[\"satellite\",\"hybrid\",\"dark-gray\",\"dark-gray-vector\",\"streets-night-vector\",\"navigation-dark-3d\",\"streets-dark-3d\",\"dark-gray-3d\"]},p=\"percent-of-total\",g=\"field\",y={exclude:[\"median\"]},h={years:365,months:30,days:1,hours:1/24,minutes:1/1440,seconds:1/86400,milliseconds:1/864e5},v=new Set([\"integer\",\"small-integer\"]);let T=null;const Z=[\"date\",\"date-only\",\"timestamp-offset\"];function $(t){return i(t)||s(t)||a(t)}async function U(t){const{field:e,field2:n,field3:o,normalizationField:r,valueExpression:i}=t;let s=[];if(i){if(!T){const{arcadeUtils:t}=await u();T=t}s=T.extractFieldNames(i)}return e&&s.push(e),n&&s.push(n),o&&s.push(o),r&&s.push(r),s}function w(t){let e=t.normalizationType;return e||(t.normalizationField?e=g:null!=t.normalizationTotal&&(e=p)),e??void 0}function S(t){return String(t).padStart(2,\"0\")}function k(t,e,n){let o;if(\"date\"===e||\"number\"===e){\"number\"===e&&(t=new Date(t));o=`TIMESTAMP'${n?t.getFullYear():t.getUTCFullYear()}-${S((n?t.getMonth():t.getUTCMonth())+1)}-${S(n?t.getDate():t.getUTCDate())} ${S(n?t.getHours():t.getUTCHours())}:${S(n?t.getMinutes():t.getUTCMinutes())}:${S(n?t.getSeconds():t.getUTCSeconds())}'`}else o=t;return o}function C(t,e,n,o){const{hasQueryEngine:r}=t,i=`(${k(n,D(t,n),r)} - ${k(e,D(t,e),r)})`;let s=h[o],a=\"/\";s<1&&(s=1/s,a=\"*\");return{sqlExpression:1===s?i:`(${i} ${a} ${s})`,sqlWhere:null}}function D(t,e){if(e instanceof Date)return\"date\";if(\"number\"==typeof e)return\"number\";if(\"string\"==typeof e){const n=t.getField(e);if(\"<now>\"===e.toLowerCase())return;if(i(n))return\"field\"}}function F(t,e=c){for(const n in e)if(e[n].includes(t))return n}function b(t,e,n=!0){let o=null;return t&&(\"string\"==typeof t?e.includes(t)&&(o=t):o=l(t)),n?o||\"gray\":o}function j(t,e){const n=e&&t.getField(e);return!!n&&v.has(n.type)}function M(t){return`cast(${t} as float)`}function N(i,s){const{format:a,timeZoneOptions:l,fieldType:u}=s??{};let f,c;if(l&&({timeZone:f,timeZoneName:c}=d(l.layerTimeZone,l.datesInUnknownTimezone,l.viewTimeZone,e(a||\"short-date-short-time\"),u)),\"string\"==typeof i&&isNaN(Date.parse(\"time-only\"===u?`1970-01-01T${i}Z`:i)))return i;switch(u){case\"date-only\":{const n=e(a||\"short-date\");return\"string\"==typeof i?r(i,{...n}):t(i,{...n,timeZone:m})}case\"time-only\":{const n=e(a||\"short-time\");return\"string\"==typeof i?o(i,n):t(i,{...n,timeZone:m})}case\"timestamp-offset\":{if(!f&&\"string\"==typeof i&&new Date(i).toISOString()!==i)return i;const o=a||l?e(a||\"short-date-short-time\"):void 0,r=o?{...o,timeZone:f,timeZoneName:c}:void 0;return\"string\"==typeof i?n(i,r):t(i,r)}default:{const n=a||l?e(a||\"short-date-short-time\"):void 0;return t(\"string\"==typeof i?new Date(i):i,n?{...n,timeZone:f,timeZoneName:c}:void 0)}}}export{M as castIntegerFieldToFloat,Z as dateTypes,c as defaultBasemapGroups,y as defaultStatisticTypes,f as fieldDelimiter,N as formatAnyDate,F as getBasemapGroup,b as getBasemapId,C as getDateDiffSQL,D as getDateType,U as getFieldsList,w as getNormalizationType,$ as isAnyDateField,j as isIntegerField,h as unitValueInDays};\n"],"names":["f","h","T","$","t","i","s","a","U","e","n","o","r","u","S","k","C","D","j","M","N","l","c","d","m"],"mappings":"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","x_google_ignoreList":[0]}