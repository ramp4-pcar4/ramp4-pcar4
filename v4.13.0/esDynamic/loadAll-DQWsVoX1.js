import{p as f,_ as u}from"./asyncUtils-BPUlNCrX.js";import{V as e,p}from"./main-BFDurRCu.js";async function d(o,l){return await o.load(),s(o,l)}async function s(o,l){const i=[],n=(...t)=>{for(const a of t)a!=null&&(Array.isArray(a)?n(...a):e.isCollection(a)?a.forEach(c=>n(c)):p.isLoadable(a)&&i.push(a))};l(n);let r=null;if(await f(i,async t=>{const a=await u(y(t)?t.loadAll():t.load());a.ok!==!1||r||(r=a)}),r)throw r.error;return o}function y(o){return"loadAll"in o&&typeof o.loadAll=="function"}export{s as a,d as t};
