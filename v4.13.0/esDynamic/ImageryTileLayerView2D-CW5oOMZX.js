import{fV as A,v as l,gY as De,cD as wt,n as hs,bY as ds,b$ as ms,aG as gs,c2 as ys,R as Ce,i as Te,x as C,z as Re,ao as fs,ab as Ae,s as ws,bv as xs,ae as bs,e1 as _s}from"./main-BFDurRCu.js";import{r as xt,V as vs,k as Se,s as Cs,x as bt}from"./datasetUtils-DYlC2Qty.js";import{f as Ts,d as Rs,h as Ss}from"./RasterVFDisplayObject-CjEe9AcH.js";import{S as Ps}from"./LayerView2D-BaefGYf9.js";import{l as Is}from"./pixelRangeUtils-DcEknavd.js";import{x as zs}from"./clipUtils-fw7VCGXU.js";import{e as Pe,m as ks,y as _t}from"./MapView-DVZSZHRJ.js";import{o as Ms,M as $e,h as Fs,b as Vs,i as vt,r as Bs}from"./mat3-DOnW3DjW.js";import{r as Ge}from"./vec2f32-hTAvipMV.js";import{e as Os}from"./Container-Dr2EdOEZ.js";import{L as Je,D as Ye,C as Ds,B as As,X as Gs,P as Ls,A as Le}from"./enums-wEDHPbCF.js";import{m as Us,c as js,s as Es,l as Xe}from"./rasterUtils-CV4tTwvB.js";import{r as Ct}from"./WGLContainer-qQmF3DRB.js";import{E as Ke,r as Tt,h as qs,p as Ws}from"./enums-CQnCd4Rx.js";import{i as Rt}from"./TileContainer-CAC1uSjc.js";import{z as H,Z as K,I as P,M as ee,T as et,Y as N,e as f,d as T,q as B,c as x,N as Ns,O as St,X as w,k as E,B as Pt,y as q,g as m,U as te,P as I,j as It,w as zt,V as W,f as kt,r as he,_ as p,K as _,$ as ae,m as Ue,i as Mt,v as Ft,n as Z,D as tt,p as st,Q as D,a0 as Q,A as se,W as $,t as it,a1 as de,a as Vt,E as je,u as G,b as me,a2 as oe,a3 as Zs,G as ne,a4 as Hs,a5 as Qs,a6 as $s,a7 as Js,a8 as Ys,a9 as Xs,aa as Ks,ab as ei,ac as ti,ad as si,ae as ii,af as ri,s as ai,ag as oi,F as ni,ah as li,ai as ui,aj as ci,ak as pi,al as hi,am as di,an as mi,ao as rt,ap as gi,C as at,x as yi,aq as fi,ar as wi,as as xi}from"./GraphShaderModule-Baq-N_YO.js";import{t as z}from"./TechniqueType-CMl1wqtX.js";import{m as bi}from"./bitmapUtils-CAdCGIbP.js";import{D as ge,z as _i}from"./utils-OrDMNKn4.js";import{a as le}from"./definitions-MCCItX4r.js";import{R as vi}from"./FramebufferObject-D3QloItC.js";import{a as Ci,S as Ti}from"./Texture-D5XWO2GQ.js";import{v as ye,c as Ri,S as Si}from"./dataUtils-CfR0oe2x.js";import{h as Pi}from"./UpdatingHandles-Bd2FQ26N.js";import{j as Bt}from"./TileInfo-U28GysF5.js";import{g as Ot,a as Dt,i as Ii,u as zi}from"./RawBlockCache-B-F6OWAv.js";import{e as ki,x as Mi,C as Fi,m as At,O as Vi}from"./rasterProjectionHelper-DGqzGF1m.js";import"./TileKey-_zikB14n.js";import{g as Bi}from"./Scheduler-BV4C4cVP.js";import{t as Oi}from"./capabilities-BaKzUyhi.js";import{i as Di}from"./timeSupport-BlIpM2Fj.js";import{p as Ai}from"./popupUtils-B9dNptlM.js";import{u as Gi}from"./LayerView-DdANuT-Y.js";import{i as Li}from"./RefreshableLayerView-CqFW21Do.js";const Ui={bandCount:3,minOutput:0,maxOutput:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};let ji=class extends Os{constructor(t=null,e=null,s=null){super(),this._textureInvalidated=!0,this._colormapTextureInvalidated=!0,this._rasterTexture=null,this._maskTexture=null,this._rasterTextureBandIds=null,this._transformGridTexture=null,this._colormapTexture=null,this._colormap=null,this._supportsBilinearTexture=!0,this._processedTexture=null,this.functionTextures=[],this.projected=!1,this.stencilRef=0,this.coordScale=[1,1],this._processed=!1,this._symbolizerParameters=null,this.height=null,this.isRendereredSource=!1,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this._mask=null,this.rawPixelData=null,this._suspended=!1,this._bandIds=null,this._interpolation=null,this._transformGrid=null,this.width=null,this.x=0,this.y=0,this.source=t,this.transformGrid=e,this.interpolation=s}destroy(){this._disposeTextures()}get processedTexture(){return this._processedTexture}set processedTexture(t){this._processedTexture!==t&&(this._disposeTextures(!0),this._processedTexture=t)}get rasterTexture(){return this._rasterTexture}set rasterTexture(t){this._rasterTexture!==t&&(this._rasterTexture?.dispose(),this._rasterTexture=t),t==null&&(this.projected=!1)}get processed(){return this._processed}set processed(t){this._processed=t,t||(this.processedTexture=A(this.processedTexture),this.invalidateTexture())}get symbolizerParameters(){return this._symbolizerParameters||Ui}set symbolizerParameters(t){this._symbolizerParameters!==t&&(this._symbolizerParameters=t,this._colormapTextureInvalidated=!0)}get source(){return this._source}set source(t){this._source!==t&&(this._source=t,this._rasterTexture&&(this._rasterTexture=A(this._rasterTexture),this._rasterTextureBandIds=null),this.projected=!1,this.invalidateTexture())}get mask(){return this._mask}set mask(t){this._mask!==t&&(this._mask=t,this._maskTexture=A(this._maskTexture))}get suspended(){return this._suspended}set suspended(t){this._suspended&&!t&&this.stage&&(this.ready(),this.requestRender()),this._suspended=t}get bandIds(){return this._bandIds}set bandIds(t){this._bandIds=t,this._isBandIdsChanged(t)&&(this.projected=!1,this.invalidateTexture())}get interpolation(){return this._interpolation||"nearest"}set interpolation(t){this._interpolation=t,this._rasterTexture&&this._rasterTexture.setSamplingMode(this._getTextureSamplingMethod(t||"nearest")==="bilinear"?Je.LINEAR:Je.NEAREST)}get transformGrid(){return this._transformGrid}set transformGrid(t){this._transformGrid!==t&&(this._transformGrid=t,this._transformGridTexture=A(this._transformGridTexture))}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRender())}getRasterTextureSize(t=!1){const e=t||this.projected;return[e?this.width:this.source?.width||this.width,e?this.height:this.source?.height||this.height]}getRasterCellSize(){const t=this.rawPixelData?.srcPixelSize,{projected:e,resolution:s}=this;return t&&!e?[t.x,t.y]:[s,s]}_createTransforms(){return{displayViewScreenMat3:Pe()}}setTransform(t){const e=Ms(this.transforms.displayViewScreenMat3),[s,i]=t.toScreenNoRotation([0,0],[this.x,this.y]),r=this.resolution/this.pixelRatio/t.resolution,a=r*this.width,o=r*this.height,n=Math.PI*this.rotation/180;$e(e,e,Ge(s,i)),$e(e,e,Ge(a/2,o/2)),Fs(e,e,-n),$e(e,e,Ge(-a/2,-o/2)),Vs(e,e,Ge(a,o)),vt(this.transforms.displayViewScreenMat3,t.displayViewMat3,e)}getTextures({forProcessing:t=!1,useProcessedTexture:e=!1}={}){const s=e?this._processedTexture??this._rasterTexture:this._rasterTexture,i=[],r=[];return s?(this._transformGridTexture&&!this.projected&&(r.push(this._transformGridTexture),i.push("u_transformGrid")),r.push(s),i.push("u_image"),!this._colormapTexture||!e&&t||(r.push(this._colormapTexture),i.push("u_colormap")),this._maskTexture&&(r.push(this._maskTexture),i.push("u_mask")),{names:i,textures:r}):{names:i,textures:r}}onAttach(){this.invalidateTexture()}onDetach(){this.invalidateTexture()}updateTexture({context:t}){if(!this.stage)return void this._disposeTextures();const e=this._isValidSource(this.source);e&&this._colormapTextureInvalidated&&(this._colormapTextureInvalidated=!1,this._updateColormapTexture(t)),this._textureInvalidated&&(this._textureInvalidated=!1,this._createOrDestroyRasterTexture(t),this._rasterTexture&&(e?(this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=Us(t,this.transformGrid)),this._mask&&!this._maskTexture&&(this._maskTexture=js(t,this._mask,[this.width,this.height]))):this._rasterTexture.setData(null)),this.suspended||(this.ready(),this.requestRender()))}updateProcessedTexture(){const{functionTextures:t}=this;t.length!==0&&(this.processedTexture=t.shift(),t.forEach(e=>e?.dispose()),t.length=0,this.processed=!!this.processedTexture)}_createOrDestroyRasterTexture(t){const e=this.source?.extractBands(this.bandIds);if(!this._isValidSource(e))return void(this._rasterTexture&&(this._rasterTexture=A(this._rasterTexture),this._rasterTextureBandIds=null));const s=!this._isBandIdsChanged(this.bandIds);if(this._rasterTexture){if(s)return;this._rasterTexture=A(this._rasterTexture),this._rasterTextureBandIds=null}this._supportsBilinearTexture=!!t.capabilities.textureFloatLinear;const i=this._getTextureSamplingMethod(this.interpolation),r=this.isRendereredSource;this._rasterTexture=Es(t,e,i,r),this.projected=!1,this._processed=!1,this._rasterTextureBandIds=this.bandIds?[...this.bandIds]:null}_isBandIdsChanged(t){const e=this._rasterTextureBandIds;return!(e==null&&t==null||e&&t&&e.join("")===t.join(""))}_isValidSource(t){return t!=null&&t.pixels?.length>0}_getTextureSamplingMethod(t){const{type:e}=this.symbolizerParameters,s=e==="lut"&&!this.symbolizerParameters.isClassBreaks||e==="hillshade"||e==="stretch"&&this.symbolizerParameters.bandCount===1;return!this._supportsBilinearTexture||s||t!=="bilinear"&&t!=="cubic"?"nearest":"bilinear"}_updateColormapTexture(t){const e=this._colormap,s=this.symbolizerParameters.colormap;return s?e?s.length!==e.length||s.some((i,r)=>i!==e[r])?(this._colormapTexture&&(this._colormapTexture=A(this._colormapTexture)),this._colormapTexture=Xe(t,s),void(this._colormap=s)):void 0:(this._colormapTexture=Xe(t,s),void(this._colormap=s)):(this._colormapTexture&&(this._colormapTexture=A(this._colormapTexture)),void(this._colormap=null))}_disposeTextures(t=!1){t?this.projected&&(this._transformGridTexture=A(this._transformGridTexture)):(this._rasterTexture=A(this._rasterTexture),this._colormapTexture=A(this._colormapTexture),this._transformGridTexture=A(this._transformGridTexture),this._maskTexture=A(this._maskTexture),this._rasterTextureBandIds=null,this._colormap=null,this._colormapTextureInvalidated=!0),this._processedTexture=A(this._processedTexture)}},Ei=class extends Ct{constructor(t,e,s,i,r,a,o=null){super(t,e,s,i,r,a),this.bitmap=null,this.bitmap=new ji(o,null,null),this.bitmap.coordScale=[r,a],this.bitmap.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.bitmap.destroy(),this.bitmap=null,this.stage=null}set stencilRef(t){this.bitmap.stencilRef=t}get stencilRef(){return this.bitmap.stencilRef}setTransform(t){super.setTransform(t),this.bitmap.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}_createTransforms(){return{displayViewScreenMat3:Pe(),tileMat3:Pe()}}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap.stage=null}};function qi(t,e,s,i){const r=H(e.multiply(s)),a=new K(new P(r.x),new P(r.y)),o=new K(a.x.add(1),a.y),n=new K(a.x,a.y.add(1)),u=new K(a.x.add(1),a.y.add(1)),c=ee(t,a,new P(0)),h=ee(t,o,new P(0)),d=ee(t,n,new P(0)),y=ee(t,u,new P(0)),g=et(e.multiply(s)),b=N(c,h,g.x),v=N(d,y,g.x),S=N(b,v,g.y);if(!i)return S;const k=new f(c.a,h.a,d.a,y.a),R=k.xy.multiply(k.zw),j=H(R.x.multiply(R.y).add(.5)),X=S.multiply(j),Qe=ge(j).multiply(T(t,e));return X.add(Qe)}class Ie extends I{}function Wi(t,e){const s=T(e.transformTexture,t);return new x(s.r,s.g)}function Ni(t,e){const{transformTexture:s,targetImageSize:i,transformSpacing:r}=e,a=H(t.multiply(i)),o=new x(4,1),n=H(a.divide(r)).multiply(o),u=et(a.add(new x(.5,.5)).divide(r)),c=new K(St(n.x),St(n.y)),h=new w(u,1);return E(Pt(u.x,u.y),Zi(s,c,h),Hi(s,c,h))}function Zi(t,e,s){const i=ee(t,e,new P(0)),r=new K(e.x.add(1),e.y),a=ee(t,r,new P(0));return new x(q(i.rgb,s),q(a.rgb,s))}function Hi(t,e,s){const i=new K(e.x.add(2),e.y),r=ee(t,i,new P(0)),a=new K(e.x.add(3),e.y),o=ee(t,a,new P(0));return new x(q(r.rgb,s),q(o.rgb,s))}function Qi(t){const e=B(new x(-1e-5,-1e-5),t).multiply(B(t,new x(1.00001,1.00001))),s=ge(e.x.multiply(e.y));return new Ns(s)}function Gt(t,e,s=!1){return e?s?Wi(t,e):Ni(t,e):t}function Lt(t,e,s){const{bicubic:i=!1,bilinear:r=!1,nearestOnEdge:a=!1}=s??{};return i||r?i?bi(e.texture,t,e.srcImageSize):qi(e.texture,t,e.srcImageSize,a):T(e.texture,t)}l([m(te)],Ie.prototype,"transformTexture",void 0),l([m(x)],Ie.prototype,"targetImageSize",void 0),l([m(x)],Ie.prototype,"transformSpacing",void 0),l([m(x)],Ie.prototype,"transformGridSize",void 0);let Ut=class extends Mt{};l([kt(0,x)],Ut.prototype,"position",void 0);let $i=class extends Ft{},fe=class extends I{};l([m(te)],fe.prototype,"texture",void 0),l([m(he)],fe.prototype,"dvsMat3",void 0),l([m(x)],fe.prototype,"coordScale",void 0),l([m(x)],fe.prototype,"srcImageSize",void 0),l([m(p)],fe.prototype,"opacity",void 0);class jt extends I{}l([m(te)],jt.prototype,"maskTexture",void 0);class L extends It{constructor(){super(...arguments),this.applyProjection=!0,this.lookupProjection=!1,this.bilinear=!1,this.bicubic=!1,this.nearestOnEdge=!1,this.applyPixelMask=!1}vertex(e){const s=e.position,{dvsMat3:i,coordScale:r}=this.config,a=i.multiply(new w(s.multiply(r),1));return{uv:s,glPosition:new f(a,1)}}fragment(e){const s=new zt,i=Gt(e.uv,this.applyProjection?this.projectionConfig:void 0,this.lookupProjection),r=E(Qi(i),new f(0,0,0,0),this._colorize(i));let a=r.a.multiply(this.config.opacity);if(this.applyPixelMask){const o=this._getPixelMask(e.uv);a=a.multiply(o)}return s.fragColor=new f(r.rgb,1).multiply(a),s}_getPixel(e){const{config:s,bicubic:i,bilinear:r,nearestOnEdge:a}=this;return Lt(e,s,{bicubic:i,bilinear:r,nearestOnEdge:a})}_getPixelMask(e){const{maskTexture:s}=this.pixelMaskConfig,i=T(s,e);return W(i.a)}}l([_],L.prototype,"applyProjection",void 0),l([_],L.prototype,"lookupProjection",void 0),l([_],L.prototype,"bilinear",void 0),l([_],L.prototype,"bicubic",void 0),l([_],L.prototype,"nearestOnEdge",void 0),l([_],L.prototype,"applyPixelMask",void 0),l([m(fe)],L.prototype,"config",void 0),l([ae(Ie)],L.prototype,"projectionConfig",void 0),l([ae(jt)],L.prototype,"pixelMaskConfig",void 0),l([De(0,Ue(Ut))],L.prototype,"vertex",null),l([De(0,Ue($i))],L.prototype,"fragment",null);let ie=class extends I{};function ze(t,e,s,i=!0){const{colormapTexture:r,colormapOffset:a,colormapMaxIndex:o}=s,n=t.r.multiply(e).subtract(a),u=Z(n,new p(0),o),c=new x(u.add(.5).divide(o.add(1)),0),h=T(r,c),d=new f(h.rgb,h.a.multiply(t.a));if(i)return d;const y=B(new p(0),n).multiply(B(n,s.colormapMaxIndex));return d.multiply(y)}l([m(te)],ie.prototype,"colormapTexture",void 0),l([m(p)],ie.prototype,"colormapOffset",void 0),l([m(p)],ie.prototype,"colormapMaxIndex",void 0);let Et=class extends L{constructor(){super(...arguments),this.type="RasterColorizerLUTShader"}_colorize(t){const e=this._getPixel(t);return ze(e,new p(1),this.colormapConfig,!1)}};l([m(ie)],Et.prototype,"colormapConfig",void 0);function qt(t){const e=new f(0,-.3333333333333333,.6666666666666666,-1),s=E(tt(t.y,t.z),new f(t.zy,e.wz),new f(t.yz,e.xy)),i=E(tt(t.x,s.x),new f(s.xyw,t.x),new f(t.x,s.yzx)),r=i.x.subtract(st(i.w,i.y)),a=new p(1e-10),o=i.w.subtract(i.y),n=r.multiply(6).add(a),u=D(o.divide(n).add(i.z)),c=i.x.add(a),h=st(r.divide(c),new p(1));return new w(u,h,i.x)}function Wt(t){const e=new f(1,.6666666666666666,.3333333333333333,3),s=D(et(t.xxx.add(e.xyz)).multiply(6).subtract(e.www)),i=Z(s.subtract(e.xxx),new w(0,0,0),new w(1));return t.z.multiply(N(e.xxx,i,t.y))}let J=class extends I{};function U(t){const e=D(t),s=B(e,new x(1,1)).multiply(e),i=new p(2).subtract(e),r=B(new p(1),e).multiply(i);return s.add(r)}function ke(t,e,s){const i=new p(1).divide(s),r=T(t,U(i.multiply(new x(-1,-1)).add(e))),a=T(t,U(i.multiply(new x(0,-1)).add(e))),o=T(t,U(i.multiply(new x(1,-1)).add(e))),n=T(t,U(i.multiply(new x(-1,0)).add(e))),u=T(t,U(e)),c=T(t,U(i.multiply(new x(1,0)).add(e))),h=T(t,U(i.multiply(new x(-1,1)).add(e))),d=T(t,U(i.multiply(new x(0,1)).add(e))),y=T(t,U(i.multiply(new x(1,1)).add(e))),g=new f(r.a,a.a,o.a,n.a),b=new f(c.a,h.a,d.a,y.a),v=g.multiply(b),S=v.xy.multiply(v.zw),k=S.x.multiply(S.y).multiply(u.a),R=new Q(new p(0),10);return R[0]=r.r,R[1]=a.r,R[2]=o.r,R[3]=n.r,R[4]=u.r,R[5]=c.r,R[6]=h.r,R[7]=d.r,R[8]=y.r,R[9]=k,R}function ot(t,e){const s=new f(t[5],t[3],t[7],t[1]).multiply(2),i=new w(t[2],s[0],t[8]),r=new w(t[0],s[1],t[6]),a=q(i.subtract(r),new w(1)),o=new w(t[6],s[2],t[8]),n=new w(t[0],s[3],t[2]),u=q(o.subtract(n),new w(1));return new x(a,u).multiply(e)}function Nt(t,e,s){const{factor:i}=e,r=ot(t,i),a=se(q(r,r).add(1)),o=t[9],{sinZsinAs:n,sinZcosAs:u,cosZs:c,weights:h}=e;if(!s){const b=nt({sinZsinA:n[0],sinZcosA:u[0],cosZ:c[0],weights:new p(1),dzxy:r,dzd:a});return new f(b,b,b,o)}const d=nt({sinZsinA:new w(n[0],n[1],n[2]),sinZcosA:new w(u[0],u[1],u[2]),cosZ:new w(c[0],c[1],c[2]),weights:new w(h[0],h[1],h[2]),dzxy:r,dzd:a}),y=nt({sinZsinA:new w(n[3],n[4],n[5]),sinZcosA:new w(u[3],u[5],u[5]),cosZ:new w(c[3],c[4],c[5]),weights:new w(h[3],h[4],h[5]),dzxy:r,dzd:a}),g=q(d.add(y),new w(1));return new f(g,g,g,o)}function nt(t){const e=t.sinZsinA.multiply(t.dzxy.y),s=t.sinZcosA.multiply(t.dzxy.x),i=e.subtract(s),r=t.cosZ.add(i).divide(t.dzd);return r.multiply(B(new p(0),r)).multiply(t.weights)}function Zt(t,e){const{pixelSizeFactor:s}=t,i=[t.factor[0]/e[0],t.factor[1]/e[1]];if(s>0){const{zFactor:r,pixelSizePower:a,gcsFactor:o}=t,n=e[0]*o,u=e[1]*o;i[0]=(r+n**a*s)/(8*n),i[1]=(r+u**a*s)/(8*u)}return i}l([m(Q.ofType(p,6))],J.prototype,"sinZcosAs",void 0),l([m(Q.ofType(p,6))],J.prototype,"sinZsinAs",void 0),l([m(Q.ofType(p,6))],J.prototype,"cosZs",void 0),l([m(Q.ofType(p,6))],J.prototype,"weights",void 0),l([m(p)],J.prototype,"minValue",void 0),l([m(p)],J.prototype,"maxValue",void 0),l([m(x)],J.prototype,"factor",void 0);let Me=class extends L{constructor(){super(...arguments),this.type="RasterColorizerShadedReliefShader",this.applyColormap=!1,this.isMultidirectional=!1}_colorize(t){const{texture:e}=this.config,s=ke(e,t,this.config.srcImageSize),i=Nt(s,this.hillshadeConfig,this.isMultidirectional);if(!this.applyColormap)return new f(i.x,i.x,i.x,i.a);const{minValue:r,maxValue:a}=this.hillshadeConfig,o=this._getPixel(t),n=a.subtract(r),u=o.r.subtract(r),c=Z(u.divide(n),new p(0),new p(1)),h=ze(new f(c,c,c,1),new p(255),this.colormapConfig),d=qt(h.xyz),y=Wt(new w(d.xy,i.x));return new f(y,h.a.multiply(i.a))}};l([_],Me.prototype,"applyColormap",void 0),l([_],Me.prototype,"isMultidirectional",void 0),l([m(J)],Me.prototype,"hillshadeConfig",void 0),l([ae(ie)],Me.prototype,"colormapConfig",void 0);let Y=class extends I{};function Ji(t,e){const{minCutOff:s,maxCutOff:i,factor:r,minOutput:a}=e;return Z(t,s,i).subtract(s).multiply(r).add(a)}function Yi(t,e){const{minCutOff:s,maxCutOff:i,minOutput:r,maxOutput:a,gamma:o,gammaCorrection:n}=e,u=Z(t,s,i).subtract(s),c=i.subtract(s),h=u.divide(c),d=B(new p(1),o),y=W(o.subtract(1)),g=a.subtract(r),b=new w(1),v=$(b.divide(g),h.multiply(n)),S=ge(d.multiply(y).multiply(v)),k=$(h,b.divide(o)),R=S.multiply(g).multiply(k).add(r);return Z(R,r,a)}function Ht(t,e,s,i=255){const r=s?Yi(t.rgb,e).divide(i):Ji(t.rgb,e);return new f(r,t.a)}l([m(p)],Y.prototype,"minOutput",void 0),l([m(p)],Y.prototype,"maxOutput",void 0),l([m(w)],Y.prototype,"minCutOff",void 0),l([m(w)],Y.prototype,"maxCutOff",void 0),l([m(w)],Y.prototype,"factor",void 0),l([m(w)],Y.prototype,"gamma",void 0),l([m(w)],Y.prototype,"gammaCorrection",void 0);let ue=class extends L{constructor(){super(...arguments),this.type="RasterColorizerStretchShader",this.isMultiband=!0,this.applyColormap=!1,this.useGamma=!1,this.noOp=!1}_colorize(t){const e=this._getPixel(t);if(this.noOp)return e;let s=Ht(e,this.stretchConfig,this.useGamma);if(this.isMultiband)return s;if(s=new f(s.rrr,s.a),this.applyColormap){const i=this.useGamma?255:1;s=ze(s,new p(i),this.colormapConfig)}return s}};l([_],ue.prototype,"isMultiband",void 0),l([_],ue.prototype,"applyColormap",void 0),l([_],ue.prototype,"useGamma",void 0),l([_],ue.prototype,"noOp",void 0),l([m(Y)],ue.prototype,"stretchConfig",void 0),l([ae(ie)],ue.prototype,"colormapConfig",void 0);let Xi=class extends it{constructor(){super(...arguments),this.name="BrushRasterColorizer",this.type=z.RasterColorizer,this.shaders={lut:new Et,stretch:new ue,shadedRelief:new Me}}render(t,e){for(const s of e.bitmaps){if(!s.source||s.suspended)continue;t.timeline.begin(this.name);const{painter:i}=t;i.setPipelineState({depth:!1,stencil:{test:{mask:255,ref:s.stencilRef,compare:Ds.EQUAL,op:{fail:Ye.KEEP,zFail:Ye.KEEP,zPass:Ye.KEEP}},write:!1},color:{write:[!0,!0,!0,!0],blendMode:"composite"}}),s.updateTexture(t),s.processedTexture||s.updateProcessedTexture();const{type:r}=s.symbolizerParameters,a=r==="stretch"?this._getStretchOptions(s):r==="lut"?this._getLutOptions(s):this._getShadedReliefOptions(s);s.interpolation!=="bilinear"||t.context.capabilities.textureFloatLinear||(a.defines.bilinear=!0),i.submitDrawMesh(t.context,a,i.quadMesh),t.timeline.end(this.name)}}_getLutOptions(t){const{config:e,projectionConfig:s,colormapConfig:i,pixelMaskConfig:r,projectionDefines:a}=this._getCommonConfig(t),o=this._getInterpolationDefines("nearest",!1);return{shader:this.shaders.lut,uniforms:{projectionConfig:s,config:e,colormapConfig:i,pixelMaskConfig:r},defines:{...a,...o,applyPixelMask:!!r},optionalAttributes:null,useComputeBuffer:!1}}_getStretchOptions(t){const e=t.symbolizerParameters,{config:s,projectionConfig:i,colormapConfig:r,pixelMaskConfig:a,projectionDefines:o}=this._getCommonConfig(t),n=this._getInterpolationDefines(t.interpolation,e.bandCount===1);return{shader:this.shaders.stretch,uniforms:{projectionConfig:i,config:s,stretchConfig:e,colormapConfig:r,pixelMaskConfig:a},defines:{...o,...n,isMultiband:e.bandCount>1,applyColormap:!!r,useGamma:e.useGamma,noOp:t.isRendereredSource&&!t.processed,applyPixelMask:!!a},optionalAttributes:null,useComputeBuffer:!1}}_getShadedReliefOptions(t){const e=t.symbolizerParameters,{config:s,projectionConfig:i,colormapConfig:r,pixelMaskConfig:a,projectionDefines:o}=this._getCommonConfig(t),n=this._getInterpolationDefines(t.interpolation,!0);return{shader:this.shaders.shadedRelief,uniforms:{projectionConfig:i,config:s,hillshadeConfig:e,colormapConfig:r,pixelMaskConfig:a},defines:{...o,...n,isMultidirectional:e.hillshadeType>0,applyColormap:!!r,applyPixelMask:!!a},optionalAttributes:null,useComputeBuffer:!1}}_getCommonConfig(t){const{coordScale:e,computedOpacity:s,transforms:i}=t,{names:r,textures:a}=t.getTextures({useProcessedTexture:t.processed}),o=a[r.indexOf("u_image")],n=t.getRasterTextureSize(),u={texture:{texture:o,unit:0},dvsMat3:i.displayViewScreenMat3,coordScale:e,srcImageSize:n,opacity:s},c=a[r.indexOf("u_transformGrid")],{transformGrid:h}=t,d=!(!c||!h),y=d?{transformTexture:{texture:c,unit:2},targetImageSize:[t.width,t.height],transformSpacing:h.spacing,transformGridSize:h.size}:void 0,g=a[r.indexOf("u_colormap")],{colormap:b,colormapOffset:v}=t.symbolizerParameters,S=g&&b?{colormapTexture:{texture:g,unit:1},colormapOffset:v??0,colormapMaxIndex:b.length/4-1}:void 0,k=a[r.indexOf("u_mask")];return{config:u,projectionConfig:y,colormapConfig:S,pixelMaskConfig:k?{maskTexture:{texture:k,unit:3}}:void 0,projectionDefines:{applyProjection:d,lookupProjection:d&&h.spacing[0]===1}}}_getInterpolationDefines(t,e){const s=t==="bilinear"&&e;return{bilinear:s,bicubic:t==="cubic",nearestOnEdge:s}}};function Qt(t,e){const s=new Ci;return s.width=t,s.height=e,s.internalFormat=As.RGBA32F,s.samplingMode=Je.NEAREST,s.dataType=Gs.FLOAT,s.isImmutable=!0,s.wrapMode=Ls.CLAMP_TO_EDGE,s}function Ki(t,e,s){const i=Qt(e,s);return new Ti(t,i)}function $t(t,e,s){const i=Qt(e,s);return new vi(t,i)}let F=class extends it{shutdown(t){super.shutdown(t),this._fbo?.dispose(),this._fbo=void 0}render(t,e){const{rasterFunction:s}=t;if(!s)return;const{context:i}=t,r="indexedColormap"in s.parameters?Xe(i,s.parameters.indexedColormap):void 0,a=s.name==="Reproject",o=i.getBoundFramebufferObject(),n=i.getViewport();for(const u of e.bitmaps){const c=a?!(u.rasterTexture&&u.projected):!u.processed;if(!u.source||!c||u.suspended)continue;t.timeline.begin(this.name);const{painter:h}=t;h.setPipelineState({depth:!1,stencil:{test:!1,write:!1},color:{write:[!0,!0,!0,!0],blendMode:"custom",blendParameters:{srcRGB:Le.ONE,dstRGB:Le.ZERO,srcAlpha:Le.ONE,dstAlpha:Le.ZERO}}}),a||(u.processedTexture=A(u.processedTexture)),u.updateTexture(t);const[d,y]=u.getRasterTextureSize(a),g=d===le&&y===le,b=g?e.processorFbo:$t(i,d,y);i.bindFramebuffer(b),i.setViewport(0,0,b.width,b.height),this._process(t,u,r);const v=Ki(t.context,d,y);if(b.copyToTexture(0,0,d,y,0,0,v),a)u.rasterTexture=v;else{const S=t.hasBranches?s.id:0;u.functionTextures[S]=v}g||b.dispose(),t.timeline.end(this.name)}r?.dispose(),i.bindFramebuffer(o),i.setViewport(n.x,n.y,n.width,n.height)}_getCommonConfig(t,e){const{rasterFunction:s,hasBranches:i}=t,{raster:r,rasters:a}=s.parameters,o=i?r?.id??a?.filter(c=>c.name!=="Constant")?.[0]?.id??-1:0,n=e.functionTextures[o]??e.rasterTexture,u=s.name==="Reproject";return{texture:{texture:n,unit:0},srcImageSize:e.getRasterTextureSize(u)}}_getMultipleInputConfig(t,e){return e?.length?e.length===2?{twoRasterConfig:this._getTwoInputConfig(e,t)}:e.length===3?{threeRasterConfig:this._getThreeInputConfig(e,t)}:{}:{}}_getConstantCount(t){return t?.filter(e=>e.name==="Constant").length??0}_getTextures(t,e){return t.filter(s=>s.name!=="Constant").map(s=>s.id!=null&&s.name!=="Identity"?e.functionTextures[s.id]:e.rasterTexture)}_getTwoInputConfig(t,e){const s=this._getTextures(t,e),i=s[1]?{texture:s[1],unit:1}:void 0,r=t.findIndex(o=>o.name==="Constant"),a=r===0?new Float32Array([0,1,0,1,0,0,0,0,0]):new Float32Array([1,0,0,0,1,0,0,0,0]);return{image1:i,image1Const:r>-1?t[r].parameters.value:0,imageSwap:a}}_getThreeInputConfig(t,e){const s=this._getTextures(t,e);let i=0,r=0,a=new Float32Array([1,0,0,0,1,0,0,0,1]);const o=s[1]?{texture:s[1],unit:1}:void 0,n=s[2]?{texture:s[2],unit:2}:void 0,u=[];if(t.forEach((c,h)=>c.name==="Constant"&&u.push(h)),u.length===1)i=t[u[0]].parameters.value,a=u[0]===0?new Float32Array([0,1,0,0,0,1,1,0,0]):u[0]===1?new Float32Array([1,0,0,0,0,1,0,1,0]):new Float32Array([1,0,0,0,1,0,0,0,1]);else if(u.length===2){i=t[u[0]].parameters.value,r=t[u[1]].parameters.value;const c=t.findIndex(h=>h.name!=="Constant");a=c===0?new Float32Array([1,0,0,0,1,0,0,0,1]):c===1?new Float32Array([0,1,0,1,0,0,0,0,1]):new Float32Array([0,0,1,1,0,0,0,1,0])}return{image1:o,image2:n,image1Const:i,image2Const:r,imageSwap:a}}},Jt=class extends Mt{};l([kt(0,x)],Jt.prototype,"position",void 0);let er=class extends Ft{},lt=class extends I{};l([m(te)],lt.prototype,"texture",void 0),l([m(x)],lt.prototype,"srcImageSize",void 0);let M=class extends It{vertex(t){return{uv:t.position,glPosition:new f(_i(t.position),0,1)}}fragment(t){const e=new zt,s=Gt(t.uv),i=this._process(s);return e.fragColor=new f(i.rgb,1).multiply(i.a),e}_getPixel(t){return Lt(t,this.config)}};l([m(lt)],M.prototype,"config",void 0),l([De(0,Ue(Jt))],M.prototype,"vertex",null),l([De(0,Ue(er))],M.prototype,"fragment",null);let Yt=class extends I{};l([m(x)],Yt.prototype,"cellSize",void 0);let Xt=class extends M{constructor(){super(...arguments),this.type="AspectShader"}_process(t){const{texture:e}=this.config,s=ke(e,t,this.config.srcImageSize),i=new x(1).divide(this.aspectConfig.cellSize.multiply(8)),{x:r,y:a}=ot(s,i),o=de(a),n=s[9].multiply(W(D(r).add(D(o)))),u=D(W(r)),c=new p(3.14159265359),h=new p(0),d=B(h,o).multiply(.5).multiply(c).add(B(o,h).multiply(1.5).multiply(c)),y=Vt(new p(2.5).multiply(c).add(je(o,de(r))),new p(2).multiply(c)),g=N(d,y,u).multiply(180).divide(c);return new f(g,g,g,n)}};l([m(Yt)],Xt.prototype,"aspectConfig",void 0);let tr=class extends F{constructor(){super(...arguments),this.name="RasterAspectProcessor",this.type=z.Aspect,this.shaders={aspect:new Xt}}_process(t,e){const s={cellSize:e.getRasterCellSize()},i=this._getCommonConfig(t,e),r={shader:this.shaders.aspect,uniforms:{config:i,aspectConfig:s},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:a,context:o}=t;a.submitDrawMesh(o,r,a.quadMesh)}};function V(t){const e=W(t),s=t.add(D(e).subtract(1));return e.multiply(e).divide(s)}function we(t){return new f(H(t.rgb.add(.5)),t.a)}function Kt(t,e){return B(e.x,t).multiply(B(t,e.y))}function sr(t,e,s){const i=new w(t);let r=new w(0,0,0),a=new p(0);for(let o=0;o<s/3;o++){const n=9*o,u=new w(e[n],e[n+3],e[n+6]),c=new w(e[n+1],e[n+4],e[n+7]),h=B(u,i).multiply(B(i,c)),d=new w(e[n+2],e[n+5],e[n+8]);a=N(a,d.x,h.x),a=N(a,d.y,h.y),a=N(a,d.z,h.z),r=r.add(h)}return{mapValue:a,includeMask:W(q(r,new w(1,1,1)))}}class es extends I{}l([m(he)],es.prototype,"bandIndexMat3",void 0);let ts=class extends I{};l([m(w)],ts.prototype,"adjustments",void 0);let Fe=class extends M{constructor(){super(...arguments),this.type="BandArithmeticShader",this.isOutputRounded=!1}_process(t){const e=this._getPixel(t),s=this.bandArithmeticConfig.bandIndexMat3.multiply(e.rgb),i=this._processIndex(s),r=new f(i,i,i,e.a);return this.isOutputRounded?we(r):r}_processIndex(t){const{r:e,g:s}=t,i=this.adjustmentConfig?.adjustments;switch(this.indexType){case"ndxi":{const r=e.subtract(s),a=e.add(s);return r.multiply(V(a))}case"sr":return e.multiply(V(s));case"ci":return e.multiply(V(s)).subtract(1);case"savi":{const{x:r}=i,a=e.subtract(s),o=e.add(s).add(r);return a.multiply(V(o)).multiply(r.add(1))}case"tsavi":{const{x:r,y:a,z:o}=i,n=o.multiply(r.multiply(r).add(1)).subtract(a.multiply(r)),u=r.multiply(e.subtract(r.multiply(s)).subtract(a)),c=a.multiply(e).add(s).add(n);return u.multiply(V(c))}case"msavi":{const r=e.multiply(2).add(1),a=r.multiply(r).subtract(e.subtract(s).multiply(8));return r.subtract(se(a)).multiply(.5)}case"gemi":{const r=e.multiply(e).subtract(s.multiply(s)).multiply(2).add(e.multiply(1.5)).add(s.multiply(.5)),a=e.add(s).add(.5),o=r.multiply(V(a)),n=o.multiply(ge(o.multiply(.25))),u=s.subtract(.125).multiply(V(ge(s)));return n.subtract(u)}case"pvi":{const{x:r,y:a}=i,o=se(r.multiply(r).add(1));return e.subtract(s.multiply(r)).subtract(a).multiply(V(o))}case"vari":{const r=t.g.subtract(t.r),a=t.g.add(t.r).subtract(t.b);return r.multiply(V(a))}case"rtvicore":return e.subtract(s).multiply(100).subtract(e.subtract(t.b).multiply(10));case"bai":{const r=$(new p(.1).subtract(s),new p(2)),a=$(new p(.06).subtract(e),new p(2));return V(r.add(a))}case"evi":{const r=t.b,a=e.add(s.multiply(6)).subtract(r.multiply(7.5)).add(1);return e.subtract(s).multiply(2.5).multiply(V(a))}case"wndwi":{const{r,g:a,b:o}=t,n=i.x,u=n.multiply(a),c=n.multiply(o),h=r.add(u).add(o).subtract(c);return r.subtract(u).subtract(o).add(c).multiply(V(h))}case"mtvi":{const r=t.b,a=$(e.multiply(2).add(1),new p(2)),o=e.multiply(6).subtract(se(s).multiply(5)),n=se(a.subtract(o).subtract(.5)),u=e.subtract(r).multiply(1.2),c=s.subtract(r).multiply(2.5);return u.subtract(c).multiply(1.5).multiply(V(n))}default:return e}}};l([_],Fe.prototype,"indexType",void 0),l([_],Fe.prototype,"isOutputRounded",void 0),l([m(es)],Fe.prototype,"bandArithmeticConfig",void 0),l([ae(ts)],Fe.prototype,"adjustmentConfig",void 0);let ir=class extends F{constructor(){super(...arguments),this.name="RasterBandArithmeticProcessor",this.type=z.BandArithmetic,this.shaders={bandArithmetic:new Fe}}_process(t,e){const s=t.rasterFunction.parameters,i={indexType:s.indexType,isOutputRounded:s.isOutputRounded},r={bandIndexMat3:s.bandIndexMat3},a=s.adjustments?{adjustments:[...s.adjustments]}:void 0,o=this._getCommonConfig(t,e),n={shader:this.shaders.bandArithmetic,uniforms:{config:o,bandArithmeticConfig:r,adjustmentConfig:a},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:u,context:c}=t;u.submitDrawMesh(c,n,u.quadMesh)}},ss=class extends M{constructor(){super(...arguments),this.type="ColormapToRGBShader"}_process(t){const e=this._getPixel(t),s=ze(e,new p(1),this.colormapConfig,!1);return new f(s.xyz.multiply(255),s.a)}};l([m(ie)],ss.prototype,"colormapConfig",void 0);class rr extends F{constructor(){super(...arguments),this.name="RasterColormapToRGBProcessor",this.type=z.ColormapToRGB,this.shaders={colormapToRGB:new ss}}_process(e,s,i){const r=e.rasterFunction.parameters,a={colormapTexture:{texture:i,unit:1},colormapOffset:r.offset,colormapMaxIndex:r.indexedColormap.length/4-1},o=this._getCommonConfig(e,s),n={shader:this.shaders.colormapToRGB,uniforms:{config:o,colormapConfig:a},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:u,context:c}=e;u.submitDrawMesh(c,n,u.quadMesh)}}let Ee=class extends I{};l([m(te)],Ee.prototype,"image1",void 0),l([m(p)],Ee.prototype,"image1Const",void 0),l([m(he)],Ee.prototype,"imageSwap",void 0);let xe=class extends I{};l([m(te)],xe.prototype,"image1",void 0),l([m(te)],xe.prototype,"image2",void 0),l([m(p)],xe.prototype,"image1Const",void 0),l([m(p)],xe.prototype,"image2Const",void 0),l([m(he)],xe.prototype,"imageSwap",void 0);const ut=t=>{class e extends t{constructor(){super(...arguments),this.constantCount=0,this.imageCount=1}_getRasterValues(i){const{imageCount:r}=this;if(r===1){const a=T(this.config.texture,i);return{a:a.r,b:a.g,c:a.b,alpha:a.a}}if(r===2){const a=this._getTwoValues(i);return{a:a.a,b:a.b,c:a.b,alpha:a.alpha}}return this._getThreeValues(i)}_getTwoValues(i){const r=T(this.config.texture,i);if(this.constantCount===1){const{imageSwap:n,image1Const:u}=this.twoRasterConfig,c=n.multiply(new w(r.r,u,0));return{a:c.x,b:c.y,alpha:r.a}}const{image1:a}=this.twoRasterConfig,o=T(a,i);return{a:r.r,b:o.r,alpha:r.a.multiply(o.a)}}_getThreeValues(i){const r=T(this.config.texture,i),{imageSwap:a,image1:o,image2:n,image1Const:u,image2Const:c}=this.threeRasterConfig;if(this.constantCount===2){const y=a.multiply(new w(r.r,u,c));return{a:y.x,b:y.y,c:y.z,alpha:r.a}}if(this.constantCount===1){const y=T(o,i),g=a.multiply(new w(r.r,y.r,u));return{a:g.x,b:g.y,c:g.z,alpha:r.a.multiply(y.a)}}const h=T(o,i),d=T(n,i);return{a:r.r,b:h.r,c:d.r,alpha:r.a.multiply(h.a).multiply(d.a)}}}return l([_],e.prototype,"constantCount",void 0),l([_],e.prototype,"imageCount",void 0),l([ae(Ee)],e.prototype,"twoRasterConfig",void 0),l([ae(xe)],e.prototype,"threeRasterConfig",void 0),e};let ar=class extends ut(M){constructor(){super(...arguments),this.type="CompositeBandShader"}_process(t){const{a:e,b:s,c:i,alpha:r}=this._getRasterValues(t);return new f(e,s,i,r)}},or=class extends F{constructor(){super(...arguments),this.name="RasterCompositeBandProcessor",this.type=z.CompositeBand,this.shaders={compositeBand:new ar}}_process(t,e){const{rasters:s}=t.rasterFunction.parameters,i={constantCount:this._getConstantCount(s),imageCount:s?.length??1},r=this._getMultipleInputConfig(e,s),a=this._getCommonConfig(t,e),o={shader:this.shaders.compositeBand,uniforms:{config:a,...r},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:n,context:u}=t;n.submitDrawMesh(u,o,n.quadMesh)}};class ct extends I{}l([m(x)],ct.prototype,"domainRange",void 0);class qe extends ut(M){constructor(){super(...arguments),this.type="LocalShader",this.isOutputRounded=!1}_process(e){if(this.operationName==="conditional")return this._conditional(e);const{a:s,b:i,alpha:r}=this._getRasterValues(e),{value:a,alpha:o}=this._compute(s,i,r);return this._processResult(a,o)}_processResult(e,s){const i=Kt(e,this.domainRangeConfig.domainRange),r=new f(e,e,e,s).multiply(i);return this.isOutputRounded?we(r):r}_compute(e,s,i){const{operationName:r}=this;let a;switch(r){case"plus":a=e.add(s);break;case"minus":a=e.subtract(s);break;case"times":a=e.multiply(s);break;case"divide":case"floatdivide":a=e.multiply(V(s)),i=i.multiply(G(D(W(s))));break;case"floordivide":a=H(e.multiply(V(s))),i=i.multiply(G(D(W(s))));break;case"square":a=e.multiply(e);break;case"sqrt":a=se(e);break;case"power":a=$(e,s);break;case"ln":a=E(ne(e,new p(0)),gi(e),new p(0)),i=i.multiply(this._isAboveZero(e));break;case"log10":a=E(ne(e,new p(0)),rt(e).multiply(V(rt(new p(10)))),new p(0)),i=i.multiply(this._isAboveZero(e));break;case"log2":a=E(ne(e,new p(0)),rt(e),new p(0)),i=i.multiply(this._isAboveZero(e));break;case"exp":a=mi(e);break;case"exp10":a=$(new p(10),e);break;case"exp2":a=$(new p(2),e);break;case"rounddown":a=H(e);break;case"roundup":a=di(e);break;case"int":a=W(e).multiply(H(D(e)));break;case"mod":a=Vt(e,s);break;case"negate":a=de(e);break;case"abs":a=D(e);break;case"acos":{const o=this._isAbsBiggerThanOne(e);a=E(o,new p(0),hi(e)),i=E(o,new p(0),i);break}case"acosh":a=pi(e);break;case"asin":{const o=this._isAbsBiggerThanOne(e);a=E(o,new p(0),ci(e)),i=E(o,new p(0),i);break}case"asinh":a=ui(e);break;case"atan":a=je(e);break;case"atanh":{const o=this._isAbsBiggerThanOne(e);a=E(o,new p(0),li(e)),i=E(o,new p(0),i);break}case"atan2":a=je(e,s);break;case"cos":a=ni(e);break;case"cosh":a=oi(e);break;case"sin":a=ai(e);break;case"sinh":a=ri(e);break;case"tan":a=ii(e);break;case"tanh":a=si(e);break;case"bitwiseand":a=new p(ti(new P(e),new P(s)));break;case"bitwiseor":a=new p(ei(new P(e),new P(s)));break;case"bitwiseleftshift":a=new p(Ks(new P(e),new P(s)));break;case"bitwiserightshift":a=new p(Xs(new P(e),new P(s)));break;case"bitwisenot":a=new p(Ys(new P(e)));break;case"bitwisexor":a=new p(Js(new P(e),new P(s)));break;case"booleanand":a=G($s(oe(e,new p(0)),oe(s,new p(0))));break;case"booleanor":a=G(Qs(oe(e,new p(0)),oe(s,new p(0))));break;case"booleannot":a=G(me(e,new p(0)));break;case"booleanxor":a=G(Hs(oe(e,new p(0)),oe(s,new p(0))));break;case"greaterthan":a=G(ne(e,s));break;case"greaterthanequal":a=G(Zs(e,s));break;case"lessthan":a=G(tt(e,s));break;case"lessthanequal":a=G(Pt(e,s));break;case"equalto":a=G(me(e,s));break;case"notequal":a=G(oe(e,s));break;case"isnull":a=G(me(i,new p(0))),i=new p(1);break;case"setnull":{const o=G(me(e,new p(0)));a=o.multiply(s),i=i.multiply(o);break}default:a=e}return{value:a,alpha:i}}_conditional(e){const{a:s,b:i,c:r,alpha:a}=this._getRasterValues(e),o=new p(D(W(s))),n=N(r,i,o);return this._processResult(n,a)}_isAboveZero(e){return G(ne(e,new p(0)))}_isAbsBiggerThanOne(e){return ne(D(e),new p(1))}}l([_],qe.prototype,"operationName",void 0),l([_],qe.prototype,"isOutputRounded",void 0),l([m(ct)],qe.prototype,"domainRangeConfig",void 0);let We=class extends ut(M){constructor(){super(...arguments),this.type="ComputeChangeShader",this.isOutputRounded=!1}_process(t){const{a:e,b:s,alpha:i}=this._getRasterValues(t);let r=e.subtract(s);this.method==="relative-difference"&&(r=r.multiply(V(at(D(e),D(s)))));const a=Kt(r,this.domainRangeConfig.domainRange),o=new f(r,r,r,i).multiply(a);return this.isOutputRounded?we(o):o}};l([_],We.prototype,"method",void 0),l([_],We.prototype,"isOutputRounded",void 0),l([m(ct)],We.prototype,"domainRangeConfig",void 0);let nr=class extends F{constructor(){super(...arguments),this.name="RasterComputeChangeProcessor",this.type=z.ComputeChange,this.shaders={computeChange:new We}}_process(t,e){const s=t.rasterFunction.parameters,{rasters:i}=s,r={constantCount:this._getConstantCount(i),imageCount:i.length,method:s.method,isOutputRounded:s.isOutputRounded},a={domainRange:s.domainRange},{twoRasterConfig:o}=this._getMultipleInputConfig(e,i),n=this._getCommonConfig(t,e),u={shader:this.shaders.computeChange,uniforms:{config:n,domainRangeConfig:a,twoRasterConfig:o},defines:r,optionalAttributes:null,useComputeBuffer:!1},{painter:c,context:h}=t;c.submitDrawMesh(h,u,c.quadMesh)}},pt=class extends I{};l([m(p)],pt.prototype,"contrastOffset",void 0),l([m(p)],pt.prototype,"brightnessOffset",void 0);let is=class extends M{constructor(){super(...arguments),this.type="ContrastBrightnessShader"}_process(t){const{rgb:e,a:s}=this._getPixel(t),{contrastOffset:i,brightnessOffset:r}=this.contrastBrightnessConfig,a=new p(255),o=new p(128),n=e.multiply(200),u=a.multiply(100),c=a.multiply(2).multiply(r),h=n.subtract(u).add(c),d=yi([me(i,new p(-100)),new w(o)],[me(i,new p(100)),W(h).add(1).divide(2).multiply(a)],[ne(i,new p(0)),h.divide(new p(100).subtract(i).multiply(2)).add(o)],[!0,h.multiply(i.add(100)).divide(2e4).add(o)]);return we(new f(d,s))}};l([m(pt)],is.prototype,"contrastBrightnessConfig",void 0);class lr extends F{constructor(){super(...arguments),this.name="RasterContrastBrightnessProcessor",this.type=z.ContrastBrightness,this.shaders={contrastBrightness:new is}}_process(e,s){const i=this._getCommonConfig(e,s),r=e.rasterFunction.parameters,a={shader:this.shaders.contrastBrightness,uniforms:{config:i,contrastBrightnessConfig:r},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:o,context:n}=e;o.submitDrawMesh(n,a,o.quadMesh)}}let ht=class extends I{};l([m(wi.ofType(p,5,5,!0))],ht.prototype,"kernel",void 0),l([m(x)],ht.prototype,"clampRange",void 0);let Ne=class extends M{constructor(){super(...arguments),this.type="ConvolutionShader",this.rows=3,this.cols=3}_process(t){const{rows:e,cols:s}=this,i=new x(Math.floor(e/2),Math.floor(s/2)),{texture:r,srcImageSize:a}=this.config,o=new p(1).divide(a),{kernel:n}=this.convolutionConfig,u=fi(n,{initialValue:new f(0,0,0,1),xRange:[0,e],yRange:[0,s],callback:(h,d,y,g)=>{const b=new x(new p(y),new p(g)).subtract(i).multiply(o),v=T(r,U(t.add(b))),S=v.rgb.multiply(d).add(h.rgb),k=v.a.multiply(h.a);return new f(S,k)}}),{clampRange:c}=this.convolutionConfig;return new f(Z(u.rgb,c.x,c.y),1).multiply(u.a)}};l([_],Ne.prototype,"rows",void 0),l([_],Ne.prototype,"cols",void 0),l([m(ht)],Ne.prototype,"convolutionConfig",void 0);let ur=class extends F{constructor(){super(...arguments),this.name="RasterConvolutionProcessor",this.type=z.Convolution,this.shaders={convolution:new Ne}}_process(t,e){const s=t.rasterFunction.parameters,i={rows:s.kernelRows,cols:s.kernelCols},r={kernel:[...s.kernel],clampRange:s.clampRange},a=this._getCommonConfig(t,e),o={shader:this.shaders.convolution,uniforms:{config:a,convolutionConfig:r},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:n,context:u}=t;n.submitDrawMesh(u,o,n.quadMesh)}},rs=class extends I{};l([m(p)],rs.prototype,"zlFactor",void 0);let dt=class extends M{constructor(){super(...arguments),this.type="CurvatureShader"}_process(t){const{texture:e}=this.config,s=ke(e,t,this.config.srcImageSize),i=s[3].add(s[5]).multiply(.5).subtract(s[4]),r=s[1].add(s[7]).multiply(.5).subtract(s[4]),{zlFactor:a}=this.curvatureConfig,{curvatureType:o}=this;let n;if(o==="standard")n=de(a).multiply(i.add(r));else{const u=s[2].subtract(s[0]).add(s[6]).subtract(s[8]).divide(4),c=s[5].subtract(s[3]).divide(2),h=s[1].subtract(s[7]).divide(2),d=c.multiply(c),y=h.multiply(h),g=c.multiply(h),b=a.divide(d.add(y));n=o==="profile"?q(new w(i,r,u),new w(d,y,g)).multiply(b):q(new w(i,r,de(u)),new w(y,d,g)).multiply(de(b))}return new f(n,n,n,s[9])}};l([_],dt.prototype,"curvatureType",void 0),l([m(rs)],dt.prototype,"curvatureConfig",void 0);let cr=class extends F{constructor(){super(...arguments),this.name="RasterCurvatureProcessor",this.type=z.Curvature,this.shaders={curvature:new dt}}_process(t,e){const s=t.rasterFunction.parameters,i={curvatureType:s.curvatureType},r=e.getRasterCellSize(),a={zlFactor:200*s.zFactor/r[0]/r[1]},o=this._getCommonConfig(t,e),n={shader:this.shaders.curvature,uniforms:{config:o,curvatureConfig:a},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:u,context:c}=t;u.submitDrawMesh(c,n,u.quadMesh)}},as=class extends I{};l([m(he)],as.prototype,"bandIndexMat3",void 0);let os=class extends M{constructor(){super(...arguments),this.type="ExtractBandShader"}_process(t){const e=this._getPixel(t),s=this.extractBandConfig.bandIndexMat3.multiply(e.rgb);return new f(s,e.a)}};l([m(as)],os.prototype,"extractBandConfig",void 0);let pr=class extends F{constructor(){super(...arguments),this.name="RasterExtractBandProcessor",this.type=z.ExtractBand,this.shaders={extractBand:new os}}_process(t,e){const s={bandIndexMat3:t.rasterFunction.parameters.bandIndexMat3},i=this._getCommonConfig(t,e),r={shader:this.shaders.extractBand,uniforms:{config:i,extractBandConfig:s},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:a,context:o}=t;a.submitDrawMesh(o,r,a.quadMesh)}},ns=class extends I{};l([m(x)],ns.prototype,"clampRange",void 0);class be extends M{constructor(){super(...arguments),this.type="FocalStatisticsShader",this.rows=3,this.cols=3,this.fill=!1}_process(e){const s=this._process1(e),i=B(new p(1),s.a);if(!this.fill)return this._clamp(s.rgb,i);const r=this._getPixel(e),a=N(s.rgb,r.rgb,r.a);return this._clamp(a,i)}_clamp(e,s){const{clampRange:i}=this.focalStatisticsConfig;return new f(Z(e,i.x,i.y),1).multiply(s)}_process1(e){const{texture:s,srcImageSize:i}=this.config,{rows:r,cols:a}=this,o=new x(Math.floor(r/2),Math.floor(a/2)),n=new p(1).divide(i),u=this._getPixel(e),{statisticsType:c}=this,h=c==="min"||c==="max"?new f(u.rgb,0):new f(0,0,0,0);switch(c){case"min":return this._stat(r,a,h,(d,y,g)=>{const b=new x(new p(y),new p(g)).subtract(o).multiply(n),v=T(s,U(e.add(b))),S=st(d.rgb,v.rgb);return new f(S,d.a.add(v.a))});case"max":return this._stat(r,a,h,(d,y,g)=>{const b=new x(new p(y),new p(g)).subtract(o).multiply(n),v=T(s,U(e.add(b))),S=at(d.rgb,v.rgb);return new f(S,d.a.add(v.a))});case"mean":{const d=this._stat(r,a,h,(g,b,v)=>{const S=new x(new p(b),new p(v)).subtract(o).multiply(n),k=T(s,U(e.add(S))),R=g.rgb.add(k.rgb.multiply(k.a));return new f(R,g.a.add(k.a))}),y=d.rgb.multiply(V(d.a));return new f(y,d.a)}case"stddev":{const d=this._stat(r,a,h,(v,S,k)=>{const R=new x(new p(S),new p(k)).subtract(o).multiply(n),j=T(s,U(e.add(R))),X=v.rgb.add(j.rgb.multiply(j.a));return new f(X,v.a.add(j.a))}),y=this._stat(r,a,h,(v,S,k)=>{const R=new x(new p(S),new p(k)).subtract(o).multiply(n),j=T(s,U(e.add(R))),X=v.rgb.add(j.a.multiply(j.rgb).multiply(j.rgb));return new f(X,v.a.add(j.a))}),g=V(y.a),b=se(y.subtract(d.multiply(d).multiply(g)).multiply(g));return new f(b.rgb,d.a)}default:return u}}_stat(e=3,s=3,i,r){const a=new P(0).setMutable().setDebugName("StatColIterator"),o=new P(0).setMutable().setDebugName("StatRowIterator"),n=i.setMutable().setDebugName("StatAccumulator"),u=r(n,a,o).setDebugName("StatPredicate");return xi({iterX:a,iterY:o,accumulator:n},f,u,({out:c,iterX:h,iterY:d,accumulator:y,subgraph:g})=>`
  for (${d} = 0; ${d} < ${e}; ${d}++) {
    for (${h} = 0; ${h} < ${s}; ${h}++) {
  
    ${g.body}
  
    ${y} = ${g.varName};
    }
  }
  ${c} = ${y};
  `).setDebugName("statBody")}}l([_],be.prototype,"rows",void 0),l([_],be.prototype,"cols",void 0),l([_],be.prototype,"statisticsType",void 0),l([_],be.prototype,"fill",void 0),l([m(ns)],be.prototype,"focalStatisticsConfig",void 0);class hr extends F{constructor(){super(...arguments),this.name="RasterFocalStatisticsProcessor",this.type=z.Statistics,this.shaders={focalStatistics:new be}}_process(e,s){const i=e.rasterFunction.parameters,r={rows:i.kernelRows,cols:i.kernelCols,statisticsType:i.statisticsType,fill:i.fillNoDataOnly},a={clampRange:i.clampRange},o=this._getCommonConfig(e,s),n={shader:this.shaders.focalStatistics,uniforms:{config:o,focalStatisticsConfig:a},defines:r,optionalAttributes:null,useComputeBuffer:!1},{painter:u,context:c}=e;u.submitDrawMesh(c,n,u.quadMesh)}}class ls extends I{}l([m(w)],ls.prototype,"weights",void 0);let us=class extends M{constructor(){super(...arguments),this.type="GrayscaleShader"}_process(t){const e=this._getPixel(t),{weights:s}=this.grayscaleConfig,i=q(s,e.rgb);return new f(i,i,i,e.a)}};l([m(ls)],us.prototype,"grayscaleConfig",void 0);let dr=class extends F{constructor(){super(...arguments),this.name="RasterGrayscaleProcessor",this.type=z.Grayscale,this.shaders={grayscale:new us}}_process(t,e){const s={weights:t.rasterFunction.parameters.weights},i=this._getCommonConfig(t,e),r={shader:this.shaders.grayscale,uniforms:{config:i,grayscaleConfig:s},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:a,context:o}=t;a.submitDrawMesh(o,r,a.quadMesh)}},Ze=class extends M{constructor(){super(...arguments),this.type="HillshadeShader",this.isMultidirectional=!1}_process(t){const{texture:e}=this.config,s=ke(e,t,this.config.srcImageSize),i=Nt(s,this.hillshadeConfig,this.isMultidirectional);return new f(i.rgb.multiply(255),i.a)}};l([_],Ze.prototype,"isMultidirectional",void 0),l([m(J)],Ze.prototype,"hillshadeConfig",void 0);let mr=class extends F{constructor(){super(...arguments),this.name="RasterHillshadeProcessor",this.type=z.Hillshade,this.shaders={hillshade:new Ze}}_process(t,e){const s=t.rasterFunction.parameters,i={isMultidirectional:s.hillshadeType>0},r=e.getRasterCellSize(),a=Zt(s,r),o={...s,factor:a,minValue:0,maxValue:8e3},n=this._getCommonConfig(t,e),u={shader:this.shaders.hillshade,uniforms:{config:n,hillshadeConfig:o},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:c,context:h}=t;c.submitDrawMesh(h,u,c.quadMesh)}},gr=class extends F{constructor(){super(...arguments),this.name="RasterLocalProcessor",this.type=z.Local,this.shaders={local:new qe}}_process(t,e){const s=t.rasterFunction.parameters,i={constantCount:this._getConstantCount(s.rasters),imageCount:s.imageCount,operationName:s.operationName,isOutputRounded:s.isOutputRounded},r={domainRange:s.domainRange},a=s.operationName==="conditional"?s.rasters:s.rasters?.slice(0,2),o=this._getMultipleInputConfig(e,a),n=this._getCommonConfig(t,e),u={shader:this.shaders.local,uniforms:{config:n,domainRangeConfig:r,...o},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:c,context:h}=t;c.submitDrawMesh(h,u,c.quadMesh)}};class mt extends I{}l([m(Q.ofType(p,6))],mt.prototype,"includedRanges",void 0),l([m(Q.ofType(p,ye))],mt.prototype,"noDataValues",void 0);let gt=class extends M{constructor(){super(...arguments),this.type="MaskShader",this.isMultiband=!0}_process(t){const e=this._getPixel(t),s=this._computeNoDataFactor(e.r),i=this._computeRangeFactor(e.rgb);let r;if(this.isMultiband){const a=this._computeNoDataFactor(e.g),o=this._computeNoDataFactor(e.b),n=new w(s,a,o).multiply(i);r=n.x.multiply(n.y).multiply(n.z)}else r=s.multiply(i.x);return e.multiply(r)}_computeNoDataFactor(t){const{noDataValues:e}=this.maskConfig;let s=new w(1);for(let i=0;i<ye/3;i++){const r=3*i,a=new w(e[r+0],e[r+1],e[r+2]),o=D(W(a.subtract(t)));s=s.multiply(o)}return s.x.multiply(s.y).multiply(s.z)}_computeRangeFactor(t){const{includedRanges:e}=this.maskConfig,s=new w(e[0],e[2],e[4]),i=new w(e[1],e[3],e[5]);return B(s,t).multiply(B(t,i))}};l([_],gt.prototype,"isMultiband",void 0),l([m(mt)],gt.prototype,"maskConfig",void 0);let yr=class extends F{constructor(){super(...arguments),this.name="RasterMaskProcessor",this.type=z.Mask,this.shaders={mask:new gt}}_process(t,e){const s=t.rasterFunction.parameters,i={isMultiband:s.bandCount>1},r={includedRanges:[...s.includedRanges],noDataValues:[...s.noDataValues]},a=this._getCommonConfig(t,e),o={shader:this.shaders.mask,uniforms:{config:a,maskConfig:r},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:n,context:u}=t;n.submitDrawMesh(u,o,n.quadMesh)}};class cs extends I{}l([m(he)],cs.prototype,"bandIndexMat3",void 0);class yt extends M{constructor(){super(...arguments),this.type="NDVIShader",this.scaled=!0}_process(e){const s=this._getPixel(e),{r:i,g:r}=this.ndviConfig.bandIndexMat3.multiply(s.rgb),a=i.subtract(r),o=i.add(r),n=a.multiply(V(o));if(!this.scaled)return new f(n,n,n,s.a);const u=H(n.multiply(100).add(100.5));return new f(u,u,u,s.a)}}l([_],yt.prototype,"scaled",void 0),l([m(cs)],yt.prototype,"ndviConfig",void 0);let fr=class extends F{constructor(){super(...arguments),this.name="RasterNDVIProcessor",this.type=z.NDVI,this.shaders={ndvi:new yt}}_process(t,e){const s=t.rasterFunction.parameters,i={scaled:s.scaled},r={bandIndexMat3:s.bandIndexMat3},a=this._getCommonConfig(t,e),o={shader:this.shaders.ndvi,uniforms:{config:a,ndviConfig:r},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:n,context:u}=t;n.submitDrawMesh(u,o,n.quadMesh)}},_e=class extends I{};l([m(Q.ofType(p,3*ye))],_e.prototype,"rangeMaps",void 0),l([m(Q.ofType(p,2*ye))],_e.prototype,"noDataRanges",void 0),l([m(p)],_e.prototype,"unmatchMask",void 0),l([m(p)],_e.prototype,"replacementValue",void 0),l([m(x)],_e.prototype,"clampRange",void 0);class ft extends M{constructor(){super(...arguments),this.type="RemapShader"}_process(e){const s=this._getPixel(e),{rangeMaps:i,unmatchMask:r,clampRange:a,replacementValue:o}=this.remapConfig,{mapValue:n,includeMask:u}=sr(s.r,i,ye),c=this.replaceUnmatched?o:r.multiply(s.r),h=N(c,n,u),d=Z(h,a.x,a.y),y=this._computeNoDataFactor(s.rrr).multiply(at(r,u));return new f(d,d,d,s.a).multiply(y)}_computeNoDataFactor(e){const{noDataRanges:s}=this.remapConfig;let i=new w(0,0,0);for(let r=0;r<ye/3;r++){const a=6*r,o=new w(s[a],s[a+2],s[a+4]),n=new w(s[a+1],s[a+3],s[a+5]);i=i.add(B(o,e).multiply(B(e,n)))}return ge(W(q(i,new w(1,1,1))))}}l([m(_e)],ft.prototype,"remapConfig",void 0),l([_],ft.prototype,"replaceUnmatched",void 0);let wr=class extends F{constructor(){super(...arguments),this.name="RasterRemapProcessor",this.type=z.Remap,this.shaders={remap:new ft}}_process(t,e){const s=t.rasterFunction.parameters,i={replaceUnmatched:s.allowUnmatched&&s.replacementValue!=null},r={rangeMaps:[...s.rangeMaps],noDataRanges:[...s.noDataRanges],unmatchMask:s.allowUnmatched?1:0,replacementValue:s.replacementValue??0,clampRange:s.clampRange},a=this._getCommonConfig(t,e),o={shader:this.shaders.remap,uniforms:{config:a,remapConfig:r},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:n,context:u}=t;n.submitDrawMesh(u,o,n.quadMesh)}},xr=class extends L{constructor(){super(...arguments),this.type="ReprojectShader"}_colorize(t){return this._getPixel(t)}},br=class extends F{constructor(){super(...arguments),this.name="RasterReprojectProcessor",this.type=z.Reproject,this.shaders={reproject:new xr}}_process(t,e){const s=t.rasterFunction.parameters,i=this._getInterpolationDefines(e.interpolation,!!s.requireNNEdge),{config:r,projectionConfig:a,projectionDefines:o}=this._getReprojectConfig(e),n={shader:this.shaders.reproject,uniforms:{config:r,projectionConfig:a},defines:{...o,...i,applyPixelMask:!1},optionalAttributes:null,useComputeBuffer:!1},{interpolation:u}=e;e.interpolation="nearest";const{painter:c,context:h}=t;c.submitDrawMesh(h,n,c.quadMesh),e.interpolation=u,e.projected=!0}_getReprojectConfig(t){const{source:e}=t,{names:s,textures:i}=t.getTextures({forProcessing:!0}),r={texture:{texture:i[s.indexOf("u_image")],unit:0},dvsMat3:new Float32Array([2,0,0,0,2,0,-1,-1,0]),coordScale:[1,1],srcImageSize:[e.width,e.height],opacity:1},a=i[s.indexOf("u_transformGrid")],{transformGrid:o}=t,n=!(!a||!o);return{config:r,projectionConfig:n?{transformTexture:{texture:a,unit:1},targetImageSize:[t.width,t.height],transformSpacing:o.spacing,transformGridSize:o.size}:void 0,projectionDefines:{applyProjection:n,lookupProjection:n&&o.spacing[0]===1}}}_getInterpolationDefines(t,e){const s=t==="bilinear"&&e;return{bilinear:s,bicubic:t==="cubic",nearestOnEdge:s}}};class ps extends Ze{constructor(){super(...arguments),this.type="ShadedReliefShader"}_process(e){const s=super._process(e),{minValue:i,maxValue:r}=this.hillshadeConfig,a=this._getPixel(e),o=r.subtract(i),n=a.r.subtract(i),u=Z(n.divide(o),new p(0),new p(1)),c=ze(new f(u,u,u,1),new p(255),this.colormapConfig),h=qt(c.xyz),d=Wt(new w(h.xy,s.x.divide(255))).multiply(255);return new f(d,c.a.multiply(s.a))}}l([m(ie)],ps.prototype,"colormapConfig",void 0);class _r extends F{constructor(){super(...arguments),this.name="RasterShadedReliefProcessor",this.type=z.ShadedRelief,this.shaders={shadedRelief:new ps}}_process(e,s,i){const r=e.rasterFunction.parameters,a={isMultidirectional:r.hillshadeType>0},o=s.getRasterCellSize(),n=Zt(r,o),u={...r,factor:n},c={colormapTexture:{texture:i,unit:1},colormapOffset:r.offset,colormapMaxIndex:r.indexedColormap.length/4-1},h=this._getCommonConfig(e,s),d={shader:this.shaders.shadedRelief,uniforms:{config:h,hillshadeConfig:u,colormapConfig:c},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:y,context:g}=e;y.submitDrawMesh(g,d,y.quadMesh)}}let Ve=class extends I{};l([m(p)],Ve.prototype,"pixelSizePower",void 0),l([m(p)],Ve.prototype,"pixelSizeFactor",void 0),l([m(p)],Ve.prototype,"zFactor",void 0),l([m(x)],Ve.prototype,"cellSize",void 0);class He extends M{constructor(){super(...arguments),this.type="SlopeShader",this.isOutputRounded=!1,this.percentRise=!1}_process(e){const{cellSize:s,pixelSizePower:i,pixelSizeFactor:r,zFactor:a}=this.slopeConfig,o=$(s,new x(i)).multiply(r).add(a).divide(s.multiply(8)),{texture:n}=this.config,u=ke(n,e,this.config.srcImageSize),{x:c,y:h}=ot(u,o),d=se(c.multiply(c).add(h.multiply(h))),y=this.percentRise?d.multiply(100):je(d).multiply(57.2957795),g=new f(y,y,y,u[9]);return this.isOutputRounded?we(g):g}}l([_],He.prototype,"isOutputRounded",void 0),l([_],He.prototype,"percentRise",void 0),l([m(Ve)],He.prototype,"slopeConfig",void 0);let vr=class extends F{constructor(){super(...arguments),this.name="RasterSlopeProcessor",this.type=z.Slope,this.shaders={slope:new He}}_process(t,e){const s=t.rasterFunction.parameters,i={isOutputRounded:s.isOutputRounded,percentRise:s.slopeType==="percent-rise"},r={cellSize:e.getRasterCellSize(),pixelSizePower:s.slopeType==="adjusted"?s.pixelSizePower:0,pixelSizeFactor:s.slopeType==="adjusted"?s.pixelSizeFactor:0,zFactor:s.zFactor},a=this._getCommonConfig(t,e),o={shader:this.shaders.slope,uniforms:{config:a,slopeConfig:r},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:n,context:u}=t;n.submitDrawMesh(u,o,n.quadMesh)}};class Be extends M{constructor(){super(...arguments),this.type="StretchShader",this.isMultiband=!0,this.isOutputRounded=!1,this.useGamma=!1}_process(e){const s=this._getPixel(e);let i=Ht(s,this.stretchConfig,this.useGamma,1);return this.isMultiband||(i=new f(i.rrr,i.a)),this.isOutputRounded?we(i):i}}l([_],Be.prototype,"isMultiband",void 0),l([_],Be.prototype,"isOutputRounded",void 0),l([_],Be.prototype,"useGamma",void 0),l([m(Y)],Be.prototype,"stretchConfig",void 0);let Cr=class extends F{constructor(){super(...arguments),this.name="RasterStretchProcessor",this.type=z.Stretch,this.shaders={stretch:new Be}}_process(t,e){const s=t.rasterFunction.parameters,i={isMultiband:s.bandCount>1,isOutputRounded:s.isOutputRounded,useGamma:s.useGamma},r=this._getCommonConfig(t,e),a={shader:this.shaders.stretch,uniforms:{config:r,stretchConfig:s},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:o,context:n}=t;o.submitDrawMesh(n,a,o.quadMesh)}};const Tr=new Map([["Aspect",tr],["BandArithmetic",ir],["ColormapToRGB",rr],["CompositeBand",or],["ComputeChange",nr],["ContrastBrightness",lr],["Convolution",ur],["Curvature",cr],["ExtractBand",pr],["Grayscale",dr],["Hillshade",mr],["Local",gr],["Mask",yr],["NDVI",fr],["Remap",wr],["Reproject",br],["ShadedRelief",_r],["Slope",vr],["Statistics",hr],["Stretch",Cr]]);class Rr extends it{constructor(){super(...arguments),this.type=z.RasterProcessor,this.shaders={},this._techniques=new Map}shutdown(e){super.shutdown(e),this._fbo?.dispose(),this._fbo=void 0;for(const s of this._techniques.values())s.shutdown();this._techniques.clear()}render(e,s){this._fbo??=$t(e.context,le,le);let{name:i}=e.rasterFunction;if(i==="Arithmetic"&&(i="Local"),!this._techniques.has(i)){const r=Tr.get(i);if(!r)return;this._techniques.set(i,new r)}this._techniques.get(i).render(e,{...s,processorFbo:this._fbo})}}let Sr=class extends Rt{constructor(){super(...arguments),this.isCustomTilingScheme=!1}createTile(t){const e=this._getTileBounds(t),[s,i]=this.tileInfoView.tileInfo.size,r=this.tileInfoView.getTileResolution(t.level);return new Ei(t,r,e[0],e[3],s,i)}onAttach(){super.onAttach(),this._colorizerTechnique=new Xi,this._processorTechnique=new Rr}onDetach(){super.onDetach(),this._colorizerTechnique?.shutdown(),this._colorizerTechnique=void 0,this._processorTechnique?.shutdown(),this._processorTechnique=void 0}doRender(t){if(!this.visible||t.drawPhase!==Ke.MAP||!this._colorizerTechnique)return;const{rasterFunctionChain:e}=this;if(e?.functions?.length){if(!this._processorTechnique)return;const{functions:i,hasBranches:r}=e;for(const a of i){if(a.name==="Constant"||a.name==="Identity")continue;t.rasterFunction=a,t.hasBranches=r,super.doRender(t);const o=this.children.map(n=>n.bitmap);this._processorTechnique.render(t,{bitmaps:o})}}t.rasterFunction=null,super.doRender(t);const s=this.children.map(i=>i.bitmap);this._colorizerTechnique.render(t,{bitmaps:s})}_getTileBounds(t){const e=this.tileInfoView.getTileBounds(wt(),t);if(this.isCustomTilingScheme&&t.world){const{tileInfo:s}=this.tileInfoView,i=ks(s.spatialReference);if(i){const r=s.lodAt(t.level);if(!r)return e;const{resolution:a}=r,o=a*s.size[0];e[0]=i*t.world+s.origin.x+t.col*o,e[2]=e[0]+o}}return e}};const Pr=[0,0];let O=class extends hs{constructor(){super(...arguments),this._updatingHandles=new Pi,this._emptyTilePixelBlock=null,this._tileStrategy=null,this._tileInfoView=null,this._fetchQueue=null,this._blockCacheRegistryUrl=null,this._blockCacheRegistryId=null,this._srcResolutions=[],this.previousLOD=null,this._needBlockCacheUpdate=!1,this._globalSymbolizerParams=null,this._symbolizerParams=null,this._abortController=null,this._isCustomTilingScheme=!1,this._maxIndexedColormapSize=0,this._rasterFunctionState="na",this._globalUpdateRequested=!1,this.attached=!1,this.timeExtent=null,this.redrawOrRefetch=ds(async(t={})=>{const e=this._rasterFunctionState,s=t.reprocess||e==="gpu"&&!this.canUseWebGLForProcessing||e==="cpu"&&this.canUseWebGLForProcessing;if(s&&(await this._updatingHandles.addPromise(this.layer.updateRasterFunction()),this.updateRasterFunctionParameters()),!this.previousLOD||this.layerView.suspended)return;const i=this._rasterFunctionState,{type:r}=this;return t.refetch||r!=="raster"&&s||i==="cpu"||e==="cpu"?this._updatingHandles.addPromise(this.doRefresh()):this._updatingHandles.addPromise(this._redrawImage(t.signal))})}destroy(){this._updatingHandles.destroy()}get canUseWebGLForProcessing(){return!1}get canUseLocalSymbolizerParams(){return(this.canUseWebGLForProcessing||this.type==="rasterVF")&&!this.layerView.hasTilingEffects}get useWebGLForProcessing(){return this._get("useWebGLForProcessing")??!0}set useWebGLForProcessing(t){this._set("useWebGLForProcessing",t)}get useProgressiveUpdate(){return this._get("useProgressiveUpdate")??!0}set useProgressiveUpdate(t){if(this._tileStrategy&&this.useProgressiveUpdate!==t){this._tileStrategy.destroy(),this.container.removeAllChildren();const e=this._getCacheSize(t);this._tileStrategy=new Tt({cachePolicy:"purge",acquireTile:s=>this.acquireTile(s),releaseTile:s=>this.releaseTile(s),cacheSize:e,tileInfoView:this._tileInfoView}),this._set("useProgressiveUpdate",t),this.layerView.requestUpdate()}}update(t){this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume();const{extent:e,resolution:s,scale:i}=t.state,r=this._tileInfoView.getClosestInfoForScale(i);if(this.layer.raster){if(!this.useProgressiveUpdate||this._needBlockCacheUpdate){const a=this._srcResolutions[r.level],o="toJSON"in e?e:ms.fromJSON(e);Ot(this._blockCacheRegistryUrl,this._blockCacheRegistryId,o,s,a,this.layer.raster.ioConfig.sampling)}this._needBlockCacheUpdate=!1,this.previousLOD?.level!==r.level&&(this.previousLOD=r,this._symbolizerParams!=null&&this.canUseLocalSymbolizerParams&&this._updateSymbolizerParams(),this._tileStrategy.updateCacheSize(0))}}moveEnd(){!this.layerView.hasTilingEffects&&this.useProgressiveUpdate||(this._abortController&&this._abortController.abort(),this._abortController=new AbortController,this._fetchQueue.length===0&&this._redrawImage(this._abortController.signal).then(()=>{this._globalUpdateRequested=!1,this.layerView.requestUpdate()}));const t=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy.updateCacheSize(t),this.layerView.requestUpdate()}get updating(){return this._globalUpdateRequested||this._updatingHandles?.updating}attach(){const t=Oi();this._maxIndexedColormapSize=4*(t.maxTextureSize||4096),this._initializeTileInfo(),this._tileInfoView=new qs(this.layerView.tileInfo,this.layerView.fullExtent);const e=this._computeFetchConcurrency();this._fetchQueue=new Ws({tileInfoView:this._tileInfoView,concurrency:e,process:(i,r)=>this._fetchTile(i,r),priority:Bi.MAPVIEW_FETCH_QUEUE,scheduler:this.scheduler});const s=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy=new Tt({cachePolicy:"purge",acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),cacheSize:s,tileInfoView:this._tileInfoView}),this._updateBlockCacheRegistry()}detach(){this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null,Dt(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryUrl=this._blockCacheRegistryId=null}acquireTile(t){const e=this.container.createTile(t);return this._updatingHandles.addPromise(this._enqueueTileFetch(e)),this.layerView.requestUpdate(),this._needBlockCacheUpdate=!0,this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,e}releaseTile(t){this._fetchQueue.abort(t.key.id),this.container.removeChild(t),t.once("detach",()=>{t.destroy(),this.layerView.requestUpdate()}),this.layerView.requestUpdate()}createEmptyTilePixelBlock(t=null){const e=t==null||t.join(",")===this._tileInfoView.tileInfo.size.join(",");if(e&&this._emptyTilePixelBlock!=null)return this._emptyTilePixelBlock;t=t||this._tileInfoView.tileInfo.size;const[s,i]=t,r=new Ri({width:s,height:i,pixels:[new Uint8Array(s*i)],mask:new Uint8Array(s*i),pixelType:"u8"});return e&&(this._emptyTilePixelBlock=r),r}_getBandIds(){if(!("rasterFunctionChain"in this.container)||!this.container.rasterFunctionChain)return this.layer.bandIds;const{bandIds:t,raster:e}=this.layer,s="rasterFunction"in e?e.rasterFunction.rawInputBandIds:null;return t?.length&&s?.length&&e.rasterInfo.bandCount!==1?t.map(i=>s[Math.min(i,s.length-1)]):"rasterFunction"in e?s:t}updateRasterFunctionParameters(){}_fetchTile(t,e){const s=this._getFetchOptions(t.level,e.signal);return this.fetchTile(t,s)}_getFetchOptions(t,e){const{canUseWebGLForProcessing:s}=this,{layerView:i}=this,{tileInfo:r}=i,a=!r.isWrappable&&ki(i.view.spatialReference)!=null,o=s&&this.layer.raster.hasUniqueSourceStorageInfo,{layer:n}=this.layerView,u=n.serviceRasterInfo?.storageInfo.isBsqTile?n.bandIds:void 0;return{allowPartialFill:!0,datumTransformation:i.datumTransformation,interpolation:s?"nearest":this.layer.interpolation,registryId:this._blockCacheRegistryId,requestRawData:o,skipRasterFunction:this.type==="raster"&&this.container.rasterFunctionChain!=null,signal:e,srcResolution:this._srcResolutions[t],timeExtent:i.timeExtent,tileInfo:r,bandIds:u,disableWrapAround:a}}_getCacheSize(t){return t?40:0}_initializeTileInfo(){const{layerView:t}=this,e=t.view.spatialReference;if(this._canUseLayerLODs()){const{origin:c,lods:h}=this.layer.tileInfo,d=h.map(({scale:g})=>g),y=Bt.create({spatialReference:e,size:le,scales:d,origin:c});return t.set("tileInfo",y),void(this._srcResolutions=h.map(({resolution:g})=>({x:g,y:g})))}const{scales:s,srcResolutions:i,isCustomTilingScheme:r}=Mi(this.layer.serviceRasterInfo,e,{tileSize:le,alignGlobalDatasetWithAGOL:!0}),a=Bt.create({spatialReference:e,size:le,scales:s}),o=a.origin.x===0;gs(t.fullExtent);const{xmin:n,ymax:u}=t.fullExtent;(o||r&&a.origin.x>n)&&(a.origin=new ys({x:n,y:u,spatialReference:e})),this._isCustomTilingScheme=r,t.set("tileInfo",a),this._srcResolutions=i??[]}_canUseLayerLODs(){const{layer:t,layerView:e}=this;if(t.raster.tileType!=="Map")return!1;const{lods:s}=t.tileInfo,i=e.view.constraints?.effectiveLODs;return i?.length===s.length&&i.every(({scale:r},a)=>Math.abs(r-s[a].scale)<.001)}_computeFetchConcurrency(){const{blockBoundary:t}=this.layer.serviceRasterInfo.storageInfo,e=t[t.length-1];return(e.maxCol-e.minCol+1)*(e.maxRow-e.minRow+1)>64?2:10}async _enqueueTileFetch(t,e){if(!this._fetchQueue.has(t.key.id)){try{const s=await this._fetchQueue.push(t.key),i=this._getBandIds();let r=!this.useProgressiveUpdate||this.layerView.hasTilingEffects&&!this._globalSymbolizerParams;if(this._globalUpdateRequested&&!this.layerView.moving&&this._fetchQueue.length===0){r=!1;try{await this._redrawImage(this._abortController?.signal)}catch(n){Ce(n)&&Te.getLogger(this).error(n)}this._globalUpdateRequested=!1}this.canUseLocalSymbolizerParams&&this._symbolizerParams==null&&this._updateSymbolizerParams();const a=this._tileInfoView.getTileCoords(Pr,t.key),o=this._tileInfoView.getTileResolution(t.key);await this.updateTileSource(t,{source:s,symbolizerParams:this._symbolizerParams,globalSymbolizerParams:this._globalSymbolizerParams,suspended:r,bandIds:i,coords:a,resolution:o}),t.once("attach",()=>this.layerView.requestUpdate()),this.container.addChild(t)}catch(s){Ce(s)||Te.getLogger(this).error(s)}this.layerView.requestUpdate()}}async _redrawImage(t){if(this.container.children.length===0)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects?await this._updateGlobalSymbolizerParams(t):(this.canUseLocalSymbolizerParams&&this._updateSymbolizerParams(),this._globalSymbolizerParams=null);const e=this.container.children.map(async s=>this.updateTileSymbolizerParameters(s,{local:this._symbolizerParams,global:this._globalSymbolizerParams}));await Promise.allSettled(e),this.container.requestRender()}async _updateGlobalSymbolizerParams(t){const e=this._getFetchOptions(this.previousLOD.level,t),s=await this.layer.fetchPixels(this.layerView.view.extent,this.layerView.view.width,this.layerView.view.height,{...e,interpolation:"nearest",requestRawData:!1,skipRasterFunction:!1});if(!s?.pixelBlock)return;const{resolution:i}=this.previousLOD,r=this._getBandIds(),a=this.layer.symbolizer.generateWebGLParameters({pixelBlock:s.pixelBlock.extractBands(r),isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:i,y:i},bandIds:r});!this.canUseWebGLForProcessing&&a&&a.type==="stretch"&&this.layer.renderer&&this.layer.renderer.type==="raster-stretch"&&(a.factor=a.factor.map(o=>255*o),a.minOutput=Math.round(255*a.minOutput),a.maxOutput=Math.round(255*a.maxOutput)),this._globalSymbolizerParams=a}_updateSymbolizerParams(){const{resolution:t}=this.previousLOD,e=this._getBandIds();this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null,isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:t,y:t},bandIds:e})}_updateBlockCacheRegistry(t=!1){const{layer:e,layerView:s}=this,{raster:i}=e,{multidimensionalDefinition:r}=e.normalizeRasterFetchOptions({multidimensionalDefinition:e.multidimensionalDefinition,timeExtent:s.timeExtent}),a=i.rasterInfo.multidimensionalInfo?i.getSliceIndex(r):null,o=i.rasterInfo.storageInfo.isBsqTile&&e.bandIds?.length?e.bandIds:null,n=Ii(i.rasterId,a,o);if(n!==this._blockCacheRegistryUrl){if(this._blockCacheRegistryUrl!=null&&Dt(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryId=zi(n,i.rasterInfo),t){const{view:u}=s,c=this._tileInfoView.getClosestInfoForScale(u.scale),h=this._srcResolutions[c.level];Ot(n,this._blockCacheRegistryId,u.extent,u.resolution,h,i.ioConfig.sampling)}this._blockCacheRegistryUrl=n}}async doRefresh(){if(!this.attached||!this.previousLOD||this.layerView.suspended)return;await this.layer.updateRenderer(),this.canUseLocalSymbolizerParams&&this._updateSymbolizerParams(),this._updateBlockCacheRegistry(!0),this._fetchQueue.reset();const t=[];this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,this._tileStrategy.refresh(e=>t.push(this._enqueueTileFetch(e))),await this._updatingHandles.addPromise(Promise.allSettled(t))}};l([C()],O.prototype,"_globalUpdateRequested",void 0),l([C()],O.prototype,"attached",void 0),l([C()],O.prototype,"canUseWebGLForProcessing",null),l([C()],O.prototype,"canUseLocalSymbolizerParams",null),l([C()],O.prototype,"container",void 0),l([C()],O.prototype,"layer",void 0),l([C()],O.prototype,"layerView",void 0),l([C()],O.prototype,"scheduler",void 0),l([C()],O.prototype,"type",void 0),l([C()],O.prototype,"useWebGLForProcessing",null),l([C()],O.prototype,"useProgressiveUpdate",null),l([C()],O.prototype,"timeExtent",void 0),l([C()],O.prototype,"updating",null),O=l([Re("esri.views.2d.layers.imagery.BaseImageryTileSubView2D")],O);let ce=class extends O{constructor(){super(...arguments),this.type="raster"}get canUseWebGLForProcessing(){const{loaded:t,symbolizer:e}=this.layer;if(!t||!e)return!1;const s=e.lookup.colormapLut?.indexedColormap,i=s&&s.length>this._maxIndexedColormapSize,r=Is(this.layer.serviceRasterInfo);return!(fs("ios")&&r>4)&&this.useWebGLForProcessing&&e.canRenderInWebGL&&!i&&!(this.layer.interpolation==="majority"&&_t(this.layer))}attach(){super.attach(),this.container=new Sr(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this.updateRasterFunctionParameters()}detach(){super.detach(),this.container.removeAllChildren(),this.container=null}fetchTile(t,e){return this.layer.fetchTile(t.level,t.row,t.col,e)}updateRasterFunctionParameters(){const{raster:t,type:e}=this.layer,{container:s}=this;if(t.datasetFormat!=="Function"||e==="wcs")return s.rasterFunctionChain=null,s.children.forEach(y=>{const{bitmap:g}=y;g&&(g.suspended=!0,g.processed=!1,g.projected&&(g.invalidateTexture(),g.rasterTexture=null))}),void(this._rasterFunctionState="na");const i=this._rasterFunctionState,{rasterFunction:r,primaryRasters:a}=t,o=r.supportsGPU&&(!a||a.rasters.length<=1),n=o?r.flatWebGLFunctionChain:null,{renderer:u}=this.layer,c=!o||!n?.functions.length||u?.type==="raster-stretch"&&u.dynamicRangeAdjustment||!this.canUseWebGLForProcessing;s.rasterFunctionChain=c?null:this._addProjection(n);const h=r==null?"na":s.rasterFunctionChain?"gpu":"cpu",d=i===h||i==="na"&&h==="cpu"&&n?.functions?.length===0;s.children.forEach(y=>{const{bitmap:g}=y;g&&(g.suspended=!d,g.processed=!1,g.processedTexture=null)}),this._rasterFunctionState=h}async updateTileSource(t,e){const s=this._getBandIds(),i=this._getLayerInterpolation(),{canUseWebGLForProcessing:r}=this,{source:a,globalSymbolizerParams:o,suspended:n,coords:u,resolution:c}=e,h=this.layerView.hasTilingEffects?o:e.symbolizerParams,{bitmap:d}=t;if([d.x,d.y]=u,d.resolution=c,a?.pixelBlock!=null){const g={extent:a.extent,pixelBlock:a.pixelBlock,srcPixelSize:a.srcTilePixelSize};if(d.rawPixelData=g,r)d.source=a.pixelBlock,d.isRendereredSource=!1;else{const b=await this.layer.applyRenderer(g,o?.type==="stretch"?o:void 0);d.source=b,d.isRendereredSource=!0}d.symbolizerParameters=r?h:null,d.transformGrid=r?a.transformGrid:null}else{const g=this.createEmptyTilePixelBlock();d.source=g,d.symbolizerParameters=r?h:null,d.transformGrid=null}d.bandIds=r?s:null,d.width=this._tileInfoView.tileInfo.size[0],d.height=this._tileInfoView.tileInfo.size[1],d.interpolation=i,d.suspended=n;const{raster:y}=this.layer;if(xt(y)){const g=y.getClippingGeometry(this.layerView.view.spatialReference);if(g){const b=y.getTileExtentFromTileInfo(t.key.level,t.key.row,t.key.col,this._tileInfoView.tileInfo);d.mask=zs({srcExtent:b,geometry:g,size:[d.width,d.height]})}}d.invalidateTexture()}async updateTileSymbolizerParameters(t,e){const{local:s,global:i}=e,r=this._getBandIds(),a=this._getLayerInterpolation(),{canUseWebGLForProcessing:o}=this,{bitmap:n}=t,{rawPixelData:u}=n;o||u==null?(n.isRendereredSource&&u!=null&&(n.source=u.pixelBlock),n.isRendereredSource=!1):(n.source=await this.layer.applyRenderer(u,i?.type==="stretch"?i:void 0),n.isRendereredSource=!0),n.symbolizerParameters=o?this.layerView.hasTilingEffects?i:s:null,n.bandIds=o?r:null,n.interpolation=a,n.suspended=!1}_getLayerInterpolation(){const{interpolation:t,renderer:e}=this.layer;if(!e)return t;const s=e.type;return s==="raster-colormap"||s==="unique-value"?"nearest":e.type==="raster-stretch"&&e.colorRamp!=null?t==="bilinear"||t==="cubic"?"bilinear":"nearest":t}_addProjection(t){return t?.functions?.length&&!t.hasFocalFunction&&t.functions.unshift({name:"Reproject",parameters:{targetImageSize:this._tileInfoView.tileInfo.size,requireNNEdge:t.isSourceSingleBand},pixelType:"f32",id:0,isNoopProcess:!1}),t}};l([C()],ce.prototype,"canUseWebGLForProcessing",null),l([C()],ce.prototype,"container",void 0),l([C()],ce.prototype,"layer",void 0),l([C()],ce.prototype,"type",void 0),ce=l([Re("esri.views.2d.layers.imagery.ImageryTileView2D")],ce);class Ir extends Ct{constructor(e,s,i,r,a,o,n=null){super(e,s,i,r,a,o),this.tileData=new Ts(n),this.tileData.coordScale=[a,o],this.tileData.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.tileData.destroy(),this.tileData=null,this.stage=null}set stencilRef(e){this.tileData.stencilRef=e}get stencilRef(){return this.tileData.stencilRef}_createTransforms(){return{displayViewScreenMat3:Pe(),tileMat3:Pe()}}setTransform(e){super.setTransform(e);const s=this.resolution/(e.resolution*e.pixelRatio),i=this.transforms.tileMat3,[r,a]=this.tileData.offset,o=[this.x+r*this.resolution,this.y-a*this.resolution],[n,u]=e.toScreenNoRotation([0,0],o),{symbolTileSize:c}=this.tileData.symbolizerParameters,h=Math.round((this.width-this.tileData.offset[0])/c)*c,d=Math.round((this.height-this.tileData.offset[1])/c)*c,y=h/this.rangeX*s,g=d/this.rangeY*s;Bs(i,y,0,0,0,g,0,n,u,1),vt(this.transforms.displayViewScreenMat3,e.displayViewMat3,i),this.tileData.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}onAttach(){this.tileData.stage=this.stage}onDetach(){this.tileData.stage=null}}class zr extends Rt{constructor(){super(...arguments),this.isCustomTilingScheme=!1,this.symbolTypes=["triangle"]}createTile(e){const s=this.tileInfoView.getTileBounds(wt(),e),[i,r]=this.tileInfoView.tileInfo.size,a=this.tileInfoView.getTileResolution(e.level);return new Ir(e,a,s[0],s[3],i,r)}prepareRenderPasses(e){const s=e.registerRenderPass({name:"imagery (vf tile)",brushes:[Rs],target:()=>this.children.map(i=>i.tileData),drawPhase:Ke.MAP});return[...super.prepareRenderPasses(e),s]}doRender(e){this.visible&&e.drawPhase===Ke.MAP&&this.symbolTypes.forEach(s=>{e.renderPass=s,super.doRender(e)})}}let ve=class extends O{constructor(){super(...arguments),this._handle=null,this.type="rasterVF"}async fetchTile(t,e){e={...e,interpolation:"nearest",requestProjectedLocalDirections:!0};const s=await this.layer.fetchTile(t.level,t.row,t.col,e);return this.layer.serviceRasterInfo?.dataType==="vector-magdir"&&s?.pixelBlock&&(s.pixelBlock=await this.layer.convertVectorFieldData(s.pixelBlock,"vector-magdir",e)),s}updateTileSource(t,e){const s=e.symbolizerParams,{tileData:i}=t;i.key=t.key,i.width=this._tileInfoView.tileInfo.size[0],i.height=this._tileInfoView.tileInfo.size[1];const{symbolTileSize:r}=s,{source:a}=e;if(i.offset=this._getTileSymbolOffset(i.key,r),a?.pixelBlock!=null){const o={extent:a.extent,pixelBlock:a.pixelBlock};i.rawPixelData=o,i.symbolizerParameters=s,i.source=this._sampleVectorFieldData(a.pixelBlock,s,i.offset)}else{const o=[Math.round((this._tileInfoView.tileInfo.size[0]-i.offset[0])/r),Math.round((this._tileInfoView.tileInfo.size[1]-i.offset[1])/r)],n=this.createEmptyTilePixelBlock(o);i.source=n,i.symbolizerParameters=s}return i.invalidateVAO(),Promise.resolve()}updateTileSymbolizerParameters(t,e){const s=e.local,{symbolTileSize:i}=s,{tileData:r}=t;r.offset=this._getTileSymbolOffset(r.key,i);const a=r.symbolizerParameters.symbolTileSize;r.symbolizerParameters=s;const o=r.rawPixelData?.pixelBlock;return o!=null&&a!==i&&(r.source=this._sampleVectorFieldData(o,r.symbolizerParameters,r.offset)),Promise.resolve()}attach(){super.attach(),this.container=new zr(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this._updateSymbolType(this.layer.renderer),this._handle=Ae(()=>this.layer.renderer,t=>this._updateSymbolType(t))}detach(){super.detach(),this.container.removeAllChildren(),this._handle?.remove(),this._handle=null,this.container=null}_getTileSymbolOffset(t,e){const s=t.col*this._tileInfoView.tileInfo.size[0]%e,i=t.row*this._tileInfoView.tileInfo.size[1]%e;return[s>e/2?e-s:-s,i>e/2?e-i:-i]}_sampleVectorFieldData(t,e,s){const{symbolTileSize:i}=e;return Si(t,"vector-uv",i,s)}_updateSymbolType(t){t?.type==="vector-field"&&(this.container.symbolTypes=t.style==="wind-barb"?["scalar","triangle"]:t.style==="simple-scalar"?["scalar"]:["triangle"])}};l([C()],ve.prototype,"container",void 0),l([C()],ve.prototype,"layer",void 0),l([C()],ve.prototype,"type",void 0),ve=l([Re("esri.views.2d.layers.imagery.VectorFieldTileView2D")],ve);const kr=t=>{let e=class extends t{constructor(){super(...arguments),this.layer=null,this.tileInfo=null}get fullExtent(){try{return this.layer.loaded?this._getFullExtent():null}catch{return null}}get timeExtent(){return Di(this.layer,this.view?.timeExtent,this._get("timeExtent"))}get hasTilingEffects(){return!!(this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment)}get datumTransformation(){try{return this.layer.loaded?Fi(this.layer.fullExtent,this.view.spatialReference,!0):null}catch{return null}}supportsSpatialReference(s){try{return!this.layer.loaded||!!At(this.layer.serviceRasterInfo,s)}catch{return!1}}async fetchPopupFeaturesAtLocation(s,i){const{layer:r}=this;if(!s)throw new ws("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:r});const{popupEnabled:a}=r,o=Ai(r,i);if(!a||o==null)return[];const n=[],{value:u,magdirValue:c,processedValue:h}=await r.identify(s,{timeExtent:this.timeExtent,signal:i?.signal});let d="";if(u?.length){d=r.type==="imagery-tile"&&r.hasStandardTime()&&u[0]!=null?u.map(R=>r.getStandardTimeValue(R)).join(", "):u.join(", ");const y={ObjectId:0};y[Se.servicePixelValue]=r.type==="imagery-tile"&&xt(r.raster)?h?.join(", "):d,y[Se.rawServicePixelValue]=d;const g=r.raster?.rasterInfo??r.serviceRasterInfo,b=g?.attributeTable;if(b!=null){const{fields:R,features:j}=b,X=R.find(({name:re})=>re.toLowerCase()==="value"),Qe=y[Se.servicePixelValue],Oe=X?j.find(re=>String(re.attributes[X.name])===Qe):null;if(Oe)for(const re in Oe.attributes)Oe.attributes.hasOwnProperty(re)&&(y[Cs+re]=Oe.attributes[re])}const v=g?.dataType;v!=="vector-magdir"&&v!=="vector-uv"||(y[Se.magnitude]=c?.[0],y[Se.direction]=c?.[1]);const{multidimensionalDefinition:S}=this.layer.normalizeRasterFetchOptions({timeExtent:this.timeExtent});vs(r.rasterFields,y,S);const k=new xs({geometry:this.fullExtent?.clone(),attributes:y,layer:r,sourceLayer:r});n.push(k)}return n}async getSourceScale(){return await this.layer.load(),Vi(this.layer.serviceRasterInfo,this.view.spatialReference)}_getFullExtent(){return At(this.layer.serviceRasterInfo,this.view.spatialReference)}};return l([C()],e.prototype,"fullExtent",null),l([C()],e.prototype,"layer",void 0),l([C({readOnly:!0})],e.prototype,"timeExtent",null),l([C()],e.prototype,"tileInfo",void 0),l([C({readOnly:!0})],e.prototype,"hasTilingEffects",null),l([C()],e.prototype,"datumTransformation",null),e=l([Re("esri.views.layers.ImageryTileLayerView")],e),e};let pe=class extends kr(Li(Ps(Gi))){constructor(){super(...arguments),this._useWebGLForProcessing=!0,this._useProgressiveUpdate=!0,this.subview=null}get useWebGLForProcessing(){return this._useWebGLForProcessing}set useWebGLForProcessing(t){this._useWebGLForProcessing=t,this.subview&&"useWebGLForProcessing"in this.subview&&(this.subview.useWebGLForProcessing=t)}get useProgressiveUpdate(){return this._useWebGLForProcessing}set useProgressiveUpdate(t){this._useProgressiveUpdate=t,this.subview&&"useProgressiveUpdate"in this.subview&&(this.subview.useProgressiveUpdate=t)}get displayParameters(){const{layer:t}=this,e=this._get("displayParameters");return t.renderer&&t.visible?{bandIds:t.bandIds,renderer:t.renderer,interpolation:t.interpolation,multidimensionalDefinition:t.multidimensionalDefinition,rasterFunction:t.type==="imagery-tile"?t.rasterFunction:null}:e}update(t){this.subview?.update(t),this.notifyChange("updating")}isUpdating(){return!this.subview||this.subview.updating}attach(){this.layer.increaseRasterJobHandlerUsage(),this._updateSubview(),this.addAttachHandles([Ae(()=>this.displayParameters,(t,e)=>{const s=t.interpolation!==e?.interpolation&&(t.interpolation==="majority"||e?.interpolation==="majority")&&_t(this.layer),i=!!this.layer.serviceRasterInfo?.storageInfo?.isBsqTile&&t.bandIds?.join()!==e?.bandIds?.join(),r=t.renderer!==e?.renderer&&this._getSubviewType(e?.renderer)!==this._getSubviewType(t.renderer);r&&this._updateSubview();const a=t.multidimensionalDefinition!==e?.multidimensionalDefinition,o=t.rasterFunction!==e?.rasterFunction,n=o&&!this._useWebGLForProcessing,u=a||s||r||n||i;this.subview.redrawOrRefetch({refetch:u,reprocess:o}).catch(c=>{Ce(c)||Te.getLogger(this).error(c)}),this.notifyChange("updating")}),Ae(()=>this.layer.multidimensionalSubset??null,(t,e)=>{const{multidimensionalDefinition:s}=this.layer;s!=null&&bt(s,t)!==bt(s,e)&&(this.subview.redrawOrRefetch({refetch:!0}).catch(i=>{Ce(i)||Te.getLogger(this).error(i)}),this.notifyChange("updating"))},bs),Ae(()=>this.timeExtent,()=>{this.subview.timeExtent=this.timeExtent,this.subview.redrawOrRefetch({refetch:!0}).catch(t=>{Ce(t)||Te.getLogger(this).error(t)})},_s)])}detach(){this.layer.decreaseRasterJobHandlerUsage(),this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null}viewChange(){this.requestUpdate()}moveEnd(){this.subview.moveEnd()}doRefresh(){return this.subview?this.subview.doRefresh():Promise.resolve()}_updateSubview(){const{renderer:t}=this.layer;if(!t)return;const e=this._getSubviewType(t);if(this.subview){if(this.subview.type===e)return void this._attachSubview(this.subview);this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null}const{layer:s}=this;let i;if(i=e==="rasterVF"?new ve({layer:s,layerView:this,scheduler:this.scheduler}):e==="flow"?new Ss({layer:s,layerView:this,scheduler:this.scheduler}):new ce({layer:s,layerView:this,scheduler:this.scheduler}),"useWebGLForProcessing"in i&&(i.useWebGLForProcessing=this._useWebGLForProcessing),"useProgressiveUpdate"in i&&(i.useProgressiveUpdate=this._useProgressiveUpdate),"previousLOD"in i){const{subview:r}=this;i.previousLOD=r&&"previousLOD"in r?r.previousLOD:null}this._attachSubview(i),this.subview=i,this.requestUpdate()}_attachSubview(t){t&&!t.attached&&(t.attach(),t.attached=!0,this.container.addChildAt(t.container,0))}_detachSubview(t){t?.attached&&(this.container.removeChild(t.container),t.detach(),t.attached=!1)}_getSubviewType(t){const e=t?.type;return e==="vector-field"?"rasterVF":e==="flow"?"flow":"raster"}};l([C()],pe.prototype,"subview",void 0),l([C()],pe.prototype,"useWebGLForProcessing",null),l([C()],pe.prototype,"useProgressiveUpdate",null),l([C({readOnly:!0})],pe.prototype,"displayParameters",null),pe=l([Re("esri.views.2d.layers.ImageryTileLayerView2D")],pe);const Mr=pe;export{Mr as default};
