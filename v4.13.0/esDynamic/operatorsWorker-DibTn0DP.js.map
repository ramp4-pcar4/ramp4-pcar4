{"version":3,"file":"operatorsWorker-DibTn0DP.js","sources":["../../node_modules/@arcgis/core/arcade/geometry/operatorsWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\n*/\nimport{fromJSON as e}from\"../../geometry/support/jsonUtils.js\";function t(e,t){let r;return{loaded:!1,load:()=>r??=t().then((t=>{o[e]={loaded:!0,execute:t}}))}}function r(e){return null==e?null:e.toJSON()}const o={disjoint:t(\"disjoint\",(()=>import(\"../../geometry/operators/json/disjointOperator.js\").then((e=>e.execute)))),intersects:t(\"intersects\",(()=>import(\"../../geometry/operators/json/intersectsOperator.js\").then((e=>e.execute)))),touches:t(\"touches\",(()=>import(\"../../geometry/operators/json/touchesOperator.js\").then((e=>e.execute)))),crosses:t(\"crosses\",(()=>import(\"../../geometry/operators/json/crossesOperator.js\").then((e=>e.execute)))),within:t(\"within\",(()=>import(\"../../geometry/operators/json/withinOperator.js\").then((e=>e.execute)))),contains:t(\"contains\",(()=>import(\"../../geometry/operators/json/containsOperator.js\").then((e=>e.execute)))),overlaps:t(\"overlaps\",(()=>import(\"../../geometry/operators/json/overlapsOperator.js\").then((e=>e.execute)))),equals:t(\"equals\",(async()=>{const t=await import(\"../../geometry/operators/equalsOperator.js\");return(r,o)=>t.execute(e(r),e(o))})),relate:t(\"relate\",(async()=>{const t=await import(\"../../geometry/operators/relateOperator.js\");return(r,o,n)=>t.execute(e(r),e(o),n)})),intersection:t(\"intersection\",(()=>import(\"../../geometry/operators/json/intersectionOperator.js\").then((e=>e.execute)))),union:t(\"union\",(()=>import(\"../../geometry/operators/json/unionOperator.js\").then((e=>e.executeMany)))),difference:t(\"difference\",(async()=>{const t=await import(\"../../geometry/operators/differenceOperator.js\");return(o,n)=>r(t.execute(e(o),e(n)))})),symmetricDifference:t(\"symmetricDifference\",(async()=>{const t=await import(\"../../geometry/operators/symmetricDifferenceOperator.js\");return(o,n)=>r(t.execute(e(o),e(n)))})),clip:t(\"clip\",(async()=>{const t=await import(\"../../geometry/operators/clipOperator.js\");return(o,n)=>r(t.execute(e(o),e(n)))})),cut:t(\"cut\",(async()=>{const t=await import(\"../../geometry/operators/cutOperator.js\");return(o,n)=>t.execute(e(o),e(n)).map((e=>r(e)))})),area:t(\"area\",(async()=>{const t=await import(\"../../geometry/operators/areaOperator.js\"),{convertFromSpatialReferenceUnit:r,toAreaUnit:o}=await import(\"./unitConversion.js\");return(n,a)=>{const s=t.execute(e(n));return r(n.spatialReference,o(a),s)}})),geodeticArea:t(\"geodeticArea\",(async()=>{const t=await import(\"../../geometry/operators/geodeticAreaOperator.js\"),{convert:r,squareMeters:o,toAreaUnit:n}=await import(\"./unitConversion.js\");return await t.load(),(a,s,i)=>{const c=t.execute(e(a),{curveType:i});return r(o,n(s),c)}})),length:t(\"length\",(async()=>{const e=await import(\"../../geometry/operators/json/lengthOperator.js\"),{convertFromSpatialReferenceUnit:t,toLengthUnit:r}=await import(\"./unitConversion.js\");return(o,n)=>{const a=e.execute(o);return t(o.spatialReference,r(n),a)}})),geodeticLength:t(\"geodeticLength\",(async()=>{const t=await import(\"../../geometry/operators/geodeticLengthOperator.js\"),{convert:r,meters:o,toLengthUnit:n}=await import(\"./unitConversion.js\");return await t.load(),(a,s,i)=>{const c=t.execute(e(a),{curveType:i});return r(o,n(s),c)}})),distance:t(\"distance\",(async()=>{const t=await import(\"../../geometry/operators/distanceOperator.js\"),{convertFromSpatialReferenceUnit:r,toLengthUnit:o}=await import(\"./unitConversion.js\");return(n,a,s)=>{const i=t.execute(e(n),e(a));return r(n.spatialReference,o(s),i)}})),densify:t(\"densify\",(async()=>{const t=await import(\"../../geometry/operators/densifyOperator.js\"),{convertToSpatialReferenceUnit:o,toLengthUnit:n}=await import(\"./unitConversion.js\");return(a,s,i)=>(s=o(n(i),a.spatialReference,s),r(t.execute(e(a),s)))})),geodeticDensify:t(\"geodeticDensify\",(async()=>{const t=await import(\"../../geometry/operators/geodeticDensifyOperator.js\"),{convert:o,meters:n,toLengthUnit:a}=await import(\"./unitConversion.js\");return await t.load(),(s,i,c,p)=>(i=o(a(c),n,i),r(t.execute(e(s),i,{curveType:p})))})),generalize:t(\"generalize\",(async()=>{const t=await import(\"../../geometry/operators/generalizeOperator.js\"),{convertToSpatialReferenceUnit:o,toLengthUnit:n}=await import(\"./unitConversion.js\");return(a,s,i,c)=>(s=o(n(i),a.spatialReference,s),r(t.execute(e(a),s,c)))})),buffer:t(\"buffer\",(async()=>{const e=await import(\"../../geometry/operators/json/bufferOperator.js\"),{convertToSpatialReferenceUnit:t,toLengthUnit:r}=await import(\"./unitConversion.js\");return(o,n,a)=>(n=t(r(a),o.spatialReference,n),e.execute(o,n))})),geodesicBuffer:t(\"geodesicBuffer\",(async()=>{const e=await import(\"../../geometry/operators/json/geodesicBufferOperator.js\"),{convert:t,meters:r,toLengthUnit:o}=await import(\"./unitConversion.js\");return await e.load(),(n,a,s,i)=>(a=t(o(s),r,a),e.execute(n,a,{curveType:i}))})),offset:t(\"offset\",(async()=>{const e=await import(\"../../geometry/operators/json/offsetOperator.js\"),{convertToSpatialReferenceUnit:t,toLengthUnit:r}=await import(\"./unitConversion.js\");return(o,n,a,s)=>(n=t(r(a),o.spatialReference,n),e.execute(o,n,s))})),rotate:t(\"rotate\",(async()=>{const t=await import(\"../../geometry/operators/affineTransformOperator.js\"),{default:o}=await import(\"../../geometry/operators/support/Transformation.js\");return(n,a,s,i)=>{const c=(new o).rotate(a,s,i);return r(t.execute(e(n),c))}})),centroid:t(\"centroid\",(async()=>{const t=await import(\"../../geometry/operators/centroidOperator.js\");return o=>r(t.execute(e(o)))})),labelPoint:t(\"labelPoint\",(async()=>{const t=await import(\"../../geometry/operators/labelPointOperator.js\");return o=>r(t.execute(e(o)))})),simplify:t(\"simplify\",(()=>import(\"../../geometry/operators/json/simplifyOperator.js\").then((e=>e.execute)))),isSelfIntersecting:t(\"isSelfIntersecting\",(async()=>{const{NonSimpleResult:t}=await import(\"../../chunks/OperatorDefinitions.js\"),r=await import(\"../../geometry/operators/simplifyOGCOperator.js\"),o=new Set([5,6,7,10,11,12]);return n=>{const a=new t;return!r.isSimple(e(n),a)&&o.has(a.m_reason)}})),isSimple:t(\"isSimple\",(()=>import(\"../../geometry/operators/json/simplifyOperator.js\").then((e=>e.isSimple)))),convexHull:t(\"convexHull\",(()=>import(\"../../geometry/operators/json/convexHullOperator.js\").then((e=>e.execute)))),getNearestCoordinate:t(\"getNearestCoordinate\",(async()=>{const t=await import(\"../../geometry/operators/proximityOperator.js\");return(o,n,a)=>{const s=t.getNearestCoordinate(e(o),e(n),a);return{...s,coordinate:r(s.coordinate)}}})),getNearestVertex:t(\"getNearestVertex\",(async()=>{const t=await import(\"../../geometry/operators/proximityOperator.js\");return(o,n)=>{const a=t.getNearestVertex(e(o),e(n));return{...a,coordinate:r(a.coordinate)}}}))};function n(e,t){const r=o[e];return r.loaded?r.execute.apply(void 0,t):r.load().then((()=>n(e,t)))}export{n as invokeGeometryOp};\n"],"names":["t","o","r","n","e","a","s","i","c"],"mappings":"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","x_google_ignoreList":[0]}