const E=9999999e31,L=2e-7,S={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE],unknown:void 0,c64:void 0,c128:void 0};function N(t){return S[t]??[-34028234663852886e22,34028234663852886e22]}const w={u1:1,u2:1,u4:1,u8:1,s8:1,u16:2,s16:2,u32:4,s32:4,f32:4,f64:8,unknown:4,c64:16,c128:32};function U(t){return w[t]}function V(t){return U(t.pixelType)*t.bandCount}function v(t,n){return t==null||n==null?"s32":t<0?t>=-128&&n<128?"s8":t>=-32768&&n<32768?"s16":"s32":n<256?"u8":n<65536?"u16":"u32"}function A(t){return(t?.startsWith("s")||t?.startsWith("u"))??!1}function C(t,n,u,r){let[i,l]=N(u);const e=A(u);return e&&(i-=1e-5,l+=1e-5),e?u.startsWith("u")?O(t,n,r,[i,l]):P(t,n,r,[i,l]):T(t,n,r,[i,l])}function I(t,n){for(let u=0;u<n.length;u++)n[u]&&isNaN(t[u])&&(n[u]=0,t[u]=0)}function O(t,n,u,r){const[i,l]=r;for(let e=0;e<n.length;e++)if(n[e]){const o=t[e];o<i||o>l?n[e]=0:u[e]=o+.5|0}}function P(t,n,u,r){const[i,l]=r;for(let e=0;e<n.length;e++)if(n[e]){const o=t[e];o<i||o>l?n[e]=0:u[e]=o+(o>0?.5:-.5)|0}}function T(t,n,u,r){const[i,l]=r;for(let e=0;e<n.length;e++)if(n[e]){const o=t[e];o<i||o>l?n[e]=0:u[e]=o}}function W(t,n,u){if(t.depthCount&&t.depthCount>1)return;const{pixels:r,statistics:i,pixelType:l}=t,e=r[0].length,o=t.bandMasks??[],m=t.mask??new Uint8Array(e).fill(255),x=l==="f32"||l==="f64",k=N(l);let d=!1;for(let s=0;s<r.length;s++){const f=typeof n=="number"?n:n[s];if(f==null)continue;const p=i?.[s]?.minValue??k[0],b=i?.[s]?.maxValue??k[1];if(p>f+Number.EPSILON||b<f-Number.EPSILON)continue;const h=o[s]||m.slice(),a=r[s],M=u?.customFloatTolerance;if(x&&M!==0){let c=M;c||(c=Math.abs(f)>=E?L*Math.abs(f):l==="f32"?2**-23:Number.EPSILON);for(let g=0;g<a.length;g++)h[g]&&Math.abs(a[g]-f)<c&&(a[g]=0,h[g]=0,m[g]=0,d=!0)}else for(let c=0;c<a.length;c++)h[c]&&a[c]===f&&(a[c]=0,h[c]=0,m[c]=0,d=!0);o[s]=h}if(d){const s=t.bandMasks||t.pixels.length>1?o:null;u?.matchAllNoData?t.mask=s&&s.length>1?y(s):m:(t.bandMasks=s,t.mask=m)}function y(s){if(s.length<2)return s[0];const f=s[0].length,p=new Uint8Array(f).fill(0);for(let b=0;b<s.length;b++){const h=s[b];for(let a=0;a<f;a++)h[a]&&(p[a]=255)}return p}d&&"updateStatistics"in t&&t.updateStatistics()}export{C as c,I as f,W as g,v as i,V as l,A as r,N as u};
