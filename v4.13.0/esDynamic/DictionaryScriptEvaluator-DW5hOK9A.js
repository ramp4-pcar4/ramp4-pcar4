import{i as l,s as m}from"./main-BFDurRCu.js";import{r as g}from"./Version-CnwD6MZa.js";import{Z as p}from"./FieldsIndex-Bt0Y8aWr.js";import{m as h,f as y}from"./ArcadeExpression-XjY3x7KV.js";class d{static async from(e,r,t){const n=e.dictionary_version?g.parse(e.dictionary_version):null,o=new Set(e.itemsNames),s={};if(r)for(const i in r)s[i]=r[i];if(e.authoringInfo.configuration)for(const i of e.authoringInfo.configuration)s.hasOwnProperty(i.name)||(s[i.name]=i.value);const a=new Set(e.authoringInfo.symbol);for(const i of Object.keys(t))a.delete(i);a.size&&l.getLogger("esri.renderers.support.DictionaryScriptEvaluator").warnOnce("missing-fields: fieldMap entries for the following symbol fields are missing",{symbolFields:a});const u=await h(e.expression,null,s);if(!u)throw new m("dictionary-renderer:expression-error","Unable to create dictionary renderer expression");const c=!n||!n.greaterEqual(4,0);c&&l.getLogger("esri.renderers.support.DictionaryScriptEvaluator").warnOnce("Dictionary script does not support native field types. Applying fallback",{version:n});const f=new _(t,c);return new d(c,o,u,f)}constructor(e,r,t,n){this._requiresFieldCoercionToString=e,this._itemNames=r,this._compiled=t,this._reader=n}get itemNames(){return this._itemNames}evaluate(e,r,t,n){try{return this._reader.bind(e,t,n),this._compiled.evaluate(this._reader,{$view:{scale:r}})}catch(o){l.getLogger("esri.renderers.support.DictionaryScriptEvaluator").warnOnce("arcade: dictionary script evaluation failed",{error:o})}return null}createDictionaryFieldsIndex(e){if(!this._requiresFieldCoercionToString)return new p(e);const r=e.map(t=>({...t,type:"esriFieldTypeString"}));return new p(r)}}class _ extends y{constructor(e,r){super(),this._fieldMap=e,this._requiresFieldCoercionToString=r}_getField(e){const r=this._fieldMap[e]??e;return this._boundSchema.fieldsIndex.get(r)}field(e){if(!this._requiresFieldCoercionToString)return super.field(e,!1);const r=this._getField(e);return r==null||this._boundTarget.attributes[r.name]==null?"":""+this._boundTarget.attributes[r.name]}}export{d as s};
