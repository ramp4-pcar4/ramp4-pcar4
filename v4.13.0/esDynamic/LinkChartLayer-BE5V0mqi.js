import{V as j,b$ as Le,s as W,ab as Ie,ae as Ee,i as E,bZ as $,aS as P,O as q,R as he,u as _e,c2 as de,al as we,en as Se,v as w,x as M,z as Ae}from"./main-BFDurRCu.js";import{I as K,E as Re,D as ze,C as Fe,o as Ge,g as Pe,i as ce,a as Oe,b as Be,c as Ue,_ as je,P as $e,A as Qe,v as We,d as z,e as He,f as ee,u as Me}from"./KnowledgeGraphSublayer-BpP550Rh.js";import{S as Ve}from"./MultiOriginJSONSupport-BqiFJbbt.js";import{h as qe}from"./Layer-DvVVmz9x.js";import{u as Y}from"./featureConversionUtils-Bjjlcfdo.js";import{_ as C,I as te,t as ae,S as A,o as Ke}from"./constants-5AlnYBiV.js";import{p as Ye}from"./BlendLayer-DjW_5k0v.js";import{b as Ze,y as Je}from"./OperationalLayer-CbXUnTH0.js";import{t as Xe}from"./ScaleRangeLayer-x42fwED3.js";import{u as et}from"./knowledgeGraphService-bSKUKu5m.js";var Z;(function(e){e.MULTIPLIER="multiplier",e.ABSOLUTE="absolute-value"})(Z||(Z={}));let f=class extends Ze(Ye(Xe(Ve(qe)))){constructor(e){if(super(e),this.url=null,this.dataPreloadedInLocalCache=!1,this.initializationLinkChartConfig=null,this.membershipModified=!0,this._currentLinkChartConfig={layoutMode:"organic-standard"},this._graphTypeLookup=new Map,this.dataManager=null,this.knowledgeGraph=null,this.layers=new(j.ofType(K)),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map,this.linkChartExtent=new Le({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7}),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="LinkChartLayer",this.sublayerIdsCache=new Map,this.tables=new(j.ofType(K)),this.type="link-chart",this.chronologicalAuxiliaryGraphics=null,this._originalInclusionList=e?.initializationInclusionModeDefinition,e?.dataPreloadedInLocalCache&&!e?.initializationInclusionModeDefinition)throw new W("knowledge-graph:linkchart-layer-constructor","If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it");this.addHandles(Ie(()=>this.layers.concat(this.tables),(t,a)=>this._handleSublayersChange(t,a),Ee))}normalizeCtorArgs(e){if(!e)return{};const{url:t,title:a,dataPreloadedInLocalCache:n,initializationLinkChartConfig:i}=e;return{url:t,title:a,dataPreloadedInLocalCache:n,initializationLinkChartConfig:i}}_initializeLayerProperties(e){if(!this.title&&this.url){const s=this.url.split("/");this.title=s[s.length-2]}const t=new Set;let a=[],n=[];if(e.inclusionModeDefinition&&(!e.inclusionModeDefinition.namedTypeDefinitions||e.inclusionModeDefinition.namedTypeDefinitions.size<1))throw new W("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");e.inclusionModeDefinition?.generateAllSublayers?(a=e.knowledgeGraph.dataModel.entityTypes??[],n=e.knowledgeGraph.dataModel.relationshipTypes??[]):e.inclusionModeDefinition?.namedTypeDefinitions&&e.inclusionModeDefinition?.namedTypeDefinitions.size>0?e.inclusionModeDefinition?.namedTypeDefinitions.forEach((s,r)=>{const h=this._graphTypeLookup.get(r);if(!h)return E.getLogger(this).warn(`A named type, ${r}, was in the inclusion list that wasn't in the data model and will be removed`),void e.inclusionModeDefinition?.namedTypeDefinitions.delete(r);h.type==="relationship"?t.has(r)||(t.add(r),n.push(h)):h.type==="entity"?t.has(r)||(t.add(r),a.push(h)):(E.getLogger(this).warn(`A named type, ${r}, was in the inclusion list that wasn't properly modeled and will be removed`),e.inclusionModeDefinition?.namedTypeDefinitions.delete(r))}):(a=e.knowledgeGraph.dataModel.entityTypes??[],n=e.knowledgeGraph.dataModel.relationshipTypes??[]);const i=new Re({knowledgeGraph:e.knowledgeGraph,inclusionModeDefinition:e.inclusionModeDefinition});this.knowledgeGraph=e.knowledgeGraph,this.memberEntityTypes=a,this.memberRelationshipTypes=n,this.dataManager=i}load(e){const t=async()=>{const a=[],n=[];this.loadLayerAssumingLocalCache(),this._layersLoadedFromAuthoritativeItem()||await ce(this),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(i=>{i.useAllData=!1}),await this._initializeDiagram(),this.layers.forEach(i=>{n.push(i.refreshCachedQueryEngine()),a.push(new Promise(s=>{i.on("layerview-create",()=>{s(null)})}))}),this.tables.forEach(i=>{n.push(i.refreshCachedQueryEngine())}),await Promise.all(n)};return this.addResolvingPromise(new Promise(a=>{et(this.url).then(async n=>{n.dataModel.entityTypes?.forEach(s=>{s.name&&this._graphTypeLookup.set(s.name,s)}),n.dataModel.relationshipTypes?.forEach(s=>{s.name&&this._graphTypeLookup.set(s.name,s)});const i=this.linkChart?.linkChartProperties;if(i?.originIdOf("entitiesUrl")===$.LINK_CHART&&(this.membershipModified=!1,this._originalInclusionList=await ze.fetchAndConvertSerializedLinkChart({entitiesUrl:i?.entitiesUrl,relationshipsUrl:i?.relationshipsUrl}),this._alignLayersDataModelAndInclusionDefinition(n.dataModel),this.initializationLinkChartConfig={layoutSettings:i?.layoutSettings??void 0,layoutMode:Fe(i.layoutType)}),this._initializeLayerProperties({knowledgeGraph:n,inclusionModeDefinition:this._originalInclusionList}),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},this.dataManager.knowledgeGraph.dataModel.entityTypes?.forEach(s=>{s.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(s.name,{useAllData:!0})}),this.dataManager.knowledgeGraph.dataModel.relationshipTypes?.forEach(s=>{s.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(s.name,{useAllData:!0})})),this.dataPreloadedInLocalCache){const s=Ge.getInstance();for(const[r,h]of this.dataManager.inclusionModeDefinition?.namedTypeDefinitions??[])for(const p of h.members?.values()??[]){const y=s.readFromStoreById(`${r}__${p.id}`);y&&P(this.dataManager.sublayerCaches,r,()=>new Map).set(p.id,y)}await t()}else{const s=this.initializationLinkChartConfig?.layoutMode==="geographic-organic-standard";this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,s,!0).then(async()=>{q(e),await t()}))}a(null)})})),Promise.resolve(this)}set initializationInclusionModeDefinition(e){this.loadStatus!=="loaded"&&this.loadStatus!=="failed"?this._set("initializationInclusionModeDefinition",e):E.getLogger(this).error("#initializationInclusionModeDefinition","initializationInclusionModeDefinition cannot be changed after the layer is loaded.")}get linkChart(){return this.parent}async addRecords(e,t){let a=[];t?.cascadeAddRelationshipEndNodes&&this.dataManager.knowledgeGraph.dataModel&&(a=await Pe(e,this.dataManager.knowledgeGraph));const n=e.concat(a).filter(i=>!this.sublayerIdsCache.get(i.typeName)?.has(i.id));n.length>0&&(this.membershipModified=!0),await this._handleNewRecords(n,t)}async createSublayerForNamedType(e){await this.load();const t=this._graphTypeLookup.get(e);if(!t)throw new W("knowledge-graph:missing-type","The specified type does not exist in the knowledge graph.");if(this.dataManager.sublayerCaches.has(e))throw new W("knowledge-graph:duplicate-type","The specified type already exists as a sublayer.");this.dataManager.sublayerCaches.set(e,new Map),P(this.sublayerIdsCache,e,()=>new Set);const a=this._createSublayer(t);return t.type==="entity"?this.dataManager.entityTypeNames.add(e):this.dataManager.relationshipTypeNames.add(e),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.set(e,{useAllData:!1,members:new Map}),a.geometryType?this.layers.push(a):this.tables.push(a),await ce(this,[e]),this._refreshNamedTypes(),a}async removeRecords(e,{cascadeRemoveRelationships:t=!0,recalculateLayout:a=!1,overrideMembershipCheck:n=!1}={cascadeRemoveRelationships:!0,recalculateLayout:!1,overrideMembershipCheck:!1}){let i=[];for(const h of e)(n||this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(h.typeName)?.useAllData===!1&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(h.typeName)?.members?.has(h.id))&&i.push(h);if(t){const h=new Set,p=[];for(const y of i)if(this.dataManager.nodeConnectionsLookup.has(y.id))for(const g of this.dataManager.nodeConnectionsLookup.get(y.id))h.add(g);for(const y of h)if(this.dataManager.memberIdTypeLookup.has(y))for(const g of this.dataManager.memberIdTypeLookup.get(y))this.dataManager.relationshipTypeNames.has(g)&&p.push({id:y,typeName:g});i=i.concat(p)}this.dataManager.removeFromLayer(i);for(const h of i)this.sublayerIdsCache.get(h.typeName)?.delete(h.id),this.dataManager.relationshipTypeNames.has(h.typeName)?this.relationshipLinkChartDiagramLookup.delete(h.id):this.entityLinkChartDiagramLookup.delete(h.id);const s=a?void 0:this.getCurrentNodeLocations();await this._calculateLayoutWithSublayerTimeInfo(this._currentLinkChartConfig.layoutMode,{layoutSettings:this._currentLinkChartConfig.layoutSettings,lockedNodeLocations:s}),i.length>0&&(this.membershipModified=!0);const r=[];return this.layers.forEach(h=>{r.push(h.refreshCachedQueryEngine())}),await Promise.all(r),this._refreshNamedTypes(),i}async expand(e,t){let a=[];try{const n=await this.dataManager.getConnectedRecordIds(e,t?.relationshipTypeNames,t);a=n.filter(i=>!this.sublayerIdsCache.get(i.typeName)?.has(i.id)),await this._handleNewRecords(a,t),n.length>0&&(this.membershipModified=!0),q(t?.signal)}catch(n){throw he(n)&&a.length>0&&await this.removeRecords(a,{overrideMembershipCheck:!0}),n}return{records:a}}loadLayerAssumingLocalCache(){const e=[...this.memberRelationshipTypes,...this.memberEntityTypes];this.layers.length||this.originIdOf("tables")===$.DEFAULTS?this.originIdOf("layers")===$.DEFAULTS?this._createSublayers(e,this.layers,t=>!!t.geometryType):this._updateSublayers(e,this.layers):this.layers=new j,this.tables.length||this.originIdOf("layers")===$.DEFAULTS?this.originIdOf("tables")===$.DEFAULTS?this._createSublayers(e,this.tables,t=>!t.geometryType):this._updateSublayers(e,this.tables):this.tables=new j,this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach((t,a)=>{const n=P(this.sublayerIdsCache,a,()=>new Set);t.members?.forEach(({id:i,linkChartLocation:s})=>{if(n.add(i),s){const r="coords"in s&&"lengths"in s?s:Y(s);this.dataManager.relationshipTypeNames.has(a)?this.relationshipLinkChartDiagramLookup.set(i,r):this.entityLinkChartDiagramLookup.set(i,r)}})})}async calculateLinkChartLayout(e="organic-standard",t){const a=[],n=[],i=[];this.dataManager.sublayerCaches.forEach((o,d)=>{this.dataManager.entityTypeNames.has(d)?o.forEach(l=>{a.push({typeName:d,feature:l})}):this.dataManager.relationshipTypeNames.has(d)&&o.forEach(l=>{n.push({typeName:d,feature:l})})}),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map;const s=new Map,r=new Map,h=new Map,p=new Map,y=new Uint8Array(a.length),g=new Float64Array(a.length),b=new Float64Array(a.length),Q=new Float64Array(a.length),S=new Float64Array(a.length),T=new Uint32Array(n.length),ie=new Uint32Array(n.length),pe=new Float64Array(n.length),ue=new Float64Array(n.length),m=[],ke="organic-standard";let ye=!1;const N=new Le({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7});let O,ge="organic-standard",u=0,D=0;const Ce=Oe.apply;switch(ge=e==="geographic-organic-standard"?ke:e,ge){case"organic-standard":O=We.apply;break;case"organic-community":O=Qe.apply;break;case"hierarchical-bottom-to-top":O=$e.apply;break;case"radial-root-centric":O=je.apply;break;case"tree-left-to-right":O=Ue.apply;break;default:O=Be.apply}let ne=!1;a.forEach(({typeName:o,feature:d})=>{if(e!=="chronological-mono-timeline"&&e!=="chronological-multi-timeline"&&t?.lockedNodeLocations?.has(d.attributes[C])){e==="geographic-organic-standard"&&this.dataManager.geographicLookup.has(o)?y[u]=z.IsGeographic:y[u]=z.None;const l=t.lockedNodeLocations.get(d.attributes[C]);g[u]=l.x,b[u]=l.y}else if(e==="geographic-organic-standard"&&this.dataManager.geographicLookup.has(o)){y[u]=z.IsGeographic;let l=null;const k=d.attributes[this.dataManager.geographicLookup.get(o).name];switch(this.dataManager.geographicLookup.get(o)?.geometryType){case"esriGeometryPoint":g[u]=k?.x,b[u]=k?.y;break;case"esriGeometryPolygon":l=k?.centroid,l?.x!=null&&l?.y!=null?(g[u]=l.x,b[u]=l.y):y[u]=z.IsMovable;break;case"esriGeometryPolyline":case"esriGeometryMultipoint":l=k?.extent?.center,l?.x!=null&&l?.y!=null?(g[u]=l.x,b[u]=l.y):y[u]=z.IsMovable;break;default:y[u]=z.IsMovable}(g[u]==null||b[u]==null||Number.isNaN(g[u])||Number.isNaN(b[u]))&&(y[u]=z.IsMovable,g[u]=0,b[u]=0)}else if(e==="chronological-mono-timeline"||e==="chronological-multi-timeline"){!ne&&t?.lockedNodeLocations?.has(d.attributes[C])&&(ne=!0);const l=t?.timeInfoByTypeName?.get(o),k=l?.startField,x=k&&l?.startField?d.attributes[k]:null;Q[u]=x?new Date(x).getTime():NaN;const L=l?.endField,I=L&&l?.endField?d.attributes[L]:null;S[u]=I?new Date(I).getTime():NaN,g[u]=0,b[u]=0,y[u]=z.IsMovable}else y[u]=z.IsMovable,g[u]=0,b[u]=0;p.set(d.attributes[C],u),m[u]={feature:d,typeName:o},u++}),ne&&E.getLogger(this).warn("Locked node locations are not supported for chronological layout at this time.  Requested node locations were ignored");let me=!1;const se=new Map;n.forEach(o=>{const d=o.feature.attributes[te],l=o.feature.attributes[ae],k=p.get(d),x=p.get(l),L=t?.timeInfoByTypeName?.get(o.typeName),I=t?.timeInfoByTypeName?L?.startField:null,R=I?o.feature.attributes[I]:null,X=L?.endField,B=X?o.feature.attributes[X]:null;if(k!==void 0&&x!==void 0){let F=d+"-"+l;e!=="chronological-mono-timeline"&&e!=="chronological-multi-timeline"||(F=F+"-"+R+"-"+B);const V=se.get(F);V?.has(o.typeName)||(T[D]=k,ie[D]=x,e!=="chronological-mono-timeline"&&e!=="chronological-multi-timeline"||(pe[D]=R?new Date(R).getTime():NaN,ue[D]=B?new Date(B).getTime():NaN),V===void 0?se.set(F,new Map([[o.typeName,D]])):V.set(o.typeName,D),D++),i.push(o)}else me=!0,this.relationshipLinkChartDiagramLookup.set(d,null)}),me&&E.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null");const Te=this._validateOrganicLayoutSettings(e,t?.layoutSettings?.organicLayoutSettings),oe=this._convertValidatedOrganicSettingsToCalculationSettings(Te);await He();let H=ee.Error,v=null;if(e==="chronological-mono-timeline"||e==="chronological-multi-timeline"){let o;({status:H,links:v,graphics:o}=Ce(()=>t?.signal?.aborted??!1,y,g,b,Q,S,T.subarray(0,D),ie.subarray(0,D),pe.subarray(0,D),ue.subarray(0,D),e==="chronological-multi-timeline",t?.layoutSettings?.chronologicalLayoutSettings)),H===ee.Success&&(this.chronologicalAuxiliaryGraphics=o)}else({status:H,links:v}=O(()=>t?.signal?.aborted??!1,y,g,b,T.subarray(0,D),ie.subarray(0,D),oe.computationBudgetTime,oe.idealEdgeLengthMultiplier,oe.repulsionRadiusMultiplier));if(q(t?.signal),H===ee.Error)throw new W("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");if(H===ee.Canceled)throw _e();for(let o=0;o<m.length;o++){if(b[o]>84.9999?b[o]=84.9999:b[o]<-84.9999&&(b[o]=-84.9999),g[o]>179.9999?g[o]=179.9999:g[o]<-179.9999&&(g[o]=-179.9999),m[o].feature.attributes[A]=new de(g[o],b[o]),s.has(m[o].typeName))s.get(m[o].typeName)?.set(m[o].feature.attributes[C],m[o].feature);else{const L=new Map;L.set(m[o].feature.attributes[C],m[o].feature),s.set(m[o].typeName,L)}h.set(m[o].feature.attributes[C],m[o].feature);const d=Y(m[o].feature.attributes[A]);this.entityLinkChartDiagramLookup.set(m[o].feature.attributes[C],m[o].feature.attributes[A]?d:null);const l=P(this.dataManager.inclusionModeDefinition.namedTypeDefinitions,m[o].typeName,()=>({useAllData:!1,members:new Map}));P(l.members,m[o].feature.attributes[C],()=>({id:m[o].feature.attributes[C],linkChartLocation:void 0})).linkChartLocation=m[o].feature.attributes[A];const{x:k,y:x}=m[o].feature.attributes[A];ye?(N.xmin=Math.min(N.xmin,k),N.xmax=Math.max(N.xmax,k),N.ymin=Math.min(N.ymin,x),N.ymax=Math.max(N.ymax,x)):(N.xmin=k-1e-7,N.xmax=k+1e-7,N.ymin=x-1e-7,N.ymax=x+1e-7,ye=!0)}if(this.linkChartExtent.xmin=N.xmin,this.linkChartExtent.xmax=N.xmax,this.linkChartExtent.ymin=N.ymin,this.linkChartExtent.ymax=N.ymax,!v)throw new W("knowledge-graph:layout-failed","Attempting to retrieve link geometry from diagram engine failed");const J=new Map,re=new Map,le=new Map,fe=new Set;for(let o=0;o<i.length;o++){const d=[],l=i[o],k=l.feature.attributes[te],x=l.feature.attributes[ae];let L=k+"-"+x;if(e==="chronological-mono-timeline"||e==="chronological-multi-timeline"){const c=t?.timeInfoByTypeName?.get(l.typeName),_=t?.timeInfoByTypeName?c?.startField:null,G=_?l.feature.attributes[_]:null,U=c?.endField;L+="-"+G+"-"+(U?l.feature.attributes[U]:null)}const I=se.get(L).get(l.typeName),R=I===0?0:v?.vertexEndIndex[I-1];if(!fe.has(I)){if(fe.add(I),v.types[I]===Me.Recursive){const c=[v.vertices[2*R],v.vertices[2*R+1]],_=[v.vertices[2*(R+1)],v.vertices[2*(R+1)+1]],G=[.5*(c[0]+_[0]),.5*(c[1]+_[1])],U=[G[0]-c[0],G[1]-c[1]],ve=[G[0]+U[1],G[1]-U[0]],xe=[G[0]-U[1],G[1]+U[0]];d.push(c),d.push(ve),d.push(_),d.push(xe),d.push(c)}else{if(v.types[I]!==Me.Regular){E.getLogger(this).warn("A relationship generated an unsupported link geometry type.  It will not be rendered");continue}for(let c=R;c<v.vertexEndIndex[I];c++)d.push([v.vertices[2*c],v.vertices[2*c+1]])}if(e!=="chronological-mono-timeline"&&e!=="chronological-multi-timeline"){const c=m[p.get(k)]?.feature.attributes[A],_=m[p.get(x)]?.feature.attributes[A];d[0][0]===c.x&&d[0][1]===c.y||(d[0]=[c.x,c.y]),d[d.length-1][0]===_.x&&d[d.length-1][1]===_.y||(d[d.length-1]=[_.x,_.y])}for(let c=1;c<d.length-1;c++)d[c][1]>85.5?d[c][1]=85.5:d[c][1]<-85.5&&(d[c][1]=-85.5),d[c][0]>179.9999?d[c][0]=179.9999:d[c][0]<-179.9999&&(d[c][0]=-179.9999);J.has(L)?J.get(L).push(d):J.set(L,[d])}const X=J.get(L);re.has(L)||(re.set(L,new Map),le.set(L,new Map));const B=re.get(L),F=le.get(L);B.has(l.typeName)||(B.set(l.typeName,X.shift()),F.set(l.typeName,0));const V=B.get(l.typeName);F.set(l.typeName,F.get(l.typeName)+1);const Ne=new we({paths:[V]});if(l.feature.attributes[A]=Ne,r.has(l.typeName))r.get(l.typeName)?.set(l.feature.attributes[C],l.feature);else{const c=new Map;c.set(l.feature.attributes[C],l.feature),r.set(l.typeName,c)}h.set(l.feature.attributes[C],l.feature);const be=Y(l.feature.attributes[A]);this.relationshipLinkChartDiagramLookup.set(l.feature.attributes[C],l.feature.attributes[A]?be:null);const De=P(this.dataManager.inclusionModeDefinition.namedTypeDefinitions,l.typeName,()=>({useAllData:!1,members:new Map}));P(De.members,l.feature.attributes[C],()=>({id:l.feature.attributes[C],linkChartLocation:void 0})).linkChartLocation=be}for(const o of i)o.feature.attributes[Ke]=le.get(o.feature.attributes[te]+"-"+o.feature.attributes[ae])?.get(o.typeName)??null;return this._currentLinkChartConfig={layoutMode:e,layoutSettings:t?.layoutSettings?.clone()},{nodes:s,links:r,idMap:h}}async applyNewLinkChartLayout(e="organic-standard",t){const a=[];await this._calculateLayoutWithSublayerTimeInfo(e,t),this.layers.forEach(n=>{a.push(n.refreshCachedQueryEngine())}),this.membershipModified=!0,await Promise.all(a),this._refreshNamedTypes()}getCurrentNodeLocations(){const e=new Map;for(const[t,a]of this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.entries()??[])this.dataManager.relationshipTypeNames.has(t)||a?.members?.forEach(n=>{const i=n.linkChartLocation;let s;const r=n.id;i&&(s="x"in i?{x:i.x,y:i.y}:{x:i.coords[0],y:i.coords[1]},e.set(r,new de({x:s.x,y:s.y})))});return e}async refreshLinkChartCache(e){await this.dataManager.refreshCacheContent(e);const t=[];this.layers.forEach(a=>{t.push(a.refreshCachedQueryEngine())}),await Promise.all(t),this._refreshNamedTypes()}async connectBetweenEntities(e,t){if(!e.length)return{records:[]};let a=[];try{let n=[];for(const i of this.dataManager.relationshipTypeNames){const s=this.sublayerIdsCache.get(i);s&&(n=n.concat(Array.from(s.keys())))}a=await this.dataManager.getRelationshipsBetweenNodes(e,n,t),await this._handleNewRecords(a,t),q(t)}catch(n){throw he(n)&&this.removeRecords(a),n}return{records:a}}async connectFromEntities(e,t){if(!e.length)return{records:[]};let a=[];try{let n=[];for(const s of this.dataManager.relationshipTypeNames){const r=this.sublayerIdsCache.get(s);r&&(n=n.concat(Array.from(r.keys())))}let i=[];for(const s of this.dataManager.entityTypeNames){const r=this.sublayerIdsCache.get(s);r&&(i=i.concat(Array.from(r)))}a=await this.dataManager.getRelationshipsFromNodes(e,i,n,t),await this._handleNewRecords(a,t),a.length>0&&(this.membershipModified=!0),q(t)}catch(n){throw he(n)&&this.removeRecords(a),n}return{records:a}}getCurrentLayout(){return this._currentLinkChartConfig.layoutMode}async _calculateLayoutWithSublayerTimeInfo(e="organic-standard",t){const a=new Map;this.layers.forEach(n=>{a.set(n.objectType.name,n.timeInfo)}),await this.calculateLinkChartLayout(e,{timeInfoByTypeName:a,...t}),this.linkChart?.handleChronologicalOverlay()}async _handleNewRecords(e,t){const a=new Set,n=[],i=this.layers.concat(this.tables);for(const r of e)this._graphTypeLookup.has(r.typeName)&&(i.some(h=>h.objectType.name===r.typeName)===!1&&(this.dataManager.sublayerCaches.set(r.typeName,new Map),a.add(r.typeName)),P(this.sublayerIdsCache,r.typeName,()=>new Set).add(r.id),n.push(r));this.dataManager.addToLayer(n);for(const r of a){const h=this._graphTypeLookup.get(r);if(h){const p=this._createSublayer(h);h.type==="entity"?this.dataManager.entityTypeNames.add(r):this.dataManager.relationshipTypeNames.add(r),p.geometryType?this.layers.push(p):this.tables.push(p)}}await ce(this,Array.from(a),t),await this.dataManager.refreshCacheContent(e.map(r=>r.id),void 0,void 0,void 0,t);const s={layoutSettings:this._currentLinkChartConfig.layoutSettings,lockedNodeLocations:new Map};for(const[r,h]of this.entityLinkChartDiagramLookup.entries())h&&s.lockedNodeLocations.set(r,new de(h.coords[0],h.coords[1]));await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode,s)}_createSublayers(e,t,a){e.forEach(n=>{const i=this._createSublayer(n);a(i)&&t.push(i),this._updateSublayerCaches(n)})}_updateSublayers(e,t){t.forEach(a=>{a.parentCompositeLayer=this;const n=e.find(i=>i.type===a.graphType&&i.name===a.graphTypeName);n&&(a.objectType=n,a.read({title:n.name},{origin:"service"}),this._updateSublayerCaches(n))})}_updateSublayerCaches({name:e}){if(!e)return;const t=this.dataManager.sublayerCaches;t.has(e)||t.set(e,new Map)}_layersLoadedFromAuthoritativeItem(){const e=this.originIdOf("layers");return e>=$.PORTAL_ITEM&&e<$.USER}async _initializeDiagram(){this.initializationLinkChartConfig?this.initializationLinkChartConfig.doNotRecalculateLayout?(this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach((e,t)=>{e?.members?.forEach(a=>{const n=a.linkChartLocation;let i;const s=a.id;if(!n)return;i="x"in n?{x:n.x,y:n.y}:{x:n.coords[0],y:n.coords[1]};const r=Y(i);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(s,r):this.entityLinkChartDiagramLookup.set(s,r),this.linkChartExtent.xmin>i.x&&(this.linkChartExtent.xmin=i.x),this.linkChartExtent.xmax<i.x&&(this.linkChartExtent.xmax=i.x),this.linkChartExtent.ymin>i.y&&(this.linkChartExtent.ymin=i.y),this.linkChartExtent.ymax<i.y&&(this.linkChartExtent.ymax=i.y)})}),this.memberRelationshipTypes.forEach(e=>{e.name&&this.dataManager.sublayerCaches.get(e.name)?.forEach(t=>{const a=this.relationshipLinkChartDiagramLookup.get(t.attributes[te]),n=this.relationshipLinkChartDiagramLookup.get(t.attributes[ae]);if(a&&n){const i=Y(new we({paths:[[[a.coords[0],a.coords[1]],[n.coords[0],n.coords[1]]]]}));this.relationshipLinkChartDiagramLookup.set(t.attributes[C],i)}else this.relationshipLinkChartDiagramLookup.set(t.attributes[C],null)})})):await this._calculateLayoutWithSublayerTimeInfo(this.initializationLinkChartConfig.layoutMode,{lockedNodeLocations:this.getCurrentNodeLocations(),...this.initializationLinkChartConfig||{}}):await this._calculateLayoutWithSublayerTimeInfo("organic-standard",{lockedNodeLocations:this.getCurrentNodeLocations()})}_refreshNamedTypes(){for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}_validateOrganicLayoutSettings(e,t){const a=T=>typeof T=="number"&&!isNaN(T),n=T=>a(T)&&T>=1,i=T=>a(T)&&T>=1,s=T=>Object.values(Z).includes(T),r=T=>a(T)&&T>=0,h={};if(!new Set(["organic-standard","organic-community","geographic-organic-standard","chronological-multi-timeline","chronological-mono-timeline"]).has(e)||!t)return h;const{computationBudgetTime:p,autoRepulsionRadius:y,repulsionRadiusMultiplier:g,absoluteIdealEdgeLength:b,multiplicativeIdealEdgeLength:Q,idealEdgeLengthType:S}=t;return i(p)?h.computationBudgetTime=p:p&&E.getLogger(this).warn("Invalid layout computationBudgetTime setting, will revert to default setting"),h.autoRepulsionRadius=y,!y&&n(g)?h.repulsionRadiusMultiplier=g:y||(h.autoRepulsionRadius=!0,E.getLogger(this).warn("Invalid layout repulsionRadiusMultiplier setting, will revert to default setting")),e==="geographic-organic-standard"&&(s(S)?h.idealEdgeLengthType=S:S!==void 0&&E.getLogger(this).warn('Invalid layout idealEdgeLengthType setting, will revert to "multiplier" setting'),S==="absolute-value"&&r(b)?h.absoluteIdealEdgeLength=b:S==="absolute-value"&&b!==void 0?E.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting"):S==="multiplier"&&r(Q)?h.multiplicativeIdealEdgeLength=Q:S==="multiplier"&&Q!==void 0&&E.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting")),h}_convertValidatedOrganicSettingsToCalculationSettings(e){let t=e.idealEdgeLengthType===Z.ABSOLUTE?e.absoluteIdealEdgeLength:e.multiplicativeIdealEdgeLength;return e.idealEdgeLengthType===Z.ABSOLUTE&&(t===void 0?t=-1:t*=-1),{computationBudgetTime:e.computationBudgetTime??void 0,repulsionRadiusMultiplier:e.repulsionRadiusMultiplier&&!e.autoRepulsionRadius?e.repulsionRadiusMultiplier:void 0,idealEdgeLengthMultiplier:t}}_createSublayer(e){return new K({objectType:e,parentCompositeLayer:this,graphType:e.type})}_handleSublayersChange(e,t){t&&(t.forEach(a=>{a.parent=null}),this.removeHandles("sublayers-owner")),e&&(e.forEach(a=>{a.parent=this}),this.addHandles([e.on("after-add",({item:a})=>{a.parent=this}),e.on("after-remove",({item:a})=>{a.parent=null})],"sublayers-owner"))}_alignLayersDataModelAndInclusionDefinition(e){const t=new Set((e.entityTypes??[]).map(i=>i.name).concat((e.relationshipTypes??[]).map(i=>i.name))),a=new Set((e.entityTypes??[]).map(i=>i.name)),n=new Set((e.relationshipTypes??[]).map(i=>i.name));if(this.layers){for(const s of this.layers)!s.graphType&&t.has(s.graphTypeName)&&(s.graphType=a.has(s.graphTypeName)?"entity":"relationship");const i=this.layers.filter(s=>t.has(s.graphTypeName)&&(s.graphType==="entity"?a.has(s.graphTypeName):n.has(s.graphTypeName)));this.setAtOrigin("layers",i,Se(this.originIdOf("layers")))}else this.layers=new j;if(this.layers&&this._originalInclusionList){const i=new Set(this._originalInclusionList.namedTypeDefinitions.keys()),s=this.tables?.map(p=>p.graphTypeName)??[],r=this.layers.map(p=>p.graphTypeName).concat(s);for(const p of r)i.has(p)||this._originalInclusionList.namedTypeDefinitions.set(p,{useAllData:!1,members:new Map});const h=[];for(const p of this._originalInclusionList.namedTypeDefinitions.keys())r.includes(p)||(E.getLogger(this).warn(`A named type, ${p}, was in the serialized feature collection but did not have a sublayer config in the item, so will be removed`),h.push(p));for(const p of h)this._originalInclusionList.namedTypeDefinitions.delete(p)}}};w([M(Je)],f.prototype,"url",void 0),w([M()],f.prototype,"dataPreloadedInLocalCache",void 0),w([M()],f.prototype,"initializationLinkChartConfig",void 0),w([M()],f.prototype,"membershipModified",void 0),w([M()],f.prototype,"dataManager",void 0),w([M()],f.prototype,"initializationInclusionModeDefinition",null),w([M()],f.prototype,"knowledgeGraph",void 0),w([M({type:j.ofType(K),json:{write:{ignoreOrigin:!0}}})],f.prototype,"layers",void 0),w([M({readOnly:!0})],f.prototype,"linkChart",null),w([M()],f.prototype,"entityLinkChartDiagramLookup",void 0),w([M()],f.prototype,"relationshipLinkChartDiagramLookup",void 0),w([M()],f.prototype,"linkChartExtent",void 0),w([M()],f.prototype,"memberEntityTypes",void 0),w([M()],f.prototype,"memberRelationshipTypes",void 0),w([M({type:["LinkChartLayer"]})],f.prototype,"operationalLayerType",void 0),w([M()],f.prototype,"sublayerIdsCache",void 0),w([M({type:j.ofType(K),json:{write:{ignoreOrigin:!0}}})],f.prototype,"tables",void 0),w([M({json:{read:!1}})],f.prototype,"type",void 0),w([M({json:{read:!1}})],f.prototype,"chronologicalAuxiliaryGraphics",void 0),f=w([Ae("esri.layers.LinkChartLayer")],f);const tt=f;export{tt as default};
