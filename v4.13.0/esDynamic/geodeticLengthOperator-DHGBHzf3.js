import{cZ as g,c_ as _,c$ as y,a7 as b}from"./main-BFDurRCu.js";import{e as v}from"./geodeticCurveType-D_etKnbP.js";let n;function f(){return!!n&&y()}async function S(){if(!f()){const[e,r]=await Promise.all([import("./OperatorGeodeticLength-BqRcYmM1.js"),import("./ProjectionTransformation-DQ4GElxa.js").then(t=>t.aV).then(t=>t.aG).then(({injectPe:t})=>t),g()]);n=new e.OperatorGeodeticLength,r(_)}}function j(e,r,t){return n.execute(e,r,t,null)}function O(){return n.supportsCurves()}let a,p,m,u;function i(){return!!a&&f()}async function s(){if(!i()){const[e]=await Promise.all([import("./apiConverter-CSuukuP9.js"),S()]);a=e.fromGeometry,p=e.fromSpatialReference,m=e.getSpatialReference,u=O()}}function c(e,r={}){const{curveType:t="geodesic",unit:l}=r,d=m(e);let o=j(a(e),p(d),v[t]);return o&&l&&(o=b(o,"meters",l)),o}const x=Object.freeze(Object.defineProperty({__proto__:null,execute:c,isLoaded:i,load:s,get supportsCurves(){return u}},Symbol.toStringTag,{value:"Module"})),P=Object.freeze(Object.defineProperty({__proto__:null,execute:c,isLoaded:i,load:s,get supportsCurves(){return u}},Symbol.toStringTag,{value:"Module"}));export{x as f,P as g,c as l,s as m};
