import{aD as F,aC as O}from"./main-BFDurRCu.js";import{i as T}from"./CIMResourceManager-DyRf92xI.js";import{t as D,h as q,u as A}from"./CIMSymbolHelper-34UsTwam.js";import{OverrideHelper as B}from"./OverrideHelper-DgyARgwI.js";import{T as I,R as G}from"./rasterizingUtils-1wASRzSP.js";import{z}from"./utils-BfXZnjCE.js";const j=96/72;class H{constructor(o){this._spatialReference=o,this._imageDataCanvas=null,this._cimResourceManager=new T}get _canvas(){return this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas")),this._imageDataCanvas}get resourceManager(){return this._cimResourceManager}async rasterizeCIMSymbolAsync(o,a,l,R,g,s,m,c,b,M){if(!o)return null;const{data:w}=o;if(!w||w.type!=="CIMSymbolReference"||!w.symbol)return null;const{symbol:_}=w;s||(s=z(_));const n=await B.resolveSymbolOverrides(w,a,this._spatialReference,g,s,m,c),u=this._cimResourceManager,x=[];D.fetchResources(n,u,x),D.fetchFonts(n,u,x),x.length>0&&await Promise.all(x);const{width:t,height:h}=l;let y=E(s,t,h,R,M);const e=D.getEnvelope(n,y,u);if(!e)return null;e.x===1/0&&(e.x=t+2),e.y===1/0&&(e.y=-h/2),e.width===-1/0&&(e.width=t),e.height===-1/0&&(e.height=h);let d=1,S=0,v=0;switch(_.type){case"CIMPointSymbol":case"CIMTextSymbol":{let i=1;e.width>t&&(i=t/e.width);let r=1;e.height>h&&(r=h/e.height),R==="preview"&&(e.width<t&&(i=t/e.width),e.height<h&&(r=h/e.height)),d=Math.min(i,r),S=e.x+e.width/2,v=e.y+e.height/2}break;case"CIMLineSymbol":if(M){v=e.y+e.height/2,S=e.x+e.width/2;const i=e.width-t,r=e.height-h;y={paths:I(y.paths,{xmin:-1*e.width/2+i,xmax:e.width/2-i,ymin:-1*e.height/2+r,ymax:e.height/2-r,width:e.width-2*i,height:e.height-2*r})}}else{(b||e.height>h)&&(d=h/e.height),v=e.y+e.height/2;const i=e.x*d+t/2,r=(e.x+e.width)*d+t/2,C=F(y)?y.paths:O(y)?y.rings:null;if(C===null)throw new Error("Bad geometry, can't rasterise symbol!");C[0][0][0]-=i/d,C[0][2][0]-=(r-t)/d}break;case"CIMPolygonSymbol":if(M){v=e.y+e.height/2,S=e.x+e.width/2;const i=e.width-t,r=e.height-h;y={paths:I(y.rings,{xmin:-1*e.width/2+i,xmax:e.width/2-i,ymin:-1*e.height/2+r,ymax:e.height/2-r,width:e.width-2*i,height:e.height-2*r})}}else{S=e.x+e.width/2,v=e.y+e.height/2;const i=e.x*d+t/2,r=(e.x+e.width)*d+t/2,C=e.y*d+h/2,P=(e.y+e.height)*d+h/2,{rings:f}=y;i<0&&(f[0][0][0]-=i,f[0][3][0]-=i,f[0][4][0]-=i),C<0&&(f[0][0][1]+=C,f[0][1][1]+=C,f[0][4][1]+=C),r>t&&(f[0][1][0]-=r-t,f[0][2][0]-=r-t),P>h&&(f[0][2][1]+=P-h,f[0][3][1]+=P-h)}}const k={type:"cim",data:{type:"CIMSymbolReference",symbol:n}};return this.rasterize(k,t,h,S,v,d,s,1,y)}rasterize(o,a,l,R,g,s,m,c=0,b=null,M=window.devicePixelRatio||1){const{data:w}=o;if(!w||w.type!=="CIMSymbolReference"||!w.symbol)return null;const{symbol:_}=w,n=this._canvas,u=M*j;n.width=a*u,n.height=l*u,m||(m=z(_)),b||(b=E(m,a,l,"legend")),n.width+=2*c,n.height+=2*c;const x=n.getContext("2d",{willReadFrequently:!0}),t=q.createIdentity();return t.translate(-R,-g),t.scale(s*u,-s*u),t.translate(a*u/2+c,l*u/2+c),x.clearRect(0,0,n.width,n.height),new A(x,this._cimResourceManager,t,!0).drawSymbol(_,b),x.getImageData(0,0,n.width,n.height)}}function L(p,o,a,l){return o==="esriGeometryPolygon"?{rings:G(I(p.rings,{xmin:0,ymin:0,width:a,height:l}),-1*a/2,-1*l/2)}:o==="esriGeometryPolyline"?{paths:G(I(p.paths,{xmin:0,ymin:0,width:a,height:l}),-1*a/2,-1*l/2)}:null}function E(p,o,a,l,R){const g=-o/2+1,s=o/2-1,m=a/2-1,c=-a/2+1;if(R&&(p==="esriGeometryPolygon"||p==="esriGeometryPolyline")){const b=L(R,p,o,a);if(b)return b}switch(p){case"esriGeometryPoint":return{x:0,y:0};case"esriGeometryPolyline":return{paths:[[[g,0],[0,0],[s,0]]]};default:return l==="legend"?{rings:[[[g,m],[s,0],[s,c],[g,c],[g,m]]]}:{rings:[[[g,m],[s,m],[s,c],[g,c],[g,m]]]}}}export{H as CIMSymbolRasterizer};
