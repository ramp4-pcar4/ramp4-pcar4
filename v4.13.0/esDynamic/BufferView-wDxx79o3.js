import{o as ft}from"./vec2-BnynUbeJ.js";import{o as ut}from"./vec32-Cj8pVsU0.js";import{s as nt}from"./vec42-D8CJyqHG.js";import{n as ct}from"./vec2f64-CkowXrDb.js";import"./vec4f64-DD-nkcCV.js";let A=globalThis.Float16Array;function ht(...i){return new(A??Float32Array)(...i)}function o(){return A}let a=!!A,rt=class{static{this.ElementCount=9}constructor(i,t,e=0,s,r){this.TypedArrayConstructor=i,this.elementCount=9;const f=this.TypedArrayConstructor;s===void 0&&(s=9*f.BYTES_PER_ELEMENT);const u=t.byteLength===0?0:e;this.typedBuffer=r==null?new f(t,u):new f(t,u,(r-e)/f.BYTES_PER_ELEMENT),this.typedBufferStride=s/f.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride),this.stride=this.typedBufferStride*this.TypedArrayConstructor.BYTES_PER_ELEMENT}sliceBuffer(i,t,e=this.count-t){const s=this.typedBuffer.byteOffset+t*this.stride;return new i(this.buffer,s,this.stride,s+e*this.stride)}getMat(i,t){let e=i*this.typedBufferStride;for(let s=0;s<9;s++)t[s]=this.typedBuffer[e++];return t}setMat(i,t){let e=i*this.typedBufferStride;for(let s=0;s<9;s++)this.typedBuffer[e++]=t[s]}get(i,t){return this.typedBuffer[i*this.typedBufferStride+t]}set(i,t,e){this.typedBuffer[i*this.typedBufferStride+t]=e}copyFrom(i,t,e){const s=this.typedBuffer,r=t.typedBuffer;let f=i*this.typedBufferStride,u=e*t.typedBufferStride;for(let n=0;n<9;++n)s[f++]=r[u++]}get buffer(){return this.typedBuffer.buffer}},it=class{static{this.ElementCount=16}constructor(i,t,e=0,s,r){this.TypedArrayConstructor=i,this.elementCount=16;const f=this.TypedArrayConstructor;s===void 0&&(s=16*f.BYTES_PER_ELEMENT);const u=t.byteLength===0?0:e;this.typedBuffer=r==null?new f(t,u):new f(t,u,(r-e)/f.BYTES_PER_ELEMENT),this.typedBufferStride=s/f.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride),this.stride=this.typedBufferStride*this.TypedArrayConstructor.BYTES_PER_ELEMENT}sliceBuffer(i,t,e=this.count-t){const s=this.typedBuffer.byteOffset+t*this.stride;return new i(this.buffer,s,this.stride,s+e*this.stride)}getMat(i,t){let e=i*this.typedBufferStride;for(let s=0;s<16;s++)t[s]=this.typedBuffer[e++];return t}setMat(i,t){let e=i*this.typedBufferStride;for(let s=0;s<16;s++)this.typedBuffer[e++]=t[s]}get(i,t){return this.typedBuffer[i*this.typedBufferStride+t]}set(i,t,e){this.typedBuffer[i*this.typedBufferStride+t]=e}copyFrom(i,t,e){this.copyFromTypedBuffer(i,t.typedBuffer,e*t.typedBufferStride)}copyFromTypedBuffer(i,t,e){const s=this.typedBuffer;let r=i*this.typedBufferStride;for(let f=0;f<16;++f)s[r++]=t[e++]}get buffer(){return this.typedBuffer.buffer}};class h{static{this.ElementCount=1}constructor(t,e,s=0,r,f){this.TypedArrayConstructor=t,this.elementCount=1;const u=this.TypedArrayConstructor;r===void 0&&(r=u.BYTES_PER_ELEMENT);const n=e.byteLength===0?0:s;this.typedBuffer=f==null?new u(e,n):new u(e,n,(f-s)/u.BYTES_PER_ELEMENT),this.stride=r,this.typedBufferStride=r/u.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride)}sliceBuffer(t,e,s=this.count-e){const r=this.typedBuffer.byteOffset+e*this.stride;return new t(this.buffer,r,this.stride,r+s*this.stride)}get(t){return this.typedBuffer[t*this.typedBufferStride]}set(t,e){this.typedBuffer[t*this.typedBufferStride]=e}get buffer(){return this.typedBuffer.buffer}}let y=class{static{this.ElementCount=2}constructor(i,t,e=0,s,r){this.TypedArrayConstructor=i,this.start=e,this.elementCount=2;const f=this.TypedArrayConstructor;s===void 0&&(s=2*f.BYTES_PER_ELEMENT);const u=t.byteLength===0?0:e;this.typedBuffer=r==null?new f(t,u):new f(t,u,(r-e)/f.BYTES_PER_ELEMENT),this.typedBufferStride=s/f.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride),this.stride=this.typedBufferStride*this.TypedArrayConstructor.BYTES_PER_ELEMENT}sliceBuffer(i,t,e=this.count-t){const s=this.typedBuffer.byteOffset+t*this.stride;return new i(this.buffer,s,this.stride,s+e*this.stride)}getVec(i,t){return i*=this.typedBufferStride,ft(t,this.typedBuffer[i],this.typedBuffer[i+1])}setVec(i,t){i*=this.typedBufferStride,this.typedBuffer[i++]=t[0],this.typedBuffer[i]=t[1]}get(i,t){return this.typedBuffer[i*this.typedBufferStride+t]}set(i,t,e){this.typedBuffer[i*this.typedBufferStride+t]=e}setValues(i,t,e){i*=this.typedBufferStride,this.typedBuffer[i++]=t,this.typedBuffer[i]=e}copyFrom(i,t,e){const s=this.typedBuffer,r=t.typedBuffer;let f=i*this.typedBufferStride,u=e*t.typedBufferStride;s[f++]=r[u++],s[f]=r[u]}get buffer(){return this.typedBuffer.buffer}},l=class{static{this.ElementCount=3}constructor(i,t,e=0,s,r){this.TypedArrayConstructor=i,this.elementCount=3;const f=this.TypedArrayConstructor;s===void 0&&(s=3*f.BYTES_PER_ELEMENT);const u=t.byteLength===0?0:e;this.typedBuffer=r==null?new f(t,u):new f(t,u,(r-e)/f.BYTES_PER_ELEMENT),this.typedBufferStride=s/f.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride),this.stride=this.typedBufferStride*this.TypedArrayConstructor.BYTES_PER_ELEMENT}sliceBuffer(i,t,e=this.count-t){const s=this.typedBuffer.byteOffset+t*this.stride;return new i(this.buffer,s,this.stride,s+e*this.stride)}getVec(i,t){return i*=this.typedBufferStride,ut(t,this.typedBuffer[i],this.typedBuffer[i+1],this.typedBuffer[i+2])}setVec(i,t){i*=this.typedBufferStride,this.typedBuffer[i++]=t[0],this.typedBuffer[i++]=t[1],this.typedBuffer[i]=t[2]}get(i,t){return this.typedBuffer[i*this.typedBufferStride+t]}set(i,t,e){this.typedBuffer[i*this.typedBufferStride+t]=e}setValues(i,t,e,s){i*=this.typedBufferStride,this.typedBuffer[i++]=t,this.typedBuffer[i++]=e,this.typedBuffer[i]=s}copyFrom(i,t,e){const s=this.typedBuffer,r=t.typedBuffer;let f=i*this.typedBufferStride,u=e*t.typedBufferStride;s[f++]=r[u++],s[f++]=r[u++],s[f]=r[u]}get buffer(){return this.typedBuffer.buffer}};class p{static{this.ElementCount=4}constructor(t,e,s=0,r,f){this.TypedArrayConstructor=t,this.start=s,this.elementCount=4;const u=this.TypedArrayConstructor;r===void 0&&(r=4*u.BYTES_PER_ELEMENT);const n=e.byteLength===0?0:s;this.typedBuffer=f==null?new u(e,n):new u(e,n,(f-s)/u.BYTES_PER_ELEMENT),this.typedBufferStride=r/u.BYTES_PER_ELEMENT,this.count=Math.ceil(this.typedBuffer.length/this.typedBufferStride),this.stride=this.typedBufferStride*this.TypedArrayConstructor.BYTES_PER_ELEMENT}sliceBuffer(t,e,s=this.count-e){const r=this.typedBuffer.byteOffset+e*this.stride;return new t(this.buffer,r,this.stride,r+s*this.stride)}getVec(t,e){return t*=this.typedBufferStride,nt(e,this.typedBuffer[t++],this.typedBuffer[t++],this.typedBuffer[t++],this.typedBuffer[t])}setVec(t,e){t*=this.typedBufferStride,this.typedBuffer[t++]=e[0],this.typedBuffer[t++]=e[1],this.typedBuffer[t++]=e[2],this.typedBuffer[t]=e[3]}get(t,e){return this.typedBuffer[t*this.typedBufferStride+e]}set(t,e,s){this.typedBuffer[t*this.typedBufferStride+e]=s}setValues(t,e,s,r,f){t*=this.typedBufferStride,this.typedBuffer[t++]=e,this.typedBuffer[t++]=s,this.typedBuffer[t++]=r,this.typedBuffer[t]=f}copyFrom(t,e,s){const r=this.typedBuffer,f=e.typedBuffer;let u=t*this.typedBufferStride,n=s*e.typedBufferStride;r[u++]=f[n++],r[u++]=f[n++],r[u++]=f[n++],r[u]=f[n]}get buffer(){return this.typedBuffer.buffer}}let yt=class{constructor(i){this.message=i}toString(){return`AssertException: ${this.message}`}};function B(i,t="Assertion"){if(!i){const e=new Error(t).stack;throw new yt(`${t} at ${e}`)}}function lt(i,t){i||(t=t||"",console.warn("Verify failed: "+t+`
`+new Error("verify").stack))}function pt(i,t,e,s){let r,f=(e[0]-i[0])/t[0],u=(s[0]-i[0])/t[0];f>u&&(r=f,f=u,u=r);let n=(e[1]-i[1])/t[1],c=(s[1]-i[1])/t[1];if(n>c&&(r=n,n=c,c=r),f>c||n>u)return!1;n>f&&(f=n),c<u&&(u=c);let E=(e[2]-i[2])/t[2],d=(s[2]-i[2])/t[2];return E>d&&(r=E,E=d,d=r),!(f>d||E>u)&&(d<u&&(u=d),!(u<0))}function dt(i,t,e,s,r,f=ct()){const u=(s[r]-e[r])*(t[0]-i[0])-(s[0]-e[0])*(t[r]-i[r]),n=(s[0]-e[0])*(i[r]-e[r])-(s[r]-e[r])*(i[0]-e[0]);if(u===0)return!1;const c=n/u;return f[0]=i[0]+c*(t[0]-i[0]),f[1]=i[r]+c*(t[r]-i[r]),!0}function ot(i,t){return Math.log(i)/Math.log(t)}function at(i){return i[0]===1&&i[1]===0&&i[2]===0&&i[3]===0&&i[4]===0&&i[5]===1&&i[6]===0&&i[7]===0&&i[8]===0&&i[9]===0&&i[10]===1&&i[11]===0&&i[15]===1}class Bt extends h{constructor(t,e=0,s,r){B(a),super(o(),t,e,s,r),this.elementType="f16"}static{this.ElementType="f16"}}class Et extends h{constructor(t,e=0,s,r){super(Float32Array,t,e,s,r),this.elementType="f32"}static{this.ElementType="f32"}}class b extends y{constructor(t,e=0,s,r){B(a),super(o(),t,e,s,r),this.elementType="f16"}slice(t,e){return this.sliceBuffer(b,t,e)}static{this.ElementType="f16"}}class x extends y{constructor(t,e=0,s,r){super(Float32Array,t,e,s,r),this.elementType="f32"}slice(t,e){return this.sliceBuffer(x,t,e)}static{this.ElementType="f32"}}class g extends l{constructor(t,e=0,s,r){B(a),super(o(),t,e,s,r),this.elementType="f16"}slice(t,e){return this.sliceBuffer(g,t,e)}static{this.ElementType="f16"}}class T extends l{constructor(t,e=0,s,r){super(Float32Array,t,e,s,r),this.elementType="f32"}slice(t,e){return this.sliceBuffer(T,t,e)}static fromTypedArray(t,e){return new T(t.buffer,t.byteOffset,e,t.byteOffset+t.byteLength)}static{this.ElementType="f32"}}class M extends p{constructor(t,e=0,s,r){B(a),super(o(),t,e,s,r),this.elementType="f16"}slice(t,e){return this.sliceBuffer(M,t,e)}static{this.ElementType="f16"}}class L extends p{constructor(t,e=0,s,r){super(Float32Array,t,e,s,r),this.elementType="f32"}slice(t,e){return this.sliceBuffer(L,t,e)}static{this.ElementType="f32"}}class C extends rt{constructor(t,e=0,s,r){super(Float32Array,t,e,s,r),this.elementType="f32"}slice(t,e){return this.sliceBuffer(C,t,e)}static{this.ElementType="f32"}}class w extends rt{constructor(t,e=0,s,r){super(Float64Array,t,e,s,r),this.elementType="f64"}slice(t,e){return this.sliceBuffer(w,t,e)}static{this.ElementType="f64"}}class N extends it{constructor(t,e=0,s,r){super(Float32Array,t,e,s,r),this.elementType="f32"}slice(t,e){return this.sliceBuffer(N,t,e)}static{this.ElementType="f32"}}class P extends it{constructor(t,e=0,s,r){super(Float64Array,t,e,s,r),this.elementType="f64"}slice(t,e){return this.sliceBuffer(P,t,e)}static{this.ElementType="f64"}}class R extends h{constructor(t,e=0,s,r){super(Float64Array,t,e,s,r),this.elementType="f64"}slice(t,e){return this.sliceBuffer(R,t,e)}static{this.ElementType="f64"}}class Y extends y{constructor(t,e=0,s,r){super(Float64Array,t,e,s,r),this.elementType="f64"}slice(t,e){return this.sliceBuffer(Y,t,e)}static{this.ElementType="f64"}}class m extends l{constructor(t,e=0,s,r){super(Float64Array,t,e,s,r),this.elementType="f64"}slice(t,e){return this.sliceBuffer(m,t,e)}static fromTypedArray(t,e){return new m(t.buffer,t.byteOffset,e,t.byteOffset+t.byteLength)}static{this.ElementType="f64"}}class F extends p{constructor(t,e=0,s,r){super(Float64Array,t,e,s,r),this.elementType="f64"}slice(t,e){return this.sliceBuffer(F,t,e)}static{this.ElementType="f64"}}class I extends h{constructor(t,e=0,s,r){super(Uint8Array,t,e,s,r),this.elementType="u8"}slice(t,e){return this.sliceBuffer(I,t,e)}static{this.ElementType="u8"}}class O extends y{constructor(t,e=0,s,r){super(Uint8Array,t,e,s,r),this.elementType="u8"}slice(t,e){return this.sliceBuffer(O,t,e)}static{this.ElementType="u8"}}class S extends l{constructor(t,e=0,s,r){super(Uint8Array,t,e,s,r),this.elementType="u8"}slice(t,e){return this.sliceBuffer(S,t,e)}static fromTypedArray(t,e){return new S(t.buffer,t.byteOffset,e,t.byteOffset+t.byteLength)}static{this.ElementType="u8"}}class U extends p{constructor(t,e=0,s,r){super(Uint8Array,t,e,s,r),this.elementType="u8"}slice(t,e){return this.sliceBuffer(U,t,e)}static{this.ElementType="u8"}}class V extends h{constructor(t,e=0,s,r){super(Uint16Array,t,e,s,r),this.elementType="u16"}slice(t,e){return this.sliceBuffer(V,t,e)}static{this.ElementType="u16"}}class v extends y{constructor(t,e=0,s,r){super(Uint16Array,t,e,s,r),this.elementType="u16"}slice(t,e){return this.sliceBuffer(v,t,e)}static{this.ElementType="u16"}}class _ extends l{constructor(t,e=0,s,r){super(Uint16Array,t,e,s,r),this.elementType="u16"}slice(t,e){return this.sliceBuffer(_,t,e)}static{this.ElementType="u16"}}class k extends p{constructor(t,e=0,s,r){super(Uint16Array,t,e,s,r),this.elementType="u16"}slice(t,e){return this.sliceBuffer(k,t,e)}static{this.ElementType="u16"}}class $ extends h{constructor(t,e=0,s,r){super(Uint32Array,t,e,s,r),this.elementType="u32"}slice(t,e){return this.sliceBuffer($,t,e)}static{this.ElementType="u32"}}class j extends y{constructor(t,e=0,s,r){super(Uint32Array,t,e,s,r),this.elementType="u32"}slice(t,e){return this.sliceBuffer(j,t,e)}static{this.ElementType="u32"}}class q extends l{constructor(t,e=0,s,r){super(Uint32Array,t,e,s,r),this.elementType="u32"}slice(t,e){return this.sliceBuffer(q,t,e)}static{this.ElementType="u32"}}class z extends p{constructor(t,e=0,s,r){super(Uint32Array,t,e,s,r),this.elementType="u32"}slice(t,e){return this.sliceBuffer(z,t,e)}static{this.ElementType="u32"}}class D extends h{constructor(t,e=0,s,r){super(Int8Array,t,e,s,r),this.elementType="i8"}slice(t,e){return this.sliceBuffer(D,t,e)}static{this.ElementType="i8"}}class G extends y{constructor(t,e=0,s,r){super(Int8Array,t,e,s,r),this.elementType="i8"}slice(t,e){return this.sliceBuffer(G,t,e)}static{this.ElementType="i8"}}class H extends l{constructor(t,e=0,s,r){super(Int8Array,t,e,s,r),this.elementType="i8"}slice(t,e){return this.sliceBuffer(H,t,e)}static{this.ElementType="i8"}}class J extends p{constructor(t,e=0,s,r){super(Int8Array,t,e,s,r),this.elementType="i8"}slice(t,e){return this.sliceBuffer(J,t,e)}static{this.ElementType="i8"}}class K extends h{constructor(t,e=0,s,r){super(Int16Array,t,e,s,r),this.elementType="i16"}slice(t,e){return this.sliceBuffer(K,t,e)}static{this.ElementType="i16"}}class Q extends y{constructor(t,e=0,s,r){super(Int16Array,t,e,s,r),this.elementType="i16"}slice(t,e){return this.sliceBuffer(Q,t,e)}static{this.ElementType="i16"}}class W extends l{constructor(t,e=0,s,r){super(Int16Array,t,e,s,r),this.elementType="i16"}slice(t,e){return this.sliceBuffer(W,t,e)}static{this.ElementType="i16"}}class X extends p{constructor(t,e=0,s,r){super(Int16Array,t,e,s,r),this.elementType="i16"}slice(t,e){return this.sliceBuffer(X,t,e)}static{this.ElementType="i16"}}class Z extends h{constructor(t,e=0,s,r){super(Int32Array,t,e,s,r),this.elementType="i32"}slice(t,e){return this.sliceBuffer(Z,t,e)}static{this.ElementType="i32"}}class tt extends y{constructor(t,e=0,s,r){super(Int32Array,t,e,s,r),this.elementType="i32"}slice(t,e){return this.sliceBuffer(tt,t,e)}static{this.ElementType="i32"}}class et extends l{constructor(t,e=0,s,r){super(Int32Array,t,e,s,r),this.elementType="i32"}slice(t,e){return this.sliceBuffer(et,t,e)}static{this.ElementType="i32"}}class st extends p{constructor(t,e=0,s,r){super(Int32Array,t,e,s,r),this.elementType="i32"}slice(t,e){return this.sliceBuffer(st,t,e)}static{this.ElementType="i32"}}export{P as A,R as B,G as C,H as D,N as E,F,J as G,K as H,I,Q as J,W as K,v as L,k as M,X as N,S as O,Z as P,tt as Q,et as R,j as S,L as T,m as U,_ as V,st as W,Bt as a,Y as b,lt as c,C as d,dt as e,Et as f,U as g,g as h,pt as i,O as j,q as k,o as l,M as m,at as n,T as o,b as p,z as q,a as r,B as s,ht as t,ot as u,$ as v,V as w,w as x,x as y,D as z};
