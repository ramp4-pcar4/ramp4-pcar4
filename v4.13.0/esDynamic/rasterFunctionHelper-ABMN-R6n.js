import{U as Oe}from"./colorUtils-Eg6lOlXm.js";import{v as l,x as m,z as P,B as De,c6 as Ee,aw as K,bJ as X,h as H,bw as ks,bx as Ss,I as Vt,H as $t,ie as Jt,s as Rt}from"./main-BFDurRCu.js";import{f as Bs,c as Ve,u as et,r as L,i as te}from"./pixelRangeUtils-DcEknavd.js";import{c as b,r as js,n as Ue,e as ee,o as Ms,k as se,q as Le,t as We,M as Gs,v as It,w as zs,x as Os,y as Ds,z as Es,A as Vs}from"./dataUtils-CfR0oe2x.js";import{m as Us,z as Ls,D as at,E as Ws,F as He,B as ne,I as qe,J as $e,K as Hs,L as Ut,M as qs,O as Kt,Q as Je,R as Ke,S as $s,T as Js,V as Ks,X as re,Y as Xs,Z as Zs,$ as Qs}from"./RasterSymbolizer-BN6RVtx9.js";import{l as Ys}from"./clipUtils-fw7VCGXU.js";import{Q as tn,V as en}from"./rasterProjectionHelper-DGqzGF1m.js";import{m as sn,p as Xe}from"./colorRamps-trM-CPFS.js";import{m as st}from"./Field-BIQ-quF4.js";let Xt=class extends De{constructor(){super(...arguments),this.raster=void 0}};l([m({json:{write:!0}})],Xt.prototype,"raster",void 0),Xt=l([P("esri.layers.support.rasterFunctions.BaseFunctionArguments")],Xt);const O=Xt;var oe;let _t=oe=class extends O{constructor(){super(...arguments),this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new oe({raster:this.raster,raster2:this.raster2,operation:this.operation})}};l([m({json:{write:!0}})],_t.prototype,"operation",void 0),l([m({json:{write:!0}})],_t.prototype,"raster2",void 0),l([m({readOnly:!0})],_t.prototype,"rasters",null),_t=oe=l([P("esri.layers.support.rasterFunctions.ArithmeticFunctionArguments")],_t);const nn=_t,rn=new Set(["slope","aspect","curvature","hillshade","shadedrelief","statistics"]);let D=class extends De{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.rawSourceRasterInfos=null,this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this.isRoot=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const e=this.getWebGLProcessorDefinition();if(!e)return null;const t=[e],{parameters:s}=e;let n=s.rasters||s.raster&&[s.raster];for(;n?.length;){t.unshift(...n);const r=[];for(let u=0;u<n.length;u++){const{parameters:c}=n[u],p=c.rasters||c.raster&&[c.raster];p?.length&&r.push(...p)}n=r}for(let r=t.length-1;r>=0;r--)t[r].isNoopProcess&&t.splice(r,1);let o=!1;for(let r=0;r<t.length;r++){const u=t[r];u.id=t.length-r-1;const{rasters:c}=u.parameters;o=o||c!=null&&c.length>1}const i=t.some(({name:r})=>rn.has(r.toLowerCase())),{rawSourceRasterInfos:a}=this;return{functions:t,hasBranches:o,hasFocalFunction:i,isSourceSingleBand:a?.[0]?.bandCount===1}}bind(e,t=!1,s=-1){this.id=s+1;const n=this._getRasterValues();let o=!0;for(let i=0;i<n.length;i++){const a=n[i];if(a!=null&&this._isRasterFunctionValue(a)){const r=a.bind(e,t,this.id+i);if(!r.success)return this._bindingResult=r,r;o=o&&r.supportsGPU}}return!this.rasterInfo||t?(this.sourceRasterInfos=this._getSourceRasterInfos(e),this._bindingResult=this._bindSourceRasters(),o&&=this._bindingResult.supportsGPU,this._bindingResult.success&&(this._patchRasterInfo(),o&&this.isRoot)&&(this.processInputBandIds(),this.swizzleInputBandIds(this.rawInputBandIds)||(o=this.rawInputBandIds.length<=3)),this._bindingResult.supportsGPU=o,this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this._bindingResult)}process(e){const t=this._getRasterValues(),s=t.length===0?e.pixelBlocks??e.primaryPixelBlocks:t.map(n=>this._readRasterValue(n,e));return this._processPixels({...e,pixelBlocks:s})}processInputBandIds(){const e=this._getRasterValues().filter(this._isRasterFunctionValue);if(e.length>1){const o=e.map(i=>i.processInputBandIds());return this.rawInputBandIds=[...new Set(o.flat())],this.rawInputBandIds}const t=e[0];if(t)return this.rawInputBandIds=t.processInputBandIds(),this.rawInputBandIds;const{bandCount:s}=this.sourceRasterInfos[0],n=Array.from({length:s},(o,i)=>i);return this.rawInputBandIds=this._getInputBandIds(n),this.rawInputBandIds}swizzleInputBandIds(e){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let s=!0;for(const n of t)s=n.swizzleInputBandIds(e)&&s;return!!s&&this._swizzleBandIds(e)}getPrimaryRasters(){const e=[],t=[];return this._getPrimaryRasters(this,e,t),{rasters:e,rasterIds:t}}getWebGLProcessorDefinition(){const e=this._getWebGLParameters(),{raster:t,rasters:s}=this.functionArguments;return s&&Array.isArray(s)&&s.length?(e.rasters=s.map(n=>this._isRasterFunctionValue(n)?n.getWebGLProcessorDefinition():typeof n=="number"?{name:"Constant",parameters:{value:n},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:n},pixelType:"f32",id:-1,isNoopProcess:!1}),e.rasters.some(n=>n!=null)||(e.rasters=null)):this._isRasterFunctionValue(t)&&(e.raster=t.getWebGLProcessorDefinition()),{name:this.functionName,parameters:e,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getClippingGeometries(){const e=[];this.functionName==="Clip"&&e.push(this.functionArguments);const{raster:t,rasters:s}=this.functionArguments;if(s&&Array.isArray(s)&&s.length)s.forEach(n=>{if(this._isRasterFunctionValue(n)){const o=n.getClippingGeometries();e.push(...o)}});else if(this._isRasterFunctionValue(t)){const n=t.getClippingGeometries();e.push(...n)}return e}_getOutputPixelType(e){return this.outputPixelType==="unknown"?e:this.outputPixelType??e}_getWebGLParameters(){return{}}_getInputBandIds(e){return e}_swizzleBandIds(e){return!0}_isInputRasterPrimaryOrConstant(){return!this._getRasterValues().some(e=>e&&typeof e=="object"&&"rasterFunction"in e&&e.rasterFunction)}_removeStatsHistColormapVAT(e){e.statistics=null,e.histograms=null,e.colormap=null,e.attributeTable=null,e.multidimensionalInfo?.variables.forEach(t=>{t.statistics=void 0,t.histograms=void 0})}_getRasterValues(){const{rasterArgumentNames:e}=this;return e[0]==="rasters"?this.functionArguments.rasters??[]:e.flatMap(t=>this.functionArguments[t])}_getSourceRasterInfos(e){const t=this._getRasterValues(),{rasterInfos:s,rasterIds:n}=e;if(t.length===0)return s;const o=t.map(a=>a&&typeof a=="object"&&"bind"in a&&a.rasterInfo?a.rasterInfo:typeof a=="string"&&n.includes(a)?s[n.indexOf(a)]:typeof a!="number"?s[0]:void 0),i=o.find(a=>a)??s[0];return o.forEach((a,r)=>{a===void 0&&(o[r]=i)}),o}_getPrimaryRasterId(e){return e?.rasterId}_getPrimaryRasters(e,t=[],s=[]){for(let n=0;n<e.sourceRasters.length;n++){const o=e.sourceRasters[n];if(typeof o!="number")if("bind"in o)this._getPrimaryRasters(o,t,s);else{const i=o,a=this._getPrimaryRasterId(i);if(a==null)continue;s.includes(a)||(this.mainPrimaryRasterId===a?(t.unshift(i),s.unshift(a)):(t.push(i),s.push(a)))}}}_isRasterFunctionValue(e){return e!=null&&typeof e=="object"&&"getWebGLProcessorDefinition"in e}_readRasterValue(e,t){const{primaryPixelBlocks:s}=t;if(e==null||e==="$$"){const n=s[0];return n==null?null:n.clone()}if(typeof e=="string"){const n=t.primaryRasterIds.indexOf(e);return n===-1?null:s[n]}if(typeof e=="number"){const n=s[0];if(n==null)return null;const{width:o,height:i,pixelType:a}=n,r=new Float32Array(o*i);r.fill(e);const u=this.sourceRasterInfos[0].bandCount,c=new Array(u).fill(r);return new b({width:o,height:i,pixelType:a,pixels:c})}return e.process(t)}_patchRasterInfo(){const{rasterInfo:e}=this;if(!e?.keyProperties)return;const{bandCount:t,keyProperties:s,statistics:n,histograms:o}=e,i=s.BandProperties;i&&i.length!==t&&(e.keyProperties={...s,BandProperties:void 0}),n&&n.length!==t&&(e.statistics=n.length>t?n.slice(0,t):null),o&&o.length!==t&&(e.histograms=o.length>t?o.slice(0,t):null),s.BAND_COUNT&&Number(s.BAND_COUNT)!==t&&(e.keyProperties={...s,BAND_COUNT:typeof s.BAND_COUNT=="string"?String(t):t})}};l([m({json:{write:!0}})],D.prototype,"functionName",void 0),l([m({json:{write:!0}})],D.prototype,"functionArguments",void 0),l([m()],D.prototype,"rasterArgumentNames",void 0),l([m({json:{write:!0}}),Ee(e=>e?.toLowerCase())],D.prototype,"outputPixelType",void 0),l([m({json:{write:!0}})],D.prototype,"mainPrimaryRasterId",void 0),l([m()],D.prototype,"sourceRasters",void 0),l([m({type:[Us],json:{write:!0}})],D.prototype,"sourceRasterInfos",void 0),l([m({json:{write:!0}})],D.prototype,"rasterInfo",void 0),l([m({json:{write:!0}})],D.prototype,"readingBufferSize",void 0),l([m({json:{write:!0}})],D.prototype,"id",void 0),l([m()],D.prototype,"isNoopProcess",void 0),l([m()],D.prototype,"supportsGPU",null),l([m()],D.prototype,"rawInputBandIds",void 0),l([m()],D.prototype,"rawSourceRasterInfos",void 0),l([m()],D.prototype,"isInputBandIdsSwizzled",void 0),l([m()],D.prototype,"swizzledBandSelection",void 0),l([m()],D.prototype,"isBranch",void 0),l([m()],D.prototype,"isRoot",void 0),l([m({readOnly:!0})],D.prototype,"flatWebGLFunctionChain",null),l([m()],D.prototype,"_bindingResult",void 0),D=l([P("esri.layers.support.rasterFunctions.BaseRasterFunction")],D);const M=D,_={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},on={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65},W={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},$={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},an={majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75},Ze={setNull:50,conditional:78},Qe={...on,...W,...$,...an,...Ze},Ye=new Map([[$.acos,{domain:[0,Math.PI],isInteger:!1}],[$.asin,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[$.atan,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[$.cos,{domain:[-1,1],isInteger:!1}],[$.sin,{domain:[-1,1],isInteger:!1}],[W.booleanAnd,{domain:[0,1],isInteger:!0}],[W.booleanNot,{domain:[0,1],isInteger:!0}],[W.booleanOr,{domain:[0,1],isInteger:!0}],[W.booleanXOr,{domain:[0,1],isInteger:!0}],[W.equalTo,{domain:[0,1],isInteger:!0}],[W.notEqual,{domain:[0,1],isInteger:!0}],[W.greaterThan,{domain:[0,1],isInteger:!0}],[W.greaterThanEqual,{domain:[0,1],isInteger:!0}],[W.lessThan,{domain:[0,1],isInteger:!0}],[W.lessThanEqual,{domain:[0,1],isInteger:!0}],[W.isNull,{domain:[0,1],isInteger:!0}]]);function ts(e){return Ye.get(e)}const es=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function un(e,t=!1){const s=e.map(r=>r.mask),n=s.filter(r=>r!=null),o=e[0].pixels[0].length;if(n.length===0||t&&n.length!==s.length)return new Uint8Array(o).fill(255);const i=n[0],a=new Uint8Array(i);if(n.length===1)return a;if(!t){for(let r=1;r<n.length;r++){const u=n[r];for(let c=0;c<a.length;c++)a[c]&&(a[c]=u[c]?255:0)}return a}for(let r=1;r<n.length;r++){const u=n[r];for(let c=0;c<a.length;c++)a[c]===0&&(a[c]=u[c]?255:0)}return a}function ln(e,t,s){const[n,o]=e,i=n.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=n[r]+o[r]);return a}function cn(e,t,s){const[n]=e,o=n.length,i=b.createEmptyBand("f32",o);return i.set(n),i}function pn(e,t,s){const[n]=e,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)t&&!t[a]||(i[a]=n[a]*n[a]);return i}function mn(e,t,s){const[n,o]=e,i=n.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=n[r]-o[r]);return a}function hn(e,t,s){const[n,o]=e,i=n.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=n[r]*o[r]);return a}function dn(e,t,s){const[n]=e,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)t&&!t[a]||(i[a]=Math.sign(n[a])*Math.floor(Math.abs(n[a])));return i}function ss(e,t,s){const[n,o]=e,i=n.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=n[r]/o[r]);return a}function fn(e,t,s){return ss(e,t,"f32")}function gn(e,t,s){const[n,o]=e,i=n.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=Math.floor(n[r]/o[r]));return a}function yn(e,t,s,n){const o=e[0],i=o.length,a=b.createEmptyBand(s,i);if(n===$.atanh){for(let u=0;u<i;u++)if(t[u]){const c=o[u];Math.abs(c)>=1?t[u]=0:a[u]=Math.atanh(c)}return a}const r=n===$.asin?Math.asin:Math.acos;for(let u=0;u<i;u++)if(t[u]){const c=o[u];Math.abs(c)>1?t[u]=0:a[u]=r(c)}return a}function xn(e,t,s,n){const[o]=e,i=o.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=n(o[r]));return a}function vn(e,t,s,n){const[o,i]=e,a=o.length,r=b.createEmptyBand(s,a);for(let u=0;u<a;u++)t&&!t[u]||(r[u]=n(o[u],i[u]));return r}function wn(e,t,s){const[n,o]=e,i=n.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=n[r]&o[r]);return a}function bn(e,t,s){const[n,o]=e,i=n.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=n[r]<<o[r]);return a}function An(e,t,s){const[n]=e,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)t&&!t[a]||(i[a]=~n[a]);return i}function Tn(e,t,s){const[n,o]=e,i=n.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=n[r]|o[r]);return a}function Pn(e,t,s){const[n,o]=e,i=n.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=n[r]>>o[r]);return a}function Fn(e,t,s){const[n,o]=e,i=n.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=n[r]^o[r]);return a}function Nn(e,t,s){const[n,o]=e,i=n.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=n[r]&&o[r]?1:0);return a}function Rn(e,t,s){const[n]=e,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)t&&!t[a]||(i[a]=n[a]?0:1);return i}function In(e,t,s){const[n,o]=e,i=n.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=n[r]||o[r]?1:0);return a}function _n(e,t,s){const[n,o]=e,i=n.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=(n[r]?1:0)^(o[r]?1:0));return a}function Cn(e,t,s){const[n,o]=e,i=n.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=n[r]===o[r]?1:0);return a}function ie(e,t,s,n){const[o]=e,i=o.length,a=b.createEmptyBand(s,i),r=n===Math.E;for(let u=0;u<i;u++)t&&!t[u]||(a[u]=r?Math.exp(o[u]):n**o[u]);return a}function kn(e,t,s){return ie(e,t,s,10)}function Sn(e,t,s){return ie(e,t,s,2)}function Bn(e,t,s){return ie(e,t,s,Math.E)}function ae(e,t,s,n){const[o]=e,i=o.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)t&&!t[r]||(o[r]<=0?t[r]=0:a[r]=n(o[r]));return a}function jn(e,t,s){return ae(e,t,s,Math.log10)}function Mn(e,t,s){return ae(e,t,s,Math.log2)}function Gn(e,t,s){return ae(e,t,s,Math.log)}function zn(e,t,s){const[n,o]=e,i=n.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=n[r]>o[r]?1:0);return a}function On(e,t,s){const[n,o]=e,i=n.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=n[r]>=o[r]?1:0);return a}function Dn(e,t,s){const[n,o]=e,i=n.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=n[r]<o[r]?1:0);return a}function En(e,t,s){const[n,o]=e,i=n.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=n[r]<=o[r]?1:0);return a}function Vn(e,t,s){const[n]=e,o=n.length,i=b.createEmptyBand(s,o);if(!t)return i;for(let a=0;a<o;a++)i[a]=t[a]?0:1;return i}function Un(e,t,s){const[n,o]=e,i=n.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=n[r]%o[r]);return a}function Ln(e,t,s){const[n]=e,o=n.length,i=b.createEmptyBand(s,o);for(let a=0;a<o;a++)t&&!t[a]||(i[a]=-n[a]);return i}function Wn(e,t,s){const[n,o]=e,i=n.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=n[r]===o[r]?0:1);return a}function Hn(e,t,s){const[n,o]=e,i=n.length,a=b.createEmptyBand(s,i),r=new Uint8Array(i);for(let u=0;u<i;u++)t!=null&&!t[u]||n[u]!==0||(a[u]=o[u],r[u]=255);return{band:a,mask:r}}function ns(e,t,s){const[n,o,i]=e,a=n.length,r=b.createEmptyBand(s,a);for(let u=0;u<a;u++)t&&!t[u]||(r[u]=n[u]?o[u]:i[u]);return r}function rs(e,t,s){const n=e.length;if(n<2)return e[0];const[o]=e,i=o.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)if(!t||t[r]){let u=o[r];for(let c=1;c<n;c++){const p=e[c][r];u<p&&(u=p)}a[r]=u}return a}function os(e,t,s){const n=e.length;if(n<2)return e[0];const[o]=e,i=o.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)if(!t||t[r]){let u=o[r];for(let c=1;c<n;c++){const p=e[c][r];u>p&&(u=p)}a[r]=u}return a}function is(e,t,s){const n=e.length;if(n<2)return e[0];const[o]=e,i=o.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)if(!t||t[r]){let u=o[r],c=u;for(let p=1;p<n;p++){const h=e[p][r];c<h?c=h:u>h&&(u=h)}a[r]=c-u}return a}function as(e,t,s){const n=e.length;if(n<2)return e[0];const[o]=e,i=o.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)if(!t||t[r]){let u=0;for(let c=0;c<n;c++)u+=e[c][r];a[r]=u/n}return a}function us(e,t,s){const n=e.length;if(n<2)return e[0];const[o]=e,i=o.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)if(!t||t[r])for(let u=0;u<n;u++){const c=e[u];a[r]+=c[r]}return a}function ls(e,t,s){const n=e.length;if(n<2)return e[0];const[o]=e,i=o.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)if(!t||t[r]){const u=new Float32Array(n);let c=0;for(let h=0;h<n;h++){const d=e[h];c+=d[r],u[h]=d[r]}c/=n;let p=0;for(let h=0;h<n;h++)p+=(u[h]-c)**2;a[r]=Math.sqrt(p/n)}return a}function cs(e,t,s){const n=e.length;if(n<2)return e[0];const o=Math.floor(n/2),[i]=e,a=i.length,r=b.createEmptyBand(s,a),u=new Float32Array(n),c=n%2==1;for(let p=0;p<a;p++)if(!t||t[p]){for(let h=0;h<n;h++)u[h]=e[h][p];u.sort(),r[p]=c?u[o]:(u[o]+u[o-1])/2}return r}function ps(e,t,s){const[n,o]=e;if(o==null)return n;const i=n.length,a=b.createEmptyBand(s,i);for(let r=0;r<i;r++)t&&!t[r]||(a[r]=n[r]<o[r]?n[r]:o[r]);return a}function ms(e,t,s){const n=e.length;if(n<=2)return ps(e,t,s);const o=e[0].length,i=b.createEmptyBand(s,o),a=new Map;for(let r=0;r<o;r++)if(!t||t[r]){a.clear();for(let h=0;h<n;h++){const d=e[h][r];a.set(d,a.has(d)?a.get(d)+1:1)}let u=0,c=0;const p=[];for(const h of a.keys())u=a.get(h),u>c?(c=u,p.length=0,p.push(h)):u===c&&p.push(h);p.length>1&&p.sort((h,d)=>h-d),i[r]=p[0]}return i}function hs(e,t,s){const n=e.length;if(n<=2)return ps(e,t,s);const o=e[0].length,i=b.createEmptyBand(s,o),a=new Map;for(let r=0;r<o;r++)if(!t||t[r]){a.clear();for(let h=0;h<n;h++){const d=e[h][r];a.set(d,a.has(d)?a.get(d)+1:1)}let u=0,c=e.length;const p=[];for(const h of a.keys())u=a.get(h),u<c?(c=u,p.length=0,p.push(h)):u===c&&p.push(h);p.length>1&&p.sort((h,d)=>h-d),i[r]=p[0]}return i}function ds(e,t,s){const n=e.length;if(n<2)return e[0];const[o]=e,i=o.length,a=b.createEmptyBand(s,i),r=new Set;for(let u=0;u<i;u++)if(!t||t[u]){let c;r.clear();for(let p=0;p<n;p++)c=e[p][u],r.add(c);a[u]=r.size}return a}const E=new Map,Zt=new Map,I=new Map,G=new Map;function qn(){E.size||(E.set(4,Math.sqrt),E.set(6,Math.acos),E.set(7,Math.asin),E.set(8,Math.atan),E.set(9,Math.atanh),E.set(10,Math.abs),E.set(21,Math.cos),E.set(22,Math.cosh),E.set(48,Math.floor),E.set(49,Math.ceil),E.set(51,Math.sin),E.set(52,Math.sinh),E.set(56,Math.tan),E.set(57,Math.tanh),E.set(59,Math.acosh),E.set(60,Math.asinh),E.set(65,Math.floor),Zt.set(5,Math.pow),Zt.set(61,Math.atan2),I.set(1,ln),I.set(2,mn),I.set(3,hn),I.set(11,wn),I.set(12,bn),I.set(13,An),I.set(14,Tn),I.set(15,Pn),I.set(16,Fn),I.set(17,Nn),I.set(18,Rn),I.set(19,In),I.set(20,_n),I.set(23,ss),I.set(24,Cn),I.set(25,Bn),I.set(26,kn),I.set(27,Sn),I.set(28,zn),I.set(29,On),I.set(30,dn),I.set(31,Vn),I.set(32,cn),I.set(33,Dn),I.set(34,En),I.set(35,Gn),I.set(36,jn),I.set(37,Mn),I.set(44,Un),I.set(45,Ln),I.set(46,Wn),I.set(53,pn),I.set(64,fn),I.set(65,gn),I.set(76,ns),I.set(78,ns),G.set(38,ms),G.set(39,rs),G.set(40,as),G.set(41,cs),G.set(42,os),G.set(43,hs),G.set(47,is),G.set(54,ls),G.set(55,us),G.set(58,ds),G.set(66,ms),G.set(67,rs),G.set(68,as),G.set(69,cs),G.set(70,os),G.set(71,hs),G.set(72,is),G.set(73,ls),G.set(74,us),G.set(75,ds))}function fs(e,t,s={}){qn();let n=un(e,t>=66&&t<=75);const{outputPixelType:o="f32"}=s,i=!G.has(t)||s.processAsMultiband,a=i?e[0].pixels.length:1,r=[];for(let c=0;c<a;c++){const p=G.has(t)&&!i?e.flatMap(f=>f.pixels):e.map(f=>f.pixels[c]);let h,d=!0;if(t===Ze.setNull){const f=Hn(p,n,o);h=f.band,n=f.mask,d=!1}else I.has(t)?h=I.get(t)(p,n,"f64"):E.has(t)?h=t===$.asin||t===$.acos||t===$.atanh?yn(p,n,"f64",t):xn(p,n,"f64",E.get(t)):Zt.has(t)?h=vn(p,n,"f64",Zt.get(t)):G.has(t)?h=G.get(t)(p,n,"f64"):(h=p[0],d=!1);if(d&&t!==W.isNull&&!Ye.has(t)){const f=b.createEmptyBand(o,h.length);n||(n=new Uint8Array(h.length).fill(255)),Bs(h,n),Ve(h,n,o,f),h=f}r.push(h)}const u=e[0];return new b({width:u.width,height:u.height,pixelType:o,mask:t===W.isNull?null:n,pixels:r})}function $n(e,t,s){return fs(e,t=[null,1,2,3,23,5,44][t]??1,{outputPixelType:s})}let Ct=class extends M{constructor(){super(...arguments),this.functionName="Arithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{operation:e}=this.functionArguments;if(e<1||e>6)return{success:!1,supportsGPU:!1,error:"unsupported operation"};const t=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(t.pixelType),t.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(t),this.rasterInfo=t,{success:!0,supportsGPU:t.bandCount<=3}}_processPixels(e){const{pixelBlocks:t}=e;return t?.[0]==null||t?.[1]==null?null:$n(t,this.functionArguments.operation,this.outputPixelType)}_getWebGLParameters(){const{operation:e}=this.functionArguments,t=["","plus","minus","times","divide","power","mod"][e],s=this.outputPixelType??"f32";let[n,o]=et(s);const i=L(s);return i&&(n-=1e-4,o+=1e-4),{imageCount:2,operationName:t,domainRange:[n,o],isOutputRounded:i}}};l([m({json:{write:!0,name:"rasterFunction"}})],Ct.prototype,"functionName",void 0),l([m({type:nn,json:{write:!0,name:"rasterFunctionArguments"}})],Ct.prototype,"functionArguments",void 0),l([m()],Ct.prototype,"rasterArgumentNames",void 0),Ct=l([P("esri.layers.support.rasterFunctions.ArithmeticFunction")],Ct);const Jn=Ct;var ue;let le=ue=class extends O{clone(){return new ue({raster:this.raster})}};le=ue=l([P("esri.layers.support.rasterFunctions.AspectFunctionArguments")],le);const Kn=le;let ut=class extends M{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const e=this.sourceRasterInfos[0];this.isGCS=e.spatialReference?.isGeographic??!1,this.outputPixelType=this._getOutputPixelType("f32");const t=e.clone();return t.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(t),t.statistics=[{min:-1,max:360,avg:180,stddev:30}],t.bandCount=1,this.rasterInfo=t,{success:!0,supportsGPU:!0}}_processPixels(e){const t=e.pixelBlocks?.[0];if(t==null)return null;const{extent:s,primaryPixelSizes:n}=e,o=n?.[0],i=o??(s?{x:s.width/t.width,y:s.height/t.height}:{x:1,y:1});return Ls(t,{resolution:i})}};l([m({json:{write:!0,name:"rasterFunction"}})],ut.prototype,"functionName",void 0),l([m({type:Kn,json:{write:!0,name:"rasterFunctionArguments"}})],ut.prototype,"functionArguments",void 0),l([m()],ut.prototype,"rasterArgumentNames",void 0),l([m({json:{write:!0}})],ut.prototype,"isGCS",void 0),ut=l([P("esri.layers.support.rasterFunctions.AspectFunction")],ut);const Xn=ut,Zn=new Set(["+","-","*","/","(",")"]);function Qn(e,t){(e=e.replaceAll(" ","")).startsWith("-")&&(e="0"+e),e.startsWith("+")&&(e=e.slice(1));const s=e.split(""),n=[],o=[];let i="";for(let a=0;a<s.length;a++){const r=s[a];Zn.has(r)?(i.length&&o.push(gs(i,t)),n.push(r),i=""):i=i.concat(r)}return i.length&&o.push(gs(i,t)),{ops:n,nums:o}}function gs(e,t){return e.toLowerCase().startsWith("b")?t[parseInt(e.slice(1),10)-1]:parseFloat(e)}function Yn(e,t,s,n){if(typeof s=="number"&&typeof n=="number")return s+n;let o,i,a;typeof s=="number"?(a=n,o=a.length,i=new Float32Array(o),i.fill(s)):(o=s.length,i=s,n.constructor===Number?(a=new Float32Array(o),a.fill(n)):a=n);const r=new Float32Array(o);switch(t){case"+":for(let u=0;u<o;u++)(e==null||e[u])&&(r[u]=i[u]+a[u]);break;case"-":for(let u=0;u<o;u++)(e==null||e[u])&&(r[u]=i[u]-a[u]);break;case"*":for(let u=0;u<o;u++)(e==null||e[u])&&(r[u]=i[u]*a[u]);break;case"/":for(let u=0;u<o;u++)(e==null||e[u])&&a[u]&&(r[u]=i[u]/a[u]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return r}function tr(e,t){e.splice(t,1);let s=0,n=0;do{s=0,n=0;for(let o=0;o<e.length;o++)if(e[o]==="(")s=o;else if(e[o]===")"){n=o;break}n===s+1&&e.splice(s,2)}while(n===s+1);return e}function er(e){if(e.length===1)return{opIndex:0,numIndex:0};let t=0,s=0;for(let a=0;a<e.length;a++)if(e[a]==="(")t=a;else if(e[a]===")"){s=a;break}const n=s===0?e:e.slice(t+1,s);let o=-1;for(let a=0;a<n.length;a++)if(n[a]==="*"||n[a]==="/"){o=a;break}if(o>-1)s>0&&(o+=t+1);else{for(let a=0;a<n.length;a++)if(n[a]==="+"||n[a]==="-"){o=a;break}s>0&&(o+=t+1)}let i=0;for(let a=0;a<o;a++)e[a]==="("&&i++;return{opIndex:o,numIndex:o-i}}function sr(e,t,s){let n,{ops:o,nums:i}=Qn(s,t);if(o.length===0){const a=i.length===1?i[0]:t[0];if(a instanceof Float32Array)return[a];const r=new Float32Array(t[0].length);return typeof a=="number"?r.fill(a):r.set(a),[r]}for(;o.length>0;){const{numIndex:a,opIndex:r}=er(o);if(n=Yn(e,o[r],i[a],i[a+1]),o.length===1)break;o=tr(o,r),i.splice(a,2,n)}return[n]}const nr=new K({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function rr(e,t){if(!js(e))return e;const{equation:s,method:n}=t,o=t.bandIndexes.map(d=>d-1),{pixels:i,mask:a}=e;let r;switch(n){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":r=ys(a,i[o[0]],i[o[1]]);break;case"ndwi":r=ys(a,i[o[1]],i[o[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":r=ir(a,i[o[0]],i[o[1]]);break;case"ci-g":case"ci-re":r=ar(a,i[o[0]],i[o[1]]);break;case"savi":r=ur(a,i[o[0]],i[o[1]],o[2]+1);break;case"tsavi":r=lr(a,i[o[0]],i[o[1]],o[2]+1,o[3]+1,o[4]+1);break;case"msavi":r=cr(a,i[o[0]],i[o[1]]);break;case"gemi":r=pr(a,i[o[0]],i[o[1]]);break;case"pvi":r=mr(a,i[o[0]],i[o[1]],o[2]+1,o[3]+1);break;case"gvitm":r=hr(a,[i[o[0]],i[o[1]],i[o[2]],i[o[3]],i[o[4]],i[o[5]]]);break;case"sultan":r=dr(a,[i[o[0]],i[o[1]],i[o[2]],i[o[3]],i[o[4]]]);break;case"vari":r=fr(a,[i[o[0]],i[o[1]],i[o[2]]]);break;case"mtvi2":r=gr(a,[i[o[0]],i[o[1]],i[o[2]]]);break;case"rtvi-core":r=yr(a,[i[o[0]],i[o[1]],i[o[2]]]);break;case"evi":r=xr(a,[i[o[0]],i[o[1]],i[o[2]]]);break;case"wndwi":r=vr(a,[i[o[0]],i[o[1]],i[o[2]]],o[3]?o[3]+1:.5);break;case"bai":r=wr(a,i[o[0]],i[o[1]]);break;case"custom":r=sr(a,i,s);break;default:return e}const{outputPixelType:u="f32"}=t,c=u!=null&&L(u);let p;a?(p=new Uint8Array(e.width*e.height),p.set(a)):c&&(p=new Uint8Array(e.width*e.height).fill(255)),c&&(r=r.map(d=>{const f=b.createEmptyBand(u,d.length);return Ve(d,p,u,f),f}));const h=new b({width:e.width,height:e.height,pixelType:u,pixels:r,mask:p});return h.updateStatistics(),h}function or(e,t,s,n){const{mask:o,pixels:i,width:a,height:r}=e,u=i[s],c=i[t],p=c.length,h=n?new Uint8Array(p):new Float32Array(p),d=n?100:1,f=n?100.5:0;for(let x=0;x<p;x++)if(o==null||o[x]){const y=u[x],v=c[x],w=y+v;w&&(h[x]=(y-v)/w*d+f)}const g=new b({width:a,height:r,mask:o,pixelType:n?"u8":"f32",pixels:[h]});return g.updateStatistics(),g}function V(e){const t=new Float32Array(9);return t[3*e[0]]=1,t[3*e[1]+1]=1,t[3*e[2]+2]=1,t}function ys(e,t,s){const n=s.length,o=new Float32Array(n);for(let i=0;i<n;i++)if(e==null||e[i]){const a=t[i],r=s[i],u=a+r;u&&(o[i]=(a-r)/u)}return[o]}function ir(e,t,s){const n=s.length,o=new Float32Array(n);for(let i=0;i<n;i++)if(e==null||e[i]){const a=t[i],r=s[i];r&&(o[i]=a/r)}return[o]}function ar(e,t,s){const n=t.length,o=new Float32Array(n);for(let i=0;i<n;i++)if(e==null||e[i]){const a=t[i],r=s[i];r&&(o[i]=a/r-1)}return[o]}function ur(e,t,s,n){const o=s.length,i=new Float32Array(o);for(let a=0;a<o;a++)if(e==null||e[a]){const r=s[a],u=t[a],c=u+r+n;c&&(i[a]=(u-r)/c*(1+n))}return[i]}function lr(e,t,s,n,o,i){const a=s.length,r=new Float32Array(a),u=-o*n+i*(1+n*n);for(let c=0;c<a;c++)if(e==null||e[c]){const p=s[c],h=t[c],d=o*h+p+u;d&&(r[c]=n*(h-n*p-o)/d)}return[r]}function cr(e,t,s){const n=s.length,o=new Float32Array(n);for(let i=0;i<n;i++)if(e==null||e[i]){const a=s[i],r=t[i],u=2*r+1;o[i]=.5*(u-Math.sqrt(u*u-8*(r-a)))}return[o]}function pr(e,t,s){const n=s.length,o=new Float32Array(n);for(let i=0;i<n;i++)if(e==null||e[i]){const a=s[i],r=t[i];if(a!==1&&r+a+.5!==0){const u=(2*(r*r-a*a)+1.5*r+.5*a)/(r+a+.5);o[i]=u*(1-.25*u)-(a-.125)/(1-a)}}return[o]}function mr(e,t,s,n,o){const i=s.length,a=new Float32Array(i),r=1/Math.sqrt(1+n*n);for(let u=0;u<i;u++)if(e==null||e[u]){const c=s[u],p=t[u];a[u]=(p-n*c-o)*r}return[a]}function hr(e,t){const[s,n,o,i,a,r]=t,u=s.length,c=new Float32Array(u);for(let p=0;p<u;p++)(e==null||e[p])&&(c[p]=-.2848*s[p]-.2435*n[p]-.5436*o[p]+.7243*i[p]+.084*a[p]-.18*r[p]);return[c]}function dr(e,t){const[s,n,o,i,a]=t,r=s.length,u=new Float32Array(r),c=new Float32Array(r),p=new Float32Array(r);for(let h=0;h<r;h++)(e==null||e[h])&&(u[h]=a[h]?i[h]/a[h]*100:0,c[h]=s[h]?i[h]/s[h]*100:0,p[h]=o[h]?n[h]/o[h]*(i[h]/o[h])*100:0);return[u,c,p]}function fr(e,t){const[s,n,o]=t,i=s.length,a=new Float32Array(i);for(let r=0;r<i;r++)if(e==null||e[r])for(r=0;r<i;r++){const u=s[r],c=n[r],p=c+u-o[r];p&&(a[r]=(c-u)/p)}return[a]}function gr(e,t){const[s,n,o]=t,i=s.length,a=new Float32Array(i);for(let r=0;r<i;r++)if(e==null||e[r])for(r=0;r<i;r++){const u=s[r],c=n[r],p=o[r],h=Math.sqrt((2*u+1)**2-(6*u-5*Math.sqrt(c))-.5);if(h){const d=1.5*(1.2*(u-p)-2.5*(c-p));a[r]=d/h}}return[a]}function yr(e,t){const[s,n,o]=t,i=s.length,a=new Float32Array(i);for(let r=0;r<i;r++)if(e==null||e[r])for(r=0;r<i;r++){const u=s[r],c=n[r],p=o[r];a[r]=100*(u-c)-10*(u-p)}return[a]}function xr(e,t){const[s,n,o]=t,i=s.length,a=new Float32Array(i);for(let r=0;r<i;r++)if(e==null||e[r])for(r=0;r<i;r++){const u=s[r],c=n[r],p=u+6*c-7.5*o[r]+1;p&&(a[r]=2.5*(u-c)/p)}return[a]}function vr(e,t,s=.5){const[n,o,i]=t,a=o.length,r=new Float32Array(a);for(let u=0;u<a;u++)if(e==null||e[u])for(u=0;u<a;u++){const c=n[u],p=o[u],h=i[u],d=c+s*p+(1-s)*h;d&&(r[u]=(c-s*p-(1-s)*h)/d)}return[r]}function wr(e,t,s){const n=s.length,o=new Float32Array(n);for(let i=0;i<n;i++)if(e==null||e[i])for(i=0;i<n;i++){const a=(.1-t[i])**2+(.06-s[i])**2;a&&(o[i]=1/a)}return[o]}var ce;let Lt=ce=class extends O{constructor(){super(...arguments),this.method="custom"}clone(){return new ce({method:this.method,bandIndexes:this.bandIndexes,raster:H(this.raster)})}};l([m({json:{type:String,write:!0}})],Lt.prototype,"bandIndexes",void 0),l([X(nr)],Lt.prototype,"method",void 0),Lt=ce=l([P("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],Lt);const br=Lt,Ar=new Set(["vari","mtvi2","rtvi-core","evi"]);let kt=class extends M{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const e=this.sourceRasterInfos[0];if(e.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const t=e.clone();return t.pixelType=this.outputPixelType,t.bandCount=this.functionArguments.method==="sultan"?3:1,this._removeStatsHistColormapVAT(t),t.keyProperties={...t.keyProperties,BandProperties:void 0},this.rasterInfo=t,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(e){const t=e.pixelBlocks?.[0];if(t==null)return t;const{method:s,bandIndexes:n}=this.functionArguments,o=n.split(" ").map(i=>parseFloat(i));return rr(t,{method:s,bandIndexes:o,equation:n,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const e=this.functionArguments.bandIndexes.split(" ").map(a=>parseFloat(a)-1);e.length===2&&e.push(0);const t=this.isInputBandIdsSwizzled?[0,1,2]:e;let s,n;const o=new Float32Array(3),{method:i}=this.functionArguments;switch(i){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":s=V([t[0],t[1],0]),n="ndxi";break;case"ndwi":s=V([t[1],t[0],0]),n="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":s=V([t[0],t[1],0]),n="sr";break;case"ci-g":case"ci-re":s=V([t[0],t[1],0]),n="ci";break;case"savi":s=V([t[0],t[1],0]),n="savi",o[0]=e[2]+1;break;case"tsavi":s=V([t[0],t[1],0]),n="tsavi",o[0]=e[2]+1,o[1]=e[3]+1,o[2]=e[4]+1;break;case"msavi":s=V([t[0],t[1],0]),n="msavi";break;case"gemi":s=V([t[0],t[1],0]),n="gemi";break;case"pvi":s=V([t[0],t[1],0]),n="tsavi",o[0]=e[2]+1,o[1]=e[3]+1;break;case"vari":s=V([t[0],t[1],t[2]]),n="vari";break;case"mtvi2":s=V([t[0],t[1],t[2]]),n="mtvi";break;case"rtvi-core":s=V([t[0],t[1],t[2]]),n="rtvicore";break;case"evi":s=V([t[0],t[1],t[2]]),n="evi";break;case"wndwi":s=V([t[0],t[1],0]),n="wndwi",o[0]=e[3]?e[3]+1:.5;break;case"bai":s=V([t[1],t[0],0]),n="bai";break;default:s=V([0,1,2]),n="custom"}return{bandIndexMat3:s,indexType:n,adjustments:o,isOutputRounded:L(this.outputPixelType)}}_getInputBandIds(e){if(this.functionArguments.method==="custom")return e;const t=this.functionArguments.bandIndexes.split(" ").map(a=>parseFloat(a)-1),s=e.length,n=t.map(a=>a>=s?s-1:a),o=Ar.has(this.functionArguments.method)?3:2,i=n.slice(0,o).map(a=>e[a]);return i.length===2&&i.push(0),i}_swizzleBandIds(e){const t=this.functionArguments.bandIndexes.split(" ").map(o=>parseFloat(o)-1);t.length===2&&t.push(0);const{method:s}=this.functionArguments,n=(["vari","mtvi2","rtvi-core","evi"].includes(s)?t.slice(0,3):s==="bai"||s==="ndwi"?[t[1],t[0]]:t.slice(0,2)).map(o=>e.indexOf(o));return n[2]??=n[1],this.isInputBandIdsSwizzled=!0,this.swizzledBandSelection=n,!1}};l([m({json:{write:!0,name:"rasterFunction"}})],kt.prototype,"functionName",void 0),l([m({type:br,json:{write:!0,name:"rasterFunctionArguments"}})],kt.prototype,"functionArguments",void 0),l([m()],kt.prototype,"rasterArgumentNames",void 0),kt=l([P("esri.layers.support.rasterFunctions.BandArithmeticFunction")],kt);const Tr=kt;var pe;const xs=new K({1:"outside",2:"inside"},{useNumericKeys:!0});let Wt=pe=class extends O{constructor(){super(...arguments),this.clippingType="outside"}clone(){return new pe({clippingGeometry:this.clippingGeometry.clone(),clippingType:this.clippingType})}};l([m({types:Ss,json:{read:ks,write:!0}})],Wt.prototype,"clippingGeometry",void 0),l([m({json:{read:xs.read,write:xs.write}})],Wt.prototype,"clippingType",void 0),Wt=pe=l([P("esri.layers.support.rasterFunctions.ClipFunctionArguments")],Wt);const Pr=Wt;let lt=class extends M{constructor(){super(...arguments),this.functionName="Clip",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this.rasterInfo=e;const{functionArguments:t}=this,{clippingGeometry:s,clippingType:n}=t;if(!s)return{success:!1,supportsGPU:!1,error:"missing clipping geometry"};if(n==="outside")try{const{spatialReference:o}=e,i=s.type==="extent"?tn(s,o):en(s,o).extent;i&&Ys(e,i)}catch{}return{success:!0,supportsGPU:!0}}_processPixels(e){return e.pixelBlocks?.[0]}_getWebGLParameters(){const{clippingGeometry:e,clippingType:t}=this.functionArguments;return{clippingGeometry:e.toJSON(),clippingType:t}}};l([m({json:{write:!0,name:"rasterFunction"}})],lt.prototype,"functionName",void 0),l([m({type:Pr,json:{write:!0,name:"rasterFunctionArguments"}})],lt.prototype,"functionArguments",void 0),l([m()],lt.prototype,"rasterArgumentNames",void 0),l([m()],lt.prototype,"isNoopProcess",void 0),lt=l([P("esri.layers.support.rasterFunctions.ClipFunction")],lt);const Fr=lt;var me;let Z=me=class extends O{castColormapName(e){if(!e)return null;const t=e.toLowerCase();return Ws.includes(t)?t:null}readColorRamp(e){return Xe(e)}readColorRampName(e,t){if(!e)return null;const s=at.jsonValues.find(n=>n.toLowerCase()===e.toLowerCase());return s?at.fromJSON(s):null}clone(){return new me({colormap:H(this.colormap),colormapName:this.colormapName,colorRamp:this.colorRamp?.clone(),colorRampName:this.colorRampName})}};l([m({type:[[Number]],json:{write:!0}})],Z.prototype,"colormap",void 0),l([m({type:String,json:{write:!0}})],Z.prototype,"colormapName",void 0),l([Ee("colormapName")],Z.prototype,"castColormapName",null),l([m({types:sn,json:{write:!0}})],Z.prototype,"colorRamp",void 0),l([Vt("colorRamp")],Z.prototype,"readColorRamp",null),l([m({type:at.apiValues,json:{type:at.jsonValues,write:at.write}})],Z.prototype,"colorRampName",void 0),l([Vt("colorRampName")],Z.prototype,"readColorRampName",null),Z=me=l([P("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],Z);const Nr=Z,Rr=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],Ir=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function he(e,t){const s=[],n=[];for(let i=0;i<e.length-1;i++)s.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:e[i].slice(1),toColor:e[i+1].slice(1)}),n.push(e[i+1][0]-e[i][0]);const o=e[e.length-1][0];return He({type:"multipart",colorRamps:s},{numColors:o,weights:t=t??n})}function _r(){return he([[0,0,191,191],[51,0,0,255],[102,255,0,255],[153,255,0,127],[204,191,63,127],[256,20,20,20]])}function Cr(){const e=he([[0,255,255,255],[70,0,255,0],[80,205,173,193],[100,150,150,150],[110,120,51,100],[130,120,100,200],[140,28,3,144],[160,6,0,55],[180,10,25,30],[201,6,7,27]]);for(let t=e.length;t<256;t++)e.push([6,27,7]);return e}function kr(){return He({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]})}function Sr(){const e=[];for(let t=0;t<256;t++){const s=[];for(let n=0;n<3;n++)s.push(Math.round(255*Math.random()));e.push(s)}return e}function Br(){return he([[0,38,41,54],[69,79,82,90],[131,156,156,156],[256,253,253,241]],[.268,.238,.495])}function jr(e){let t;switch(e){case"elevation":t=_r();break;case"gray":t=kr();break;case"hillshade":t=Br();break;case"ndvi":t=Rr;break;case"ndvi2":t=Cr();break;case"ndvi3":t=Ir;break;case"random":t=Sr()}return t?(t=t.map((s,n)=>[n,...s]),t):null}let Q=class extends M{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const e=this.sourceRasterInfos[0];if(e.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:t,colormapName:s,colorRamp:n,colorRampName:o}=this.functionArguments;if(!t?.length)if(n)this.colorRamp=n,t=ne(n,{interpolateAlpha:!0});else if(o){const r=qe(o);r&&(t=ne(r),this.colorRamp=Xe(r))}else s&&(t=jr(s));if(!t?.length)return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};const i=this._getOutputPixelType(e.pixelType);this.outputPixelType=i.startsWith("f")?"s32":i;const a=e.clone();return a.pixelType=this.outputPixelType,a.colormap=t,a.bandCount=1,this.rasterInfo=a,{success:!0,supportsGPU:!0}}_processPixels(e){let t=e.pixelBlocks?.[0];return!t||L(t.pixelType)||(t=t.clone(),t.clamp(this.outputPixelType)),t}};l([m({json:{write:!0,name:"rasterFunction"}})],Q.prototype,"functionName",void 0),l([m({type:Nr,json:{write:!0,name:"rasterFunctionArguments"}})],Q.prototype,"functionArguments",void 0),l([m()],Q.prototype,"rasterArgumentNames",void 0),l([m()],Q.prototype,"isNoopProcess",void 0),l([m({json:{write:!0}})],Q.prototype,"indexedColormap",void 0),l([m()],Q.prototype,"colorRamp",void 0),Q=l([P("esri.layers.support.rasterFunctions.ColormapFunction")],Q);const Mr=Q;var de;let fe=de=class extends O{clone(){return new de({raster:this.raster})}};fe=de=l([P("esri.layers.support.rasterFunctions.ColormapToRGBFunctionArguments")],fe);const Gr=fe;let ct=class extends M{constructor(){super(...arguments),this.functionName="ColormapToRGB",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const e=this.sourceRasterInfos[0];if(e.bandCount>1||!e.colormap?.length)return{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: source data must be single band with a colormap"};const t=e.clone();t.pixelType=this.outputPixelType=this._getOutputPixelType("u8"),this._removeStatsHistColormapVAT(t),t.bandCount=3,t.statistics=[{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20}],this.rasterInfo=t;const s=[...e.colormap].sort((i,a)=>i[0]-a[0]),{indexedColormap:n,offset:o}=Ue({colormap:s});return n?(this.lookup={indexedColormap:n,offset:o},{success:!0,supportsGPU:$e(n)}):{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: the colormap is not supported"}}_processPixels(e){let t=e.pixelBlocks?.[0];if(!t||!this.lookup)return t;t=t.clone();const s=t.pixels[0],n=t.mask??new Uint8Array(s.length).fill(255),o=new Uint8Array(s.length),i=new Uint8Array(s.length),a=new Uint8Array(s.length),{indexedColormap:r,offset:u}=this.lookup,c=r.length;for(let p=0;p<s.length;p++)if(n[p]){let h=4*(s[p]-u);h<0||h>c-4?n[p]=0:(o[p]=r[h++],i[p]=r[h++],a[p]=r[h++])}return t.pixels=[o,i,a],t.statistics=[new ee(0,255),new ee(0,255),new ee(0,255)],t.pixelType=this.outputPixelType,t}_getWebGLParameters(){return this.lookup}};l([m({json:{write:!0,name:"rasterFunction"}})],ct.prototype,"functionName",void 0),l([m({type:Gr,json:{write:!0,name:"rasterFunctionArguments"}})],ct.prototype,"functionArguments",void 0),l([m()],ct.prototype,"rasterArgumentNames",void 0),l([m({json:{write:!0}})],ct.prototype,"lookup",void 0),ct=l([P("esri.layers.support.rasterFunctions.ColormapToRGBFunction")],ct);const zr=ct;var ge;let Ht=ge=class extends O{constructor(){super(...arguments),this.rasters=[]}writeRasters(e,t){t.rasters=e.map(s=>typeof s=="number"||typeof s=="string"?s:s.toJSON())}clone(){return new ge({rasters:H(this.rasters)})}};l([m({json:{write:!0}})],Ht.prototype,"rasters",void 0),l([$t("rasters")],Ht.prototype,"writeRasters",null),Ht=ge=l([P("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],Ht);const Or=Ht;let St=class extends M{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:e}=this,t=e[0];this.outputPixelType=this._getOutputPixelType(t.pixelType);const s=t.clone();if(s.attributeTable=null,s.colormap=null,s.pixelType=this.outputPixelType,s.bandCount=e.map(({bandCount:o})=>o).reduce((o,i)=>o+i),e.every(({statistics:o})=>o!=null&&o.length)){const o=[];e.forEach(({statistics:i})=>i!=null&&o.push(...i)),s.statistics=o}if(e.every(({histograms:o})=>o!=null&&o.length)){const o=[];e.forEach(({histograms:i})=>i!=null&&o.push(...i)),s.histograms=o}s.multidimensionalInfo&&s.multidimensionalInfo.variables.forEach(o=>{const i=e.map(u=>u.multidimensionalInfo?.variables.find(({name:c})=>c===o.name)),a=i.map(u=>u?.statistics?.length?u.statistics:null),r=i.map(u=>u?.histograms?.length?u.histograms:null);o.statistics=a.every(u=>u!=null)?a.flat():null,o.histograms=r.every(u=>u!=null)?r.flat():null}),s.bandCount>1&&(s.colormap=null,s.attributeTable=null);const n=e.every(o=>o.keyProperties.BandProperties?.length)?e.flatMap(o=>o.keyProperties.BandProperties):void 0;return s.keyProperties={...s.keyProperties,BandProperties:n},this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3}}_processPixels(e){const{pixelBlocks:t}=e;return t?t?.[0]==null?null:Ms(t):null}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};l([m({json:{write:!0,name:"rasterFunction"}})],St.prototype,"functionName",void 0),l([m({type:Or,json:{write:!0,name:"rasterFunctionArguments"}})],St.prototype,"functionArguments",void 0),l([m()],St.prototype,"rasterArgumentNames",void 0),St=l([P("esri.layers.support.rasterFunctions.CompositeBandFunction")],St);const Dr=St,Er=new K({0:"difference",1:"relative-difference",2:"categorical",3:"euclidean-distance",4:"angle-difference",5:"band-with-most-change"},{useNumericKeys:!0}),Vr=new K({0:"all",1:"changed",2:"unchanged"},{useNumericKeys:!0});function Ur(e,t,s,n){const[o,i]=e,a=L(s)&&!L(o.pixelType)&&!L(i.pixelType),r=[o.mask,i.mask].filter(g=>g),u=b.combineBandMasks(r),c=e.map(g=>g.pixels[0]),{width:p,height:h}=o,d=b.createEmptyBand(s,p*h);switch(t){case"difference":case"relative-difference":Lr({bands:c,mask:u,outBand:d,isRoundingNeeded:a,isRelative:t==="relative-difference"});break;case"categorical":Wr({bands:c,mask:u,outBand:d,...n});break;case"euclidean-distance":Hr({pixels:e.map(g=>g.pixels),mask:u,outBand:d});break;case"angle-difference":qr({pixels:e.map(g=>g.pixels),mask:u,outBand:d});break;case"band-with-most-change":$r({pixels:e.map(g=>g.pixels),mask:u,outBand:d})}const f=new b({width:p,height:h,pixels:[d],pixelType:s,mask:u});return f.updateStatistics(),f}function Lr(e){const{bands:[t,s],mask:n,isRelative:o,isRoundingNeeded:i,outBand:a}=e,r=t.length;for(let u=0;u<r;u++)if(!n||n[u]){let c=t[u]-s[u];if(o){const p=Math.max(Math.abs(t[u])-Math.abs(s[u]));c=p>0?c/p:0}a[u]=i?Math.round(c):c}}function Wr(e){const{bands:[t,s],categoryIndexLookups:[n,o],classNames:[i,a],mask:r,keepMethod:u,outBand:c}=e,p=t.length,h=i.length,d=a.length,f=h*d,g=f+1,x=f+2;for(let y=0;y<p;y++)if(!r||r[y]){const v=t[y],w=s[y],A=n[v],T=o[w],N=i[A],F=a[T];c[y]=A==null||T==null?f:u==="changed"&&N===F?g:u==="unchanged"&&N!==F?x:A*d+T}}function Hr(e){const{pixels:[t,s],mask:n,outBand:o}=e,i=t[0].length,a=t.length;for(let r=0;r<i;r++)if(!n||n[r]){let u=0;for(let c=0;c<a;c++){const p=t[c][r]-s[c][r];u+=p*p}o[r]=Math.sqrt(u)}}function qr(e){const{pixels:[t,s],mask:n,outBand:o}=e,i=t[0].length,a=t.length;for(let r=0;r<i;r++)if(!n||n[r]){let u=0,c=0,p=0;for(let d=0;d<a;d++){const f=t[d][r],g=s[d][r];u+=f*g,c+=f*f,p+=g*g}const h=Math.sqrt(c*p);o[r]=h?Math.acos(u/h):1.5707963267948966}}function $r(e){const{pixels:[t,s],mask:n,outBand:o}=e,i=t[0].length,a=t.length;for(let r=0;r<i;r++)if(!n||n[r]){let u=0,c=0;for(let p=0;p<a;p++){const h=Math.abs(t[p][r]-s[p][r]);h>u&&(u=h,c=p)}o[r]=c}}var ye;let pt=ye=class extends O{constructor(){super(...arguments),this.method="difference",this.keepMethod="all",this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new ye({raster:this.raster,raster2:this.raster2,method:this.method,keepMethod:this.keepMethod})}};l([X(Er)],pt.prototype,"method",void 0),l([X(Vr)],pt.prototype,"keepMethod",void 0),l([m({json:{write:!0}})],pt.prototype,"raster2",void 0),l([m({readOnly:!0})],pt.prototype,"rasters",null),pt=ye=l([P("esri.layers.support.rasterFunctions.ComputeChangeFunctionArguments")],pt);const Jr=pt;let mt=class extends M{constructor(){super(...arguments),this.functionName="ComputeChange",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{method:e}=this.functionArguments,t=this.sourceRasterInfos[0].clone();if(this.outputPixelType=this._getOutputPixelType(t.pixelType),t.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(t),e==="categorical"){const s=this.sourceRasterInfos.map(i=>i.attributeTable),n=this._getFieldNames(s,"value"),o=s.map(i=>this._getClassFieldName(i));if(n[0]==null||n[1]==null||o[0]==null||o[1]==null)return{success:!1,supportsGPU:!1,error:"both inputs must have proper attribute table with value and class fields"};this._updateAttributeTable(t,n,o)}return t.bandCount=1,this.rasterInfo=t,{success:!0,supportsGPU:e==="difference"||e==="relative-difference"}}_processPixels(e){const{pixelBlocks:t}=e;if(t?.[0]==null||t?.[1]==null)return null;const{method:s}=this.functionArguments;return Ur(t,s,this.outputPixelType,this._categoryConfig)}_getWebGLParameters(){const e=this.outputPixelType??"f32";let[t,s]=et(e);const n=L(e);return n&&(t-=1e-4,s+=1e-4),{method:this.functionArguments.method,domainRange:[t,s],isOutputRounded:n}}_updateAttributeTable(e,t,s){const n=this.sourceRasterInfos.map(A=>A.attributeTable),o=n.map((A,T)=>A.features.map(N=>N.attributes[t[T]])),i=n.map((A,T)=>A.features.map(N=>N.attributes[s[T]])),a=o.map(A=>{const T=[];return A.forEach((N,F)=>T[N]=F),T}),{keepMethod:r}=this.functionArguments;this._categoryConfig={categoryIndexLookups:a,classNames:i,keepMethod:r};const u=n[0].clone();u.fields=[new st({name:"OID",type:"oid"}),new st({name:"Value",type:"integer"}),new st({name:"ClassName",type:"string"}),new st({name:"Class_From",type:"string"}),new st({name:"Class_To",type:"string"})];const c=this._getFieldNames(n,"red"),p=this._getFieldNames(n,"green"),h=this._getFieldNames(n,"blue"),d=[],f=c.length===2&&p.length===2&&h.length===2;f&&(d.push(...n.map((A,T)=>A.features.map(N=>[N.attributes[c[T]],N.attributes[p[T]],N.attributes[h[T]]]))),u.fields.push(new st({name:"Red",type:"integer"}),new st({name:"Green",type:"integer"}),new st({name:"Blue",type:"integer"})));const g=u.features[0].clone();g.geometry=null;const x=[],[y,v]=o.map(A=>A.length);let w=1;for(let A=0;A<y;A++){const T=i[0][A];for(let N=0;N<v;N++){const F=i[1][N];if(r==="changed"&&T===F||r==="unchanged"&&T!==F)continue;const R=g.clone();R.attributes={OID:w++,Value:A*v+N,ClassName:T===F?T:`${T} -> ${F}`,Class_From:T,Class_To:F},f&&(R.attributes.Red=d[0][A][0]+d[1][N][0]>>1,R.attributes.Green=d[0][A][1]+d[1][N][1]>>1,R.attributes.Blue=d[0][A][2]+d[1][N][2]>>1),x.push(R)}}if(r==="changed"){const A=g.clone();A.attributes={OID:w++,Value:y*v+1,ClassName:"No Change",Class_From:"Same",Class_To:"Same"},x.push(A)}else if(r==="unchanged"){const A=g.clone();A.attributes={OID:w++,Value:y*v+2,ClassName:"Changed",Class_From:"Any",Class_To:"Any"},x.push(A)}u.features=x,e.attributeTable=u}_getFieldNames(e,t){return e.map(({fields:s})=>s.find(n=>n.name.toLowerCase()===t)?.name).filter(s=>s)}_getClassFieldName(e){return(e.fields.find(t=>t.type==="string"&&t.name.toLowerCase().startsWith("class"))??e.fields.find(t=>t.type==="string"&&t.name.toLowerCase().includes("class")||t.name.toLowerCase().includes("type")||t.name.toLowerCase().includes("name"))??e.fields.find(t=>t.type==="string"))?.name}};l([m({json:{write:!0,name:"rasterFunction"}})],mt.prototype,"functionName",void 0),l([m({type:Jr,json:{write:!0,name:"rasterFunctionArguments"}})],mt.prototype,"functionArguments",void 0),l([m()],mt.prototype,"rasterArgumentNames",void 0),l([m({json:{write:!0}})],mt.prototype,"_categoryConfig",void 0),mt=l([P("esri.layers.support.rasterFunctions.ComputeChangeFunction")],mt);const Kr=mt;var xe;let qt=xe=class extends O{constructor(){super(...arguments),this.contrastOffset=0,this.brightnessOffset=0}clone(){return new xe({contrastOffset:this.contrastOffset,brightnessOffset:this.brightnessOffset,raster:this.raster})}};l([m({json:{write:!0}})],qt.prototype,"contrastOffset",void 0),l([m({json:{write:!0}})],qt.prototype,"brightnessOffset",void 0),qt=xe=l([P("esri.layers.support.rasterFunctions.ContrastBrightnessFunctionArguments")],qt);const Xr=qt;let ht=class extends M{constructor(){super(...arguments),this.functionName="ContrastBrightness",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const{sourceRasterInfos:e}=this,t=e[0];if(t.pixelType!=="u8")return{success:!1,supportsGPU:!1,error:"Only unsigned 8 bit raster is supported by ContrastBrightness function."};this.outputPixelType=this._getOutputPixelType("u8");const s=t.clone();this._removeStatsHistColormapVAT(s),this.rasterInfo=s;const{contrastOffset:n,brightnessOffset:o}=this.functionArguments;return this.lookup=Hs(n,o),{success:!0,supportsGPU:!0}}_processPixels(e){const t=e.pixelBlocks?.[0];return t==null?null:se(t,{lut:t.pixels.map(()=>this.lookup),offset:0,outputPixelType:"u8"})}_getWebGLParameters(){const{contrastOffset:e,brightnessOffset:t}=this.functionArguments;return{contrastOffset:e,brightnessOffset:t}}};l([m({json:{write:!0,name:"rasterFunction"}})],ht.prototype,"functionName",void 0),l([m({type:Xr,json:{write:!0,name:"rasterFunctionArguments"}})],ht.prototype,"functionArguments",void 0),l([m()],ht.prototype,"rasterArgumentNames",void 0),l([m({json:{write:!0}})],ht.prototype,"lookup",void 0),ht=l([P("esri.layers.support.rasterFunctions.ContrastBrightnessFunction")],ht);const Zr=ht;function ve(e,t,s,n,o){const i=Math.floor(n/2);for(let r=0;r<i;r++)for(let u=0;u<t;u++)e[r*t+u]=e[(o-1-r)*t+u],e[(s-1-r)*t+u]=e[(s-o+r)*t+u];const a=Math.floor(o/2);for(let r=0;r<s;r++){const u=r*t;for(let c=0;c<a;c++)e[u+c]=e[u+o-1-c],e[u+t-c-1]=e[u+t+c-o]}}const z=new Map;function Qr(e){const t=Math.sqrt(e.length),s=e.slice(0,t),n=[1];for(let o=1;o<t;o++){let i=null;for(let a=0;a<t;a++){const r=e[a+o*t],u=e[a];if(i==null)if(u===0){if(r)return{separable:!1,row:null,col:null}}else i=r/u;else if(r/u!==i)return{separable:!1,row:null,col:null}}if(i==null)return{separable:!1,row:null,col:null};n.push(i)}return{separable:!0,row:s,col:n}}function vs(e,t,s,n,o,i,a){const r=new Float32Array(t*s),u=i.length,c=a?0:n,p=a?n:0,h=a?1:t;for(let d=c;d<s-c;d++){const f=d*t;for(let g=p;g<t-p;g++){if(o&&!o[f+g])continue;let x=0;for(let y=0;y<u;y++)x+=e[f+g+(y-n)*h]*i[y];r[f+g]=x}}return r}function Yr(e,t,s,n,o,i,a){const r=new Float32Array(t*s),u=Math.floor(n/2),c=Math.floor(o/2);for(let p=u;p<s-u;p++){const h=p*t;for(let d=c;d<t-c;d++){if(i&&!i[h+d])continue;let f=0;for(let g=0;g<n;g++)for(let x=0;x<o;x++)f+=e[h+d+(g-u)*t+x-c]*a[g*o+x];r[h+d]=f}}return r}function to(e,t,s=!0){const{pixels:n,width:o,height:i,pixelType:a,mask:r}=e,u=n.length,c=[],{kernel:p,rows:h,cols:d}=t;for(let f=0;f<u;f++){const g=Yr(n[f],o,i,h,d,r,p);s&&ve(g,o,i,h,d),c.push(g)}return new b({width:o,height:i,pixelType:a,pixels:c,mask:r})}function eo(e,t,s,n=!0){const{pixels:o,width:i,height:a,pixelType:r,mask:u}=e,c=o.length,p=[],h=t.length,d=s.length,f=Math.floor(h/2),g=Math.floor(d/2);for(let x=0;x<c;x++){let y=vs(o[x],i,a,f,u,t,!0);y=vs(y,i,a,g,u,s,!1),n&&ve(y,i,a,h,d),p.push(y)}return new b({width:i,height:a,pixelType:r,pixels:p,mask:u})}function so(e,t){const s=Qr(t.kernel),n=t.mirrorEdges!==!1,o=s.separable?eo(e,s.row,s.col,n):to(e,t,n),{outputPixelType:i}=t;return i&&o.clamp(i),o}z.set(_.none,[0,0,0,0,1,0,0,0,0]),z.set(_.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),z.set(_.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),z.set(_.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),z.set(_.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),z.set(_.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),z.set(_.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),z.set(_.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),z.set(_.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),z.set(_.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),z.set(_.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),z.set(_.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),z.set(_.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),z.set(_.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),z.set(_.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),z.set(_.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),z.set(_.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),z.set(_.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),z.set(_.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),z.set(_.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),z.set(_.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),z.set(_.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),z.set(_.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);var we;let dt=we=class extends O{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(e){this._set("convolutionType",e);const t=z.get(e);if(!t||e===_.userDefined||e===_.none)return;const s=Math.sqrt(t.length);this._set("kernel",t),this._set("cols",s),this._set("rows",s)}clone(){return new we({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:H(this.raster)})}};l([m({json:{type:Number,write:!0}})],dt.prototype,"rows",void 0),l([m({json:{type:Number,write:!0}})],dt.prototype,"cols",void 0),l([m({json:{name:"type",type:Number,write:!0}})],dt.prototype,"convolutionType",null),l([m({json:{type:[Number],write:!0}})],dt.prototype,"kernel",void 0),dt=we=l([P("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],dt);const no=dt,ws=25;let ft=class extends M{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}get _normalizedKernel(){const{kernel:e,convolutionType:t}=this.functionArguments,s=e.reduce((n,o)=>n+o);return t===-1||s===0||s===1?e:e.map(n=>n/s)}_bindSourceRasters(){const{convolutionType:e,rows:t,cols:s,kernel:n}=this.functionArguments;if(!Object.values(_).includes(e))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${e}`};if(e!==_.none&&t*s!==n.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const o=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(o.pixelType);const i=o.clone();i.pixelType=this.outputPixelType;const a=[_.none,_.sharpen,_.sharpen2,_.sharpening3x3,_.sharpening5x5];return(e===-1||this.outputPixelType!=="u8"&&!a.includes(e))&&(i.statistics=null,i.histograms=null),i.colormap=null,i.attributeTable=null,this.rasterInfo=i,{success:!0,supportsGPU:n.length<=ws}}_processPixels(e){const t=e.pixelBlocks?.[0];if(t==null||this.functionArguments.convolutionType===_.none)return t;const{rows:s,cols:n}=this.functionArguments,{_normalizedKernel:o}=this;return so(t,{kernel:o,rows:s,cols:n,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const e=new Float32Array(ws),{rows:t,cols:s}=this.functionArguments,{_normalizedKernel:n}=this;for(let o=0;o<t;o++)for(let i=0;i<s;i++)e[5*o+i]=n[o*s+i];return{kernelRows:t,kernelCols:s,kernel:e,clampRange:et(this.outputPixelType)}}};l([m({json:{write:!0,name:"rasterFunction"}})],ft.prototype,"functionName",void 0),l([m({type:no,json:{write:!0,name:"rasterFunctionArguments"}})],ft.prototype,"functionArguments",void 0),l([m()],ft.prototype,"rasterArgumentNames",void 0),l([m()],ft.prototype,"_normalizedKernel",null),ft=l([P("esri.layers.support.rasterFunctions.ConvolutionFunction")],ft);const ro=ft;var be;const bs=new K({0:"standard",1:"planform",2:"profile"},{useNumericKeys:!0});let Bt=be=class extends O{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(e,t){return bs.fromJSON(t.type??t.curvatureType??0)}clone(){return new be({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};l([m({json:{write:{target:"type"}}}),X(bs)],Bt.prototype,"curvatureType",void 0),l([Vt("curvatureType",["type","curvatureType"])],Bt.prototype,"readCurvatureType",null),l([m({type:Number,json:{write:!0}})],Bt.prototype,"zFactor",void 0),Bt=be=l([P("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],Bt);const oo=Bt;let gt=class extends M{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const e=this.sourceRasterInfos[0].clone();return e.pixelType=this.outputPixelType,e.bandCount=1,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,this.isGCS=e.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(e){const t=e.pixelBlocks?.[0];if(t==null)return null;const{zFactor:s,curvatureType:n}=this.functionArguments,{extent:o,primaryPixelSizes:i}=e,a=i?.[0],r=a??(o?{x:o.width/t.width,y:o.height/t.height}:{x:1,y:1}),u=this.isGCS&&s>=1?s*Ut:s;return qs(t,{zFactor:u,curvatureType:n,resolution:r})}_getWebGLParameters(){const{zFactor:e,curvatureType:t}=this.functionArguments;return{curvatureType:t,zFactor:this.isGCS&&e>=1?e*Ut:e}}};l([m({json:{write:!0,name:"rasterFunction"}})],gt.prototype,"functionName",void 0),l([m({type:oo,json:{write:!0,name:"rasterFunctionArguments"}})],gt.prototype,"functionArguments",void 0),l([m()],gt.prototype,"rasterArgumentNames",void 0),l([m({json:{write:!0}})],gt.prototype,"isGCS",void 0),gt=l([P("esri.layers.support.rasterFunctions.CurvatureFunction")],gt);const io=gt;var Ae;let Y=Ae=class extends O{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=Le.bestMatch}clone(){return new Ae({bandIds:this.bandIds?.slice(),bandNames:this.bandNames?.slice(),bandWavelengths:this.bandWavelengths?.slice(),missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};l([m({json:{write:!0}})],Y.prototype,"bandIds",void 0),l([m({json:{write:!0}})],Y.prototype,"bandNames",void 0),l([m({json:{write:!0}})],Y.prototype,"bandWavelengths",void 0),l([X({0:"name",1:"wavelength",2:"id"})],Y.prototype,"method",void 0),l([m({json:{write:!0}})],Y.prototype,"missingBandAction",void 0),l([m({json:{write:!0}})],Y.prototype,"wavelengthMatchTolerance",void 0),Y=Ae=l([P("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],Y);const ao=Y;let jt=class extends M{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{functionArguments:e,sourceRasterInfos:t}=this,s=t[0],{method:n,bandNames:o,bandWavelengths:i,bandIds:a,missingBandAction:r}=e,u=o?.length&&(n==="name"||n!=="id"&&!a?.length),c=i?.length&&(n==="wavelength"||n!=="id"&&!a?.length),p=r===Le.fail,h=u?lo(s,o):c?po(s,i,this.functionArguments,p):co(s,a,p);if(h==null)return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${u?"band names":c?"band wavelengths":"band ids"} for the imagery data source`};this.functionArguments.bandIds=h,this.functionArguments.method="id",this.outputPixelType=this._getOutputPixelType("f32");const d=s.clone();d.pixelType=this.outputPixelType,d.bandCount=h.length;const{statistics:f,histograms:g}=d;f!=null&&f.length&&(d.statistics=h.map(y=>f[y]||f[f.length-1])),g!=null&&g.length&&(d.histograms=h.map(y=>g[y]||g[g.length-1])),d.multidimensionalInfo&&d.multidimensionalInfo.variables.forEach(y=>{const{statistics:v,histograms:w}=y;v!=null&&v.length&&(y.statistics=h.map(A=>v[A]||v[v.length-1])),w!=null&&w.length&&(y.histograms=h.map(A=>w[A]||w[w.length-1]))});let x=d.keyProperties?.BandProperties;return x?.length&&(x=h.map(y=>y>=x.length?x[x.length-1]:x[y]),d.keyProperties={...d.keyProperties,BandProperties:x}),this.rasterInfo=d,{success:!0,supportsGPU:d.bandCount<=3}}_processPixels(e){const t=e.pixelBlocks?.[0];if(t==null)return null;const s=t.pixels.length,n=this.functionArguments.bandIds.map(o=>o>=s?s-1:o);return t.extractBands(n)}_getWebGLParameters(){let e;if(this.isInputBandIdsSwizzled)e=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{e=[...this.functionArguments.bandIds],e.length===0?e=[0,1,2]:e.length<3&&(e[1]=e[1]??e[0],e[2]=e[2]??e[1]);for(let t=0;t<3;t++)e[t]=Math.min(e[t],2)}return{bandIndexMat3:V(e)}}_getInputBandIds(e){const t=e.length;return this.functionArguments.bandIds.map(s=>s>=t?t-1:s).map(s=>e[s])}_swizzleBandIds(e){const t=this.functionArguments.bandIds.map(s=>e.indexOf(s));return this.isInputBandIdsSwizzled=!0,t[1]??=t[0],t[2]??=t[1],this.swizzledBandSelection=t,!1}};l([m({json:{write:!0,name:"rasterFunction"}})],jt.prototype,"functionName",void 0),l([m({type:ao,json:{write:!0,name:"rasterFunctionArguments"}})],jt.prototype,"functionArguments",void 0),l([m()],jt.prototype,"rasterArgumentNames",void 0),jt=l([P("esri.layers.support.rasterFunctions.ExtractBandFunction")],jt);const uo=jt;function lo(e,t){const s=e.bandInfos.map(({name:o})=>o.toLowerCase()),n=[];for(let o=0;o<t.length;o++){const i=t[o].toLowerCase();let a=s.indexOf(i);if(a===-1&&i==="nearinfrared"&&(a=s.findIndex(r=>r.startsWith("nearinfrared_1")),a===-1&&(a=s.findIndex(r=>r.startsWith("nearinfrared")))),a===-1)return null;n.push(a)}return n}function co(e,t,s){const{bandCount:n}=e;return!t?.length||s&&t.some(o=>o<0||o>=n)?null:t}function po(e,t,{wavelengthMatchTolerance:s},n){const{bandInfos:o}=e,i=[];for(let r=0;r<o.length;r++){const{minWavelength:u,maxWavelength:c}=o[r];if(!u||!c)return null;i.push({minWavelength:u,maxWavelength:c})}const a=[];for(let r=0;r<t.length;r++){const u=t[r];let c=!1,p=-1,h=Number.MAX_VALUE;for(let d=0;d<i.length;d++){const f=i[d],g=u>=f.minWavelength&&u<=f.maxWavelength,x=Math.abs(u-(f.minWavelength+f.maxWavelength)/2);g?x<h&&(c=!0,p=d,h=x):!c&&x<h&&(p=d,h=x)}if(!c&&s&&h<s&&(c=!0),!c&&n)return null;a.push(p)}return a}function mo(e,t,s){const{pixels:n,width:o,height:i,mask:a,bandMasks:r}=e,u=o*i,c=r?.length?b.combineBandMasks(r):a,p=Math.min(t.length,n.length),h=s.startsWith("f"),d=!h&&s!==e.pixelType,[f,g]=et(s),x=b.createEmptyBand(s,u);for(let v=0;v<i;v++){let w=v*o;for(let A=0;A<o;A++,w++)if(!c||c[w]){let T=0;for(let N=0;N<p;N++)T+=t[N]*n[N][w];h||(T=Math.round(T),d&&(T=T>g?g:T<f?f:T)),x[w]=T}}const y=new b({width:o,height:i,pixels:[x],pixelType:s,mask:c});return y.updateStatistics(),y}var Te;let Qt=Te=class extends O{clone(){return new Te({conversionParameters:[...this.conversionParameters],raster:this.raster})}};l([m({type:[Number],json:{write:!0}})],Qt.prototype,"conversionParameters",void 0),Qt=Te=l([P("esri.layers.support.rasterFunctions.GrayscaleFunctionArguments")],Qt);const ho=Qt;let yt=class extends M{constructor(){super(...arguments),this.functionName="Grayscale",this.functionArguments=null,this.rasterArgumentNames=["raster"]}get _normalizedWeights(){const{conversionParameters:e}=this.functionArguments,t=e.reduce((s,n)=>s+n);return e.map(s=>s/t)}_bindSourceRasters(){const{conversionParameters:e}=this.functionArguments;if(!e?.length)return{success:!1,supportsGPU:!1,error:"missing valid conversion parameters."};const t=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(t.pixelType),t.pixelType=this.outputPixelType;const s=e.length===3||t.bandCount===3&&e.length>3;return t.bandCount=1,this._removeStatsHistColormapVAT(t),this.rasterInfo=t,{success:!0,supportsGPU:s}}_processPixels(e){const t=e.pixelBlocks?.[0];return t==null?null:mo(t,this._normalizedWeights,this.outputPixelType)}_getWebGLParameters(){return{weights:this._normalizedWeights}}};l([m({json:{write:!0,name:"rasterFunction"}})],yt.prototype,"functionName",void 0),l([m({type:ho,json:{write:!0,name:"rasterFunctionArguments"}})],yt.prototype,"functionArguments",void 0),l([m()],yt.prototype,"rasterArgumentNames",void 0),l([m()],yt.prototype,"_normalizedWeights",null),yt=l([P("esri.layers.support.rasterFunctions.GrayscaleFunction")],yt);const fo=yt;var Pe;const go=new K({0:"traditional",1:"multi-directional"},{useNumericKeys:!0}),yo=new K({1:"degree",2:"percent-rise",3:"scaled"},{useNumericKeys:!0});let J=Pe=class extends O{constructor(){super(...arguments),this.altitude=45,this.azimuth=315,this.hillshadeType="traditional",this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.slopeType="degree",this.zFactor=1,this.removeEdgeEffect=!1}clone(){return new Pe({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};l([m({type:Number,json:{write:!0}})],J.prototype,"altitude",void 0),l([m({type:Number,json:{write:!0}})],J.prototype,"azimuth",void 0),l([m(),X(go)],J.prototype,"hillshadeType",void 0),l([m({type:Number,json:{write:!0,name:"psPower"}})],J.prototype,"pixelSizePower",void 0),l([m({type:Number,json:{write:!0,name:"psZFactor"}})],J.prototype,"pixelSizeFactor",void 0),l([m(),X(yo)],J.prototype,"slopeType",void 0),l([m({type:Number,json:{write:!0}})],J.prototype,"zFactor",void 0),l([m({type:Boolean,json:{write:!0}})],J.prototype,"removeEdgeEffect",void 0),J=Pe=l([P("esri.layers.support.rasterFunctions.HillshadeFunctionArguments")],J);const As=J;let xt=class extends M{constructor(){super(...arguments),this.functionName="Hillshade",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const e=this.sourceRasterInfos[0];if(e.bandCount>1)return{success:!1,supportsGPU:!1,error:"hillshade-function: source data must be single band"};this.outputPixelType=this._getOutputPixelType("u8");const t=e.clone();return this._removeStatsHistColormapVAT(t),t.pixelType=this.outputPixelType,t.bandCount=1,t.statistics=[{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(e){const t=e.pixelBlocks?.[0];if(!t)return null;const{extent:s,primaryPixelSizes:n}=e,o=n?.[0],i=o??(s?{x:s.width/t.width,y:s.height/t.height}:{x:1,y:1}),a=Kt(this.functionArguments,i,this.isGCS),r=Je(t,a);return r.pixelType=this.outputPixelType,r}_getWebGLParameters(){const e=Kt(this.functionArguments,{x:1,y:1},this.isGCS),t=Ke(e),{slopeType:s,zFactor:n,pixelSizeFactor:o,pixelSizePower:i}=this.functionArguments,a=s==="scaled",r=L(this.outputPixelType);return{...t,zFactor:n,gcsFactor:this.isGCS?Ut:1,pixelSizeFactor:a?o:0,pixelSizePower:a?i:0,isOutputRounded:r}}};l([m({json:{write:!0,name:"rasterFunction"}})],xt.prototype,"functionName",void 0),l([m({type:As,json:{write:!0,name:"rasterFunctionArguments"}})],xt.prototype,"functionArguments",void 0),l([m()],xt.prototype,"rasterArgumentNames",void 0),l([m({json:{write:!0}})],xt.prototype,"isGCS",void 0),xt=l([P("esri.layers.support.rasterFunctions.HillshadeFunction")],xt);const xo=xt;var Fe;let vt=Fe=class extends O{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(e,t){t.rasters=e.map(s=>typeof s=="number"||typeof s=="string"?s:s.toJSON())}clone(){return new Fe({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:H(this.rasters)})}};l([m({json:{write:!0}})],vt.prototype,"operation",void 0),l([m({json:{write:!0}})],vt.prototype,"rasters",void 0),l([$t("rasters")],vt.prototype,"writeRasters",null),l([m({json:{write:!0}})],vt.prototype,"processAsMultiband",void 0),vt=Fe=l([P("esri.layers.support.rasterFunctions.LocalFunctionArguments")],vt);const vo=vt;let Mt=class extends M{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:e}=this,t=e[0],{bandCount:s}=t,{processAsMultiband:n}=this.functionArguments;if(e.some(u=>u.bandCount!==s))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:o,rasters:i}=this.functionArguments,a=es[o];if(!(a===999||i.length===a||i.length<=1&&a===1))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${a}`};const r=t.clone();return r.bandCount=a!==999||n?s:1,this._removeStatsHistColormapVAT(r),this._updateStatistics(r),this._updatePixelType(r),this.rasterInfo=r,{success:!0,supportsGPU:r.bandCount===1&&a<=3}}_processPixels(e){const{pixelBlocks:t}=e;return t==null||t.some(s=>s==null)?null:fs(t,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:e}=this.functionArguments,t=es[e],s=Object.keys(Qe).find(r=>Qe[r]===e)?.toLowerCase()??"undefined",n=this.outputPixelType??"f32";let[o,i]=et(n);const a=L(n);return a&&(o-=1e-4,i+=1e-4),{imageCount:t,operationName:s,domainRange:[o,i],isOutputRounded:a}}_updateStatistics(e){const t=this.sourceRasterInfos[0],{operation:s}=this.functionArguments,n=ts(s)?.domain;if(n){e.statistics=[];for(let o=0;o<e.bandCount;o++)e.statistics[o]={min:n[0],max:n[1],avg:(n[0]+n[1])/2,stddev:(n[0]+n[1])/10}}else s===45&&t.statistics?.length&&(e.statistics=t.statistics.map(o=>({min:-o.max,max:-o.min,avg:o.avg!=null?-o.avg:void 0,stddev:o.stddev!=null?-o.stddev:void 0})))}_updatePixelType(e){const{statistics:t,pixelType:s}=this.sourceRasterInfos[0],{operation:n}=this.functionArguments,{domain:o,isInteger:i}=ts(n)??{domain:null,isInteger:!1};let a="f32";if(o&&i)a=te(o[0],o[1]);else if(n===30){const r=t?.[0];a=r?te(r.min,r.max):L(s)?s:"s32"}else if(n===45&&L(s)){const r=t?.map(({max:h})=>-h),u=t?.map(({min:h})=>-h),c=r?.length?Math.min(...r):null,p=u?.length?Math.min(...u):null;a=c!=null&&p!=null?te(c,p):s.startsWith("s")?s.replace("s","u"):s==="u1"||s==="u2"||s==="u4"?"s8":s==="u8"?"s16":"s32"}e.pixelType=this.outputPixelType=this._getOutputPixelType(a)}};l([m({json:{write:!0,name:"rasterFunction"}})],Mt.prototype,"functionName",void 0),l([m({type:vo,json:{write:!0,name:"rasterFunctionArguments"}})],Mt.prototype,"functionArguments",void 0),l([m()],Mt.prototype,"rasterArgumentNames",void 0),Mt=l([P("esri.layers.support.rasterFunctions.LocalFunction")],Mt);const wo=Mt;var Ne;let wt=Ne=class extends O{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=We.matchAny}get normalizedNoDataValues(){const{noDataValues:e}=this;if(!e?.length)return null;let t=!1;const s=e.map(n=>{if(typeof n=="number")return t=!0,[n];if(typeof n=="string"){const o=n.trim().split(" ").filter(i=>i.trim()!=="").map(i=>Number(i));return t=t||o.length>0,o.length===0?null:o}return null});return t?s:null}clone(){return new Ne({includedRanges:this.includedRanges?.slice()??[],noDataValues:this.noDataValues?.slice()??[],noDataInterpretation:this.noDataInterpretation})}};l([m({json:{write:!0}})],wt.prototype,"includedRanges",void 0),l([m({json:{write:!0}})],wt.prototype,"noDataValues",void 0),l([m()],wt.prototype,"normalizedNoDataValues",null),l([m({json:{write:!0}})],wt.prototype,"noDataInterpretation",void 0),wt=Ne=l([P("esri.layers.support.rasterFunctions.MaskFunctionArguments")],wt);const bo=wt;let bt=class extends M{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const e=this.sourceRasterInfos[0].clone(),{pixelType:t}=e;this.outputPixelType=this._getOutputPixelType(t),e.pixelType=this.outputPixelType,this.rasterInfo=e;const{includedRanges:s,normalizedNoDataValues:n}=this.functionArguments;if(!s?.length&&!n?.length)return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let o=[];for(let a=0;a<e.bandCount;a++){const r=Gs(t,s?.slice(2*a,2*a+2),n?.[a]);if(r==null){o=null;break}o.push(r)}this.lookups=o;const i=n!=null&&n.every(a=>a?.length===n[0]?.length);return{success:!0,supportsGPU:(!s||s.length<=2*It)&&(!n||i&&n[0].length<=It)}}_processPixels(e){const t=e.pixelBlocks?.[0];if(t==null)return null;const{outputPixelType:s,lookups:n}=this,{includedRanges:o,noDataInterpretation:i,normalizedNoDataValues:a}=this.functionArguments,r=i===We.matchAll;return zs(t,{includedRanges:o,noDataValues:a,outputPixelType:s,matchAll:r,lookups:n})}_getWebGLParameters(){const{includedRanges:e,normalizedNoDataValues:t}=this.functionArguments,s=new Float32Array(It);s.fill(Jt),t?.[0]?.length&&s.set(t[0]);const n=new Float32Array(6);for(let o=0;o<n.length;o+=2)n[o]=e?.[o]??-Jt,n[o+1]=e?.[o+1]??Jt;return e?.length&&n.set(e),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:s,includedRanges:n}}};l([m({json:{write:!0,name:"rasterFunction"}})],bt.prototype,"functionName",void 0),l([m({type:bo,json:{write:!0,name:"rasterFunctionArguments"}})],bt.prototype,"functionArguments",void 0),l([m()],bt.prototype,"rasterArgumentNames",void 0),l([m({json:{write:!0}})],bt.prototype,"lookups",void 0),bt=l([P("esri.layers.support.rasterFunctions.MaskFunction")],bt);const Ao=bt;var Re;let Gt=Re=class extends O{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:e,infraredBandID:t,scientificOutput:s}=this;return new Re({visibleBandID:e,infraredBandID:t,scientificOutput:s})}};l([m({json:{write:!0}})],Gt.prototype,"visibleBandID",void 0),l([m({json:{write:!0}})],Gt.prototype,"infraredBandID",void 0),l([m({json:{write:!0}})],Gt.prototype,"scientificOutput",void 0),Gt=Re=l([P("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],Gt);const To=Gt;let zt=class extends M{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:e,visibleBandID:t,infraredBandID:s}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(e?"f32":"u8");const n=this.sourceRasterInfos[0],o=Math.max(t,s);if(n.bandCount<2||o>=n.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};if(t<0||s<0)return{success:!1,supportsGPU:!1,error:"ndvi-function: invalid visible or infrared band id"};const i=n.clone();i.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(i),i.bandCount=1,i.keyProperties={...i.keyProperties,BandProperties:void 0};const[a,r,u,c]=e?[-1,1,0,.1]:[0,200,100,10];return i.statistics=[{min:a,max:r,avg:u,stddev:c}],this.rasterInfo=i,{success:!0,supportsGPU:!0}}_processPixels(e){const t=e.pixelBlocks?.[0];if(t==null)return null;const{visibleBandID:s,infraredBandID:n,scientificOutput:o}=this.functionArguments;return or(t,s,n,!o)}_getWebGLParameters(){const{visibleBandID:e,infraredBandID:t,scientificOutput:s}=this.functionArguments,n=this.isInputBandIdsSwizzled?[0,1,2]:[t,e,0];return{bandIndexMat3:V(n),scaled:!s}}_getInputBandIds(e){const{visibleBandID:t,infraredBandID:s}=this.functionArguments;return[s,t,0].map(n=>e[n])}_swizzleBandIds(e){const{visibleBandID:t,infraredBandID:s}=this.functionArguments,n=[t,s].map(o=>e.indexOf(o));return n[2]=n[1],this.isInputBandIdsSwizzled=!0,this.swizzledBandSelection=n,!1}};l([m({json:{write:!0,name:"rasterFunction"}})],zt.prototype,"functionName",void 0),l([m({type:To,json:{write:!0,name:"rasterFunctionArguments"}})],zt.prototype,"functionArguments",void 0),l([m()],zt.prototype,"rasterArgumentNames",void 0),zt=l([P("esri.layers.support.rasterFunctions.NDVIFunction")],zt);const Po=zt;var Ie;let tt=Ie=class extends O{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new Ie({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};l([m({json:{write:!0}})],tt.prototype,"inputRanges",void 0),l([m({json:{write:!0}})],tt.prototype,"outputValues",void 0),l([m({json:{write:!0}})],tt.prototype,"noDataRanges",void 0),l([m({json:{write:!0}})],tt.prototype,"allowUnmatched",void 0),l([m({json:{write:!0}})],tt.prototype,"replacementValue",void 0),l([m({json:{write:!0}})],tt.prototype,"isLastInputRangeInclusive",void 0),tt=Ie=l([P("esri.layers.support.rasterFunctions.RemapFunctionArguments")],tt);const Fo=tt;let At=class extends M{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const e=this.sourceRasterInfos[0].clone(),{pixelType:t}=e;e.bandCount=1;const{statistics:s}=e;this._removeStatsHistColormapVAT(e);const{allowUnmatched:n,replacementValue:o,outputValues:i,inputRanges:a,noDataRanges:r,isLastInputRangeInclusive:u}=this.functionArguments,c=this.outputPixelType==="unknown"||this.outputPixelType==null;if(this.outputPixelType=this._getOutputPixelType(t),i?.length){const p=s?.[0];if(n&&o==null){let h=p?.min??i[0],d=p?.max??i[0];h=Math.min.apply(null,[...i,h]),d=Math.max.apply(null,[...i,d]),e.statistics=[{min:h,max:d,avg:p?.avg??0,stddev:p?.stddev??-1}]}else{let h=i[0],d=h;for(let f=0;f<i.length;f++)h=h>i[f]?i[f]:h,d=d>i[f]?d:i[f];n&&o!=null&&(h=Math.min(h,o),d=Math.max(d,o)),e.statistics=[{min:h,max:d,avg:p?.avg??0,stddev:p?.stddev??-1}]}if(c){const{min:h,max:d}=e.statistics[0],f=["u8","s8","u16","s16","u32","s32","f32"],g=f.find(x=>{const[y,v]=et(x);return h>=y&&d<=v})??"f64";i.some(x=>Math.floor(x)!==x)?this.outputPixelType=g==="f64"?"f64":"f32":this.outputPixelType=n&&o==null&&f.indexOf(t)>f.indexOf(g)?t:g}}return e.pixelType=this.outputPixelType,this.rasterInfo=e,this.lookup=n?null:Os({srcPixelType:t,inputRanges:a,outputValues:i,noDataRanges:r,allowUnmatched:n,isLastInputRangeInclusive:u,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!i||i.length<=It)&&(!r||r.length<=It)}}_processPixels(e){const t=e.pixelBlocks?.[0];if(t==null)return null;const{lookup:s,outputPixelType:n}=this;if(s){const p=se(t,{lut:[s.lut],offset:s.offset,outputPixelType:n});return p!=null&&s.mask&&(p.mask=Ds(t.pixels[0],t.mask,s.mask,s.offset,"u8")),p}const{inputRanges:o,outputValues:i,noDataRanges:a,allowUnmatched:r,isLastInputRangeInclusive:u,replacementValue:c}=this.functionArguments;return Es(t,{inputRanges:o,outputValues:i,noDataRanges:a,outputPixelType:n,allowUnmatched:r,isLastInputRangeInclusive:u,replacementValue:c})}_getWebGLParameters(){const{allowUnmatched:e,noDataRanges:t,isLastInputRangeInclusive:s}=this.functionArguments,n=this.functionArguments.inputRanges??[],o=this.functionArguments.outputValues??[],i=Vs(n,o,s),a=new Float32Array(2*It);return a.fill(Jt),t?.length&&a.set(t),{allowUnmatched:e,rangeMaps:i,noDataRanges:a,clampRange:et(this.outputPixelType),replacementValue:this.functionArguments.replacementValue}}};l([m({json:{write:!0,name:"rasterFunction"}})],At.prototype,"functionName",void 0),l([m({type:Fo,json:{write:!0,name:"rasterFunctionArguments"}})],At.prototype,"functionArguments",void 0),l([m()],At.prototype,"rasterArgumentNames",void 0),l([m({json:{write:!0}})],At.prototype,"lookup",void 0),At=l([P("esri.layers.support.rasterFunctions.RemapFunction")],At);const No=At;var _e;let Ot=_e=class extends As{readColorRamp(e){if(typeof e=="string"){const t=at.jsonValues.find(s=>s.toLowerCase()===e.toLowerCase());return t?qe(at.fromJSON(t)):null}return"toJSON"in e?e.toJSON():e}clone(){return new _e({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,colorRamp:this.colorRamp,colormap:this.colormap,raster:this.raster})}};l([m({json:{write:!0}})],Ot.prototype,"colorRamp",void 0),l([Vt("colorRamp")],Ot.prototype,"readColorRamp",null),l([m({type:[[Number]],json:{write:!0}})],Ot.prototype,"colormap",void 0),Ot=_e=l([P("esri.layers.support.rasterFunctions.ShadedReliefFunctionArguments")],Ot);const Ro=Ot;let nt=class extends M{constructor(){super(...arguments),this.functionName="ShadedRelief",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const e=this.sourceRasterInfos[0];if(e.bandCount>1)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: source data must be single band"};let{colorRamp:t,colormap:s}=this.functionArguments;if(!t&&!s?.length)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a color ramp argument must be specified"};this.outputPixelType=this._getOutputPixelType("u8");const n=e.clone();this._removeStatsHistColormapVAT(n),n.pixelType=this.outputPixelType,n.bandCount=3,n.statistics=[{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=n,this.isGCS=n.spatialReference?.isGeographic??!1,s?.length||(s=ne(t,{interpolateAlpha:!0}));const{indexedColormap:o,offset:i}=Ue({colormap:s});if(!o?.length)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a valid colorramp is required"};const a=$s(o);return this.lookup={indexedColormap:o,offset:i,hsvMap:a},{success:!0,supportsGPU:$e(o)}}_processPixels(e){const t=e.pixelBlocks?.[0];if(!t||!this.lookup)return null;let s=e.primaryPixelSizes?.[0];if(s==null){const{extent:a}=e;s=a?{x:a.width/t.width,y:a.height/t.height}:{x:1,y:1}}const n=Kt(this.functionArguments,s,this.isGCS),o=Je(t,n),i=this.sourceRasterInfos[0].statistics?.[0]??{min:0,max:8e3};return Js(o,t,this.lookup.hsvMap,i),o.pixelType=this.outputPixelType,o}_getWebGLParameters(){const e=Kt(this.functionArguments,{x:1,y:1},this.isGCS),t=Ke(e),{slopeType:s,zFactor:n,pixelSizeFactor:o,pixelSizePower:i}=this.functionArguments,a=s==="scaled",{indexedColormap:r,offset:u}=this.lookup,c=this.sourceRasterInfos[0].statistics?.[0],p=L(this.outputPixelType);return{...t,indexedColormap:r,offset:u,zFactor:n,gcsFactor:this.isGCS?Ut:1,pixelSizeFactor:a?o:0,pixelSizePower:a?i:0,minValue:c?.min??0,maxValue:c?.max??8e3,isOutputRounded:p}}};l([m({json:{write:!0,name:"rasterFunction"}})],nt.prototype,"functionName",void 0),l([m({type:Ro,json:{write:!0,name:"rasterFunctionArguments"}})],nt.prototype,"functionArguments",void 0),l([m()],nt.prototype,"rasterArgumentNames",void 0),l([m({json:{write:!0}})],nt.prototype,"isGCS",void 0),l([m({json:{write:!0}})],nt.prototype,"lookup",void 0),nt=l([P("esri.layers.support.rasterFunctions.ShadedReliefFunction")],nt);const Io=nt;var Ce;const _o=new K({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let rt=Ce=class extends O{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new Ce({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};l([X(_o)],rt.prototype,"slopeType",void 0),l([m({type:Number,json:{write:!0}})],rt.prototype,"zFactor",void 0),l([m({type:Number,json:{name:"psPower",write:!0}})],rt.prototype,"pixelSizePower",void 0),l([m({type:Number,json:{name:"psZFactor",write:!0}})],rt.prototype,"pixelSizeFactor",void 0),l([m({type:Boolean,json:{write:!0}})],rt.prototype,"removeEdgeEffect",void 0),rt=Ce=l([P("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],rt);const Co=rt;let Tt=class extends M{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const e=this.sourceRasterInfos[0].clone();return e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),e.statistics=this.functionArguments.slopeType!=="percent-rise"?[{min:0,max:90,avg:1,stddev:1}]:null,e.bandCount=1,this.rasterInfo=e,this.isGCS=e.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(e){const t=e.pixelBlocks?.[0];if(t==null)return null;const{zFactor:s,slopeType:n,pixelSizePower:o,pixelSizeFactor:i}=this.functionArguments,{isGCS:a}=this,{extent:r,primaryPixelSizes:u}=e,c=u?.[0],p=c??(r?{x:r.width/t.width,y:r.height/t.height}:{x:1,y:1});return Ks(t,{zFactor:s,slopeType:n,pixelSizePower:o,pixelSizeFactor:i,isGCS:a,resolution:p})}_getWebGLParameters(){const{zFactor:e,slopeType:t,pixelSizeFactor:s,pixelSizePower:n}=this.functionArguments;return{zFactor:this.isGCS&&e>=1?e*Ut:e,slopeType:t,pixelSizeFactor:s??0,pixelSizePower:n??0,isOutputRounded:L(this.outputPixelType)}}};l([m({json:{write:!0,name:"rasterFunction"}})],Tt.prototype,"functionName",void 0),l([m({type:Co,json:{write:!0,name:"rasterFunctionArguments"}})],Tt.prototype,"functionArguments",void 0),l([m()],Tt.prototype,"rasterArgumentNames",void 0),l([m({json:{write:!0}})],Tt.prototype,"isGCS",void 0),Tt=l([P("esri.layers.support.rasterFunctions.SlopeFunction")],Tt);const ko=Tt,Ts=new K({1:"min",2:"max",3:"mean",4:"stddev",5:"median",6:"majority",7:"minority"},{useNumericKeys:!0});function So(e,t){const{fillNoDataOnly:s}=t,{band:n,width:o,height:i,mask:a,outBand:r}=e;if(s&&!a)return void r.set(n);const{statisticsType:u,kernelRows:c,kernelCols:p}=t,h=u==="stddev",d=o*i,f=new Float64Array(d),g=new Float64Array(d),x=new Uint32Array(d);for(let F=0;F<i;F++){const R=F*o;let C=0,k=0,B=0;for(let j=0;j<p;j++)a&&!a[R+j]||(C+=n[R+j],h&&(k+=n[R+j]**2),B++);f[R]=C,g[R]=k,x[R]=B;for(let j=1;j<=o-p;j++){const q=R+j-1,Et=q+p;a?(a[q]&&(B--,C-=n[q],h&&(k-=n[q]**2)),a[Et]&&(B++,C+=n[Et],h&&(k+=n[Et]**2))):(C-=n[q],C+=n[Et],h&&(k-=n[q]**2,k+=n[Et]**2)),f[R+j]=C,x[R+j]=B,h&&(g[R+j]=k)}}const y=new Float64Array(d),v=new Float64Array(d),w=new Uint32Array(d),A=c*o;for(let F=0;F<=o-p;F++){let R=0,C=0,k=0;for(let B=0;B<c;B++){const j=B*o+F;R+=f[j],k+=x[j],h&&(C+=g[j])}y[F]=R,v[F]=C,w[F]=k;for(let B=1;B<=i-c;B++){const j=(B-1)*o+F,q=j+A;R-=f[j],R+=f[q],k-=x[j],k+=x[q],h&&(C-=g[j],C+=g[q]),y[B*o+F]=R,v[B*o+F]=C,w[B*o+F]=k}}const T=Math.floor(c/2),N=Math.floor(p/2);for(let F=T;F<i-T;F++){const R=F*o;for(let C=N;C<o-N;C++){const k=(F-T)*o+C-N,B=w[k];if(B===0||s&&(!a||a[R+C]))continue;const j=y[k]/B,q=h?Math.sqrt((v[k]-y[k]*j)/B):j;r[R+C]=q,a&&(a[R+C]=255)}}}function Bo(e,t){const{fillNoDataOnly:s}=t,{band:n,width:o,height:i,mask:a,outBand:r}=e;if(s&&!a)return void r.set(n);const{kernelRows:u,kernelCols:c,statisticsType:p}=t,h=Math.floor(u/2),d=Math.floor(c/2),f=p==="min",g=r.slice(),x=new Uint32Array(o*i);for(let y=h;y<i-h;y++){const v=y*o;for(let w=d;w<o-d;w++){let A=f?Number.MAX_VALUE:-Number.MAX_VALUE,T=0;for(let N=0;N<u;N++)for(let F=0;F<c;F++){const R=v+w+(N-h)*o+F-d;a&&!a[R]||(A=f?Math.min(A,n[R]):Math.max(A,n[R]),T++)}a?(g[v+w]=T===0?0:A,x[v+w]=T):r[v+w]=T===0?0:A}}if(a)for(let y=h;y<i-h;y++){const v=y*o;for(let w=d;w<o-d;w++)if(x[v+w]){if(s&&a[v+w])continue;r[v+w]=g[v+w],a[v+w]=255}}}function jo(e,t){const{fillNoDataOnly:s}=t,{band:n,width:o,height:i,mask:a,outBand:r}=e;if(s&&!a)return void r.set(n);const{kernelRows:u,kernelCols:c}=t,p=Math.floor(u/2),h=Math.floor(c/2),d=r.slice(),f=new Uint32Array(o*i);for(let g=p;g<i-p;g++){const x=g*o;for(let y=h;y<o-h;y++){if(s&&a?.[x+y])continue;const v=[];for(let w=0;w<u;w++)for(let A=0;A<c;A++){const T=x+y+(w-p)*o+A-h;a&&!a[T]||v.push(n[T])}v.length&&(v.sort((w,A)=>w-A),a?(d[x+y]=v[Math.floor((v.length-1)/2)],f[x+y]=v.length):r[x+y]=v[Math.floor((v.length-1)/2)])}}if(a)for(let g=p;g<i-p;g++){const x=g*o;for(let y=h;y<o-h;y++)if(f[x+y]){if(s&&a[x+y])continue;r[x+y]=d[x+y],a[x+y]=255}}}function Mo(e,t){const{fillNoDataOnly:s}=t,{band:n,width:o,height:i,mask:a,outBand:r}=e;if(s&&!a)return void r.set(n);const{kernelRows:u,kernelCols:c}=t,p=Math.floor(u/2),h=Math.floor(c/2),d=t.statisticsType==="majority",f=u*c,g=r.slice(),x=new Uint32Array(o*i);for(let y=p;y<i-p;y++){const v=y*o;for(let w=h;w<o-h;w++){if(s&&a?.[v+w])continue;const A=new Map;for(let R=0;R<u;R++)for(let C=0;C<c;C++){const k=v+w+(R-p)*o+C-h;if(a&&!a[k])continue;const B=n[k];A.set(B,A.has(B)?A.get(B)+1:1)}if(A.size===0)continue;let T=0,N=0,F=d?0:f+1;for(const R of A.keys())N=A.get(R),d===N>F&&(F=N,T=R);a?(g[v+w]=T,x[v+w]=A.size):r[v+w]=T}}if(a)for(let y=p;y<i-p;y++){const v=y*o;for(let w=h;w<o-h;w++)if(x[v+w]){if(s&&a[v+w])continue;r[v+w]=g[v+w],a[v+w]=255}}}function Go(e,t){const{mask:s}=e,{fillNoDataOnly:n}=t;if(n&&!s)return e;const{pixels:o,width:i,height:a,bandMasks:r,pixelType:u}=e,c=o.length,p=i*a,h=[],{kernelRows:d,kernelCols:f,statisticsType:g,mirrorEdges:x}=t;if(n&&!s)return e;const y=t.outputPixelType??u,v=[];for(let T=0;T<c;T++){const N=o[T],F=b.createEmptyBand(y,p);n&&F.set(N);const R=r?.[T]??s,C=R?.slice()??null,k={band:N,width:i,height:a,mask:C,outBand:F};switch(g){case"min":case"max":Bo(k,t);break;case"mean":case"stddev":So(k,t);break;case"median":jo(k,t);break;case"majority":case"minority":Mo(k,t)}x&&!n&&ve(F,i,a,d,f),h.push(F),C&&v.push(C)}let w=v[0]??s;v.length!==c&&(v.length=0),c>1&&r?.length&&(w=b.combineBandMasks(r));const A=new b({pixelType:y,width:i,height:a,pixels:h,bandMasks:r&&v.length?v:null,mask:w});return A.updateStatistics(),A}var ke;let Pt=ke=class extends O{constructor(){super(...arguments),this.rows=3,this.cols=3,this.fillNoDataOnly=!1,this.statisticsType="min"}clone(){return new ke({rows:this.rows,cols:this.cols,fillNoDataOnly:this.fillNoDataOnly,statisticsType:this.statisticsType,raster:H(this.raster)})}};l([m({json:{write:!0,read:{source:["kernelRows","rows"],reader:(e,t)=>Number(e??t?.kernelRows??3)}}})],Pt.prototype,"rows",void 0),l([m({json:{write:!0,read:{source:["kernelCols","cols"],reader:(e,t)=>Number(e??t?.kernelCols??3)}}})],Pt.prototype,"cols",void 0),l([m({json:{write:!0}})],Pt.prototype,"fillNoDataOnly",void 0),l([m({json:{read:{source:["statisticsType","type"],reader:(e,t)=>Ts.fromJSON(t?.statisticsType??t?.type)??"min"},write:{target:"type"}}}),X(Ts)],Pt.prototype,"statisticsType",void 0),Pt=ke=l([P("esri.layers.support.rasterFunctions.StatisticsFunctionArguments")],Pt);const zo=Pt;let Dt=class extends M{constructor(){super(...arguments),this.functionName="Statistics",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{type:e}=this.functionArguments.toJSON();if(e<1||e>7)return{success:!1,supportsGPU:!1,error:`statistics-function: the given statistics type is not supported ${e}`};const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(t.pixelType);const s=t.clone();s.pixelType=this.outputPixelType;const{statisticsType:n}=this.functionArguments;return n==="stddev"&&this._removeStatsHistColormapVAT(s),this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3&&e<5}}_processPixels(e){const t=e.pixelBlocks?.[0];if(t==null)return t;const{statisticsType:s,rows:n,cols:o,fillNoDataOnly:i}=this.functionArguments;return Go(t,{kernelRows:n,kernelCols:o,fillNoDataOnly:i,outputPixelType:this.outputPixelType,statisticsType:s,mirrorEdges:!0})}_getWebGLParameters(){const{rows:e,cols:t,statisticsType:s,fillNoDataOnly:n}=this.functionArguments;return{fillNoDataOnly:n,kernelRows:e,kernelCols:t,statisticsType:s,clampRange:et(this.outputPixelType)}}};l([m({json:{write:!0,name:"rasterFunction"}})],Dt.prototype,"functionName",void 0),l([m({type:zo,json:{write:!0,name:"rasterFunctionArguments"}})],Dt.prototype,"functionArguments",void 0),l([m()],Dt.prototype,"rasterArgumentNames",void 0),Dt=l([P("esri.layers.support.rasterFunctions.StatisticsFunction")],Dt);const Oo=Dt;var Se;let Ft=Se=class extends O{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(e,t){if(!e?.length)return null;const s=[];return e.forEach(n=>{const o={min:n.min,max:n.max,avg:n.avg??n.mean,stddev:n.stddev??n.standardDeviation};s.push(o)}),s}writeStatistics(e,t,s){if(!e?.length)return;const n=[];e.forEach(o=>{const i={...o,mean:o.avg,standardDeviation:o.stddev};delete i.avg,delete i.stddev,n.push(i)}),t[s]=n}clone(){return new Se({statistics:H(this.statistics),histograms:H(this.histograms)})}};l([m({json:{write:!0}})],Ft.prototype,"statistics",void 0),l([Vt("statistics")],Ft.prototype,"readStatistics",null),l([$t("statistics")],Ft.prototype,"writeStatistics",null),l([m({json:{write:!0}})],Ft.prototype,"histograms",void 0),Ft=Se=l([P("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],Ft);const Do=Ft;let ot=class extends M{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const e=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const t=e.clone(),{statistics:s,histograms:n}=this.functionArguments;return n&&(t.histograms=n),s&&(t.statistics=s),this.rasterInfo=t,{success:!0,supportsGPU:!0}}_processPixels(e){return e.pixelBlocks?.[0]}};l([m({json:{write:!0,name:"rasterFunction"}})],ot.prototype,"functionName",void 0),l([m({type:Do,json:{write:!0,name:"rasterFunctionArguments"}})],ot.prototype,"functionArguments",void 0),l([m()],ot.prototype,"rasterArgumentNames",void 0),l([m({json:{write:!0}})],ot.prototype,"indexedColormap",void 0),l([m()],ot.prototype,"isNoopProcess",void 0),ot=l([P("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],ot);const Eo=ot;var Be;const Vo=new K({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let U=Be=class extends O{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(e,t,s){e?.length&&(Array.isArray(e[0])||(e=e.map(n=>[n.min,n.max,n.avg,n.stddev])),t[s]=e)}clone(){return new Be({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:H(this.statistics),gamma:H(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:H(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};l([m({type:Boolean,json:{write:!0}})],U.prototype,"computeGamma",void 0),l([m({type:Boolean,json:{name:"dra",write:!0}})],U.prototype,"dynamicRangeAdjustment",void 0),l([m({type:[Number],json:{write:!0}})],U.prototype,"gamma",void 0),l([m()],U.prototype,"histograms",void 0),l([m({type:Number,json:{write:!0}})],U.prototype,"maxPercent",void 0),l([m({type:Number,json:{write:!0}})],U.prototype,"minPercent",void 0),l([m({type:Number,json:{write:!0}})],U.prototype,"numberOfStandardDeviations",void 0),l([m({type:Number,json:{name:"max",write:!0}})],U.prototype,"outputMax",void 0),l([m({type:Number,json:{name:"min",write:!0}})],U.prototype,"outputMin",void 0),l([m({type:Number,json:{write:!0}})],U.prototype,"sigmoidStrengthLevel",void 0),l([m({json:{type:[[Number]],write:!0}})],U.prototype,"statistics",void 0),l([$t("statistics")],U.prototype,"writeStatistics",null),l([X(Vo)],U.prototype,"stretchType",void 0),l([m({type:Boolean,json:{write:!0}})],U.prototype,"useGamma",void 0),U=Be=l([P("esri.layers.support.rasterFunctions.StretchFunctionArguments")],U);const Uo=U;let it=class extends M{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const e=this.sourceRasterInfos[0],{pixelType:t}=e,{functionArguments:s}=this,{dynamicRangeAdjustment:n,gamma:o,useGamma:i}=s;if(!n&&["u8","u16","s8","s16"].includes(t)){const c=re(s.toJSON(),{rasterInfo:e}),p=L(this.outputPixelType)?"round":"float";this.lookup=Xs({pixelType:t,...c,gamma:i?o:null,rounding:p}),this.cutOffs=c}else n||(this.cutOffs=re(s.toJSON(),{rasterInfo:e}));this.outputPixelType=this._getOutputPixelType(t);const a=e.clone();a.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(a),this.outputPixelType==="u8"&&(a.keyProperties.DataType="processed");const{outputMin:r=0,outputMax:u=255}=this.functionArguments;a.statistics=[];for(let c=0;c<a.bandCount;c++)a.statistics[c]={min:r,max:u};return this.rasterInfo=a,{success:!0,supportsGPU:!n}}_processPixels(e){const t=e.pixelBlocks?.[0];if(t==null)return t;const{lookup:s}=this;if(s)return se(t,{...s,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:n}=this,o=this.cutOffs||re(n.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:t}),i=n.useGamma?n.gamma:null;return Zs(t,{...o,gamma:i,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:e=0,outputMax:t=255,gamma:s,useGamma:n}=this.functionArguments,o=this.rasterInfo.bandCount>=2?3:1,i=n&&s?.length?Qs(o,s):[1,1,1],{minCutOff:a,maxCutOff:r}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};a.length===1&&(a[1]=a[2]=a[0],r[1]=r[2]=r[0]);const u=r.map((d,f)=>(t-e)/(r[f]-a[f])),c=L(this.outputPixelType),p=n&&s?[s[0],s[1]??s[0],s[2]??s[0]]:[1,1,1],h=n?[i[0],i[1]??i[0],i[2]??i[0]]:[1,1,1];return{bandCount:o,minOutput:e,maxOutput:t,minCutOff:a,maxCutOff:r,factor:u,useGamma:n,gamma:p,gammaCorrection:h,stretchType:this.functionArguments.stretchType,isOutputRounded:c,type:"stretch"}}};l([m({json:{write:!0,name:"rasterFunction"}})],it.prototype,"functionName",void 0),l([m({type:Uo,json:{write:!0,name:"rasterFunctionArguments"}})],it.prototype,"functionArguments",void 0),l([m()],it.prototype,"rasterArgumentNames",void 0),l([m({json:{write:!0}})],it.prototype,"lookup",void 0),l([m({json:{write:!0}})],it.prototype,"cutOffs",void 0),it=l([P("esri.layers.support.rasterFunctions.StretchFunction")],it);const Lo=it;var je;let Yt=je=class extends O{constructor(){super(...arguments),this.attributeTableAsRecordSet=null}clone(){return new je({attributeTableAsRecordSet:H(this.attributeTableAsRecordSet)})}};l([m({json:{write:!0}})],Yt.prototype,"attributeTableAsRecordSet",void 0),Yt=je=l([P("esri.layers.support.rasterFunctions.TableFunctionArguments")],Yt);const Wo=Yt;let Nt=class extends M{constructor(){super(...arguments),this.functionName="Table",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const e=this.sourceRasterInfos[0];if(e.bandCount>1||e.pixelType.startsWith("f"))return{success:!1,supportsGPU:!1,error:"table-function: Source data must be single band and integer pixel type."};const{attributeTableAsRecordSet:t}=this.functionArguments;if(!t)return{success:!1,supportsGPU:!1,error:"table-function: Missing attributeTableAsRecordSet argument."};this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();return s.pixelType=this.outputPixelType,s.bandCount=1,s.dataType!=="thematic"&&(s.keyProperties=s.keyProperties?{...s.keyProperties,DataType:"thematic"}:{DataType:"thematic"}),this.rasterInfo=s,{success:!0,supportsGPU:!0}}_processPixels(e){return e.pixelBlocks?.[0]}};l([m({json:{write:!0,name:"rasterFunction"}})],Nt.prototype,"functionName",void 0),l([m({type:Wo,json:{write:!0,name:"rasterFunctionArguments"}})],Nt.prototype,"functionArguments",void 0),l([m()],Nt.prototype,"rasterArgumentNames",void 0),l([m()],Nt.prototype,"isNoopProcess",void 0),Nt=l([P("esri.layers.support.rasterFunctions.TableFunction")],Nt);const Ho=Nt,S=new Map;function Ps(e,t){const{rasterFunctionArguments:s}=e;s&&(s.rasters||[s.raster,s.raster2]).forEach(n=>{n&&typeof n!="number"&&(typeof n=="string"?n.startsWith("http")&&(t.includes(n)||t.push(n)):"rasterFunctionArguments"in n&&Ps(n,t))})}function qo(e,t){t=t??{};try{if("function"in(e=H(e))&&"arguments"in e&&e.arguments){const s=_s(e,new Map,t);if(ze(s),!s.renderingRule)throw new Rt("raster-function-helper","Unsupported raster function json.");e=s.renderingRule}if("rasterFunction"in e){const s=Ns(e=Me(e),t);return s.isRoot=!0,s}}catch{}throw new Rt("raster-function-helper","unsupported raster function json.")}function $o(e,t){return t[0]==="rasters"&&Array.isArray(e.rasters)?e.rasters:t.map(s=>e[s])}function Fs(e){return!!(e&&typeof e=="object"&&e.rasterFunction&&e.rasterFunctionArguments)}function Me(e){const{rasterFunction:t,rasterFunctionArguments:s}=e,n={};for(const o in s){let i=s[o];const a=o.toLowerCase();if(a==="rasters"&&Array.isArray(i))n.rasters=i.map(r=>Fs(r)?Me(r):r);else switch(Fs(i)&&(i=Me(i)),a){case"dra":n.dra=i;break;case"pspower":n.psPower=i;break;case"pszfactor":n.psZFactor=i;break;case"bandids":n.bandIds=i;break;default:n[o[0].toLowerCase()+o.slice(1)]=i}}return t!=="Local"||n.rasters?.length||(n.rasters=["$$"]),{...e,rasterFunctionArguments:n}}function Ns(e,t){const{rasterFunction:s,rasterFunctionArguments:n}=e,o=e.outputPixelType?.toLowerCase();if(s==null||!S.has(s))throw new Rt("raster-function-helper",`unsupported raster function: ${s}`);const i=S.get(s),a=(typeof i.ctor=="function"?i.ctor:i.ctor.default).fromJSON({...e,outputPixelType:o}),{rasterArgumentNames:r}=a,u=[],c=$o(n,r),p=r[0]==="rasters"||r.length>1,h=[];for(let d=0;d<c.length;d++){const f=c[d];let g;f==null||typeof f=="string"&&f.startsWith("$")?u.push(t?.raster):typeof f=="string"?t[f]&&u.push(t[f]):typeof f!="number"&&"rasterFunction"in f&&(g=Ns(f,t),p||(a.functionArguments[r[d]]=g),u.push(g)),p&&h.push(g??f)}if(p&&(r[0]==="rasters"?a.functionArguments.rasters=h:r.forEach((d,f)=>{a.functionArguments[d]=h[f]})),t){a.sourceRasters=u;const d=t.raster?.url;d&&(a.mainPrimaryRasterId=d)}return a}function Rs(e,t){if(e&&t)for(const s in e){const n=e[s];n&&typeof n=="object"&&"type"in n&&(n.type==="RasterFunctionTemplate"?Rs(n.arguments,t):n.type==="RasterFunctionVariable"&&t[n.name]!=null&&(n.value=t[n.name]))}}function Ge(e,t){if(!e||typeof e!="object")return e;const{value:s}=e;if(!s||typeof s!="object")return e.isDataset?"$$":s;if(Array.isArray(s))return s.length===0?[]:s.map(o=>o&&typeof o=="object"&&o.type==="RasterFunctionVariable"?Ge(o,t):o);if("value"in s&&["number","string","boolean"].includes(typeof s.value))return s.value;if(e.isDataset&&s.type!=="Scalar")return"$$";if(!("type"in s))return s;let n=s;switch(s.type){case"Scalar":n=s.value;break;case"AlgorithmicColorRamp":n=Is(s);break;case"MultiPartColorRamp":n={type:"multipart",colorRamps:s.ArrayOfColorRamp.map(Is)};break;case"ArgumentArray":if(s.elements?.length&&s.elements[0].type!=="RasterStatistics"){const o=[];for(let i=0;i<s.elements.length;i++){const a=s.elements[i],{type:r}=a;if(r)if(r==="RasterFunctionTemplate"){const{renderingRule:u}=_s(a,t);o.push(u),a._object_id!=null&&t.set(a._object_id,u)}else{if(r!=="RasterFunctionVariable")throw new Rt("raster-function-helper","unsupported raster function json.");{const u=Ge(a,t);o.push(u),a._object_id!=null&&t.set(a._object_id,u)}}else o.push(a)}n=o}else n=s.elements}return s._object_id!=null&&t.set(s._object_id,n),n}function Is(e){const t=e.algorithm??"esriHSVAlgorithm";let{FromColor:s,ToColor:n}=e;if(!Array.isArray(s)){const{r:o,g:i,b:a}=Oe({h:s.Hue,s:s.Saturation,v:s.Value});s=[o,i,a,s.AlphaValue]}if(!Array.isArray(n)){const{r:o,g:i,b:a}=Oe({h:n.Hue,s:n.Saturation,v:n.Value});n=[o,i,a,n.AlphaValue]}return{type:"algorithmic",algorithm:t,fromColor:s,toColor:n}}function _s(e,t,s){s&&Rs(e,s);const n={renderingRule:{},templates:t};return Cs(e,n),n}function Cs(e,t){if(!e||!t.renderingRule)return;const{renderingRule:s,templates:n}=t,{function:o,arguments:i,_object_id:a}=e;if(!o||!i)return;a!=null&&n.set(a,s),s.rasterFunction=o.type.replace("Function",""),s.outputPixelType=o.pixelType;const r={};s.rasterFunctionArguments=r;for(const u in i){if(u==="type"||u==="object_id"||u==="_object_ref_id")continue;const c=i[u];c&&typeof c=="object"&&"type"in c&&(c.type==="RasterFunctionTemplate"||c.type==="RasterFunctionVariable")?(c.type==="RasterFunctionVariable"?r[u]=Ge(c,n):(s.rasterFunctionArguments[u]={},Cs(c,{renderingRule:s.rasterFunctionArguments[u],templates:n})),c._object_id!=null&&n.set(c._object_id,r[u])):r[u]=c}switch(r.DEM&&!r.Raster&&(r.Raster=r.DEM,delete r.DEM),s.rasterFunction){case"Stretch":Jo(r);break;case"Colormap":Ko(r);break;case"Convolution":Xo(r);break;case"Mask":Zo(r)}}function ze(e){const{renderingRule:t,templates:s}=e;if(typeof t!="object"||!t?.rasterFunctionArguments||!s.size)return;const{rasterFunctionArguments:n}=t;for(const o in n){const i=n[o],a=o==="_object_ref_id"?i:i&&typeof i=="object"&&"_object_ref_id"in i?i._object_ref_id:null;if(a==null)i&&typeof i=="object"&&(i.rasterFunctionArguments&&ze({renderingRule:i,templates:s}),Array.isArray(i)&&i.forEach((r,u)=>{if(r&&typeof r=="object")if(r._object_ref_id!=null){if(!s.has(r._object_ref_id))throw new Rt("raster-function-helper",`unsupported raster function json. _object_ref_id: ${i} does not exist`);const c=s.get(a);c&&typeof c=="object"?Object.assign(r,c):i[u]=c}else ze({renderingRule:r,templates:s})}));else{if(!s.has(a))throw new Rt("raster-function-helper",`unsupported raster function json. _object_ref_id: ${a} does not exist`);const r=s.get(a);o!=="_object_ref_id"?n[o]=r:r&&typeof r=="object"&&Object.assign(n,r)}}}function Jo(e){e.Statistics?.length&&typeof e.Statistics=="object"&&(e.Statistics=e.Statistics.map(t=>[t.min,t.max,t.mean,t.standardDeviation])),e.NumberOfStandardDeviation!=null&&(e.NumberOfStandardDeviations=e.NumberOfStandardDeviation,delete e.NumberOfStandardDeviation)}function Ko(e){e.ColorRamp?.type?.toLowerCase()==="randomcolorramp"&&(delete e.ColorRamp,e.ColormapName="Random"),e.ColorSchemeType===0&&delete e.ColorRamp}function Xo(e){e.ConvolutionType!=null&&(e.Type=e.ConvolutionType,delete e.ConvolutionType)}function Zo(e){e.NoDataValues?.length&&typeof e.NoDataValues[0]=="string"&&(e.NoDataValues=e.NoDataValues.filter(t=>t!=="").map(t=>Number(t)))}S.set("Arithmetic",{desc:"Arithmetic Function",ctor:Jn,rasterArgumentNames:["rasters"]}),S.set("Aspect",{desc:"Aspect Function",ctor:Xn,rasterArgumentNames:["raster"]}),S.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:Tr,rasterArgumentNames:["raster"]}),S.set("Colormap",{desc:"Colormap Function",ctor:Mr,rasterArgumentNames:["raster"]}),S.set("ColormapToRGB",{desc:"ColormapToRGB Function",ctor:zr,rasterArgumentNames:["raster"]}),S.set("CompositeBand",{desc:"CompositeBand Function",ctor:Dr,rasterArgumentNames:["rasters"]}),S.set("ComputeChange",{desc:"ComputeChange Function",ctor:Kr,rasterArgumentNames:["rasters"]}),S.set("Convolution",{desc:"Convolution Function",ctor:ro,rasterArgumentNames:["raster"]}),S.set("ContrastBrightness",{desc:"Contrast Brightness Function",ctor:Zr,rasterArgumentNames:["raster"]}),S.set("ExtractBand",{desc:"ExtractBand Function",ctor:uo,rasterArgumentNames:["raster"]}),S.set("Curvature",{desc:"Curvature Function",ctor:io,rasterArgumentNames:["raster"]}),S.set("Hillshade",{desc:"Hillshade Function",ctor:xo,rasterArgumentNames:["raster"]}),S.set("ShadedRelief",{desc:"ShadedRelief Function",ctor:Io,rasterArgumentNames:["raster"]}),S.set("Grayscale",{desc:"Grayscale Function",ctor:fo,rasterArgumentNames:["raster"]}),S.set("Clip",{desc:"Clip Function",ctor:Fr,rasterArgumentNames:["raster"]}),S.set("Local",{desc:"Local Function",ctor:wo,rasterArgumentNames:["rasters"]}),S.set("Mask",{desc:"Mask Function",ctor:Ao,rasterArgumentNames:["raster"]}),S.set("NDVI",{desc:"NDVI Function",ctor:Po,rasterArgumentNames:["raster"]}),S.set("Remap",{desc:"Remap Function",ctor:No,rasterArgumentNames:["raster"]}),S.set("Slope",{desc:"Slope Function",ctor:ko,rasterArgumentNames:["raster"]}),S.set("Statistics",{desc:"Focal Statistics Function",ctor:Oo,rasterArgumentNames:["raster"]}),S.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:Eo,rasterArgumentNames:["raster"]}),S.set("Stretch",{desc:"Stretch Function",ctor:Lo,rasterArgumentNames:["raster"]}),S.set("Table",{desc:"Attribute Table Function",ctor:Ho,rasterArgumentNames:["raster"]});export{qo as T,Ps as w};
