import{_ as Y}from"./asyncUtils-BPUlNCrX.js";import{eq as Z,cD as P,i as ee,a4 as te,bL as T,hG as ie,d4 as ne,c2 as D,s as d,gX as se,aG as j,c1 as q,q as G,cr as I,al as ae,hH as U}from"./main-BFDurRCu.js";import{Q as C,O as M}from"./projectionUtils-B-CplN3q.js";import{t as N}from"./TileKey-B_6qmYK-.js";const z=()=>ee.getLogger("esri.layers.support.ElevationSampler");class Q{queryElevation(e){return le(e.clone(),this)}on(){return te()}projectIfRequired(e,t){return H(e,t)}}class oe extends Q{get spatialReference(){return this.extent.spatialReference}constructor(e,t,i){super(),this.tile=e,this.noDataValue=i;const n=e.tile.extent;this.extent=Z(n,t.spatialReference),this.extent.zmin=e.zmin,this.extent.zmax=e.zmax,this._aaExtent=n;const s=T(t.spatialReference),a=t.lodAt(e.tile.level).resolution*s;this.demResolution={min:a,max:a}}contains(e){const t=this.projectIfRequired(e,this.spatialReference);return t!=null&&this.containsAt(t.x,t.y)}containsAt(e,t){return ie(this._aaExtent,e,t)}elevationAt(e,t){if(!this.containsAt(e,t)){const i=this.extent,n=`${i.xmin}, ${i.ymin}, ${i.xmax}, ${i.ymax}`;return z().warn("#elevationAt()",`Point used to sample elevation (${e}, ${t}) is outside of the sampler extent (${n})`),this.noDataValue}return this.tile.sample(e,t)??this.noDataValue}}class W extends Q{get spatialReference(){return this.extent.spatialReference}constructor(e,t,i){let n;super(),typeof t=="number"?(this.noDataValue=t,n=null):(n=t,this.noDataValue=i),this.samplers=n?e.map(a=>new oe(a,n,this.noDataValue)):e;const s=this.samplers[0];if(s){this.extent=s.extent.clone();const{min:a,max:l}=s.demResolution;this.demResolution={min:a,max:l};for(let r=1;r<this.samplers.length;r++){const c=this.samplers[r];this.extent.union(c.extent),this.demResolution.min=Math.min(this.demResolution.min,c.demResolution.min),this.demResolution.max=Math.max(this.demResolution.max,c.demResolution.max)}}else this.extent=Z(P(),n.spatialReference),this.demResolution={min:0,max:0}}elevationAt(e,t){let i,n=!1;for(const s of this.samplers)if(s.containsAt(e,t)&&(n=!0,i=s.elevationAt(e,t),i!==s.noDataValue))return i;return i??(n||z().warn("#elevationAt()",`Point used to sample elevation (${e}, ${t}) is outside of the sampler`),this.noDataValue)}}function le(o,e){const t=H(o,e.spatialReference);if(!t)return null;switch(o.type){case"point":re(o,t,e);break;case"polyline":ce(o,t,e);break;case"multipoint":ue(o,t,e)}return o}function H(o,e){if(o==null)return null;const t=o.spatialReference;if(t.equals(e))return o;const i=ne(o,e);return i||z().error(`Cannot project geometry spatial reference (wkid:${t.wkid}) to elevation sampler spatial reference (wkid:${e.wkid})`),i}function re(o,e,t){o.z=t.elevationAt(e.x,e.y)}function ce(o,e,t){y.spatialReference=e.spatialReference;const i=o.hasM&&!o.hasZ;for(let n=0;n<o.paths.length;n++){const s=o.paths[n],a=e.paths[n];for(let l=0;l<s.length;l++){const r=s[l],c=a[l];y.x=c[0],y.y=c[1],i&&(r[3]=r[2]),r[2]=t.elevationAt(y.x,y.y)}}o.hasZ=!0}function ue(o,e,t){y.spatialReference=e.spatialReference;const i=o.hasM&&!o.hasZ;for(let n=0;n<o.points.length;n++){const s=o.points[n],a=e.points[n];y.x=a[0],y.y=a[1],i&&(s[3]=s[2]),s[2]=t.elevationAt(y.x,y.y)}o.hasZ=!0}const y=new D;let he=class{constructor(o,e){this.data=o,this.safeWidth=.99999999*(o.width-1),this.dx=(o.width-1)/(e[2]-e[0]),this.dy=(o.width-1)/(e[3]-e[1]),this.x0=e[0],this.y1=e[3]}};class X{constructor(e,t=null){if(this.tile=e,t!=null&&e!=null){const i=e.extent;this._samplerData=new he(t,i)}}get zmin(){return this._samplerData!=null?this._samplerData.data.minValue:0}get zmax(){return this._samplerData!=null?this._samplerData.data.maxValue:0}get hasNoDataValues(){return!!this._samplerData?.data.hasNoDataValues}sample(e,t){if(this._samplerData==null)return;const{safeWidth:i,data:n,dx:s,dy:a,y1:l,x0:r}=this._samplerData,{width:c,values:u,noDataValue:p}=n,f=B(a*(l-t),0,i),h=B(s*(e-r),0,i),v=Math.floor(f),b=Math.floor(h),_=v*c+b,S=_+c,A=u[_],E=u[S],$=u[_+1],k=u[S+1];if(A!==p&&E!==p&&$!==p&&k!==p){const L=h-b,O=A+($-A)*L;return O+(E+(k-E)*L-O)*(f-v)}}}function B(o,e,t){return o<e?e:o>t?t:o}class fe{async queryAll(e,t,i){if(!(e=i?.ignoreInvisibleLayers?e.filter(c=>c.visible):e.slice()).length)throw new d("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");const n=x.fromGeometry(t);let s=!1;i?.returnSampleInfo||(s=!0);const a={...g,...i,returnSampleInfo:!0},l=await this.query(e[e.length-1],n,a),r=await this._queryAllContinue(e,l,a);return r.geometry=r.geometry.export(),s&&delete r.sampleInfo,r}async query(e,t,i){if(!e)throw new d("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||!(t instanceof x)&&t.type!=="point"&&t.type!=="multipoint"&&t.type!=="polyline")throw new d("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation");const n={...g,...i},s=new me(e,t.spatialReference,n),a=n.signal;return await e.load({signal:a}),await de(s,t,a),await this._selectTiles(s,a),await R(s,a),ge(s),Re(s,a)}async createSampler(e,t,i){if(!e)throw new d("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new d("elevation-query:invalid-extent","Invalid or undefined extent");const n={...g,...i};return this._createSampler(e,t,n)}async createSamplerAll(e,t,i){if(!(e=i?.ignoreInvisibleLayers?e.filter(a=>a.visible):e.slice()).length)throw new d("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new d("elevation-query:invalid-extent","Invalid or undefined extent");const n={...g,...i,returnSampleInfo:!0},s=await this._createSampler(e[e.length-1],t,n);return this._createSamplerAllContinue(e,t,s,n)}async _createSampler(e,t,i,n){const s=i.signal;await e.load({signal:s});const a=t.spatialReference,l=e.tileInfo.spatialReference;a.equals(l)||(await C([{source:a,dest:l}],{signal:s}),t=M(t,l));const r=new pe(e,t,i,n);return await this._selectTiles(r,s),await R(r,s),new W(r.elevationTiles,r.layer.tileInfo,r.options.noDataValue)}async _createSamplerAllContinue(e,t,i,n){if(e.pop(),!e.length)return i;const s=i.samplers.filter(c=>!c.tile.hasNoDataValues).map(c=>se(c.extent)),a=await this._createSampler(e[e.length-1],t,n,s);if(a.samplers.length===0)return i;const l=i.samplers.concat(a.samplers),r=new W(l,n.noDataValue);return this._createSamplerAllContinue(e,t,r,n)}async _queryAllContinue(e,t,i){const n=e.pop(),s=t.geometry.coordinates,a=t.sampleInfo;j(a);const l=[],r=[];for(let f=0;f<s.length;f++){const h=a[f];h.demResolution>=0?h.source||(h.source=n):e.length&&(l.push(s[f]),r.push(f))}if(!e.length||l.length===0)return t;const c=t.geometry.clone(l),u=await this.query(e[e.length-1],c,i),p=u.sampleInfo;if(!p)throw new Error("no sampleInfo");return r.forEach((f,h)=>{s[f].z=u.geometry.coordinates[h].z,a[f].demResolution=p[h].demResolution}),this._queryAllContinue(e,t,i)}async _selectTiles(e,t){e.type==="geometry"&&ye(e);const i=e.options.demResolution;if(typeof i=="number")ve(e,i);else if(i==="finest-contiguous")await this._selectTilesFinestContiguous(e,t);else{if(i!=="auto")throw new d("elevation-query:invalid-dem-resolution",`Invalid dem resolution value '${i}', expected a number, "finest-contiguous" or "auto"`);await this._selectTilesAuto(e,t)}}async _selectTilesFinestContiguous(e,t){const{tileInfo:i,tilemapCache:n}=e.layer,s=V(i,n,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,s,t)}async _selectTilesFinestContiguousAt(e,t,i){const n=e.layer;if(e.selectTilesAtLOD(t),t<0)return;const s=n.tilemapCache,a=e.getTilesToFetch();try{if(s&&!F(s))await q(Promise.all(a.map(l=>s.fetchAvailability(l.level,l.row,l.col,{signal:i}))),i);else if(await R(e,i),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new d("elevation-query:has-unavailable-tiles","Some elevation tiles are unavailable")}catch(l){G(l),await this._selectTilesFinestContiguousAt(e,t-1,i)}}async _selectTilesAuto(e,t){we(e),Te(e);const i=e.layer.tilemapCache;if(!i||F(i))return this._selectTilesAutoPrefetchUpsample(e,t);const n=e.getTilesToFetch(),s={},a=n.map(async l=>{const r=new N(null,0,0,0,P()),c=await Y(i.fetchAvailabilityUpsample(l.level,l.row,l.col,r,{signal:t}));c.ok!==!1?l.id!=null&&(s[l.id]=r):G(c.error)});await q(Promise.all(a),t),e.remapTiles(s)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await R(e,t);let n=!1;e.forEachTileToFetch((s,a)=>{i.upsampleTile(s)?n=!0:a()}),n&&await this._selectTilesAutoPrefetchUpsample(e,t)}}class x{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new x;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map(i=>i.clone()),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await C([{source:this.spatialReference,dest:e}],{signal:t});const i=new I({spatialReference:this.spatialReference,points:this.coordinates.map(l=>[l.x,l.y])}),n=M(i,e);if(!n)return null;const s=this.coordinates.map((l,r)=>{const c=l.clone(),u=n.points[r];return c.x=u[0],c.y=u[1],c}),a=this.clone(s);return a.spatialReference=e,a}static fromGeometry(e){const t=new x;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof x)t.coordinates=e.coordinates.map(i=>i.clone()),t._exporter=(i,n)=>{const s=e.clone(i);return s.spatialReference=n,s};else switch(e.type){case"point":{const i=e,{hasZ:n,hasM:s}=i;t.coordinates=n&&s?[new m(i.x,i.y,i.z,i.m)]:n?[new m(i.x,i.y,i.z)]:s?[new m(i.x,i.y,null,i.m)]:[new m(i.x,i.y)],t._exporter=(a,l)=>e.hasM?new D(a[0].x,a[0].y,a[0].z,a[0].m,l):new D(a[0].x,a[0].y,a[0].z,l);break}case"multipoint":{const i=e,{hasZ:n,hasM:s}=i;t.coordinates=n&&s?i.points.map(a=>new m(a[0],a[1],a[2],a[3])):n?i.points.map(a=>new m(a[0],a[1],a[2])):s?i.points.map(a=>new m(a[0],a[1],null,a[2])):i.points.map(a=>new m(a[0],a[1])),t._exporter=(a,l)=>e.hasM?new I({points:a.map(r=>[r.x,r.y,r.z,r.m]),hasZ:!0,hasM:!0,spatialReference:l}):new I(a.map(r=>[r.x,r.y,r.z]),l);break}case"polyline":{const i=e,n=[],s=[],{hasZ:a,hasM:l}=e;let r=0;for(const c of i.paths)if(s.push([r,r+c.length]),r+=c.length,a&&l)for(const u of c)n.push(new m(u[0],u[1],u[2],u[3]));else if(a)for(const u of c)n.push(new m(u[0],u[1],u[2]));else if(l)for(const u of c)n.push(new m(u[0],u[1],null,u[2]));else for(const u of c)n.push(new m(u[0],u[1]));t.coordinates=n,t._exporter=(c,u)=>{const p=e.hasM?c.map(h=>[h.x,h.y,h.z??0,h.m??0]):c.map(h=>[h.x,h.y,h.z??0]),f=s.map(h=>p.slice(h[0],h[1]));return new ae({paths:f,hasM:e.hasM,hasZ:!0,spatialReference:u})};break}}return t}}class m{constructor(e,t,i=null,n=null,s=null,a=null){this.x=e,this.y=t,this.z=i,this.m=n,this.tile=s,this.elevationTile=a}clone(){return new m(this.x,this.y,this.z,this.m)}}class J{constructor(e,t){this.layer=e,this.options=t}}class me extends J{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type="geometry"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach(t=>t.tile=null);else{const{tileInfo:t,tilemapCache:i}=this.layer,n=w(t,i)[e].level;this.geometry.coordinates.forEach(s=>s.tile=t.tileAt(n,s.x,s.y))}}allElevationTilesFetched(){return!this.geometry.coordinates.some(e=>!e.elevationTile)}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile?.id&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates){const i=t.tile?.id;t.tile=i?e[i]:null}}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const n=i.tile;if(!n)continue;const s=i.tile?.id;i.elevationTile||!s||e[s]||(e[s]=n,t.push(n))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,()=>{t.tile=null})}}class pe extends J{constructor(e,t,i,n){super(e,i),this.type="extent",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.clone().intersection(e.fullExtent),this.maskExtents=n}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),n=Math.min(i,e);n<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(n)}_maximumLodForRequests(e){const{tileInfo:t,tilemapCache:i}=this.layer,n=w(t,i);if(!e)return n.length-1;const s=this.extent;if(s==null)return-1;for(let a=n.length-1;a>=0;a--){const l=n[a],r=l.resolution*t.size[0],c=l.resolution*t.size[1];if(Math.ceil(s.width/r)*Math.ceil(s.height/c)<=e)return a}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this._candidateTiles=K(this._candidateTiles.map(t=>e[t.id]))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach(n=>{if(this._fetchedCandidates.has(n))return void(t&&t(n));let s=!1;e(n,()=>s=!0),s?t&&t(n):this._candidateTiles.push(n)}),this._candidateTiles=K(this._candidateTiles,t)}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(t==null)return;const{tileInfo:i,tilemapCache:n}=this.layer,s=w(i,n)[e],a=i.tileAt(s.level,t.xmin,t.ymin),l=a.extent;if(l==null)return;const r=s.resolution*i.size[0],c=s.resolution*i.size[1],u=Math.ceil((t.xmax-l[0])/r),p=Math.ceil((t.ymax-l[1])/c);for(let f=0;f<p;f++)for(let h=0;h<u;h++){const v=new N(null,a.level,a.row-f,a.col+h);i.updateTileInfo(v),this._tileIsMasked(v)||this._candidateTiles.push(v)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some(t=>e.extent&&U(t,e.extent))}}function V(o,e,t=0){const i=w(o,e);let n=i.length-1;if(t>0){const s=t/T(o.spatialReference),a=i.findIndex(l=>l.resolution<s);a===0?n=0:a>0&&(n=a-1)}return n}const g={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:"auto",minDemResolution:0};async function de(o,e,t){let i;const n=o.layer.tileInfo.spatialReference;if(e instanceof x?i=await e.project(n,t):(await C([{source:e.spatialReference,dest:n}],{signal:t}),i=M(e,n)),!i)throw new d("elevation-query:spatial-reference-mismatch",`Cannot query elevation in '${e.spatialReference.wkid}' on an elevation service in '${n.wkid}'`);o.geometry=x.fromGeometry(i)}function ye(o){if(o.layer.fullExtent==null)return;const e=new X(null);e.sample=()=>o.options.noDataValue,o.outsideExtentTile=e;const t=o.layer.fullExtent;o.geometry.coordinates.forEach(i=>{const n=i.x,s=i.y;(n<t.xmin||n>t.xmax||s<t.ymin||s>t.ymax)&&(i.elevationTile=e)})}function xe(o,e){const{tileInfo:t,tilemapCache:i}=o.layer,n=e/T(t.spatialReference),s=w(t,i);let a=s[0],l=0;for(let r=1;r<s.length;r++){const c=s[r];Math.abs(c.resolution-n)<Math.abs(a.resolution-n)&&(a=c,l=r)}return l}function ve(o,e){const t=xe(o,e);o.selectTilesAtLOD(t)}function we(o){const{tileInfo:e,tilemapCache:t}=o.layer,i=V(e,t,o.options.minDemResolution);o.selectTilesAtLOD(i,o.options.maximumAutoTileRequests)}function w(o,e){const t=o.lods;if(F(e)){const{effectiveMinLOD:i,effectiveMaxLOD:n}=e;return t.filter(s=>s.level>=i&&s.level<=n)}return t}async function R(o,e){const t=o.getTilesToFetch(),i={},n=o.options.cache,s=o.options.noDataValue,a=t.map(async l=>{if(l.id==null)return;const r=`${o.layer.uid}:${l.id}:${s}`,c=n!=null?n.get(r):null,u=c??await o.layer.fetchTile(l.level,l.row,l.col,{noDataValue:s,signal:e});n?.put(r,u),i[l.id]=new X(l,u)});await q(Promise.allSettled(a),e),o.populateElevationTiles(i)}function Te(o){const e=o.layer.tileInfo;let t=0;const i={},n=l=>{l.id!=null&&(l.id in i?i[l.id]++:(i[l.id]=1,t++))},s=l=>{if(l.id==null)return;const r=i[l.id];r===1?(delete i[l.id],t--):i[l.id]=r-1};o.forEachTileToFetch(n,s);let a=!0;for(;a&&(a=!1,o.forEachTileToFetch(l=>{t<=o.options.maximumAutoTileRequests||(s(l),e.upsampleTile(l)&&(a=!0),n(l))},s),a););}function ge(o){o.geometry.coordinates.forEach(e=>{const t=e.elevationTile;let i=o.options.noDataValue;if(t){const n=t.sample(e.x,e.y);n!=null?i=n:e.elevationTile=null}e.z=i})}function K(o,e){const t={},i=[];for(const s of o){const a=s.id;a&&!t[a]?(t[a]=s,i.push(s)):e&&e(s)}const n=i.sort((s,a)=>s.level-a.level);return n.filter((s,a)=>{for(let l=0;l<a;l++){const r=n[l].extent;if(r&&s.extent&&U(r,s.extent))return e&&e(s),!1}return!0})}async function Re(o,e){const t=await o.geometry.project(o.outSpatialReference,e);j(t);const i={geometry:t.export(),noDataValue:o.options.noDataValue};return o.options.returnSampleInfo&&(i.sampleInfo=_e(o)),o.geometry.coordinates.forEach(n=>{n.tile=null,n.elevationTile=null}),i}function _e(o){const e=o.layer.tileInfo,t=T(e.spatialReference);return o.geometry.coordinates.map(i=>{let n=-1;return i.elevationTile&&i.elevationTile!==o.outsideExtentTile&&(n=e.lodAt(i.elevationTile.tile.level).resolution*t),{demResolution:n}})}function F(o){return o?.tileInfo!=null}export{fe as ElevationQuery,x as GeometryDescriptor,V as getFinestLodIndex};
