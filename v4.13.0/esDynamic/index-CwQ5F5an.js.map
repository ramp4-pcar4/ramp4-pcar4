{"version":3,"file":"index-CwQ5F5an.js","sources":["../../src/fixtures/mapnav/buttons/divider-nav.vue","../../src/fixtures/mapnav/buttons/zoom-nav.vue","../../src/fixtures/draw/draw-nav-section.vue","../../src/fixtures/mapnav/mapnav.vue","../../src/fixtures/mapnav/api/mapnav.ts","../../src/fixtures/mapnav/lang/lang.csv?raw","../../src/fixtures/mapnav/index.ts"],"sourcesContent":["<template>\n    <span class=\"border-b p-0 self-center w-2/3\"></span>\n</template>\n\n<script setup lang=\"ts\"></script>\n\n<style lang=\"scss\" scoped></style>\n","<template>\n    <div>\n        <mapnav-button :onClickFunction=\"zoomIn\" :tooltip=\"t('mapnav.zoomIn')\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"fill-current w-32 h-20\">\n                <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" />\n                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            </svg>\n        </mapnav-button>\n        <divider-nav></divider-nav>\n        <mapnav-button :onClickFunction=\"zoomOut\" :tooltip=\"t('mapnav.zoomOut')\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"fill-current w-32 h-20\">\n                <path d=\"M19 13H5v-2h14v2z\" />\n                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            </svg>\n        </mapnav-button>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { InstanceAPI } from '@/api';\nimport { throttle } from 'throttle-debounce';\nimport { inject } from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport DividerNav from './divider-nav.vue';\n\nconst { t } = useI18n();\nconst iApi = inject('iApi') as InstanceAPI;\n\nconst zoomIn = throttle(400, true, () => iApi.geo.map.zoomIn());\nconst zoomOut = throttle(400, true, () => iApi.geo.map.zoomOut());\n</script>\n\n<style lang=\"scss\" scoped></style>\n","<template>\n    <div class=\"mapnav-section bg-white-75 hover:bg-white\">\n        <mapnav-button\n            v-for=\"(tool, index) in filteredDrawingTools\"\n            :key=\"tool.type\"\n            @mousedown=\"mouseFocus\"\n            :onClickFunction=\"() => toggleTool(tool.type as ActiveToolList)\"\n            :tooltip=\"t(`draw.${tool.type}.tooltip`)\"\n            :class=\"{\n                'active-tool': drawStore.activeTool === tool.type\n            }\"\n            :style=\"{ marginBottom: index !== filteredDrawingTools.length - 1 ? '0px' : '0' }\"\n            :showOutline=\"showOutline\"\n        >\n            <component :is=\"tool.icon\" class=\"fill-current w-32 h-20\"></component>\n        </mapnav-button>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useDrawStore } from './store';\nimport type { ActiveToolList } from './store';\nimport { useI18n } from 'vue-i18n';\nimport { markRaw, defineAsyncComponent, computed, inject } from 'vue';\nimport { InstanceAPI } from '@/api/internal';\n\ndefineProps({\n    showOutline: {\n        type: Boolean,\n        default: false\n    }\n});\n\nconst iApi = inject('iApi') as InstanceAPI;\nconst { t } = useI18n();\nconst drawStore = useDrawStore();\n\nconst drawingTools = [\n    {\n        type: 'point',\n        icon: markRaw(defineAsyncComponent(() => import('./icons/point-icon.vue')))\n    },\n    {\n        type: 'polyline',\n        icon: markRaw(defineAsyncComponent(() => import('./icons/polyline-icon.vue')))\n    },\n    {\n        type: 'polygon',\n        icon: markRaw(defineAsyncComponent(() => import('./icons/polygon-icon.vue')))\n    },\n    {\n        type: 'circle',\n        icon: markRaw(defineAsyncComponent(() => import('./icons/circle-icon.vue')))\n    },\n    {\n        type: 'rectangle',\n        icon: markRaw(defineAsyncComponent(() => import('./icons/rectangle-icon.vue')))\n    }\n];\n\n// only show tools listed in config\nconst filteredDrawingTools = computed(() => {\n    const fTools = drawingTools.filter(tool => drawStore.supportedTypes.some(item => item.type === tool.type));\n    fTools.push({\n        type: 'edit',\n        icon: markRaw(defineAsyncComponent(() => import('./icons/edit-icon.vue')))\n    });\n    return fTools;\n});\n\nconst toggleTool = (toolType: ActiveToolList) => {\n    // If the tool is already active, deactivate it\n    if (drawStore.activeTool === toolType) {\n        drawStore.setActiveTool(null);\n    } else {\n        // Activate the selected tool\n        drawStore.setActiveTool(toolType);\n    }\n};\n\nconst mouseFocus = () => {\n    // clicked on draw button, focus moves to map - don't want crosshairs\n    iApi.geo.map.setMouseFocus();\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.active-tool {\n    background-color: rgba(0, 0, 0, 0.1);\n}\n</style>\n","<template>\n    <div class=\"mapnav absolute right-0 bottom-0 pb-36 sm:pb-48 pr-12\">\n        <div\n            class=\"mapnav-section flex flex-col\"\n            v-focus-list\n            :content=\"t('panels.controls.items')\"\n            v-tippy=\"{\n                trigger: 'manual',\n                placement: 'top-end',\n                touch: false,\n                maxWidth: 190\n            }\"\n            ref=\"el\"\n        >\n            <!-- Add the draw section here if draw fixture is loaded -->\n            <template v-if=\"isDrawFixtureLoaded && windowHeight > cutoffHeight\">\n                <draw-nav-section></draw-nav-section>\n                <span class=\"py-1\"></span>\n            </template>\n\n            <zoom-nav-section class=\"mapnav-section bg-white-75 hover:bg-white\"></zoom-nav-section>\n            <span class=\"py-1\"></span>\n\n            <div class=\"mapnav-section bg-white-75 hover:bg-white\">\n                <mapnav-button\n                    class=\"self-center\"\n                    v-if=\"windowHeight <= cutoffHeight\"\n                    :onClickFunction=\"\n                        () => {\n                            sepNavVisible = !sepNavVisible;\n                        }\n                    \"\n                    :tooltip=\"sepNavVisible ? $t('mapnav.closeMenu') : $t('mapnav.openMenu')\"\n                >\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        shape-rendering=\"geometricPrecision\"\n                        text-rendering=\"geometricPrecision\"\n                        image-rendering=\"optimizeQuality\"\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        viewBox=\"0 0 319 511.61\"\n                        class=\"fill-current w-6 mx-auto transition-all transform\"\n                        :class=\"{ 'rotate-180': sepNavVisible }\"\n                    >\n                        <path\n                            d=\"m270.08 5.89 43.04 43.04c7.85 7.86 7.83 20.72 0 28.54L134.77 255.82l178.35 178.35c7.85 7.86 7.8 20.73 0 28.54l-43.04 43.04c-7.83 7.82-20.71 7.82-28.54 0L49.29 313.49l-.37-.36-43.04-43.04c-7.82-7.83-7.86-20.68 0-28.54l43.04-43.04.37-.36L241.54 5.89c7.85-7.85 20.68-7.85 28.54 0z\"\n                        />\n                    </svg>\n                </mapnav-button>\n            </div>\n\n            <div v-if=\"windowHeight > cutoffHeight\" class=\"mapnav-section bg-white-75 hover:bg-white\">\n                <template v-for=\"(button, index) in visible\" :key=\"button.id + 'button'\">\n                    <component :is=\"button.id + '-nav-button'\"></component>\n                    <divider-nav class=\"mapnav-divider\" v-if=\"index !== visible.length - 1\" />\n                </template>\n            </div>\n        </div>\n        <div\n            v-if=\"windowHeight <= cutoffHeight && sepNavVisible\"\n            class=\"mapnav-section flex flex-col flex-wrap-reverse shadow-tm absolute right-56 bottom-36 sm:bottom-48 items-start z-50 gap-0.5\"\n            :style=\"{ maxHeight: `${(windowHeight - 70) * 0.8}px`, height: 'fit-content', width: 'fit-content' }\"\n            :content=\"t('panels.controls.items')\"\n            v-tippy=\"{\n                trigger: 'manual',\n                placement: 'top-end',\n                maxWidth: 190\n            }\"\n        >\n            <div v-if=\"isDrawFixtureLoaded\">\n                <draw-nav-section showOutline></draw-nav-section>\n            </div>\n            <template v-for=\"button in visible\" :key=\"button.id + 'button'\">\n                <component\n                    :is=\"button.id + '-nav-button'\"\n                    class=\"mapnav-section bg-white-75 hover:bg-white\"\n                    showOutline\n                />\n            </template>\n        </div>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, inject, onBeforeUnmount, onMounted, ref, nextTick } from 'vue';\nimport { useMapnavStore } from './store';\nimport { useI18n } from 'vue-i18n';\nimport ZoomNavSection from './buttons/zoom-nav.vue';\nimport DividerNav from './buttons/divider-nav.vue';\nimport { InstanceAPI } from '@/api/internal';\nimport DrawNavSection from '../draw/draw-nav-section.vue';\n\nconst rootResizeObserver = ref<ResizeObserver | undefined>(undefined);\n\nconst iApi = inject('iApi') as InstanceAPI;\nconst mapnavStore = useMapnavStore();\nconst { t } = useI18n();\nconst el = ref<Element>();\n\n// A bit of a hack to tell if the draw fixture should be shown. On language change the fixture is removed and not re-added\n// Maybe its a bug in the fixture system?\nconst isDrawFixtureLoaded = computed(() => {\n    return iApi.getConfig().fixtures.mapnav.items.some((fixture: string) => fixture === 'draw');\n});\n\nconst windowHeight = ref(iApi.$rootEl?.clientHeight);\nconst sepNavVisible = ref(false);\n\nconst cutoffHeight = ref(0);\n\nconst updateHeight = () => {\n    windowHeight.value = iApi.$rootEl?.clientHeight;\n};\n\nconst blurEvent = () => {\n    (el.value as any)._tippy.hide();\n};\n\nconst keyupEvent = (e: Event) => {\n    const evt = e as KeyboardEvent;\n    if (evt.key === 'Tab' && el.value?.matches(':focus')) {\n        (el.value as any)._tippy.show();\n    }\n};\n\nonMounted(() => {\n    el.value?.addEventListener('blur', blurEvent);\n    el.value?.addEventListener('keyup', keyupEvent);\n\n    rootResizeObserver.value = new ResizeObserver(updateHeight);\n    rootResizeObserver.value.observe(iApi.$rootEl);\n    nextTick(() => {\n        cutoffHeight.value = visible.value.length * 82;\n    });\n});\n\nonBeforeUnmount(() => {\n    el.value?.removeEventListener('blur', blurEvent);\n    el.value?.removeEventListener('keyup', keyupEvent);\n\n    rootResizeObserver.value!.disconnect();\n});\n\n/**\n * Return a list of mapnav items with registered components (ones that can be rendered right now).\n * Filter out the draw button since it's now in its own section\n */\nconst visible = computed(() =>\n    mapnavStore.order.map(id => mapnavStore.items[id]).filter(item => item.componentId && item.id !== 'draw')\n);\n</script>\n\n<style lang=\"scss\" scoped>\n.mapnav-section {\n    @apply flex-col flex flex-wrap-reverse items-start shadow-tm pointer-events-auto;\n\n    .focused {\n        @apply text-black;\n    }\n}\n</style>\n","import { FixtureInstance } from '@/api';\n\nimport type { MapnavFixtureConfig, MapnavItem, MapnavItemSet } from '../store';\nimport { useMapnavStore } from '../store';\n\nexport class MapnavAPI extends FixtureInstance {\n    private mapnavStore = useMapnavStore(this.$vApp.$pinia);\n    /**\n     * Returns `MapnavFixtureConfig` section of the global config file.\n     *\n     * @readonly\n     * @type {MapnavFixtureConfig}\n     * @memberof MapnavFixture\n     */\n    get config(): MapnavFixtureConfig | undefined {\n        return super.config;\n    }\n\n    /**\n     * Parses the mapnav config JSON snippet from the config file and save resulting objects to the fixture store.\n     *\n     * @param {MapnavFixtureConfig} [mapnavConfig]\n     * @returns\n     * @memberof MapnavAPI\n     */\n    _parseConfig(mapnavConfig?: MapnavFixtureConfig) {\n        if (!mapnavConfig) {\n            return;\n        }\n\n        const mapnavItems: MapnavItem[] = mapnavConfig.items.map((item: string) => ({\n            id: item\n        }));\n\n        // save mapnav items as a collection to the store\n        // they are saves as a set for easy by-id access\n        this.mapnavStore.items = mapnavItems.reduce<MapnavItemSet>((map: any, item: any) => {\n            map[item.id] = item;\n            return map;\n        }, {});\n\n        // save an ordered list of item ids to use when rendering components\n        this.mapnavStore.order = mapnavItems.map((item: any) => item.id);\n\n        this._validateItems();\n    }\n\n    /**\n     * Checks if components specified as mapnav items are registered or not.\n     * Will check the literal id values, and id values with `-nav-button` suffixes appended.\n     *\n     * @memberof MapnavAPI\n     */\n    _validateItems() {\n        // system mapnav controls that are not tied to a fixture\n        const systemControls: string[] = ['geolocator', 'zoom', 'home', 'fullscreen'];\n\n        // get the ordered list of items and see if any of them are registered\n        this.mapnavStore.order.forEach((id: string) => {\n            // can't check if the nav button component is registered\n            // so we make the assumption that it will always have the `-nav-button` prefix\n\n            // check if fixture exists, or if control is a system control\n            if (this.$iApi.fixture.exists(id) || systemControls.includes(id)) {\n                this.mapnavStore.items[id].componentId = `${id}-nav-button`;\n            }\n        });\n    }\n}\n","export default \"key,enValue,enValid,frValue,frValid\\nmapnav.openMenu,Open navigation,1,Ouvrir la navigation,1\\nmapnav.closeMenu,Close navigation,1,Fermer la navigation,1\\nmapnav.zoomIn,Zoom In,1,Zoom avant,1\\nmapnav.zoomOut,Zoom Out,1,Zoom arrière,1\\nmapnav.home,Home,1,Accueil,1\\nmapnav.fullscreen,Full Screen,1,Plein Écran,1\\nmapnav.geolocator,Your Location,1,Votre position,1\\nmapnav.geolocator.error.permission,The location request was denied. Please check your browser permission settings.,1,Demande de localisation refusée. Veuillez vérifier les paramètres d'autorisation de votre navigateur.,1\\nmapnav.geolocator.error.internal,Your location could not be found.,1,Votre emplacement n'a pu être trouvé.,1\"","import MapnavV from './mapnav.vue';\nimport { MapnavAPI } from './api/mapnav';\nimport { useMapnavStore, type MapnavItemSet } from './store';\nimport type { MapnavFixtureConfig } from './store';\nimport { GlobalEvents } from '@/api';\nimport messages from './lang/lang.csv?raw';\n\nclass MapnavFixture extends MapnavAPI {\n    async added() {\n        // console.log(`[fixture] ${this.id} added`);\n\n        // since this has no panel we need to merge in translations ourselves\n        // TODO?: see if giving fixtures a nicer way to merge translations w/o panel makes sense\n        Object.entries(messages).forEach(value => (<any>this.$iApi.$i18n).mergeLocaleMessage(...value));\n\n        const { destroy, el } = this.mount(MapnavV, {\n            app: this.$element\n        });\n        const innerShell = this.$vApp.$el.getElementsByClassName('inner-shell')[0];\n        innerShell.appendChild(el.childNodes[0]);\n\n        this._parseConfig(this.config);\n        const unwatch = this.$vApp.$watch(\n            () => this.config,\n            (value: MapnavFixtureConfig | undefined) => this._parseConfig(value)\n        );\n\n        // since components used in appbar can be registered after this point, listen to the global component registration event and re-validate items\n        // TODO revist. this seems to be self-contained to the mapnav fixture, so ideally can stay as is and not worry about events api.\n        const handler = this.$iApi.event.on(GlobalEvents.COMPONENT, () => {\n            this._parseConfig(this.config);\n        });\n\n        // override the removed method here to get access to scope\n        this.removed = () => {\n            // console.log(`[fixture] ${this.id} removed`);\n            unwatch();\n            this.$iApi.event.off(handler);\n\n            // gracefully remove all buttons first (in case anything is watching for button removal)\n            const mapnavStore = useMapnavStore(this.$vApp.$pinia);\n            const items: MapnavItemSet = { ...mapnavStore.items };\n            Object.keys(items).forEach(item => mapnavStore.removeItem(item));\n            mapnavStore.$reset();\n            destroy();\n        };\n    }\n}\n\nexport default MapnavFixture;\n"],"names":["_hoisted_1","_openBlock","_createElementBlock","t","useI18n","iApi","inject","zoomIn","throttle","zoomOut","drawStore","useDrawStore","drawingTools","markRaw","defineAsyncComponent","filteredDrawingTools","computed","fTools","tool","item","toggleTool","toolType","mouseFocus","rootResizeObserver","ref","mapnavStore","useMapnavStore","el","isDrawFixtureLoaded","fixture","windowHeight","sepNavVisible","cutoffHeight","updateHeight","blurEvent","keyupEvent","e","onMounted","nextTick","visible","onBeforeUnmount","id","MapnavAPI","FixtureInstance","mapnavConfig","mapnavItems","map","systemControls","messages","MapnavFixture","value","destroy","MapnavV","unwatch","handler","GlobalEvents","items"],"mappings":"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"}