import{i,s as m}from"./main-BFDurRCu.js";import{B as p,H as d,D as g,C as y}from"./quantizationUtils-D907S7Bm.js";function f(s,r,e,a,n,t){if(s==null)return null;const o=s.references("geometry")&&t?w(r,a,t):r,c=s.repurposeFeature(o,n);try{return s.evaluate(c,e)}catch(l){return i.getLogger("esri.views.2d.support.arcadeOnDemand").warn("Feature arcade evaluation failed:",l),null}}const u=new Map;function w(s,r,e){const{transform:a,hasZ:n,hasM:t}=e;u.has(r)||u.set(r,h(r));const o=u.get(r)(s.geometry,a,n,t);return{...s,geometry:o}}function h(s){const r={};switch(s){case"esriGeometryPoint":return(e,a,n,t)=>y(a,r,e,n,t);case"esriGeometryPolygon":return(e,a,n,t)=>g(a,r,e,n,t);case"esriGeometryPolyline":return(e,a,n,t)=>d(a,r,e,n,t);case"esriGeometryMultipoint":return(e,a,n,t)=>p(a,r,e,n,t);default:return i.getLogger("esri.views.2d.support.arcadeOnDemand").error(new m("mapview-arcade",`Unable to handle geometryType: ${s}`)),e=>e}}export{f as default};
