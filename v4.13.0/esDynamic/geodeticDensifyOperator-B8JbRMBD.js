import{a7 as d}from"./main-BFDurRCu.js";import{i as S,a as b,s as x,c as j,u as O}from"./operatorGeodeticDensify-D4LT4cbB.js";import{e as y}from"./geodeticCurveType-D_etKnbP.js";let a,u,c,i,p;function l(){return!!a&&x()}async function m(){if(!l()){const[e]=await Promise.all([import("./apiConverter-CSuukuP9.js"),S()]);a=e.fromGeometry,u=e.fromSpatialReference,c=e.getSpatialReference,i=e.toGeometry,p=b()}}function g(e,t,n={}){const{curveType:s="geodesic",unit:o}=n;o&&(t=d(t,o,"meters"));const r=c(e);return i(O(a(e),t,u(r),y[s]),r)}function _(e,t,n={}){const{curveType:s="geodesic",unit:o}=n;o&&(t=d(t,o,"meters"));const r=e.map(a),f=c(e);return j(r,t,u(f),y[s]).map(v=>i(v,f))}const M=Object.freeze(Object.defineProperty({__proto__:null,execute:g,executeMany:_,isLoaded:l,load:m,get supportsCurves(){return p}},Symbol.toStringTag,{value:"Module"})),T=Object.freeze(Object.defineProperty({__proto__:null,execute:g,executeMany:_,isLoaded:l,load:m,get supportsCurves(){return p}},Symbol.toStringTag,{value:"Module"}));export{T as a,M as g,m as l};
