import{j as k,ev as u,fZ as O,fG as _,cG as $,f_ as T,f$ as b,q as r,v as o,x as v,cE as C,a3 as y,M as D}from"./main-6eEsl9OJ.js";import{r as S}from"./mat2df64-CH-gvrN5.js";import{n as M,F as x,u as g,v as I,k as V,b as U,a as z,U as E}from"./drawSurfaces-CrdQT9Sm.js";import{n as h}from"./jsxFactory-vcCo5QL-.js";import"./preload-helper-B76NpbEU.js";import"./vec32-BvrGiqaM.js";import"./common-DQOJ18NT.js";import"./geodesicUtils-Bbp3lqW4.js";import"./projectionUtils-BoGsVCso.js";import"./distanceOperator-C4qKysqY.js";import"./Point2D-yI-uny1B.js";import"./ProjectionTransformation-BBf9JC5R.js";import"./Envelope2D-N58wWtPO.js";import"./Transformation2D-CZuEM6rU.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./OperatorDefinitions-DP7_WWTp.js";import"./apiConverter-eRO55_cM.js";import"./jsonConverter-bNZhBr_R.js";import"./simplifyOperator-D5xutqSf.js";import"./operatorSimplify-DZ29dYfK.js";import"./mat2d-D9DBP-jx.js";import"./quat-CRiU85cN.js";import"./mat3f64-B5o_lm6j.js";import"./quatf64-aQ5IuZRd.js";import"./vec42-CKs01hkn.js";import"./memoize-DmxaQ-k8.js";import"./ReactiveSet-BYKR18RU.js";import"./diffUtils-BBoLSBHW.js";import"./UpdatingHandles-DgAejPqv.js";import"./elevationInfoUtils-BiNnYWla.js";import"./ElevationInfo-Dh54MbB6.js";import"./lengthUtils-DL53yBUT.js";import"./ViewingMode-Chk7YAAL.js";import"./SnappingContext-eove32g5.js";import"./vec2-ChnYg_BJ.js";import"./vec2f64-Cgb6qxNH.js";import"./vec4f64-DPb6J-GU.js";import"./plane-BqH4Rk0w.js";import"./vectorStacks-DkJKKYqf.js";import"./mat4f64-q_b6UJoq.js";import"./SketchViewModel-qU8vsgpY.js";import"./GraphicsLayer-BnIrIT3a.js";import"./GraphicsCollection-DPkZ9iLQ.js";import"./Layer-DzZVuRQg.js";import"./TimeExtent-DG27ZQvz.js";import"./BlendLayer-Ck8n336O.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-DIh9yTg7.js";import"./parser-C27q64z5.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-DL3nuHcq.js";import"./ScaleRangeLayer-BjLqqFXw.js";import"./editableLayers-D6yrpnO9.js";import"./utils-CcyJ7vzx.js";import"./Queue-DXtZaugk.js";import"./Version-DkcAnD6Q.js";import"./Cyclical-Du2djXHA.js";import"./quantityUtils-DW8sL_d6.js";import"./projectVectorToVector-PLaHcAe9.js";import"./projectPointToVector-C4UVIiJJ.js";import"./asyncUtils-SHsCTXd3.js";import"./Query-BQgZ7-at.js";import"./Field-CzUupKXc.js";import"./fieldType-B4FIlvI-.js";import"./sphere-DYiAGvsP.js";import"./mat3-CruJiiUv.js";import"./geodeticLengthOperator-DNLqI12P.js";import"./geodeticCurveType-CirnHLSB.js";import"./earcut-D9gy186-.js";import"./triangle-DzmNzYoH.js";import"./lineSegment-C4u8B-fp.js";import"./spatialReferenceEllipsoidUtils-4Wh6IZR8.js";import"./meshVertexSpaceUtils-CRkG59M8.js";import"./MeshLocalVertexSpace-0hZVz5JN.js";import"./hydratedFeatures-D7uyoV5q.js";import"./Scheduler-C2DZToJ1.js";import"./debugFlags-B0yLZSdU.js";import"./intl-Dk1N7wZP.js";import"./uuid-Cl5lrJ4c.js";import"./sanitizerUtils-CJlLEeXg.js";let i=class extends k{constructor(t){super(t),this.coordinates=void 0,this.strokeDash=[],this.strokeWidth=1,this.strokeColor=[0,0,0,1],this.strokeDashColor=[255,255,255,1],this.fillColor=[0,0,0,0],this.visible=!0,this.isDecoration=!0}get _strokeStyle(){const t=this.strokeColor;return`rgba(${t[0]}, ${t[1]}, ${t[2]}, ${t[3]})`}get _strokeBackgroundStyle(){const t=this.strokeDashColor;return`rgba(${t[0]}, ${t[1]}, ${t[2]}, ${t[3]})`}get _fillStyle(){const t=this.fillColor;return`rgba(${t[0]}, ${t[1]}, ${t[2]}, ${t[3]})`}get _renderCoordinates(){const t=[];if(!this.coordinates)return{coordinates:t,rect:u};const e=O(_($(u),this.coordinates),2*this.strokeWidth);e[0]=Math.floor(e[0]),e[1]=Math.floor(e[1]),e[2]=Math.ceil(e[2]+.5),e[3]=Math.ceil(e[3]+.5);for(const a of this.coordinates)t.push([Math.floor(a[0]-e[0])+.5,Math.floor(a[1]-e[1])+.5]);return t.reverse(),{coordinates:t,rect:e}}render(){const{coordinates:t,rect:e}=this._renderCoordinates,a=T(e),n=b(e);return h("div",{classes:{"esri-outline-overlay-item":!0},styles:{left:e[0]+"px",top:e[1]+"px",width:a+"px",height:n+"px",visibility:this.visible?"visible":"hidden"}},h("svg",{height:n,styles:{display:"block"},width:a},h("polygon",{fill:this._fillStyle,points:t.map(([l,p])=>`${l},${p}`).join(" "),stroke:this._strokeBackgroundStyle,"stroke-width":this.strokeWidth}),h("polygon",{fill:"transparent",points:t.map(([l,p])=>`${l},${p}`).join(" "),stroke:this._strokeStyle,"stroke-dasharray":this.strokeDash.length?this.strokeDash.join(" "):void 0,"stroke-width":this.strokeWidth})))}renderCanvas(){}};r([o()],i.prototype,"coordinates",void 0),r([o()],i.prototype,"strokeDash",void 0),r([o()],i.prototype,"strokeWidth",void 0),r([o()],i.prototype,"strokeColor",void 0),r([o()],i.prototype,"strokeDashColor",void 0),r([o()],i.prototype,"fillColor",void 0),r([o()],i.prototype,"visible",void 0),r([o()],i.prototype,"isDecoration",void 0),r([o({readOnly:!0})],i.prototype,"_strokeStyle",null),r([o({readOnly:!0})],i.prototype,"_strokeBackgroundStyle",null),r([o({readOnly:!0})],i.prototype,"_fillStyle",null),r([o({readOnly:!0})],i.prototype,"_renderCoordinates",null),i=r([v("esri.views.overlay.OutlineOverlayItem")],i);let s=class extends C.EventedMixin(M){constructor(t){super(t),this.drawOperation=null,this._overlayItem=void 0,this.geometryType=null,this.mode=null,this.type="draw-screen"}initialize(){this.drawOperation=this._makeDrawOperation();const t=e=>this.drawOperation?.on(e,a=>{this._updateVisuals(),this.emit(e,a)})??y();this.addHandles([t("vertex-add"),t("vertex-remove"),t("vertex-update"),t("cursor-update"),t("complete")]),this.finishToolCreation()}destroy(){this.drawOperation=D(this.drawOperation),this._set("view",null)}get canRedo(){return!!this.drawOperation?.canRedo}get canUndo(){return!!this.drawOperation?.canUndo}set centeredToggled(t){this._set("centeredToggled",t),this._updateVisuals()}set enabled(t){const{drawOperation:e}=this;e&&(e.interactive=t),this._set("enabled",t)}set uniformSizeToggled(t){this._set("uniformSizeToggled",t),this._updateVisuals()}get updating(){return this.drawOperation?.updating??!1}get cursor(){return this._get("cursor")??"crosshair"}set cursor(t){this._set("cursor",t);const{drawOperation:e}=this;e&&(e.cursor=t)}completeCreateOperation(){this.drawOperation?.complete()}onInputEvent(t){this.destroyed||this.drawOperation?.onInputEvent(t)}redo(){this.drawOperation?.redo()}undo(){this.drawOperation?.undo()}reset(){}_makeDrawOperation(){const{view:t}=this;return new x({view:t,manipulators:this.manipulators,geometryType:W(this.geometryType),drawingMode:this.mode,hasZ:!1,defaultZ:0,snapToSceneEnabled:!1,drawSurface:new g,hasM:!1,snappingManager:null,snappingVisualizer:null,graphic:null,cursor:this.cursor,automaticLengthMeasurementUtils:this.automaticLengthMeasurementUtils})}get coordinates(){const{drawOperation:t}=this;if(!t?.geometryIncludingUncommittedVertices.length)return[];const{coordinateHelper:e}=t,a=t.committableVertex,n=t.committedVertices.slice();a!=null&&n.push(e.pointToArray(a));const l=n.length;switch(this.geometryType){case"point":return n.slice(0,1);case"circle":case"rectangle":{const p=new I(S,g.spatialReference),c=this.geometryType==="circle"?V:U,w=this.geometryType==="circle"?z:E;if(l===1&&t.isCompleted){const m=n[0],d=p.makeMapPoint(m[0]+j,m[1]);return c([m,d],p,!0)?.geometry.rings[0]??[]}if(l===2){const m=this.geometryType!=="rectangle",d=this.centeredToggled!==m,f=this.geometryType!=="rectangle";return(this.uniformSizeToggled!==f?c(n,p,d)?.geometry.rings[0]:w(n,p,d)?.geometry.rings[0])??[]}return[]}}return n}_updateVisuals(){if(!this._overlayItem){const t=new i({strokeDash:[5],strokeDashColor:[255,255,255,255]});this.view.overlay?.addItem(t),this.addHandles(y(()=>{this.view.overlay?.removeItem(t),t?.destroy(),this._overlayItem=void 0})),this._overlayItem=t}this._overlayItem.coordinates=this.coordinates}onDeactivate(){this.drawOperation?.isCompleted||this.drawOperation?.cancel()}};function W(t){switch(t){case"polygon":case"point":return t;case"circle":case"rectangle":return"segment"}}r([o({value:!1})],s.prototype,"centeredToggled",null),r([o()],s.prototype,"drawOperation",void 0),r([o({value:!0})],s.prototype,"enabled",null),r([o({value:!1})],s.prototype,"uniformSizeToggled",null),r([o({constructOnly:!0})],s.prototype,"geometryType",void 0),r([o({constructOnly:!0})],s.prototype,"mode",void 0),r([o({readOnly:!0})],s.prototype,"type",void 0),r([o({readOnly:!0})],s.prototype,"updating",null),r([o({constructOnly:!0,nonNullable:!0})],s.prototype,"view",void 0),r([o({constructOnly:!0})],s.prototype,"automaticLengthMeasurementUtils",void 0),r([o()],s.prototype,"cursor",null),s=r([v("esri.views.draw.DrawScreenTool")],s);const j=48;export{s as DrawScreenTool,W as geometryTypeToDrawOperationGeometryType};
