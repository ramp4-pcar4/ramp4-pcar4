const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./geometryEngineJSON-jmZ-ASIo.js","./geometryEngineBase-C-7zg03I.js","./_commonjsHelpers-DCkdB7M8.js","./json-Wa8cmqdu.js"])))=>i.map(i=>d[i]);
import{_ as R}from"./preload-helper-B76NpbEU.js";import{n as T,i as q}from"./defaultCIMValues-CQAn2izL.js";function B(t){return typeof t=="function"}function Z(t,e,r,n){return B(t)?t(e,r,n):t}function tt(t){return[t.r,t.g,t.b,t.a]}const $=` /-,
`;function N(t){let e=t.length;for(;e--;)if(!$.includes(t.charAt(e)))return!1;return!0}function et(t,e){const r=[];let n=0,l=-1;do if(l=t.indexOf("[",n),l>=n){if(l>n){const o=t.slice(n,l);r.push([o,null,N(o)])}if(n=l+1,l=t.indexOf("]",n),l>=n){if(l>n){const o=e[t.slice(n,l)];o&&r.push([null,o,!1])}n=l+1}}while(l!==-1);if(n<t.length){const o=t.slice(n);r.push([o,null,N(o)])}return r}function rt(t,e,r){let n="",l=null;for(const o of e){const[a,i,u]=o;if(a!=null&&a!=="")u?l=a:(l!=null&&(n+=l,l=null),n+=a);else{const c=t.readAttribute(i);c!=null&&c!==""&&(l!==null&&(n+=l,l=null),n+=c)}}return O(n,r)}function nt(t,e,r,n){let l="",o=null;for(const a of e){const[i,u,c]=a;if(i!=null&&i!=="")c?o=i:(o!=null&&(l+=o,o=null),l+=i);else{let m=u;r!=null&&(m=J(u,r));const s=t.attributes[m];s!=null&&s!==""&&(o!=null&&(l+=o,o=null),l+=s)}}return O(l,n)}function O(t,e){switch(typeof t!="string"&&(t=String(t)),e){case"LowerCase":return t.toLowerCase();case"Allcaps":return t.toUpperCase();default:return t}}function ot(t,e,r,n,l,o,a=!0){const i=e/l,u=r/o,c=Math.ceil(i/2),m=Math.ceil(u/2);for(let s=0;s<o;s++)for(let f=0;f<l;f++){const p=4*(f+(a?o-s-1:s)*l);let M=0,I=0,b=0,d=0,S=0,P=0,k=0;const L=(s+.5)*u;for(let h=Math.floor(s*u);h<(s+1)*u;h++){const A=Math.abs(L-(h+.5))/m,D=(f+.5)*i,_=A*A;for(let g=Math.floor(f*i);g<(f+1)*i;g++){let y=Math.abs(D-(g+.5))/c;const C=Math.sqrt(_+y*y);C>=-1&&C<=1&&(M=2*C*C*C-3*C*C+1,M>0&&(y=4*(g+h*e),k+=M*t[y+3],b+=M,t[y+3]<255&&(M=M*t[y+3]/250),d+=M*t[y],S+=M*t[y+1],P+=M*t[y+2],I+=M))}}n[p]=d/I,n[p+1]=S/I,n[p+2]=P/I,n[p+3]=k/b}}function j(t){return t?[t[0],t[1],t[2],t[3]/255]:[0,0,0,0]}function lt(t){return t.data?.symbol??null}function it(t){return t.type==="CIMVectorMarker"||t.type==="CIMPictureMarker"||t.type==="CIMBarChartMarker"||t.type==="CIMCharacterMarker"||t.type==="CIMPieChartMarker"||t.type==="CIMStackedBarChartMarker"}function at(t){return t.type==="CIMGradientStroke"||t.type==="CIMPictureStroke"||t.type==="CIMSolidStroke"}function ct(t){return t!=null&&(t.type==="CIMGradientFill"||t.type==="CIMHatchFill"||t.type==="CIMPictureFill"||t.type==="CIMSolidFill"||t.type==="CIMWaterFill")}function H(t){return t!=null&&(t.type==="CIMMarkerPlacementAlongLineRandomSize"||t.type==="CIMMarkerPlacementAlongLineSameSize"||t.type==="CIMMarkerPlacementAlongLineVariableSize"||t.type==="CIMMarkerPlacementAtExtremities"||t.type==="CIMMarkerPlacementAtMeasuredUnits"||t.type==="CIMMarkerPlacementAtRatioPositions"||t.type==="CIMMarkerPlacementOnLine"||t.type==="CIMMarkerPlacementOnVertices")}const st=(t,e=0)=>t==null||isNaN(t)?e:t,ut=(t,e)=>t??e,ft=(t,e)=>t??e,Mt=t=>t.tintColor?j(t.tintColor):[255,255,255,1],yt=t=>{if(!t)return!1;for(const e of t)switch(e.type){case"CIMGeometricEffectBuffer":case"CIMGeometricEffectDonut":case"CIMGeometricEffectOffset":case"CIMGeometricEffectTaperedPolygon":case"CIMGeometricEffectEnclosingPolygon":return!0}return!1};function mt(){return R(()=>import("./geometryEngineJSON-jmZ-ASIo.js").then(t=>t.g),__vite__mapDeps([0,1,2,3]),import.meta.url)}function Ct(t){if(!t)return"normal";switch(t.toLowerCase()){case"italic":return"italic";case"oblique":return"oblique";default:return"normal"}}function pt(t){if(!t)return"normal";switch(t.toLowerCase()){case"bold":return"bold";case"bolder":return"bolder";case"lighter":return"lighter";default:return"normal"}}function It(t){let e="normal",r="normal";if(t){const n=t.toLowerCase();n.includes("italic")?e="italic":n.includes("oblique")&&(e="oblique"),n.includes("bold")?r="bold":n.includes("light")&&(r="lighter")}return{style:e,weight:r}}function ht(t){return t.underline?"underline":t.strikethrough?"line-through":"none"}function v(t){if(!t)return null;switch(t.type){case"CIMPolygonSymbol":if(t.symbolLayers)for(const e of t.symbolLayers){const r=v(e);if(r!=null)return r}break;case"CIMTextSymbol":return v(t.symbol);case"CIMSolidFill":return t.color}return null}function x(t){if(t)switch(t.type){case"CIMPolygonSymbol":case"CIMLineSymbol":{const e=t.symbolLayers;if(e)for(const r of e){const n=x(r);if(n!=null)return n}break}case"CIMTextSymbol":return x(t.symbol);case"CIMSolidStroke":return t.color}}function bt(t){for(const e of t)if(e.enable)switch(e.type){case"CIMSolidStroke":case"CIMGradientStroke":case"CIMPictureStroke":return!0}return!1}function G(t){if(t)switch(t.type){case"CIMPolygonSymbol":case"CIMLineSymbol":if(t.symbolLayers)for(const e of t.symbolLayers){const r=G(e);if(r!==void 0)return r}break;case"CIMTextSymbol":return G(t.symbol);case"CIMSolidStroke":case"CIMGradientStroke":case"CIMPictureStroke":return t.width}}function dt(t){switch(t){case"Left":default:return"left";case"Right":return"right";case"Center":case"Justify":return"center"}}function kt(t){switch(t){case"Top":default:return"top";case"Center":return"middle";case"Baseline":return"baseline";case"Bottom":return"bottom"}}function St(t){return(t?Object.keys(t):[]).map(e=>({name:e,alias:e,type:typeof t[e]=="string"?"esriFieldTypeString":"esriFieldTypeDouble"}))}const Pt=t=>t.includes("data:image/svg+xml");function gt(t){if(!t)return null;switch(t.type){case"CIMPointSymbol":case"CIMTextSymbol":return"esriGeometryPoint";case"CIMLineSymbol":return"esriGeometryPolyline";case"CIMPolygonSymbol":return"esriGeometryPolygon";default:return null}}function w(t){return t&&t.charAt(0).toLowerCase()+t.slice(1)}function wt(t,e,r,n,l,o,a=!0){const{infos:i}=o;let u=1,c=0,m=0,s=0,f=1;for(const{absoluteAnchorPoint:I,offsetX:b,offsetY:d,rotation:S,size:P,frameHeight:k,rotateClockWise:L,scaleSymbolsProportionally:h}of i)f=I?1:u,m=V(b,d,c,f,m),s=F(b,d,c,f,s),k&&(h||a)&&(u*=P/k),c=z(S,L,c);const p=V(n,l,c,f,m),M=F(n,l,c,f,s);return{size:t*u,rotation:z(e,r,c),offsetX:p,offsetY:M}}function U(t){if(t==null)return!1;if(Array.isArray(t))return t.every(e=>U(e));switch(typeof t){case"string":return!!t;case"number":return!isNaN(t)}}function W(t,e){if(e==="color"||e==="outlinecolor"||e==="backgroundcolor"||e==="borderlinecolor"||e==="tintcolor")return[...q[e]];const r=T[t];if(!r)throw new Error(`InternalError: default value for type ${t}.`);return r[e]}function X(t){return t.split(" ").map(e=>Number(e))}function Y(t){return typeof t=="string"?X(t):t}function Lt(t){return t?.dashTemplate&&(t.dashTemplate=Y(t.dashTemplate)),t}function E(t){if(t==null)return"Normal";switch(t.type){case"CIMTextSymbol":return t.textCase??"Normal";case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":{const e=t.symbolLayers;if(!e)return"Normal";for(const r of e)if(r.type==="CIMVectorMarker")return E(r)}break;case"CIMVectorMarker":{const e=t.markerGraphics;if(!e)return"Normal";for(const r of e)if(r.symbol)return E(r.symbol)}}return"Normal"}function Tt(t){if(t)switch(t.type){case"CIMTextSymbol":return t.height;case"CIMPointSymbol":{let e=0;if(t.symbolLayers){for(const r of t.symbolLayers)if(r)switch(r.type){case"CIMCharacterMarker":case"CIMPictureMarker":case"CIMVectorMarker":case"CIMObjectMarker3D":case"CIMglTFMarker3D":{const n=r.size??T.CIMVectorMarker.size;n>e&&(e=n);break}}}return e}case"CIMLineSymbol":case"CIMPolygonSymbol":{let e=0;if(t.symbolLayers){for(const r of t.symbolLayers)if(r)switch(r.type){case"CIMSolidStroke":case"CIMPictureStroke":case"CIMGradientStroke":{const n=r.width;n!=null&&n>e&&(e=n);break}case"CIMCharacterMarker":case"CIMPictureMarker":case"CIMVectorMarker":case"CIMObjectMarker3D":case"CIMglTFMarker3D":if(r.markerPlacement&&H(r.markerPlacement)){const n=r.size??T.CIMVectorMarker.size;n>e&&(e=n)}break;case"CIMPictureFill":{const n=r.height;n!=null&&n>e&&(e=n)}}}return e}}}function J(t,e){if(e!==null){const r=e.get(t);return r?r.name:t}return t}function At(t){return t.map(e=>({...e,propertyName:w(e.propertyName)}))}function Nt(t){const e={};for(const r in t){const n=t[r];e[w(r)]=n}return e}function F(t,e,r,n,l){const o=r*Math.PI/180;if(o){const a=Math.cos(o);return(Math.sin(o)*t+a*e)*n+l}return e*n+l}function V(t,e,r,n,l){const o=r*Math.PI/180;return o?(Math.cos(o)*t-Math.sin(o)*e)*n+l:t*n+l}function z(t,e,r){return e?r-t:r+t}function vt(t,e,r){const n=r==="Color"||r==="TintColor"||r==="ToColor",l=r==="Rotation"||r==="Angle"||r==="ToRotation";let o=e[w(r)];if(o!=null&&(n?o=[o[0]/255,o[1]/255,o[2]/255,o[3]/255]:l&&(o*=Math.PI/180)),o==null&&(o=W(e.type,r.toLowerCase()),o!=null&&(n?o=[o[0]/255,o[1]/255,o[2]/255,o[3]]:l&&(o*=Math.PI/180))),e.primitiveName!=null){const a=t[e.primitiveName];if(a!=null){const i=a[r];i==null||(typeof i=="string"||typeof i=="number"||Array.isArray(i)?(o=i,o!=null&&(n?o=[o[0]/255,o[1]/255,o[2]/255,o[3]/255]:l&&(o*=Math.PI/180))):(o={valueExpressionInfo:i,defaultValue:o},o!=null&&(n?o={type:"Process",op:"ArcadeColor",value:o}:l&&(o={type:"Process",op:"Divide",left:o,right:180/Math.PI}))))}}if(o==null)throw new Error(`Failed to derive a value or an expression for "${r}".`);return o}function xt(t,e,r){if(e[w(r)]!=null)return!0;if(e.primitiveName!=null){const n=t[e.primitiveName];if(n!=null&&n[r]!=null)return!0}return!1}function Gt(t,e){return Math.max(Math.min((t??e)/100,1),0)}export{v as A,at as C,wt as D,kt as E,St as F,G,Lt as H,ct as I,E as J,It as L,j as M,x as N,w as O,Ct as P,Y as R,yt as S,ht as T,Tt as U,Pt as V,At as X,Nt as Y,vt as Z,xt as _,et as a,ut as b,rt as c,ft as d,Gt as e,ot as f,mt as g,st as h,U as j,Mt as k,it as m,Z as n,tt as o,H as p,W as q,nt as s,dt as v,pt as w,bt as x,lt as y,gt as z};
