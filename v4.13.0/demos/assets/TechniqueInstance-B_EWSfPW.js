import{aq as c,i as S,s as V}from"./main-6eEsl9OJ.js";import{J as u,y as v,q as F,k as U,j as k,B as L,z as M,b as $,x as O}from"./definitions-CASyCajO.js";import{f as m}from"./UpdateTracking2D-DDb-IRK6.js";import{i as f,o as R}from"./Utils-DTf8bb9E.js";import{P as w,L as D}from"./enums-UBzvFP7O.js";import{R as B}from"./FramebufferObject-DNgF0P1h.js";import{a as z,S as A}from"./Texture-Cg6gEanA.js";import{i as P}from"./TileContainer-B3VF1iGu.js";const q=()=>S.getLogger("esri.views.2d.engine.webgl.AttributeStoreView");class T{constructor(t,e,i){this._texture=null,this._lastTexture=null,this._fbos={},this.texelSize=4;const{buffer:s,pixelType:r,textureOnly:n}=t,a=f(r);this.blockIndex=i,this.pixelType=r,this.size=e,this.textureOnly=n,n||(this.data=new a(s)),this._resetRange()}destroy(){this._texture?.dispose();for(const t in this._fbos){const e=this._fbos[t];e&&(t==="0"&&e.detachColorTexture(),e.dispose()),this._fbos[t]=null}this._texture=null}get _textureDesc(){const t=new z;return t.wrapMode=w.CLAMP_TO_EDGE,t.samplingMode=D.NEAREST,t.dataType=this.pixelType,t.width=this.size,t.height=this.size,t}setData(t,e,i){const s=m(t),r=this.data,n=s*this.texelSize+e;!r||n>=r.length||(r[n]=i,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s))}getData(t,e){if(this.data==null)return null;const i=m(t)*this.texelSize+e;return!this.data||i>=this.data.length?null:this.data[i]}getTexture(t){return this._texture??this._initTexture(t)}getFBO(t,e=0){if(!this._fbos[e]){const i=e===0?this.getTexture(t):this._textureDesc;this._fbos[e]=new B(t,i)}return this._fbos[e]}get hasDirty(){const t=this.dirtyStart;return this.dirtyEnd>=t}updateTexture(t,e){try{const i=this.dirtyStart,s=this.dirtyEnd;if(!this.hasDirty)return;c("esri-2d-update-debug")&&console.debug(`Version[${e}] AttributeStoreView.updateTexture`,{start:i,end:s,firstBytes:new Uint8Array(this.data.buffer.slice(0,16)),block:this}),this._resetRange();const r=this.data.buffer,n=this.getTexture(t),a=4,h=(i-i%this.size)/this.size,o=(s-s%this.size)/this.size,d=h,x=this.size,p=o,_=h*this.size*a,g=(x+p*this.size)*a-_,b=f(this.pixelType),I=new b(r,_*b.BYTES_PER_ELEMENT,g),E=this.size,y=p-d+1;if(y>this.size)return void q().error(new V("mapview-webgl","Out-of-bounds index when updating AttributeData"));n.updateData(0,0,d,E,y,I)}catch{}}update(t){const{data:e,start:i,end:s}=t;if(e!=null&&this.data!=null){const r=this.data,n=i*this.texelSize;for(let a=0;a<e.length;a++){const h=1<<a%this.texelSize;t.layout&h&&(r[n+a]=e[a])}}this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,s)}resize(t,e){const i=this.size;if(this.size=e,this.textureOnly)return void(i!==this.size&&(this._lastTexture=this._texture,this._texture=null));const s=f(this.pixelType);this.destroy(),this.data=new s(t.buffer)}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}_initTexture(t){const e=new A(t,this._textureDesc,this.data??void 0);if(this._lastTexture!=null&&this._fbos[0]){const i=this._lastTexture.descriptor.width,s=this._lastTexture.descriptor.height,r=this._lastTexture.descriptor.dataType,n=this._lastTexture.descriptor.pixelFormat,a=this.getFBO(t),h=R(r),o=new(f(r))(new ArrayBuffer(i*s*h*this.texelSize)),d=t.getBoundFramebufferObject(),{x,y:p,width:_,height:g}=t.getViewport();t.bindFramebuffer(a),a.readPixels(0,0,i,s,n,r,o),e.updateData(0,0,0,2*i,s/2,o),t.setViewport(x,p,_,g),t.bindFramebuffer(d)}return this.destroy(),this._texture=e,this._texture}}class C{constructor(){this.size=0,this._pendingAttributeUpdates=[],this._version=0,this._epoch=0,this._locked=!1}get locked(){return this._locked}_initialize(t){if(!t)throw new Error("InternalError: initArgs must be defined");const e=t.blockDescriptors;if(this.size=t.blockSize,c("esri-2d-update-debug")&&console.debug("AttributeStoreView.initialize",{message:t}),this._data==null)this._data=e.map((i,s)=>i!=null?new T(i,this.size,s):null);else for(let i=0;i<this._data.length;i++){const s=this._data[i],r=e[i];r!=null&&(s==null?this._data[i]=new T(r,this.size,i):s.resize(r,this.size))}}destroy(){for(const t of this._data??[])t?.destroy();this._defaultTexture?.dispose(),this._defaultTexture=null,this._pendingAttributeUpdates=[]}isEmpty(){return this._data==null}getBlock(t){return this._data==null?null:this._data[t]}setLabelMinZoom(t,e){this.setData(t,u.FilterFlags,1,e)}setLocalTimeOrigin(t,e){this.setData(t,u.LocalTimeOrigin,0,e)}getLabelMinZoom(t){return this.getData(t,u.FilterFlags,1,255)}getFilterFlags(t){return this.getData(t,u.FilterFlags,0,0)}getVisualVariableData(t,e){return this.getData(t,u.VV,e,0)}getData(t,e,i,s){if(!this._data)return 0;const r=this._data[e];if(r==null)return 0;const n=r.getData(t,i);return n??s}setData(t,e,i,s){this._data[e].setData(t,i,s)}lockTextureUploads(){this._locked=!0}unlockTextureUploads(){this._locked=!1,this.update()}requestUpdate(t){this._version=t.version,this._pendingAttributeUpdates.push(t),c("esri-2d-update-debug")&&console.debug(`Version[${this._version}] AttributeStoreView.requestUpdate`,{message:t})}get currentEpoch(){return this._epoch}get hasPendingUpdates(){return this._pendingAttributeUpdates.length>0}update(){if(this._locked)return;const t=this._pendingAttributeUpdates;this._pendingAttributeUpdates=[];for(const e of t){const{blockData:i,initArgs:s,sendUpdateEpoch:r,version:n}=e;c("esri-2d-update-debug")&&console.debug(`Version[${this._version}] Epoch[${r}] AttributeStoreView.applyUpdate`),this._version=n,this._epoch=r,s!=null&&this._initialize(s);const a=this._data;for(let h=0;h<i.length;h++){const o=i[h],d=a[h];d!=null&&o!=null&&(c("esri-2d-update-debug")&&console.debug(`Version[${this._version}] CpuBlock[${h}] AttributeStoreView.update`,{block:o}),d.update(o))}}}getUniforms(t){return{filterFlags:{texture:this._getTexture(t,u.FilterFlags),unit:O},animation:{texture:this._getTexture(t,u.Animation),unit:$},gpgpu:{texture:this._getTexture(t,u.GPGPU),unit:M},localTimeOrigin:{texture:this._getTexture(t,u.LocalTimeOrigin),unit:L},visualVariableData:{texture:this._getTexture(t,u.VV),unit:k},dataDriven0:{texture:this._getTexture(t,u.DD0),unit:U},dataDriven1:{texture:this._getTexture(t,u.DD1),unit:F},dataDriven2:{texture:this._getTexture(t,u.DD2),unit:v},size:this.size}}_getTexture(t,e){const i=this._data?.[e];return i?(i.updateTexture(t,this._version),i.getTexture(t)):this._getDefaultTexture(t)}_getDefaultTexture(t){if(this._defaultTexture==null){const e=new z;e.wrapMode=w.CLAMP_TO_EDGE,e.samplingMode=D.NEAREST,e.width=1,e.height=1,this._defaultTexture=new A(t,e,new Uint8Array(4))}return this._defaultTexture}}const N=60;let W=class extends P{constructor(t){super(t),this._statisticsByLevel=new Map,this._entityIndex=new Map,this.attributeView=new C}destroy(){this.children.forEach(t=>t.destroy()),this.removeAllChildren(),this.attributeView.destroy()}doRender(t){t.context.capabilities.enable("textureFloatLinear"),super.doRender(t)}get hasAnimations(){for(const t of this.children)if(t.hasAnimations)return!0;return!1}_reindexAndUpdateFeaturesIfNeeded(){if(this.hasAnimations&&(this._reindexFeatures(),this.attributeView.size!==0))for(const t of this._entityIndex.values())t.dirty&&(this.attributeView.setData(t.displayId,u.LocalTimeOrigin,0,t.firstIndexed),t.dirty=!1)}restartAnimation(t){const e=this._entityIndex.get(t);if(!e)return;const i=performance.now()/1e3;e.firstIndexed=i,e.dirty=!0}restartAllAnimations(){const t=performance.now()/1e3;for(const[e,i]of this._entityIndex)i.firstIndexed=t,i.dirty=!0}_reindexFeatures(){const t=performance.now()/1e3;for(const e of this.children)for(const i of e.entityIds){const{objectId:s}=i;let r=this._entityIndex.get(s);r||(r={objectId:s,displayId:0,firstIndexed:t,lastIndexed:0,dirty:!0},this._entityIndex.set(s,r)),r.lastIndexed=t,r.displayId=i.displayId}for(const[e,i]of this._entityIndex)t-i.lastIndexed>N&&this._entityIndex.delete(e)}_updateAttributeView(){this.attributeView.update(),this._reindexAndUpdateFeaturesIfNeeded()}createRenderParams(t){const e=super.createRenderParams(t);return e.attributeView=this.attributeView,e.instanceStore=this._instanceStore,e.statisticsByLevel=this._statisticsByLevel,e}};function tt(l){return l}class et{constructor(t,e,i){this._instanceId=t,this.techniqueRef=e,this._input=i}get instanceId(){return this._instanceId}createMeshInfo(t){return{id:this._instanceId,techniqueType:this.techniqueRef.type,inputParams:t,optionalAttributes:this._input.optionalAttributes}}getInput(){return this._input}setInput(t){this._input=t}}export{et as i,W as n,tt as r};
