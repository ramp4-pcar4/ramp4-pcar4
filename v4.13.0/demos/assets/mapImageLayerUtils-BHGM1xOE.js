import{P as p,$ as u}from"./utils-CEAqrH5t.js";import{l as y,c as f,E as a,i as v,u as n}from"./portalItemUtils-DES5WVek.js";import"./main-6eEsl9OJ.js";import"./preload-helper-B76NpbEU.js";import"./originUtils-CPX8CCAY.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./PortalItem-8NBch2N-.js";import"./jsonContext-CcSVT7S_.js";import"./saveUtils-CS2Yf8a3.js";import"./projectionUtils-BoGsVCso.js";const o="Map Service",I="map-image-layer-save",d="map-image-layer-save-as";function s(r){return{isValid:r.type==="map-image"&&!r.sourceJSON?.tileInfo,errorMessage:"Layer.type should be 'map-image' and reference a dynamic (non-cached) map service"}}function m(r){const e=r.layerJSON;return Promise.resolve(e&&Object.keys(e).length?e:null)}function g(r,e){return l(r,e),Promise.resolve()}async function A(r,e){const{parsedUrl:t,title:c,fullExtent:i}=r;e.url=t.path,e.title||=c,e.extent=i?await y(i):null,f(e,a.METADATA),l(r,e)}function l(r,e){v(e,a.DYNAMIC);const t=r.sublayers?.length??0;n(e,a.MULTI_LAYER,t>1),n(e,a.SINGLE_LAYER,t===1)}async function $(r,e){return p({layer:r,itemType:o,validateLayer:s,createItemData:m,errorNamePrefix:I,setItemProperties:g},e)}async function b(r,e,t){return u({layer:r,itemType:o,validateLayer:s,createItemData:m,errorNamePrefix:d,newItem:e,setItemProperties:A},t)}export{$ as save,b as saveAs};
