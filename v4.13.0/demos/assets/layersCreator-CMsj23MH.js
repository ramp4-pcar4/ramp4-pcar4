import{V as f}from"./main-6eEsl9OJ.js";import{e as M}from"./loadUtils-R8Be9RRI.js";import{a as n}from"./lazyLayerLoader-CzDkXQ29.js";import d from"./PortalItem-8NBch2N-.js";import{selectLayerClassPath as A}from"./portalLayers-BPYU1Noz.js";import{t as b}from"./styleUtils-DEvcoecU.js";import"./preload-helper-B76NpbEU.js";import"./fetchService-Cz8yzViK.js";import"./associatedFeatureServiceUtils-DPPMcsJ0.js";import"./portalItemUtils-DES5WVek.js";import"./projectionUtils-BoGsVCso.js";import"./asyncUtils-SHsCTXd3.js";function w(e){return p(e,"notes")}function v(e){return p(e,"markup")}function C(e){return p(e,"route")}function p(e,r){return!(!e.layerType||e.layerType!=="ArcGISFeatureLayer")&&e.featureCollectionType===r}async function h(e,r,t){if(!r)return;const a=r.map(y=>U(y,t)),i=await Promise.allSettled(a);for(const y of i)y.status==="rejected"||y.value&&e.add(y.value)}const W={ArcGISDimensionLayer:"DimensionLayer",ArcGISFeatureLayer:"FeatureLayer",ArcGISImageServiceLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",ArcGISSceneServiceLayer:"SceneLayer",ArcGISTiledElevationServiceLayer:"ElevationLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",BuildingSceneLayer:"BuildingSceneLayer",CatalogLayer:"CatalogLayer",CSV:"CSVLayer",DefaultTileLayer:"TileLayer",GeoJSON:"GeoJSONLayer",GroupLayer:"GroupLayer",IntegratedMesh3DTilesLayer:"IntegratedMesh3DTilesLayer",Object3DTilesLayer:"UnsupportedLayer",IntegratedMeshLayer:"IntegratedMeshLayer",KML:"KMLLayer",LineOfSightLayer:"LineOfSightLayer",MediaLayer:"MediaLayer",OGCFeatureLayer:"OGCFeatureLayer",OrientedImageryLayer:"OrientedImageryLayer",PointCloudLayer:"PointCloudLayer",RasterDataLayer:"UnsupportedLayer",VectorTileLayer:"VectorTileLayer",ViewshedLayer:"ViewshedLayer",Voxel:"VoxelLayer",WCS:"WCSLayer",WFS:"WFSLayer",WMS:"WMSLayer",WebTiledLayer:"WebTileLayer"},F={ArcGISTiledElevationServiceLayer:"ElevationLayer",DefaultTileLayer:"ElevationLayer",RasterDataElevationLayer:"UnsupportedLayer"},V={ArcGISFeatureLayer:"FeatureLayer"},O={ArcGISImageServiceLayer:"UnsupportedLayer",ArcGISMapServiceLayer:"UnsupportedLayer",ArcGISSceneServiceLayer:"SceneLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",DefaultTileLayer:"TileLayer",OpenStreetMap:"OpenStreetMapLayer",VectorTileLayer:"VectorTileLayer",WCS:"UnsupportedLayer",WMS:"UnsupportedLayer",WebTiledLayer:"WebTileLayer"},I={ArcGISAnnotationLayer:"UnsupportedLayer",ArcGISDimensionLayer:"UnsupportedLayer",ArcGISFeatureLayer:"FeatureLayer",ArcGISImageServiceLayer:"ImageryLayer",ArcGISImageServiceVectorLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",ArcGISStreamLayer:"StreamLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",ArcGISVideoLayer:"VideoLayer",BingMapsAerial:"BingMapsLayer",BingMapsHybrid:"BingMapsLayer",BingMapsRoad:"BingMapsLayer",CatalogLayer:"CatalogLayer",CSV:"CSVLayer",DefaultTileLayer:"TileLayer",GeoJSON:"GeoJSONLayer",GeoRSS:"GeoRSSLayer",GroupLayer:"GroupLayer",KML:"KMLLayer",KnowledgeGraphLayer:"KnowledgeGraphLayer",MediaLayer:"MediaLayer",OGCFeatureLayer:"OGCFeatureLayer",OrientedImageryLayer:"OrientedImageryLayer",SubtypeGroupLayer:"SubtypeGroupLayer",VectorTileLayer:"VectorTileLayer",WCS:"WCSLayer",WFS:"WFSLayer",WMS:"WMSLayer",WebTiledLayer:"WebTileLayer"},m={ArcGISFeatureLayer:"FeatureLayer",SubtypeGroupTable:"SubtypeGroupLayer"},g={ArcGISImageServiceLayer:"ImageryLayer",ArcGISImageServiceVectorLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",BingMapsAerial:"BingMapsLayer",BingMapsHybrid:"BingMapsLayer",BingMapsRoad:"BingMapsLayer",DefaultTileLayer:"TileLayer",OpenStreetMap:"OpenStreetMapLayer",VectorTileLayer:"VectorTileLayer",WCS:"WCSLayer",WMS:"WMSLayer",WebTiledLayer:"WebTileLayer"},k={...I,LinkChartLayer:"LinkChartLayer"},B={...m},D={...g};async function U(e,r){return x(await E(e,r),e,r)}async function x(e,r,t){const a=new e;return a.read(r,t.context),a.type==="group"&&(r.layerType==="GroupLayer"?await R(a,r,t):u(r)?K(a,r,t.context):T(r)&&await J(a,r,t.context)),await b(a,t.context),a}async function E(e,r){const t=r.context,a=N(t);let i=e.layerType||e.type;!i&&r?.defaultLayerType&&(i=r.defaultLayerType);const y=a[i];let L=y?n[y]:n.UnknownLayer;if(u(e)){const l=t?.portal;if(e.itemId){const o=new d({id:e.itemId,portal:l});await o.load();const s=(await A(o,new M)).className||"UnknownLayer";L=n[s]}}else i==="ArcGISFeatureLayer"?w(e)||v(e)?L=n.MapNotesLayer:C(e)?L=n.RouteLayer:T(e)&&(L=n.GroupLayer):e.wmtsInfo?.url&&e.wmtsInfo.layerIdentifier?L=n.WMTSLayer:i==="WFS"&&e.wfsInfo?.version!=="2.0.0"&&(L=n.UnsupportedLayer);return L()}function T(e){return e.layerType!=="ArcGISFeatureLayer"||u(e)?!1:(e.featureCollection?.layers?.length??0)>1}function u(e){return e.type==="Feature Collection"}function N(e){let r;switch(e.origin){case"web-scene":switch(e.layerContainerType){case"basemap":r=O;break;case"ground":r=F;break;case"tables":r=V;break;default:r=W}break;case"link-chart":switch(e.layerContainerType){case"basemap":r=D;break;case"tables":r=B;break;default:r=k}break;default:switch(e.layerContainerType){case"basemap":r=g;break;case"tables":r=m;break;default:r=I}}return r}async function R(e,r,t){const a=new f,i=h(a,Array.isArray(r.layers)?r.layers:[],t);try{try{if(await i,e.type==="group")return e.layers.addMany(a),e}catch(y){e.destroy();for(const L of a)L.destroy();throw y}}catch(y){throw y}}function K(e,r,t){r.itemId&&(e.portalItem=new d({id:r.itemId,portal:t?.portal}),e.when(()=>{const a=i=>{const y=i.layerId;G(i,e,r,y,t);const L=r.featureCollection?.layers?.[y];L&&i.read(L,t)};e.layers?.forEach(a),e.tables?.forEach(a)}))}async function J(e,r,t){const a=n.FeatureLayer,i=await a(),y=r.featureCollection,L=y?.showLegend,l=y?.layers?.map((o,s)=>{const c=new i;c.read(o,t);const S={...t,ignoreDefaults:!0};return G(c,e,r,s,S),L!=null&&c.read({showLegend:L},S),c});e.layers.addMany(l??[])}function G(e,r,t,a,i){e.read({id:`${r.id}-sublayer-${a}`,visibility:t.visibleLayers?.includes(a)??!0},i)}export{R as populateGroupLayer,h as populateOperationalLayers};
