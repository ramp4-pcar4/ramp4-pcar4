import{aj as b,fD as yt,d8 as pt,cE as Si,g1 as wi,cO as xi,E as xt,M as Ei,j as bi,fM as Oi,jc as Me,mi as pe,i as Tt,q as a,v as m,x as Ri,ah as Ke,bu as Di,N as Ai}from"./main-6eEsl9OJ.js";import{c as He,n as ge,H as Ci,h as et,s as Pi,A as Li,C as $i,X as Mi}from"./mat4-DL3nuHcq.js";import{e as q,r as Ii}from"./mat4f64-q_b6UJoq.js";import{r as ti,E as Fi}from"./vec2-ChnYg_BJ.js";import{r as ji}from"./vec2f64-Cgb6qxNH.js";import{I as Ni,E as te,p as Ye,o as W,u as Ge,H as Ee,s as Z,c as ne,R as Et,P as Je,Z as bt,X as zi,g as _e,r as dt,_ as Ot,A as Rt,K as Ui}from"./vec32-BvrGiqaM.js";import{m as Dt,L as At,E as tt,a as Ie,x as Ct,z as Fe,s as Vi}from"./vec42-CKs01hkn.js";import{r as ut,n as Oe,a as Wi,s as Bi}from"./vec4f64-DPb6J-GU.js";import{b as ki,H as Hi,N as Gi,L as Ji,j as je}from"./Octree-CY-M5rpb.js";import{U as Pt,E as Xi,b as Yi}from"./sphere-DYiAGvsP.js";import{a as qi}from"./vectorStacks-DkJKKYqf.js";import{l as Zi}from"./ViewingMode-Chk7YAAL.js";import{o as ft}from"./projectionUtils-BoGsVCso.js";import{t as Qi}from"./orientedBoundingBox-BRF0r1hl.js";import{b2 as Ki,b3 as er,b4 as tr,as as ii,O as ri,at as si,au as E,c as re,ag as we,b5 as Lt,H as ir,d as rr,e as St,w as wt,I as sr,ad as mt,a2 as nr,M as ar,ae as or,f as lr,aE as cr,Z as hr,o as pr,J as dr,af as ur,a9 as fr,D as Re,V as mr,W as vr,aH as $t,b6 as gr,ap as Mt,aq as _r,ar as It,ak as Ne,am as yr,an as Tr,ao as Sr,al as wr,b7 as xr,b8 as Ft,b9 as Er,ba as br,bb as jt,aw as ee,av as Or,ai as me,aC as ni,aN as Rr,aO as Dr,bc as Nt,p as Ar,a as Cr}from"./OutputColorHighlightOID.glsl-BRMxJ4Ru.js";import{m as Pr,p as ze,M as qe,V as Q,O as zt}from"./plane-BqH4Rk0w.js";import{t as Lr}from"./basicInterfaces-CZwQPxTp.js";import{s as $r,n as Mr,t as Ir}from"./BufferView-r56Foetm.js";import{E as Fr,e as d}from"./VertexAttribute-BfkzOMLV.js";import{M as jr,h as it,v as ai,B as Nr}from"./lineSegment-C4u8B-fp.js";import{O as zr}from"./InterleavedLayout-BZ1aEhNI.js";import{n as oi,u as be,i as Ur,S as Vr,s as Ut,e as Wr}from"./ShaderOutput-Bdd80V3g.js";import{_ as Br}from"./preload-helper-B76NpbEU.js";import{R as Vt}from"./enums-UBzvFP7O.js";import{B as Ue,g as rt,c as Wt}from"./renderState-D2jq0MiL.js";import{m as kr}from"./computeTranslationToOriginAndRotation-CkTKVcK_.js";import{b as Hr,t as li}from"./dehydratedFeatureUtils-DwO6J-ZF.js";import{n as Gr,e as Jr}from"./ElevationInfo-Dh54MbB6.js";import{u as Xr}from"./hydratedFeatures-D7uyoV5q.js";import{n as h,t as Yr}from"./glsl-Cj7KC756.js";import"./BindType-BBwFZqyN.js";import"./floatRGBA-BJ3lztEL.js";import"./Texture-Cg6gEanA.js";import{i as qr}from"./ShaderBuilder-Bp451WLi.js";var Bt,kt,Ht;(function(e){e[e.RasterImage=0]="RasterImage",e[e.Features=1]="Features"})(Bt||(Bt={})),function(e){e[e.MapLayer=0]="MapLayer",e[e.ViewLayer=1]="ViewLayer",e[e.Outline=2]="Outline",e[e.SnappingHint=3]="SnappingHint"}(kt||(kt={})),function(e){e[e.WithRasterImage=0]="WithRasterImage",e[e.WithoutRasterImage=1]="WithoutRasterImage"}(Ht||(Ht={}));var Xe;(function(e){e[e.ASYNC=0]="ASYNC",e[e.SYNC=1]="SYNC"})(Xe||(Xe={}));function Zr(e,t){return e==null&&(e=[]),e.push(t),e}function Qr(e,t){if(e==null)return null;const i=e.filter(r=>r!==t);return i.length===0?null:i}function Rn(e,t,i,r,s){Ve[0]=e.get(t,0),Ve[1]=e.get(t,1),Ve[2]=e.get(t,2),Ki(Ve,oe,3),i.set(s,0,oe[0]),r.set(s,0,oe[1]),i.set(s,1,oe[2]),r.set(s,1,oe[3]),i.set(s,2,oe[4]),r.set(s,2,oe[5])}const Ve=b(),oe=new Float32Array(6);let Kr=class{constructor(t={}){this.id=yt(),this._highlightIds=new Set,this._shaderTransformation=null,this._visible=!0,this.castShadow=t.castShadow??!0,this.usesVerticalDistanceToGround=t.usesVerticalDistanceToGround??!1,this.graphicUid=t.graphicUid,this.layerViewUid=t.layerViewUid,t.isElevationSource&&(this.lastValidElevationBB=new ci),this._geometries=t.geometries?Array.from(t.geometries):new Array}dispose(){this._geometries.length=0}get layer(){return this._layer}set layer(t){$r(this._layer==null||t==null,"Object3D can only be added to a single Layer"),this._layer=t}addGeometry(t){t.visible=this._visible,this._geometries.push(t);for(const i of this._highlightIds)t.addHighlight(i);this._emit("geometryAdded",{object:this,geometry:t}),this._highlightIds.size&&this._emit("highlightChanged",this),this._invalidateBoundingVolume()}removeGeometry(t){const i=this._geometries.splice(t,1)[0];if(i){for(const r of this._highlightIds)i.removeHighlight(r);this._emit("geometryRemoved",{object:this,geometry:i}),this._highlightIds.size&&this._emit("highlightChanged",this),this._invalidateBoundingVolume()}}removeAllGeometries(){for(;this._geometries.length>0;)this.removeGeometry(0)}geometryVertexAttributeUpdated(t,i,r=!1){this._emit("attributesChanged",{object:this,geometry:t,attribute:i,sync:r}),Fr(i)&&this._invalidateBoundingVolume()}get visible(){return this._visible}set visible(t){if(this._visible!==t){this._visible=t;for(const i of this._geometries)i.visible=this._visible;this._emit("visibilityChanged",this)}}maskOccludee(){const t=new er;for(const i of this._geometries)i.occludees=Zr(i.occludees,t);return this._emit("occlusionChanged",this),t}removeOcclude(t){for(const i of this._geometries)i.occludees=Qr(i.occludees,t);this._emit("occlusionChanged",this)}highlight(t){const i=new tr(t);for(const r of this._geometries)r.addHighlight(i);return this._emit("highlightChanged",this),this._highlightIds.add(i),i}removeHighlight(t){this._highlightIds.delete(t);for(const i of this._geometries)i.removeHighlight(t);this._emit("highlightChanged",this)}removeStateID(t){t.channel===Lr.Highlight?this.removeHighlight(t):this.removeOcclude(t)}getCombinedStaticTransformation(t,i){return He(i,this.transformation,t.transformation)}getCombinedShaderTransformation(t,i=q()){return He(i,this.effectiveTransformation,t.transformation)}get boundingVolumeWorldSpace(){return this._bvWorldSpace||(this._bvWorldSpace=this._bvWorldSpace||new Gt,this._validateBoundingVolume(this._bvWorldSpace,De.WorldSpace)),this._bvWorldSpace}get boundingVolumeObjectSpace(){return this._bvObjectSpace||(this._bvObjectSpace=this._bvObjectSpace||new Gt,this._validateBoundingVolume(this._bvObjectSpace,De.ObjectSpace)),this._bvObjectSpace}_validateBoundingVolume(t,i){const r=i===De.ObjectSpace;for(const s of this._geometries){const n=s.boundingInfo;n&&es(n,t,r?s.transformation:this.getCombinedShaderTransformation(s))}Ni(Pt(t.bounds),t.min,t.max,.5);for(const s of this._geometries){const n=s.boundingInfo;if(n==null)continue;const o=r?s.transformation:this.getCombinedShaderTransformation(s),l=Pr(o);te(Jt,n.center,o);const c=Ye(Jt,Pt(t.bounds)),p=n.radius*l;t.bounds[3]=Math.max(t.bounds[3],c+p)}}_invalidateBoundingVolume(){const t=this._bvWorldSpace?.bounds;this._bvObjectSpace=this._bvWorldSpace=void 0,this.layer&&t&&this.layer.notifyObjectBBChanged(this,t)}_emit(t,i){this.layer?.events.emit(t,i)}get geometries(){return this._geometries}get transformation(){return this._transformation??Ii}set transformation(t){this._transformation=ge(this._transformation??q(),t),this._invalidateBoundingVolume(),this._emit("transformationChanged",this)}get shaderTransformation(){return this._shaderTransformation}set shaderTransformation(t){this._shaderTransformation=t?ge(this._shaderTransformation??q(),t):null,this._invalidateBoundingVolume(),this._emit("shaderTransformationChanged",this)}get effectiveTransformation(){return this.shaderTransformation??this.transformation}get test(){}};class ci{constructor(){this.min=pt(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this.max=pt(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE)}isEmpty(){return this.max[0]<this.min[0]&&this.max[1]<this.min[1]&&this.max[2]<this.min[2]}}let Gt=class extends ci{constructor(){super(...arguments),this.bounds=Xi()}};function es(e,t,i){const r=e.bbMin,s=e.bbMax;if(Ci(i)){const n=W(ts,i[12],i[13],i[14]);Ge(G,r,n),Ge(Y,s,n);for(let o=0;o<3;++o)t.min[o]=Math.min(t.min[o],G[o]),t.max[o]=Math.max(t.max[o],Y[o])}else if(te(G,r,i),Ee(r,s))for(let n=0;n<3;++n)t.min[n]=Math.min(t.min[n],G[n]),t.max[n]=Math.max(t.max[n],G[n]);else{te(Y,s,i);for(let n=0;n<3;++n)t.min[n]=Math.min(t.min[n],G[n],Y[n]),t.max[n]=Math.max(t.max[n],G[n],Y[n]);for(let n=0;n<3;++n){Z(G,r),Z(Y,s),G[n]=s[n],Y[n]=r[n],te(G,G,i),te(Y,Y,i);for(let o=0;o<3;++o)t.min[o]=Math.min(t.min[o],G[o],Y[o]),t.max[o]=Math.max(t.max[o],G[o],Y[o])}}}const ts=b(),G=b(),Y=b(),Jt=b();var De;(function(e){e[e.WorldSpace=0]="WorldSpace",e[e.ObjectSpace=1]="ObjectSpace"})(De||(De={}));const is=["layerObjectAdded","layerObjectRemoved","layerObjectsAdded","layerObjectsRemoved","transformationChanged","shaderTransformationChanged","visibilityChanged","occlusionChanged","highlightChanged","geometryAdded","geometryRemoved","attributesChanged"];let rs=class{constructor(t,i,r=""){this.stage=t,this.apiLayerViewUid=r,this.id=yt(),this.events=new Si,this.visible=!0,this.sliceable=!1,this._objectsAdded=new Array,this._handles=new wi,this._objects=new Map,this._pickable=!0,this.visible=i?.visible??!0,this._pickable=i?.pickable??!0,this.updatePolicy=i?.updatePolicy??Xe.ASYNC,t.addLayer(this);for(const s of is)this._handles.add(this.events.on(s,n=>t.handleEvent(s,n)))}destroy(){this._handles.size&&(this._handles.destroy(),this.stage.removeLayer(this),this.invalidateSpatialQueryAccelerator())}get objects(){return this._objects}getObject(t){return xi(this._objects.get(t))}set pickable(t){this._pickable=t}get pickable(){return this._pickable&&this.visible}add(t){this._objects.set(t.id,t),t.layer=this,this.events.emit("layerObjectAdded",t),this._octree!=null&&this._objectsAdded.push(t)}remove(t){this._objects.delete(t.id)&&(this.events.emit("layerObjectRemoved",t),t.layer=null,this._octree!=null&&(xt(this._objectsAdded,t)||this._octree.remove([t])))}addMany(t){for(const i of t)this._objects.set(i.id,i),i.layer=this;this.events.emit("layerObjectsAdded",t),this._octree!=null&&this._objectsAdded.push(...t)}removeMany(t){const i=new Array;for(const r of t)this._objects.delete(r.id)&&i.push(r);if(i.length!==0&&(this.events.emit("layerObjectsRemoved",i),i.forEach(r=>r.layer=null),this._octree!=null)){for(let r=0;r<i.length;)xt(this._objectsAdded,i[r])?(i[r]=i[i.length-1],i.length-=1):++r;this._octree.remove(i)}}sync(){this.updatePolicy!==Xe.SYNC&&this.stage.syncLayer(this.id)}notifyObjectBBChanged(t,i){this._octree==null||this._objectsAdded.includes(t)||this._octree.update(t,i)}getSpatialQueryAccelerator(){return this._octree==null&&this._objects.size>50?(this._octree=new ki(t=>t.boundingVolumeWorldSpace.bounds),this._octree.add(this._objects.values())):this._octree!=null&&this._objectsAdded.length>0&&(this._octree.add(this._objectsAdded),this._objectsAdded.length=0),this._octree}invalidateSpatialQueryAccelerator(){this._octree=Ei(this._octree),this._objectsAdded.length=0}get test(){}},ss=class{constructor(t,i){this.vec3=t,this.id=i}};function Xt(e,t,i,r){return new ss(pt(e,t,i),r)}function ns(e,t,i){return 2*Math.atan(Math.sqrt(t*t+i*i)*Math.tan(.5*e)/t)}function as(e,t,i){return 2*Math.atan(Math.sqrt(t*t+i*i)*Math.tan(.5*e)/i)}function os(e,t,i){return 2*Math.atan(t*Math.tan(.5*e)/Math.sqrt(t*t+i*i))}function ls(e,t,i){return 2*Math.atan(i*Math.tan(.5*e)/Math.sqrt(t*t+i*i))}var Yt,x;(function(e){e[e.Default=0]="Default",e[e.Screenshot=1]="Screenshot",e[e.ObjectAndLayerID=2]="ObjectAndLayerID"})(Yt||(Yt={})),function(e){e[e.TOP=0]="TOP",e[e.RIGHT=1]="RIGHT",e[e.BOTTOM=2]="BOTTOM",e[e.LEFT=3]="LEFT"}(x||(x={}));var vt;let f=vt=class extends bi{constructor(e){super(e),this._ray=Yi(),this._viewport=ut(0,0,1,1),this._padding=ut(0,0,0,0),this._fov=55/180*Math.PI,this._nearFar=ji(1,1e3),this._viewDirty=!0,this._viewMatrix=q(),this._viewProjectionDirty=!0,this._viewProjectionMatrix=q(),this._viewInverseTransposeMatrixDirty=!0,this._viewInverseTransposeMatrix=q(),this._frustumDirty=!0,this._frustum=Hi(),this._fullViewport=Oe(),this._pixelRatio=1,this.row=0,this.column=0,this._rows=1,this._columns=1,this._center=b(),this._up=b(),this.relativeElevation=0}get pixelRatio(){return this._pixelRatio}set pixelRatio(e){this._pixelRatio=e>0?e:1}get rows(){return this._rows}set rows(e){this._rows=Math.max(1,e)}get columns(){return this._columns}set columns(e){this._columns=Math.max(1,e)}get eye(){return this._ray.origin}set eye(e){this._compareAndSetView(e,this._ray.origin)}get center(){return this._center}set center(e){this._compareAndSetView(e,this._center,"_center")}get ray(){return ne(this._ray.direction,this.center,this.eye),this._ray}get up(){return this._up}set up(e){this._compareAndSetView(e,this._up,"_up")}get viewMatrix(){return this._ensureViewClean(),this._viewMatrix}set viewMatrix(e){ge(this._viewMatrix,e),this.notifyChange("_viewMatrix"),this._viewDirty=!1,this._viewInverseTransposeMatrixDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0}get viewForward(){return this._ensureViewClean(),W(b(),-this._viewMatrix[2],-this._viewMatrix[6],-this._viewMatrix[10])}get viewUp(){return this._ensureViewClean(),W(b(),this._viewMatrix[1],this._viewMatrix[5],this._viewMatrix[9])}get viewRight(){return this._ensureViewClean(),W(b(),this._viewMatrix[0],this._viewMatrix[4],this._viewMatrix[8])}get nearFar(){return this._nearFar}get near(){return this._nearFar[0]}set near(e){this._nearFar[0]!==e&&(this._nearFar[0]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_nearFar"))}get far(){return this._nearFar[1]}set far(e){this._nearFar[1]!==e&&(this._nearFar[1]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_nearFar"))}get viewport(){return this._viewport}set viewport(e){this.x=e[0],this.y=e[1],this.width=e[2],this.height=e[3]}get screenViewport(){if(this.pixelRatio===1)return this._viewport;const e=Dt(Oe(),this._viewport,1/this.pixelRatio),t=this._get("screenViewport");return t&&At(e,t)?t:e}get screenPadding(){if(this.pixelRatio===1)return this._padding;const e=Dt(Oe(),this._padding,1/this.pixelRatio),t=this._get("screenPadding");return t&&At(e,t)?t:e}get x(){return this._viewport[0]}set x(e){e+=this._padding[x.LEFT],this._viewport[0]!==e&&(this._viewport[0]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get y(){return this._viewport[1]}set y(e){e+=this._padding[x.BOTTOM],this._viewport[1]!==e&&(this._viewport[1]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get width(){return this._viewport[2]}set width(e){this._viewport[2]!==e&&(this._viewport[2]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get height(){return this._viewport[3]}set height(e){this._viewport[3]!==e&&(this._viewport[3]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get fullWidth(){return this._viewport[2]+this._padding[x.RIGHT]+this._padding[x.LEFT]}set fullWidth(e){this.width=e-(this._padding[x.RIGHT]+this._padding[x.LEFT])}get fullHeight(){return this._viewport[3]+this._padding[x.TOP]+this._padding[x.BOTTOM]}set fullHeight(e){this.height=e-(this._padding[x.TOP]+this._padding[x.BOTTOM])}get fullViewport(){return this._fullViewport[0]=this._viewport[0]-this._padding[x.LEFT],this._fullViewport[1]=this._viewport[1]-this._padding[x.BOTTOM],this._fullViewport[2]=this.fullWidth,this._fullViewport[3]=this.fullHeight,this._fullViewport}get _aspect(){return this.width/this.height}get padding(){return this._padding}set padding(e){tt(this._padding,e)||(this._viewport[0]+=e[x.LEFT]-this._padding[x.LEFT],this._viewport[1]+=e[x.BOTTOM]-this._padding[x.BOTTOM],this._viewport[2]-=e[x.RIGHT]+e[x.LEFT]-(this._padding[x.RIGHT]+this._padding[x.LEFT]),this._viewport[3]-=e[x.TOP]+e[x.BOTTOM]-(this._padding[x.TOP]+this._padding[x.BOTTOM]),Ie(this._padding,e),this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_padding"),this.notifyChange("_viewport"))}get viewProjectionMatrix(){return this._viewProjectionDirty&&(He(this._viewProjectionMatrix,this.projectionMatrix,this.viewMatrix),this._viewProjectionDirty=!1),this._viewProjectionMatrix}get projectionMatrix(){return this._projectionMatrixInternal}get inverseProjectionMatrix(){return et(q(),this.projectionMatrix)||this._get("inverseProjectionMatrix")||q()}get fov(){return this._fov}set fov(e){this._fov=e,this._viewProjectionDirty=!0,this._frustumDirty=!0}get fovX(){return os(this._fov,this.width,this.height)}set fovX(e){this._fov=ns(e,this.width,this.height),this._viewProjectionDirty=!0,this._frustumDirty=!0}get fovY(){return ls(this._fov,this.width,this.height)}set fovY(e){this._fov=as(e,this.width,this.height),this._viewProjectionDirty=!0,this._frustumDirty=!0}get distance(){return Ye(this.center,this.eye)}get frustum(){return this._recomputeFrustum(),this._frustum}get viewInverseTransposeMatrix(){return(this._viewInverseTransposeMatrixDirty||this._viewDirty)&&(et(this._viewInverseTransposeMatrix,this.viewMatrix),Pi(this._viewInverseTransposeMatrix,this._viewInverseTransposeMatrix),this._viewInverseTransposeMatrixDirty=!1),this._viewInverseTransposeMatrix}depthNDCToWorld(e){const{near:t,far:i}=this;return 2*t*i/(i+t-e*(i-t))}get perRenderPixelRatio(){return Math.tan(this.fovX/2)/(this.width/2)}get perScreenPixelRatio(){return this.perRenderPixelRatio*this.pixelRatio}get aboveGround(){return this.relativeElevation!=null&&this.relativeElevation>=0}get _projectionMatrixInternal(){const e=this.width,t=this.height,i=this.near*Math.tan(this.fovY/2)*2,r=i*this._aspect,s=i/this.rows,n=r/this.columns,o=-r/2+this.column*n,l=o+n,c=-i/2+this.row*s,p=c+s,v=Li(q(),o*(1+2*this._padding[x.LEFT]/e),l*(1+2*this._padding[x.RIGHT]/e),c*(1+2*this._padding[x.BOTTOM]/t),p*(1+2*this._padding[x.TOP]/t),this.near,this.far),T=this._get("projectionMatrix");return T&&$i(T,v)?T:v}copyFrom(e){Z(this._ray.origin,e.eye),this.center=e.center,this.up=e.up,Ie(this._viewport,e.viewport),this.notifyChange("_viewport"),Ie(this._padding,e.padding),this.notifyChange("_padding"),ti(this._nearFar,e.nearFar),this.notifyChange("_nearFar"),this._fov=e.fov,this.row=e.row,this.column=e.column,this.rows=e.rows,this.columns=e.columns,this.relativeElevation=e.relativeElevation;const t=e;return this._viewDirty=t._viewDirty,this._viewDirty||(ge(this._viewMatrix,e.viewMatrix),this.notifyChange("_viewMatrix")),this._viewProjectionDirty=!0,this._frustumDirty=t._frustumDirty,this._frustumDirty||(Gi(this._frustum,e.frustum),this._frustumDirty=!1),t._viewInverseTransposeMatrixDirty?this._viewInverseTransposeMatrixDirty=!0:(ge(this._viewInverseTransposeMatrix,e.viewInverseTransposeMatrix),this._viewInverseTransposeMatrixDirty=!1),Ie(this._fullViewport,e.fullViewport),this.pixelRatio=e.pixelRatio,this}copyViewFrom(e){this.eye=e.eye,this.center=e.center,this.up=e.up,this.fov=e.fov}clone(){return new vt().copyFrom(this)}equals(e){return Ee(this.eye,e.eye)&&Ee(this.center,e.center)&&Ee(this.up,e.up)&&tt(this._viewport,e.viewport)&&tt(this._padding,e.padding)&&Fi(this.nearFar,e.nearFar)&&this._fov===e.fov&&this.pixelRatio===e.pixelRatio&&this.relativeElevation===e.relativeElevation&&this.row===e.row&&this.column===e.column&&this.rows===e.rows&&this.columns===e.columns}almostEquals(e){const t=Math.max(1,1/this.pixelRatio,1/e.pixelRatio);if(Math.abs(e.fov-this._fov)>=.001||Ct(e.screenPadding,this.screenPadding)>=t||Ct(this.screenViewport,e.screenViewport)>=t||this.row!==e.row||this.column!==e.column||this.rows!==e.rows||this.columns!==e.columns)return!1;Et(j,e.eye,e.center),Et(st,this.eye,this.center);const i=Je(j,st),r=bt(j),s=bt(st),n=5e-4;return i*i>=(1-1e-10)*r*s&&zi(e.eye,this.eye)<Math.max(r,s)*n*n}computeRenderPixelSizeAt(e){return this.computeRenderPixelSizeAtDist(this._viewDirectionDistance(e))}computeRenderPixelSizeAtDist(e){return e*this.perRenderPixelRatio}computeScreenPixelSizeAt(e){return this.computeScreenPixelSizeAtDist(this._viewDirectionDistance(e))}_viewDirectionDistance(e){return Math.abs(qi(this.viewForward,ne(j,e,this.eye)))}computeScreenPixelSizeAtDist(e){return e*this.perScreenPixelRatio}computeDistanceFromRadius(e,t){return e/Math.tan(Math.min(this.fovX,this.fovY)/(2*(t||1)))}getScreenCenter(e=Oi()){return e[0]=(this.padding[x.LEFT]+this.width/2)/this.pixelRatio,e[1]=(this.padding[x.TOP]+this.height/2)/this.pixelRatio,e}getRenderCenter(e,t=.5,i=.5){return e[0]=this.padding[x.LEFT]+this.width*t,e[1]=this.padding[x.BOTTOM]+this.height*i,e[2]=.5,e}setGLViewport(e){const t=this.viewport,i=this.padding;e.setViewport(t[0]-i[3],t[1]-i[2],t[2]+i[1]+i[3],t[3]+i[0]+i[2])}applyProjection(e,t){e!==g&&Z(g,e),g[3]=1,Fe(g,g,this.projectionMatrix);const i=Math.abs(g[3]);_e(g,g,1/i);const r=this.fullViewport;t[0]=Me(0,r[0]+r[2],.5+.5*g[0]),t[1]=Me(0,r[1]+r[3],.5+.5*g[1]),t[2]=.5*(g[2]+1),t[3]=i}unapplyProjection(e,t){const i=this.fullViewport;g[0]=(e[0]/(i[0]+i[2])*2-1)*e[3],g[1]=(e[1]/(i[1]+i[3])*2-1)*e[3],g[2]=(2*e[2]-1)*e[3],g[3]=e[3],this.inverseProjectionMatrix!=null&&(Fe(g,g,this.inverseProjectionMatrix),t[0]=g[0],t[1]=g[1],t[2]=g[2])}projectToScreen(e,t){return this.projectToRenderScreen(e,nt),this.renderToScreen(nt,t),t}projectToRenderScreen(e,t){if(g[0]=e[0],g[1]=e[1],g[2]=e[2],g[3]=1,Fe(g,g,this.viewProjectionMatrix),g[3]===0)return null;const i=g;_e(i,i,1/Math.abs(g[3]));const r=this.fullViewport,s=Me(0,r[0]+r[2],.5+.5*i[0]),n=Me(0,r[1]+r[3],.5+.5*i[1]);return"x"in t?(t.x=s,t.y=n):(t[0]=s,t[1]=n,t.length>2&&(t[2]=.5*(i[2]+1))),t}unprojectFromScreen(e,t){return this.unprojectFromRenderScreen(this.screenToRender(e,nt),t)}unprojectFromRenderScreen(e,t){if(He(We,this.projectionMatrix,this.viewMatrix),!et(We,We))return null;const i=this.fullViewport;return g[0]=2*(e[0]-i[0])/i[2]-1,g[1]=2*(e[1]-i[1])/i[3]-1,g[2]=2*e[2]-1,g[3]=1,Fe(g,g,We),g[3]===0?null:(t[0]=g[0]/g[3],t[1]=g[1]/g[3],t[2]=g[2]/g[3],t)}constrainWindowSize(e,t,i,r){const s=e*this.pixelRatio,n=t*this.pixelRatio,o=Math.max(s-i/2,0),l=Math.max(this.fullHeight-n-r/2,0),c=-Math.min(s-i/2,0),p=-Math.min(this.fullHeight-n-r/2,0),v=i-c- -Math.min(this.fullWidth-s-i/2,0),T=r-p- -Math.min(n-r/2,0);return[Math.round(o),Math.round(l),Math.round(v),Math.round(T)]}computeUp(e){e===Zi.Global?this._computeUpGlobal():this._computeUpLocal()}screenToRender(e,t){const i=e[0]*this.pixelRatio,r=this.fullHeight-e[1]*this.pixelRatio;return t[0]=i,t[1]=r,t}renderToScreen(e,t){const i=e[0]/this.pixelRatio,r=(this.fullHeight-e[1])/this.pixelRatio;t[0]=i,t[1]=r}_computeUpGlobal(){ne(j,this.center,this.eye);const e=dt(this.center);e<1?(W(this._up,0,0,1),this._markViewDirty(),this.notifyChange("_up")):Math.abs(Je(j,this.center))>.9999*dt(j)*e||(Ot(this._up,j,this.center),Ot(this._up,this._up,j),Rt(this._up,this._up),this.notifyChange("_up"),this._markViewDirty())}_computeUpLocal(){Ui(j,this.eye,this.center),Math.abs(j[2])<=.9999&&(_e(j,j,j[2]),W(this._up,-j[0],-j[1],1-j[2]),Rt(this._up,this._up),this.notifyChange("_up"),this._markViewDirty())}_compareAndSetView(e,t,i=""){typeof e[0]=="number"&&isFinite(e[0])&&typeof e[1]=="number"&&isFinite(e[1])&&typeof e[2]=="number"&&isFinite(e[2])?Ee(e,t)||(Z(t,e),this._markViewDirty(),i.length&&this.notifyChange(i)):Tt.getLogger("esri.views.3d.webgl-engine.lib.RenderCamera").warn("RenderCamera vector contains invalid number, ignoring value")}_markViewDirty(){this._viewDirty=!0,this._frustumDirty=!0,this._viewProjectionDirty=!0}_recomputeFrustum(){this._frustumDirty&&(Ji(this.viewMatrix,this.projectionMatrix,this._frustum),this._frustumDirty=!1)}_ensureViewClean(){this._viewDirty&&(Mi(this._viewMatrix,this.eye,this.center,this.up),this.notifyChange("_viewMatrix"),this._viewDirty=!1,this._viewInverseTransposeMatrixDirty=!0)}};a([m()],f.prototype,"_viewport",void 0),a([m()],f.prototype,"_padding",void 0),a([m()],f.prototype,"_fov",void 0),a([m()],f.prototype,"_nearFar",void 0),a([m()],f.prototype,"_viewDirty",void 0),a([m()],f.prototype,"_viewMatrix",void 0),a([m()],f.prototype,"_pixelRatio",void 0),a([m()],f.prototype,"pixelRatio",null),a([m()],f.prototype,"row",void 0),a([m()],f.prototype,"column",void 0),a([m()],f.prototype,"_rows",void 0),a([m()],f.prototype,"rows",null),a([m()],f.prototype,"_columns",void 0),a([m()],f.prototype,"columns",null),a([m()],f.prototype,"eye",null),a([m()],f.prototype,"center",null),a([m()],f.prototype,"_center",void 0),a([m()],f.prototype,"up",null),a([m()],f.prototype,"_up",void 0),a([m()],f.prototype,"viewMatrix",null),a([m({readOnly:!0})],f.prototype,"viewForward",null),a([m({readOnly:!0})],f.prototype,"viewUp",null),a([m({readOnly:!0})],f.prototype,"viewRight",null),a([m({readOnly:!0})],f.prototype,"nearFar",null),a([m()],f.prototype,"near",null),a([m()],f.prototype,"far",null),a([m()],f.prototype,"viewport",null),a([m({readOnly:!0})],f.prototype,"screenViewport",null),a([m({readOnly:!0})],f.prototype,"screenPadding",null),a([m()],f.prototype,"x",null),a([m()],f.prototype,"y",null),a([m()],f.prototype,"width",null),a([m()],f.prototype,"height",null),a([m()],f.prototype,"fullWidth",null),a([m()],f.prototype,"fullHeight",null),a([m({readOnly:!0})],f.prototype,"_aspect",null),a([m()],f.prototype,"padding",null),a([m({readOnly:!0})],f.prototype,"projectionMatrix",null),a([m({readOnly:!0})],f.prototype,"inverseProjectionMatrix",null),a([m()],f.prototype,"fov",null),a([m()],f.prototype,"fovX",null),a([m()],f.prototype,"fovY",null),a([m()],f.prototype,"viewInverseTransposeMatrix",null),a([m({readOnly:!0})],f.prototype,"_projectionMatrixInternal",null),a([m()],f.prototype,"relativeElevation",void 0),f=vt=a([Ri("esri.views.3d.webgl.RenderCamera")],f);const Ln=f,g=Oe(),We=q(),j=b(),st=b(),nt=pe();var de,Ae;(function(e){e[e.Draped=0]="Draped",e[e.Screen=1]="Screen",e[e.World=2]="World",e[e.COUNT=3]="COUNT"})(de||(de={})),function(e){e[e.Center=0]="Center",e[e.Tip=1]="Tip",e[e.COUNT=2]="COUNT"}(Ae||(Ae={}));let J=class extends ii{constructor(){super(...arguments),this.space=de.Screen,this.anchor=Ae.Center,this.occluder=!1,this.writeDepth=!1,this.hideOnShortSegments=!1,this.hasCap=!1,this.hasTip=!1,this.vvSize=!1,this.vvColor=!1,this.vvOpacity=!1,this.hasOccludees=!1,this.terrainDepthTest=!1,this.cullAboveTerrain=!1,this.textureCoordinateType=ri.None,this.emissionSource=si.None,this.discardInvisibleFragments=!0,this.occlusionPass=!1,this.hasVvInstancing=!0,this.hasSliceTranslatedView=!0,this.objectAndLayerIdColorInstanced=!1,this.overlayEnabled=!1,this.snowCover=!1}get draped(){return this.space===de.Draped}};a([E({count:de.COUNT})],J.prototype,"space",void 0),a([E({count:Ae.COUNT})],J.prototype,"anchor",void 0),a([E()],J.prototype,"occluder",void 0),a([E()],J.prototype,"writeDepth",void 0),a([E()],J.prototype,"hideOnShortSegments",void 0),a([E()],J.prototype,"hasCap",void 0),a([E()],J.prototype,"hasTip",void 0),a([E()],J.prototype,"vvSize",void 0),a([E()],J.prototype,"vvColor",void 0),a([E()],J.prototype,"vvOpacity",void 0),a([E()],J.prototype,"hasOccludees",void 0),a([E()],J.prototype,"terrainDepthTest",void 0),a([E()],J.prototype,"cullAboveTerrain",void 0);const qt=8;function cs(e,t){const{vertex:i,attributes:r}=e;i.uniforms.add(new re("intrinsicWidth",s=>s.width)),t.vvSize?(r.add(d.SIZEFEATUREATTRIBUTE,"float"),i.uniforms.add(new we("vvSizeMinSize",s=>s.vvSize.minSize),new we("vvSizeMaxSize",s=>s.vvSize.maxSize),new we("vvSizeOffset",s=>s.vvSize.offset),new we("vvSizeFactor",s=>s.vvSize.factor),new we("vvSizeFallback",s=>s.vvSize.fallback)),i.code.add(h`float getSize() {
if (isnan(sizeFeatureAttribute)) {
return vvSizeFallback.x;
}
return intrinsicWidth * clamp(vvSizeOffset + sizeFeatureAttribute * vvSizeFactor, vvSizeMinSize, vvSizeMaxSize).x;
}`)):(r.add(d.SIZE,"float"),i.code.add(h`float getSize(){
return intrinsicWidth * size;
}`)),t.vvOpacity?(r.add(d.OPACITYFEATUREATTRIBUTE,"float"),i.constants.add("vvOpacityNumber","int",8),i.uniforms.add(new Lt("vvOpacityValues",s=>s.vvOpacity.values,qt),new Lt("vvOpacityOpacities",s=>s.vvOpacity.opacityValues,qt),new re("vvOpacityFallback",s=>s.vvOpacity.fallback)),i.code.add(h`float interpolateOpacity(float value){
if (isnan(value)) {
return vvOpacityFallback;
}
if (value <= vvOpacityValues[0]) {
return vvOpacityOpacities[0];
}
for (int i = 1; i < vvOpacityNumber; ++i) {
if (vvOpacityValues[i] >= value) {
float f = (value - vvOpacityValues[i-1]) / (vvOpacityValues[i] - vvOpacityValues[i-1]);
return mix(vvOpacityOpacities[i-1], vvOpacityOpacities[i], f);
}
}
return vvOpacityOpacities[vvOpacityNumber - 1];
}
vec4 applyOpacity( vec4 color ){
return vec4(color.xyz, interpolateOpacity(opacityFeatureAttribute));
}`)):i.code.add(h`vec4 applyOpacity( vec4 color ){
return color;
}`),t.vvColor?(e.include(ir,t),r.add(d.COLORFEATUREATTRIBUTE,"float"),i.code.add(h`vec4 getColor(){
return applyOpacity(interpolateVVColor(colorFeatureAttribute));
}`)):(r.add(d.COLOR,"vec4"),i.code.add(h`vec4 getColor(){
return applyOpacity(color);
}`))}function hi(e){return e.pattern.map(t=>Math.round(t*e.pixelRatio))}function hs(e){if(e==null)return 1;const t=hi(e);return Math.floor(t.reduce((i,r)=>i+r))}function ps(e){return hi(e).reduce((t,i)=>Math.max(t,i))}function ds(e){return e==null?Wi:e.length===4?e:Vi(us,e[0],e[1],e[2],1)}const us=Oe();function fs(e,t){if(!t.stippleEnabled)return void e.fragment.code.add(h`float getStippleAlpha() { return 1.0; }
void discardByStippleAlpha(float stippleAlpha, float threshold) {}
vec4 blendStipple(vec4 color, float stippleAlpha) { return color; }`);const i=!(t.draped&&t.stipplePreferContinuous),{vertex:r,fragment:s}=e;s.include(Hr),t.draped||(rr(r,t),r.uniforms.add(new St("worldToScreenPerDistanceRatio",({camera:n})=>1/n.perScreenPixelRatio)).code.add(h`float computeWorldToScreenRatio(vec3 segmentCenter) {
float segmentDistanceToCamera = length(segmentCenter - cameraPosition);
return worldToScreenPerDistanceRatio / segmentDistanceToCamera;
}`)),e.varyings.add("vStippleDistance","float"),e.varyings.add("vStippleDistanceLimits","vec2"),e.varyings.add("vStipplePatternStretch","float"),r.code.add(h`
    float discretizeWorldToScreenRatio(float worldToScreenRatio) {
      float step = ${h.float(vs)};

      float discreteWorldToScreenRatio = log(worldToScreenRatio);
      discreteWorldToScreenRatio = ceil(discreteWorldToScreenRatio / step) * step;
      discreteWorldToScreenRatio = exp(discreteWorldToScreenRatio);
      return discreteWorldToScreenRatio;
    }
  `),r.code.add(h`vec2 computeStippleDistanceLimits(float startPseudoScreen, float segmentLengthPseudoScreen, float segmentLengthScreen, float patternLength) {`),r.code.add(h`
    if (segmentLengthPseudoScreen >= ${i?"patternLength":"1e4"}) {
  `),wt(r),r.code.add(h`float repetitions = segmentLengthScreen / (patternLength * pixelRatio);
float flooredRepetitions = max(1.0, floor(repetitions + 0.5));
float segmentLengthScreenRounded = flooredRepetitions * patternLength;
float stretch = repetitions / flooredRepetitions;
vStipplePatternStretch = max(0.75, stretch);
return vec2(0.0, segmentLengthScreenRounded);
}
return vec2(startPseudoScreen, startPseudoScreen + segmentLengthPseudoScreen);
}`),s.uniforms.add(new sr("stipplePatternTexture",n=>n.stippleTexture),new re("stipplePatternSDFNormalizer",n=>ms(n.stipplePattern)),new re("stipplePatternPixelSizeInv",n=>1/pi(n))),t.stippleOffColorEnabled&&s.uniforms.add(new mt("stippleOffColor",n=>ds(n.stippleOffColor))),s.code.add(h`float getStippleSDF(out bool isClamped) {
float stippleDistanceClamped = clamp(vStippleDistance, vStippleDistanceLimits.x, vStippleDistanceLimits.y);
vec2 aaCorrectedLimits = vStippleDistanceLimits + vec2(1.0, -1.0) / gl_FragCoord.w;
isClamped = vStippleDistance < aaCorrectedLimits.x || vStippleDistance > aaCorrectedLimits.y;
float u = stippleDistanceClamped * gl_FragCoord.w * stipplePatternPixelSizeInv * vLineSizeInv;
u = fract(u);
float encodedSDF = rgbaTofloat(texture(stipplePatternTexture, vec2(u, 0.5)));
float sdf = (encodedSDF * 2.0 - 1.0) * stipplePatternSDFNormalizer;
return (sdf - 0.5) * vStipplePatternStretch + 0.5;
}
float getStippleSDF() {
bool ignored;
return getStippleSDF(ignored);
}
float getStippleAlpha() {
bool isClamped;
float stippleSDF = getStippleSDF(isClamped);
float antiAliasedResult = clamp(stippleSDF * vLineWidth + 0.5, 0.0, 1.0);
return isClamped ? floor(antiAliasedResult + 0.5) : antiAliasedResult;
}`),s.code.add(h`
    void discardByStippleAlpha(float stippleAlpha, float threshold) {
     ${Yr(!t.stippleOffColorEnabled,"if (stippleAlpha < threshold) { discard; }")}
    }

    vec4 blendStipple(vec4 color, float stippleAlpha) {
      return ${t.stippleOffColorEnabled?"mix(color, stippleOffColor, stippleAlpha)":"vec4(color.rgb, color.a * stippleAlpha)"};
    }
  `)}function ms(e){return e?(Math.floor(.5*(ps(e)-1))+.5)/e.pixelRatio:1}function pi(e){const t=e.stipplePattern;return t?hs(e.stipplePattern)/t.pixelRatio:1}const vs=.4,di=64,gs=di/2,_s=gs/5,ys=di/_s,Mn=.25;function Ts(e,t){const i=e.vertex;wt(i),i.uniforms.get("markerScale")==null&&i.constants.add("markerScale","float",1),i.constants.add("markerSizePerLineWidth","float",ys).code.add(h`float getLineWidth() {
return max(getSize(), 1.0) * pixelRatio;
}
float getScreenMarkerSize() {
return markerSizePerLineWidth * markerScale * getLineWidth();
}`),t.space===de.World&&(i.constants.add("maxSegmentLengthFraction","float",.45),i.uniforms.add(new St("perRenderPixelRatio",r=>r.camera.perRenderPixelRatio)),i.code.add(h`bool areWorldMarkersHidden(vec4 pos, vec4 other) {
vec3 midPoint = mix(pos.xyz, other.xyz, 0.5);
float distanceToCamera = length(midPoint);
float screenToWorldRatio = perRenderPixelRatio * distanceToCamera * 0.5;
float worldMarkerSize = getScreenMarkerSize() * screenToWorldRatio;
float segmentLen = length(pos.xyz - other.xyz);
return worldMarkerSize > maxSegmentLengthFraction * segmentLen;
}
float getWorldMarkerSize(vec4 pos) {
float distanceToCamera = length(pos.xyz);
float screenToWorldRatio = perRenderPixelRatio * distanceToCamera * 0.5;
return getScreenMarkerSize() * screenToWorldRatio;
}`))}var ue;(function(e){e[e.BUTT=0]="BUTT",e[e.SQUARE=1]="SQUARE",e[e.ROUND=2]="ROUND",e[e.COUNT=3]="COUNT"})(ue||(ue={}));let P=class extends ii{constructor(){super(...arguments),this.capType=ue.BUTT,this.hasPolygonOffset=!1,this.writeDepth=!1,this.draped=!1,this.stippleEnabled=!1,this.stippleOffColorEnabled=!1,this.stipplePreferContinuous=!0,this.roundJoins=!1,this.applyMarkerOffset=!1,this.vvSize=!1,this.vvColor=!1,this.vvOpacity=!1,this.falloffEnabled=!1,this.innerColorEnabled=!1,this.hasOccludees=!1,this.occluder=!1,this.terrainDepthTest=!1,this.cullAboveTerrain=!1,this.wireframe=!1,this.discardInvisibleFragments=!1,this.objectAndLayerIdColorInstanced=!1,this.textureCoordinateType=ri.None,this.emissionSource=si.None,this.occlusionPass=!1,this.hasVvInstancing=!0,this.hasSliceTranslatedView=!0,this.overlayEnabled=!1,this.snowCover=!1}};a([E({count:ue.COUNT})],P.prototype,"capType",void 0),a([E()],P.prototype,"hasPolygonOffset",void 0),a([E()],P.prototype,"writeDepth",void 0),a([E()],P.prototype,"draped",void 0),a([E()],P.prototype,"stippleEnabled",void 0),a([E()],P.prototype,"stippleOffColorEnabled",void 0),a([E()],P.prototype,"stipplePreferContinuous",void 0),a([E()],P.prototype,"roundJoins",void 0),a([E()],P.prototype,"applyMarkerOffset",void 0),a([E()],P.prototype,"vvSize",void 0),a([E()],P.prototype,"vvColor",void 0),a([E()],P.prototype,"vvOpacity",void 0),a([E()],P.prototype,"falloffEnabled",void 0),a([E()],P.prototype,"innerColorEnabled",void 0),a([E()],P.prototype,"hasOccludees",void 0),a([E()],P.prototype,"occluder",void 0),a([E()],P.prototype,"terrainDepthTest",void 0),a([E()],P.prototype,"cullAboveTerrain",void 0),a([E()],P.prototype,"wireframe",void 0),a([E()],P.prototype,"discardInvisibleFragments",void 0),a([E()],P.prototype,"objectAndLayerIdColorInstanced",void 0);const Ce=1;function ui(e){const t=new qr,{attributes:i,varyings:r,vertex:s,fragment:n}=t,{applyMarkerOffset:o,draped:l,output:c,capType:p,stippleEnabled:v,falloffEnabled:T,roundJoins:_,wireframe:y,innerColorEnabled:w}=e;n.include(nr),t.include(cs,e),t.include(fs,e),t.include(ar,e),t.include(or,e);const A=o&&!l;A&&(s.uniforms.add(new re("markerScale",u=>u.markerScale)),t.include(Ts,{space:de.World})),lr(s,e),s.uniforms.add(new cr("inverseProjectionMatrix",u=>u.camera.inverseProjectionMatrix),new hr("nearFar",u=>u.camera.nearFar),new re("miterLimit",u=>u.join!=="miter"?0:u.miterLimit),new pr("viewport",u=>u.camera.fullViewport)),s.constants.add("LARGE_HALF_FLOAT","float",65500),i.add(d.POSITION,"vec3"),i.add(d.PREVIOUSDELTA,"vec4"),i.add(d.NEXTDELTA,"vec4"),i.add(d.LINEPARAMETERS,"vec2"),i.add(d.U0,"float"),r.add("vColor","vec4"),r.add("vpos","vec3",{invariant:!0}),r.add("vLineDistance","float"),r.add("vLineWidth","float");const O=v;O&&r.add("vLineSizeInv","float");const D=p===ue.ROUND,H=v&&D,S=T||H;S&&r.add("vLineDistanceNorm","float"),D&&(r.add("vSegmentSDF","float"),r.add("vReverseSegmentSDF","float")),s.code.add(h`vec2 perpendicular(vec2 v) {
return vec2(v.y, -v.x);
}
float interp(float ncp, vec4 a, vec4 b) {
return (-ncp - a.z) / (b.z - a.z);
}
vec2 rotate(vec2 v, float a) {
float s = sin(a);
float c = cos(a);
mat2 m = mat2(c, -s, s, c);
return m * v;
}`),s.code.add(h`vec4 projectAndScale(vec4 pos) {
vec4 posNdc = proj * pos;
posNdc.xy *= viewport.zw / posNdc.w;
return posNdc;
}`),s.code.add(h`void clipAndTransform(inout vec4 pos, inout vec4 prev, inout vec4 next, in bool isStartVertex) {
float vnp = nearFar[0] * 0.99;
if(pos.z > -nearFar[0]) {
if (!isStartVertex) {
if(prev.z < -nearFar[0]) {
pos = mix(prev, pos, interp(vnp, prev, pos));
next = pos;
} else {
pos = vec4(0.0, 0.0, 0.0, 1.0);
}
} else {
if(next.z < -nearFar[0]) {
pos = mix(pos, next, interp(vnp, pos, next));
prev = pos;
} else {
pos = vec4(0.0, 0.0, 0.0, 1.0);
}
}
} else {
if (prev.z > -nearFar[0]) {
prev = mix(pos, prev, interp(vnp, pos, prev));
}
if (next.z > -nearFar[0]) {
next = mix(next, pos, interp(vnp, next, pos));
}
}
forwardViewPosDepth(pos.xyz);
pos = projectAndScale(pos);
next = projectAndScale(next);
prev = projectAndScale(prev);
}`),wt(s),s.constants.add("aaWidth","float",v?0:1).main.add(h`
    // unpack values from vertex type
    bool isStartVertex = abs(abs(lineParameters.y)-3.0) == 1.0;
    vec3 prevPosition = position + previousDelta.xyz * previousDelta.w;
    vec3 nextPosition = position + nextDelta.xyz * nextDelta.w;

    float coverage = 1.0;

    // Check for special value of lineParameters.y which is used by the Renderer when graphics are removed before the
    // VBO is recompacted. If this is the case, then we just project outside of clip space.
    if (lineParameters.y == 0.0) {
      // Project out of clip space
      gl_Position = vec4(1e038, 1e038, 1e038, 1.0);
    }
    else {
      bool isJoin = abs(lineParameters.y) < 3.0;
      float lineSize = getSize();

      if (lineSize < 1.0) {
        coverage = lineSize; // convert sub-pixel coverage to alpha
        lineSize = 1.0;
      }
      lineSize += aaWidth;

      float lineWidth = lineSize * pixelRatio;
      vLineWidth = lineWidth;
      ${O?h`vLineSizeInv = 1.0 / lineSize;`:""}

      vec4 pos  = view * vec4(position, 1.0);
      vec4 prev = view * vec4(prevPosition, 1.0);
      vec4 next = view * vec4(nextPosition, 1.0);
  `),A&&s.main.add(h`vec4 other = isStartVertex ? next : prev;
bool markersHidden = areWorldMarkersHidden(pos, other);
if(!isJoin && !markersHidden) {
pos.xyz += normalize(other.xyz - pos.xyz) * getWorldMarkerSize(pos) * 0.5;
}`),s.main.add(h`clipAndTransform(pos, prev, next, isStartVertex);
vec2 left = (pos.xy - prev.xy);
vec2 right = (next.xy - pos.xy);
float leftLen = length(left);
float rightLen = length(right);`),(v||D)&&s.main.add(h`
      float isEndVertex = float(!isStartVertex);
      vec2 segmentOrigin = mix(pos.xy, prev.xy, isEndVertex);
      vec2 segment = mix(right, left, isEndVertex);
      ${D?h`vec2 segmentEnd = mix(next.xy, pos.xy, isEndVertex);`:""}
    `),s.main.add(h`left = (leftLen > 0.001) ? left/leftLen : vec2(0.0, 0.0);
right = (rightLen > 0.001) ? right/rightLen : vec2(0.0, 0.0);
vec2 capDisplacementDir = vec2(0, 0);
vec2 joinDisplacementDir = vec2(0, 0);
float displacementLen = lineWidth;
if (isJoin) {
bool isOutside = (left.x * right.y - left.y * right.x) * lineParameters.y > 0.0;
joinDisplacementDir = normalize(left + right);
joinDisplacementDir = perpendicular(joinDisplacementDir);
if (leftLen > 0.001 && rightLen > 0.001) {
float nDotSeg = dot(joinDisplacementDir, left);
displacementLen /= length(nDotSeg * left - joinDisplacementDir);
if (!isOutside) {
displacementLen = min(displacementLen, min(leftLen, rightLen)/abs(nDotSeg));
}
}
float subdivisionFactor = lineParameters.x;
if (isOutside && (displacementLen > miterLimit * lineWidth)) {`),_?s.main.add(h`
        vec2 startDir = leftLen < 0.001 ? right : left;
        startDir = perpendicular(startDir);

        vec2 endDir = rightLen < 0.001 ? left : right;
        endDir = perpendicular(endDir);

        float factor = ${v?h`min(1.0, subdivisionFactor * ${h.float((Ce+2)/(Ce+1))})`:h`subdivisionFactor`};

        float rotationAngle = acos(clamp(dot(startDir, endDir), -1.0, 1.0));
        joinDisplacementDir = rotate(startDir, -sign(lineParameters.y) * factor * rotationAngle);
      `):s.main.add(h`if (leftLen < 0.001) {
joinDisplacementDir = right;
}
else if (rightLen < 0.001) {
joinDisplacementDir = left;
}
else {
joinDisplacementDir = (isStartVertex || subdivisionFactor > 0.0) ? right : left;
}
joinDisplacementDir = perpendicular(joinDisplacementDir);`);const $=p!==ue.BUTT;return s.main.add(h`
        displacementLen = lineWidth;
      }
    } else {
      // CAP handling ---------------------------------------------------
      joinDisplacementDir = isStartVertex ? right : left;
      joinDisplacementDir = perpendicular(joinDisplacementDir);

      ${$?h`capDisplacementDir = isStartVertex ? -right : left;`:""}
    }
  `),s.main.add(h`
    // Displacement (in pixels) caused by join/or cap
    vec2 dpos = joinDisplacementDir * sign(lineParameters.y) * displacementLen + capDisplacementDir * displacementLen;
    float lineDistNorm = sign(lineParameters.y) * pos.w;

    vLineDistance =  lineWidth * lineDistNorm;
    ${S?h`vLineDistanceNorm = lineDistNorm;`:""}

    pos.xy += dpos;
  `),D&&s.main.add(h`vec2 segmentDir = normalize(segment);
vSegmentSDF = (isJoin && isStartVertex) ? LARGE_HALF_FLOAT : (dot(pos.xy - segmentOrigin, segmentDir) * pos.w) ;
vReverseSegmentSDF = (isJoin && !isStartVertex) ? LARGE_HALF_FLOAT : (dot(pos.xy - segmentEnd, -segmentDir) * pos.w);`),v&&(l?s.uniforms.add(new St("worldToScreenRatio",u=>1/u.screenToPCSRatio)):s.main.add(h`vec3 segmentCenter = mix((nextPosition + position) * 0.5, (position + prevPosition) * 0.5, isEndVertex);
float worldToScreenRatio = computeWorldToScreenRatio(segmentCenter);`),s.main.add(h`float segmentLengthScreenDouble = length(segment);
float segmentLengthScreen = segmentLengthScreenDouble * 0.5;
float discreteWorldToScreenRatio = discretizeWorldToScreenRatio(worldToScreenRatio);
float segmentLengthRender = length(mix(nextPosition - position, position - prevPosition, isEndVertex));
vStipplePatternStretch = worldToScreenRatio / discreteWorldToScreenRatio;`),l?s.main.add(h`float segmentLengthPseudoScreen = segmentLengthScreen / pixelRatio * discreteWorldToScreenRatio / worldToScreenRatio;
float startPseudoScreen = u0 * discreteWorldToScreenRatio - mix(0.0, segmentLengthPseudoScreen, isEndVertex);`):s.main.add(h`float startPseudoScreen = mix(u0, u0 - segmentLengthRender, isEndVertex) * discreteWorldToScreenRatio;
float segmentLengthPseudoScreen = segmentLengthRender * discreteWorldToScreenRatio;`),s.uniforms.add(new re("stipplePatternPixelSize",u=>pi(u))),s.main.add(h`float patternLength = lineSize * stipplePatternPixelSize;
vStippleDistanceLimits = computeStippleDistanceLimits(startPseudoScreen, segmentLengthPseudoScreen, segmentLengthScreen, patternLength);
vStippleDistance = mix(vStippleDistanceLimits.x, vStippleDistanceLimits.y, isEndVertex);
if (segmentLengthScreenDouble >= 0.001) {
vec2 stippleDisplacement = pos.xy - segmentOrigin;
float stippleDisplacementFactor = dot(segment, stippleDisplacement) / (segmentLengthScreenDouble * segmentLengthScreenDouble);
vStippleDistance += (stippleDisplacementFactor - isEndVertex) * (vStippleDistanceLimits.y - vStippleDistanceLimits.x);
}
vStippleDistanceLimits *= pos.w;
vStippleDistance *= pos.w;
vStippleDistanceLimits = isJoin ?
vStippleDistanceLimits :
isStartVertex ?
vec2(-1e34, vStippleDistanceLimits.y) :
vec2(vStippleDistanceLimits.x, 1e34);`)),s.main.add(h`
      // Convert back into NDC
      pos.xy = (pos.xy / viewport.zw) * pos.w;

      vColor = getColor();
      vColor.a *= coverage;

      ${y&&!l?"pos.z -= 0.001 * pos.w;":""}

      // transform final position to camera space for slicing
      vpos = (inverseProjectionMatrix * pos).xyz;
      gl_Position = pos;
      forwardObjectAndLayerIdColor();
    }`),t.fragment.include(dr,e),t.include(ur,e),n.include(fr),n.main.add(h`discardBySlice(vpos);
discardByTerrainDepth();`),y?n.main.add(h`vec4 finalColor = vec4(1.0, 0.0, 1.0, 1.0);`):(D&&n.main.add(h`
        float sdf = min(vSegmentSDF, vReverseSegmentSDF);
        vec2 fragmentPosition = vec2(
          min(sdf, 0.0),
          vLineDistance
        ) * gl_FragCoord.w;

        float fragmentRadius = length(fragmentPosition);
        float fragmentCapSDF = (fragmentRadius - vLineWidth) * 0.5; // Divide by 2 to transform from double pixel scale
        float capCoverage = clamp(0.5 - fragmentCapSDF, 0.0, 1.0);

        if (capCoverage < ${h.float(Re)}) {
          discard;
        }
      `),H?n.main.add(h`
      vec2 stipplePosition = vec2(
        min(getStippleSDF() * 2.0 - 1.0, 0.0),
        vLineDistanceNorm * gl_FragCoord.w
      );
      float stippleRadius = length(stipplePosition * vLineWidth);
      float stippleCapSDF = (stippleRadius - vLineWidth) * 0.5; // Divide by 2 to transform from double pixel scale
      float stippleCoverage = clamp(0.5 - stippleCapSDF, 0.0, 1.0);
      float stippleAlpha = step(${h.float(Re)}, stippleCoverage);
      `):n.main.add(h`float stippleAlpha = getStippleAlpha();`),c!==oi.ObjectAndLayerIdColor&&n.main.add(h`discardByStippleAlpha(stippleAlpha, ${h.float(Re)});`),n.uniforms.add(new mt("intrinsicColor",u=>u.color)),n.main.add(h`vec4 color = intrinsicColor * vColor;`),w&&(n.uniforms.add(new mt("innerColor",u=>u.innerColor??u.color),new re("innerWidth",(u,N)=>u.innerWidth*N.camera.pixelRatio)),n.main.add(h`float distToInner = abs(vLineDistance * gl_FragCoord.w) - innerWidth;
float innerAA = clamp(0.5 - distToInner, 0.0, 1.0);
float innerAlpha = innerColor.a + color.a * (1.0 - innerColor.a);
color = mix(color, vec4(innerColor.rgb, innerAlpha), innerAA);`)),n.main.add(h`vec4 finalColor = blendStipple(color, stippleAlpha);`),T&&(n.uniforms.add(new re("falloff",u=>u.falloff)),n.main.add(h`finalColor.a *= pow(max(0.0, 1.0 - abs(vLineDistanceNorm * gl_FragCoord.w)), falloff);`)),v||n.main.add(h`float featherStartDistance = max(vLineWidth - 2.0, 0.0);
float value = abs(vLineDistance) * gl_FragCoord.w;
float feather = (value - featherStartDistance) / (vLineWidth - featherStartDistance);
finalColor.a *= 1.0 - clamp(feather, 0.0, 1.0);`)),n.main.add(h`outputColorHighlightOID(finalColor, vpos, finalColor.rgb);`),t}const Ss=Object.freeze(Object.defineProperty({__proto__:null,build:ui,ribbonlineNumRoundJoinSubdivisions:Ce},Symbol.toStringTag,{value:"Module"}));class ws extends mr{constructor(t,i){super(t,i,new vr(Ss,()=>Br(()=>Promise.resolve().then(()=>Hs),void 0,import.meta.url)),fi),this.primitiveType=i.wireframe?Vt.LINES:Vt.TRIANGLE_STRIP}_makePipelineState(t,i){const{oitPass:r,output:s,hasOccludees:n,hasPolygonOffset:o}=t,l=r===$t.NONE,c=r===$t.FrontFace;return Ue({blending:be(s)?Sr(r):null,depthTest:{func:Tr(r)},depthWrite:yr(t),drawBuffers:Ne(s,wr(r,s)),colorWrite:rt,stencilWrite:n?It:null,stencilTest:n?i?Mt:_r:null,polygonOffset:l||c?o?Zt:null:gr})}initializePipeline(t){if(t.occluder){const i=t.hasPolygonOffset?Zt:null,{output:r,hasOccludees:s}=t;this._occluderPipelineTransparent=Ue({blending:Wt,polygonOffset:i,depthTest:Ft,depthWrite:null,colorWrite:rt,stencilWrite:null,stencilTest:s?xr:null,drawBuffers:Ne(r)}),this._occluderPipelineOpaque=Ue({blending:Wt,polygonOffset:i,depthTest:s?Ft:jt,depthWrite:null,colorWrite:rt,stencilWrite:s?br:null,stencilTest:s?Er:null,drawBuffers:Ne(r)}),this._occluderPipelineMaskWrite=Ue({blending:null,polygonOffset:i,depthTest:jt,depthWrite:null,colorWrite:null,stencilWrite:s?It:null,stencilTest:s?Mt:null,drawBuffers:Ne(r)})}return this._occludeePipeline=this._makePipelineState(t,!0),this._makePipelineState(t,!1)}getPipeline(t,i){if(t)return this._occludeePipeline;switch(i){case ee.TRANSPARENT_OCCLUDER_MATERIAL:return this._occluderPipelineTransparent??super.getPipeline();case ee.OCCLUDER_MATERIAL:return this._occluderPipelineOpaque??super.getPipeline();default:return this._occluderPipelineMaskWrite??super.getPipeline()}}}const Zt={factor:0,units:-4},fi=new Map([[d.POSITION,0],[d.PREVIOUSDELTA,1],[d.NEXTDELTA,2],[d.U0,3],[d.LINEPARAMETERS,4],[d.COLOR,5],[d.COLORFEATUREATTRIBUTE,5],[d.SIZE,6],[d.SIZEFEATUREATTRIBUTE,6],[d.OPACITYFEATUREATTRIBUTE,7],[d.OLIDCOLOR,8]]);var k;(function(e){e[e.LEFT_JOIN_START=-2]="LEFT_JOIN_START",e[e.LEFT_JOIN_END=-1]="LEFT_JOIN_END",e[e.LEFT_CAP_START=-4]="LEFT_CAP_START",e[e.LEFT_CAP_END=-5]="LEFT_CAP_END",e[e.RIGHT_JOIN_START=2]="RIGHT_JOIN_START",e[e.RIGHT_JOIN_END=1]="RIGHT_JOIN_END",e[e.RIGHT_CAP_START=4]="RIGHT_CAP_START",e[e.RIGHT_CAP_END=5]="RIGHT_CAP_END"})(k||(k={}));class xs extends Or{constructor(t){super(t,bs),this._configuration=new P,this.vertexAttributeLocations=fi,this.produces=new Map([[ee.OPAQUE_MATERIAL,i=>Ur(i)||be(i)&&this.parameters.renderOccluded===me.OccludeAndTransparentStencil],[ee.OPAQUE_MATERIAL_WITHOUT_NORMALS,i=>Vr(i)],[ee.OCCLUDER_MATERIAL,i=>Ut(i)&&this.parameters.renderOccluded===me.OccludeAndTransparentStencil],[ee.TRANSPARENT_OCCLUDER_MATERIAL,i=>Ut(i)&&this.parameters.renderOccluded===me.OccludeAndTransparentStencil],[ee.TRANSPARENT_MATERIAL,i=>be(i)&&this.parameters.writeDepth&&this.parameters.renderOccluded!==me.OccludeAndTransparentStencil],[ee.TRANSPARENT_MATERIAL_WITHOUT_DEPTH,i=>be(i)&&!this.parameters.writeDepth&&this.parameters.renderOccluded!==me.OccludeAndTransparentStencil],[ee.DRAPED_MATERIAL,i=>Wr(i)]])}getConfiguration(t,i){super.getConfiguration(t,i,this._configuration),this._configuration.oitPass=i.oitPass,this._configuration.draped=i.slot===ee.DRAPED_MATERIAL;const r=this.parameters.stipplePattern!=null&&t!==oi.Highlight;return this._configuration.stippleEnabled=r,this._configuration.stippleOffColorEnabled=r&&this.parameters.stippleOffColor!=null,this._configuration.stipplePreferContinuous=r&&this.parameters.stipplePreferContinuous,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.roundJoins=this.parameters.join==="round",this._configuration.capType=this.parameters.cap,this._configuration.applyMarkerOffset=this.parameters.markerParameters!=null&&Rs(this.parameters.markerParameters),this._configuration.hasPolygonOffset=this.parameters.hasPolygonOffset,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.vvSize=!!this.parameters.vvSize,this._configuration.vvColor=!!this.parameters.vvColor,this._configuration.vvOpacity=!!this.parameters.vvOpacity,this._configuration.innerColorEnabled=this.parameters.innerWidth>0&&this.parameters.innerColor!=null,this._configuration.falloffEnabled=this.parameters.falloff>0,this._configuration.hasOccludees=i.hasOccludees,this._configuration.occluder=this.parameters.renderOccluded===me.OccludeAndTransparentStencil,this._configuration.terrainDepthTest=i.terrainDepthTest&&be(t),this._configuration.cullAboveTerrain=i.cullAboveTerrain,this._configuration.wireframe=this.parameters.wireframe,this._configuration}get visible(){return this.parameters.color[3]>=Re||this.parameters.stipplePattern!=null&&(this.parameters.stippleOffColor?.[3]??0)>Re}intersectDraped({attributes:t,screenToWorldRatio:i},r,s,n,o){if(!r.options.selectionMode)return;const l=t.get(d.SIZE);let c=this.parameters.width;if(this.parameters.vvSize){const O=t.get(d.SIZEFEATUREATTRIBUTE).data[0];Number.isNaN(O)?c*=this.parameters.vvSize.fallback[0]:c*=Ke(this.parameters.vvSize.offset[0]+O*this.parameters.vvSize.factor[0],this.parameters.vvSize.minSize[0],this.parameters.vvSize.maxSize[0])}else l&&(c*=l.data[0]);const p=s[0],v=s[1],T=(c/2+4)*i;let _=Number.MAX_VALUE,y=0;const w=t.get(d.POSITION).data,A=gt(this.parameters,t)?w.length-2:w.length-5;for(let O=0;O<A;O+=3){const D=w[O],H=w[O+1],S=(O+3)%w.length,$=p-D,u=v-H,N=w[S]-D,C=w[S+1]-H,fe=Ke((N*$+C*u)/(N*N+C*C),0,1),se=N*fe-$,ye=C*fe-u,z=se*se+ye*ye;z<_&&(_=z,y=O/3)}_<T*T&&n(o.distance,o.normal,y)}intersect(t,i,r,s,n,o){const{options:l,camera:c,rayBegin:p,rayEnd:v}=r;if(!l.selectionMode||!t.visible||!c)return;if(!Mr(i))return void Tt.getLogger("esri.views.3d.webgl-engine.materials.RibbonLineMaterial").error("intersection assumes a translation-only matrix");const T=t.attributes,_=T.get(d.POSITION).data;let y=this.parameters.width;if(this.parameters.vvSize){const S=T.get(d.SIZEFEATUREATTRIBUTE).data[0];Number.isNaN(S)||(y*=Ke(this.parameters.vvSize.offset[0]+S*this.parameters.vvSize.factor[0],this.parameters.vvSize.minSize[0],this.parameters.vvSize.maxSize[0]))}else T.has(d.SIZE)&&(y*=T.get(d.SIZE).data[0]);const w=Ds;ti(w,r.point);const A=y*c.pixelRatio/2+4*c.pixelRatio;W(xe[0],w[0]-A,w[1]+A,0),W(xe[1],w[0]+A,w[1]+A,0),W(xe[2],w[0]+A,w[1]-A,0),W(xe[3],w[0]-A,w[1]-A,0);for(let S=0;S<4;S++)if(!c.unprojectFromRenderScreen(xe[S],ie[S]))return;ze(c.eye,ie[0],ie[1],ot),ze(c.eye,ie[1],ie[2],lt),ze(c.eye,ie[2],ie[3],ct),ze(c.eye,ie[3],ie[0],ht);let O=Number.MAX_VALUE,D=0;const H=gt(this.parameters,T)?_.length-2:_.length-5;for(let S=0;S<H;S+=3){U[0]=_[S]+i[12],U[1]=_[S+1]+i[13],U[2]=_[S+2]+i[14];const $=(S+3)%_.length;if(V[0]=_[$]+i[12],V[1]=_[$+1]+i[13],V[2]=_[$+2]+i[14],Q(ot,U)<0&&Q(ot,V)<0||Q(lt,U)<0&&Q(lt,V)<0||Q(ct,U)<0&&Q(ct,V)<0||Q(ht,U)<0&&Q(ht,V)<0)continue;if(c.projectToRenderScreen(U,ce),c.projectToRenderScreen(V,he),ce[2]<0&&he[2]>0){ne(K,U,V);const N=c.frustum,C=-Q(N[je.NEAR],U)/Je(K,zt(N[je.NEAR]));_e(K,K,C),Ge(U,U,K),c.projectToRenderScreen(U,ce)}else if(ce[2]>0&&he[2]<0){ne(K,V,U);const N=c.frustum,C=-Q(N[je.NEAR],V)/Je(K,zt(N[je.NEAR]));_e(K,K,C),Ge(V,V,K),c.projectToRenderScreen(V,he)}else if(ce[2]<0&&he[2]<0)continue;ce[2]=0,he[2]=0;const u=jr(it(ce,he,ei),w);u<O&&(O=u,Z(Qt,U),Z(Kt,V),D=S/3)}if(O<A*A){let S=Number.MAX_VALUE;if(Nr(it(Qt,Kt,ei),it(p,v,As),le)){ne(le,le,p);const $=dt(le);_e(le,le,1/$),S=$/Ye(p,v)}o(S,le,D)}}get _layout(){const t=zr().vec3f(d.POSITION).vec4f16(d.PREVIOUSDELTA).vec4f16(d.NEXTDELTA).f32(d.U0).vec2f16(d.LINEPARAMETERS);return this.parameters.vvColor?t.f32(d.COLORFEATUREATTRIBUTE):t.vec4u8(d.COLOR,{glNormalized:!0}),this.parameters.vvSize?t.f32(d.SIZEFEATUREATTRIBUTE):t.f32(d.SIZE),this.parameters.vvOpacity&&t.f32(d.OPACITYFEATUREATTRIBUTE),ni()&&t.vec4u8(d.OLIDCOLOR),t}createBufferWriter(){return new Os(this._layout,this.parameters)}createGLMaterial(t){return new Es(t)}validateParameters(t){t.join!=="miter"&&(t.miterLimit=0),t.markerParameters!=null&&(t.markerScale=t.markerParameters.width/t.width)}}class Es extends Dr{constructor(){super(...arguments),this._stipplePattern=null}dispose(){super.dispose(),this._stippleTextures.release(this._stipplePattern),this._stipplePattern=null}beginSlot(t){const i=this._material.parameters.stipplePattern;return this._stipplePattern!==i&&(this._material.setParameters({stippleTexture:this._stippleTextures.swap(i,this._stipplePattern)}),this._stipplePattern=i),this.getTechnique(ws,t)}}class bs extends Rr{constructor(){super(...arguments),this.width=0,this.color=Bi,this.join="miter",this.cap=ue.BUTT,this.miterLimit=5,this.writeDepth=!0,this.hasPolygonOffset=!1,this.stippleTexture=null,this.stipplePreferContinuous=!0,this.markerParameters=null,this.markerScale=1,this.hasSlicePlane=!1,this.vvFastUpdate=!1,this.isClosed=!1,this.falloff=0,this.innerWidth=0,this.wireframe=!1}get transparent(){return this.color[3]<1||this.stipplePattern!=null&&(this.stippleOffColor?.[3]??0)<1}}class Os{constructor(t,i){this.vertexBufferLayout=t,this._parameters=i;const r=i.stipplePattern?1:0;switch(this._parameters.join){case"miter":case"bevel":this.numJoinSubdivisions=r;break;case"round":this.numJoinSubdivisions=Ce+r}}_isClosed(t){return gt(this._parameters,t)}allocate(t){return this.vertexBufferLayout.createBuffer(t)}elementCount(t){const r=t.get(d.POSITION).indices.length/2+1,s=this._isClosed(t);let n=s?2:4;return n+=((s?r:r-1)-(s?0:1))*(2*this.numJoinSubdivisions+4),n+=2,this._parameters.wireframe&&(n=2+4*(n-2)),n}write(t,i,r,s,n,o){const l=r.get(d.POSITION),c=l.indices,p=l.data.length/3,v=r.get(d.DISTANCETOSTART)?.data;c&&c.length!==2*(p-1)&&console.warn("RibbonLineMaterial does not support indices");const T=(this.vertexBufferLayout.fields.has(d.SIZEFEATUREATTRIBUTE)?r.get(d.SIZEFEATUREATTRIBUTE)?.data[0]:r.get(d.SIZE)?.data[0])??1;let _=[1,1,1,1],y=0;const w=this.vertexBufferLayout.fields.has(d.COLORFEATUREATTRIBUTE);w?y=r.get(d.COLORFEATUREATTRIBUTE).data[0]:r.has(d.COLOR)&&(_=r.get(d.COLOR).data);const A=this.vertexBufferLayout.fields.has(d.OPACITYFEATUREATTRIBUTE),O=A?r.get(d.OPACITYFEATUREATTRIBUTE).data[0]:0,D=new Float32Array(n.buffer),H=Ir(n.buffer),S=new Uint8Array(n.buffer),$=this.vertexBufferLayout.stride/4;let u=o*$;const N=u;let C=0;const fe=v?(M,X,ae)=>C=v[ae]:(M,X,ae)=>C+=Ye(M,X),se=D.BYTES_PER_ELEMENT/H.BYTES_PER_ELEMENT,ye=4/se,z=(M,X,ae,Se,Le,yi,Ti)=>{D[u++]=X[0],D[u++]=X[1],D[u++]=X[2],Nt(M,X,H,u*se),u+=ye,Nt(ae,X,H,u*se),u+=ye,D[u++]=Ti;let Qe=u*se;if(H[Qe++]=Se,H[Qe++]=Le,u=Math.ceil(Qe/se),w)D[u]=y;else{const B=Math.min(4*yi,_.length-4),$e=4*u;S[$e]=255*_[B],S[$e+1]=255*_[B+1],S[$e+2]=255*_[B+2],S[$e+3]=255*_[B+3]}if(u++,D[u++]=T,A&&(D[u++]=O),ni()){let B=4*u;s?(S[B++]=s[0],S[B++]=s[1],S[B++]=s[2],S[B++]=s[3]):(S[B++]=0,S[B++]=0,S[B++]=0,S[B++]=0),u=Math.ceil(.25*B)}};u+=$,W(R,l.data[0],l.data[1],l.data[2]),t&&te(R,R,t);const Pe=this._isClosed(r);if(Pe){const M=l.data.length-3;W(F,l.data[M],l.data[M+1],l.data[M+2]),t&&te(F,F,t)}else W(L,l.data[3],l.data[4],l.data[5]),t&&te(L,L,t),z(R,R,L,1,k.LEFT_CAP_START,0,0),z(R,R,L,1,k.RIGHT_CAP_START,0,0),Z(F,R),Z(R,L);const Ze=Pe?0:1,Te=Pe?p:p-1;for(let M=Ze;M<Te;M++){const X=(M+1)%p*3;W(L,l.data[X],l.data[X+1],l.data[X+2]),t&&te(L,L,t),fe(F,R,M),z(F,R,L,0,k.LEFT_JOIN_END,M,C),z(F,R,L,0,k.RIGHT_JOIN_END,M,C);const ae=this.numJoinSubdivisions;for(let Se=0;Se<ae;++Se){const Le=(Se+1)/(ae+1);z(F,R,L,Le,k.LEFT_JOIN_END,M,C),z(F,R,L,Le,k.RIGHT_JOIN_END,M,C)}z(F,R,L,1,k.LEFT_JOIN_START,M,C),z(F,R,L,1,k.RIGHT_JOIN_START,M,C),Z(F,R),Z(R,L)}return Pe?(W(L,l.data[3],l.data[4],l.data[5]),t&&te(L,L,t),C=fe(F,R,Te),z(F,R,L,0,k.LEFT_JOIN_END,Ze,C),z(F,R,L,0,k.RIGHT_JOIN_END,Ze,C)):(C=fe(F,R,Te),z(F,R,R,0,k.LEFT_CAP_END,Te,C),z(F,R,R,0,k.RIGHT_CAP_END,Te,C)),at(D,N+$,D,N,$),u=at(D,u-$,D,u,$),this._parameters.wireframe&&this._addWireframeVertices(n,N,u,$),null}_addWireframeVertices(t,i,r,s){const n=new Float32Array(t.buffer,r*Float32Array.BYTES_PER_ELEMENT),o=new Float32Array(t.buffer,i*Float32Array.BYTES_PER_ELEMENT,r-i);let l=0;const c=p=>l=at(o,p,n,l,s);for(let p=0;p<o.length-1;p+=2*s)c(p),c(p+2*s),c(p+1*s),c(p+2*s),c(p+1*s),c(p+3*s)}}function at(e,t,i,r,s){for(let n=0;n<s;n++)i[r++]=e[t++];return r}function gt(e,t){return e.isClosed?t.get(d.POSITION).indices.length>2:!1}function Rs(e){return e.anchor===Ae.Tip&&e.hideOnShortSegments&&e.placement==="begin-end"&&e.worldSpace}const U=b(),V=b(),K=b(),le=b(),Ds=b(),ce=pe(),he=pe(),Qt=b(),Kt=b(),ei=ai(),As=ai(),F=b(),R=b(),L=b(),xe=[pe(),pe(),pe(),pe()],ie=[b(),b(),b(),b()],ot=qe(),lt=qe(),ct=qe(),ht=qe();let Fn=class{constructor(t){this._originSR=t,this._rootOriginId="root/"+yt(),this._origins=new Map,this._objects=new Map,this._gridSize=5e5}getOrigin(t){const i=this._origins.get(this._rootOriginId);if(i==null){const v=Xt(t[0]+Math.random()-.5,t[1]+Math.random()-.5,t[2]+Math.random()-.5,this._rootOriginId);return this._origins.set(this._rootOriginId,v),v}const r=this._gridSize,s=Math.round(t[0]/r),n=Math.round(t[1]/r),o=Math.round(t[2]/r),l=`${s}/${n}/${o}`;let c=this._origins.get(l);const p=.5*r;if(ne(I,t,i.vec3),I[0]=Math.abs(I[0]),I[1]=Math.abs(I[1]),I[2]=Math.abs(I[2]),I[0]<p&&I[1]<p&&I[2]<p){if(c){const v=Math.max(...I);if(ne(I,t,c.vec3),I[0]=Math.abs(I[0]),I[1]=Math.abs(I[1]),I[2]=Math.abs(I[2]),Math.max(...I)<v)return c}return i}return c||(c=Xt(s*r,n*r,o*r,l),this._origins.set(l,c)),c}_drawOriginBox(t,i=ut(1,1,0,1)){const r=window.view,s=r.stage,n=i.toString();if(!this._objects.has(n)){this._material=new xs({width:2,color:i});const y=new rs(s,{pickable:!1}),w=new Kr({castShadow:!1});y.add(w),this._objects.set(n,w)}const o=this._objects.get(n),l=[0,1,5,4,0,2,1,7,6,2,0,1,3,7,5,4,6,2,0],c=l.length,p=new Array(3*c),v=new Array,T=.5*this._gridSize;for(let y=0;y<c;y++)p[3*y]=t[0]+(1&l[y]?T:-T),p[3*y+1]=t[1]+(2&l[y]?T:-T),p[3*y+2]=t[2]+(4&l[y]?T:-T),y>0&&v.push(y-1,y);ft(p,this._originSR,0,p,r.renderSpatialReference,0,c);const _=new Ar(this._material,[[d.POSITION,new Qi(p,v,3,!0)]],null,Cr.Line);o.addGeometry(_)}get test(){}};const I=b();class Nn{constructor(t,i=null,r=0){this.array=t,this.spatialReference=i,this.offset=r}}function mi(e){return"array"in e}function Be(e,t,i="ground"){if(li(t))return e.getElevation(t.x,t.y,t.z||0,t.spatialReference,i);if(mi(t)){let r=t.offset;return e.getElevation(t.array[r++],t.array[r++],t.array[r]||0,t.spatialReference??e.spatialReference,i)}return e.getElevation(t[0],t[1],t[2]||0,e.spatialReference,i)}function zn(e,t,i,r,s,n,o,l,c,p,v){const T=js[v.mode];let _,y,w=0;if(ft(e,t,i,r,c.spatialReference,s,l))return T?.requiresAlignment(v)?(w=T.applyElevationAlignmentBuffer(r,s,n,o,l,c,p,v),_=n,y=o):(_=r,y=s),ft(_,c.spatialReference,y,n,p.spatialReference,o,l)?w:void 0}function vi(e,t,i,r,s){const n=(li(e)?e.z:mi(e)?e.array[e.offset+2]:e[2])||0;switch(i.mode){case"on-the-ground":{const o=Be(t,e,"ground")??0;return s.verticalDistanceToGround=0,s.sampledElevation=o,void(s.z=o)}case"relative-to-ground":{const o=Be(t,e,"ground")??0,l=i.geometryZWithOffset(n,r);return s.verticalDistanceToGround=l,s.sampledElevation=o,void(s.z=l+o)}case"relative-to-scene":{const o=Be(t,e,"scene")??0,l=i.geometryZWithOffset(n,r);return s.verticalDistanceToGround=l,s.sampledElevation=o,void(s.z=l+o)}case"absolute-height":{const o=i.geometryZWithOffset(n,r),l=Be(t,e,"ground")??0;return s.verticalDistanceToGround=o-l,s.sampledElevation=l,void(s.z=o)}default:return void(s.z=0)}}function Un(e,t,i,r){return vi(e,t,i,r,ve),ve.z}function Vn(e,t,i){return t==="on-the-ground"&&i==="on-the-ground"?e.staysOnTheGround:t===i||t!=="on-the-ground"&&i!=="on-the-ground"?t==null||i==null?e.definedChanged:_t.UPDATE:e.onTheGroundChanged}function Wn(e){return e==="relative-to-ground"||e==="relative-to-scene"}function Bn(e){return e!=="absolute-height"}function kn(e,t,i,r,s){vi(t,i,s,r,ve),Cs(e,ve.verticalDistanceToGround);const n=ve.sampledElevation,o=ge(Ns,e.transformation);return ke[0]=t.x,ke[1]=t.y,ke[2]=ve.z,kr(t.spatialReference,ke,o,r.spatialReference)?e.transformation=o:console.warn("Could not locate symbol object properly, it might be misplaced"),n}function Cs(e,t){for(let i=0;i<e.geometries.length;++i){const r=e.geometries[i].getMutableAttribute(d.CENTEROFFSETANDDISTANCE);r&&r.data[3]!==t&&(r.data[3]=t,e.geometryVertexAttributeUpdated(e.geometries[i],d.CENTEROFFSETANDDISTANCE))}}function Ps(e,t,i,r,s,n){let o=0;const l=n.spatialReference;t*=3,r*=3;for(let c=0;c<s;++c){const p=e[t],v=e[t+1],T=e[t+2],_=n.getElevation(p,v,T,l,"ground")??0;o+=_,i[r]=p,i[r+1]=v,i[r+2]=_,t+=3,r+=3}return o/s}function Ls(e,t,i,r,s,n,o,l){let c=0;const p=l.calculateOffsetRenderUnits(o),v=l.featureExpressionInfoContext,T=n.spatialReference;t*=3,r*=3;for(let _=0;_<s;++_){const y=e[t],w=e[t+1],A=e[t+2],O=n.getElevation(y,w,A,T,"ground")??0;c+=O,i[r]=y,i[r+1]=w,i[r+2]=v==null?A+O+p:O+p,t+=3,r+=3}return c/s}function $s(e,t,i,r,s,n,o,l){let c=0;const p=l.calculateOffsetRenderUnits(o),v=l.featureExpressionInfoContext,T=n.spatialReference;t*=3,r*=3;for(let _=0;_<s;++_){const y=e[t],w=e[t+1],A=e[t+2],O=n.getElevation(y,w,A,T,"scene")??0;c+=O,i[r]=y,i[r+1]=w,i[r+2]=v==null?A+O+p:O+p,t+=3,r+=3}return c/s}function Ms(e){const t=e.meterUnitOffset,i=e.featureExpressionInfoContext;return t!==0||i!=null}function Is(e,t,i,r,s,n,o,l){const c=l.calculateOffsetRenderUnits(o),p=l.featureExpressionInfoContext;t*=3,r*=3;for(let v=0;v<s;++v){const T=e[t],_=e[t+1],y=e[t+2];i[r]=T,i[r+1]=_,i[r+2]=p==null?y+c:c,t+=3,r+=3}return 0}class Fs{constructor(){this.verticalDistanceToGround=0,this.sampledElevation=0,this.z=0}}var _t;(function(e){e[e.NONE=0]="NONE",e[e.UPDATE=1]="UPDATE",e[e.RECREATE=2]="RECREATE"})(_t||(_t={}));const js={"absolute-height":{applyElevationAlignmentBuffer:Is,requiresAlignment:Ms},"on-the-ground":{applyElevationAlignmentBuffer:Ps,requiresAlignment:()=>!0},"relative-to-ground":{applyElevationAlignmentBuffer:Ls,requiresAlignment:()=>!0},"relative-to-scene":{applyElevationAlignmentBuffer:$s,requiresAlignment:()=>!0}},Ns=q(),ve=new Fs,ke=b(),zs=()=>Tt.getLogger("esri.views.3d.layers.graphics.featureExpressionInfoUtils");function Us(e){return{cachedResult:e.cachedResult,arcade:e.arcade?{func:e.arcade.func,context:e.arcade.modules.arcadeUtils.createExecContext(null,{sr:e.arcade.context.spatialReference}),modules:e.arcade.modules}:null}}async function Hn(e,t,i,r){const s=e?.expression;if(typeof s!="string")return null;const n=ks(s);if(n!=null)return{cachedResult:n};const o=await Di();Ai(i);const l=o.arcadeUtils,c=l.createSyntaxTree(s);return l.dependsOnView(c)?(r?.error("Expressions containing '$view' are not supported on ElevationInfo"),{cachedResult:0}):{arcade:{func:l.createFunction(c),context:l.createExecContext(null,{sr:t}),modules:o}}}function Vs(e,t,i){return e.arcadeUtils.createFeature(t.attributes,t.geometry,i)}function Ws(e,t){if(e!=null&&!gi(e)){if(!t||!e.arcade)return void zs().errorOncePerTick("Arcade support required but not provided");const i=t;i._geometry&&(i._geometry=Xr(i._geometry)),e.arcade.modules.arcadeUtils.updateExecContext(e.arcade.context,t)}}function Bs(e){if(e!=null){if(gi(e))return e.cachedResult;const t=e.arcade;let i=t?.modules.arcadeUtils.executeFunction(t.func,t.context);return typeof i!="number"&&(e.cachedResult=0,i=0),i}return 0}function Gn(e,t=!1){let i=e?.featureExpressionInfo;const r=i?.expression;return t||r==="0"||(i=null),i??null}const Jn={cachedResult:0};function gi(e){return e.cachedResult!=null}function ks(e){return e==="0"?0:null}class _i{constructor(){this._meterUnitOffset=0,this._renderUnitOffset=0,this._unit="meters",this._metersPerElevationInfoUnit=1,this._featureExpressionInfoContext=null,this.centerPointInElevationSR=null,this.mode=null}get featureExpressionInfoContext(){return this._featureExpressionInfoContext}get meterUnitOffset(){return this._meterUnitOffset}get unit(){return this._unit}set unit(t){this._unit=t,this._metersPerElevationInfoUnit=Gr(t)}get requiresSampledElevationInfo(){return this.mode!=="absolute-height"}reset(){this.mode=null,this._meterUnitOffset=0,this._renderUnitOffset=0,this._featureExpressionInfoContext=null,this.unit="meters"}set offsetMeters(t){this._meterUnitOffset=t,this._renderUnitOffset=0}set offsetElevationInfoUnits(t){this._meterUnitOffset=t*this._metersPerElevationInfoUnit,this._renderUnitOffset=0}addOffsetRenderUnits(t){this._renderUnitOffset+=t}geometryZWithOffset(t,i){const r=this.calculateOffsetRenderUnits(i);return this.featureExpressionInfoContext!=null?r:t+r}calculateOffsetRenderUnits(t){let i=this._meterUnitOffset;const r=this.featureExpressionInfoContext;return r!=null&&(i+=Bs(r)*this._metersPerElevationInfoUnit),i/t.unitInMeters+this._renderUnitOffset}setFromElevationInfo(t){this.mode=t.mode,this.unit=Jr(t.unit)?t.unit:"meters",this.offsetElevationInfoUnits=t.offset??0}updateFeatureExpressionInfoContext(t,i,r){if(t==null)return void(this._featureExpressionInfoContext=null);const s=t?.arcade;s&&i!=null&&r!=null?(this._featureExpressionInfoContext=Us(t),Ws(this._featureExpressionInfoContext,Vs(s.modules,i,r))):this._featureExpressionInfoContext=t}static fromElevationInfo(t){const i=new _i;return t!=null&&i.setFromElevationInfo(t),i}}const Hs=Object.freeze(Object.defineProperty({__proto__:null,build:ui,ribbonlineNumRoundJoinSubdivisions:Ce},Symbol.toStringTag,{value:"Module"}));export{Kr as A,di as B,Xe as C,gs as D,Cs as E,Mn as F,J as G,xs as H,Rn as I,Un as J,Be as K,Fs as R,Ht as a,kt as b,Hn as c,Gn as d,Bt as e,vi as f,Ws as g,Jn as h,Ln as i,_t as j,Wn as k,Fn as l,Vn as m,rs as n,_i as o,kn as p,Bn as q,Nn as r,Vs as s,Xt as t,zn as u,ue as v,de as w,cs as x,Ts as y,Ae as z};
