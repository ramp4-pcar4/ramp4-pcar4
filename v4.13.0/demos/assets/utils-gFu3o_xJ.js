import{aV as z,bu as C,I as O,cv as R,cw as A,c4 as G,s as E,bU as V}from"./main-6eEsl9OJ.js";import{r as v}from"./TimeExtent-DG27ZQvz.js";import{j as Y}from"./quantizationUtils-j62jcfjD.js";import{u as D,l as S}from"./heatmapUtils-eUEoMYnq.js";import{$ as _}from"./utils-Bbh3Mh7q.js";import{m as U,B as L}from"./utils-BLu_k1JR.js";let f=null;const P=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function k(e,t,n){return e.x<0?e.x+=t:e.x>n&&(e.x-=t),e}function te(e,t,n,r){const i=R(n)?A(n):null,s=i?Math.round((i.valid[1]-i.valid[0])/t.scale[0]):null;return e.map(l=>{const a=new G(l.geometry);return Y(t,a,a),l.geometry=i?k(a,s??0,r[0]):a,l})}function ne(e,t=18,n,r,i){const s=new Float64Array(r*i);t=Math.round(V(t));let l=Number.POSITIVE_INFINITY,a=Number.NEGATIVE_INFINITY;const b=D(n);for(const{geometry:p,attributes:F}of e){const{x:g,y:c}=p,w=Math.max(0,g-t),N=Math.max(0,c-t),M=Math.min(i,c+t),x=Math.min(r,g+t),h=+b(F);for(let m=N;m<M;m++)for(let d=w;d<x;d++){const I=m*r+d,$=S(d-g,m-c,t)*h,u=s[I]+=$;l=Math.min(l,u),a=Math.max(a,u)}}return{min:l,max:a}}function q(e){const t=P.exec(e);if(!t)return null;const{hh:n,mm:r,ss:i,ms:s}=t.groups;return Number(n)*v.hours+Number(r)*v.minutes+Number(i)*v.seconds+Number(s||0)}async function re(e,t,n=!0){if(!t)return[];const{field:r,field2:i,field3:s,fieldDelimiter:l,fieldInfos:a,timeZone:b}=e,p=r&&a?.find(u=>u.name.toLowerCase()===r.toLowerCase()),F=!!p&&z(p),g=!!p&&_(p),c=e.valueExpression,w=e.normalizationType,N=e.normalizationField,M=e.normalizationTotal,x=[],h=e.viewInfoParams;let m=null,d=null;if(c){if(!f){const{arcadeUtils:u}=await C();f=u}f.hasGeometryOperations(c)&&await f.enableGeometryOperations(),m=f.createFunction(c),d=h?f.getViewInfo({viewingMode:h.viewingMode,scale:h.scale,spatialReference:new O(h.spatialReference)}):null}const I=e.fieldInfos,$=!(t[0]&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic")&&I?{fields:I}:null;return t.forEach(u=>{const y=u.attributes;let o;if(c){const T=$?{...u,layer:$}:u,j=f.createExecContext(T,d,b);o=f.executeFunction(m,j)}else y&&(o=y[r],i?(o=`${U(o)}${l}${U(y[i])}`,s&&(o=`${o}${l}${U(y[s])}`)):typeof o=="string"&&n&&(g?o=o?new Date(o).getTime():null:F&&(o=o?q(o):null)));if(w&&typeof o=="number"&&isFinite(o)){const T=y&&parseFloat(y[N]);o=L(o,w,T,M)}x.push(o)}),x}function ie(e){const t=e.field,n=e.normalizationType,r=e.normalizationField;let i;return n==="field"?i="(NOT "+r+" = 0)":n!=="log"&&n!=="natural-log"&&n!=="square-root"||(i=`(${t} > 0)`),i}function oe(e,t,n){const r=t!=null?e+" >= "+t:"",i=n!=null?e+" <= "+n:"";let s="";return s=r&&i?B(r,i):r||i,s?"("+s+")":""}function B(e,t){let n=e??"";return t!=null&&t&&(n=n?"("+n+") AND ("+t+")":t),n}function se(e,t){if(e&&e.spatialRelationship!=="intersects")return new E(t,"Only 'intersects' spatialRelationship is supported for featureFilter")}function le(e,t,n){const r=Z({layer:e,fields:t});if(r.length)return new E(n,"Unknown fields: "+r.join(", ")+". You can only use fields defined in the layer schema");const i=H({layer:e,fields:t});return i.length?new E(n,"Unsupported fields: "+i.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}function Z(e){const t=e.layer;return e.fields.filter(n=>!t.getField(n))}function H(e){const t=e.layer;return e.fields.filter(n=>{const r=t.getFieldUsageInfo(n);return!r||!r.supportsStatistics})}export{ie as F,q as I,se as M,oe as N,le as T,B as U,re as b,ne as w,te as x};
