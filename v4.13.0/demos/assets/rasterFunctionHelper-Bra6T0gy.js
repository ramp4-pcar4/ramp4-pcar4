import{U as ze}from"./colorUtils-D1om_hYv.js";import{q as l,v as h,x as P,z as as,c8 as us,ay as Z,bL as X,f as W,by as ks,bz as _s,H as Wt,G as Yt,ii as qt,s as Ot}from"./main-6eEsl9OJ.js";import{f as Cs,c as ls,u as it,r as U,i as te}from"./pixelRangeUtils-BvOub3JO.js";import{c as A,r as Ss,n as cs,e as ee,o as Bs,k as Se,q as ps,t as ms,M as js,v as zt,w as Ms,x as Gs,y as zs,z as Os,A as Ds}from"./dataUtils-CHnwz3lm.js";import{m as Es,z as Vs,D as Nt,E as Us,F as hs,B as re,I as fs,J as ds,K as Ls,L as Ht,M as Ws,O as Zt,Q as gs,R as ys,S as Hs,T as qs,V as Js,X as se,Y as Ks,Z as Xs,$ as Zs}from"./RasterSymbolizer-DhOHpdT9.js";import{l as Qs}from"./clipUtils-BNc4qJ2F.js";import{Q as Ys,V as tr}from"./rasterProjectionHelper-BQzX2t6v.js";import{m as er,p as xs}from"./colorRamps-CKB7alIQ.js";import{m as et}from"./Field-CzUupKXc.js";let Jt=class extends as{constructor(){super(...arguments),this.raster=void 0}};l([h({json:{write:!0}})],Jt.prototype,"raster",void 0),Jt=l([P("esri.layers.support.rasterFunctions.BaseFunctionArguments")],Jt);const O=Jt;var ne;let $t=ne=class extends O{constructor(){super(...arguments),this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new ne({raster:this.raster,raster2:this.raster2,operation:this.operation})}};l([h({json:{write:!0}})],$t.prototype,"operation",void 0),l([h({json:{write:!0}})],$t.prototype,"raster2",void 0),l([h({readOnly:!0})],$t.prototype,"rasters",null),$t=ne=l([P("esri.layers.support.rasterFunctions.ArithmeticFunctionArguments")],$t);const sr=$t,rr=new Set(["slope","aspect","curvature","hillshade","shadedrelief","statistics"]);let z=class extends as{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.rawSourceRasterInfos=null,this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this.isRoot=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const e=[t],{parameters:s}=t;let r=s.rasters||s.raster&&[s.raster];for(;r?.length;){e.unshift(...r);const u=[];for(let c=0;c<r.length;c++){const{parameters:p}=r[c],m=p.rasters||p.raster&&[p.raster];m?.length&&u.push(...m)}r=u}for(let u=e.length-1;u>=0;u--)e[u].isNoopProcess&&e.splice(u,1);let n=!1;for(let u=0;u<e.length;u++){const c=e[u];c.id=e.length-u-1;const{rasters:p}=c.parameters;n=n||p!=null&&p.length>1}const i=e.some(({name:u})=>rr.has(u.toLowerCase())),{rawSourceRasterInfos:o}=this;return{functions:e,hasBranches:n,hasFocalFunction:i,isSourceSingleBand:o?.[0]?.bandCount===1}}bind(t,e=!1,s=-1){this.id=s+1;const r=this._getRasterValues();let n=!0;for(let i=0;i<r.length;i++){const o=r[i];if(o!=null&&this._isRasterFunctionValue(o)){const u=o.bind(t,e,this.id+i);if(!u.success)return this._bindingResult=u,u;n=n&&u.supportsGPU}}return!this.rasterInfo||e?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),n&&=this._bindingResult.supportsGPU,this._bindingResult.success&&(this._patchRasterInfo(),n&&this.isRoot)&&(this.processInputBandIds(),this.swizzleInputBandIds(this.rawInputBandIds)||(n=this.rawInputBandIds.length<=3)),this._bindingResult.supportsGPU=n,this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this._bindingResult)}process(t){const e=this._getRasterValues(),s=e.length===0?t.pixelBlocks??t.primaryPixelBlocks:e.map(r=>this._readRasterValue(r,t));return this._processPixels({...t,pixelBlocks:s})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);if(t.length>1){const n=t.map(i=>i.processInputBandIds());return this.rawInputBandIds=[...new Set(n.flat())],this.rawInputBandIds}const e=t[0];if(e)return this.rawInputBandIds=e.processInputBandIds(),this.rawInputBandIds;const{bandCount:s}=this.sourceRasterInfos[0],r=Array.from({length:s},(n,i)=>i);return this.rawInputBandIds=this._getInputBandIds(r),this.rawInputBandIds}swizzleInputBandIds(t){const e=this._getRasterValues().filter(this._isRasterFunctionValue);let s=!0;for(const r of e)s=r.swizzleInputBandIds(t)&&s;return!!s&&this._swizzleBandIds(t)}getPrimaryRasters(){const t=[],e=[];return this._getPrimaryRasters(this,t,e),{rasters:t,rasterIds:e}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:e,rasters:s}=this.functionArguments;return s&&Array.isArray(s)&&s.length?(t.rasters=s.map(r=>this._isRasterFunctionValue(r)?r.getWebGLProcessorDefinition():typeof r=="number"?{name:"Constant",parameters:{value:r},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:r},pixelType:"f32",id:-1,isNoopProcess:!1}),t.rasters.some(r=>r!=null)||(t.rasters=null)):this._isRasterFunctionValue(e)&&(t.raster=e.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getClippingGeometries(){const t=[];this.functionName==="Clip"&&t.push(this.functionArguments);const{raster:e,rasters:s}=this.functionArguments;if(s&&Array.isArray(s)&&s.length)s.forEach(r=>{if(this._isRasterFunctionValue(r)){const n=r.getClippingGeometries();t.push(...n)}});else if(this._isRasterFunctionValue(e)){const r=e.getClippingGeometries();t.push(...r)}return t}_getOutputPixelType(t){return this.outputPixelType==="unknown"?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_swizzleBandIds(t){return!0}_isInputRasterPrimaryOrConstant(){return!this._getRasterValues().some(t=>t&&typeof t=="object"&&"rasterFunction"in t&&t.rasterFunction)}_removeStatsHistColormapVAT(t){t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.multidimensionalInfo?.variables.forEach(e=>{e.statistics=void 0,e.histograms=void 0})}_getRasterValues(){const{rasterArgumentNames:t}=this;return t[0]==="rasters"?this.functionArguments.rasters??[]:t.flatMap(e=>this.functionArguments[e])}_getSourceRasterInfos(t){const e=this._getRasterValues(),{rasterInfos:s,rasterIds:r}=t;if(e.length===0)return s;const n=e.map(o=>o&&typeof o=="object"&&"bind"in o&&o.rasterInfo?o.rasterInfo:typeof o=="string"&&r.includes(o)?s[r.indexOf(o)]:typeof o!="number"?s[0]:void 0),i=n.find(o=>o)??s[0];return n.forEach((o,u)=>{o===void 0&&(n[u]=i)}),n}_getPrimaryRasterId(t){return t?.rasterId}_getPrimaryRasters(t,e=[],s=[]){for(let r=0;r<t.sourceRasters.length;r++){const n=t.sourceRasters[r];if(typeof n!="number")if("bind"in n)this._getPrimaryRasters(n,e,s);else{const i=n,o=this._getPrimaryRasterId(i);if(o==null)continue;s.includes(o)||(this.mainPrimaryRasterId===o?(e.unshift(i),s.unshift(o)):(e.push(i),s.push(o)))}}}_isRasterFunctionValue(t){return t!=null&&typeof t=="object"&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,e){const{primaryPixelBlocks:s}=e;if(t==null||t==="$$"){const r=s[0];return r==null?null:r.clone()}if(typeof t=="string"){const r=e.primaryRasterIds.indexOf(t);return r===-1?null:s[r]}if(typeof t=="number"){const r=s[0];if(r==null)return null;const{width:n,height:i,pixelType:o}=r,u=new Float32Array(n*i);u.fill(t);const c=this.sourceRasterInfos[0].bandCount,p=new Array(c).fill(u);return new A({width:n,height:i,pixelType:o,pixels:p})}return t.process(e)}_patchRasterInfo(){const{rasterInfo:t}=this;if(!t?.keyProperties)return;const{bandCount:e,keyProperties:s,statistics:r,histograms:n}=t,i=s.BandProperties;i&&i.length!==e&&(t.keyProperties={...s,BandProperties:void 0}),r&&r.length!==e&&(t.statistics=r.length>e?r.slice(0,e):null),n&&n.length!==e&&(t.histograms=n.length>e?n.slice(0,e):null),s.BAND_COUNT&&Number(s.BAND_COUNT)!==e&&(t.keyProperties={...s,BAND_COUNT:typeof s.BAND_COUNT=="string"?String(e):e})}};l([h({json:{write:!0}})],z.prototype,"functionName",void 0),l([h({json:{write:!0}})],z.prototype,"functionArguments",void 0),l([h()],z.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}}),us(a=>a?.toLowerCase())],z.prototype,"outputPixelType",void 0),l([h({json:{write:!0}})],z.prototype,"mainPrimaryRasterId",void 0),l([h()],z.prototype,"sourceRasters",void 0),l([h({type:[Es],json:{write:!0}})],z.prototype,"sourceRasterInfos",void 0),l([h({json:{write:!0}})],z.prototype,"rasterInfo",void 0),l([h({json:{write:!0}})],z.prototype,"readingBufferSize",void 0),l([h({json:{write:!0}})],z.prototype,"id",void 0),l([h()],z.prototype,"isNoopProcess",void 0),l([h()],z.prototype,"supportsGPU",null),l([h()],z.prototype,"rawInputBandIds",void 0),l([h()],z.prototype,"rawSourceRasterInfos",void 0),l([h()],z.prototype,"isInputBandIdsSwizzled",void 0),l([h()],z.prototype,"swizzledBandSelection",void 0),l([h()],z.prototype,"isBranch",void 0),l([h()],z.prototype,"isRoot",void 0),l([h({readOnly:!0})],z.prototype,"flatWebGLFunctionChain",null),l([h()],z.prototype,"_bindingResult",void 0),z=l([P("esri.layers.support.rasterFunctions.BaseRasterFunction")],z);const G=z,k={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},nr={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65},L={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},J={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},or={majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75},vs={setNull:50,conditional:78},Oe={...nr,...L,...J,...or,...vs},ws=new Map([[J.acos,{domain:[0,Math.PI],isInteger:!1}],[J.asin,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[J.atan,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[J.cos,{domain:[-1,1],isInteger:!1}],[J.sin,{domain:[-1,1],isInteger:!1}],[L.booleanAnd,{domain:[0,1],isInteger:!0}],[L.booleanNot,{domain:[0,1],isInteger:!0}],[L.booleanOr,{domain:[0,1],isInteger:!0}],[L.booleanXOr,{domain:[0,1],isInteger:!0}],[L.equalTo,{domain:[0,1],isInteger:!0}],[L.notEqual,{domain:[0,1],isInteger:!0}],[L.greaterThan,{domain:[0,1],isInteger:!0}],[L.greaterThanEqual,{domain:[0,1],isInteger:!0}],[L.lessThan,{domain:[0,1],isInteger:!0}],[L.lessThanEqual,{domain:[0,1],isInteger:!0}],[L.isNull,{domain:[0,1],isInteger:!0}]]);function De(a){return ws.get(a)}const Ee=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function ir(a,t=!1){const e=a.map(o=>o.mask),s=e.filter(o=>o!=null),r=a[0].pixels[0].length;if(s.length===0||t&&s.length!==e.length)return new Uint8Array(r).fill(255);const n=s[0],i=new Uint8Array(n);if(s.length===1)return i;if(!t){for(let o=1;o<s.length;o++){const u=s[o];for(let c=0;c<i.length;c++)i[c]&&(i[c]=u[c]?255:0)}return i}for(let o=1;o<s.length;o++){const u=s[o];for(let c=0;c<i.length;c++)i[c]===0&&(i[c]=u[c]?255:0)}return i}function ar(a,t,e){const[s,r]=a,n=s.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)t&&!t[o]||(i[o]=s[o]+r[o]);return i}function ur(a,t,e){const[s]=a,r=s.length,n=A.createEmptyBand("f32",r);return n.set(s),n}function lr(a,t,e){const[s]=a,r=s.length,n=A.createEmptyBand(e,r);for(let i=0;i<r;i++)t&&!t[i]||(n[i]=s[i]*s[i]);return n}function cr(a,t,e){const[s,r]=a,n=s.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)t&&!t[o]||(i[o]=s[o]-r[o]);return i}function pr(a,t,e){const[s,r]=a,n=s.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)t&&!t[o]||(i[o]=s[o]*r[o]);return i}function mr(a,t,e){const[s]=a,r=s.length,n=A.createEmptyBand(e,r);for(let i=0;i<r;i++)t&&!t[i]||(n[i]=Math.sign(s[i])*Math.floor(Math.abs(s[i])));return n}function bs(a,t,e){const[s,r]=a,n=s.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)t&&!t[o]||(i[o]=s[o]/r[o]);return i}function hr(a,t,e){return bs(a,t,"f32")}function fr(a,t,e){const[s,r]=a,n=s.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)t&&!t[o]||(i[o]=Math.floor(s[o]/r[o]));return i}function dr(a,t,e,s){const r=a[0],n=r.length,i=A.createEmptyBand(e,n);if(s===J.atanh){for(let u=0;u<n;u++)if(t[u]){const c=r[u];Math.abs(c)>=1?t[u]=0:i[u]=Math.atanh(c)}return i}const o=s===J.asin?Math.asin:Math.acos;for(let u=0;u<n;u++)if(t[u]){const c=r[u];Math.abs(c)>1?t[u]=0:i[u]=o(c)}return i}function gr(a,t,e,s){const[r]=a,n=r.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)t&&!t[o]||(i[o]=s(r[o]));return i}function yr(a,t,e,s){const[r,n]=a,i=r.length,o=A.createEmptyBand(e,i);for(let u=0;u<i;u++)t&&!t[u]||(o[u]=s(r[u],n[u]));return o}function xr(a,t,e){const[s,r]=a,n=s.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)t&&!t[o]||(i[o]=s[o]&r[o]);return i}function vr(a,t,e){const[s,r]=a,n=s.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)t&&!t[o]||(i[o]=s[o]<<r[o]);return i}function wr(a,t,e){const[s]=a,r=s.length,n=A.createEmptyBand(e,r);for(let i=0;i<r;i++)t&&!t[i]||(n[i]=~s[i]);return n}function br(a,t,e){const[s,r]=a,n=s.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)t&&!t[o]||(i[o]=s[o]|r[o]);return i}function Ar(a,t,e){const[s,r]=a,n=s.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)t&&!t[o]||(i[o]=s[o]>>r[o]);return i}function Tr(a,t,e){const[s,r]=a,n=s.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)t&&!t[o]||(i[o]=s[o]^r[o]);return i}function Pr(a,t,e){const[s,r]=a,n=s.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)t&&!t[o]||(i[o]=s[o]&&r[o]?1:0);return i}function Fr(a,t,e){const[s]=a,r=s.length,n=A.createEmptyBand(e,r);for(let i=0;i<r;i++)t&&!t[i]||(n[i]=s[i]?0:1);return n}function Nr(a,t,e){const[s,r]=a,n=s.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)t&&!t[o]||(i[o]=s[o]||r[o]?1:0);return i}function $r(a,t,e){const[s,r]=a,n=s.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)t&&!t[o]||(i[o]=(s[o]?1:0)^(r[o]?1:0));return i}function Ir(a,t,e){const[s,r]=a,n=s.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)t&&!t[o]||(i[o]=s[o]===r[o]?1:0);return i}function Be(a,t,e,s){const[r]=a,n=r.length,i=A.createEmptyBand(e,n),o=s===Math.E;for(let u=0;u<n;u++)t&&!t[u]||(i[u]=o?Math.exp(r[u]):s**r[u]);return i}function Rr(a,t,e){return Be(a,t,e,10)}function kr(a,t,e){return Be(a,t,e,2)}function _r(a,t,e){return Be(a,t,e,Math.E)}function je(a,t,e,s){const[r]=a,n=r.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)t&&!t[o]||(r[o]<=0?t[o]=0:i[o]=s(r[o]));return i}function Cr(a,t,e){return je(a,t,e,Math.log10)}function Sr(a,t,e){return je(a,t,e,Math.log2)}function Br(a,t,e){return je(a,t,e,Math.log)}function jr(a,t,e){const[s,r]=a,n=s.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)t&&!t[o]||(i[o]=s[o]>r[o]?1:0);return i}function Mr(a,t,e){const[s,r]=a,n=s.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)t&&!t[o]||(i[o]=s[o]>=r[o]?1:0);return i}function Gr(a,t,e){const[s,r]=a,n=s.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)t&&!t[o]||(i[o]=s[o]<r[o]?1:0);return i}function zr(a,t,e){const[s,r]=a,n=s.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)t&&!t[o]||(i[o]=s[o]<=r[o]?1:0);return i}function Or(a,t,e){const[s]=a,r=s.length,n=A.createEmptyBand(e,r);if(!t)return n;for(let i=0;i<r;i++)n[i]=t[i]?0:1;return n}function Dr(a,t,e){const[s,r]=a,n=s.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)t&&!t[o]||(i[o]=s[o]%r[o]);return i}function Er(a,t,e){const[s]=a,r=s.length,n=A.createEmptyBand(e,r);for(let i=0;i<r;i++)t&&!t[i]||(n[i]=-s[i]);return n}function Vr(a,t,e){const[s,r]=a,n=s.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)t&&!t[o]||(i[o]=s[o]===r[o]?0:1);return i}function Ur(a,t,e){const[s,r]=a,n=s.length,i=A.createEmptyBand(e,n),o=new Uint8Array(n);for(let u=0;u<n;u++)t!=null&&!t[u]||s[u]!==0||(i[u]=r[u],o[u]=255);return{band:i,mask:o}}function Ve(a,t,e){const[s,r,n]=a,i=s.length,o=A.createEmptyBand(e,i);for(let u=0;u<i;u++)t&&!t[u]||(o[u]=s[u]?r[u]:n[u]);return o}function Ue(a,t,e){const s=a.length;if(s<2)return a[0];const[r]=a,n=r.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)if(!t||t[o]){let u=r[o];for(let c=1;c<s;c++){const p=a[c][o];u<p&&(u=p)}i[o]=u}return i}function Le(a,t,e){const s=a.length;if(s<2)return a[0];const[r]=a,n=r.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)if(!t||t[o]){let u=r[o];for(let c=1;c<s;c++){const p=a[c][o];u>p&&(u=p)}i[o]=u}return i}function We(a,t,e){const s=a.length;if(s<2)return a[0];const[r]=a,n=r.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)if(!t||t[o]){let u=r[o],c=u;for(let p=1;p<s;p++){const m=a[p][o];c<m?c=m:u>m&&(u=m)}i[o]=c-u}return i}function He(a,t,e){const s=a.length;if(s<2)return a[0];const[r]=a,n=r.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)if(!t||t[o]){let u=0;for(let c=0;c<s;c++)u+=a[c][o];i[o]=u/s}return i}function qe(a,t,e){const s=a.length;if(s<2)return a[0];const[r]=a,n=r.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)if(!t||t[o])for(let u=0;u<s;u++){const c=a[u];i[o]+=c[o]}return i}function Je(a,t,e){const s=a.length;if(s<2)return a[0];const[r]=a,n=r.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)if(!t||t[o]){const u=new Float32Array(s);let c=0;for(let m=0;m<s;m++){const f=a[m];c+=f[o],u[m]=f[o]}c/=s;let p=0;for(let m=0;m<s;m++)p+=(u[m]-c)**2;i[o]=Math.sqrt(p/s)}return i}function Ke(a,t,e){const s=a.length;if(s<2)return a[0];const r=Math.floor(s/2),[n]=a,i=n.length,o=A.createEmptyBand(e,i),u=new Float32Array(s),c=s%2==1;for(let p=0;p<i;p++)if(!t||t[p]){for(let m=0;m<s;m++)u[m]=a[m][p];u.sort(),o[p]=c?u[r]:(u[r]+u[r-1])/2}return o}function As(a,t,e){const[s,r]=a;if(r==null)return s;const n=s.length,i=A.createEmptyBand(e,n);for(let o=0;o<n;o++)t&&!t[o]||(i[o]=s[o]<r[o]?s[o]:r[o]);return i}function Xe(a,t,e){const s=a.length;if(s<=2)return As(a,t,e);const r=a[0].length,n=A.createEmptyBand(e,r),i=new Map;for(let o=0;o<r;o++)if(!t||t[o]){i.clear();for(let m=0;m<s;m++){const f=a[m][o];i.set(f,i.has(f)?i.get(f)+1:1)}let u=0,c=0;const p=[];for(const m of i.keys())u=i.get(m),u>c?(c=u,p.length=0,p.push(m)):u===c&&p.push(m);p.length>1&&p.sort((m,f)=>m-f),n[o]=p[0]}return n}function Ze(a,t,e){const s=a.length;if(s<=2)return As(a,t,e);const r=a[0].length,n=A.createEmptyBand(e,r),i=new Map;for(let o=0;o<r;o++)if(!t||t[o]){i.clear();for(let m=0;m<s;m++){const f=a[m][o];i.set(f,i.has(f)?i.get(f)+1:1)}let u=0,c=a.length;const p=[];for(const m of i.keys())u=i.get(m),u<c?(c=u,p.length=0,p.push(m)):u===c&&p.push(m);p.length>1&&p.sort((m,f)=>m-f),n[o]=p[0]}return n}function Qe(a,t,e){const s=a.length;if(s<2)return a[0];const[r]=a,n=r.length,i=A.createEmptyBand(e,n),o=new Set;for(let u=0;u<n;u++)if(!t||t[u]){let c;o.clear();for(let p=0;p<s;p++)c=a[p][u],o.add(c);i[u]=o.size}return i}const D=new Map,Qt=new Map,I=new Map,M=new Map;function Lr(){D.size||(D.set(4,Math.sqrt),D.set(6,Math.acos),D.set(7,Math.asin),D.set(8,Math.atan),D.set(9,Math.atanh),D.set(10,Math.abs),D.set(21,Math.cos),D.set(22,Math.cosh),D.set(48,Math.floor),D.set(49,Math.ceil),D.set(51,Math.sin),D.set(52,Math.sinh),D.set(56,Math.tan),D.set(57,Math.tanh),D.set(59,Math.acosh),D.set(60,Math.asinh),D.set(65,Math.floor),Qt.set(5,Math.pow),Qt.set(61,Math.atan2),I.set(1,ar),I.set(2,cr),I.set(3,pr),I.set(11,xr),I.set(12,vr),I.set(13,wr),I.set(14,br),I.set(15,Ar),I.set(16,Tr),I.set(17,Pr),I.set(18,Fr),I.set(19,Nr),I.set(20,$r),I.set(23,bs),I.set(24,Ir),I.set(25,_r),I.set(26,Rr),I.set(27,kr),I.set(28,jr),I.set(29,Mr),I.set(30,mr),I.set(31,Or),I.set(32,ur),I.set(33,Gr),I.set(34,zr),I.set(35,Br),I.set(36,Cr),I.set(37,Sr),I.set(44,Dr),I.set(45,Er),I.set(46,Vr),I.set(53,lr),I.set(64,hr),I.set(65,fr),I.set(76,Ve),I.set(78,Ve),M.set(38,Xe),M.set(39,Ue),M.set(40,He),M.set(41,Ke),M.set(42,Le),M.set(43,Ze),M.set(47,We),M.set(54,Je),M.set(55,qe),M.set(58,Qe),M.set(66,Xe),M.set(67,Ue),M.set(68,He),M.set(69,Ke),M.set(70,Le),M.set(71,Ze),M.set(72,We),M.set(73,Je),M.set(74,qe),M.set(75,Qe))}function Ts(a,t,e={}){Lr();let s=ir(a,t>=66&&t<=75);const{outputPixelType:r="f32"}=e,n=!M.has(t)||e.processAsMultiband,i=n?a[0].pixels.length:1,o=[];for(let c=0;c<i;c++){const p=M.has(t)&&!n?a.flatMap(d=>d.pixels):a.map(d=>d.pixels[c]);let m,f=!0;if(t===vs.setNull){const d=Ur(p,s,r);m=d.band,s=d.mask,f=!1}else I.has(t)?m=I.get(t)(p,s,"f64"):D.has(t)?m=t===J.asin||t===J.acos||t===J.atanh?dr(p,s,"f64",t):gr(p,s,"f64",D.get(t)):Qt.has(t)?m=yr(p,s,"f64",Qt.get(t)):M.has(t)?m=M.get(t)(p,s,"f64"):(m=p[0],f=!1);if(f&&t!==L.isNull&&!ws.has(t)){const d=A.createEmptyBand(r,m.length);s||(s=new Uint8Array(m.length).fill(255)),Cs(m,s),ls(m,s,r,d),m=d}o.push(m)}const u=a[0];return new A({width:u.width,height:u.height,pixelType:r,mask:t===L.isNull?null:s,pixels:o})}function Wr(a,t,e){return Ts(a,t=[null,1,2,3,23,5,44][t]??1,{outputPixelType:e})}let It=class extends G{constructor(){super(...arguments),this.functionName="Arithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{operation:t}=this.functionArguments;if(t<1||t>6)return{success:!1,supportsGPU:!1,error:"unsupported operation"};const e=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:e.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e?.[0]==null||e?.[1]==null?null:Wr(e,this.functionArguments.operation,this.outputPixelType)}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=["","plus","minus","times","divide","power","mod"][t],s=this.outputPixelType??"f32";let[r,n]=it(s);const i=U(s);return i&&(r-=1e-4,n+=1e-4),{imageCount:2,operationName:e,domainRange:[r,n],isOutputRounded:i}}};l([h({json:{write:!0,name:"rasterFunction"}})],It.prototype,"functionName",void 0),l([h({type:sr,json:{write:!0,name:"rasterFunctionArguments"}})],It.prototype,"functionArguments",void 0),l([h()],It.prototype,"rasterArgumentNames",void 0),It=l([P("esri.layers.support.rasterFunctions.ArithmeticFunction")],It);const Hr=It;var oe;let ie=oe=class extends O{clone(){return new oe({raster:this.raster})}};ie=oe=l([P("esri.layers.support.rasterFunctions.AspectFunctionArguments")],ie);const qr=ie;let at=class extends G{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.isGCS=t.spatialReference?.isGeographic??!1,this.outputPixelType=this._getOutputPixelType("f32");const e=t.clone();return e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),e.statistics=[{min:-1,max:360,avg:180,stddev:30}],e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{extent:s,primaryPixelSizes:r}=t,n=r?.[0],i=n??(s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1});return Vs(e,{resolution:i})}};l([h({json:{write:!0,name:"rasterFunction"}})],at.prototype,"functionName",void 0),l([h({type:qr,json:{write:!0,name:"rasterFunctionArguments"}})],at.prototype,"functionArguments",void 0),l([h()],at.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}})],at.prototype,"isGCS",void 0),at=l([P("esri.layers.support.rasterFunctions.AspectFunction")],at);const Jr=at,Kr=new Set(["+","-","*","/","(",")"]);function Xr(a,t){(a=a.replaceAll(" ","")).startsWith("-")&&(a="0"+a),a.startsWith("+")&&(a=a.slice(1));const e=a.split(""),s=[],r=[];let n="";for(let i=0;i<e.length;i++){const o=e[i];Kr.has(o)?(n.length&&r.push(Ye(n,t)),s.push(o),n=""):n=n.concat(o)}return n.length&&r.push(Ye(n,t)),{ops:s,nums:r}}function Ye(a,t){return a.toLowerCase().startsWith("b")?t[parseInt(a.slice(1),10)-1]:parseFloat(a)}function Zr(a,t,e,s){if(typeof e=="number"&&typeof s=="number")return e+s;let r,n,i;typeof e=="number"?(i=s,r=i.length,n=new Float32Array(r),n.fill(e)):(r=e.length,n=e,s.constructor===Number?(i=new Float32Array(r),i.fill(s)):i=s);const o=new Float32Array(r);switch(t){case"+":for(let u=0;u<r;u++)(a==null||a[u])&&(o[u]=n[u]+i[u]);break;case"-":for(let u=0;u<r;u++)(a==null||a[u])&&(o[u]=n[u]-i[u]);break;case"*":for(let u=0;u<r;u++)(a==null||a[u])&&(o[u]=n[u]*i[u]);break;case"/":for(let u=0;u<r;u++)(a==null||a[u])&&i[u]&&(o[u]=n[u]/i[u]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return o}function Qr(a,t){a.splice(t,1);let e=0,s=0;do{e=0,s=0;for(let r=0;r<a.length;r++)if(a[r]==="(")e=r;else if(a[r]===")"){s=r;break}s===e+1&&a.splice(e,2)}while(s===e+1);return a}function Yr(a){if(a.length===1)return{opIndex:0,numIndex:0};let t=0,e=0;for(let i=0;i<a.length;i++)if(a[i]==="(")t=i;else if(a[i]===")"){e=i;break}const s=e===0?a:a.slice(t+1,e);let r=-1;for(let i=0;i<s.length;i++)if(s[i]==="*"||s[i]==="/"){r=i;break}if(r>-1)e>0&&(r+=t+1);else{for(let i=0;i<s.length;i++)if(s[i]==="+"||s[i]==="-"){r=i;break}e>0&&(r+=t+1)}let n=0;for(let i=0;i<r;i++)a[i]==="("&&n++;return{opIndex:r,numIndex:r-n}}function tn(a,t,e){let s,{ops:r,nums:n}=Xr(e,t);if(r.length===0){const i=n.length===1?n[0]:t[0];if(i instanceof Float32Array)return[i];const o=new Float32Array(t[0].length);return typeof i=="number"?o.fill(i):o.set(i),[o]}for(;r.length>0;){const{numIndex:i,opIndex:o}=Yr(r);if(s=Zr(a,r[o],n[i],n[i+1]),r.length===1)break;r=Qr(r,o),n.splice(i,2,s)}return[s]}const en=new Z({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function sn(a,t){if(!Ss(a))return a;const{equation:e,method:s}=t,r=t.bandIndexes.map(f=>f-1),{pixels:n,mask:i}=a;let o;switch(s){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":o=ts(i,n[r[0]],n[r[1]]);break;case"ndwi":o=ts(i,n[r[1]],n[r[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":o=nn(i,n[r[0]],n[r[1]]);break;case"ci-g":case"ci-re":o=on(i,n[r[0]],n[r[1]]);break;case"savi":o=an(i,n[r[0]],n[r[1]],r[2]+1);break;case"tsavi":o=un(i,n[r[0]],n[r[1]],r[2]+1,r[3]+1,r[4]+1);break;case"msavi":o=ln(i,n[r[0]],n[r[1]]);break;case"gemi":o=cn(i,n[r[0]],n[r[1]]);break;case"pvi":o=pn(i,n[r[0]],n[r[1]],r[2]+1,r[3]+1);break;case"gvitm":o=mn(i,[n[r[0]],n[r[1]],n[r[2]],n[r[3]],n[r[4]],n[r[5]]]);break;case"sultan":o=hn(i,[n[r[0]],n[r[1]],n[r[2]],n[r[3]],n[r[4]]]);break;case"vari":o=fn(i,[n[r[0]],n[r[1]],n[r[2]]]);break;case"mtvi2":o=dn(i,[n[r[0]],n[r[1]],n[r[2]]]);break;case"rtvi-core":o=gn(i,[n[r[0]],n[r[1]],n[r[2]]]);break;case"evi":o=yn(i,[n[r[0]],n[r[1]],n[r[2]]]);break;case"wndwi":o=xn(i,[n[r[0]],n[r[1]],n[r[2]]],r[3]?r[3]+1:.5);break;case"bai":o=vn(i,n[r[0]],n[r[1]]);break;case"custom":o=tn(i,n,e);break;default:return a}const{outputPixelType:u="f32"}=t,c=u!=null&&U(u);let p;i?(p=new Uint8Array(a.width*a.height),p.set(i)):c&&(p=new Uint8Array(a.width*a.height).fill(255)),c&&(o=o.map(f=>{const d=A.createEmptyBand(u,f.length);return ls(f,p,u,d),d}));const m=new A({width:a.width,height:a.height,pixelType:u,pixels:o,mask:p});return m.updateStatistics(),m}function rn(a,t,e,s){const{mask:r,pixels:n,width:i,height:o}=a,u=n[e],c=n[t],p=c.length,m=s?new Uint8Array(p):new Float32Array(p),f=s?100:1,d=s?100.5:0;for(let x=0;x<p;x++)if(r==null||r[x]){const y=u[x],v=c[x],w=y+v;w&&(m[x]=(y-v)/w*f+d)}const g=new A({width:i,height:o,mask:r,pixelType:s?"u8":"f32",pixels:[m]});return g.updateStatistics(),g}function E(a){const t=new Float32Array(9);return t[3*a[0]]=1,t[3*a[1]+1]=1,t[3*a[2]+2]=1,t}function ts(a,t,e){const s=e.length,r=new Float32Array(s);for(let n=0;n<s;n++)if(a==null||a[n]){const i=t[n],o=e[n],u=i+o;u&&(r[n]=(i-o)/u)}return[r]}function nn(a,t,e){const s=e.length,r=new Float32Array(s);for(let n=0;n<s;n++)if(a==null||a[n]){const i=t[n],o=e[n];o&&(r[n]=i/o)}return[r]}function on(a,t,e){const s=t.length,r=new Float32Array(s);for(let n=0;n<s;n++)if(a==null||a[n]){const i=t[n],o=e[n];o&&(r[n]=i/o-1)}return[r]}function an(a,t,e,s){const r=e.length,n=new Float32Array(r);for(let i=0;i<r;i++)if(a==null||a[i]){const o=e[i],u=t[i],c=u+o+s;c&&(n[i]=(u-o)/c*(1+s))}return[n]}function un(a,t,e,s,r,n){const i=e.length,o=new Float32Array(i),u=-r*s+n*(1+s*s);for(let c=0;c<i;c++)if(a==null||a[c]){const p=e[c],m=t[c],f=r*m+p+u;f&&(o[c]=s*(m-s*p-r)/f)}return[o]}function ln(a,t,e){const s=e.length,r=new Float32Array(s);for(let n=0;n<s;n++)if(a==null||a[n]){const i=e[n],o=t[n],u=2*o+1;r[n]=.5*(u-Math.sqrt(u*u-8*(o-i)))}return[r]}function cn(a,t,e){const s=e.length,r=new Float32Array(s);for(let n=0;n<s;n++)if(a==null||a[n]){const i=e[n],o=t[n];if(i!==1&&o+i+.5!==0){const u=(2*(o*o-i*i)+1.5*o+.5*i)/(o+i+.5);r[n]=u*(1-.25*u)-(i-.125)/(1-i)}}return[r]}function pn(a,t,e,s,r){const n=e.length,i=new Float32Array(n),o=1/Math.sqrt(1+s*s);for(let u=0;u<n;u++)if(a==null||a[u]){const c=e[u],p=t[u];i[u]=(p-s*c-r)*o}return[i]}function mn(a,t){const[e,s,r,n,i,o]=t,u=e.length,c=new Float32Array(u);for(let p=0;p<u;p++)(a==null||a[p])&&(c[p]=-.2848*e[p]-.2435*s[p]-.5436*r[p]+.7243*n[p]+.084*i[p]-.18*o[p]);return[c]}function hn(a,t){const[e,s,r,n,i]=t,o=e.length,u=new Float32Array(o),c=new Float32Array(o),p=new Float32Array(o);for(let m=0;m<o;m++)(a==null||a[m])&&(u[m]=i[m]?n[m]/i[m]*100:0,c[m]=e[m]?n[m]/e[m]*100:0,p[m]=r[m]?s[m]/r[m]*(n[m]/r[m])*100:0);return[u,c,p]}function fn(a,t){const[e,s,r]=t,n=e.length,i=new Float32Array(n);for(let o=0;o<n;o++)if(a==null||a[o])for(o=0;o<n;o++){const u=e[o],c=s[o],p=c+u-r[o];p&&(i[o]=(c-u)/p)}return[i]}function dn(a,t){const[e,s,r]=t,n=e.length,i=new Float32Array(n);for(let o=0;o<n;o++)if(a==null||a[o])for(o=0;o<n;o++){const u=e[o],c=s[o],p=r[o],m=Math.sqrt((2*u+1)**2-(6*u-5*Math.sqrt(c))-.5);if(m){const f=1.5*(1.2*(u-p)-2.5*(c-p));i[o]=f/m}}return[i]}function gn(a,t){const[e,s,r]=t,n=e.length,i=new Float32Array(n);for(let o=0;o<n;o++)if(a==null||a[o])for(o=0;o<n;o++){const u=e[o],c=s[o],p=r[o];i[o]=100*(u-c)-10*(u-p)}return[i]}function yn(a,t){const[e,s,r]=t,n=e.length,i=new Float32Array(n);for(let o=0;o<n;o++)if(a==null||a[o])for(o=0;o<n;o++){const u=e[o],c=s[o],p=u+6*c-7.5*r[o]+1;p&&(i[o]=2.5*(u-c)/p)}return[i]}function xn(a,t,e=.5){const[s,r,n]=t,i=r.length,o=new Float32Array(i);for(let u=0;u<i;u++)if(a==null||a[u])for(u=0;u<i;u++){const c=s[u],p=r[u],m=n[u],f=c+e*p+(1-e)*m;f&&(o[u]=(c-e*p-(1-e)*m)/f)}return[o]}function vn(a,t,e){const s=e.length,r=new Float32Array(s);for(let n=0;n<s;n++)if(a==null||a[n])for(n=0;n<s;n++){const i=(.1-t[n])**2+(.06-e[n])**2;i&&(r[n]=1/i)}return[r]}var ae;let Et=ae=class extends O{constructor(){super(...arguments),this.method="custom"}clone(){return new ae({method:this.method,bandIndexes:this.bandIndexes,raster:W(this.raster)})}};l([h({json:{type:String,write:!0}})],Et.prototype,"bandIndexes",void 0),l([X(en)],Et.prototype,"method",void 0),Et=ae=l([P("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],Et);const wn=Et,bn=new Set(["vari","mtvi2","rtvi-core","evi"]);let Rt=class extends G{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0];if(t.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const e=t.clone();return e.pixelType=this.outputPixelType,e.bandCount=this.functionArguments.method==="sultan"?3:1,this._removeStatsHistColormapVAT(e),e.keyProperties={...e.keyProperties,BandProperties:void 0},this.rasterInfo=e,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return e;const{method:s,bandIndexes:r}=this.functionArguments,n=r.split(" ").map(i=>parseFloat(i));return sn(e,{method:s,bandIndexes:n,equation:r,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map(o=>parseFloat(o)-1);t.length===2&&t.push(0);const e=this.isInputBandIdsSwizzled?[0,1,2]:t;let s,r;const n=new Float32Array(3),{method:i}=this.functionArguments;switch(i){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":s=E([e[0],e[1],0]),r="ndxi";break;case"ndwi":s=E([e[1],e[0],0]),r="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":s=E([e[0],e[1],0]),r="sr";break;case"ci-g":case"ci-re":s=E([e[0],e[1],0]),r="ci";break;case"savi":s=E([e[0],e[1],0]),r="savi",n[0]=t[2]+1;break;case"tsavi":s=E([e[0],e[1],0]),r="tsavi",n[0]=t[2]+1,n[1]=t[3]+1,n[2]=t[4]+1;break;case"msavi":s=E([e[0],e[1],0]),r="msavi";break;case"gemi":s=E([e[0],e[1],0]),r="gemi";break;case"pvi":s=E([e[0],e[1],0]),r="tsavi",n[0]=t[2]+1,n[1]=t[3]+1;break;case"vari":s=E([e[0],e[1],e[2]]),r="vari";break;case"mtvi2":s=E([e[0],e[1],e[2]]),r="mtvi";break;case"rtvi-core":s=E([e[0],e[1],e[2]]),r="rtvicore";break;case"evi":s=E([e[0],e[1],e[2]]),r="evi";break;case"wndwi":s=E([e[0],e[1],0]),r="wndwi",n[0]=t[3]?t[3]+1:.5;break;case"bai":s=E([e[1],e[0],0]),r="bai";break;default:s=E([0,1,2]),r="custom"}return{bandIndexMat3:s,indexType:r,adjustments:n,isOutputRounded:U(this.outputPixelType)}}_getInputBandIds(t){if(this.functionArguments.method==="custom")return t;const e=this.functionArguments.bandIndexes.split(" ").map(o=>parseFloat(o)-1),s=t.length,r=e.map(o=>o>=s?s-1:o),n=bn.has(this.functionArguments.method)?3:2,i=r.slice(0,n).map(o=>t[o]);return i.length===2&&i.push(0),i}_swizzleBandIds(t){const e=this.functionArguments.bandIndexes.split(" ").map(n=>parseFloat(n)-1);e.length===2&&e.push(0);const{method:s}=this.functionArguments,r=(["vari","mtvi2","rtvi-core","evi"].includes(s)?e.slice(0,3):s==="bai"||s==="ndwi"?[e[1],e[0]]:e.slice(0,2)).map(n=>t.indexOf(n));return r[2]??=r[1],this.isInputBandIdsSwizzled=!0,this.swizzledBandSelection=r,!1}};l([h({json:{write:!0,name:"rasterFunction"}})],Rt.prototype,"functionName",void 0),l([h({type:wn,json:{write:!0,name:"rasterFunctionArguments"}})],Rt.prototype,"functionArguments",void 0),l([h()],Rt.prototype,"rasterArgumentNames",void 0),Rt=l([P("esri.layers.support.rasterFunctions.BandArithmeticFunction")],Rt);const An=Rt;var ue;const es=new Z({1:"outside",2:"inside"},{useNumericKeys:!0});let Vt=ue=class extends O{constructor(){super(...arguments),this.clippingType="outside"}clone(){return new ue({clippingGeometry:this.clippingGeometry.clone(),clippingType:this.clippingType})}};l([h({types:_s,json:{read:ks,write:!0}})],Vt.prototype,"clippingGeometry",void 0),l([h({json:{read:es.read,write:es.write}})],Vt.prototype,"clippingType",void 0),Vt=ue=l([P("esri.layers.support.rasterFunctions.ClipFunctionArguments")],Vt);const Tn=Vt;let ut=class extends G{constructor(){super(...arguments),this.functionName="Clip",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(t.pixelType),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{functionArguments:e}=this,{clippingGeometry:s,clippingType:r}=e;if(!s)return{success:!1,supportsGPU:!1,error:"missing clipping geometry"};if(r==="outside")try{const{spatialReference:n}=t,i=s.type==="extent"?Ys(s,n):tr(s,n).extent;i&&Qs(t,i)}catch{}return{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}_getWebGLParameters(){const{clippingGeometry:t,clippingType:e}=this.functionArguments;return{clippingGeometry:t.toJSON(),clippingType:e}}};l([h({json:{write:!0,name:"rasterFunction"}})],ut.prototype,"functionName",void 0),l([h({type:Tn,json:{write:!0,name:"rasterFunctionArguments"}})],ut.prototype,"functionArguments",void 0),l([h()],ut.prototype,"rasterArgumentNames",void 0),l([h()],ut.prototype,"isNoopProcess",void 0),ut=l([P("esri.layers.support.rasterFunctions.ClipFunction")],ut);const Pn=ut;var le;let K=le=class extends O{castColormapName(a){if(!a)return null;const t=a.toLowerCase();return Us.includes(t)?t:null}readColorRamp(a){return xs(a)}readColorRampName(a,t){if(!a)return null;const e=Nt.jsonValues.find(s=>s.toLowerCase()===a.toLowerCase());return e?Nt.fromJSON(e):null}clone(){return new le({colormap:W(this.colormap),colormapName:this.colormapName,colorRamp:this.colorRamp?.clone(),colorRampName:this.colorRampName})}};l([h({type:[[Number]],json:{write:!0}})],K.prototype,"colormap",void 0),l([h({type:String,json:{write:!0}})],K.prototype,"colormapName",void 0),l([us("colormapName")],K.prototype,"castColormapName",null),l([h({types:er,json:{write:!0}})],K.prototype,"colorRamp",void 0),l([Wt("colorRamp")],K.prototype,"readColorRamp",null),l([h({type:Nt.apiValues,json:{type:Nt.jsonValues,write:Nt.write}})],K.prototype,"colorRampName",void 0),l([Wt("colorRampName")],K.prototype,"readColorRampName",null),K=le=l([P("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],K);const Fn=K,Nn=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],$n=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function Me(a,t){const e=[],s=[];for(let n=0;n<a.length-1;n++)e.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:a[n].slice(1),toColor:a[n+1].slice(1)}),s.push(a[n+1][0]-a[n][0]);const r=a[a.length-1][0];return hs({type:"multipart",colorRamps:e},{numColors:r,weights:t=t??s})}function In(){return Me([[0,0,191,191],[51,0,0,255],[102,255,0,255],[153,255,0,127],[204,191,63,127],[256,20,20,20]])}function Rn(){const a=Me([[0,255,255,255],[70,0,255,0],[80,205,173,193],[100,150,150,150],[110,120,51,100],[130,120,100,200],[140,28,3,144],[160,6,0,55],[180,10,25,30],[201,6,7,27]]);for(let t=a.length;t<256;t++)a.push([6,27,7]);return a}function kn(){return hs({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]})}function _n(){const a=[];for(let t=0;t<256;t++){const e=[];for(let s=0;s<3;s++)e.push(Math.round(255*Math.random()));a.push(e)}return a}function Cn(){return Me([[0,38,41,54],[69,79,82,90],[131,156,156,156],[256,253,253,241]],[.268,.238,.495])}function Sn(a){let t;switch(a){case"elevation":t=In();break;case"gray":t=kn();break;case"hillshade":t=Cn();break;case"ndvi":t=Nn;break;case"ndvi2":t=Rn();break;case"ndvi3":t=$n;break;case"random":t=_n()}return t?(t=t.map((e,s)=>[s,...e]),t):null}let Q=class extends G{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:e,colormapName:s,colorRamp:r,colorRampName:n}=this.functionArguments;if(!e?.length)if(r)this.colorRamp=r,e=re(r,{interpolateAlpha:!0});else if(n){const u=fs(n);u&&(e=re(u),this.colorRamp=xs(u))}else s&&(e=Sn(s));if(!e?.length)return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};const i=this._getOutputPixelType(t.pixelType);this.outputPixelType=i.startsWith("f")?"s32":i;const o=t.clone();return o.pixelType=this.outputPixelType,o.colormap=e,o.bandCount=1,this.rasterInfo=o,{success:!0,supportsGPU:!0}}_processPixels(t){let e=t.pixelBlocks?.[0];return!e||U(e.pixelType)||(e=e.clone(),e.clamp(this.outputPixelType)),e}};l([h({json:{write:!0,name:"rasterFunction"}})],Q.prototype,"functionName",void 0),l([h({type:Fn,json:{write:!0,name:"rasterFunctionArguments"}})],Q.prototype,"functionArguments",void 0),l([h()],Q.prototype,"rasterArgumentNames",void 0),l([h()],Q.prototype,"isNoopProcess",void 0),l([h({json:{write:!0}})],Q.prototype,"indexedColormap",void 0),l([h()],Q.prototype,"colorRamp",void 0),Q=l([P("esri.layers.support.rasterFunctions.ColormapFunction")],Q);const Bn=Q;var ce;let pe=ce=class extends O{clone(){return new ce({raster:this.raster})}};pe=ce=l([P("esri.layers.support.rasterFunctions.ColormapToRGBFunctionArguments")],pe);const jn=pe;let lt=class extends G{constructor(){super(...arguments),this.functionName="ColormapToRGB",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||!t.colormap?.length)return{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: source data must be single band with a colormap"};const e=t.clone();e.pixelType=this.outputPixelType=this._getOutputPixelType("u8"),this._removeStatsHistColormapVAT(e),e.bandCount=3,e.statistics=[{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20}],this.rasterInfo=e;const s=[...t.colormap].sort((i,o)=>i[0]-o[0]),{indexedColormap:r,offset:n}=cs({colormap:s});return r?(this.lookup={indexedColormap:r,offset:n},{success:!0,supportsGPU:ds(r)}):{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: the colormap is not supported"}}_processPixels(t){let e=t.pixelBlocks?.[0];if(!e||!this.lookup)return e;e=e.clone();const s=e.pixels[0],r=e.mask??new Uint8Array(s.length).fill(255),n=new Uint8Array(s.length),i=new Uint8Array(s.length),o=new Uint8Array(s.length),{indexedColormap:u,offset:c}=this.lookup,p=u.length;for(let m=0;m<s.length;m++)if(r[m]){let f=4*(s[m]-c);f<0||f>p-4?r[m]=0:(n[m]=u[f++],i[m]=u[f++],o[m]=u[f++])}return e.pixels=[n,i,o],e.statistics=[new ee(0,255),new ee(0,255),new ee(0,255)],e.pixelType=this.outputPixelType,e}_getWebGLParameters(){return this.lookup}};l([h({json:{write:!0,name:"rasterFunction"}})],lt.prototype,"functionName",void 0),l([h({type:jn,json:{write:!0,name:"rasterFunctionArguments"}})],lt.prototype,"functionArguments",void 0),l([h()],lt.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}})],lt.prototype,"lookup",void 0),lt=l([P("esri.layers.support.rasterFunctions.ColormapToRGBFunction")],lt);const Mn=lt;var me;let Ut=me=class extends O{constructor(){super(...arguments),this.rasters=[]}writeRasters(a,t){t.rasters=a.map(e=>typeof e=="number"||typeof e=="string"?e:e.toJSON())}clone(){return new me({rasters:W(this.rasters)})}};l([h({json:{write:!0}})],Ut.prototype,"rasters",void 0),l([Yt("rasters")],Ut.prototype,"writeRasters",null),Ut=me=l([P("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],Ut);const Gn=Ut;let kt=class extends G{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();if(s.attributeTable=null,s.colormap=null,s.pixelType=this.outputPixelType,s.bandCount=t.map(({bandCount:n})=>n).reduce((n,i)=>n+i),t.every(({statistics:n})=>n!=null&&n.length)){const n=[];t.forEach(({statistics:i})=>i!=null&&n.push(...i)),s.statistics=n}if(t.every(({histograms:n})=>n!=null&&n.length)){const n=[];t.forEach(({histograms:i})=>i!=null&&n.push(...i)),s.histograms=n}s.multidimensionalInfo&&s.multidimensionalInfo.variables.forEach(n=>{const i=t.map(c=>c.multidimensionalInfo?.variables.find(({name:p})=>p===n.name)),o=i.map(c=>c?.statistics?.length?c.statistics:null),u=i.map(c=>c?.histograms?.length?c.histograms:null);n.statistics=o.every(c=>c!=null)?o.flat():null,n.histograms=u.every(c=>c!=null)?u.flat():null}),s.bandCount>1&&(s.colormap=null,s.attributeTable=null);const r=t.every(n=>n.keyProperties.BandProperties?.length)?t.flatMap(n=>n.keyProperties.BandProperties):void 0;return s.keyProperties={...s.keyProperties,BandProperties:r},this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e?e?.[0]==null?null:Bs(e):null}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};l([h({json:{write:!0,name:"rasterFunction"}})],kt.prototype,"functionName",void 0),l([h({type:Gn,json:{write:!0,name:"rasterFunctionArguments"}})],kt.prototype,"functionArguments",void 0),l([h()],kt.prototype,"rasterArgumentNames",void 0),kt=l([P("esri.layers.support.rasterFunctions.CompositeBandFunction")],kt);const zn=kt,On=new Z({0:"difference",1:"relative-difference",2:"categorical",3:"euclidean-distance",4:"angle-difference",5:"band-with-most-change"},{useNumericKeys:!0}),Dn=new Z({0:"all",1:"changed",2:"unchanged"},{useNumericKeys:!0});function En(a,t,e,s){const[r,n]=a,i=U(e)&&!U(r.pixelType)&&!U(n.pixelType),o=[r.mask,n.mask].filter(g=>g),u=A.combineBandMasks(o),c=a.map(g=>g.pixels[0]),{width:p,height:m}=r,f=A.createEmptyBand(e,p*m);switch(t){case"difference":case"relative-difference":Vn({bands:c,mask:u,outBand:f,isRoundingNeeded:i,isRelative:t==="relative-difference"});break;case"categorical":Un({bands:c,mask:u,outBand:f,...s});break;case"euclidean-distance":Ln({pixels:a.map(g=>g.pixels),mask:u,outBand:f});break;case"angle-difference":Wn({pixels:a.map(g=>g.pixels),mask:u,outBand:f});break;case"band-with-most-change":Hn({pixels:a.map(g=>g.pixels),mask:u,outBand:f})}const d=new A({width:p,height:m,pixels:[f],pixelType:e,mask:u});return d.updateStatistics(),d}function Vn(a){const{bands:[t,e],mask:s,isRelative:r,isRoundingNeeded:n,outBand:i}=a,o=t.length;for(let u=0;u<o;u++)if(!s||s[u]){let c=t[u]-e[u];if(r){const p=Math.max(Math.abs(t[u])-Math.abs(e[u]));c=p>0?c/p:0}i[u]=n?Math.round(c):c}}function Un(a){const{bands:[t,e],categoryIndexLookups:[s,r],classNames:[n,i],mask:o,keepMethod:u,outBand:c}=a,p=t.length,m=n.length,f=i.length,d=m*f,g=d+1,x=d+2;for(let y=0;y<p;y++)if(!o||o[y]){const v=t[y],w=e[y],F=s[v],b=r[w],$=n[F],T=i[b];c[y]=F==null||b==null?d:u==="changed"&&$===T?g:u==="unchanged"&&$!==T?x:F*f+b}}function Ln(a){const{pixels:[t,e],mask:s,outBand:r}=a,n=t[0].length,i=t.length;for(let o=0;o<n;o++)if(!s||s[o]){let u=0;for(let c=0;c<i;c++){const p=t[c][o]-e[c][o];u+=p*p}r[o]=Math.sqrt(u)}}function Wn(a){const{pixels:[t,e],mask:s,outBand:r}=a,n=t[0].length,i=t.length;for(let o=0;o<n;o++)if(!s||s[o]){let u=0,c=0,p=0;for(let f=0;f<i;f++){const d=t[f][o],g=e[f][o];u+=d*g,c+=d*d,p+=g*g}const m=Math.sqrt(c*p);r[o]=m?Math.acos(u/m):1.5707963267948966}}function Hn(a){const{pixels:[t,e],mask:s,outBand:r}=a,n=t[0].length,i=t.length;for(let o=0;o<n;o++)if(!s||s[o]){let u=0,c=0;for(let p=0;p<i;p++){const m=Math.abs(t[p][o]-e[p][o]);m>u&&(u=m,c=p)}r[o]=c}}var he;let ct=he=class extends O{constructor(){super(...arguments),this.method="difference",this.keepMethod="all",this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new he({raster:this.raster,raster2:this.raster2,method:this.method,keepMethod:this.keepMethod})}};l([X(On)],ct.prototype,"method",void 0),l([X(Dn)],ct.prototype,"keepMethod",void 0),l([h({json:{write:!0}})],ct.prototype,"raster2",void 0),l([h({readOnly:!0})],ct.prototype,"rasters",null),ct=he=l([P("esri.layers.support.rasterFunctions.ComputeChangeFunctionArguments")],ct);const qn=ct;let pt=class extends G{constructor(){super(...arguments),this.functionName="ComputeChange",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{method:t}=this.functionArguments,e=this.sourceRasterInfos[0].clone();if(this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),t==="categorical"){const s=this.sourceRasterInfos.map(i=>i.attributeTable),r=this._getFieldNames(s,"value"),n=s.map(i=>this._getClassFieldName(i));if(r[0]==null||r[1]==null||n[0]==null||n[1]==null)return{success:!1,supportsGPU:!1,error:"both inputs must have proper attribute table with value and class fields"};this._updateAttributeTable(e,r,n)}return e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:t==="difference"||t==="relative-difference"}}_processPixels(t){const{pixelBlocks:e}=t;if(e?.[0]==null||e?.[1]==null)return null;const{method:s}=this.functionArguments;return En(e,s,this.outputPixelType,this._categoryConfig)}_getWebGLParameters(){const t=this.outputPixelType??"f32";let[e,s]=it(t);const r=U(t);return r&&(e-=1e-4,s+=1e-4),{method:this.functionArguments.method,domainRange:[e,s],isOutputRounded:r}}_updateAttributeTable(t,e,s){const r=this.sourceRasterInfos.map(b=>b.attributeTable),n=r.map((b,$)=>b.features.map(T=>T.attributes[e[$]])),i=r.map((b,$)=>b.features.map(T=>T.attributes[s[$]])),o=n.map(b=>{const $=[];return b.forEach((T,N)=>$[T]=N),$}),{keepMethod:u}=this.functionArguments;this._categoryConfig={categoryIndexLookups:o,classNames:i,keepMethod:u};const c=r[0].clone();c.fields=[new et({name:"OID",type:"oid"}),new et({name:"Value",type:"integer"}),new et({name:"ClassName",type:"string"}),new et({name:"Class_From",type:"string"}),new et({name:"Class_To",type:"string"})];const p=this._getFieldNames(r,"red"),m=this._getFieldNames(r,"green"),f=this._getFieldNames(r,"blue"),d=[],g=p.length===2&&m.length===2&&f.length===2;g&&(d.push(...r.map((b,$)=>b.features.map(T=>[T.attributes[p[$]],T.attributes[m[$]],T.attributes[f[$]]]))),c.fields.push(new et({name:"Red",type:"integer"}),new et({name:"Green",type:"integer"}),new et({name:"Blue",type:"integer"})));const x=c.features[0].clone();x.geometry=null;const y=[],[v,w]=n.map(b=>b.length);let F=1;for(let b=0;b<v;b++){const $=i[0][b];for(let T=0;T<w;T++){const N=i[1][T];if(u==="changed"&&$===N||u==="unchanged"&&$!==N)continue;const R=x.clone();R.attributes={OID:F++,Value:b*w+T,ClassName:$===N?$:`${$} -> ${N}`,Class_From:$,Class_To:N},g&&(R.attributes.Red=d[0][b][0]+d[1][T][0]>>1,R.attributes.Green=d[0][b][1]+d[1][T][1]>>1,R.attributes.Blue=d[0][b][2]+d[1][T][2]>>1),y.push(R)}}if(u==="changed"){const b=x.clone();b.attributes={OID:F++,Value:v*w+1,ClassName:"No Change",Class_From:"Same",Class_To:"Same"},y.push(b)}else if(u==="unchanged"){const b=x.clone();b.attributes={OID:F++,Value:v*w+2,ClassName:"Changed",Class_From:"Any",Class_To:"Any"},y.push(b)}c.features=y,t.attributeTable=c}_getFieldNames(t,e){return t.map(({fields:s})=>s.find(r=>r.name.toLowerCase()===e)?.name).filter(s=>s)}_getClassFieldName(t){return(t.fields.find(s=>s.type==="string"&&s.name.toLowerCase().startsWith("class"))??t.fields.find(s=>s.type==="string"&&s.name.toLowerCase().includes("class")||s.name.toLowerCase().includes("type")||s.name.toLowerCase().includes("name"))??t.fields.find(s=>s.type==="string"))?.name}};l([h({json:{write:!0,name:"rasterFunction"}})],pt.prototype,"functionName",void 0),l([h({type:qn,json:{write:!0,name:"rasterFunctionArguments"}})],pt.prototype,"functionArguments",void 0),l([h()],pt.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}})],pt.prototype,"_categoryConfig",void 0),pt=l([P("esri.layers.support.rasterFunctions.ComputeChangeFunction")],pt);const Jn=pt;var fe;let Lt=fe=class extends O{constructor(){super(...arguments),this.contrastOffset=0,this.brightnessOffset=0}clone(){return new fe({contrastOffset:this.contrastOffset,brightnessOffset:this.brightnessOffset,raster:this.raster})}};l([h({json:{write:!0}})],Lt.prototype,"contrastOffset",void 0),l([h({json:{write:!0}})],Lt.prototype,"brightnessOffset",void 0),Lt=fe=l([P("esri.layers.support.rasterFunctions.ContrastBrightnessFunctionArguments")],Lt);const Kn=Lt;let mt=class extends G{constructor(){super(...arguments),this.functionName="ContrastBrightness",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];if(e.pixelType!=="u8")return{success:!1,supportsGPU:!1,error:"Only unsigned 8 bit raster is supported by ContrastBrightness function."};this.outputPixelType=this._getOutputPixelType("u8");const s=e.clone();this._removeStatsHistColormapVAT(s),this.rasterInfo=s;const{contrastOffset:r,brightnessOffset:n}=this.functionArguments;return this.lookup=Ls(r,n),{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];return e==null?null:Se(e,{lut:e.pixels.map(()=>this.lookup),offset:0,outputPixelType:"u8"})}_getWebGLParameters(){const{contrastOffset:t,brightnessOffset:e}=this.functionArguments;return{contrastOffset:t,brightnessOffset:e}}};l([h({json:{write:!0,name:"rasterFunction"}})],mt.prototype,"functionName",void 0),l([h({type:Kn,json:{write:!0,name:"rasterFunctionArguments"}})],mt.prototype,"functionArguments",void 0),l([h()],mt.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}})],mt.prototype,"lookup",void 0),mt=l([P("esri.layers.support.rasterFunctions.ContrastBrightnessFunction")],mt);const Xn=mt;function Ge(a,t,e,s,r){const n=Math.floor(s/2);for(let o=0;o<n;o++)for(let u=0;u<t;u++)a[o*t+u]=a[(r-1-o)*t+u],a[(e-1-o)*t+u]=a[(e-r+o)*t+u];const i=Math.floor(r/2);for(let o=0;o<e;o++){const u=o*t;for(let c=0;c<i;c++)a[u+c]=a[u+r-1-c],a[u+t-c-1]=a[u+t+c-r]}}const j=new Map;function Zn(a){const t=Math.sqrt(a.length),e=a.slice(0,t),s=[1];for(let r=1;r<t;r++){let n=null;for(let i=0;i<t;i++){const o=a[i+r*t],u=a[i];if(n==null)if(u===0){if(o)return{separable:!1,row:null,col:null}}else n=o/u;else if(o/u!==n)return{separable:!1,row:null,col:null}}if(n==null)return{separable:!1,row:null,col:null};s.push(n)}return{separable:!0,row:e,col:s}}function ss(a,t,e,s,r,n,i){const o=new Float32Array(t*e),u=n.length,c=i?0:s,p=i?s:0,m=i?1:t;for(let f=c;f<e-c;f++){const d=f*t;for(let g=p;g<t-p;g++){if(r&&!r[d+g])continue;let x=0;for(let y=0;y<u;y++)x+=a[d+g+(y-s)*m]*n[y];o[d+g]=x}}return o}function Qn(a,t,e,s,r,n,i){const o=new Float32Array(t*e),u=Math.floor(s/2),c=Math.floor(r/2);for(let p=u;p<e-u;p++){const m=p*t;for(let f=c;f<t-c;f++){if(n&&!n[m+f])continue;let d=0;for(let g=0;g<s;g++)for(let x=0;x<r;x++)d+=a[m+f+(g-u)*t+x-c]*i[g*r+x];o[m+f]=d}}return o}function Yn(a,t,e=!0){const{pixels:s,width:r,height:n,pixelType:i,mask:o}=a,u=s.length,c=[],{kernel:p,rows:m,cols:f}=t;for(let d=0;d<u;d++){const g=Qn(s[d],r,n,m,f,o,p);e&&Ge(g,r,n,m,f),c.push(g)}return new A({width:r,height:n,pixelType:i,pixels:c,mask:o})}function to(a,t,e,s=!0){const{pixels:r,width:n,height:i,pixelType:o,mask:u}=a,c=r.length,p=[],m=t.length,f=e.length,d=Math.floor(m/2),g=Math.floor(f/2);for(let x=0;x<c;x++){let y=ss(r[x],n,i,d,u,t,!0);y=ss(y,n,i,g,u,e,!1),s&&Ge(y,n,i,m,f),p.push(y)}return new A({width:n,height:i,pixelType:o,pixels:p,mask:u})}function eo(a,t){const e=Zn(t.kernel),s=t.mirrorEdges!==!1,r=e.separable?to(a,e.row,e.col,s):Yn(a,t,s),{outputPixelType:n}=t;return n&&r.clamp(n),r}j.set(k.none,[0,0,0,0,1,0,0,0,0]),j.set(k.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),j.set(k.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),j.set(k.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),j.set(k.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),j.set(k.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),j.set(k.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),j.set(k.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),j.set(k.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),j.set(k.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),j.set(k.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),j.set(k.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),j.set(k.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),j.set(k.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),j.set(k.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),j.set(k.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),j.set(k.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),j.set(k.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),j.set(k.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),j.set(k.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),j.set(k.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),j.set(k.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),j.set(k.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);var de;let ht=de=class extends O{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(a){this._set("convolutionType",a);const t=j.get(a);if(!t||a===k.userDefined||a===k.none)return;const e=Math.sqrt(t.length);this._set("kernel",t),this._set("cols",e),this._set("rows",e)}clone(){return new de({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:W(this.raster)})}};l([h({json:{type:Number,write:!0}})],ht.prototype,"rows",void 0),l([h({json:{type:Number,write:!0}})],ht.prototype,"cols",void 0),l([h({json:{name:"type",type:Number,write:!0}})],ht.prototype,"convolutionType",null),l([h({json:{type:[Number],write:!0}})],ht.prototype,"kernel",void 0),ht=de=l([P("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],ht);const so=ht,rs=25;let ft=class extends G{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}get _normalizedKernel(){const{kernel:t,convolutionType:e}=this.functionArguments,s=t.reduce((r,n)=>r+n);return e===-1||s===0||s===1?t:t.map(r=>r/s)}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:s,kernel:r}=this.functionArguments;if(!Object.values(k).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==k.none&&e*s!==r.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const n=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(n.pixelType);const i=n.clone();i.pixelType=this.outputPixelType;const o=[k.none,k.sharpen,k.sharpen2,k.sharpening3x3,k.sharpening5x5];return(t===-1||this.outputPixelType!=="u8"&&!o.includes(t))&&(i.statistics=null,i.histograms=null),i.colormap=null,i.attributeTable=null,this.rasterInfo=i,{success:!0,supportsGPU:r.length<=rs}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null||this.functionArguments.convolutionType===k.none)return e;const{rows:s,cols:r}=this.functionArguments,{_normalizedKernel:n}=this;return eo(e,{kernel:n,rows:s,cols:r,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=new Float32Array(rs),{rows:e,cols:s}=this.functionArguments,{_normalizedKernel:r}=this;for(let n=0;n<e;n++)for(let i=0;i<s;i++)t[5*n+i]=r[n*s+i];return{kernelRows:e,kernelCols:s,kernel:t,clampRange:it(this.outputPixelType)}}};l([h({json:{write:!0,name:"rasterFunction"}})],ft.prototype,"functionName",void 0),l([h({type:so,json:{write:!0,name:"rasterFunctionArguments"}})],ft.prototype,"functionArguments",void 0),l([h()],ft.prototype,"rasterArgumentNames",void 0),l([h()],ft.prototype,"_normalizedKernel",null),ft=l([P("esri.layers.support.rasterFunctions.ConvolutionFunction")],ft);const ro=ft;var ge;const Ps=new Z({0:"standard",1:"planform",2:"profile"},{useNumericKeys:!0});let _t=ge=class extends O{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(a,t){return Ps.fromJSON(t.type??t.curvatureType??0)}clone(){return new ge({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};l([h({json:{write:{target:"type"}}}),X(Ps)],_t.prototype,"curvatureType",void 0),l([Wt("curvatureType",["type","curvatureType"])],_t.prototype,"readCurvatureType",null),l([h({type:Number,json:{write:!0}})],_t.prototype,"zFactor",void 0),_t=ge=l([P("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],_t);const no=_t;let dt=class extends G{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.bandCount=1,this._removeStatsHistColormapVAT(t),this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{zFactor:s,curvatureType:r}=this.functionArguments,{extent:n,primaryPixelSizes:i}=t,o=i?.[0],u=o??(n?{x:n.width/e.width,y:n.height/e.height}:{x:1,y:1}),c=this.isGCS&&s>=1?s*Ht:s;return Ws(e,{zFactor:c,curvatureType:r,resolution:u})}_getWebGLParameters(){const{zFactor:t,curvatureType:e}=this.functionArguments;return{curvatureType:e,zFactor:this.isGCS&&t>=1?t*Ht:t}}};l([h({json:{write:!0,name:"rasterFunction"}})],dt.prototype,"functionName",void 0),l([h({type:no,json:{write:!0,name:"rasterFunctionArguments"}})],dt.prototype,"functionArguments",void 0),l([h()],dt.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}})],dt.prototype,"isGCS",void 0),dt=l([P("esri.layers.support.rasterFunctions.CurvatureFunction")],dt);const oo=dt;var ye;let Y=ye=class extends O{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=ps.bestMatch}clone(){return new ye({bandIds:this.bandIds?.slice(),bandNames:this.bandNames?.slice(),bandWavelengths:this.bandWavelengths?.slice(),missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};l([h({json:{write:!0}})],Y.prototype,"bandIds",void 0),l([h({json:{write:!0}})],Y.prototype,"bandNames",void 0),l([h({json:{write:!0}})],Y.prototype,"bandWavelengths",void 0),l([X({0:"name",1:"wavelength",2:"id"})],Y.prototype,"method",void 0),l([h({json:{write:!0}})],Y.prototype,"missingBandAction",void 0),l([h({json:{write:!0}})],Y.prototype,"wavelengthMatchTolerance",void 0),Y=ye=l([P("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],Y);const io=Y;let Ct=class extends G{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{functionArguments:t,sourceRasterInfos:e}=this,s=e[0],{method:r,bandNames:n,bandWavelengths:i,bandIds:o,missingBandAction:u}=t,c=n?.length&&(r==="name"||r!=="id"&&!o?.length),p=i?.length&&(r==="wavelength"||r!=="id"&&!o?.length),m=u===ps.fail,f=c?uo(s,n):p?co(s,i,this.functionArguments,m):lo(s,o,m);if(f==null)return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${c?"band names":p?"band wavelengths":"band ids"} for the imagery data source`};this.functionArguments.bandIds=f,this.functionArguments.method="id",this.outputPixelType=this._getOutputPixelType("f32");const d=s.clone();d.pixelType=this.outputPixelType,d.bandCount=f.length;const{statistics:g,histograms:x}=d;g!=null&&g.length&&(d.statistics=f.map(v=>g[v]||g[g.length-1])),x!=null&&x.length&&(d.histograms=f.map(v=>x[v]||x[x.length-1])),d.multidimensionalInfo&&d.multidimensionalInfo.variables.forEach(v=>{const{statistics:w,histograms:F}=v;w!=null&&w.length&&(v.statistics=f.map(b=>w[b]||w[w.length-1])),F!=null&&F.length&&(v.histograms=f.map(b=>F[b]||F[F.length-1]))});let y=d.keyProperties?.BandProperties;return y?.length&&(y=f.map(v=>v>=y.length?y[y.length-1]:y[v]),d.keyProperties={...d.keyProperties,BandProperties:y}),this.rasterInfo=d,{success:!0,supportsGPU:d.bandCount<=3}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const s=e.pixels.length,r=this.functionArguments.bandIds.map(n=>n>=s?s-1:n);return e.extractBands(r)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],t.length===0?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let e=0;e<3;e++)t[e]=Math.min(t[e],2)}return{bandIndexMat3:E(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map(s=>s>=e?e-1:s).map(s=>t[s])}_swizzleBandIds(t){const e=this.functionArguments.bandIds.map(s=>t.indexOf(s));return this.isInputBandIdsSwizzled=!0,e[1]??=e[0],e[2]??=e[1],this.swizzledBandSelection=e,!1}};l([h({json:{write:!0,name:"rasterFunction"}})],Ct.prototype,"functionName",void 0),l([h({type:io,json:{write:!0,name:"rasterFunctionArguments"}})],Ct.prototype,"functionArguments",void 0),l([h()],Ct.prototype,"rasterArgumentNames",void 0),Ct=l([P("esri.layers.support.rasterFunctions.ExtractBandFunction")],Ct);const ao=Ct;function uo(a,t){const e=a.bandInfos.map(({name:r})=>r.toLowerCase()),s=[];for(let r=0;r<t.length;r++){const n=t[r].toLowerCase();let i=e.indexOf(n);if(i===-1&&n==="nearinfrared"&&(i=e.findIndex(o=>o.startsWith("nearinfrared_1")),i===-1&&(i=e.findIndex(o=>o.startsWith("nearinfrared")))),i===-1)return null;s.push(i)}return s}function lo(a,t,e){const{bandCount:s}=a;return!t?.length||e&&t.some(r=>r<0||r>=s)?null:t}function co(a,t,{wavelengthMatchTolerance:e},s){const{bandInfos:r}=a,n=[];for(let o=0;o<r.length;o++){const{minWavelength:u,maxWavelength:c}=r[o];if(!u||!c)return null;n.push({minWavelength:u,maxWavelength:c})}const i=[];for(let o=0;o<t.length;o++){const u=t[o];let c=!1,p=-1,m=Number.MAX_VALUE;for(let f=0;f<n.length;f++){const d=n[f],g=u>=d.minWavelength&&u<=d.maxWavelength,x=Math.abs(u-(d.minWavelength+d.maxWavelength)/2);g?x<m&&(c=!0,p=f,m=x):!c&&x<m&&(p=f,m=x)}if(!c&&e&&m<e&&(c=!0),!c&&s)return null;i.push(p)}return i}function po(a,t,e){const{pixels:s,width:r,height:n,mask:i,bandMasks:o}=a,u=r*n,c=o?.length?A.combineBandMasks(o):i,p=Math.min(t.length,s.length),m=e.startsWith("f"),f=!m&&e!==a.pixelType,[d,g]=it(e),x=A.createEmptyBand(e,u);for(let v=0;v<n;v++){let w=v*r;for(let F=0;F<r;F++,w++)if(!c||c[w]){let b=0;for(let $=0;$<p;$++)b+=t[$]*s[$][w];m||(b=Math.round(b),f&&(b=b>g?g:b<d?d:b)),x[w]=b}}const y=new A({width:r,height:n,pixels:[x],pixelType:e,mask:c});return y.updateStatistics(),y}var xe;let Kt=xe=class extends O{clone(){return new xe({conversionParameters:[...this.conversionParameters],raster:this.raster})}};l([h({type:[Number],json:{write:!0}})],Kt.prototype,"conversionParameters",void 0),Kt=xe=l([P("esri.layers.support.rasterFunctions.GrayscaleFunctionArguments")],Kt);const mo=Kt;let gt=class extends G{constructor(){super(...arguments),this.functionName="Grayscale",this.functionArguments=null,this.rasterArgumentNames=["raster"]}get _normalizedWeights(){const{conversionParameters:t}=this.functionArguments,e=t.reduce((s,r)=>s+r);return t.map(s=>s/e)}_bindSourceRasters(){const{conversionParameters:t}=this.functionArguments;if(!t?.length)return{success:!1,supportsGPU:!1,error:"missing valid conversion parameters."};const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType;const s=t.length===3||e.bandCount===3&&t.length>3;return e.bandCount=1,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:s}}_processPixels(t){const e=t.pixelBlocks?.[0];return e==null?null:po(e,this._normalizedWeights,this.outputPixelType)}_getWebGLParameters(){return{weights:this._normalizedWeights}}};l([h({json:{write:!0,name:"rasterFunction"}})],gt.prototype,"functionName",void 0),l([h({type:mo,json:{write:!0,name:"rasterFunctionArguments"}})],gt.prototype,"functionArguments",void 0),l([h()],gt.prototype,"rasterArgumentNames",void 0),l([h()],gt.prototype,"_normalizedWeights",null),gt=l([P("esri.layers.support.rasterFunctions.GrayscaleFunction")],gt);const ho=gt;var ve;const fo=new Z({0:"traditional",1:"multi-directional"},{useNumericKeys:!0}),go=new Z({1:"degree",2:"percent-rise",3:"scaled"},{useNumericKeys:!0});let q=ve=class extends O{constructor(){super(...arguments),this.altitude=45,this.azimuth=315,this.hillshadeType="traditional",this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.slopeType="degree",this.zFactor=1,this.removeEdgeEffect=!1}clone(){return new ve({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};l([h({type:Number,json:{write:!0}})],q.prototype,"altitude",void 0),l([h({type:Number,json:{write:!0}})],q.prototype,"azimuth",void 0),l([h(),X(fo)],q.prototype,"hillshadeType",void 0),l([h({type:Number,json:{write:!0,name:"psPower"}})],q.prototype,"pixelSizePower",void 0),l([h({type:Number,json:{write:!0,name:"psZFactor"}})],q.prototype,"pixelSizeFactor",void 0),l([h(),X(go)],q.prototype,"slopeType",void 0),l([h({type:Number,json:{write:!0}})],q.prototype,"zFactor",void 0),l([h({type:Boolean,json:{write:!0}})],q.prototype,"removeEdgeEffect",void 0),q=ve=l([P("esri.layers.support.rasterFunctions.HillshadeFunctionArguments")],q);const Fs=q;let yt=class extends G{constructor(){super(...arguments),this.functionName="Hillshade",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"hillshade-function: source data must be single band"};this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone();return this._removeStatsHistColormapVAT(e),e.pixelType=this.outputPixelType,e.bandCount=1,e.statistics=[{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=e,this.isGCS=e.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(!e)return null;const{extent:s,primaryPixelSizes:r}=t,n=r?.[0],i=n??(s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1}),o=Zt(this.functionArguments,i,this.isGCS),u=gs(e,o);return u.pixelType=this.outputPixelType,u}_getWebGLParameters(){const t=Zt(this.functionArguments,{x:1,y:1},this.isGCS),e=ys(t),{slopeType:s,zFactor:r,pixelSizeFactor:n,pixelSizePower:i}=this.functionArguments,o=s==="scaled",u=U(this.outputPixelType);return{...e,zFactor:r,gcsFactor:this.isGCS?Ht:1,pixelSizeFactor:o?n:0,pixelSizePower:o?i:0,isOutputRounded:u}}};l([h({json:{write:!0,name:"rasterFunction"}})],yt.prototype,"functionName",void 0),l([h({type:Fs,json:{write:!0,name:"rasterFunctionArguments"}})],yt.prototype,"functionArguments",void 0),l([h()],yt.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}})],yt.prototype,"isGCS",void 0),yt=l([P("esri.layers.support.rasterFunctions.HillshadeFunction")],yt);const yo=yt;var we;let xt=we=class extends O{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(a,t){t.rasters=a.map(e=>typeof e=="number"||typeof e=="string"?e:e.toJSON())}clone(){return new we({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:W(this.rasters)})}};l([h({json:{write:!0}})],xt.prototype,"operation",void 0),l([h({json:{write:!0}})],xt.prototype,"rasters",void 0),l([Yt("rasters")],xt.prototype,"writeRasters",null),l([h({json:{write:!0}})],xt.prototype,"processAsMultiband",void 0),xt=we=l([P("esri.layers.support.rasterFunctions.LocalFunctionArguments")],xt);const xo=xt;let St=class extends G{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:s}=e,{processAsMultiband:r}=this.functionArguments;if(t.some(c=>c.bandCount!==s))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:n,rasters:i}=this.functionArguments,o=Ee[n];if(!(o===999||i.length===o||i.length<=1&&o===1))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${o}`};const u=e.clone();return u.bandCount=o!==999||r?s:1,this._removeStatsHistColormapVAT(u),this._updateStatistics(u),this._updatePixelType(u),this.rasterInfo=u,{success:!0,supportsGPU:u.bandCount===1&&o<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e==null||e.some(s=>s==null)?null:Ts(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=Ee[t],s=Object.keys(Oe).find(u=>Oe[u]===t)?.toLowerCase()??"undefined",r=this.outputPixelType??"f32";let[n,i]=it(r);const o=U(r);return o&&(n-=1e-4,i+=1e-4),{imageCount:e,operationName:s,domainRange:[n,i],isOutputRounded:o}}_updateStatistics(t){const e=this.sourceRasterInfos[0],{operation:s}=this.functionArguments,r=De(s)?.domain;if(r){t.statistics=[];for(let n=0;n<t.bandCount;n++)t.statistics[n]={min:r[0],max:r[1],avg:(r[0]+r[1])/2,stddev:(r[0]+r[1])/10}}else s===45&&e.statistics?.length&&(t.statistics=e.statistics.map(n=>({min:-n.max,max:-n.min,avg:n.avg!=null?-n.avg:void 0,stddev:n.stddev!=null?-n.stddev:void 0})))}_updatePixelType(t){const{statistics:e,pixelType:s}=this.sourceRasterInfos[0],{operation:r}=this.functionArguments,{domain:n,isInteger:i}=De(r)??{domain:null,isInteger:!1};let o="f32";if(n&&i)o=te(n[0],n[1]);else if(r===30){const u=e?.[0];o=u?te(u.min,u.max):U(s)?s:"s32"}else if(r===45&&U(s)){const u=e?.map(({max:f})=>-f),c=e?.map(({min:f})=>-f),p=u?.length?Math.min(...u):null,m=c?.length?Math.min(...c):null;o=p!=null&&m!=null?te(p,m):s.startsWith("s")?s.replace("s","u"):s==="u1"||s==="u2"||s==="u4"?"s8":s==="u8"?"s16":"s32"}t.pixelType=this.outputPixelType=this._getOutputPixelType(o)}};l([h({json:{write:!0,name:"rasterFunction"}})],St.prototype,"functionName",void 0),l([h({type:xo,json:{write:!0,name:"rasterFunctionArguments"}})],St.prototype,"functionArguments",void 0),l([h()],St.prototype,"rasterArgumentNames",void 0),St=l([P("esri.layers.support.rasterFunctions.LocalFunction")],St);const vo=St;var be;let vt=be=class extends O{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=ms.matchAny}get normalizedNoDataValues(){const{noDataValues:a}=this;if(!a?.length)return null;let t=!1;const e=a.map(s=>{if(typeof s=="number")return t=!0,[s];if(typeof s=="string"){const r=s.trim().split(" ").filter(n=>n.trim()!=="").map(n=>Number(n));return t=t||r.length>0,r.length===0?null:r}return null});return t?e:null}clone(){return new be({includedRanges:this.includedRanges?.slice()??[],noDataValues:this.noDataValues?.slice()??[],noDataInterpretation:this.noDataInterpretation})}};l([h({json:{write:!0}})],vt.prototype,"includedRanges",void 0),l([h({json:{write:!0}})],vt.prototype,"noDataValues",void 0),l([h()],vt.prototype,"normalizedNoDataValues",null),l([h({json:{write:!0}})],vt.prototype,"noDataInterpretation",void 0),vt=be=l([P("esri.layers.support.rasterFunctions.MaskFunctionArguments")],vt);const wo=vt;let wt=class extends G{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:s,normalizedNoDataValues:r}=this.functionArguments;if(!s?.length&&!r?.length)return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let n=[];for(let o=0;o<t.bandCount;o++){const u=js(e,s?.slice(2*o,2*o+2),r?.[o]);if(u==null){n=null;break}n.push(u)}this.lookups=n;const i=r!=null&&r.every(o=>o?.length===r[0]?.length);return{success:!0,supportsGPU:(!s||s.length<=2*zt)&&(!r||i&&r[0].length<=zt)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{outputPixelType:s,lookups:r}=this,{includedRanges:n,noDataInterpretation:i,normalizedNoDataValues:o}=this.functionArguments,u=i===ms.matchAll;return Ms(e,{includedRanges:n,noDataValues:o,outputPixelType:s,matchAll:u,lookups:r})}_getWebGLParameters(){const{includedRanges:t,normalizedNoDataValues:e}=this.functionArguments,s=new Float32Array(zt);s.fill(qt),e?.[0]?.length&&s.set(e[0]);const r=new Float32Array(6);for(let n=0;n<r.length;n+=2)r[n]=t?.[n]??-qt,r[n+1]=t?.[n+1]??qt;return t?.length&&r.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:s,includedRanges:r}}};l([h({json:{write:!0,name:"rasterFunction"}})],wt.prototype,"functionName",void 0),l([h({type:wo,json:{write:!0,name:"rasterFunctionArguments"}})],wt.prototype,"functionArguments",void 0),l([h()],wt.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}})],wt.prototype,"lookups",void 0),wt=l([P("esri.layers.support.rasterFunctions.MaskFunction")],wt);const bo=wt;var Ae;let Bt=Ae=class extends O{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:a,infraredBandID:t,scientificOutput:e}=this;return new Ae({visibleBandID:a,infraredBandID:t,scientificOutput:e})}};l([h({json:{write:!0}})],Bt.prototype,"visibleBandID",void 0),l([h({json:{write:!0}})],Bt.prototype,"infraredBandID",void 0),l([h({json:{write:!0}})],Bt.prototype,"scientificOutput",void 0),Bt=Ae=l([P("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],Bt);const Ao=Bt;let jt=class extends G{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:e,infraredBandID:s}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const r=this.sourceRasterInfos[0],n=Math.max(e,s);if(r.bandCount<2||n>=r.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};if(e<0||s<0)return{success:!1,supportsGPU:!1,error:"ndvi-function: invalid visible or infrared band id"};const i=r.clone();i.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(i),i.bandCount=1,i.keyProperties={...i.keyProperties,BandProperties:void 0};const[o,u,c,p]=t?[-1,1,0,.1]:[0,200,100,10];return i.statistics=[{min:o,max:u,avg:c,stddev:p}],this.rasterInfo=i,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{visibleBandID:s,infraredBandID:r,scientificOutput:n}=this.functionArguments;return rn(e,s,r,!n)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this.functionArguments,r=this.isInputBandIdsSwizzled?[0,1,2]:[e,t,0];return{bandIndexMat3:E(r),scaled:!s}}_getInputBandIds(t){const{visibleBandID:e,infraredBandID:s}=this.functionArguments;return[s,e,0].map(r=>t[r])}_swizzleBandIds(t){const{visibleBandID:e,infraredBandID:s}=this.functionArguments,r=[e,s].map(n=>t.indexOf(n));return r[2]=r[1],this.isInputBandIdsSwizzled=!0,this.swizzledBandSelection=r,!1}};l([h({json:{write:!0,name:"rasterFunction"}})],jt.prototype,"functionName",void 0),l([h({type:Ao,json:{write:!0,name:"rasterFunctionArguments"}})],jt.prototype,"functionArguments",void 0),l([h()],jt.prototype,"rasterArgumentNames",void 0),jt=l([P("esri.layers.support.rasterFunctions.NDVIFunction")],jt);const To=jt;var Te;let tt=Te=class extends O{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new Te({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};l([h({json:{write:!0}})],tt.prototype,"inputRanges",void 0),l([h({json:{write:!0}})],tt.prototype,"outputValues",void 0),l([h({json:{write:!0}})],tt.prototype,"noDataRanges",void 0),l([h({json:{write:!0}})],tt.prototype,"allowUnmatched",void 0),l([h({json:{write:!0}})],tt.prototype,"replacementValue",void 0),l([h({json:{write:!0}})],tt.prototype,"isLastInputRangeInclusive",void 0),tt=Te=l([P("esri.layers.support.rasterFunctions.RemapFunctionArguments")],tt);const Po=tt;let bt=class extends G{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const a=this.sourceRasterInfos[0].clone(),{pixelType:t}=a;a.bandCount=1;const{statistics:e}=a;this._removeStatsHistColormapVAT(a);const{allowUnmatched:s,replacementValue:r,outputValues:n,inputRanges:i,noDataRanges:o,isLastInputRangeInclusive:u}=this.functionArguments,c=this.outputPixelType==="unknown"||this.outputPixelType==null;if(this.outputPixelType=this._getOutputPixelType(t),n?.length){const p=e?.[0];if(s&&r==null){let m=p?.min??n[0],f=p?.max??n[0];m=Math.min.apply(null,[...n,m]),f=Math.max.apply(null,[...n,f]),a.statistics=[{min:m,max:f,avg:p?.avg??0,stddev:p?.stddev??-1}]}else{let m=n[0],f=m;for(let d=0;d<n.length;d++)m=m>n[d]?n[d]:m,f=f>n[d]?f:n[d];s&&r!=null&&(m=Math.min(m,r),f=Math.max(f,r)),a.statistics=[{min:m,max:f,avg:p?.avg??0,stddev:p?.stddev??-1}]}if(c){const{min:m,max:f}=a.statistics[0],d=["u8","s8","u16","s16","u32","s32","f32"],g=d.find(x=>{const[y,v]=it(x);return m>=y&&f<=v})??"f64";n.some(x=>Math.floor(x)!==x)?this.outputPixelType=g==="f64"?"f64":"f32":this.outputPixelType=s&&r==null&&d.indexOf(t)>d.indexOf(g)?t:g}}return a.pixelType=this.outputPixelType,this.rasterInfo=a,this.lookup=s?null:Gs({srcPixelType:t,inputRanges:i,outputValues:n,noDataRanges:o,allowUnmatched:s,isLastInputRangeInclusive:u,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!n||n.length<=zt)&&(!o||o.length<=zt)}}_processPixels(a){const t=a.pixelBlocks?.[0];if(t==null)return null;const{lookup:e,outputPixelType:s}=this;if(e){const p=Se(t,{lut:[e.lut],offset:e.offset,outputPixelType:s});return p!=null&&e.mask&&(p.mask=zs(t.pixels[0],t.mask,e.mask,e.offset,"u8")),p}const{inputRanges:r,outputValues:n,noDataRanges:i,allowUnmatched:o,isLastInputRangeInclusive:u,replacementValue:c}=this.functionArguments;return Os(t,{inputRanges:r,outputValues:n,noDataRanges:i,outputPixelType:s,allowUnmatched:o,isLastInputRangeInclusive:u,replacementValue:c})}_getWebGLParameters(){const{allowUnmatched:a,noDataRanges:t,isLastInputRangeInclusive:e}=this.functionArguments,s=this.functionArguments.inputRanges??[],r=this.functionArguments.outputValues??[],n=Ds(s,r,e),i=new Float32Array(2*zt);return i.fill(qt),t?.length&&i.set(t),{allowUnmatched:a,rangeMaps:n,noDataRanges:i,clampRange:it(this.outputPixelType),replacementValue:this.functionArguments.replacementValue}}};l([h({json:{write:!0,name:"rasterFunction"}})],bt.prototype,"functionName",void 0),l([h({type:Po,json:{write:!0,name:"rasterFunctionArguments"}})],bt.prototype,"functionArguments",void 0),l([h()],bt.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}})],bt.prototype,"lookup",void 0),bt=l([P("esri.layers.support.rasterFunctions.RemapFunction")],bt);const Fo=bt;var Pe;let Mt=Pe=class extends Fs{readColorRamp(a){if(typeof a=="string"){const t=Nt.jsonValues.find(e=>e.toLowerCase()===a.toLowerCase());return t?fs(Nt.fromJSON(t)):null}return"toJSON"in a?a.toJSON():a}clone(){return new Pe({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,colorRamp:this.colorRamp,colormap:this.colormap,raster:this.raster})}};l([h({json:{write:!0}})],Mt.prototype,"colorRamp",void 0),l([Wt("colorRamp")],Mt.prototype,"readColorRamp",null),l([h({type:[[Number]],json:{write:!0}})],Mt.prototype,"colormap",void 0),Mt=Pe=l([P("esri.layers.support.rasterFunctions.ShadedReliefFunctionArguments")],Mt);const No=Mt;let st=class extends G{constructor(){super(...arguments),this.functionName="ShadedRelief",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const a=this.sourceRasterInfos[0];if(a.bandCount>1)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: source data must be single band"};let{colorRamp:t,colormap:e}=this.functionArguments;if(!t&&!e?.length)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a color ramp argument must be specified"};this.outputPixelType=this._getOutputPixelType("u8");const s=a.clone();this._removeStatsHistColormapVAT(s),s.pixelType=this.outputPixelType,s.bandCount=3,s.statistics=[{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=s,this.isGCS=s.spatialReference?.isGeographic??!1,e?.length||(e=re(t,{interpolateAlpha:!0}));const{indexedColormap:r,offset:n}=cs({colormap:e});if(!r?.length)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a valid colorramp is required"};const i=Hs(r);return this.lookup={indexedColormap:r,offset:n,hsvMap:i},{success:!0,supportsGPU:ds(r)}}_processPixels(a){const t=a.pixelBlocks?.[0];if(!t||!this.lookup)return null;let e=a.primaryPixelSizes?.[0];if(e==null){const{extent:i}=a;e=i?{x:i.width/t.width,y:i.height/t.height}:{x:1,y:1}}const s=Zt(this.functionArguments,e,this.isGCS),r=gs(t,s),n=this.sourceRasterInfos[0].statistics?.[0]??{min:0,max:8e3};return qs(r,t,this.lookup.hsvMap,n),r.pixelType=this.outputPixelType,r}_getWebGLParameters(){const a=Zt(this.functionArguments,{x:1,y:1},this.isGCS),t=ys(a),{slopeType:e,zFactor:s,pixelSizeFactor:r,pixelSizePower:n}=this.functionArguments,i=e==="scaled",{indexedColormap:o,offset:u}=this.lookup,c=this.sourceRasterInfos[0].statistics?.[0],p=U(this.outputPixelType);return{...t,indexedColormap:o,offset:u,zFactor:s,gcsFactor:this.isGCS?Ht:1,pixelSizeFactor:i?r:0,pixelSizePower:i?n:0,minValue:c?.min??0,maxValue:c?.max??8e3,isOutputRounded:p}}};l([h({json:{write:!0,name:"rasterFunction"}})],st.prototype,"functionName",void 0),l([h({type:No,json:{write:!0,name:"rasterFunctionArguments"}})],st.prototype,"functionArguments",void 0),l([h()],st.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}})],st.prototype,"isGCS",void 0),l([h({json:{write:!0}})],st.prototype,"lookup",void 0),st=l([P("esri.layers.support.rasterFunctions.ShadedReliefFunction")],st);const $o=st;var Fe;const Io=new Z({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let rt=Fe=class extends O{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new Fe({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};l([X(Io)],rt.prototype,"slopeType",void 0),l([h({type:Number,json:{write:!0}})],rt.prototype,"zFactor",void 0),l([h({type:Number,json:{name:"psPower",write:!0}})],rt.prototype,"pixelSizePower",void 0),l([h({type:Number,json:{name:"psZFactor",write:!0}})],rt.prototype,"pixelSizeFactor",void 0),l([h({type:Boolean,json:{write:!0}})],rt.prototype,"removeEdgeEffect",void 0),rt=Fe=l([P("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],rt);const Ro=rt;let At=class extends G{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(t),t.statistics=this.functionArguments.slopeType!=="percent-rise"?[{min:0,max:90,avg:1,stddev:1}]:null,t.bandCount=1,this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{zFactor:s,slopeType:r,pixelSizePower:n,pixelSizeFactor:i}=this.functionArguments,{isGCS:o}=this,{extent:u,primaryPixelSizes:c}=t,p=c?.[0],m=p??(u?{x:u.width/e.width,y:u.height/e.height}:{x:1,y:1});return Js(e,{zFactor:s,slopeType:r,pixelSizePower:n,pixelSizeFactor:i,isGCS:o,resolution:m})}_getWebGLParameters(){const{zFactor:t,slopeType:e,pixelSizeFactor:s,pixelSizePower:r}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*Ht:t,slopeType:e,pixelSizeFactor:s??0,pixelSizePower:r??0,isOutputRounded:U(this.outputPixelType)}}};l([h({json:{write:!0,name:"rasterFunction"}})],At.prototype,"functionName",void 0),l([h({type:Ro,json:{write:!0,name:"rasterFunctionArguments"}})],At.prototype,"functionArguments",void 0),l([h()],At.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}})],At.prototype,"isGCS",void 0),At=l([P("esri.layers.support.rasterFunctions.SlopeFunction")],At);const ko=At,ns=new Z({1:"min",2:"max",3:"mean",4:"stddev",5:"median",6:"majority",7:"minority"},{useNumericKeys:!0});function _o(a,t){const{fillNoDataOnly:e}=t,{band:s,width:r,height:n,mask:i,outBand:o}=a;if(e&&!i)return void o.set(s);const{statisticsType:u,kernelRows:c,kernelCols:p}=t,m=u==="stddev",f=r*n,d=new Float64Array(f),g=new Float64Array(f),x=new Uint32Array(f);for(let T=0;T<n;T++){const N=T*r;let R=0,_=0,S=0;for(let B=0;B<p;B++)i&&!i[N+B]||(R+=s[N+B],m&&(_+=s[N+B]**2),S++);d[N]=R,g[N]=_,x[N]=S;for(let B=1;B<=r-p;B++){const H=N+B-1,Dt=H+p;i?(i[H]&&(S--,R-=s[H],m&&(_-=s[H]**2)),i[Dt]&&(S++,R+=s[Dt],m&&(_+=s[Dt]**2))):(R-=s[H],R+=s[Dt],m&&(_-=s[H]**2,_+=s[Dt]**2)),d[N+B]=R,x[N+B]=S,m&&(g[N+B]=_)}}const y=new Float64Array(f),v=new Float64Array(f),w=new Uint32Array(f),F=c*r;for(let T=0;T<=r-p;T++){let N=0,R=0,_=0;for(let S=0;S<c;S++){const B=S*r+T;N+=d[B],_+=x[B],m&&(R+=g[B])}y[T]=N,v[T]=R,w[T]=_;for(let S=1;S<=n-c;S++){const B=(S-1)*r+T,H=B+F;N-=d[B],N+=d[H],_-=x[B],_+=x[H],m&&(R-=g[B],R+=g[H]),y[S*r+T]=N,v[S*r+T]=R,w[S*r+T]=_}}const b=Math.floor(c/2),$=Math.floor(p/2);for(let T=b;T<n-b;T++){const N=T*r;for(let R=$;R<r-$;R++){const _=(T-b)*r+R-$,S=w[_];if(S===0||e&&(!i||i[N+R]))continue;const B=y[_]/S,H=m?Math.sqrt((v[_]-y[_]*B)/S):B;o[N+R]=H,i&&(i[N+R]=255)}}}function Co(a,t){const{fillNoDataOnly:e}=t,{band:s,width:r,height:n,mask:i,outBand:o}=a;if(e&&!i)return void o.set(s);const{kernelRows:u,kernelCols:c,statisticsType:p}=t,m=Math.floor(u/2),f=Math.floor(c/2),d=p==="min",g=o.slice(),x=new Uint32Array(r*n);for(let y=m;y<n-m;y++){const v=y*r;for(let w=f;w<r-f;w++){let F=d?Number.MAX_VALUE:-Number.MAX_VALUE,b=0;for(let $=0;$<u;$++)for(let T=0;T<c;T++){const N=v+w+($-m)*r+T-f;i&&!i[N]||(F=d?Math.min(F,s[N]):Math.max(F,s[N]),b++)}i?(g[v+w]=b===0?0:F,x[v+w]=b):o[v+w]=b===0?0:F}}if(i)for(let y=m;y<n-m;y++){const v=y*r;for(let w=f;w<r-f;w++)if(x[v+w]){if(e&&i[v+w])continue;o[v+w]=g[v+w],i[v+w]=255}}}function So(a,t){const{fillNoDataOnly:e}=t,{band:s,width:r,height:n,mask:i,outBand:o}=a;if(e&&!i)return void o.set(s);const{kernelRows:u,kernelCols:c}=t,p=Math.floor(u/2),m=Math.floor(c/2),f=o.slice(),d=new Uint32Array(r*n);for(let g=p;g<n-p;g++){const x=g*r;for(let y=m;y<r-m;y++){if(e&&i?.[x+y])continue;const v=[];for(let w=0;w<u;w++)for(let F=0;F<c;F++){const b=x+y+(w-p)*r+F-m;i&&!i[b]||v.push(s[b])}v.length&&(v.sort((w,F)=>w-F),i?(f[x+y]=v[Math.floor((v.length-1)/2)],d[x+y]=v.length):o[x+y]=v[Math.floor((v.length-1)/2)])}}if(i)for(let g=p;g<n-p;g++){const x=g*r;for(let y=m;y<r-m;y++)if(d[x+y]){if(e&&i[x+y])continue;o[x+y]=f[x+y],i[x+y]=255}}}function Bo(a,t){const{fillNoDataOnly:e}=t,{band:s,width:r,height:n,mask:i,outBand:o}=a;if(e&&!i)return void o.set(s);const{kernelRows:u,kernelCols:c}=t,p=Math.floor(u/2),m=Math.floor(c/2),f=t.statisticsType==="majority",d=u*c,g=o.slice(),x=new Uint32Array(r*n);for(let y=p;y<n-p;y++){const v=y*r;for(let w=m;w<r-m;w++){if(e&&i?.[v+w])continue;const F=new Map;for(let N=0;N<u;N++)for(let R=0;R<c;R++){const _=v+w+(N-p)*r+R-m;if(i&&!i[_])continue;const S=s[_];F.set(S,F.has(S)?F.get(S)+1:1)}if(F.size===0)continue;let b=0,$=0,T=f?0:d+1;for(const N of F.keys())$=F.get(N),f===$>T&&(T=$,b=N);i?(g[v+w]=b,x[v+w]=F.size):o[v+w]=b}}if(i)for(let y=p;y<n-p;y++){const v=y*r;for(let w=m;w<r-m;w++)if(x[v+w]){if(e&&i[v+w])continue;o[v+w]=g[v+w],i[v+w]=255}}}function jo(a,t){const{mask:e}=a,{fillNoDataOnly:s}=t;if(s&&!e)return a;const{pixels:r,width:n,height:i,bandMasks:o,pixelType:u}=a,c=r.length,p=n*i,m=[],{kernelRows:f,kernelCols:d,statisticsType:g,mirrorEdges:x}=t;if(s&&!e)return a;const y=t.outputPixelType??u,v=[];for(let b=0;b<c;b++){const $=r[b],T=A.createEmptyBand(y,p);s&&T.set($);const N=o?.[b]??e,R=N?.slice()??null,_={band:$,width:n,height:i,mask:R,outBand:T};switch(g){case"min":case"max":Co(_,t);break;case"mean":case"stddev":_o(_,t);break;case"median":So(_,t);break;case"majority":case"minority":Bo(_,t)}x&&!s&&Ge(T,n,i,f,d),m.push(T),R&&v.push(R)}let w=v[0]??e;v.length!==c&&(v.length=0),c>1&&o?.length&&(w=A.combineBandMasks(o));const F=new A({pixelType:y,width:n,height:i,pixels:m,bandMasks:o&&v.length?v:null,mask:w});return F.updateStatistics(),F}var Ne;let Tt=Ne=class extends O{constructor(){super(...arguments),this.rows=3,this.cols=3,this.fillNoDataOnly=!1,this.statisticsType="min"}clone(){return new Ne({rows:this.rows,cols:this.cols,fillNoDataOnly:this.fillNoDataOnly,statisticsType:this.statisticsType,raster:W(this.raster)})}};l([h({json:{write:!0,read:{source:["kernelRows","rows"],reader:(a,t)=>Number(a??t?.kernelRows??3)}}})],Tt.prototype,"rows",void 0),l([h({json:{write:!0,read:{source:["kernelCols","cols"],reader:(a,t)=>Number(a??t?.kernelCols??3)}}})],Tt.prototype,"cols",void 0),l([h({json:{write:!0}})],Tt.prototype,"fillNoDataOnly",void 0),l([h({json:{read:{source:["statisticsType","type"],reader:(a,t)=>ns.fromJSON(t?.statisticsType??t?.type)??"min"},write:{target:"type"}}}),X(ns)],Tt.prototype,"statisticsType",void 0),Tt=Ne=l([P("esri.layers.support.rasterFunctions.StatisticsFunctionArguments")],Tt);const Mo=Tt;let Gt=class extends G{constructor(){super(...arguments),this.functionName="Statistics",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{type:t}=this.functionArguments.toJSON();if(t<1||t>7)return{success:!1,supportsGPU:!1,error:`statistics-function: the given statistics type is not supported ${t}`};const e=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();s.pixelType=this.outputPixelType;const{statisticsType:r}=this.functionArguments;return r==="stddev"&&this._removeStatsHistColormapVAT(s),this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3&&t<5}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return e;const{statisticsType:s,rows:r,cols:n,fillNoDataOnly:i}=this.functionArguments;return jo(e,{kernelRows:r,kernelCols:n,fillNoDataOnly:i,outputPixelType:this.outputPixelType,statisticsType:s,mirrorEdges:!0})}_getWebGLParameters(){const{rows:t,cols:e,statisticsType:s,fillNoDataOnly:r}=this.functionArguments;return{fillNoDataOnly:r,kernelRows:t,kernelCols:e,statisticsType:s,clampRange:it(this.outputPixelType)}}};l([h({json:{write:!0,name:"rasterFunction"}})],Gt.prototype,"functionName",void 0),l([h({type:Mo,json:{write:!0,name:"rasterFunctionArguments"}})],Gt.prototype,"functionArguments",void 0),l([h()],Gt.prototype,"rasterArgumentNames",void 0),Gt=l([P("esri.layers.support.rasterFunctions.StatisticsFunction")],Gt);const Go=Gt;var $e;let Pt=$e=class extends O{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(a,t){if(!a?.length)return null;const e=[];return a.forEach(s=>{const r={min:s.min,max:s.max,avg:s.avg??s.mean,stddev:s.stddev??s.standardDeviation};e.push(r)}),e}writeStatistics(a,t,e){if(!a?.length)return;const s=[];a.forEach(r=>{const n={...r,mean:r.avg,standardDeviation:r.stddev};delete n.avg,delete n.stddev,s.push(n)}),t[e]=s}clone(){return new $e({statistics:W(this.statistics),histograms:W(this.histograms)})}};l([h({json:{write:!0}})],Pt.prototype,"statistics",void 0),l([Wt("statistics")],Pt.prototype,"readStatistics",null),l([Yt("statistics")],Pt.prototype,"writeStatistics",null),l([h({json:{write:!0}})],Pt.prototype,"histograms",void 0),Pt=$e=l([P("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],Pt);const zo=Pt;let nt=class extends G{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone(),{statistics:s,histograms:r}=this.functionArguments;return r&&(e.histograms=r),s&&(e.statistics=s),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};l([h({json:{write:!0,name:"rasterFunction"}})],nt.prototype,"functionName",void 0),l([h({type:zo,json:{write:!0,name:"rasterFunctionArguments"}})],nt.prototype,"functionArguments",void 0),l([h()],nt.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}})],nt.prototype,"indexedColormap",void 0),l([h()],nt.prototype,"isNoopProcess",void 0),nt=l([P("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],nt);const Oo=nt;var Ie;const Do=new Z({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let V=Ie=class extends O{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(a,t,e){a?.length&&(Array.isArray(a[0])||(a=a.map(s=>[s.min,s.max,s.avg,s.stddev])),t[e]=a)}clone(){return new Ie({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:W(this.statistics),gamma:W(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:W(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};l([h({type:Boolean,json:{write:!0}})],V.prototype,"computeGamma",void 0),l([h({type:Boolean,json:{name:"dra",write:!0}})],V.prototype,"dynamicRangeAdjustment",void 0),l([h({type:[Number],json:{write:!0}})],V.prototype,"gamma",void 0),l([h()],V.prototype,"histograms",void 0),l([h({type:Number,json:{write:!0}})],V.prototype,"maxPercent",void 0),l([h({type:Number,json:{write:!0}})],V.prototype,"minPercent",void 0),l([h({type:Number,json:{write:!0}})],V.prototype,"numberOfStandardDeviations",void 0),l([h({type:Number,json:{name:"max",write:!0}})],V.prototype,"outputMax",void 0),l([h({type:Number,json:{name:"min",write:!0}})],V.prototype,"outputMin",void 0),l([h({type:Number,json:{write:!0}})],V.prototype,"sigmoidStrengthLevel",void 0),l([h({json:{type:[[Number]],write:!0}})],V.prototype,"statistics",void 0),l([Yt("statistics")],V.prototype,"writeStatistics",null),l([X(Do)],V.prototype,"stretchType",void 0),l([h({type:Boolean,json:{write:!0}})],V.prototype,"useGamma",void 0),V=Ie=l([P("esri.layers.support.rasterFunctions.StretchFunctionArguments")],V);const Eo=V;let ot=class extends G{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:e}=t,{functionArguments:s}=this,{dynamicRangeAdjustment:r,gamma:n,useGamma:i}=s;if(!r&&["u8","u16","s8","s16"].includes(e)){const p=se(s.toJSON(),{rasterInfo:t}),m=U(this.outputPixelType)?"round":"float";this.lookup=Ks({pixelType:e,...p,gamma:i?n:null,rounding:m}),this.cutOffs=p}else r||(this.cutOffs=se(s.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(e);const o=t.clone();o.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(o),this.outputPixelType==="u8"&&(o.keyProperties.DataType="processed");const{outputMin:u=0,outputMax:c=255}=this.functionArguments;o.statistics=[];for(let p=0;p<o.bandCount;p++)o.statistics[p]={min:u,max:c};return this.rasterInfo=o,{success:!0,supportsGPU:!r}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return e;const{lookup:s}=this;if(s)return Se(e,{...s,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:r}=this,n=this.cutOffs||se(r.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e}),i=r.useGamma?r.gamma:null;return Xs(e,{...n,gamma:i,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:e=255,gamma:s,useGamma:r}=this.functionArguments,n=this.rasterInfo.bandCount>=2?3:1,i=r&&s?.length?Zs(n,s):[1,1,1],{minCutOff:o,maxCutOff:u}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};o.length===1&&(o[1]=o[2]=o[0],u[1]=u[2]=u[0]);const c=u.map((d,g)=>(e-t)/(u[g]-o[g])),p=U(this.outputPixelType),m=r&&s?[s[0],s[1]??s[0],s[2]??s[0]]:[1,1,1],f=r?[i[0],i[1]??i[0],i[2]??i[0]]:[1,1,1];return{bandCount:n,minOutput:t,maxOutput:e,minCutOff:o,maxCutOff:u,factor:c,useGamma:r,gamma:m,gammaCorrection:f,stretchType:this.functionArguments.stretchType,isOutputRounded:p,type:"stretch"}}};l([h({json:{write:!0,name:"rasterFunction"}})],ot.prototype,"functionName",void 0),l([h({type:Eo,json:{write:!0,name:"rasterFunctionArguments"}})],ot.prototype,"functionArguments",void 0),l([h()],ot.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}})],ot.prototype,"lookup",void 0),l([h({json:{write:!0}})],ot.prototype,"cutOffs",void 0),ot=l([P("esri.layers.support.rasterFunctions.StretchFunction")],ot);const Vo=ot;var Re;let Xt=Re=class extends O{constructor(){super(...arguments),this.attributeTableAsRecordSet=null}clone(){return new Re({attributeTableAsRecordSet:W(this.attributeTableAsRecordSet)})}};l([h({json:{write:!0}})],Xt.prototype,"attributeTableAsRecordSet",void 0),Xt=Re=l([P("esri.layers.support.rasterFunctions.TableFunctionArguments")],Xt);const Uo=Xt;let Ft=class extends G{constructor(){super(...arguments),this.functionName="Table",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const a=this.sourceRasterInfos[0];if(a.bandCount>1||a.pixelType.startsWith("f"))return{success:!1,supportsGPU:!1,error:"table-function: Source data must be single band and integer pixel type."};const{attributeTableAsRecordSet:t}=this.functionArguments;if(!t)return{success:!1,supportsGPU:!1,error:"table-function: Missing attributeTableAsRecordSet argument."};this.outputPixelType=this._getOutputPixelType(a.pixelType);const e=a.clone();return e.pixelType=this.outputPixelType,e.bandCount=1,e.dataType!=="thematic"&&(e.keyProperties=e.keyProperties?{...e.keyProperties,DataType:"thematic"}:{DataType:"thematic"}),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(a){return a.pixelBlocks?.[0]}};l([h({json:{write:!0,name:"rasterFunction"}})],Ft.prototype,"functionName",void 0),l([h({type:Uo,json:{write:!0,name:"rasterFunctionArguments"}})],Ft.prototype,"functionArguments",void 0),l([h()],Ft.prototype,"rasterArgumentNames",void 0),l([h()],Ft.prototype,"isNoopProcess",void 0),Ft=l([P("esri.layers.support.rasterFunctions.TableFunction")],Ft);const Lo=Ft,C=new Map;function Wo(a,t){const{rasterFunctionArguments:e}=a;e&&(e.rasters||[e.raster,e.raster2]).forEach(s=>{s&&typeof s!="number"&&(typeof s=="string"?s.startsWith("http")&&(t.includes(s)||t.push(s)):"rasterFunctionArguments"in s&&Wo(s,t))})}function Ri(a,t){t=t??{};try{if("function"in(a=W(a))&&"arguments"in a&&a.arguments){const e=Is(a,new Map,t);if(Ce(e),!e.renderingRule)throw new Ot("raster-function-helper","Unsupported raster function json.");a=e.renderingRule}if("rasterFunction"in a){const e=Ns(a=ke(a),t);return e.isRoot=!0,e}}catch{}throw new Ot("raster-function-helper","unsupported raster function json.")}function Ho(a,t){return t[0]==="rasters"&&Array.isArray(a.rasters)?a.rasters:t.map(e=>a[e])}function os(a){return!!(a&&typeof a=="object"&&a.rasterFunction&&a.rasterFunctionArguments)}function ke(a){const{rasterFunction:t,rasterFunctionArguments:e}=a,s={};for(const r in e){let n=e[r];const i=r.toLowerCase();if(i==="rasters"&&Array.isArray(n))s.rasters=n.map(o=>os(o)?ke(o):o);else switch(os(n)&&(n=ke(n)),i){case"dra":s.dra=n;break;case"pspower":s.psPower=n;break;case"pszfactor":s.psZFactor=n;break;case"bandids":s.bandIds=n;break;default:s[r[0].toLowerCase()+r.slice(1)]=n}}return t!=="Local"||s.rasters?.length||(s.rasters=["$$"]),{...a,rasterFunctionArguments:s}}function Ns(a,t){const{rasterFunction:e,rasterFunctionArguments:s}=a,r=a.outputPixelType?.toLowerCase();if(e==null||!C.has(e))throw new Ot("raster-function-helper",`unsupported raster function: ${e}`);const n=C.get(e),i=(typeof n.ctor=="function"?n.ctor:n.ctor.default).fromJSON({...a,outputPixelType:r}),{rasterArgumentNames:o}=i,u=[],c=Ho(s,o),p=o[0]==="rasters"||o.length>1,m=[];for(let f=0;f<c.length;f++){const d=c[f];let g;d==null||typeof d=="string"&&d.startsWith("$")?u.push(t?.raster):typeof d=="string"?t[d]&&u.push(t[d]):typeof d!="number"&&"rasterFunction"in d&&(g=Ns(d,t),p||(i.functionArguments[o[f]]=g),u.push(g)),p&&m.push(g??d)}if(p&&(o[0]==="rasters"?i.functionArguments.rasters=m:o.forEach((f,d)=>{i.functionArguments[f]=m[d]})),t){i.sourceRasters=u;const f=t.raster?.url;f&&(i.mainPrimaryRasterId=f)}return i}function $s(a,t){if(a&&t)for(const e in a){const s=a[e];s&&typeof s=="object"&&"type"in s&&(s.type==="RasterFunctionTemplate"?$s(s.arguments,t):s.type==="RasterFunctionVariable"&&t[s.name]!=null&&(s.value=t[s.name]))}}function _e(a,t){if(!a||typeof a!="object")return a;const{value:e}=a;if(!e||typeof e!="object")return a.isDataset?"$$":e;if(Array.isArray(e))return e.length===0?[]:e.map(r=>r&&typeof r=="object"&&r.type==="RasterFunctionVariable"?_e(r,t):r);if("value"in e&&["number","string","boolean"].includes(typeof e.value))return e.value;if(a.isDataset&&e.type!=="Scalar")return"$$";if(!("type"in e))return e;let s=e;switch(e.type){case"Scalar":s=e.value;break;case"AlgorithmicColorRamp":s=is(e);break;case"MultiPartColorRamp":s={type:"multipart",colorRamps:e.ArrayOfColorRamp.map(is)};break;case"ArgumentArray":if(e.elements?.length&&e.elements[0].type!=="RasterStatistics"){const r=[];for(let n=0;n<e.elements.length;n++){const i=e.elements[n],{type:o}=i;if(o)if(o==="RasterFunctionTemplate"){const{renderingRule:u}=Is(i,t);r.push(u),i._object_id!=null&&t.set(i._object_id,u)}else{if(o!=="RasterFunctionVariable")throw new Ot("raster-function-helper","unsupported raster function json.");{const u=_e(i,t);r.push(u),i._object_id!=null&&t.set(i._object_id,u)}}else r.push(i)}s=r}else s=e.elements}return e._object_id!=null&&t.set(e._object_id,s),s}function is(a){const t=a.algorithm??"esriHSVAlgorithm";let{FromColor:e,ToColor:s}=a;if(!Array.isArray(e)){const{r,g:n,b:i}=ze({h:e.Hue,s:e.Saturation,v:e.Value});e=[r,n,i,e.AlphaValue]}if(!Array.isArray(s)){const{r,g:n,b:i}=ze({h:s.Hue,s:s.Saturation,v:s.Value});s=[r,n,i,s.AlphaValue]}return{type:"algorithmic",algorithm:t,fromColor:e,toColor:s}}function Is(a,t,e){e&&$s(a,e);const s={renderingRule:{},templates:t};return Rs(a,s),s}function Rs(a,t){if(!a||!t.renderingRule)return;const{renderingRule:e,templates:s}=t,{function:r,arguments:n,_object_id:i}=a;if(!r||!n)return;i!=null&&s.set(i,e),e.rasterFunction=r.type.replace("Function",""),e.outputPixelType=r.pixelType;const o={};e.rasterFunctionArguments=o;for(const u in n){if(u==="type"||u==="object_id"||u==="_object_ref_id")continue;const c=n[u];c&&typeof c=="object"&&"type"in c&&(c.type==="RasterFunctionTemplate"||c.type==="RasterFunctionVariable")?(c.type==="RasterFunctionVariable"?o[u]=_e(c,s):(e.rasterFunctionArguments[u]={},Rs(c,{renderingRule:e.rasterFunctionArguments[u],templates:s})),c._object_id!=null&&s.set(c._object_id,o[u])):o[u]=c}switch(o.DEM&&!o.Raster&&(o.Raster=o.DEM,delete o.DEM),e.rasterFunction){case"Stretch":qo(o);break;case"Colormap":Jo(o);break;case"Convolution":Ko(o);break;case"Mask":Xo(o)}}function Ce(a){const{renderingRule:t,templates:e}=a;if(typeof t!="object"||!t?.rasterFunctionArguments||!e.size)return;const{rasterFunctionArguments:s}=t;for(const r in s){const n=s[r],i=r==="_object_ref_id"?n:n&&typeof n=="object"&&"_object_ref_id"in n?n._object_ref_id:null;if(i==null)n&&typeof n=="object"&&(n.rasterFunctionArguments&&Ce({renderingRule:n,templates:e}),Array.isArray(n)&&n.forEach((o,u)=>{if(o&&typeof o=="object")if(o._object_ref_id!=null){if(!e.has(o._object_ref_id))throw new Ot("raster-function-helper",`unsupported raster function json. _object_ref_id: ${n} does not exist`);const c=e.get(i);c&&typeof c=="object"?Object.assign(o,c):n[u]=c}else Ce({renderingRule:o,templates:e})}));else{if(!e.has(i))throw new Ot("raster-function-helper",`unsupported raster function json. _object_ref_id: ${i} does not exist`);const o=e.get(i);r!=="_object_ref_id"?s[r]=o:o&&typeof o=="object"&&Object.assign(s,o)}}}function qo(a){a.Statistics?.length&&typeof a.Statistics=="object"&&(a.Statistics=a.Statistics.map(t=>[t.min,t.max,t.mean,t.standardDeviation])),a.NumberOfStandardDeviation!=null&&(a.NumberOfStandardDeviations=a.NumberOfStandardDeviation,delete a.NumberOfStandardDeviation)}function Jo(a){a.ColorRamp?.type?.toLowerCase()==="randomcolorramp"&&(delete a.ColorRamp,a.ColormapName="Random"),a.ColorSchemeType===0&&delete a.ColorRamp}function Ko(a){a.ConvolutionType!=null&&(a.Type=a.ConvolutionType,delete a.ConvolutionType)}function Xo(a){a.NoDataValues?.length&&typeof a.NoDataValues[0]=="string"&&(a.NoDataValues=a.NoDataValues.filter(t=>t!=="").map(t=>Number(t)))}C.set("Arithmetic",{desc:"Arithmetic Function",ctor:Hr,rasterArgumentNames:["rasters"]}),C.set("Aspect",{desc:"Aspect Function",ctor:Jr,rasterArgumentNames:["raster"]}),C.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:An,rasterArgumentNames:["raster"]}),C.set("Colormap",{desc:"Colormap Function",ctor:Bn,rasterArgumentNames:["raster"]}),C.set("ColormapToRGB",{desc:"ColormapToRGB Function",ctor:Mn,rasterArgumentNames:["raster"]}),C.set("CompositeBand",{desc:"CompositeBand Function",ctor:zn,rasterArgumentNames:["rasters"]}),C.set("ComputeChange",{desc:"ComputeChange Function",ctor:Jn,rasterArgumentNames:["rasters"]}),C.set("Convolution",{desc:"Convolution Function",ctor:ro,rasterArgumentNames:["raster"]}),C.set("ContrastBrightness",{desc:"Contrast Brightness Function",ctor:Xn,rasterArgumentNames:["raster"]}),C.set("ExtractBand",{desc:"ExtractBand Function",ctor:ao,rasterArgumentNames:["raster"]}),C.set("Curvature",{desc:"Curvature Function",ctor:oo,rasterArgumentNames:["raster"]}),C.set("Hillshade",{desc:"Hillshade Function",ctor:yo,rasterArgumentNames:["raster"]}),C.set("ShadedRelief",{desc:"ShadedRelief Function",ctor:$o,rasterArgumentNames:["raster"]}),C.set("Grayscale",{desc:"Grayscale Function",ctor:ho,rasterArgumentNames:["raster"]}),C.set("Clip",{desc:"Clip Function",ctor:Pn,rasterArgumentNames:["raster"]}),C.set("Local",{desc:"Local Function",ctor:vo,rasterArgumentNames:["rasters"]}),C.set("Mask",{desc:"Mask Function",ctor:bo,rasterArgumentNames:["raster"]}),C.set("NDVI",{desc:"NDVI Function",ctor:To,rasterArgumentNames:["raster"]}),C.set("Remap",{desc:"Remap Function",ctor:Fo,rasterArgumentNames:["raster"]}),C.set("Slope",{desc:"Slope Function",ctor:ko,rasterArgumentNames:["raster"]}),C.set("Statistics",{desc:"Focal Statistics Function",ctor:Go,rasterArgumentNames:["raster"]}),C.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:Oo,rasterArgumentNames:["raster"]}),C.set("Stretch",{desc:"Stretch Function",ctor:Vo,rasterArgumentNames:["raster"]}),C.set("Table",{desc:"Attribute Table Function",ctor:Lo,rasterArgumentNames:["raster"]});export{Ri as T,Wo as w};
