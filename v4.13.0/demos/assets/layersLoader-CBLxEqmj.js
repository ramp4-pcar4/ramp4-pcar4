import{s as y,co as h,J as H,cp as $,ct as F,Y as M}from"./main-6eEsl9OJ.js";import{t as g,n as P}from"./fetchService-Cz8yzViK.js";import{o as G,u as k,s as f,l as x,y as D,c as I,e as b,i as C,a as m}from"./loadUtils-R8Be9RRI.js";import{e as v}from"./jsonContext-CcSVT7S_.js";import{s as A}from"./portalItemUtils-DES5WVek.js";import{t as E}from"./styleUtils-DEvcoecU.js";import"./preload-helper-B76NpbEU.js";import"./associatedFeatureServiceUtils-DPPMcsJ0.js";import"./PortalItem-8NBch2N-.js";import"./projectionUtils-BoGsVCso.js";import"./asyncUtils-SHsCTXd3.js";async function le(t,o){const r=t.instance.portalItem;if(r?.id)return await r.load(o),j(t),t.validateItem&&t.validateItem(r),J(t,o)}function j(t){const o=t.instance.portalItem;if(!o?.type||!t.supportedTypes.includes(o.type))throw new y("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}'",{type:o?.type,expectedType:t.supportedTypes.join(", ")})}async function J(t,o){const r=t.instance,e=r.portalItem;if(!e)return;let{url:n}=e;const{title:a}=e,l=v(e,"portal-item");if(r.type==="group")return O(r,l,t);n&&r.type!=="media"&&r.read({url:n},l);const i=new b,{data:u,preferredHost:s}=await L(t,i,o);return n=e.url,"isUrlHostModified"in r&&(s?r.applyPreferredHost({preferredHost:s}):r.applyHostFromPortalItem()),u&&r.read(u,l),r.resourceReferences={portalItem:e,paths:l.readResourcePaths??[]},r.type!=="subtype-group"&&r.read({title:a},l),E(r,l)}async function O(t,o,r){const e=t.portalItem;if(!t.sourceIsPortalItem)return;const{title:n,type:a}=e;if(a==="Group Layer"){if(!A(e,"Map"))throw new y("portal:invalid-layer-item-typekeyword","'Group Layer' item without 'Map' type keyword is not supported");return R(t,r)}return t.read({title:n},o),N(t,r)}async function R(t,o){const r=t.portalItem,e=await r.fetchData("json");if(!e)return;if(!o.populateGroupLayer)throw new y("portal:missing-populate-group-layer","Missing populate group layer");const n=v(r,"web-map");t.read(e,n),await o.populateGroupLayer(t,e,{context:n}),t.resourceReferences={portalItem:r,paths:n.readResourcePaths??[]}}async function N(t,o){let r;const{portalItem:e}=t;if(!e)return;const n=e.type,a=o.layerModuleTypeMap;if(!a)throw new y("portal:missing-layer-module-type-map","Layer module type map is required to construct sub layers");switch(n){case"Feature Service":case"Feature Collection":r=a.FeatureLayer;break;case"Stream Service":r=a.StreamLayer;break;case"Scene Service":r=a.SceneLayer;break;case"Video Service":r=a.VideoLayer;break;default:throw new y("portal:unsupported-item-type-as-group",`The item type '${n}' is not supported as a 'IGroupLayer'`)}const l=n==="Video Service",i=new b;let[u,{data:s}]=await Promise.all([r(),l?{data:null}:L(o,i)]),p=()=>u;if(l)return U(t,p,a);if(n==="Feature Service"){const c=f(s)?.customParameters;s=e.url?(await x(s,e.url,i)).data:{},p=await Q(s,a)||p;const{provider:S,preferredHost:T}=await K(e.url,{customParameters:c,loadContext:i});return h(e,T),await d(t,p,p,s,a,S)}return n==="Scene Service"&&e.url&&(s=await D(e,s,i)),I(s)>0?await d(t,p,null,s,a):await V(t,p,a)}async function V(t,o,r){const{portalItem:e}=t;if(!e?.url)return;const n=await g(e.url);n&&d(t,o,null,{layers:n.layers?.map(m),tables:n.tables?.map(m)},r)}async function U(t,o,r){const{portalItem:e}=t;if(!e?.url)return;const n=await g(e.url);n&&d(t,o,null,{layers:n.layers?.map(({id:a,name:l})=>({id:a,name:l}))},r)}async function d(t,o,r,e,n,a){let l=e.layers||[];const i=e.tables||[];if(t.portalItem?.type==="Feature Collection"?(l.forEach((u,s)=>{u.id=s,u?.layerDefinition?.type==="Table"&&i.push(u)}),l=l.filter(u=>u?.layerDefinition?.type!=="Table")):(l.reverse(),i.reverse()),l.forEach(u=>{const s=a?.(u);if(s||!a){const p=w(t,o(u),e,u,s);t.add(p)}}),i.length){const u=r?null:await n.FeatureLayer();i.forEach(s=>{const p=a?.(s);if(p||!a){const c=w(t,r?r(s):u,e,s,p);t.tables.add(c)}})}}function w(t,o,r,e,n){const a=t.portalItem,l={portalItem:a.clone(),layerId:e.id};e.url!=null&&(l.url=e.url);const i=new o(l);if("sourceJSON"in i&&(i.sourceJSON=n),i.type!=="subtype-group"&&i.type!=="catalog"&&(i.sublayerTitleMode="service-name"),a.type==="Feature Collection"){const u={origin:"portal-item",portal:a.portal||M.getDefault()};i.read(e,u);const s=r.showLegend;s!=null&&i.read({showLegend:s},u)}return i}async function L(t,o,r){if(t.supportsData===!1)return{data:void 0};const e=t.instance,n=e.portalItem;if(!n)return{data:void 0};let a=null;try{a=await n.fetchData("json",r)}catch{}if(z(e)){let l=null;const{count:i,preferredHost:u}=await q(n,a,o);if(h(n,u),(a?.layers||a?.tables)&&i>0){if(e.layerId==null){const s=G(e.type),p=s?.length?k(a,s)[0]:f(a);p&&(e.layerId=p.id)}l=Y(a,e),l?.layerType==="OrientedImageryLayer"&&e.type==="oriented-imagery"&&e.supportedSourceTypes.add("Feature Layer"),l&&a.showLegend!=null&&(l.showLegend=a.showLegend)}return i>1&&"sublayerTitleMode"in e&&e.sublayerTitleMode!=="service-name"&&(e.sublayerTitleMode="item-title-and-service-name"),{data:l,preferredHost:u}}return{data:a}}async function q(t,o,r){if(o?.layers&&o?.tables)return{count:I(o)};const e=H(t.url);if(!e)return{count:1};const n=e.url.path,a=await r.fetchServiceMetadata(n,{customParameters:f(o)?.customParameters}).catch(()=>null);return{count:(o?.layers?.length??a?.layers?.length??0)+(o?.tables?.length??a?.tables?.length??0),preferredHost:F(t)?$():null}}function Y(t,o){const{layerId:r}=o,e=t.layers?.find(n=>n.id===r)||t.tables?.find(n=>n.id===r);return e&&B(e,o)?e:null}function z(t){return t.type!=="stream"&&"layerId"in t}function B(t,o){const r="layerType"in t&&t.layerType,{type:e}=o;return!(e==="feature"&&r&&t.layerType!=="ArcGISFeatureLayer"||e==="catalog"&&!r||e==="oriented-imagery"&&!r||e==="subtype-group"&&!r)}async function K(t,o){const{layersJSON:r,preferredHost:e}=await P(t,o);if(!r)return{provider:null,preferredHost:e};const n=[...r.layers,...r.tables];return{provider:a=>n.find(l=>l.id===a.id),preferredHost:e}}async function Q(t,o){const{layers:r,tables:e}=t,n=[...r??[],...e??[]];if(!n.length)return;const a=new Set,l=[];for(const{layerType:s}of n){const p=s??"ArcGISFeatureLayer";if(a.has(p))continue;a.add(p);const c=o[C(p)];l.push(c())}const i=await Promise.all(l),u=new Map;return Array.from(a).forEach((s,p)=>{u.set(s,i[p])}),({layerType:s})=>{const p=s??"ArcGISFeatureLayer";return u.get(p)}}export{le as load};
