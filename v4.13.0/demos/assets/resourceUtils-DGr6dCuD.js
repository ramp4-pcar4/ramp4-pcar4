import{aq as p}from"./main-6eEsl9OJ.js";import{u as d}from"./basicInterfaces-CZwQPxTp.js";class L{constructor(n){this.data=n,this.type="encoded-mesh-texture",this.encoding=d.KTX2_ENCODING}}function l(t){return t?.type==="encoded-mesh-texture"}async function w(t){const n=new Blob([t]),o=await n.text();return JSON.parse(o)}async function v(t,n){if(n===d.KTX2_ENCODING)return new L(t);const o=new Blob([t],{type:n});let r=URL.createObjectURL(o);switch(n){case"image/jpeg":r+="#.jpg";break;case"image/png":r+="#.png"}const e=new Image;if(p("esri-iPhone"))return new Promise((c,m)=>{const s=()=>{i(),c(e)},a=u=>{i(),m(u)},i=()=>{URL.revokeObjectURL(r),e.removeEventListener("load",s),e.removeEventListener("error",a)};e.addEventListener("load",s),e.addEventListener("error",a),e.src=r});try{e.src=r,await e.decode()}catch{console.warn("Failed decoding HTMLImageElement")}return URL.revokeObjectURL(r),e}export{l as n,v as o,w as r,L as t};
