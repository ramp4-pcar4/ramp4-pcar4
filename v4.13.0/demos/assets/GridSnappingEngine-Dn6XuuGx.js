import{j as V,dC as U,i as X,a6 as Y,q as s,v as l,x as D}from"./main-6eEsl9OJ.js";import{w as E}from"./vec32-BvrGiqaM.js";import{U as j,O as F}from"./projectionUtils-BoGsVCso.js";import{P as W}from"./normalizeUtils-DQMkRVRF.js";import{u as q}from"./scaleUtils-DbIWZ4jS.js";import{l as H,u as I,t as T}from"./gridUtils-DZ_XrBJH.js";import{f as m,d as _,r as G,b as k,c as A}from"./SketchViewModel-qU8vsgpY.js";import"./preload-helper-B76NpbEU.js";import"./common-DQOJ18NT.js";import"./normalizeUtilsCommon-BOEKY1VU.js";import"./utils-DSziZ_FA.js";import"./utils-B8Gjy-VD.js";import"./geodesicUtils-Bbp3lqW4.js";import"./UpdatingHandles-DgAejPqv.js";import"./GraphicsLayer-BnIrIT3a.js";import"./GraphicsCollection-DPkZ9iLQ.js";import"./Layer-DzZVuRQg.js";import"./TimeExtent-DG27ZQvz.js";import"./BlendLayer-Ck8n336O.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-DIh9yTg7.js";import"./parser-C27q64z5.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-DL3nuHcq.js";import"./ScaleRangeLayer-BjLqqFXw.js";import"./ElevationInfo-Dh54MbB6.js";import"./lengthUtils-DL53yBUT.js";import"./elevationInfoUtils-BiNnYWla.js";import"./editableLayers-D6yrpnO9.js";import"./utils-CcyJ7vzx.js";import"./Queue-DXtZaugk.js";import"./Version-DkcAnD6Q.js";import"./Cyclical-Du2djXHA.js";import"./quantityUtils-DW8sL_d6.js";import"./vec2-ChnYg_BJ.js";import"./vec2f64-Cgb6qxNH.js";import"./projectVectorToVector-PLaHcAe9.js";import"./projectPointToVector-C4UVIiJJ.js";import"./asyncUtils-SHsCTXd3.js";import"./Query-BQgZ7-at.js";import"./Field-CzUupKXc.js";import"./fieldType-B4FIlvI-.js";import"./vec42-CKs01hkn.js";import"./vec4f64-DPb6J-GU.js";import"./plane-BqH4Rk0w.js";import"./vectorStacks-DkJKKYqf.js";import"./mat3f64-B5o_lm6j.js";import"./mat4f64-q_b6UJoq.js";import"./quatf64-aQ5IuZRd.js";import"./sphere-DYiAGvsP.js";import"./mat3-CruJiiUv.js";import"./geodeticLengthOperator-DNLqI12P.js";import"./geodeticCurveType-CirnHLSB.js";import"./earcut-D9gy186-.js";import"./triangle-DzmNzYoH.js";import"./lineSegment-C4u8B-fp.js";import"./spatialReferenceEllipsoidUtils-4Wh6IZR8.js";let o=class extends V{constructor(t){super(t),this.options=null}destroy(){this._set("options",null)}get grid(){return this.view.grid}get effectiveViewRotation(){return this.grid?.rotateWithMap?0:U(this.view.rotation??0)}get gridRotation(){return U(this.grid?.rotation??0)}get gridCenter(){const{spatialReference:t,grid:r}=this;if(!r||!t||!j(r.center.spatialReference,t))return null;try{const e=F(r.center,t),i=t.isWrappable&&this.view?.center!=null?W(e.x,this.view.center.x,t):e.x;return m(i,e.y,e.z)}catch(e){return X.getLogger(this).errorOnce("Grid Snapping - Failed to project grid center.",e),null}}get offsetScaleFactor(){const{pixelsPerStride:t,grid:r}=this;if(!r||!t)return 1;const{majorLineInterval:e,dynamicScaling:i}=r;return e<1?null:H(e,t,i)}get spatialReference(){return this.view.spatialReference}get gridMetersPerStride(){const{grid:t}=this;return t?Y(t.spacing,t.units,"meters"):null}get viewMetersPerPixel(){const{viewMetersPerSRUnit:t}=this;return t==null?null:t*q(this.view.scale,this.view.spatialReference)}get viewMetersPerSRUnit(){const{spatialReference:t}=this.view;return this.gridCenter?I(this.gridCenter[0],this.gridCenter[1],t):null}get pixelsPerStride(){const{gridMetersPerStride:t,viewMetersPerPixel:r}=this;return r&&t?t/r:null}get updating(){return this.grid!=null&&this.spatialReference!=null&&this.viewMetersPerSRUnit==null}async fetchCandidates(t,r,e){const{options:i,view:n}=this;if(!i?.effectiveGridEnabled||!n.grid||e.feature?.attributes&&_ in e.feature.attributes)return[];const p=e.coordinateHelper.arrayToPoint(t),a=i.distance*(e.pointer==="touch"?i.touchSensitivityMultiplier:1);return this.fetchCandidatesSync(p,a)}fetchCandidatesSync(t,r){const e=[],{grid:i,effectiveViewRotation:n,gridRotation:p,gridCenter:a,viewMetersPerPixel:h,viewMetersPerSRUnit:d,offsetScaleFactor:S,spatialReference:f,gridMetersPerStride:C,pixelsPerStride:$}=this;if(!(i&&h&&d&&a&&f&&S&&C&&$)||!i.dynamicScaling&&$<T||!j(t.spatialReference,f))return e;const y=F(t,f),z=m(y.x,y.y,y.z),u=g(z,-p,a,-n),P=C/d*S,c=B(u,P,a),{shouldSnapX:v,shouldSnapY:w}=J(c,u,r,h,d);if(!v&&!w)return[];const L=m((v?c:u)[0],(w?c:u)[1]),M=g(L,p,a,n),b=g(c,p,a,n);if(w){const R=O(c,u,P,"y"),x=g(R,p,a,n);e.push(new G({lineStart:b,lineEnd:x,targetPoint:M,isDraped:!1}))}if(v){const R=O(c,u,P,"x"),x=g(R,p,a,n);e.push(new G({lineStart:b,lineEnd:x,targetPoint:M,isDraped:!1}))}return v&&w&&e.push(new k(M,e[0],e[1],!1)),e}};s([l({constructOnly:!0})],o.prototype,"view",void 0),s([l()],o.prototype,"options",void 0),s([l()],o.prototype,"grid",null),s([l()],o.prototype,"effectiveViewRotation",null),s([l()],o.prototype,"gridRotation",null),s([l()],o.prototype,"gridCenter",null),s([l()],o.prototype,"offsetScaleFactor",null),s([l()],o.prototype,"spatialReference",null),s([l()],o.prototype,"gridMetersPerStride",null),s([l()],o.prototype,"viewMetersPerPixel",null),s([l()],o.prototype,"viewMetersPerSRUnit",null),s([l()],o.prototype,"pixelsPerStride",null),s([l()],o.prototype,"updating",null),o=s([D("esri.views.interactive.snapping.GridSnappingEngine")],o);const g=(t,r,e,i)=>{const n=A(t[0],t[1],t[2]);return E(n,E(n,n,e,r),e,i)},B=(t,r,e)=>{const i=(t[0]-e[0])/r,n=(t[1]-e[1])/r,p=Math.trunc(i),a=Math.trunc(n),h=Math.round(i%1),d=Math.round(n%1),S=e[0]+(p+h)*r,f=e[1]+(a+d)*r;return m(S,f)},J=(t,r,e,i,n)=>{if(i<=0)return{shouldSnapX:!1,shouldSnapY:!1};const p=(t[0]-r[0])/i,a=(t[1]-r[1])/i;return{shouldSnapX:Math.abs(p*n)<e,shouldSnapY:Math.abs(a*n)<e}},O=(t,r,e,i)=>{if(i==="y"){const p=r[0]>t[0]?1:-1;return m(t[0]+e*p,t[1])}const n=r[1]>t[1]?1:-1;return m(t[0],t[1]+e*n)};export{o as GridSnappingEngine};
