import{j as R,aU as b,q as r,x as d,hV as w,v as a,by as S,ao as C,c1 as H,d$ as q,V as v,e9 as $,s as T,ad as n,af as A,eb as l,hW as O}from"./main-6eEsl9OJ.js";import{e as P}from"./utils-BQBvadb7.js";import{n as j}from"./Container-a421ocjf.js";import{s as I}from"./ReactiveMap-DhgVMKBI.js";import{u as y,a as k,t as U,g as x}from"./MapView-CJM3wvZh.js";import{t as V}from"./layerViewUtils-DUyzdGNv.js";let f=class extends R{constructor(){super(...arguments),this._idToCounters=new I}get size(){return this._idToCounters.size}get objectIds(){return this._idToCounters.keys()}get highlightNamesByObjectId(){return z(this._idToCounters)}add(o,s){let e=!1;for(const i of o){const t=b(this._idToCounters,i,()=>(e=!0,new Map)),h=t.get(s)??0;h||(e=!0),t.set(s,h+1)}return e}delete(o,s){let e=!1;for(const i of o){const t=this._idToCounters.get(i);if(!t)continue;let h=t.get(s);h!=null&&(h--,h>0?t.set(s,h):(t.delete(s),e=!0),t.size===0&&(this._idToCounters.delete(i),e=!0))}return e}};function*z(o){for(const[s,e]of o)yield[s,e.keys()]}f=r([d("esri.views.2d.layers.support.HighlightCounter")],f);var m;const B={base:q,key:"type",typeMap:{extent:H,polygon:C}};let u=m=class extends w{constructor(o){super(o),this.type="geometry",this.geometry=null}clone(){return new m({geometry:this.geometry?.clone()??null})}commitVersionProperties(){this.commitProperty("geometry")}};r([a({types:B,json:{read:S,write:!0}})],u.prototype,"geometry",void 0),u=m=r([d("esri.views.layers.support.Geometry")],u);let c=class extends w{constructor(o){super(o),this.type="path",this.path=[]}commitVersionProperties(){this.commitProperty("path")}};r([a({type:[[[Number]]],json:{write:!0}})],c.prototype,"path",void 0),c=r([d("esri.views.layers.support.Path")],c);const g=v.ofType({key:"type",base:null,typeMap:{rect:O,path:c,geometry:u}}),M=new(v.ofType(y)),E=o=>{let s=class extends o{constructor(){super(...arguments),this._highlightCounter=new f,this.attached=!1,this.clips=new g,this.highlights=null,this.lastUpdateId=-1,this.moving=!1,this.updateRequested=!1,this._visibleAtCurrentScale=!0}initialize(){const e=this.view?.spatialReferenceLocked??!0;this.view?.spatialReference&&e&&!this.spatialReferenceSupported?this.addResolvingPromise(Promise.reject(new T("layerview:spatial-reference-incompatible","The spatial reference of this layer does not meet the requirements of the view",{layer:this.layer}))):(this.container||(this.container=new j),this.container.fadeTransitionEnabled=!0,this.container.visible=!1,this.container.endTransitions(),this.addHandles([n(()=>this.suspended,t=>{this.container&&(this.container.visible=!t)},l),n(()=>this.updateSuspended,t=>{this.view&&!t&&this.updateRequested&&this.view.requestUpdate()},l),n(()=>this.layer?.opacity??1,t=>{this.container&&(this.container.opacity=t)},l),n(()=>this.layer&&"blendMode"in this.layer?this.layer.blendMode:"normal",t=>{this.container&&(this.container.blendMode=t)},l),n(()=>this.layer&&"effect"in this.layer?this.layer.effect:null,t=>{this.container&&(this.container.effect=t)},l),n(()=>this._mergedHighlights.items.map(t=>({name:t.name,options:{fillColor:t.color,haloColor:t.haloColor,fillOpacity:t.fillOpacity,haloOpacity:t.haloOpacity,haloWidth:t.haloWidth,haloBlur:t.haloBlur}})),()=>{this.container.highlightGradient=k(this.container.highlightGradient,this._mergedHighlights.items)},l),n(()=>this._mergedHighlights.items.map(t=>t.name),()=>{this._processHighlight()}),A(()=>this.clips,"change",()=>{this.container&&(this.container.clips=this.clips)},l),n(()=>({scale:this.view?.scale,scaleRange:this.layer&&"effectiveScaleRange"in this.layer?this.layer.effectiveScaleRange:null}),({scale:t,scaleRange:h})=>{const p=V(h,t);p!==this._visibleAtCurrentScale&&(this._visibleAtCurrentScale=p)},l)],"constructor"),this.view?.whenLayerView?this.view.whenLayerView(this.layer).then(t=>{t===this&&this.processAttach()},()=>{}):this.when().then(()=>{this.processAttach()},()=>{}))}destroy(){this.processDetach(),this.updateRequested=!1}get highlightOptions(){return U(this)}set highlightOptions(e){x(this,e)}get hasHighlight(){return this._highlightCounter.size>0}get _mergedHighlights(){if(!this.view)return M;if(!this.highlights)return this.view.highlights;const e=this.view.highlights.clone();for(const i of this.highlights){const t=e.find(h=>h.name===i.name);t&&t.assignFrom(i)}return e}get highlightIds(){return Array.from(this._highlightCounter.objectIds)}get scheduler(){return this.view.scheduler}get spatialReferenceSupported(){const e=this.view?.spatialReference;return e==null||this.supportsSpatialReference(e)}get updating(){return this.spatialReferenceSupported&&(!this.attached||!this.suspended&&(this.updateRequested||this.isUpdating())||!!this._updatingHandles?.updating||this.container.transitioning)}get visibleAtCurrentScale(){return this._visibleAtCurrentScale}processAttach(){this.isResolved()&&!this.attached&&!this.destroyed&&this.spatialReferenceSupported&&(this.attach(),this.attached=!0,this.requestUpdate())}processDetach(){this.attached&&(this.attached=!1,this.removeHandles("attach"),this.detach(),this.updateRequested=!1)}requestUpdate(){this.destroyed||this.updateRequested||(this.updateRequested=!0,this.updateSuspended||this.view.requestUpdate())}processUpdate(e){!this.isFulfilled()||this.isResolved()?(this._set("updateParameters",e),this.updateRequested&&!this.updateSuspended&&(this.updateRequested=!1,this.update(e))):this.updateRequested=!1}hitTest(e,i){return Promise.resolve(null)}supportsSpatialReference(e){return!0}canResume(){if(!this.spatialReferenceSupported)return!1;switch(this.layer?.type){case"link-chart":case"knowledge-graph-sublayer":case"graphics":break;default:if(P(this.view)&&!this.view.inGeographicLayout)return!1}return!!super.canResume()&&this.visibleAtCurrentScale}getSuspendInfo(){const e=super.getSuspendInfo(),i=!this.spatialReferenceSupported;return i&&(e.spatialReferenceNotSupported=i),e}addAttachHandles(e){this.addHandles(e,"attach")}_addHighlights(e,i){this._highlightCounter.add(e,i)&&this._processHighlight()}_removeHighlights(e,i){this._highlightCounter.delete(e,i)&&this._processHighlight()}_processHighlight(){}_getHighlights(){const e=[];for(const[i,t]of this._highlightCounter.highlightNamesByObjectId){const h=this._getHighlightBits(t);e.push({objectId:i,highlightFlags:h})}return e}_getHighlightBits(e){const i=new Set(e);let t=1,h=0;if(!this.view)return 0;const p=this._mergedHighlights;for(const{name:_}of p)i.delete(_)&&(h=t),t<<=1;return h}};return r([a()],s.prototype,"attached",void 0),r([a({type:g,set(e){const i=$(e,this._get("clips"),g);this._set("clips",i)}})],s.prototype,"clips",void 0),r([a()],s.prototype,"container",void 0),r([a({type:y})],s.prototype,"highlightOptions",null),r([a({type:v.ofType(y)})],s.prototype,"highlights",void 0),r([a()],s.prototype,"_mergedHighlights",null),r([a()],s.prototype,"moving",void 0),r([a({readOnly:!0})],s.prototype,"spatialReferenceSupported",null),r([a({readOnly:!0})],s.prototype,"updateParameters",void 0),r([a()],s.prototype,"updateRequested",void 0),r([a()],s.prototype,"updating",null),r([a()],s.prototype,"view",void 0),r([a()],s.prototype,"_visibleAtCurrentScale",void 0),r([a({readOnly:!0})],s.prototype,"visibleAtCurrentScale",null),s=r([d("esri.views.2d.layers.LayerView2D")],s),s};export{E as S,u as n};
