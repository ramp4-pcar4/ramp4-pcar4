import{$ as b,I as P,df as h,c6 as U,s as c,dg as j,dh as L,di as x,dj as C,bK as M,dk as O,c1 as D,cT as V,cU as T}from"./main-6eEsl9OJ.js";import{Q as Y,O as W}from"./projectionUtils-BoGsVCso.js";import{u as X}from"./geojson-BLMpN3hH.js";import{o as F,n as g}from"./xmlUtils-CtUoQO7q.js";import{m}from"./Field-CzUupKXc.js";const S="xlink:href",d="2.0.0",E="__esri_wfs_id__",z="wfs-layer:getWFSLayerTypeInfo-error",q="wfs-layer:empty-service",A="wfs-layer:feature-type-not-found",Q="wfs-layer:geojson-not-supported",_="wfs-layer:kvp-encoding-not-supported",H="wfs-layer:malformed-json",$="wfs-layer:unknown-geometry-type",J="wfs-layer:unknown-field-type",K="wfs-layer:unsupported-spatial-reference",B="wfs-layer:unsupported-wfs-version";async function Se(r,t){const e=Z((await b(r,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetCapabilities",VERSION:d,...t?.customParameters},signal:t?.signal})).data);return re(r,e),e}function Z(r){const t=G(r);ye(t),v(t);const e=t.firstElementChild,a=j(ae(e));return{operations:te(e),get featureTypes(){return Array.from(a())},readFeatureTypes:a}}const ee=["json","application/json; subtype=geojson; charset=utf-8","application/json; subtype=geojson","application/json","geojson","application/geo+json"];function R(r){for(const t of ee){const e=r.findIndex(a=>a.toLowerCase()===t);if(e>=0)return r[e]}return null}function te(r){let t=!0;const e={GetCapabilities:{url:""},DescribeFeatureType:{url:""},GetFeature:{url:"",outputFormat:null,supportsPagination:!1}},a=[],o=[];if(F(r,{OperationsMetadata:{Parameter:n=>{if(n.getAttribute("name")?.toLowerCase()==="outputformat")return{AllowedValues:{Value:({textContent:s})=>{s&&a.push(s)}}}},Operation:n=>{switch(n.getAttribute("name")){case"GetCapabilities":return{DCP:{HTTP:{Get:s=>{e.GetCapabilities.url=s.getAttribute(S)}}}};case"DescribeFeatureType":return{DCP:{HTTP:{Get:s=>{e.DescribeFeatureType.url=s.getAttribute(S)}}}};case"GetFeature":return{DCP:{HTTP:{Get:s=>{e.GetFeature.url=s.getAttribute(S)}}},Parameter:s=>{if(s.getAttribute("name")?.toLowerCase()==="outputformat")return{AllowedValues:{Value:({textContent:i})=>{i&&o.push(i)}}}}}}},Constraint:n=>{switch(n.getAttribute("name")){case"KVPEncoding":return{DefaultValue:s=>{t=s.textContent.toLowerCase()==="true"}};case"ImplementsResultPaging":return{DefaultValue:s=>{e.GetFeature.supportsPagination=s.textContent.toLowerCase()==="true"}}}}}}),e.GetFeature.outputFormat=R(o)??R(a),!t)throw new c(_,"WFS service doesn't support key/value pair (KVP) encoding");if(e.GetFeature.outputFormat==null)throw new c(Q,"WFS service doesn't support GeoJSON output format");return e}function re(r,t){L(r)&&(x(r,t.operations.DescribeFeatureType.url,!0)&&(t.operations.DescribeFeatureType.url=C(t.operations.DescribeFeatureType.url)),x(r,t.operations.GetFeature.url,!0)&&(t.operations.GetFeature.url=C(t.operations.GetFeature.url)))}function k(r){const t=parseInt(r.textContent?.match(/(?<wkid>\d+$)/i)?.groups?.wkid??"",10);if(!Number.isNaN(t))return t}function ae(r){return g(r,{FeatureTypeList:{FeatureType:t=>{const e={typeName:"undefined:undefined",name:"",title:"",description:"",extent:null,namespacePrefix:"",namespaceUri:"",defaultSpatialReference:4326,supportedSpatialReferences:[]},a=new Set;return F(t,{Name:o=>{const{name:n,prefix:s}=w(o.textContent);e.typeName=`${s}:${n}`,e.name=n,e.namespacePrefix=s,e.namespaceUri=o.lookupNamespaceURI(s)},Abstract:o=>{e.description=o.textContent},Title:o=>{e.title=o.textContent},WGS84BoundingBox:o=>{e.extent=D.fromJSON(ne(o))},DefaultCRS:o=>{const n=k(o);n&&(e.defaultSpatialReference=n,a.add(n))},OtherCRS:o=>{const n=k(o);n&&a.add(n)}}),e.title||(e.title=e.name),a.add(4326),e.supportedSpatialReferences.push(...a),e}}})}function ne(r){let t,e,a,o;for(const n of r.children)switch(n.localName){case"LowerCorner":[t,e]=n.textContent.split(" ").map(s=>Number.parseFloat(s));break;case"UpperCorner":[a,o]=n.textContent.split(" ").map(s=>Number.parseFloat(s))}return{xmin:t,ymin:e,xmax:a,ymax:o,spatialReference:V}}function oe(r,t,e){return h(r,a=>e?a.name===t&&a.namespaceUri===e:a.typeName===t||a.name===t)}async function xe(r,t,e,a={}){const{featureType:o,extent:n}=await se(r,t,e,a),{spatialReference:s}=ge(r.operations.GetFeature.url,o,a.spatialReference),{fields:i,geometryType:u,swapXY:p,objectIdField:l,geometryField:f}=await ie(r,o,s,a);return{url:r.operations.GetCapabilities.url,name:o.name,namespaceUri:o.namespaceUri,fields:i,geometryField:f,geometryType:u,objectIdField:l,spatialReference:a.spatialReference??new P({wkid:o.defaultSpatialReference}),extent:n,swapXY:p,wfsCapabilities:r,customParameters:a.customParameters}}async function se(r,t,e,a={}){const o=r.readFeatureTypes(),n=t?oe(o,t,e):o.next().value,{spatialReference:s=new P({wkid:n?.defaultSpatialReference})}=a;if(n==null)throw t?new c(A,`The type '${t}' could not be found in the service`):new c(q,"The service is empty");let i=n.extent;if(i&&!M(i.spatialReference,s))try{await Y(i.spatialReference,s,void 0,a),i=W(i,s)}catch{throw new c(K,"Projection not supported")}return{extent:i,spatialReference:s,featureType:n}}async function ie(r,t,e,a={}){const{typeName:o}=t,[n,s]=await Promise.allSettled([le(r.operations.DescribeFeatureType.url,o,a),pe(r,o,e,a)]),i=y=>new c(z,`An error occurred while getting info about the feature type '${o}'`,{error:y});if(n.status==="rejected")throw i(n.reason);if(s.status==="rejected")throw i(s.reason);const{fields:u,errors:p}=n.value??{},l=n.value?.geometryType||s.value?.geometryType,f=s.value?.swapXY??!1;if(l==null)throw new c($,`The geometry type could not be determined for type '${o}`,{typeName:o,geometryType:l,fields:u,errors:p});return{...ue(u??[]),geometryType:l,swapXY:f}}function ue(r){const t=r.find(a=>a.type==="geometry");let e=r.find(a=>a.type==="oid");return r=r.filter(a=>a.type!=="geometry"),e||(e=new m({name:E,type:"oid",alias:E}),r.unshift(e)),{geometryField:t?.name??null,objectIdField:e.name,fields:r}}async function pe(r,t,e,a={}){let o,n=!1;const[s,i]=await Promise.all([de(r.operations.GetFeature.url,t,e,r.operations.GetFeature.outputFormat,{...a,count:1}),b(r.operations.GetFeature.url,{responseType:"text",query:N(t,e,void 0,{...a,count:1}),signal:a?.signal})]),u=s.type==="FeatureCollection"&&s.features[0]?.geometry;if(u){let p;switch(o=O.fromJSON(X(u.type)),u.type){case"Point":p=u.coordinates;break;case"LineString":case"MultiPoint":p=u.coordinates[0];break;case"MultiLineString":case"Polygon":p=u.coordinates[0][0];break;case"MultiPolygon":p=u.coordinates[0][0][0]}const l=/<[^>]*pos[^>]*> *(-?\d+(?:\.\d+)?) (-?\d+(?:\.\d+)?)/.exec(i.data);if(l){const f=p[0].toFixed(3),y=p[1].toFixed(3),I=parseFloat(l[1]).toFixed(3);f===parseFloat(l[2]).toFixed(3)&&y===I&&(n=!0)}}return{geometryType:o,swapXY:n}}async function le(r,t,e){return ce(t,(await b(r,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"DescribeFeatureType",VERSION:d,TYPENAME:t,TYPENAMES:t,...e?.customParameters},signal:e?.signal})).data)}function ce(r,t){const{name:e}=w(r),a=G(t);v(a);const o=h(g(a.firstElementChild,{element:n=>n}),n=>n.getAttribute("name")===e);if(o!=null){const n=o.getAttribute("type"),s=n?h(g(a.firstElementChild,{complexType:i=>i}),i=>i.getAttribute("name")===w(n).name):h(g(o,{complexType:i=>i}),()=>!0);if(s)return me(s)}throw new c(A,`Type '${r}' not found in document`,{document:new XMLSerializer().serializeToString(a)})}const fe=new Set(["objectid","fid"]);function me(r){const t=[],e=[];let a;const o=g(r,{complexContent:{extension:{sequence:{element:n=>n}}}});for(const n of o){const s=n.getAttribute("name");if(!s)continue;let i,u;if(n.hasAttribute("type")?i=w(n.getAttribute("type")).name:F(n,{simpleType:{restriction:f=>(i=w(f.getAttribute("base")).name,{maxLength:y=>{u=+y.getAttribute("value")}})}}),!i)continue;const p=n.getAttribute("nillable")==="true";let l=!1;switch(i.toLowerCase()){case"integer":case"nonpositiveinteger":case"negativeinteger":case"long":case"int":case"short":case"byte":case"nonnegativeinteger":case"unsignedlong":case"unsignedint":case"unsignedshort":case"unsignedbyte":case"positiveinteger":e.push(new m({name:s,alias:s,type:"integer",nullable:p,length:T("integer")}));break;case"float":case"double":case"decimal":e.push(new m({name:s,alias:s,type:"double",nullable:p,length:T("double")}));break;case"boolean":case"string":case"gyearmonth":case"gyear":case"gmonthday":case"gday":case"gmonth":case"anyuri":case"qname":case"notation":case"normalizedstring":case"token":case"language":case"idrefs":case"entities":case"nmtoken":case"nmtokens":case"name":case"ncname":case"id":case"idref":case"entity":case"duration":case"time":e.push(new m({name:s,alias:s,type:"string",nullable:p,length:u??T("string")}));break;case"datetime":case"date":e.push(new m({name:s,alias:s,type:"date",nullable:p,length:u??T("date")}));break;case"pointpropertytype":a="point",l=!0;break;case"multipointpropertytype":a="multipoint",l=!0;break;case"curvepropertytype":case"multicurvepropertytype":case"multilinestringpropertytype":a="polyline",l=!0;break;case"surfacepropertytype":case"multisurfacepropertytype":case"multipolygonpropertytype":a="polygon",l=!0;break;case"geometrypropertytype":case"multigeometrypropertytype":l=!0,t.push(new c($,`geometry type '${i}' is not supported`,{type:new XMLSerializer().serializeToString(r)}));break;default:t.push(new c(J,`Unknown field type '${i}'`,{type:new XMLSerializer().serializeToString(r)}))}l&&e.push(new m({name:s,alias:s,type:"geometry",nullable:p}))}for(const n of e)if(n.type==="integer"&&!n.nullable&&fe.has(n.name.toLowerCase())){n.type="oid";break}return{geometryType:a,fields:e,errors:t}}async function de(r,t,e,a,o){let{data:n}=await b(r,{responseType:"text",query:N(t,e,a,o),signal:o?.signal});n=n.replaceAll(/": +(-?\d+),(\d+)(,)?/g,'": $1.$2$3');try{return JSON.parse(n)}catch(s){throw new c(H,"Error while parsing theÂ response",{response:n,error:s})}}function N(r,t,e,a){const o=typeof t=="number"?t:t.wkid;return{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:d,TYPENAMES:r,OUTPUTFORMAT:e,SRSNAME:"EPSG:"+o,STARTINDEX:a?.startIndex,COUNT:a?.count,...a?.customParameters}}async function Ce(r,t,e){const a=await b(r,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:d,TYPENAMES:t,RESULTTYPE:"hits",...e?.customParameters},signal:e?.signal}),o=/numberMatched=["'](?<numberMatched>\d+)["']/gi.exec(a.data);if(o?.groups)return+o.groups.numberMatched}function G(r){return new DOMParser().parseFromString(r.trim(),"text/xml")}function w(r){const[t,e]=r.split(":");return{prefix:e?t:"",name:e??t}}function ye(r){const t=r.firstElementChild?.getAttribute("version");if(t&&t!==d)throw new c(B,`Unsupported WFS version ${t}. Supported version: ${d}`)}function v(r){let t="",e="";if(F(r.firstElementChild,{Exception:a=>(t=a.getAttribute("exceptionCode"),{ExceptionText:o=>{e=o.textContent}})}),t)throw new c(`wfs-layer:${t}`,e)}function ge(r,t,e){const a={wkid:t.defaultSpatialReference},o=e?.wkid!=null?{wkid:e.wkid}:a;return{spatialReference:o,getFeatureSpatialReference:U(r)||o.wkid&&t.supportedSpatialReferences.includes(o.wkid)?{wkid:o.wkid}:{wkid:t.defaultSpatialReference}}}export{E as F,de as K,xe as W,oe as Y,Ce as e,ge as o,Se as v,ue as z};
