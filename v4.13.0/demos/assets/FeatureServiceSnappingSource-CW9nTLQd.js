const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./WhereClause-Dv3x-MsT.js","./main-6eEsl9OJ.js","./preload-helper-B76NpbEU.js","./main-B_8sIZOq.css","./TimeOnly-C1MWI3zZ.js","./enum-DjCgFROZ.js","./UnknownTimeZone-ZLOR0Bi8.js"])))=>i.map(i=>d[i]);
import{_ as Z}from"./preload-helper-B76NpbEU.js";import{aj as G,j as H,ad as g,ag as W,q as r,v as a,x as S,e4 as b,ec as K,eo as Q,bx as j,bj as M,jc as N,jd as B,V as X,je as Y,jf as ee,jg as te,jh as ie,er as se,a3 as re,ao as ne,et as oe,b_ as ae,n as le,br as V,dk as de,aL as ue,c4 as pe,gU as he,c2 as ce,N as R,af as ye,fd as y,eC as L,eb as U}from"./main-6eEsl9OJ.js";import{d as fe}from"./asyncUtils-SHsCTXd3.js";import{t as ge}from"./memoize-DmxaQ-k8.js";import{h as q}from"./UpdatingHandles-DgAejPqv.js";import{y as me}from"./elevationInfoUtils-BiNnYWla.js";import{t as C}from"./TileKey-DZd6gJy7.js";import{o as we}from"./vec32-BvrGiqaM.js";import{g as _e,t as ve,W as be}from"./boundedPlane-Suvf0EGU.js";import{r as Se}from"./layerViewUtils-DUyzdGNv.js";import{o as Ie}from"./SketchViewModel-qU8vsgpY.js";import{o as Oe,i as He}from"./queryEngineUtils-PJzf3mrj.js";import{h as ke}from"./WorkerHandle-IWvq6EKI.js";import{e as $e}from"./projectVectorToVector-PLaHcAe9.js";import{j as Te,l as Fe}from"./TileInfo-CVYxyTVq.js";import{E as Pe}from"./debugFlags-B0yLZSdU.js";import"./ElevationInfo-Dh54MbB6.js";import"./lengthUtils-DL53yBUT.js";import"./common-DQOJ18NT.js";import"./sphere-DYiAGvsP.js";import"./mat4-DL3nuHcq.js";import"./vec42-CKs01hkn.js";import"./vec4f64-DPb6J-GU.js";import"./mat3-CruJiiUv.js";import"./mat3f64-B5o_lm6j.js";import"./vectorStacks-DkJKKYqf.js";import"./mat4f64-q_b6UJoq.js";import"./quatf64-aQ5IuZRd.js";import"./vec2f64-Cgb6qxNH.js";import"./lineSegment-C4u8B-fp.js";import"./plane-BqH4Rk0w.js";import"./projectionUtils-BoGsVCso.js";import"./GraphicsLayer-BnIrIT3a.js";import"./GraphicsCollection-DPkZ9iLQ.js";import"./Layer-DzZVuRQg.js";import"./TimeExtent-DG27ZQvz.js";import"./BlendLayer-Ck8n336O.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-DIh9yTg7.js";import"./parser-C27q64z5.js";import"./mat4f32-Djp3mnm5.js";import"./ScaleRangeLayer-BjLqqFXw.js";import"./editableLayers-D6yrpnO9.js";import"./utils-CcyJ7vzx.js";import"./Queue-DXtZaugk.js";import"./Version-DkcAnD6Q.js";import"./Cyclical-Du2djXHA.js";import"./quantityUtils-DW8sL_d6.js";import"./vec2-ChnYg_BJ.js";import"./geodesicUtils-Bbp3lqW4.js";import"./Query-BQgZ7-at.js";import"./Field-CzUupKXc.js";import"./fieldType-B4FIlvI-.js";import"./geodeticLengthOperator-DNLqI12P.js";import"./geodeticCurveType-CirnHLSB.js";import"./earcut-D9gy186-.js";import"./triangle-DzmNzYoH.js";import"./spatialReferenceEllipsoidUtils-4Wh6IZR8.js";import"./VertexSnappingCandidate-CqqLpPGh.js";import"./PointSnappingHint-Bdx288gW.js";import"./workers-m_rvw_QY.js";import"./intl-Dk1N7wZP.js";import"./projectPointToVector-C4UVIiJJ.js";function P(e,t){return ve(t.extent,A),_e(A,we(Me,e.x,e.y,0))}const A=be(),Me=G();let f=class extends H{get tiles(){const e=this.tilesCoveringView,t=this.pointOfInterest!=null?this.pointOfInterest:this.view.center;return e.sort((i,n)=>P(t,i)-P(t,n)),e}_scaleEnabled(){return Se(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||this.tileInfo==null)return[];if(!this._scaleEnabled)return[];const{spans:e,lodInfo:t}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:i}=t,n=[];for(const{row:s,colFrom:o,colTo:l}of e)for(let u=o;u<=l;u++){const w=t.normalizeCol(u),h=new C(null,i,s,w);this.tileInfo.updateTileInfo(h),n.push(h)}return n}get tileInfo(){return this.view.featuresTilingScheme?.tileInfo??null}get tileSize(){return this.tileInfo!=null?this.tileInfo.size[0]:256}constructor(e){super(e),this.pointOfInterest=null}initialize(){this.addHandles(g(()=>this.view?.state?.viewpoint,()=>this.notifyChange("tilesCoveringView"),W))}};r([a({readOnly:!0})],f.prototype,"tiles",null),r([a({readOnly:!0})],f.prototype,"_scaleEnabled",null),r([a({readOnly:!0})],f.prototype,"tilesCoveringView",null),r([a({readOnly:!0})],f.prototype,"tileInfo",null),r([a({readOnly:!0})],f.prototype,"tileSize",null),r([a({constructOnly:!0})],f.prototype,"view",void 0),r([a({constructOnly:!0})],f.prototype,"layer",void 0),r([a()],f.prototype,"pointOfInterest",void 0),f=r([S("esri.views.2d.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],f);let m=class extends H{get _sortedTilesCoveringView(){const t=(this.view.featureTiles?.tiles?.toArray()??[]).map(Ce),i=this._effectivePointOfInterest;return i!=null&&t.sort((n,s)=>P(i,n)-P(i,s)),t}get tileInfo(){return this.view.featureTiles?.tilingScheme?.toTileInfo()??null}get tileSize(){return this.view.featureTiles?.tileSize??256}get _effectivePointOfInterest(){const t=this.pointOfInterest;return t??this.view.pointsOfInterest?.focus.location}constructor(t){super(t),this.tiles=[],this.pointOfInterest=null}initialize(){this.addHandles([g(()=>this.view.featureTiles,t=>{this.removeHandles(D),t&&this.addHandles(t.addClient(),D)},b),g(()=>this._sortedTilesCoveringView,t=>this._set("tiles",t),{initial:!0,equals:(t,i)=>K(t,i,(n,s)=>n.id===s.id)})])}};function Ce({lij:[e,t,i],extent:n}){return new C(`${e}/${t}/${i}`,e,t,i,n)}r([a({readOnly:!0})],m.prototype,"tiles",void 0),r([a({readOnly:!0})],m.prototype,"_sortedTilesCoveringView",null),r([a({readOnly:!0})],m.prototype,"tileInfo",null),r([a({readOnly:!0})],m.prototype,"tileSize",null),r([a({constructOnly:!0})],m.prototype,"view",void 0),r([a()],m.prototype,"pointOfInterest",void 0),r([a()],m.prototype,"_effectivePointOfInterest",null),m=r([S("esri.views.3d.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],m);const D="feature-tiles",Ee=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let O=class extends H{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._symbols=Ee.map(t=>new Q({color:[t[0],t[1],t[2],.6],outline:{color:"black",width:1}})),this._enabled=!0}initialize(){this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=o=>{if(o.label!=null)return o.label;let l=o.lij.toString();return o.loadPriority!=null&&(l+=` (${o.loadPriority})`),o.measures&&(l+=`[${o.measures.lodLevel}]`),l},t=this.getTiles(),i=new Array,n=new Set((this._labels.size,this._labels.keys()));t.forEach((o,l)=>{const u=o.lij.toString();n.delete(u);const w=o.measures?.lodLevel??o.level,h=o.geometry;if(this.enablePolygons&&!this._polygons.has(u)){const d=new j({geometry:h,symbol:this._symbols[w%this._symbols.length]});this._polygons.set(u,d),i.push(d)}if(this.enableLabels){const d=e(o),_=l/(t.length-1),I=N(0,200,_),k=N(20,6,_)/.75,E=o.loadPriority!=null&&o.loadPriority>=t.length,x=new M([I,E?0:I,E?0:I]),z=this.view.type==="3d"?()=>new B({verticalOffset:new ee({screenLength:40/.75}),callout:new Y({color:new M("white"),border:new ie({color:new M("black")})}),symbolLayers:new X([new te({text:d,halo:{color:"white",size:1/.75},material:{color:x},size:k})])}):()=>new se({text:d,haloColor:"white",haloSize:1/.75,color:x,size:k}),T=this._labels.get(u);if(T){const $=z();T.symbol!=null&&JSON.stringify($)===JSON.stringify(T.symbol)||(T.symbol=$)}else{const $=new j({geometry:h.extent.center,symbol:z()});this._labels.set(u,$),i.push($)}}});const s=new Array;n.forEach(o=>{const l=this._polygons.get(o);l!=null&&(s.push(l),this._polygons.delete(o));const u=this._labels.get(o);u!=null&&(s.push(u),this._labels.delete(o))}),this.view.graphics.removeMany(s),this.view.graphics.addMany(i)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};r([a({constructOnly:!0})],O.prototype,"view",void 0),r([a({readOnly:!0})],O.prototype,"updating",void 0),r([a()],O.prototype,"enabled",null),O=r([S("esri.views.support.TileTreeDebugger")],O);let F=class extends O{constructor(e){super(e)}initialize(){const e=setInterval(()=>this._fetchDebugInfo(),2e3);this.addHandles(re(()=>clearInterval(e)))}getTiles(){if(!this._debugInfo)return[];const e=new Map,t=new Map;this._debugInfo.storedTiles.forEach(s=>{e.set(s.data.id,s.featureCount)}),this._debugInfo.pendingTiles.forEach(s=>{e.set(s.data.id,s.featureCount),t.set(s.data.id,s.state)});const i=s=>{const o=t.get(s),l=e.get(s)??"?";return o?`${o}:${l}
${s}`:`store:${l}
${s}`},n=new Map;return this._debugInfo.storedTiles.forEach(s=>{n.set(s.data.id,s.data)}),this._debugInfo.pendingTiles.forEach(s=>{n.set(s.data.id,s.data)}),Array.from(n.values()).map(s=>({lij:[s.level,s.row,s.col],level:s.level,geometry:ne.fromExtent(oe(s.extent,this.view.spatialReference)),label:i(s.id)}))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then(e=>{this._debugInfo=e,this.update()})}};r([a({constructOnly:!0})],F.prototype,"handle",void 0),F=r([S("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],F);let c=class extends H{get updating(){return this._updatingHandles.updating||this._workerHandleUpdating}constructor(e){super(e),this._updatingHandles=new q,this._suspendController=null,this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async t=>{const i=[];for(const{points:n}of t.pointsInFeatures)for(const{z:s}of n)i.push(s);return{elevations:i,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this.updateOutFields=ae(async(t,i)=>{await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateOutFields",[...t],i)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},i))})}destroy(){this._suspendController=le(this._suspendController),this._workerHandle.destroy(),this._updatingHandles.destroy()}initialize(){this._workerHandle=new ze(this.schedule,{alignElevation:async(e,{signal:t})=>({result:await this.elevationAlignPointsInFeatures(e.query,t)}),getSymbologyCandidates:async(e,{signal:t})=>({result:await this.queryForSymbologySnapping(e,t)})}),this.addHandles([this._workerHandle.on("notify-updating",({updating:e})=>this._workerHandleUpdating=e),this._workerHandle.on("notify-availability",({availability:e})=>this._set("availability",e))])}async setup(e,t){const i=xe(e.layer);if(i==null)return;const n={configuration:J(e.configuration),serviceInfo:i,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:e.layer.elevationInfo?.toJSON()};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",n,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const i=J(e);await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",i,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const{point:i,filter:n,coordinateHelper:s}=e,o={...e,point:$e(i[0],i[1],i[2],s.spatialReference.toJSON()),filter:n?.toJSON()};return this._workerHandle.invoke(o,t)}async updateTiles(e,t){const i={tiles:e.tiles,tileInfo:e.tileInfo!=null?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",i,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async handleEdits({historicMoment:e,addedFeatures:t,deletedFeatures:i,updatedFeatures:n},s){const o={historicMoment:e,addedFeatures:t?.map(({objectId:l})=>l).filter(V)??[],deletedFeatures:i?.map(({objectId:l,globalId:u})=>({objectId:l,globalId:u}))??[],updatedFeatures:n?.map(({objectId:l})=>l).filter(V)??[]};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("handleEdits",o,s)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},s))}async setHistoricMoment(e,t){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setHistoricMoment",{moment:e},t))}getDebugInfo(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})}async setSymbologySnappingSupported(e){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",e)}async setSuspended(e){this._suspendController?.abort(),this._suspendController=new AbortController,await this._workerHandle.invokeMethod("setSuspended",e,this._suspendController.signal)}};function J(e){return{filter:e.filter!=null?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}}function xe(e){return e.geometryType==="multipatch"||e.geometryType==="mesh"?null:{url:e.parsedUrl?.path??"",fieldsIndex:e.fieldsIndex.toJSON(),geometryType:de.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:e.timeInfo?.toJSON()}}r([a({constructOnly:!0})],c.prototype,"schedule",void 0),r([a({constructOnly:!0})],c.prototype,"hasZ",void 0),r([a({constructOnly:!0})],c.prototype,"elevationAlignPointsInFeatures",void 0),r([a({constructOnly:!0})],c.prototype,"queryForSymbologySnapping",void 0),r([a({readOnly:!0})],c.prototype,"updating",null),r([a({readOnly:!0})],c.prototype,"availability",void 0),r([a()],c.prototype,"_workerHandleUpdating",void 0),c=r([S("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],c);class ze extends ke{constructor(t,i){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:i})}}let v=class extends H{get tiles(){return[new C("0/0/0",0,0,0,ue(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new Te({origin:new pe({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new Fe({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}constructor(e){super(e),this.pointOfInterest=null}};r([a({readOnly:!0})],v.prototype,"tiles",null),r([a({readOnly:!0})],v.prototype,"tileInfo",null),r([a({readOnly:!0})],v.prototype,"tileSize",null),r([a({constructOnly:!0})],v.prototype,"layer",void 0),r([a()],v.prototype,"pointOfInterest",void 0),v=r([S("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],v);let p=class extends H{get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get _layerView(){return this.view?.allLayerViews.find(e=>e.layer===this._layer)}get _isSuspended(){return he(this._layer)&&!this.layerSource.sublayerSources.some(e=>e.enabled&&e.layer.visible)?!0:!!this.view&&(this._layerView?.suspended!==!1||!this.layerSource.enabled)}get updating(){return this._workerHandle?.updating||this._updatingHandles.updating}get _outFields(){const{view:e,_layerView:t,layerSource:i}=this,{layer:n}=i,{fieldsIndex:s,timeInfo:o,floorInfo:l,subtypeField:u}=n,w=t&&"filter"in t?t.filter:null,h=w?.where&&w.where!=="1=1"?this._getOrLoadWhereFields(w.where,s):[];if(w?.timeExtent&&o){const{startField:d,endField:_}=o,I=s.get(d)?.name??d,k=s.get(_)?.name??_;I&&h.push(I),k&&h.push(k)}if(e?.map&&Ie(e.map)&&e.map.utilityNetworks?.find(d=>d.isUtilityLayer(n))){const d=n.fieldsIndex.get("assetGroup")?.name,_=n.fieldsIndex.get("assetType")?.name;d&&_&&(h.push(d),h.push(_))}if(n&&l?.floorField&&e?.floors?.length){const d=s.get(l.floorField)?.name??l.floorField;d&&h.push(d)}if(u){const d=s.get(u)?.name??u;d&&h.push(d)}return new Set(h)}get configuration(){const{view:e}=this,{apiKey:t,customParameters:i}=this._layer,n=e!=null?e.type:"2d",s=this._layer.createQuery();return this._layerView&&"effectiveDisplayFilter"in this._layerView&&(s.where=ce(s.where,this._layerView.effectiveDisplayFilter?.where)),{filter:s,customParameters:t?{...i,token:t}:i,viewType:n}}get availability(){return this._workerHandle?.availability??0}get _layer(){return this.layerSource.layer}constructor(e){super(e),this._updatingHandles=new q,this._workerHandle=null,this._debug=null,this._memoizedMakeGetGroundElevation=ge(He)}initialize(){let e;const t=this.view;if(t==null||t.destroyed)this._tilesOfInterest=new v({layer:this._layer}),e=this._workerHandle=new c;else switch(t.type){case"2d":this._tilesOfInterest=new f({view:t,layer:this._layer}),e=this._workerHandle=new c;break;case"3d":{const{resourceController:i}=t,n=this._layer;this._tilesOfInterest=new m({view:t}),e=this._workerHandle=new c({schedule:s=>i.immediate.schedule(s),hasZ:this._layer.hasZ&&(this._layer.returnZ??!0),elevationAlignPointsInFeatures:async(s,o)=>{const l=await t.whenLayerView(n);return R(o),l.elevationAlignPointsInFeatures(s,o)},queryForSymbologySnapping:async(s,o)=>{const l=await t.whenLayerView(n);return R(o),l.queryForSymbologySnapping(s,o)}}),this.addHandles([t.elevationProvider.on("elevation-change",({context:s})=>{const{elevationInfo:o}=n;me(s,o)&&y(e.notifyElevationSourceChange())}),g(()=>n.elevationInfo,()=>y(e.notifyElevationSourceChange()),b),g(()=>this._layerView?.layer?.renderer,()=>y(e.notifySymbologyChange()),b),g(()=>this._layerView?.symbologySnappingSupported??!1,s=>y(e.setSymbologySnappingSupported(s)),b),ye(()=>this._layerView?.layer,["edits","apply-edits","graphic-update"],()=>e.notifySymbologyChange())]);break}}this.addHandles([L(e)]),y(e.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null)),this._updatingHandles.add(()=>this._updateTilesParameters,()=>y(e.updateTiles(this._updateTilesParameters,null)),b),this.addHandles([g(()=>this.configuration,i=>y(e.configure(i,null)),W),g(()=>this._layer.historicMoment,i=>y(e.setHistoricMoment(i)),U),g(()=>this._outFields,i=>y(e.updateOutFields(i)),b),g(()=>this._isSuspended,i=>y(e.setSuspended(i)),U)]),t!=null&&this.addHandles(g(()=>Pe.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES,i=>{i&&!this._debug?(this._debug=new F({view:t,handle:e}),this.addHandles(L(this._debug),"debug")):!i&&this._debug&&this.removeHandles("debug")},b)),this.addHandles([this.layerSource.layer.on("edits",i=>y(e.handleEdits(i,null))),this.layerSource.layer.on("apply-edits",i=>this._updatingHandles.addPromise(i.result))])}destroy(){this._updatingHandles.destroy(),this._tilesOfInterest.destroy()}refresh(){this._workerHandle?.refresh(null)}async fetchCandidates(e,t){const{coordinateHelper:i,point:n}=e;this._tilesOfInterest.pointOfInterest=i.arrayToPoint(n);const s=this._memoizedMakeGetGroundElevation(this.view,i.spatialReference);return(await this._workerHandle.fetchCandidates({...e},t)).candidates.map(o=>Oe(o,s))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}_getOrLoadWhereFields(e,t){const{_whereModule:i}=this;if(!this._loadWhereModuleTask&&!i){const n=fe(async()=>{const s=await Z(()=>import("./WhereClause-Dv3x-MsT.js").then(o=>o.W),__vite__mapDeps([0,1,2,3,4,5,6]),import.meta.url);return this._whereModule=s.default,this._whereModule});return this._loadWhereModuleTask=n,this._updatingHandles.addPromise(n.promise),[]}if(!i)return[];try{return i.create(e,{fieldsIndex:t}).fieldNames}catch{return[]}}};r([a({constructOnly:!0})],p.prototype,"spatialReference",void 0),r([a({constructOnly:!0})],p.prototype,"layerSource",void 0),r([a({constructOnly:!0})],p.prototype,"view",void 0),r([a()],p.prototype,"_tilesOfInterest",void 0),r([a({readOnly:!0})],p.prototype,"_updateTilesParameters",null),r([a()],p.prototype,"_layerView",null),r([a()],p.prototype,"_isSuspended",null),r([a({readOnly:!0})],p.prototype,"updating",null),r([a()],p.prototype,"_outFields",null),r([a({readOnly:!0})],p.prototype,"configuration",null),r([a({readOnly:!0})],p.prototype,"availability",null),r([a()],p.prototype,"_loadWhereModuleTask",void 0),r([a()],p.prototype,"_whereModule",void 0),p=r([S("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],p);export{p as FeatureServiceSnappingSource};
