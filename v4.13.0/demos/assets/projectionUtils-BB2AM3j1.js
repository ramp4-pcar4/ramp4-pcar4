const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./geometryServiceUtils-DyZ-ti_n.js","./main-6eEsl9OJ.js","./preload-helper-B76NpbEU.js","./main-B_8sIZOq.css","./project-B1zqn2VF.js","./utils-DSziZ_FA.js","./utils-B8Gjy-VD.js"])))=>i.map(i=>d[i]);
import{s as o,J as v,N as M}from"./main-6eEsl9OJ.js";import{m as d}from"./HeightModelInfo-JPXqCMoM.js";import{_ as b}from"./preload-helper-B76NpbEU.js";import{J as U,O as k,k as R,L as $,K as I}from"./projectionUtils-BoGsVCso.js";function z(e,t,c){const n=T(e),s=t,g=H(n,s,c);if(n){const a=d.deriveUnitFromSR(n,e.spatialReference).heightUnit;if(!c&&a!==n.heightUnit){const r=new o("layerview:unmatched-height-unit",`The vertical units of the layer must match the horizontal units (${a})`,{horizontalUnit:a});return new o("layerview:unsupported-height-model-info","The vertical coordinate system of the layer is not supported",{heightModelInfo:n,error:r})}}if(!S(e)||g===i.Unsupported)return new o("layerview:unsupported-height-model-info","The vertical coordinate system of the layer is not supported",{heightModelInfo:n});switch(g){case i.Units:{const a=n?.heightUnit||"unknown",r=s?.heightUnit||"unknown",l=new o("layerview:incompatible-height-unit",`The vertical units of the layer (${a}) must match the vertical units of the scene (${r})`,{layerUnit:a,sceneUnit:r});return new o("layerview:incompatible-height-model-info","The vertical coordinate system of the layer is incompatible with the scene",{layerHeightModelInfo:n,sceneHeightModelInfo:s,error:l})}case i.HeightModel:{const a=n?.heightModel||"unknown",r=s?.heightModel||"unknown",l=new o("layerview:incompatible-height-model",`The height model of the layer (${a}) must match the height model of the scene (${r})`,{layerHeightModel:a,sceneHeightModel:r});return new o("layerview:incompatible-height-model-info","The vertical coordinate system of the layer is incompatible with the scene",{layerHeightModelInfo:n,sceneHeightModelInfo:s,error:l})}case i.CRS:{const a=n?.vertCRS||"unknown",r=s?.vertCRS||"unknown",l=new o("layerview:incompatible-vertical-datum",`The vertical datum of the layer (${a}) must match the vertical datum of the scene (${r})`,{layerDatum:a,sceneDatum:r});return new o("layerview:incompatible-height-model-info","The vertical coordinate system of the layer is incompatible with the scene",{layerHeightModelInfo:n,sceneHeightModelInfo:s,error:l})}}return null}function H(e,t,c){if(!f(e)||!f(t))return i.Unsupported;if(e==null||t==null)return i.Ok;if(!c&&e.heightUnit!==t.heightUnit)return i.Units;if(e.heightModel!==t.heightModel)return i.HeightModel;switch(e.heightModel){case"gravity-related-height":return i.Ok;case"ellipsoidal":return e.vertCRS===t.vertCRS?i.Ok:i.CRS;default:return i.Unsupported}}var i;function f(e){return e==null||e.heightModel!=null&&e.heightUnit!=null}function S(e){return"heightModelInfo"in e&&e.heightModelInfo!=null||e.spatialReference!=null||!y(e)}function T(e){if(e.type==="integrated-mesh-3dtiles")return null;const t=e.url?v(e.url):void 0;return!(e.spatialReference?.vcsWkid==null&&t!=null&&t.serverType==="ImageServer")&&p(e)&&e.heightModelInfo?e.heightModelInfo:y(e)?d.deriveUnitFromSR(C,e.spatialReference):null}function p(e){return"heightModelInfo"in e}function m(e){if(e.type==="unknown"||!("capabilities"in e))return!1;switch(e.type){case"catalog":case"catalog-footprint":case"csv":case"feature":case"geojson":case"subtype-group":case"ogc-feature":case"oriented-imagery":case"wfs":case"knowledge-graph-sublayer":return!0;default:return!1}}function y(e){return m(e)?!!(e.capabilities&&e.capabilities.data&&e.capabilities.data.supportsZ):w(e)}function E(e){return e.layers!=null||w(e)||m(e)||p(e)}function w(e){switch(e.type){case"building-scene":case"elevation":case"integrated-mesh":case"integrated-mesh-3dtiles":case"point-cloud":case"scene":case"voxel":return!0;case"base-dynamic":case"base-elevation":case"base-tile":case"bing-maps":case"catalog":case"catalog-footprint":case"catalog-dynamic-group":case"csv":case"dimension":case"geojson":case"feature":case"subtype-group":case"geo-rss":case"graphics":case"group":case"imagery":case"imagery-tile":case"kml":case"knowledge-graph":case"link-chart":case"knowledge-graph-sublayer":case"line-of-sight":case"map-image":case"map-notes":case"media":case"ogc-feature":case"open-street-map":case"oriented-imagery":case"parquet":case"route":case"stream":case"tile":case"unknown":case"unsupported":case"vector-tile":case"video":case"viewshed":case"wcs":case"web-tile":case"wfs":case"wms":case"wmts":case null:return!1}return!1}(function(e){e[e.Ok=0]="Ok",e[e.Units=1]="Units",e[e.HeightModel=2]="HeightModel",e[e.CRS=3]="CRS",e[e.Unsupported=4]="Unsupported"})(i||(i={}));const C=new d({heightModel:"gravity-related-height"});let u,h=null;async function O(e){h||(h=b(()=>import("./geometryServiceUtils-DyZ-ti_n.js"),__vite__mapDeps([0,1,2,3,4,5,6]),import.meta.url).then(t=>u=t)),await h,M(e)}async function _(e,t,c,n){if(!e)return null;const s=e.spatialReference;return R()||$(s,t)?k(e,t):u?u.projectGeometry(e,t,c,n):(await Promise.race([O(n),I(n)]),_(e,t,c,n))}async function F(e,t){try{return e?.spatialReference?await U(e,t):null}catch{return null}}export{z as a,E as g,T as l,F as p,_ as s};
