import{l as _}from"./ClassBreaksDefinition-Col6j9_B.js";import{i as Y}from"./main-CnDVnExo.js";const j=()=>Y.getLogger("esri.rest.support.generateRendererUtils");function v(e,l){return Number(e.toFixed(l))}function Q(e){const l=N(e),t=[],a=l.uniqueValues.length;for(let n=0;n<a;n++){const m=l.uniqueValues[n],r=l.valueFrequency[n],i=m.toString();t.push({value:m,count:r,label:i})}return{uniqueValues:t}}function D(e,l){const{normalizationTotal:t}=e;return{classBreaks:R(e,l),normalizationTotal:t}}function R(e,l){const t=e.definition,{classificationMethod:a,normalizationType:n,definedInterval:m}=t,r=t.breakCount??1,i=[];let s=e.values;if(s.length===0)return[];s=s.sort((c,o)=>c-o);const[h,d]=l??[s.at(0),s.at(-1)];if(a==="equal-interval")if(s.length>=r){const c=(d-h)/r;let o=h;for(let u=1;u<r;u++){const f=v(h+u*c,6);i.push({minValue:o,maxValue:f,label:g(o,f,n)}),o=f}i.push({minValue:o,maxValue:d,label:g(o,d,n)})}else s.forEach(c=>{i.push({minValue:c,maxValue:c,label:g(c,c,n)})});else if(a==="natural-breaks"){const c=N(s),o=e.valueFrequency||c.valueFrequency,u=H(c.uniqueValues,o,r);let f=h;for(let p=1;p<r;p++)if(c.uniqueValues.length>p){const V=v(c.uniqueValues[u[p]],6);i.push({minValue:f,maxValue:V,label:g(f,V,n)}),f=V}i.push({minValue:f,maxValue:d,label:g(f,d,n)})}else if(a==="quantile")if(s.length>=r&&h!==d){let c=h,o=Math.ceil(s.length/r),u=0;for(let f=1;f<r;f++){let p=o+u-1;p>s.length&&(p=s.length-1),p<0&&(p=0),i.push({minValue:c,maxValue:s[p],label:g(c,s[p],n)}),c=s[p],u+=o,o=Math.ceil((s.length-u)/(r-f))}i.push({minValue:c,maxValue:d,label:g(c,d,n)})}else{let c=-1;for(let o=0;o<s.length;o++){const u=s[o];u!==c&&(c=u,i.push({minValue:c,maxValue:u,label:g(c,u,n)}),c=u)}}else if(a==="standard-deviation"){const c=W(s),o=X(s,c);if(o===0)i.push({minValue:s[0],maxValue:s[0],label:g(s[0],s[0],n)});else{const u=K(h,d,r,c,o)*o;let f=0,p=h;for(let b=r;b>=1;b--){const M=v(c-(b-.5)*u,6);i.push({minValue:p,maxValue:M,label:g(p,M,n)}),p=M,f++}let V=v(c+.5*u,6);i.push({minValue:p,maxValue:V,label:g(p,V,n)}),p=V,f++;for(let b=1;b<=r;b++)V=f===2*r?d:v(c+(b+.5)*u,6),i.push({minValue:p,maxValue:V,label:g(p,V,n)}),p=V,f++}}else if(a==="defined-interval"){if(!m)return i;const[c,o]=l??[s.at(0),s.at(-1)],u=Math.ceil((o-c)/m);let f=c;for(let p=1;p<u;p++){const V=v(c+p*m,6);i.push({minValue:f,maxValue:V,label:g(f,V,n)}),f=V}i.push({minValue:f,maxValue:o,label:g(f,o,n)})}return i}function g(e,l,t){let a=null;return a=e===l?t&&t==="percent-of-total"?e+"%":e.toString():t&&t==="percent-of-total"?e+"% - "+l+"%":e+" - "+l,a}function N(e){const l=[],t=[];let a=Number.MIN_VALUE,n=1,m=-1;for(let r=0;r<e.length;r++){const i=e[r];i===a?(n++,t[m]=n):i!==null&&(l.push(i),a=i,n=1,t.push(n),m++)}return{uniqueValues:l,valueFrequency:t}}function H(e,l,t){const a=e.length,n=[];t>a&&(t=a);for(let r=0;r<t;r++)n.push(Math.round(r*a/t-1));n.push(a-1);let m=q(n,e,l,t);return J(m.mean,m.sdcm,n,e,l,t)&&(m=q(n,e,l,t)),n}function q(e,l,t,a){let n=[],m=[],r=[],i=0;const s=[],h=[];for(let u=0;u<a;u++){const f=x(u,e,l,t);s.push(f.sbMean),h.push(f.sbSdcm),i+=h[u]}let d,c=i,o=!0;for(;o||i<c;){o=!1,n=[];for(let u=0;u<a;u++)n.push(e[u]);for(let u=0;u<a;u++)for(let f=e[u]+1;f<=e[u+1];f++)if(d=l[f],u>0&&f!==e[u+1]&&Math.abs(d-s[u])>Math.abs(d-s[u-1]))e[u]=f;else if(u<a-1&&e[u]!==f-1&&Math.abs(d-s[u])>Math.abs(d-s[u+1])){e[u+1]=f-1;break}c=i,i=0,m=[],r=[];for(let u=0;u<a;u++){m.push(s[u]),r.push(h[u]);const f=x(u,e,l,t);s[u]=f.sbMean,h[u]=f.sbSdcm,i+=h[u]}}if(i>c){for(let u=0;u<a;u++)e[u]=n[u],s[u]=m[u],h[u]=r[u];i=c}return{mean:s,sdcm:h}}function J(e,l,t,a,n,m){let r=0,i=0,s=0,h=0,d=!0;for(let c=0;c<2&&d;c++){c===0&&(d=!1);for(let o=0;o<m-1;o++)for(;t[o+1]+1!==t[o+2];){t[o+1]=t[o+1]+1;const u=x(o,t,a,n);s=u.sbMean,r=u.sbSdcm;const f=x(o+1,t,a,n);if(h=f.sbMean,i=f.sbSdcm,!(r+i<l[o]+l[o+1])){t[o+1]=t[o+1]-1;break}l[o]=r,l[o+1]=i,e[o]=s,e[o+1]=h,d=!0}for(let o=m-1;o>0;o--)for(;t[o]!==t[o-1]+1;){t[o]=t[o]-1;const u=x(o-1,t,a,n);s=u.sbMean,r=u.sbSdcm;const f=x(o,t,a,n);if(h=f.sbMean,i=f.sbSdcm,!(r+i<l[o-1]+l[o])){t[o]=t[o]+1;break}l[o-1]=r,l[o]=i,e[o-1]=s,e[o]=h,d=!0}}return d}function K(e,l,t,a,n){let m=Math.max(a-e,l-a)/n/t;return m=m>=1?1:m>=.5?.5:.25,m}function W(e){let l=0;for(let t=0;t<e.length;t++)l+=e[t];return l/=e.length,l}function X(e,l){let t=0;for(let a=0;a<e.length;a++){const n=e[a];t+=(n-l)*(n-l)}return t/=e.length,Math.sqrt(t)}function x(e,l,t,a){let n=0,m=0;for(let s=l[e]+1;s<=l[e+1];s++){const h=a[s];n+=t[s]*h,m+=h}m<=0&&j().warn("Exception in Natural Breaks calculation");const r=n/m;let i=0;for(let s=l[e]+1;s<=l[e+1];s++)i+=a[s]*(t[s]-r)**2;return{sbMean:r,sbSdcm:i}}const Z="<Null>",ee="equal-interval",le=1,te=5,ne=10,ae=/\s*(\+|-)?((\d+(\.\d+)?)|(\.\d+))\s*/gi,ie=new Set(["esriFieldTypeDate","esriFieldTypeInteger","esriFieldTypeSmallInteger","esriFieldTypeSingle","esriFieldTypeDouble","esriFieldTypeLong","esriFieldTypeOID","esriFieldTypeBigInteger"]),ue=new Set(["esriFieldTypeTimeOnly","esriFieldTypeDateOnly"]),k=["min","max","avg","stddev","count","sum","variance","nullcount","median"];function T(e){return e==null||typeof e=="string"&&!e?Z:e}function C(e){const l=e.normalizationField!=null||e.normalizationType!=null,t=e.minValue!=null||e.maxValue!=null,a=!!e.sqlExpression&&e.supportsSQLExpression;return!l&&!t&&!a}function oe(e){const{outStatisticTypes:l}=e,t=e.returnDistinct?[...new Set(e.values)]:e.values,a=t.filter(r=>r!=null).sort(),n=a.length,m={count:n,min:a[0],max:a[n-1]};return e.supportsNullCount&&(m.nullcount=t.length-n),!e.percentileParams||l?.include?.length&&!l.include.includes("median")||l?.exclude?.length&&l.exclude.includes("median")||(m.median=I(t,e.percentileParams)),m}function w(e){const{values:l,useSampleStdDev:t,supportsNullCount:a,outStatisticTypes:n}=e;let m=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY,i=null,s=null,h=null,d=null,c=0;const o=e.minValue==null?-1/0:e.minValue,u=e.maxValue==null?1/0:e.maxValue;for(const p of l)Number.isFinite(p)?p>=o&&p<=u&&(i=i===null?p:i+p,m=Math.min(m,p),r=Math.max(r,p),c++):typeof p=="string"&&c++;if(c&&i!=null){s=i/c;let p=0;for(const V of l)Number.isFinite(V)&&V>=o&&V<=u&&(p+=(V-s)**2);d=t?c>1?p/(c-1):0:c>0?p/c:0,h=Math.sqrt(d)}else m=null,r=null;const f={avg:s,count:c,max:r,min:m,stddev:h,sum:i,variance:d};return a&&(f.nullcount=l.length-c),!e.percentileParams||n?.include?.length&&!n.include.includes("median")||n?.exclude?.length&&n.exclude.includes("median")||(f.median=I(l,e.percentileParams)),f}function I(e,l){const{fieldType:t,value:a,orderBy:n,isDiscrete:m}=l,r=E(t,n==="desc");if((e=[...e].filter(u=>u!=null).sort((u,f)=>r(u,f))).length===0)return null;if(a<=0)return e[0];if(a>=1)return e[e.length-1];const i=(e.length-1)*a,s=Math.floor(i),h=s+1,d=i%1,c=e[s],o=e[h];return h>=e.length||m||typeof c=="string"||typeof o=="string"?c:c*(1-d)+o*d}function E(e,l){if(e){if(ie.has(e))return $(l);if(ue.has(e))return z(l,!1);if(e==="esriFieldTypeTimestampOffset")return ce(l);const r=z(l,!0);if(e==="esriFieldTypeString")return r;if(e==="esriFieldTypeGUID"||e==="esriFieldTypeGlobalID")return(i,s)=>r(U(i),U(s))}const t=l?1:-1,a=$(l),n=z(l,!0),m=B(l);return(r,i)=>typeof r=="number"&&typeof i=="number"?a(r,i):typeof r=="string"&&typeof i=="string"?n(r,i):m(r,i)??t}const y=(e,l)=>e==null?l==null?0:1:l==null?-1:null,F=(e,l)=>e==null?l==null?0:-1:l==null?1:null;function B(e){return e?y:F}const se=(e,l)=>F(e,l)??(e===l?0:new Date(e).getTime()-new Date(l).getTime()),re=(e,l)=>y(e,l)??(e===l?0:new Date(l).getTime()-new Date(e).getTime());function ce(e){return e?re:se}const me=(e,l)=>F(e,l)??(e===l?0:e<l?-1:1),fe=(e,l)=>y(e,l)??(e===l?0:e<l?1:-1);function z(e,l){if(!l)return e?fe:me;const t=B(e);return e?(a,n)=>t(a,n)??((a=a.toUpperCase())>(n=n.toUpperCase())?-1:a<n?1:0):(a,n)=>t(a,n)??((a=a.toUpperCase())<(n=n.toUpperCase())?-1:a>n?1:0)}const de=(e,l)=>y(e,l)??l-e,pe=(e,l)=>F(e,l)??e-l;function $(e){return e?de:pe}function U(e){return e.slice(24,36)+e.slice(19,23)+e.slice(16,18)+e.slice(14,16)+e.slice(11,13)+e.slice(9,11)+e.slice(6,8)+e.slice(4,6)+e.slice(2,4)+e.slice(0,2)}function he(e,l,t){let a;for(a in e)l?.include?.length&&!l.include.includes(a)||l?.exclude?.length&&l.exclude.includes(a)?delete e[a]:k.includes(a)&&(Number.isFinite(e[a])||(e[a]=null));return t&&["avg","stddev","variance"].forEach(n=>{e[n]!=null&&(e[n]=Math.ceil(e[n]??0))}),e}function Ve(e){const l={};for(let t of e)(t==null||typeof t=="string"&&t.trim()==="")&&(t=null),l[t]==null?l[t]={count:1,data:t}:l[t].count++;return{count:l}}function S(e){return e?.type!=="coded-value"?[]:e.codedValues.map(l=>l.code)}function ge(e,l,t,a){const n=e.count,m=[];if(t&&l){const r=[],i=S(l[0]);for(const s of i)if(l[1]){const h=S(l[1]);for(const d of h)if(l[2]){const c=S(l[2]);for(const o of c)r.push(`${T(s)}${a}${T(d)}${a}${T(o)}`)}else r.push(`${T(s)}${a}${T(d)}`)}else r.push(s);for(const s of r)n.hasOwnProperty(s)||(n[s]={data:s,count:0})}for(const r in n){const i=n[r];m.push({value:i.data,count:i.count,label:i.label})}return{uniqueValueInfos:m}}function be(e,l,t,a){let n=null;switch(l){case"log":e!==0&&(n=Math.log(e)*Math.LOG10E);break;case"percent-of-total":Number.isFinite(a)&&a!==0&&(n=e/a*100);break;case"field":Number.isFinite(t)&&t!==0&&(n=e/t);break;case"natural-log":e>0&&(n=Math.log(e));break;case"square-root":e>0&&(n=e**.5)}return n}function O(e,l,t){const a=P({field:l.field,normalizationType:l.normalizationType,normalizationField:l.normalizationField,classificationMethod:l.classificationMethod,standardDeviationInterval:l.standardDeviationInterval,definedInterval:l.definedInterval,breakCount:l.numClasses||te});return e=ve(e,l.minValue,l.maxValue),D({definition:a,values:e,normalizationTotal:l.normalizationTotal},t)}function ve(e,l,t){const a=l??-1/0,n=t??1/0;return e.filter(m=>Number.isFinite(m)&&m>=a&&m<=n)}function P(e){const{breakCount:l,field:t,normalizationField:a,normalizationType:n}=e,m=e.classificationMethod||ee,r=m==="standard-deviation"?e.standardDeviationInterval||le:void 0,i=m==="defined-interval"?e.definedInterval:void 0;return new _({breakCount:l,classificationField:t,classificationMethod:m,normalizationField:n==="field"?a:void 0,normalizationType:n,standardDeviationInterval:r,definedInterval:i})}function xe(e,l){let t=e.classBreaks;const a=t.length,n=t[0]?.minValue,m=t[a-1]?.maxValue,r=l==="standard-deviation",i=ae;return t=t.map(s=>{const h=s.label,d={minValue:s.minValue,maxValue:s.maxValue,label:h};if(r&&h){const c=h.match(i),o=c?.map(u=>+u.trim())??[];o.length===2?(d.minStdDev=o[0],d.maxStdDev=o[1],o[0]<0&&o[1]>0&&(d.hasAvg=!0)):o.length===1&&(h.includes("<")?(d.minStdDev=null,d.maxStdDev=o[0]):h.includes(">")&&(d.minStdDev=o[0],d.maxStdDev=null))}return d}),{minValue:n,maxValue:m,classBreakInfos:t,normalizationTotal:e.normalizationTotal}}function Te(e,l){const t=L(e,l);if(t.min==null&&t.max==null)return{bins:[],minValue:t.min,maxValue:t.max,normalizationTotal:l.normalizationTotal};const a=t.intervals,n=t.min??0,m=t.max??0,r=a.map((i,s)=>({minValue:a[s][0],maxValue:a[s][1],count:0}));for(const i of e)if(i!=null&&i>=n&&i<=m){const s=G(a,i);s>-1&&r[s].count++}return{bins:r,minValue:n,maxValue:m,normalizationTotal:l.normalizationTotal}}function L(e,l,t=!1){const{field:a,classificationMethod:n,standardDeviationInterval:m,definedInterval:r,normalizationType:i,normalizationField:s,normalizationTotal:h,minValue:d,maxValue:c}=l,o=l.numBins||ne;let u=null,f=null,p=null;if((!n||n==="equal-interval")&&!i){if(d!=null&&c!=null)u=d,f=c;else{const V=w({values:e,minValue:d,maxValue:c,useSampleStdDev:!i,supportsNullCount:C({normalizationType:i,normalizationField:s,minValue:d,maxValue:c})});u=V.min??null,f=V.max??null}p=A(u??0,f??0,o)}else{const{classBreaks:V}=O(e,{field:a,normalizationType:i,normalizationField:s,normalizationTotal:h,classificationMethod:n,standardDeviationInterval:m,definedInterval:r,minValue:d,maxValue:c,numClasses:o},d!=null&&c!=null?[d,c]:void 0);u=V[0]?.minValue,f=V[V.length-1]?.maxValue,p=V.map(b=>[b.minValue,b.maxValue])}if(t&&p.length){const V=p.at(-1)[1];p.push([V,V])}return{min:u,max:f,intervals:p}}function G(e,l){let t=-1;for(let a=e.length-1;a>=0;a--)if(l>=e[a][0]){t=a;break}return t}function A(e,l,t){const a=(l-e)/t,n=[];let m,r=e;for(let i=1;i<=t;i++)m=r+a,m=Number(m.toFixed(16)),n.push([r,i===t?l:m]),r=m;return n}export{ge as $,be as B,he as C,O as E,L as G,G as L,xe as P,Te as U,D as a,k as c,C as d,oe as f,E as g,A as j,Ve as k,T as m,Q as n,w as p,P as q,I as v};
