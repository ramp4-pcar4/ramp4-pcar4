import{bv as f,V as w,bp as y,a4 as g,ab as r,e1 as l,ad as _,v as m,z as V}from"./main-CnDVnExo.js";import{S as v}from"./LayerView2D-z8LfwqKr.js";import{t as c}from"./GraphicContainer-BdPF9ZJc.js";import{O as d}from"./GraphicsView2D-BAJSbu1V.js";import{u as b}from"./LayerView-B8AKINce.js";const u="sublayers",o="layerView",C=new Set(["default"]);let p=class extends v(b){constructor(){super(...arguments),this._highlightIds=new Map}*graphicsViews(){this._graphicsViewsFeatureCollectionMap==null?this._graphicsViews==null?yield*[]:yield*this._graphicsViews:yield*this._graphicsViewsFeatureCollectionMap.keys()}async hitTest(i,e){return Array.from(this.graphicsViews(),s=>{const t=s.hitTest(i);if(this._graphicsViewsFeatureCollectionMap!=null){const a=this._graphicsViewsFeatureCollectionMap.get(s);for(const h of t)!h.popupTemplate&&a.popupTemplate&&(h.popupTemplate=a.popupTemplate),h.sourceLayer=h.layer=this.layer}return t}).flat().map(s=>({type:"graphic",graphic:s,layer:this.layer,mapPoint:i}))}highlight(i,e="default"){let s;typeof i=="number"?s=[i]:i instanceof f?s=[i.uid]:Array.isArray(i)&&i.length>0?s=typeof i[0]=="number"?i:i.map(a=>a&&a.uid):w.isCollection(i)&&(s=i.map(a=>a&&a.uid).toArray());const t=s?.filter(y);return t?.length?(this._addHighlight(t),g(()=>this._removeHighlight(t))):g()}update(i){for(const e of this.graphicsViews())e.processUpdate(i)}attach(){const i=this.view,e=()=>this.requestUpdate(),s=this.layer.featureCollections;if(s!=null&&s.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const t of s){const a=new c(this.view.featuresTilingScheme),h=new d({view:i,graphics:t.source,renderer:t.renderer,requestUpdateCallback:e,container:a});this._graphicsViewsFeatureCollectionMap.set(h,t),this.container.addChild(h.container),this.addHandles([r(()=>t.visible,n=>h.container.visible=n,l),r(()=>h.updating,()=>this.notifyChange("updating"),l)],o)}this._updateHighlight()}else this.layer.sublayers!=null&&this.addHandles(_(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),u)}detach(){this._destroyGraphicsViews(),this.removeHandles(u)}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.removeHandles(o);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),this.layer.sublayers==null)return;const i=[],e=this.view,s=()=>this.requestUpdate();for(const t of this.layer.sublayers){const a=new c(this.view.featuresTilingScheme);a.fadeTransitionEnabled=!0;const h=new d({view:e,graphics:t.graphics,requestUpdateCallback:s,container:a});this.addHandles([t.on("graphic-update",h.graphicUpdateHandler),r(()=>t.visible,n=>h.container.visible=n,l),r(()=>h.updating,()=>this.notifyChange("updating"),l)],o),this.container.addChild(h.container),i.push(h)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const e of i)if(this._highlightIds.has(e)){const s=this._highlightIds.get(e);this._highlightIds.set(e,s+1)}else this._highlightIds.set(e,1);this._updateHighlight()}_removeHighlight(i){for(const e of i)if(this._highlightIds.has(e)){const s=this._highlightIds.get(e)-1;s===0?this._highlightIds.delete(e):this._highlightIds.set(e,s)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys()),e=this._getHighlightBits(C.values());for(const s of this.graphicsViews())s.setHighlight(i.map(t=>({objectId:t,highlightFlags:e})))}};p=m([V("esri.views.2d.layers.MapNotesLayerView2D")],p);const H=p;export{H as default};
