import{a0 as d,bY as N,J as E,bZ as M,bn as Y,B as W,v as n,x as o,bJ as X,bV as Z,z as P}from"./main-CnDVnExo.js";import{l as G,m as K}from"./RasterSymbolizer-__W937xp.js";import{f as Q,u as U,s as _}from"./utils-DO-ARjkw.js";import{g as ee}from"./FeatureSet-DClCm5PU.js";import{p as te,l as ae}from"./RasterJobHandlerMixin-CdwgnjLX.js";async function J(t,a,m){const x=Q(t),{rasterFunction:c,sourceJSON:j}=a||{},O=c?JSON.stringify(c.rasterFunctionDefinition||c):null,C=U({...x.query,renderingRule:O,f:"json"}),u=_(C,m);t=x.path;const e=j||await d(t,u).then(i=>i.data),k=e.hasRasterAttributeTable?d(`${t}/rasterAttributeTable`,u):null,z=e.hasColormap?d(`${t}/colormap`,u):null,q=e.hasHistograms?d(`${t}/histograms`,u):null,F=e.currentVersion>=10.3?d(`${t}/keyProperties`,u):null,$=e.hasMultidimensions?d(`${t}/multidimensionalInfo`,u):null,s=await Promise.allSettled([k,z,q,F,$]);let f=null;if(e.minValues&&e.minValues.length===e.bandCount){f=[];for(let i=0;i<e.minValues.length;i++)f.push({min:e.minValues[i],max:e.maxValues[i],avg:e.meanValues[i],stddev:e.stdvValues[i]})}const R=N.fromJSON(e.extent),S=Math.ceil(R.width/e.pixelSizeX-.1),w=Math.ceil(R.height/e.pixelSizeY-.1),h=E.fromJSON(e.spatialReference||e.extent.spatialReference),V=s[0].status==="fulfilled"?s[0].value?.data:null,H=V?.features?.length?ee.fromJSON(V):null,D=s[1].status==="fulfilled"?s[1].value?.data.colormap:null,L=D?.length?D:null,T=s[2].status==="fulfilled"?s[2].value?.data.histograms:null,A=T?.[0]?.counts?.length?T:null,p=s[3].status==="fulfilled"?s[3].value?.data??{}:{},I=s[4].status==="fulfilled"?s[4].value?.data.multidimensionalInfo:null,v=I?.variables?.length?I:null;v&&v.variables.forEach(i=>{i.statistics?.length&&i.statistics.forEach(r=>{r.avg=r.mean,r.stddev=r.standardDeviation}),i.dimensions?.forEach(r=>{r.name!=="StdTime"||r.recurring||r.unit||(r.unit="ISO8601")})});const{defaultVariable:y,serviceDataType:g}=e;y&&y!==p.DefaultVariable&&(p.DefaultVariable=y),g?.includes("esriImageServiceDataTypeVector")&&!g.includes(p.DataType)&&(p.DataType=g.replace("esriImageServiceDataType",""));let b=e.noDataValue;e.noDataValues?.length&&e.noDataValues.some(i=>i!==b)&&(b=e.noDataValues);const B=e.transposeInfo?new G({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new M({x:e.extent.xmin,y:e.extent.ymax,spatialReference:h}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(S,w))/Math.LN2-8)),transposeInfo:e.transposeInfo}):void 0;return new K({width:S,height:w,bandCount:e.bandCount,extent:N.fromJSON(e.extent),spatialReference:h,pixelSize:new M({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:h}),pixelType:e.pixelType.toLowerCase(),statistics:f,attributeTable:H,colormap:L,histograms:A,keyProperties:p,noDataValue:b,multidimensionalInfo:v,storageInfo:B})}function ie(t,a,m){return J(t,{sourceJSON:a},m)}function se(t,a,m){return J(t,{rasterFunction:a},m)}function re(t,a){t.attributeTable||(a.hasRasterAttributeTable=!1),t.histograms||(a.hasHistograms=!1),t.colormap||(a.hasColormap=!1),t.multidimensionalInfo||(a.hasMultidimensions=!1)}let l=class extends Y.ClonableMixin(W){constructor(t){super(t),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};n([o({type:String,json:{write:{isRequired:!0}}})],l.prototype,"name",void 0),n([o({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),X({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],l.prototype,"method",void 0),n([o({type:String,json:{write:{isRequired:!0}}})],l.prototype,"value",void 0),n([o({type:[Z],json:{write:{isRequired:!0}}})],l.prototype,"bandIds",void 0),n([o({types:ae,json:{write:!0,origins:{"web-scene":{types:te,write:{overridePolicy:t=>({enabled:t&&t.type!=="vector-field"&&t.type!=="flow"})}}}}})],l.prototype,"renderer",void 0),l=n([P("esri.renderers.support.RasterPresetRenderer")],l);const ne=t=>{let a=class extends t{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return n([o({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],a.prototype,"activePresetRendererName",void 0),n([o({type:[l],json:{name:"layerDefinition.presetRenderers",write:!0}})],a.prototype,"presetRenderers",void 0),a=n([P("esri.layers.mixins.RasterPresetRendererMixin")],a),a};export{re as c,ie as f,ne as o,se as p};
