import{cT as A,af as f}from"./main-CnDVnExo.js";import{A as y}from"./vec32-wzgHRfsM.js";function M(t){return t<=A?new Array(t):new Int16Array(t)}function b(t,s,a,r,n,u=2){const o=1/(Math.abs(a)+Math.abs(r)+Math.abs(n)),e=a*o,c=r*o,l=n<=0?(e>=0?1:-1)*(1-Math.abs(c)):e,p=n<=0?(c>=0?1:-1)*(1-Math.abs(e)):c,h=s*u;t[h]=i(l),t[h+1]=i(p)}function g(t){const s=t.length/3,a=M(2*s);let r=0;for(let n=0;n<s;++n)b(a,n,t[r++],t[r++],t[r++]);return a}function w(t,s,a,r=2){const n=a*r,u=m(s[n]),o=m(s[n+1]),e=1-Math.abs(u)-Math.abs(o);return t[2]=e,e<0?(t[0]=(u>=0?1:-1)*(1-Math.abs(o)),t[1]=(o>=0?1:-1)*(1-Math.abs(u))):(t[0]=u,t[1]=o),y(t,t)}function i(t){return f(Math.round(32767*t),-32767,32767)}function m(t){return f(t/32767,-1,1)}export{g as c,b as e,M as t,w as u};
