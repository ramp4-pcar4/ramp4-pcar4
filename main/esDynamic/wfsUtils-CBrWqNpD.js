import{a0 as g,J as C,dc as h,ca as D,s as c,dd as O,de as $,df as E,dg as R,bI as Y,dh as W,bY as X,cV as z,cW as T}from"./main-CnDVnExo.js";import{Q as q,O as _}from"./projectionUtils-B4YRVrjd.js";import{u as J}from"./geojson-RdUhWqcJ.js";import{o as S,n as w}from"./xmlUtils-TLuV3CJ7.js";import{m as d}from"./Field-aY1vu-yl.js";const F="xlink:href",m="2.0.0",x="__esri_wfs_id__",Q="wfs-layer:getWFSLayerTypeInfo-error",H="wfs-layer:empty-service",k="wfs-layer:feature-type-not-found",K="wfs-layer:geojson-not-supported",B="wfs-layer:kvp-encoding-not-supported",Z="wfs-layer:malformed-json",P="wfs-layer:unknown-geometry-type",ee="wfs-layer:unknown-field-type",te="wfs-layer:unsupported-spatial-reference",ne="wfs-layer:unsupported-wfs-version";async function ae(n,t){const e=re((await g(n,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetCapabilities",VERSION:m,...t?.customParameters},signal:t?.signal})).data);return ie(n,e),e}function re(n){const t=L(n);he(t),M(t);const e=t.firstElementChild,a=O(ue(e));return{operations:oe(e),get featureTypes(){return Array.from(a())},readFeatureTypes:a}}const se=["json","application/json; subtype=geojson; charset=utf-8","application/json; subtype=geojson","application/json","geojson","application/geo+json"];function A(n){for(const t of se){const e=n.findIndex(a=>a.toLowerCase()===t);if(e>=0)return n[e]}return null}function oe(n){let t=!0;const e={GetCapabilities:{url:""},DescribeFeatureType:{url:""},GetFeature:{url:"",outputFormat:null,supportsPagination:!1}},a=[],s=[];if(S(n,{OperationsMetadata:{Parameter:r=>{if(r.getAttribute("name")?.toLowerCase()==="outputformat")return{AllowedValues:{Value:({textContent:o})=>{o&&a.push(o)}}}},Operation:r=>{switch(r.getAttribute("name")){case"GetCapabilities":return{DCP:{HTTP:{Get:o=>{e.GetCapabilities.url=o.getAttribute(F)}}}};case"DescribeFeatureType":return{DCP:{HTTP:{Get:o=>{e.DescribeFeatureType.url=o.getAttribute(F)}}}};case"GetFeature":return{DCP:{HTTP:{Get:o=>{e.GetFeature.url=o.getAttribute(F)}}},Parameter:o=>{if(o.getAttribute("name")?.toLowerCase()==="outputformat")return{AllowedValues:{Value:({textContent:i})=>{i&&s.push(i)}}}}}}},Constraint:r=>{switch(r.getAttribute("name")){case"KVPEncoding":return{DefaultValue:o=>{t=o.textContent.toLowerCase()==="true"}};case"ImplementsResultPaging":return{DefaultValue:o=>{e.GetFeature.supportsPagination=o.textContent.toLowerCase()==="true"}}}}}}),e.GetFeature.outputFormat=A(s)??A(a),!t)throw new c(B,"WFS service doesn't support key/value pair (KVP) encoding");if(e.GetFeature.outputFormat==null)throw new c(K,"WFS service doesn't support GeoJSON output format");return e}function ie(n,t){$(n)&&(E(n,t.operations.DescribeFeatureType.url,!0)&&(t.operations.DescribeFeatureType.url=R(t.operations.DescribeFeatureType.url)),E(n,t.operations.GetFeature.url,!0)&&(t.operations.GetFeature.url=R(t.operations.GetFeature.url)))}function N(n){const t=parseInt(n.textContent?.match(/(?<wkid>\d+$)/i)?.groups?.wkid??"",10);if(!Number.isNaN(t))return t}function ue(n){return w(n,{FeatureTypeList:{FeatureType:t=>{const e={typeName:"undefined:undefined",name:"",title:"",description:"",extent:null,namespacePrefix:"",namespaceUri:"",defaultSpatialReference:4326,supportedSpatialReferences:[]},a=new Set;return S(t,{Name:s=>{const{name:r,prefix:o}=b(s.textContent);e.typeName=`${o}:${r}`,e.name=r,e.namespacePrefix=o,e.namespaceUri=s.lookupNamespaceURI(o)},Abstract:s=>{e.description=s.textContent},Title:s=>{e.title=s.textContent},WGS84BoundingBox:s=>{e.extent=X.fromJSON(pe(s))},DefaultCRS:s=>{const r=N(s);r&&(e.defaultSpatialReference=r,a.add(r))},OtherCRS:s=>{const r=N(s);r&&a.add(r)}}),e.title||(e.title=e.name),a.add(4326),e.supportedSpatialReferences.push(...a),e}}})}function pe(n){let t,e,a,s;for(const r of n.children)switch(r.localName){case"LowerCorner":[t,e]=r.textContent.split(" ").map(o=>Number.parseFloat(o));break;case"UpperCorner":[a,s]=r.textContent.split(" ").map(o=>Number.parseFloat(o))}return{xmin:t,ymin:e,xmax:a,ymax:s,spatialReference:z}}function v(n,t,e){return h(n,a=>e?a.name===t&&a.namespaceUri===e:a.typeName===t||a.name===t)}async function le(n,t,e,a={}){const{featureType:s,extent:r}=await ce(n,t,e,a),{spatialReference:o}=U(n.operations.GetFeature.url,s,a.spatialReference),{fields:i,geometryType:u,swapXY:p,objectIdField:l,geometryField:f}=await fe(n,s,o,a);return{url:n.operations.GetCapabilities.url,name:s.name,namespaceUri:s.namespaceUri,fields:i,geometryField:f,geometryType:u,objectIdField:l,spatialReference:a.spatialReference??new C({wkid:s.defaultSpatialReference}),extent:r,swapXY:p,wfsCapabilities:n,customParameters:a.customParameters}}async function ce(n,t,e,a={}){const s=n.readFeatureTypes(),r=t?v(s,t,e):s.next().value,{spatialReference:o=new C({wkid:r?.defaultSpatialReference})}=a;if(r==null)throw t?new c(k,`The type '${t}' could not be found in the service`):new c(H,"The service is empty");let i=r.extent;if(i&&!Y(i.spatialReference,o))try{await q(i.spatialReference,o,void 0,a),i=_(i,o)}catch{throw new c(te,"Projection not supported")}return{extent:i,spatialReference:o,featureType:r}}async function fe(n,t,e,a={}){const{typeName:s}=t,[r,o]=await Promise.allSettled([me(n.operations.DescribeFeatureType.url,s,a),de(n,s,e,a)]),i=y=>new c(Q,`An error occurred while getting info about the feature type '${s}'`,{error:y});if(r.status==="rejected")throw i(r.reason);if(o.status==="rejected")throw i(o.reason);const{fields:u,errors:p}=r.value??{},l=r.value?.geometryType||o.value?.geometryType,f=o.value?.swapXY??!1;if(l==null)throw new c(P,`The geometry type could not be determined for type '${s}`,{typeName:s,geometryType:l,fields:u,errors:p});return{...G(u??[]),geometryType:l,swapXY:f}}function G(n){const t=n.find(a=>a.type==="geometry");let e=n.find(a=>a.type==="oid");return n=n.filter(a=>a.type!=="geometry"),e||(e=new d({name:x,type:"oid",alias:x}),n.unshift(e)),{geometryField:t?.name??null,objectIdField:e.name,fields:n}}async function de(n,t,e,a={}){let s,r=!1;const[o,i]=await Promise.all([I(n.operations.GetFeature.url,t,e,n.operations.GetFeature.outputFormat,{...a,count:1}),g(n.operations.GetFeature.url,{responseType:"text",query:j(t,e,void 0,{...a,count:1}),signal:a?.signal})]),u=o.type==="FeatureCollection"&&o.features[0]?.geometry;if(u){let p;switch(s=W.fromJSON(J(u.type)),u.type){case"Point":p=u.coordinates;break;case"LineString":case"MultiPoint":p=u.coordinates[0];break;case"MultiLineString":case"Polygon":p=u.coordinates[0][0];break;case"MultiPolygon":p=u.coordinates[0][0][0]}const l=/<[^>]*pos[^>]*> *(-?\d+(?:\.\d+)?) (-?\d+(?:\.\d+)?)/.exec(i.data);if(l){const f=p[0].toFixed(3),y=p[1].toFixed(3),V=parseFloat(l[1]).toFixed(3);f===parseFloat(l[2]).toFixed(3)&&y===V&&(r=!0)}}return{geometryType:s,swapXY:r}}async function me(n,t,e){return ye(t,(await g(n,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"DescribeFeatureType",VERSION:m,TYPENAME:t,TYPENAMES:t,...e?.customParameters},signal:e?.signal})).data)}function ye(n,t){const{name:e}=b(n),a=L(t);M(a);const s=h(w(a.firstElementChild,{element:r=>r}),r=>r.getAttribute("name")===e);if(s!=null){const r=s.getAttribute("type"),o=r?h(w(a.firstElementChild,{complexType:i=>i}),i=>i.getAttribute("name")===b(r).name):h(w(s,{complexType:i=>i}),()=>!0);if(o)return we(o)}throw new c(k,`Type '${n}' not found in document`,{document:new XMLSerializer().serializeToString(a)})}const ge=new Set(["objectid","fid"]);function we(n){const t=[],e=[];let a;const s=w(n,{complexContent:{extension:{sequence:{element:r=>r}}}});for(const r of s){const o=r.getAttribute("name");if(!o)continue;let i,u;if(r.hasAttribute("type")?i=b(r.getAttribute("type")).name:S(r,{simpleType:{restriction:f=>(i=b(f.getAttribute("base")).name,{maxLength:y=>{u=+y.getAttribute("value")}})}}),!i)continue;const p=r.getAttribute("nillable")==="true";let l=!1;switch(i.toLowerCase()){case"integer":case"nonpositiveinteger":case"negativeinteger":case"long":case"int":case"short":case"byte":case"nonnegativeinteger":case"unsignedlong":case"unsignedint":case"unsignedshort":case"unsignedbyte":case"positiveinteger":e.push(new d({name:o,alias:o,type:"integer",nullable:p,length:T("integer")}));break;case"float":case"double":case"decimal":e.push(new d({name:o,alias:o,type:"double",nullable:p,length:T("double")}));break;case"boolean":case"string":case"gyearmonth":case"gyear":case"gmonthday":case"gday":case"gmonth":case"anyuri":case"qname":case"notation":case"normalizedstring":case"token":case"language":case"idrefs":case"entities":case"nmtoken":case"nmtokens":case"name":case"ncname":case"id":case"idref":case"entity":case"duration":case"time":e.push(new d({name:o,alias:o,type:"string",nullable:p,length:u??T("string")}));break;case"datetime":case"date":e.push(new d({name:o,alias:o,type:"date",nullable:p,length:u??T("date")}));break;case"pointpropertytype":a="point",l=!0;break;case"multipointpropertytype":a="multipoint",l=!0;break;case"curvepropertytype":case"multicurvepropertytype":case"multilinestringpropertytype":a="polyline",l=!0;break;case"surfacepropertytype":case"multisurfacepropertytype":case"multipolygonpropertytype":a="polygon",l=!0;break;case"geometrypropertytype":case"multigeometrypropertytype":l=!0,t.push(new c(P,`geometry type '${i}' is not supported`,{type:new XMLSerializer().serializeToString(n)}));break;default:t.push(new c(ee,`Unknown field type '${i}'`,{type:new XMLSerializer().serializeToString(n)}))}l&&e.push(new d({name:o,alias:o,type:"geometry",nullable:p}))}for(const r of e)if(r.type==="integer"&&!r.nullable&&ge.has(r.name.toLowerCase())){r.type="oid";break}return{geometryType:a,fields:e,errors:t}}async function I(n,t,e,a,s){let{data:r}=await g(n,{responseType:"text",query:j(t,e,a,s),signal:s?.signal});r=r.replaceAll(/": +(-?\d+),(\d+)(,)?/g,'": $1.$2$3');try{return JSON.parse(r)}catch(o){throw new c(Z,"Error while parsing the\xA0response",{response:r,error:o})}}function j(n,t,e,a){const s=typeof t=="number"?t:t.wkid;return{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:m,TYPENAMES:n,OUTPUTFORMAT:e,SRSNAME:"EPSG:"+s,STARTINDEX:a?.startIndex,COUNT:a?.count,...a?.customParameters}}async function be(n,t,e){const a=await g(n,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:m,TYPENAMES:t,RESULTTYPE:"hits",...e?.customParameters},signal:e?.signal}),s=/numberMatched=["'](?<numberMatched>\d+)["']/gi.exec(a.data);if(s?.groups)return+s.groups.numberMatched}function L(n){return new DOMParser().parseFromString(n.trim(),"text/xml")}function b(n){const[t,e]=n.split(":");return{prefix:e?t:"",name:e??t}}function he(n){const t=n.firstElementChild?.getAttribute("version");if(t&&t!==m)throw new c(ne,`Unsupported WFS version ${t}. Supported version: ${m}`)}function M(n){let t="",e="";if(S(n.firstElementChild,{Exception:a=>(t=a.getAttribute("exceptionCode"),{ExceptionText:s=>{e=s.textContent}})}),t)throw new c(`wfs-layer:${t}`,e)}function U(n,t,e){const a={wkid:t.defaultSpatialReference},s=e?.wkid!=null?{wkid:e.wkid}:a;return{spatialReference:s,getFeatureSpatialReference:D(n)||s.wkid&&t.supportedSpatialReferences.includes(s.wkid)?{wkid:s.wkid}:{wkid:t.defaultSpatialReference}}}export{x as F,I as K,le as W,v as Y,be as e,U as o,ae as v,G as z};
