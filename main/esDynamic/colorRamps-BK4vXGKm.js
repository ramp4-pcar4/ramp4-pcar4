import{B as y,v as t,x as s,z as p,h as i,bJ as u,bV as h,bh as n}from"./main-CnDVnExo.js";let l=class extends y{constructor(o){super(o),this.type=null}};t([s({readOnly:!0,json:{read:!1,write:!0}})],l.prototype,"type",void 0),l=t([p("esri.rest.support.ColorRamp")],l);var a;let r=a=class extends l{constructor(o){super(o),this.algorithm=null,this.fromColor=null,this.toColor=null,this.type="algorithmic"}clone(){return new a({fromColor:i(this.fromColor),toColor:i(this.toColor),algorithm:this.algorithm})}};t([u({esriCIELabAlgorithm:"cie-lab",esriHSVAlgorithm:"hsv",esriLabLChAlgorithm:"lab-lch"})],r.prototype,"algorithm",void 0),t([s({type:n,json:{type:[h],write:!0}})],r.prototype,"fromColor",void 0),t([s({type:n,json:{type:[h],write:!0}})],r.prototype,"toColor",void 0),t([s({type:["algorithmic"]})],r.prototype,"type",void 0),r=a=t([p("esri.rest.support.AlgorithmicColorRamp")],r);var m;let e=m=class extends l{constructor(o){super(o),this.colorRamps=null,this.type="multipart"}clone(){return new m({colorRamps:i(this.colorRamps)})}};t([s({type:[r],json:{write:!0}})],e.prototype,"colorRamps",void 0),t([s({type:["multipart"]})],e.prototype,"type",void 0),e=m=t([p("esri.rest.support.MultipartColorRamp")],e);const c={key:"type",base:l,typeMap:{algorithmic:r,multipart:e}};function C(o){return o?.type?o.type==="algorithmic"?r.fromJSON(o):o.type==="multipart"?e.fromJSON(o):null:null}export{e as a,c as m,C as p};
