{"version":3,"file":"form-BXj6ywl8.js","sources":["../../node_modules/@esri/calcite-components/dist/chunks/form.js"],"sourcesContent":["/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.2.1 */\nimport { html, isServer } from \"lit\";\nimport { q as queryElementRoots, l as closestElementCrossShadowBoundary } from \"./dom.js\";\nconst componentsWithInputEvent = [\n  \"calcite-input\",\n  \"calcite-input-number\",\n  \"calcite-input-text\",\n  \"calcite-text-area\"\n];\nfunction getClearValidationEventName(componentTag) {\n  const componentTagCamelCase = componentTag.split(\"-\").map((part, index) => index === 0 ? part : `${part[0].toUpperCase()}${part.slice(1)}`).join(\"\");\n  const clearValidationEvent = `${componentTagCamelCase}${componentsWithInputEvent.includes(componentTag) ? \"Input\" : \"Change\"}`;\n  return clearValidationEvent;\n}\nconst hiddenFormInputSlotName = \"hidden-form-input\";\nfunction isCheckable(component) {\n  return \"checked\" in component;\n}\nconst onFormResetMap = /* @__PURE__ */ new WeakMap();\nconst formComponentSet = /* @__PURE__ */ new WeakSet();\nfunction hasRegisteredFormComponentParent(form, formComponentEl) {\n  const hasParentComponentWithFormIdSet = closestElementCrossShadowBoundary(formComponentEl.parentElement, \"[form]\");\n  if (hasParentComponentWithFormIdSet) {\n    return true;\n  }\n  const formComponentRegisterEventName = \"calciteInternalFormComponentRegister\";\n  let hasRegisteredFormComponentParent2 = false;\n  form.addEventListener(formComponentRegisterEventName, (event) => {\n    hasRegisteredFormComponentParent2 = event.composedPath().some((element) => formComponentSet.has(element));\n    event.stopPropagation();\n  }, { once: true });\n  formComponentEl.dispatchEvent(new CustomEvent(formComponentRegisterEventName, {\n    bubbles: true,\n    composed: true\n  }));\n  return hasRegisteredFormComponentParent2;\n}\nfunction displayValidationMessage(component, { status, message, icon }) {\n  if (\"status\" in component) {\n    component.status = status;\n  }\n  if (\"validationIcon\" in component && typeof component.validationIcon !== \"string\") {\n    component.validationIcon = icon;\n  }\n  if (\"validationMessage\" in component && !component.validationMessage) {\n    component.validationMessage = message;\n  }\n}\nfunction getValidationComponent(el) {\n  if (el.nodeName === \"CALCITE-RADIO-BUTTON\") {\n    return closestElementCrossShadowBoundary(el, \"calcite-radio-button-group\");\n  }\n  return el;\n}\nconst invalidEvent = new CustomEvent(\"calciteInvalid\", { bubbles: true, composed: true });\nfunction invalidHandler(event) {\n  const hiddenInput = event?.target;\n  const hiddenInputMessage = hiddenInput?.validationMessage;\n  const formComponent = getValidationComponent(hiddenInput?.parentElement);\n  if (!formComponent) {\n    return;\n  }\n  const componentTag = formComponent?.nodeName?.toLowerCase();\n  const componentTagParts = componentTag?.split(\"-\");\n  if (componentTagParts.length < 2 || componentTagParts[0] !== \"calcite\") {\n    return;\n  }\n  event?.preventDefault();\n  if (\"validity\" in formComponent) {\n    formComponent.validity = hiddenInput?.validity;\n  }\n  formComponent.dispatchEvent(invalidEvent);\n  displayValidationMessage(formComponent, {\n    message: hiddenInputMessage,\n    icon: true,\n    status: \"invalid\"\n  });\n  const clearValidationEvent = getClearValidationEventName(componentTag);\n  formComponent.addEventListener(clearValidationEvent, () => {\n    if (\"status\" in formComponent) {\n      formComponent.status = \"idle\";\n    }\n    if (\"validationIcon\" in formComponent && (formComponent.validationIcon === \"\" || formComponent.validationIcon === true)) {\n      formComponent.validationIcon = false;\n    }\n    if (\"validationMessage\" in formComponent && formComponent.validationMessage === hiddenInputMessage) {\n      formComponent.validationMessage = \"\";\n    }\n    if (\"validity\" in formComponent) {\n      formComponent.validity = hiddenInput?.validity;\n    }\n  }, { once: true });\n}\nfunction submitForm(component) {\n  const { formEl } = component;\n  if (!formEl) {\n    return false;\n  }\n  formEl.addEventListener(\"invalid\", invalidHandler, true);\n  formEl.requestSubmit();\n  formEl.removeEventListener(\"invalid\", invalidHandler, true);\n  requestAnimationFrame(() => {\n    const invalidEls = formEl.querySelectorAll(\"[status=invalid]\");\n    for (const el of invalidEls) {\n      if (el?.validationMessage) {\n        el?.setFocus();\n        break;\n      }\n    }\n  });\n  return true;\n}\nfunction resetForm(component) {\n  component.formEl?.reset();\n}\nfunction connectForm(component) {\n  const { el, value } = component;\n  const associatedForm = findAssociatedForm(component);\n  if (!associatedForm || hasRegisteredFormComponentParent(associatedForm, el)) {\n    return;\n  }\n  component.formEl = associatedForm;\n  component.defaultValue = value;\n  if (isCheckable(component)) {\n    component.defaultChecked = component.checked;\n  }\n  const boundOnFormReset = onFormReset.bind(component);\n  associatedForm.addEventListener(\"reset\", boundOnFormReset);\n  onFormResetMap.set(component.el, boundOnFormReset);\n  formComponentSet.add(el);\n}\nfunction findAssociatedForm(component) {\n  const { el, form } = component;\n  return form ? queryElementRoots(el, { id: form }) : closestElementCrossShadowBoundary(el, \"form\");\n}\nfunction onFormReset() {\n  if (\"status\" in this) {\n    this.status = \"idle\";\n  }\n  if (\"validationIcon\" in this) {\n    this.validationIcon = false;\n  }\n  if (\"validationMessage\" in this) {\n    this.validationMessage = \"\";\n  }\n  if (isCheckable(this)) {\n    this.checked = this.defaultChecked;\n    return;\n  }\n  this.value = this.defaultValue;\n  this.onFormReset?.();\n}\nfunction disconnectForm(component) {\n  const { el, formEl } = component;\n  if (!formEl) {\n    return;\n  }\n  const boundOnFormReset = onFormResetMap.get(el);\n  formEl.removeEventListener(\"reset\", boundOnFormReset);\n  onFormResetMap.delete(el);\n  component.formEl = null;\n  formComponentSet.delete(el);\n}\nfunction afterConnectDefaultValueSet(component, value) {\n  component.defaultValue = value;\n}\nconst internalHiddenInputInputEvent = \"calciteInternalHiddenInputInput\";\nconst hiddenInputInputHandler = (event) => {\n  event.target.dispatchEvent(new CustomEvent(internalHiddenInputInputEvent, { bubbles: true }));\n};\nconst removeHiddenInputChangeEventListener = (input) => input.removeEventListener(\"input\", hiddenInputInputHandler);\nfunction syncHiddenFormInput(component) {\n  const { el, formEl, name, value } = component;\n  const { ownerDocument } = el;\n  if (isServer) {\n    return;\n  }\n  const inputs = el.querySelectorAll(`input[slot=\"${hiddenFormInputSlotName}\"]`);\n  if (!formEl || !name) {\n    inputs.forEach((input) => {\n      removeHiddenInputChangeEventListener(input);\n      input.remove();\n    });\n    return;\n  }\n  const values = Array.isArray(value) ? value : [value];\n  const extra = [];\n  const seen = /* @__PURE__ */ new Set();\n  inputs.forEach((input) => {\n    const valueMatch = values.find((val) => (\n      /* intentional non-strict equality check */\n      val == input.value\n    ));\n    if (valueMatch != null) {\n      seen.add(valueMatch);\n      defaultSyncHiddenFormInput(component, input, valueMatch);\n    } else {\n      extra.push(input);\n    }\n  });\n  let docFrag;\n  values.forEach((value2) => {\n    if (seen.has(value2)) {\n      return;\n    }\n    let input = extra.pop();\n    if (!input) {\n      input = ownerDocument.createElement(\"input\");\n      input.ariaHidden = \"true\";\n      input.slot = hiddenFormInputSlotName;\n    }\n    if (!docFrag) {\n      docFrag = ownerDocument.createDocumentFragment();\n    }\n    docFrag.append(input);\n    input.addEventListener(\"input\", hiddenInputInputHandler);\n    defaultSyncHiddenFormInput(component, input, value2);\n  });\n  if (docFrag) {\n    el.append(docFrag);\n  }\n  extra.forEach((input) => {\n    removeHiddenInputChangeEventListener(input);\n    input.remove();\n  });\n}\nfunction defaultSyncHiddenFormInput(component, input, value) {\n  const { defaultValue, disabled, form, name, required } = component;\n  input.defaultValue = defaultValue;\n  input.disabled = disabled;\n  input.name = name;\n  input.required = required;\n  input.tabIndex = -1;\n  if (form) {\n    input.setAttribute(\"form\", form);\n  } else {\n    input.removeAttribute(\"form\");\n  }\n  if (isCheckable(component)) {\n    input.checked = component.checked;\n    input.defaultChecked = component.defaultChecked;\n    input.value = component.checked ? value || \"on\" : \"\";\n  } else {\n    input.value = value || \"\";\n  }\n  component.syncHiddenFormInput?.(input);\n  const validationComponent = getValidationComponent(component.el);\n  if (validationComponent && \"validity\" in validationComponent) {\n    for (const key in { ...input?.validity }) {\n      validationComponent.validity[key] = input.validity[key];\n    }\n  }\n}\nconst HiddenFormInputSlot = ({ component }) => {\n  syncHiddenFormInput(component);\n  return html`<slot name=${hiddenFormInputSlotName}></slot>`;\n};\nexport {\n  HiddenFormInputSlot as H,\n  afterConnectDefaultValueSet as a,\n  connectForm as c,\n  disconnectForm as d,\n  findAssociatedForm as f,\n  internalHiddenInputInputEvent as i,\n  resetForm as r,\n  submitForm as s\n};\n"],"names":["componentsWithInputEvent","getClearValidationEventName","componentTag","part","index","hiddenFormInputSlotName","isCheckable","component","onFormResetMap","formComponentSet","hasRegisteredFormComponentParent","form","formComponentEl","closestElementCrossShadowBoundary","formComponentRegisterEventName","hasRegisteredFormComponentParent2","event","element","displayValidationMessage","status","message","icon","getValidationComponent","el","invalidEvent","invalidHandler","hiddenInput","hiddenInputMessage","formComponent","componentTagParts","clearValidationEvent","submitForm","formEl","invalidEls","resetForm","connectForm","value","associatedForm","findAssociatedForm","boundOnFormReset","onFormReset","queryElementRoots","disconnectForm","internalHiddenInputInputEvent","hiddenInputInputHandler","removeHiddenInputChangeEventListener","input","syncHiddenFormInput","name","ownerDocument","inputs","values","extra","seen","valueMatch","val","defaultSyncHiddenFormInput","docFrag","value2","defaultValue","disabled","required","validationComponent","key","HiddenFormInputSlot","html"],"mappings":"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","x_google_ignoreList":[0]}