import{n as _,c8 as v,O as c,e1 as u,ab as S,ad as w,ew as b,G as k,am as E,dh as C,v as r,x as p,z as A}from"./main-CnDVnExo.js";import{d as F}from"./asyncUtils-Bt7pGkXn.js";import{t as G}from"./memoize-DvEt8OkT.js";import{h as P}from"./UpdatingHandles-BRsO5JmU.js";import{Q as I,L as H,O}from"./projectionUtils-B4YRVrjd.js";import{a as R}from"./normalizeUtilsSync-tIpeJyPX.js";import{u as x}from"./featureConversionUtils-DJPd03TP.js";import{s as z}from"./OptimizedFeature-Ch3Mnc5k.js";import{u as Z}from"./executeQueryForSnapping---jlCg8D.js";import{f as L}from"./FeatureStore-B0ERptus.js";import{L as M}from"./QueryEngine-BTiuHzq6.js";import{Z as W}from"./FieldsIndex-BZRQHZ3i.js";import{y as N}from"./elevationInfoUtils-IwFHKcCU.js";import{A as y}from"./utils-m8U_TYuN.js";import{E as q,y as T}from"./SketchViewModel-Bswg1_Ha.js";import{o as j,i as J}from"./queryEngineUtils-DF2cszgm.js";import{i as m,r as B,n as g}from"./symbologySnappingCandidates-r1_sG-Mr.js";import{g as D}from"./Scheduler-CBVtZ1EV.js";const f="graphics-collections";let a=class extends _{get updating(){return this._updatingHandles.updating}get _hasZ(){const e=this.view;return e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes"}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,s=e!=null&&e.type==="3d";if(!s||t.type==="map-notes")return m();const i=async(o,n)=>(await v(e.whenLayerView(t),n)).elevationAlignPointsInFeatures(o,n);return m(s,{elevationInfo:t.elevationInfo,alignPointsInFeatures:i})}get _snappingElevationFilter(){const{view:e}=this,t=e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes";return B(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource,s=e!=null&&e.type==="3d",i=this._extrudedPolygonSymbolsCount>0;return s&&t.type!=="map-notes"&&i?g(i,async(o,n)=>{const l=await e.whenLayerView(t);return c(n),l.queryForSymbologySnapping({candidates:o,spatialReference:e.spatialReference},n)}):g()}constructor(e){super(e),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0,this._updatingHandles=new P,this._memoizedMakeGetGroundElevation=G(J)}destroy(){for(const e of this._pendingAdds)e.task.abort();this._pendingAdds.length=0,this._mapSources(e=>this._destroySource(e)),this._updatingHandles.destroy()}initialize(){this._updatingHandles.add(()=>this.getGraphicsLayers(),s=>{this._updatingHandles.removeHandles(f);for(const i of s)this._addMany(i.graphics.toArray()),this.addHandles([i.on("graphic-update",o=>this._onGraphicUpdate(o)),this._updatingHandles.addOnCollectionChange(()=>i.graphics,o=>this._onGraphicsChanged(o))],f)},u);const{view:e}=this,{layer:t}=this.layerSource;e!=null&&e.type==="3d"&&t.type!=="map-notes"&&e.elevationProvider&&this.addHandles([e.elevationProvider.on("elevation-change",({context:s})=>{N(s,t.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()}),S(()=>t.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),u),w(()=>t,["edits","apply-edits","graphic-update"],()=>this._symbologySnappingFetcher.notifySymbologyChange())])}async fetchCandidates(e,t){const{point:s,coordinateHelper:{spatialReference:i}}=e,o=await b(this._mapSources(d=>this._fetchCandidatesForSource(d,e,t)));c(t);const n=this._memoizedMakeGetGroundElevation(this.view,i),l=o.flat().map(d=>j(d,n));return q(s,l),l}async _fetchCandidatesForSource(e,t,s){const i=T({parameters:t,mode:this.view?.type??"2d"}),o=await Z(e.queryEngine,i,s);c(s);const n=await this._snappingElevationAligner.alignCandidates(o.candidates,t.coordinateHelper.spatialReference,s);c(s);const l=await this._symbologySnappingFetcher.fetch(n,s);c(s);const d=l.length===0?n:[...n,...l];return this._snappingElevationFilter.filter(i,d)}refresh(){}_onGraphicUpdate(e){if(this.getGraphicsLayers().some(t=>t.graphics.includes(e.graphic)))switch(e.property){case"geometry":case"visible":this._remove(e.graphic),this._addMany([e.graphic])}}_onGraphicsChanged(e){for(const t of e.removed)this._remove(t);this._addMany(e.added)}_addMany(e){const t=[],s=new Map;for(const i of e)i.geometry!=null&&(this._needsInitializeProjection(i.geometry.spatialReference)?(t.push(i.geometry.spatialReference),s.set(i.uid,i)):this._add(i));this._createPendingAdd(t,s)}_createPendingAdd(e,t){if(!e.length)return;const s=F(async n=>{await I(e.map(l=>({source:l,dest:this.spatialReference})),{signal:n}),this._markLoadedSpatialReferences(e);for(const l of t.values())this._add(l)});this._updatingHandles.addPromise(s.promise);const i={task:s,graphics:t},o=()=>k(this._pendingAdds,i);s.promise.then(o,o),this._pendingAdds.push(i)}_markLoadedSpatialReferences(e){for(const t of e){t.wkid!=null&&this._loadedWkids.add(t.wkid);const s=t.wkt2||t.wkt;s&&this._loadedWkts.add(s)}}_add(e){if(e.geometry==null||!e.visible)return;let t=e.geometry;if(t.type==="mesh")return;t.type==="extent"&&(t=E.fromExtent(t));const s=this._ensureSource(t.type);if(s==null)return;const i=this._createOptimizedFeature(e.uid,t);i!=null&&(s.featureStore.add(i),y(e.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(e){if(e.wkid!=null&&this._loadedWkids.has(e.wkid))return!1;const t=e.wkt2||e.wkt;return(!t||!this._loadedWkts.has(t))&&!H(e,this.spatialReference)}_createOptimizedFeature(e,t){const s=O(R(t),this.spatialReference);if(!s)return null;const i=this._ensureGeometryHasZ(s),o=x(i,this._hasZ,!1);return new z(o,{[h]:e},null,e)}_ensureGeometryHasZ(e){if(!this._hasZ)return e;const t=i=>{for(;i.length<3;)i.push(0)},s=e.clone();switch(s.hasZ=!0,s.type){case"point":s.z=s.z??0;break;case"multipoint":s.points.forEach(t);break;case"polyline":s.paths.forEach(i=>i.forEach(t));break;case"polygon":s.rings.forEach(i=>i.forEach(t))}return s}_ensureSource(e){const t=this._sources[e];if(t!=null)return t;const s=this._createSource(e);return this._sources[e]=s,s}_createSource(e){const t=C.toJSON(e),s=this._hasZ,i=new L({geometryType:t,hasZ:s,hasM:!1});return{featureStore:i,queryEngine:new M({featureStore:i,fieldsIndex:W.fromLayerJSON({fields:[{name:h,type:"esriFieldTypeOID",alias:h}]}),geometryType:t,hasM:!1,hasZ:s,featureIdInfo:{type:"object-id",fieldName:h},spatialReference:this.spatialReference,priority:D.SNAPPING,scheduler:this.view!=null&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:e}}_remove(e){this._mapSources(t=>this._removeFromSource(t,e));for(const t of this._pendingAdds)t.graphics.delete(e.uid),t.graphics.size===0&&t.task.abort()}_removeFromSource(e,t){const s=t.uid;e.featureStore.has(s)&&(e.featureStore.removeById(t.uid),y(t.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(e){e.queryEngine.destroy(),this._sources[e.type]=null}_mapSources(e){const{point:t,polygon:s,polyline:i,multipoint:o}=this._sources,n=[];return t!=null&&n.push(e(t)),s!=null&&n.push(e(s)),i!=null&&n.push(e(i)),o!=null&&n.push(e(o)),n}};r([p()],a.prototype,"getGraphicsLayers",void 0),r([p({constructOnly:!0})],a.prototype,"layerSource",void 0),r([p({constructOnly:!0})],a.prototype,"spatialReference",void 0),r([p({constructOnly:!0})],a.prototype,"view",void 0),r([p({readOnly:!0})],a.prototype,"updating",null),r([p({readOnly:!0})],a.prototype,"availability",void 0),r([p()],a.prototype,"_hasZ",null),r([p()],a.prototype,"_snappingElevationAligner",null),r([p()],a.prototype,"_snappingElevationFilter",null),r([p()],a.prototype,"_symbologySnappingFetcher",null),r([p()],a.prototype,"_extrudedPolygonSymbolsCount",void 0),a=r([A("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],a);const h="OBJECTID";export{a as GraphicsSnappingSource};
