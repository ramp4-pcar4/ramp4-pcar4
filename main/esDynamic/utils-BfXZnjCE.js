import{n as T,i as X}from"./defaultCIMValues-BcSaJjm-.js";function Y(e){return typeof e=="function"}function J(e,r,t,n){return Y(e)?e(r,t,n):e}function W(e){return[e.r,e.g,e.b,e.a]}const $=` /-,
`;function F(e){let r=e.length;for(;r--;)if(!$.includes(e.charAt(r)))return!1;return!0}function Z(e,r){const t=[];let n=0,a=-1;do if(a=e.indexOf("[",n),a>=n){if(a>n){const o=e.slice(n,a);t.push([o,null,F(o)])}if(n=a+1,a=e.indexOf("]",n),a>=n){if(a>n){const o=r[e.slice(n,a)];o&&t.push([null,o,!1])}n=a+1}}while(a!==-1);if(n<e.length){const o=e.slice(n);t.push([o,null,F(o)])}return t}function _(e,r,t){let n="",a=null;for(const o of r){const[l,s,u]=o;if(l!=null&&l!=="")u?a=l:(a!=null&&(n+=a,a=null),n+=l);else{const i=e.readAttribute(s);i!=null&&i!==""&&(a!==null&&(n+=a,a=null),n+=i)}}return E(n,t)}function Q(e,r,t,n){let a="",o=null;for(const l of r){const[s,u,i]=l;if(s!=null&&s!=="")i?o=s:(o!=null&&(a+=o,o=null),a+=s);else{let m=u;t!=null&&(m=ge(u,t));const c=e.attributes[m];c!=null&&c!==""&&(o!=null&&(a+=o,o=null),a+=c)}}return E(a,n)}function E(e,r){switch(typeof e!="string"&&(e=String(e)),r){case"LowerCase":return e.toLowerCase();case"Allcaps":return e.toUpperCase();default:return e}}function K(e,r,t,n,a,o,l=!0){const s=r/a,u=t/o,i=Math.ceil(s/2),m=Math.ceil(u/2);for(let c=0;c<o;c++)for(let f=0;f<a;f++){const I=4*(f+(l?o-c-1:c)*a);let M=0,p=0,b=0,d=0,P=0,g=0,k=0;const L=(c+.5)*u;for(let h=Math.floor(c*u);h<(c+1)*u;h++){const v=Math.abs(L-(h+.5))/m,H=(f+.5)*s,U=v*v;for(let w=Math.floor(f*s);w<(f+1)*s;w++){let y=Math.abs(H-(w+.5))/i;const C=Math.sqrt(U+y*y);C>=-1&&C<=1&&(M=2*C*C*C-3*C*C+1,M>0&&(y=4*(w+h*r),k+=M*e[y+3],b+=M,e[y+3]<255&&(M=M*e[y+3]/250),d+=M*e[y],P+=M*e[y+1],g+=M*e[y+2],p+=M))}}n[I]=d/p,n[I+1]=P/p,n[I+2]=g/p,n[I+3]=k/b}}function V(e){return e?[e[0],e[1],e[2],e[3]/255]:[0,0,0,0]}function ee(e){return e.data?.symbol??null}function re(e){return e.type==="CIMVectorMarker"||e.type==="CIMPictureMarker"||e.type==="CIMBarChartMarker"||e.type==="CIMCharacterMarker"||e.type==="CIMPieChartMarker"||e.type==="CIMStackedBarChartMarker"}function te(e){return e.type==="CIMGradientStroke"||e.type==="CIMPictureStroke"||e.type==="CIMSolidStroke"}function ne(e){return e!=null&&(e.type==="CIMGradientFill"||e.type==="CIMHatchFill"||e.type==="CIMPictureFill"||e.type==="CIMSolidFill"||e.type==="CIMWaterFill")}function z(e){return e!=null&&(e.type==="CIMMarkerPlacementAlongLineRandomSize"||e.type==="CIMMarkerPlacementAlongLineSameSize"||e.type==="CIMMarkerPlacementAlongLineVariableSize"||e.type==="CIMMarkerPlacementAtExtremities"||e.type==="CIMMarkerPlacementAtMeasuredUnits"||e.type==="CIMMarkerPlacementAtRatioPositions"||e.type==="CIMMarkerPlacementOnLine"||e.type==="CIMMarkerPlacementOnVertices")}const oe=(e,r=0)=>e==null||isNaN(e)?r:e,ae=(e,r)=>e??r,se=(e,r)=>e??r,le=e=>e.tintColor?V(e.tintColor):[255,255,255,1],ie=e=>{if(!e)return!1;for(const r of e)switch(r.type){case"CIMGeometricEffectBuffer":case"CIMGeometricEffectDonut":case"CIMGeometricEffectOffset":case"CIMGeometricEffectTaperedPolygon":case"CIMGeometricEffectEnclosingPolygon":return!0}return!1};function ce(){return import("./geometryEngineJSON-DUmg2EKv.js").then(e=>e.g)}function ue(e){if(!e)return"normal";switch(e.toLowerCase()){case"italic":return"italic";case"oblique":return"oblique";default:return"normal"}}function fe(e){if(!e)return"normal";switch(e.toLowerCase()){case"bold":return"bold";case"bolder":return"bolder";case"lighter":return"lighter";default:return"normal"}}function Me(e){let r="normal",t="normal";if(e){const n=e.toLowerCase();n.includes("italic")?r="italic":n.includes("oblique")&&(r="oblique"),n.includes("bold")?t="bold":n.includes("light")&&(t="lighter")}return{style:r,weight:t}}function ye(e){return e.underline?"underline":e.strikethrough?"line-through":"none"}function A(e){if(!e)return null;switch(e.type){case"CIMPolygonSymbol":if(e.symbolLayers)for(const r of e.symbolLayers){const t=A(r);if(t!=null)return t}break;case"CIMTextSymbol":return A(e.symbol);case"CIMSolidFill":return e.color}return null}function N(e){if(e)switch(e.type){case"CIMPolygonSymbol":case"CIMLineSymbol":{const r=e.symbolLayers;if(r)for(const t of r){const n=N(t);if(n!=null)return n}break}case"CIMTextSymbol":return N(e.symbol);case"CIMSolidStroke":return e.color}}function me(e){for(const r of e)if(r.enable)switch(r.type){case"CIMSolidStroke":case"CIMGradientStroke":case"CIMPictureStroke":return!0}return!1}function x(e){if(e)switch(e.type){case"CIMPolygonSymbol":case"CIMLineSymbol":if(e.symbolLayers)for(const r of e.symbolLayers){const t=x(r);if(t!==void 0)return t}break;case"CIMTextSymbol":return x(e.symbol);case"CIMSolidStroke":case"CIMGradientStroke":case"CIMPictureStroke":return e.width}}function Ce(e){switch(e){case"Left":default:return"left";case"Right":return"right";case"Center":case"Justify":return"center"}}function Ie(e){switch(e){case"Top":default:return"top";case"Center":return"middle";case"Baseline":return"baseline";case"Bottom":return"bottom"}}function pe(e){return(e?Object.keys(e):[]).map(r=>({name:r,alias:r,type:typeof e[r]=="string"?"esriFieldTypeString":"esriFieldTypeDouble"}))}const he=e=>e.includes("data:image/svg+xml");function be(e){if(!e)return null;switch(e.type){case"CIMPointSymbol":case"CIMTextSymbol":return"esriGeometryPoint";case"CIMLineSymbol":return"esriGeometryPolyline";case"CIMPolygonSymbol":return"esriGeometryPolygon";default:return null}}function S(e){return e&&e.charAt(0).toLowerCase()+e.slice(1)}function de(e,r,t,n,a,o,l=!0){const{infos:s}=o;let u=1,i=0,m=0,c=0,f=1;for(const{absoluteAnchorPoint:p,offsetX:b,offsetY:d,rotation:P,size:g,frameHeight:k,rotateClockWise:L,scaleSymbolsProportionally:h}of s)f=p?1:u,m=B(b,d,i,f,m),c=R(b,d,i,f,c),k&&(h||l)&&(u*=g/k),i=j(P,L,i);const I=B(n,a,i,f,m),M=R(n,a,i,f,c);return{size:e*u,rotation:j(r,t,i),offsetX:I,offsetY:M}}function O(e){if(e==null)return!1;if(Array.isArray(e))return e.every(r=>O(r));switch(typeof e){case"string":return!!e;case"number":return!isNaN(e)}}function D(e,r){if(r==="color"||r==="outlinecolor"||r==="backgroundcolor"||r==="borderlinecolor"||r==="tintcolor")return[...X[r]];const t=T[e];if(!t)throw new Error(`InternalError: default value for type ${e}.`);return t[r]}function ke(e){return e.split(" ").map(r=>Number(r))}function q(e){return typeof e=="string"?ke(e):e}function Se(e){return e?.dashTemplate&&(e.dashTemplate=q(e.dashTemplate)),e}function G(e){if(e==null)return"Normal";switch(e.type){case"CIMTextSymbol":return e.textCase??"Normal";case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":{const r=e.symbolLayers;if(!r)return"Normal";for(const t of r)if(t.type==="CIMVectorMarker")return G(t)}break;case"CIMVectorMarker":{const r=e.markerGraphics;if(!r)return"Normal";for(const t of r)if(t.symbol)return G(t.symbol)}}return"Normal"}function Pe(e){if(e)switch(e.type){case"CIMTextSymbol":return e.height;case"CIMPointSymbol":{let r=0;if(e.symbolLayers){for(const t of e.symbolLayers)if(t)switch(t.type){case"CIMCharacterMarker":case"CIMPictureMarker":case"CIMVectorMarker":case"CIMObjectMarker3D":case"CIMglTFMarker3D":{const n=t.size??T.CIMVectorMarker.size;n>r&&(r=n);break}}}return r}case"CIMLineSymbol":case"CIMPolygonSymbol":{let r=0;if(e.symbolLayers){for(const t of e.symbolLayers)if(t)switch(t.type){case"CIMSolidStroke":case"CIMPictureStroke":case"CIMGradientStroke":{const n=t.width;n!=null&&n>r&&(r=n);break}case"CIMCharacterMarker":case"CIMPictureMarker":case"CIMVectorMarker":case"CIMObjectMarker3D":case"CIMglTFMarker3D":if(t.markerPlacement&&z(t.markerPlacement)){const n=t.size??T.CIMVectorMarker.size;n>r&&(r=n)}break;case"CIMPictureFill":{const n=t.height;n!=null&&n>r&&(r=n)}}}return r}}}function ge(e,r){if(r!==null){const t=r.get(e);return t?t.name:e}return e}function we(e){return e.map(r=>({...r,propertyName:S(r.propertyName)}))}function Le(e){const r={};for(const t in e){const n=e[t];r[S(t)]=n}return r}function R(e,r,t,n,a){const o=t*Math.PI/180;if(o){const l=Math.cos(o);return(Math.sin(o)*e+l*r)*n+a}return r*n+a}function B(e,r,t,n,a){const o=t*Math.PI/180;return o?(Math.cos(o)*e-Math.sin(o)*r)*n+a:e*n+a}function j(e,r,t){return r?t-e:t+e}function Te(e,r,t){const n=t==="Color"||t==="TintColor"||t==="ToColor",a=t==="Rotation"||t==="Angle"||t==="ToRotation";let o=r[S(t)];if(o!=null&&(n?o=[o[0]/255,o[1]/255,o[2]/255,o[3]/255]:a&&(o*=Math.PI/180)),o==null&&(o=D(r.type,t.toLowerCase()),o!=null&&(n?o=[o[0]/255,o[1]/255,o[2]/255,o[3]]:a&&(o*=Math.PI/180))),r.primitiveName!=null){const l=e[r.primitiveName];if(l!=null){const s=l[t];s==null||(typeof s=="string"||typeof s=="number"||Array.isArray(s)?(o=s,o!=null&&(n?o=[o[0]/255,o[1]/255,o[2]/255,o[3]/255]:a&&(o*=Math.PI/180))):(o={valueExpressionInfo:s,defaultValue:o},o!=null&&(n?o={type:"Process",op:"ArcadeColor",value:o}:a&&(o={type:"Process",op:"Divide",left:o,right:180/Math.PI}))))}}if(o==null)throw new Error(`Failed to derive a value or an expression for "${t}".`);return o}function Ae(e,r,t){if(r[S(t)]!=null)return!0;if(r.primitiveName!=null){const n=e[r.primitiveName];if(n!=null&&n[t]!=null)return!0}return!1}function Ne(e,r){return Math.max(Math.min((e??r)/100,1),0)}export{A,te as C,de as D,Ie as E,pe as F,x as G,Se as H,ne as I,G as J,Me as L,V as M,N,S as O,ue as P,q as R,ie as S,ye as T,Pe as U,he as V,we as X,Le as Y,Te as Z,Ae as _,Z as a,ae as b,_ as c,se as d,Ne as e,K as f,ce as g,oe as h,O as j,le as k,re as m,J as n,W as o,z as p,D as q,Q as s,Ce as v,fe as w,me as x,ee as y,be as z};
