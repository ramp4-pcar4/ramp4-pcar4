import{dJ as de,v as t,x as r,I as w,bV as ce,z as p,p as Z,dK as H,i as O,a0 as G,db as he,iZ as me,s as I,bv as ge,bY as fe,J as W,by as be,bJ as z,aw as ve,V as v,E as Se,B as g,h as m,k5 as we,bd as Oe,q as Ie,fa as xe,eA as Fe,gb as Le}from"./main-CnDVnExo.js";import{l as je}from"./CollectionFlattener-DTlQlvh5.js";import{a as Te,t as Pe}from"./loadAll-DgTTxJ9L.js";import{a as Ee,S as Be}from"./MultiOriginJSONSupport-Ruo0_g0o.js";import{h as qe}from"./Layer-CmkLQVqW.js";import X from"./FeatureLayer-DxfDqlxw.js";import{e as A,l as Ae,b as Re,g as _e,d as Ne,m as Me}from"./OperationalLayer-A4hDIwth.js";import{t as ke}from"./capabilities-D0LjMoVC.js";import{N as Ke}from"./labelingInfo-CSbKYIkt.js";import{s as Qe}from"./fieldProperties-D6eH-God.js";import{Z as Ue}from"./FieldsIndex-BZRQHZ3i.js";import{r as Ve,R as De,V as Y}from"./SceneService-DftMqXy7.js";import{p as Ce,a as $e,y as Je,m as Ze}from"./I3SLayerDefinitions-BmPWAITP.js";import{u as He}from"./typeUtils-kZYFTRE_.js";import{R as Ge}from"./Query-B3kr4GG5.js";import{p as We}from"./popupUtils-DOiXoTRP.js";import{c as ze}from"./ElevationInfo-CUSBHOB_.js";import{B as Xe}from"./I3SUtil-NAV1mTaC.js";import{n as Ye,p as et}from"./popupUtils-Gs7EBN8P.js";import{i as tt}from"./APIKeyMixin-CKoruZnp.js";import{l as rt}from"./ArcGISService-BvcoE3ho.js";import{e as st}from"./CustomParametersMixin-DgLbjG-n.js";import{j as it}from"./PortalLayer-BPuUTCDW.js";import{t as ot}from"./ScaleRangeLayer-C11AuBvk.js";import{s as at}from"./associatedFeatureServiceUtils-BgKBP8pb.js";import{n as nt}from"./uuid-Dj9mdEVg.js";import{$ as ee,Z as lt,w as pt}from"./elevationInfoUtils-IwFHKcCU.js";let y=class extends de.IdentifiableMixin(Ee){constructor(e){super(e),this.title="",this.id=-1,this.modelName=null,this.isEmpty=null,this.legendEnabled=!0,this.visible=!0,this.opacity=1}readTitle(e,s){return typeof s.alias=="string"?s.alias:typeof s.name=="string"?s.name:""}readIdOnlyOnce(e){return this.id!==-1?this.id:typeof e=="number"?e:-1}};t([r({type:String,json:{origins:{"web-scene":{write:!0},"portal-item":{write:!0}}}})],y.prototype,"title",void 0),t([w("service","title",["alias","name"])],y.prototype,"readTitle",null),t([r()],y.prototype,"layer",void 0),t([r({type:ce,readOnly:!0,json:{read:!1,write:{ignoreOrigin:!0,isRequired:!0}}})],y.prototype,"id",void 0),t([w("service","id")],y.prototype,"readIdOnlyOnce",null),t([r(A(String))],y.prototype,"modelName",void 0),t([r(A(Boolean))],y.prototype,"isEmpty",void 0),t([r({type:Boolean,nonNullable:!0})],y.prototype,"legendEnabled",void 0),t([r({type:Boolean,json:{name:"visibility",write:!0}})],y.prototype,"visible",void 0),t([r({type:Number,json:{write:!0}})],y.prototype,"opacity",void 0),y=t([p("esri.layers.buildingSublayers.BuildingSublayer")],y);const te=Qe();let o=class extends Z.LoadableMixin(H.EsriPromiseMixin(y)){constructor(e){super(e),this.type="building-component",this.nodePages=null,this.materialDefinitions=[],this.textureSetDefinitions=[],this.geometryDefinitions=[],this.indexInfo=null,this.serviceUpdateTimeStamp=null,this.store=null,this.attributeStorageInfo=[],this.fields=[],this.associatedLayer=null,this.outFields=null,this.listMode="show",this.renderer=null,this.definitionExpression=null,this.popupEnabled=!0,this.popupTemplate=null,this.layerType="3d-object"}get parsedUrl(){return this.layer?{path:`${this.layer.parsedUrl?.path}/sublayers/${this.id}`,query:this.layer.parsedUrl?.query}:{path:""}}get fieldsIndex(){return new Ue(this.fields)}readAssociatedLayer(e,s){const i=this.layer.associatedFeatureServiceItem,a=s.associatedLayerID;return i!=null&&typeof a=="number"?new X({portalItem:i,customParameters:this.customParameters,layerId:a}):null}get objectIdField(){if(this.fields!=null){for(const e of this.fields)if(e.type==="oid")return e.name}return""}get globalIdField(){if(this.fields!=null){for(const e of this.fields)if(e.type==="global-id")return e.name}return""}get displayField(){return this.associatedLayer!=null?this.associatedLayer.displayField:void 0}get apiKey(){return this.layer.apiKey}get customParameters(){return this.layer.customParameters}get fullExtent(){return this.layer.fullExtent}get spatialReference(){return this.layer.spatialReference}get version(){return this.layer.version}get elevationInfo(){return this.layer.elevationInfo}get minScale(){return this.layer.minScale}get maxScale(){return this.layer.maxScale}get effectiveScaleRange(){return this.layer.effectiveScaleRange}get defaultPopupTemplate(){return this.createPopupTemplate()}load(e){const s=e!=null?e.signal:null,i=this._fetchService(s).then(()=>{this.indexInfo=Ve(this.parsedUrl.path,this.rootNode,this.nodePages,this.customParameters,this.apiKey,O.getLogger(this),s)});return this.addResolvingPromise(i),Promise.resolve(this)}createPopupTemplate(e){return We(this,e)}async _fetchService(e){const s=(await G(this.parsedUrl.path,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e})).data;this.read(s,{origin:"service",url:this.parsedUrl})}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,s){const i=this.getField(e)?.domain??null;return this.associatedLayer?Ke(this.associatedLayer,e,s,i):i}getFeatureType(e){return e&&this.associatedLayer!=null?this.associatedLayer.getFeatureType(e):null}get types(){return this.associatedLayer!=null?this.associatedLayer.types??[]:[]}get typeIdField(){return this.associatedLayer!=null?this.associatedLayer.typeIdField:null}get geometryType(){return this.layerType==="3d-object"?"mesh":"point"}get profile(){return this.layerType==="3d-object"?"mesh-pyramids":"points"}get capabilities(){const e=this.associatedLayer!=null&&this.associatedLayer.capabilities?this.associatedLayer.capabilities:ke,{query:s,operations:{supportsQuery:i},data:{supportsZ:a,supportsM:n,isVersioned:h}}=e;return{query:s,operations:{supportsQuery:i},data:{supportsZ:a,supportsM:n,isVersioned:h}}}createQuery(){const e=new Ge;return this.geometryType!=="mesh"&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e}queryExtent(e,s){return this._getAssociatedLayerForQuery().then(i=>i.queryExtent(e||this.createQuery(),s))}queryFeatureCount(e,s){return this._getAssociatedLayerForQuery().then(i=>i.queryFeatureCount(e||this.createQuery(),s))}queryFeatures(e,s){return this._getAssociatedLayerForQuery().then(i=>i.queryFeatures(e||this.createQuery(),s)).then(i=>{if(i?.features)for(const a of i.features)a.layer=this.layer,a.sourceLayer=this;return i})}async queryObjectIds(e,s){return(await(await this._getAssociatedLayerForQuery()).queryObjectIds(e||this.createQuery(),s)).filter(he)}async queryCachedAttributes(e,s){const i=me(this.fieldsIndex,await Ye(this,et(this)));return Xe(this.parsedUrl.path,this.attributeStorageInfo,e,s,i,this.apiKey,this.customParameters)}async queryCachedFeature(e,s){const i=await this.queryCachedAttributes(e,[s]);if(!i||i.length===0)throw new I("scenelayer:feature-not-in-cached-data","Feature not found in cached data");return new ge({attributes:i[0],layer:this,sourceLayer:this})}getFieldUsageInfo(e){return this.fieldsIndex.has(e)?{supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1}:{supportsLabelingInfo:!1,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:this.associatedLayer!=null}}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e!=null&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),this.associatedLayer==null)throw new I("buildingscenelayer:query-not-available","BuildingSceneLayer component layer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new I("buildingscenelayer:query-not-available","BuildingSceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}};t([r({readOnly:!0})],o.prototype,"parsedUrl",null),t([r({type:Ce,readOnly:!0})],o.prototype,"nodePages",void 0),t([r({type:[$e],readOnly:!0})],o.prototype,"materialDefinitions",void 0),t([r({type:[Je],readOnly:!0})],o.prototype,"textureSetDefinitions",void 0),t([r({type:[Ze],readOnly:!0})],o.prototype,"geometryDefinitions",void 0),t([r({readOnly:!0})],o.prototype,"serviceUpdateTimeStamp",void 0),t([r({readOnly:!0})],o.prototype,"store",void 0),t([r({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],o.prototype,"rootNode",void 0),t([r({readOnly:!0})],o.prototype,"attributeStorageInfo",void 0),t([r(te.fields)],o.prototype,"fields",void 0),t([r({readOnly:!0})],o.prototype,"fieldsIndex",null),t([r({readOnly:!0,type:X})],o.prototype,"associatedLayer",void 0),t([w("service","associatedLayer",["associatedLayerID"])],o.prototype,"readAssociatedLayer",null),t([r(te.outFields)],o.prototype,"outFields",void 0),t([r({type:String,readOnly:!0})],o.prototype,"objectIdField",null),t([r({type:String,readOnly:!0})],o.prototype,"globalIdField",null),t([r({readOnly:!0,type:String,json:{read:!1}})],o.prototype,"displayField",null),t([r({readOnly:!0,type:String})],o.prototype,"apiKey",null),t([r({readOnly:!0,type:String})],o.prototype,"customParameters",null),t([r({readOnly:!0,type:fe})],o.prototype,"fullExtent",null),t([r({readOnly:!0,type:W})],o.prototype,"spatialReference",null),t([r({readOnly:!0})],o.prototype,"version",null),t([r({readOnly:!0,type:ze})],o.prototype,"elevationInfo",null),t([r({readOnly:!0,type:Number})],o.prototype,"minScale",null),t([r({readOnly:!0,type:Number})],o.prototype,"maxScale",null),t([r({readOnly:!0,type:Number})],o.prototype,"effectiveScaleRange",null),t([r({type:["hide","show"],json:{write:!0}})],o.prototype,"listMode",void 0),t([r({types:He,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],o.prototype,"renderer",void 0),t([r({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],o.prototype,"definitionExpression",void 0),t([r(Ae)],o.prototype,"popupEnabled",void 0),t([r({type:be,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],o.prototype,"popupTemplate",void 0),t([r({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],o.prototype,"normalReferenceFrame",void 0),t([r({readOnly:!0,json:{read:!1}})],o.prototype,"defaultPopupTemplate",null),t([r()],o.prototype,"types",null),t([r()],o.prototype,"typeIdField",null),t([r({json:{write:!1}}),z(new ve({"3DObject":"3d-object",Point:"point"}))],o.prototype,"layerType",void 0),t([r()],o.prototype,"geometryType",null),t([r()],o.prototype,"profile",null),t([r({readOnly:!0,json:{read:!1}})],o.prototype,"capabilities",null),t([r({readOnly:!0})],o.prototype,"statisticsInfo",void 0),o=t([p("esri.layers.buildingSublayers.BuildingComponentSublayer")],o);const R=o;var _;const re={type:v,readOnly:!0,json:{origins:{service:{read:{source:"sublayers",reader:se}}},read:!1}};function se(e,s,i){if(e&&Array.isArray(e))return new v(e.map(a=>{const n=yt(a);if(n){const h=new n;return h.read(a,i),h}return i?.messages&&a&&i.messages.push(new Se("building-scene-layer:unsupported-sublayer-type","Building scene sublayer of type '"+(a.type||"unknown")+"' are not supported",{definition:a,context:i})),null}))}let d=_=class extends y{constructor(e){super(e),this.type="building-group",this.listMode="show",this.sublayers=null}loadAll(){return Te(this,e=>_.forEachSublayer(this.sublayers,s=>{s.type!=="building-group"&&e(s)}))}};function yt(e){return e.layerType==="group"?d:R}t([r({type:["hide","show","hide-children"],json:{write:!0}})],d.prototype,"listMode",void 0),t([r(re)],d.prototype,"sublayers",void 0),d=_=t([p("esri.layers.buildingSublayers.BuildingGroupSublayer")],d),function(e){function s(i,a){i.forEach(n=>{a(n),n.type==="building-group"&&s(n.sublayers,a)})}e.sublayersProperty=re,e.readSublayers=se,e.forEachSublayer=s}(d||(d={}));let j=class extends g{constructor(){super(...arguments),this.type=null}};t([r({type:String,readOnly:!0,json:{write:{isRequired:!0}}})],j.prototype,"type",void 0),j=t([p("esri.layers.support.BuildingFilterAuthoringInfo")],j);const ie=j;var N;let x=N=class extends g{constructor(){super(...arguments),this.filterType=null,this.filterValues=null}clone(){return new N({filterType:this.filterType,filterValues:m(this.filterValues)})}};t([r({type:String,json:{write:{isRequired:!0}}})],x.prototype,"filterType",void 0),t([r({type:[String],json:{write:{isRequired:!0}}})],x.prototype,"filterValues",void 0),x=N=t([p("esri.layers.support.BuildingFilterAuthoringInfoType")],x);const ut=x;var M;const dt=v.ofType(ut);let T=M=class extends g{clone(){return new M({filterTypes:m(this.filterTypes)})}};t([r({type:dt,json:{write:{isRequired:!0}}})],T.prototype,"filterTypes",void 0),T=M=t([p("esri.layers.support.BuildingFilterAuthoringInfoBlock")],T);const ct=T;var k;const ht=v.ofType(ct);let F=k=class extends ie{constructor(){super(...arguments),this.type="checkbox"}clone(){return new k({filterBlocks:m(this.filterBlocks)})}};t([r({type:["checkbox"]})],F.prototype,"type",void 0),t([r({type:ht,json:{write:{isRequired:!0}}})],F.prototype,"filterBlocks",void 0),F=k=t([p("esri.layers.support.BuildingFilterAuthoringInfoCheckbox")],F);const oe=F;let P=class extends g{};t([r({readOnly:!0,json:{read:!1,write:{isRequired:!0}}})],P.prototype,"type",void 0),P=t([p("esri.layers.support.BuildingFilterMode")],P);const E=P;var K;let B=K=class extends E{constructor(){super(...arguments),this.type="solid"}clone(){return new K}};t([r({type:["solid"],readOnly:!0,json:{write:{isRequired:!0}}})],B.prototype,"type",void 0),B=K=t([p("esri.layers.support.BuildingFilterModeSolid")],B);const Q=B;var U;let L=U=class extends E{constructor(){super(...arguments),this.type="wire-frame",this.edges=null}clone(){return new U({edges:m(this.edges)})}};t([z({wireFrame:"wire-frame"})],L.prototype,"type",void 0),t([r(we)],L.prototype,"edges",void 0),L=U=t([p("esri.layers.support.BuildingFilterModeWireFrame")],L);const ae=L;var V;let q=V=class extends E{constructor(){super(...arguments),this.type="x-ray"}clone(){return new V}};t([r({type:["x-ray"],readOnly:!0,json:{write:{isRequired:!0}}})],q.prototype,"type",void 0),q=V=t([p("esri.layers.support.BuildingFilterModeXRay")],q);const ne=q;var D;const mt={nonNullable:!0,types:{key:"type",base:E,typeMap:{solid:Q,"wire-frame":ae,"x-ray":ne}},json:{read:e=>{switch(e?.type){case"solid":return Q.fromJSON(e);case"wireFrame":return ae.fromJSON(e);case"x-ray":return ne.fromJSON(e);default:return}},write:{enabled:!0,isRequired:!0}}};let S=D=class extends g{constructor(){super(...arguments),this.filterExpression=null,this.filterMode=new Q,this.title=""}clone(){return new D({filterExpression:this.filterExpression,filterMode:m(this.filterMode),title:this.title})}};t([r({type:String,json:{write:{enabled:!0,isRequired:!0}}})],S.prototype,"filterExpression",void 0),t([r(mt)],S.prototype,"filterMode",void 0),t([r({type:String,json:{write:{enabled:!0,isRequired:!0}}})],S.prototype,"title",void 0),S=D=t([p("esri.layers.support.BuildingFilterBlock")],S);const gt=S;var C;const ft=v.ofType(gt);let f=C=class extends g{constructor(){super(...arguments),this.description=null,this.filterBlocks=null,this.id=nt(),this.name=null}clone(){return new C({description:this.description,filterBlocks:m(this.filterBlocks),id:this.id,name:this.name,filterAuthoringInfo:m(this.filterAuthoringInfo)})}};t([r({type:String,json:{write:!0}})],f.prototype,"description",void 0),t([r({type:ft,json:{write:{enabled:!0,isRequired:!0}}})],f.prototype,"filterBlocks",void 0),t([r({types:{key:"type",base:ie,typeMap:{checkbox:oe}},json:{read:e=>e?.type==="checkbox"?oe.fromJSON(e):null,write:!0}})],f.prototype,"filterAuthoringInfo",void 0),t([r({type:String,constructOnly:!0,json:{write:{enabled:!0,isRequired:!0}}})],f.prototype,"id",void 0),t([r({type:String,json:{write:{enabled:!0,isRequired:!0}}})],f.prototype,"name",void 0),f=C=t([p("esri.layers.support.BuildingFilter")],f);let c=class extends g{constructor(){super(...arguments),this.fieldName=null,this.modelName=null,this.label=null,this.min=null,this.max=null,this.mostFrequentValues=null,this.subLayerIds=null}};t([r({type:String})],c.prototype,"fieldName",void 0),t([r({type:String})],c.prototype,"modelName",void 0),t([r({type:String})],c.prototype,"label",void 0),t([r({type:Number})],c.prototype,"min",void 0),t([r({type:Number})],c.prototype,"max",void 0),t([r({json:{read:e=>Array.isArray(e)&&(e.every(s=>typeof s=="string")||e.every(s=>typeof s=="number"))?e.slice():null}})],c.prototype,"mostFrequentValues",void 0),t([r({type:[Number]})],c.prototype,"subLayerIds",void 0),c=t([p("esri.layers.support.BuildingSummaryStatistics.BuildingFieldStatistics")],c);let b=class extends Z.LoadableMixin(H.EsriPromiseMixin(g)){constructor(e){super(e),this.url=null,this.customParameters=null}get fields(){return this.loaded||this.loadStatus==="loading"?this._get("fields"):(O.getLogger(this).error("building summary statistics are not loaded"),null)}load(e){const s=e!=null?e.signal:null;return this.addResolvingPromise(this._fetchService(s)),Promise.resolve(this)}async _fetchService(e){const s=(await G(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e})).data;this.read(s,{origin:"service"})}};t([r({constructOnly:!0,type:String})],b.prototype,"url",void 0),t([r({constructOnly:!0})],b.prototype,"customParameters",void 0),t([r({constructOnly:!0})],b.prototype,"apiKey",void 0),t([r({readOnly:!0,type:[c],json:{read:{source:"summary"}}})],b.prototype,"fields",null),b=t([p("esri.layers.support.BuildingSummaryStatistics")],b);const le=v.ofType(f),pe=m(d.sublayersProperty),$=pe.json?.origins;$&&($["web-scene"]={type:[R],write:{enabled:!0,overridePolicy:()=>({enabled:!1})}},$["portal-item"]={type:[R],write:{enabled:!0,overridePolicy:()=>({enabled:!1})}});let l=class extends De(rt(Re(it(ot(Be(st(tt(qe)))))))){constructor(e){super(e),this.operationalLayerType="BuildingSceneLayer",this.allSublayers=new je({getCollections:()=>[this.sublayers],getChildrenFunction:s=>s.type==="building-group"?s.sublayers:null}),this.sublayers=null,this._allSublayerOverrides=null,this.filters=new le,this.activeFilterId=null,this.summaryStatistics=null,this.outFields=null,this.legendEnabled=!0,this.type="building-scene"}normalizeCtorArgs(e){return typeof e=="string"?{url:e}:e??{}}destroy(){this.allSublayers.destroy()}readSublayers(e,s,i){const a=d.readSublayers(e,s,i);return d.forEachSublayer(a,n=>n.layer=this),this._allSublayerOverrides&&(bt(a,this._allSublayerOverrides),this._allSublayerOverrides=null),a}write(e,s){return e=super.write(e,s),!s||s.origin!=="web-scene"&&s.origin!=="portal-item"||(this.sublayers?St(this.sublayers,e,s):this._allSublayerOverrides&&wt(this._allSublayerOverrides,e,s)),e}read(e,s){if(super.read(e,s),(s?.origin==="web-scene"||s?.origin==="portal-item")&&Array.isArray(e?.sublayers)){const i=vt(e.sublayers,s);this.sublayers?ye(this.sublayers,i):(this._allSublayerOverrides??=new Map,this._allSublayerOverrides.set(s.origin,i))}}readSummaryStatistics(e,s){if(typeof s.statisticsHRef=="string"&&this.parsedUrl){const i=Oe(this.parsedUrl.path,s.statisticsHRef);return new b({url:i,apiKey:this.apiKey,customParameters:this.customParameters})}return null}set elevationInfo(e){e!=null&&e.mode!=="absolute-height"||this._set("elevationInfo",e),this._validateElevationInfo(e)}load(e){const s=e!=null?e.signal:null,i=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(Ie).then(()=>this._fetchService(s)).then(()=>this._fetchAssociatedFeatureService(s));return this.addResolvingPromise(i),Promise.resolve(this)}loadAll(){return Pe(this,e=>{d.forEachSublayer(this.sublayers,s=>{s.type!=="building-group"&&e(s)}),this.summaryStatistics&&e(this.summaryStatistics)})}async saveAs(e,s){return this._debouncedSaveOperations(Y.SAVE_AS,{...s,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"building-scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"building-scene"};return this._debouncedSaveOperations(Y.SAVE,e)}validateLayer(e){if(!e.layerType||e.layerType!=="Building")throw new I("buildingscenelayer:layer-type-not-supported","BuildingSceneLayer does not support this layer type",{layerType:e.layerType})}_getTypeKeywords(){return["Building"]}async _fetchAssociatedFeatureService(e){try{const{portalItem:s}=await at(`${this.url}/layers/${this.layerId}`,{sceneLayerItem:this.portalItem,customParameters:this.customParameters,apiKey:this.apiKey,signal:e});this.associatedFeatureServiceItem=s}catch{xe(this._logWarningOnPopupEnabled())}}async _logWarningOnPopupEnabled(){const e=new AbortController;this.addHandles(Fe(e)),await Le(()=>this.allSublayers.filter(u=>u.type==="building-component").some(u=>u.popupEnabled&&u.popupTemplate!=null),e.signal);const s=this.allSublayers.filter(u=>u.type==="building-component").filter(u=>u.popupEnabled&&u.popupTemplate!=null),i=[],a=[];for(const u of s){const J=u.title??`untitled ${u.id}`;u.attributeStorageInfo?i.push(J):a.push(J)}const n=`
  `,h=i.length>0?`
The following sublayers will fall back to binary attributes for Popups:${n}${i.join(n)}`:"",ue=a.length>0?`
The following sublayers have no binary attributes and will not work with Popups:${n}${a.join(n)}`:"";O.getLogger(this).warn(`Associated FeatureLayer could not be loaded for this BuildingSceneLayer: ${this.title}.`,h,ue)}_validateElevationInfo(e){const s="Building scene layers";ee(O.getLogger(this),lt(s,"absolute-height",e)),ee(O.getLogger(this),pt(s,e))}};function bt(e,s){s.forEach(i=>ye(e,i))}function ye(e,s){const{overrides:i,context:a}=s;d.forEachSublayer(e,n=>n.read(i.get(n.id),a))}function vt(e,s){const i=new Map;for(const a of e)a!=null&&typeof a=="object"&&typeof a.id=="number"?i.set(a.id,a):s.messages?.push(new I("building-scene-layer:invalid-sublayer-override","Invalid value for sublayer override. Not an object or no id specified.",{value:a}));return{overrides:i,context:s}}function St(e,s,i){const a=[];d.forEachSublayer(e,n=>{const h=n.write({},i);Object.keys(h).length>1&&a.push(h)}),a.length>0&&(s.sublayers=a)}function wt(e,s,i){const a=i?.origin&&e.get(i.origin);a&&(s.sublayers=[],a.overrides.forEach(n=>{s.sublayers.push(m(n))}))}t([r({type:["BuildingSceneLayer"]})],l.prototype,"operationalLayerType",void 0),t([r({readOnly:!0})],l.prototype,"allSublayers",void 0),t([r(pe)],l.prototype,"sublayers",void 0),t([w("service","sublayers")],l.prototype,"readSublayers",null),t([r({type:le,nonNullable:!0,json:{write:!0}})],l.prototype,"filters",void 0),t([r({type:String,json:{write:!0}})],l.prototype,"activeFilterId",void 0),t([r({readOnly:!0,type:b})],l.prototype,"summaryStatistics",void 0),t([w("summaryStatistics",["statisticsHRef"])],l.prototype,"readSummaryStatistics",null),t([r({type:[String],json:{read:!1}})],l.prototype,"outFields",void 0),t([r(_e)],l.prototype,"fullExtent",void 0),t([r(Ne)],l.prototype,"legendEnabled",void 0),t([r({type:["show","hide","hide-children"]})],l.prototype,"listMode",void 0),t([r(A(W))],l.prototype,"spatialReference",void 0),t([r(Me)],l.prototype,"elevationInfo",null),t([r({json:{read:!1},readOnly:!0})],l.prototype,"type",void 0),t([r()],l.prototype,"associatedFeatureServiceItem",void 0),l=t([p("esri.layers.BuildingSceneLayer")],l);const Ot=l;export{Ot as default};
