import{n as O,es as y,fW as _,fD as T,cI as C,fX as D,fY as S,v as o,x as r,z as g,cG as b,a4 as m,N as $}from"./main-CnDVnExo.js";import{r as M}from"./mat2df64-DDXwUeaJ.js";import{n as x,F as I,u as v,v as V,k as z,b as U,a as W,U as E}from"./drawSurfaces-Dq8GDRqp.js";import{n as c}from"./jsxFactory-EHFHGYYs.js";let s=class extends O{constructor(e){super(e),this.coordinates=void 0,this.strokeDash=[],this.strokeWidth=1,this.strokeColor=[0,0,0,1],this.strokeDashColor=[255,255,255,1],this.fillColor=[0,0,0,0],this.visible=!0,this.isDecoration=!0}get _strokeStyle(){const e=this.strokeColor;return`rgba(${e[0]}, ${e[1]}, ${e[2]}, ${e[3]})`}get _strokeBackgroundStyle(){const e=this.strokeDashColor;return`rgba(${e[0]}, ${e[1]}, ${e[2]}, ${e[3]})`}get _fillStyle(){const e=this.fillColor;return`rgba(${e[0]}, ${e[1]}, ${e[2]}, ${e[3]})`}get _renderCoordinates(){const e=[];if(!this.coordinates)return{coordinates:e,rect:y};const t=_(T(C(y),this.coordinates),2*this.strokeWidth);t[0]=Math.floor(t[0]),t[1]=Math.floor(t[1]),t[2]=Math.ceil(t[2]+.5),t[3]=Math.ceil(t[3]+.5);for(const a of this.coordinates)e.push([Math.floor(a[0]-t[0])+.5,Math.floor(a[1]-t[1])+.5]);return e.reverse(),{coordinates:e,rect:t}}render(){const{coordinates:e,rect:t}=this._renderCoordinates,a=D(t),n=S(t);return c("div",{classes:{"esri-outline-overlay-item":!0},styles:{left:t[0]+"px",top:t[1]+"px",width:a+"px",height:n+"px",visibility:this.visible?"visible":"hidden"}},c("svg",{height:n,styles:{display:"block"},width:a},c("polygon",{fill:this._fillStyle,points:e.map(([d,l])=>`${d},${l}`).join(" "),stroke:this._strokeBackgroundStyle,"stroke-width":this.strokeWidth}),c("polygon",{fill:"transparent",points:e.map(([d,l])=>`${d},${l}`).join(" "),stroke:this._strokeStyle,"stroke-dasharray":this.strokeDash.length?this.strokeDash.join(" "):void 0,"stroke-width":this.strokeWidth})))}renderCanvas(){}};o([r()],s.prototype,"coordinates",void 0),o([r()],s.prototype,"strokeDash",void 0),o([r()],s.prototype,"strokeWidth",void 0),o([r()],s.prototype,"strokeColor",void 0),o([r()],s.prototype,"strokeDashColor",void 0),o([r()],s.prototype,"fillColor",void 0),o([r()],s.prototype,"visible",void 0),o([r()],s.prototype,"isDecoration",void 0),o([r({readOnly:!0})],s.prototype,"_strokeStyle",null),o([r({readOnly:!0})],s.prototype,"_strokeBackgroundStyle",null),o([r({readOnly:!0})],s.prototype,"_fillStyle",null),o([r({readOnly:!0})],s.prototype,"_renderCoordinates",null),s=o([g("esri.views.overlay.OutlineOverlayItem")],s);let i=class extends b.EventedMixin(x){constructor(e){super(e),this.drawOperation=null,this._overlayItem=void 0,this.geometryType=null,this.mode=null,this.type="draw-screen"}initialize(){this.drawOperation=this._makeDrawOperation();const e=t=>this.drawOperation?.on(t,a=>{this._updateVisuals(),this.emit(t,a)})??m();this.addHandles([e("vertex-add"),e("vertex-remove"),e("vertex-update"),e("cursor-update"),e("complete")]),this.finishToolCreation()}destroy(){this.drawOperation=$(this.drawOperation),this._set("view",null)}get canRedo(){return!!this.drawOperation?.canRedo}get canUndo(){return!!this.drawOperation?.canUndo}set centeredToggled(e){this._set("centeredToggled",e),this._updateVisuals()}set enabled(e){const{drawOperation:t}=this;t&&(t.interactive=e),this._set("enabled",e)}set uniformSizeToggled(e){this._set("uniformSizeToggled",e),this._updateVisuals()}get updating(){return this.drawOperation?.updating??!1}get cursor(){return this._get("cursor")??"crosshair"}set cursor(e){this._set("cursor",e);const{drawOperation:t}=this;t&&(t.cursor=e)}completeCreateOperation(){this.drawOperation?.complete()}onInputEvent(e){this.destroyed||this.drawOperation?.onInputEvent(e)}redo(){this.drawOperation?.redo()}undo(){this.drawOperation?.undo()}reset(){}_makeDrawOperation(){const{view:e}=this;return new I({view:e,manipulators:this.manipulators,geometryType:w(this.geometryType),drawingMode:this.mode,hasZ:!1,defaultZ:0,snapToSceneEnabled:!1,drawSurface:new v,hasM:!1,snappingManager:null,snappingVisualizer:null,graphic:null,cursor:this.cursor,automaticLengthMeasurementUtils:this.automaticLengthMeasurementUtils})}get coordinates(){const{drawOperation:e}=this;if(!e?.geometryIncludingUncommittedVertices.length)return[];const{coordinateHelper:t}=e,a=e.committableVertex,n=e.committedVertices.slice();a!=null&&n.push(t.pointToArray(a));const d=n.length;switch(this.geometryType){case"point":return n.slice(0,1);case"circle":case"rectangle":{const l=new V(M,v.spatialReference),u=this.geometryType==="circle"?z:U,f=this.geometryType==="circle"?W:E;if(d===1&&e.isCompleted){const p=n[0],h=l.makeMapPoint(p[0]+j,p[1]);return u([p,h],l,!0)?.geometry.rings[0]??[]}if(d===2){const p=this.geometryType!=="rectangle",h=this.centeredToggled!==p,k=this.geometryType!=="rectangle";return(this.uniformSizeToggled!==k?u(n,l,h)?.geometry.rings[0]:f(n,l,h)?.geometry.rings[0])??[]}return[]}}return n}_updateVisuals(){if(!this._overlayItem){const e=new s({strokeDash:[5],strokeDashColor:[255,255,255,255]});this.view.overlay?.addItem(e),this.addHandles(m(()=>{this.view.overlay?.removeItem(e),e?.destroy(),this._overlayItem=void 0})),this._overlayItem=e}this._overlayItem.coordinates=this.coordinates}onDeactivate(){this.drawOperation?.isCompleted||this.drawOperation?.cancel()}};function w(e){switch(e){case"polygon":case"point":return e;case"circle":case"rectangle":return"segment"}}o([r({value:!1})],i.prototype,"centeredToggled",null),o([r()],i.prototype,"drawOperation",void 0),o([r({value:!0})],i.prototype,"enabled",null),o([r({value:!1})],i.prototype,"uniformSizeToggled",null),o([r({constructOnly:!0})],i.prototype,"geometryType",void 0),o([r({constructOnly:!0})],i.prototype,"mode",void 0),o([r({readOnly:!0})],i.prototype,"type",void 0),o([r({readOnly:!0})],i.prototype,"updating",null),o([r({constructOnly:!0,nonNullable:!0})],i.prototype,"view",void 0),o([r({constructOnly:!0})],i.prototype,"automaticLengthMeasurementUtils",void 0),o([r()],i.prototype,"cursor",null),i=o([g("esri.views.draw.DrawScreenTool")],i);const j=48;export{i as DrawScreenTool,w as geometryTypeToDrawOperationGeometryType};
