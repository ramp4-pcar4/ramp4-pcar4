import{aT as A,bs as G,J as R,cy as S,b_ as Y,bZ as j,bS as D,s as v}from"./main-CnDVnExo.js";import{r as E}from"./TimeExtent-CrpfETyH.js";import{j as V}from"./quantizationUtils-B2004thd.js";import{u as _,l as L}from"./heatmapUtils-D0I0H9mf.js";import{$ as P}from"./utils-V1W04L0w.js";import{m as U,B as Z}from"./utils-C90J7vJZ.js";let c=null;const k=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function q(n,e,t){return n.x<0?n.x+=e:n.x>t&&(n.x-=e),n}function B(n,e,t,s){const i=S(t)?Y(t):null,a=i?Math.round((i.valid[1]-i.valid[0])/e.scale[0]):null;return n.map(o=>{const l=new j(o.geometry);return V(e,l,l),o.geometry=i?q(l,a??0,s[0]):l,o})}function J(n,e=18,t,s,i){const a=new Float64Array(s*i);e=Math.round(D(e));let o=Number.POSITIVE_INFINITY,l=Number.NEGATIVE_INFINITY;const F=_(t);for(const{geometry:p,attributes:N}of n){const{x:b,y:f}=p,g=Math.max(0,b-e),M=Math.max(0,f-e),T=Math.min(i,f+e),w=Math.min(s,b+e),h=+F(N);for(let m=M;m<T;m++)for(let d=g;d<w;d++){const x=m*s+d,I=L(d-b,m-f,e)*h,u=a[x]+=I;o=Math.min(o,u),l=Math.max(l,u)}}return{min:o,max:l}}function z(n){const e=k.exec(n);if(!e)return null;const{hh:t,mm:s,ss:i,ms:a}=e.groups;return Number(t)*E.hours+Number(s)*E.minutes+Number(i)*E.seconds+Number(a||0)}async function H(n,e,t=!0){if(!e)return[];const{field:s,field2:i,field3:a,fieldDelimiter:o,fieldInfos:l,timeZone:F}=n,p=s&&l?.find(u=>u.name.toLowerCase()===s.toLowerCase()),N=!!p&&A(p),b=!!p&&P(p),f=n.valueExpression,g=n.normalizationType,M=n.normalizationField,T=n.normalizationTotal,w=[],h=n.viewInfoParams;let m=null,d=null;if(f){if(!c){const{arcadeUtils:u}=await G();c=u}c.hasGeometryOperations(f)&&await c.enableGeometryOperations(),m=c.createFunction(f),d=h?c.getViewInfo({viewingMode:h.viewingMode,scale:h.scale,spatialReference:new R(h.spatialReference)}):null}const x=n.fieldInfos,I=!(e[0]&&"declaredClass"in e[0]&&e[0].declaredClass==="esri.Graphic")&&x?{fields:x}:null;return e.forEach(u=>{const y=u.attributes;let r;if(f){const $=I?{...u,layer:I}:u,O=c.createExecContext($,d,F);r=c.executeFunction(m,O)}else y&&(r=y[s],i?(r=`${U(r)}${o}${U(y[i])}`,a&&(r=`${r}${o}${U(y[a])}`)):typeof r=="string"&&t&&(b?r=r?new Date(r).getTime():null:N&&(r=r?z(r):null)));if(g&&typeof r=="number"&&isFinite(r)){const $=y&&parseFloat(y[M]);r=Z(r,g,$,T)}w.push(r)}),w}function K(n){const e=n.field,t=n.normalizationType,s=n.normalizationField;let i;return t==="field"?i="(NOT "+s+" = 0)":t!=="log"&&t!=="natural-log"&&t!=="square-root"||(i=`(${e} > 0)`),i}function Q(n,e,t){const s=e!=null?n+" >= "+e:"",i=t!=null?n+" <= "+t:"";let a="";return a=s&&i?C(s,i):s||i,a?"("+a+")":""}function C(n,e){let t=n??"";return e!=null&&e&&(t=t?"("+t+") AND ("+e+")":e),t}function W(n,e){if(n&&n.spatialRelationship!=="intersects")return new v(e,"Only 'intersects' spatialRelationship is supported for featureFilter")}function X(n,e,t){const s=ee({layer:n,fields:e});if(s.length)return new v(t,"Unknown fields: "+s.join(", ")+". You can only use fields defined in the layer schema");const i=ne({layer:n,fields:e});return i.length?new v(t,"Unsupported fields: "+i.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}function ee(n){const e=n.layer;return n.fields.filter(t=>!e.getField(t))}function ne(n){const e=n.layer;return n.fields.filter(t=>{const s=e.getFieldUsageInfo(t);return!s||!s.supportsStatistics})}export{K as F,z as I,W as M,Q as N,X as T,C as U,H as b,J as w,B as x};
