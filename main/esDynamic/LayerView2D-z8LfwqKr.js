import{n as R,aS as S,v as s,z as d,hS as v,x as a,bw as b,am as C,bY as H,dY as q,V as u,e6 as T,s as A,ab as n,ad as O,e8 as l,hT as P}from"./main-CnDVnExo.js";import{e as I}from"./utils-C0LvbFCo.js";import{n as j}from"./Container-Dt0W2gid.js";import{s as k}from"./ReactiveMap-BlyivYqS.js";import{u as g,a as x,t as U,g as z}from"./MapView-CIFPSVS7.js";import{t as B}from"./layerViewUtils-1rhKaQqh.js";let y=class extends R{constructor(){super(...arguments),this._idToCounters=new k}get size(){return this._idToCounters.size}get objectIds(){return this._idToCounters.keys()}get highlightNamesByObjectId(){return M(this._idToCounters)}add(o,i){let t=!1;for(const e of o){const r=S(this._idToCounters,e,()=>(t=!0,new Map)),h=r.get(i)??0;h||(t=!0),r.set(i,h+1)}return t}delete(o,i){let t=!1;for(const e of o){const r=this._idToCounters.get(e);if(!r)continue;let h=r.get(i);h!=null&&(h--,h>0?r.set(i,h):(r.delete(i),t=!0),r.size===0&&(this._idToCounters.delete(e),t=!0))}return t}};function*M(o){for(const[i,t]of o)yield[i,t.keys()]}y=s([d("esri.views.2d.layers.support.HighlightCounter")],y);var m;const V={base:q,key:"type",typeMap:{extent:H,polygon:C}};let p=m=class extends v{constructor(o){super(o),this.type="geometry",this.geometry=null}clone(){return new m({geometry:this.geometry?.clone()??null})}commitVersionProperties(){this.commitProperty("geometry")}};s([a({types:V,json:{read:b,write:!0}})],p.prototype,"geometry",void 0),p=m=s([d("esri.views.layers.support.Geometry")],p);let c=class extends v{constructor(o){super(o),this.type="path",this.path=[]}commitVersionProperties(){this.commitProperty("path")}};s([a({type:[[[Number]]],json:{write:!0}})],c.prototype,"path",void 0),c=s([d("esri.views.layers.support.Path")],c);const f=u.ofType({key:"type",base:null,typeMap:{rect:P,path:c,geometry:p}}),L=new(u.ofType(g)),G=o=>{let i=class extends o{constructor(){super(...arguments),this._highlightCounter=new y,this.attached=!1,this.clips=new f,this.highlights=null,this.lastUpdateId=-1,this.moving=!1,this.updateRequested=!1,this._visibleAtCurrentScale=!0}initialize(){const t=this.view?.spatialReferenceLocked??!0;this.view?.spatialReference&&t&&!this.spatialReferenceSupported?this.addResolvingPromise(Promise.reject(new A("layerview:spatial-reference-incompatible","The spatial reference of this layer does not meet the requirements of the view",{layer:this.layer}))):(this.container||(this.container=new j),this.container.fadeTransitionEnabled=!0,this.container.visible=!1,this.container.endTransitions(),this.addHandles([n(()=>this.suspended,e=>{this.container&&(this.container.visible=!e)},l),n(()=>this.updateSuspended,e=>{this.view&&!e&&this.updateRequested&&this.view.requestUpdate()},l),n(()=>this.layer?.opacity??1,e=>{this.container&&(this.container.opacity=e)},l),n(()=>this.layer&&"blendMode"in this.layer?this.layer.blendMode:"normal",e=>{this.container&&(this.container.blendMode=e)},l),n(()=>this.layer&&"effect"in this.layer?this.layer.effect:null,e=>{this.container&&(this.container.effect=e)},l),n(()=>this._mergedHighlights.items.map(e=>({name:e.name,options:{fillColor:e.color,haloColor:e.haloColor,fillOpacity:e.fillOpacity,haloOpacity:e.haloOpacity,haloWidth:e.haloWidth,haloBlur:e.haloBlur}})),()=>{this.container.highlightGradient=x(this.container.highlightGradient,this._mergedHighlights.items)},l),n(()=>this._mergedHighlights.items.map(e=>e.name),()=>{this._processHighlight()}),O(()=>this.clips,"change",()=>{this.container&&(this.container.clips=this.clips)},l),n(()=>({scale:this.view?.scale,scaleRange:this.layer&&"effectiveScaleRange"in this.layer?this.layer.effectiveScaleRange:null}),({scale:e,scaleRange:r})=>{const h=B(r,e);h!==this._visibleAtCurrentScale&&(this._visibleAtCurrentScale=h)},l)],"constructor"),this.view?.whenLayerView?this.view.whenLayerView(this.layer).then(e=>{e===this&&this.processAttach()},()=>{}):this.when().then(()=>{this.processAttach()},()=>{}))}destroy(){this.processDetach(),this.updateRequested=!1}get highlightOptions(){return U(this)}set highlightOptions(t){z(this,t)}get hasHighlight(){return this._highlightCounter.size>0}get _mergedHighlights(){if(!this.view)return L;if(!this.highlights)return this.view.highlights;const t=this.view.highlights.clone();for(const e of this.highlights){const r=t.find(h=>h.name===e.name);r&&r.assignFrom(e)}return t}get highlightIds(){return Array.from(this._highlightCounter.objectIds)}get scheduler(){return this.view.scheduler}get spatialReferenceSupported(){const t=this.view?.spatialReference;return t==null||this.supportsSpatialReference(t)}get updating(){return this.spatialReferenceSupported&&(!this.attached||!this.suspended&&(this.updateRequested||this.isUpdating())||!!this._updatingHandles?.updating||this.container.transitioning)}get visibleAtCurrentScale(){return this._visibleAtCurrentScale}processAttach(){this.isResolved()&&!this.attached&&!this.destroyed&&this.spatialReferenceSupported&&(this.attach(),this.attached=!0,this.requestUpdate())}processDetach(){this.attached&&(this.attached=!1,this.removeHandles("attach"),this.detach(),this.updateRequested=!1)}requestUpdate(){this.destroyed||this.updateRequested||(this.updateRequested=!0,this.updateSuspended||this.view.requestUpdate())}processUpdate(t){!this.isFulfilled()||this.isResolved()?(this._set("updateParameters",t),this.updateRequested&&!this.updateSuspended&&(this.updateRequested=!1,this.update(t))):this.updateRequested=!1}hitTest(t,e){return Promise.resolve(null)}supportsSpatialReference(t){return!0}canResume(){if(!this.spatialReferenceSupported)return!1;switch(this.layer?.type){case"link-chart":case"knowledge-graph-sublayer":case"graphics":break;default:if(I(this.view)&&!this.view.inGeographicLayout)return!1}return!!super.canResume()&&this.visibleAtCurrentScale}getSuspendInfo(){const t=super.getSuspendInfo(),e=!this.spatialReferenceSupported;return e&&(t.spatialReferenceNotSupported=e),t}addAttachHandles(t){this.addHandles(t,"attach")}_addHighlights(t,e){this._highlightCounter.add(t,e)&&this._processHighlight()}_removeHighlights(t,e){this._highlightCounter.delete(t,e)&&this._processHighlight()}_processHighlight(){}_getHighlights(){const t=[];for(const[e,r]of this._highlightCounter.highlightNamesByObjectId){const h=this._getHighlightBits(r);t.push({objectId:e,highlightFlags:h})}return t}_getHighlightBits(t){const e=new Set(t);let r=1,h=0;if(!this.view)return 0;const w=this._mergedHighlights;for(const{name:_}of w)e.delete(_)&&(h=r),r<<=1;return h}};return s([a()],i.prototype,"attached",void 0),s([a({type:f,set(t){const e=T(t,this._get("clips"),f);this._set("clips",e)}})],i.prototype,"clips",void 0),s([a()],i.prototype,"container",void 0),s([a({type:g})],i.prototype,"highlightOptions",null),s([a({type:u.ofType(g)})],i.prototype,"highlights",void 0),s([a()],i.prototype,"_mergedHighlights",null),s([a()],i.prototype,"moving",void 0),s([a({readOnly:!0})],i.prototype,"spatialReferenceSupported",null),s([a({readOnly:!0})],i.prototype,"updateParameters",void 0),s([a()],i.prototype,"updateRequested",void 0),s([a()],i.prototype,"updating",null),s([a()],i.prototype,"view",void 0),s([a()],i.prototype,"_visibleAtCurrentScale",void 0),s([a({readOnly:!0})],i.prototype,"visibleAtCurrentScale",null),i=s([d("esri.views.2d.layers.LayerView2D")],i),i};export{G as S,p as n};
