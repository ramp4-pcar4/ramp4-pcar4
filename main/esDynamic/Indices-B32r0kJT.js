import{cT as r,a6 as y}from"./main-CnDVnExo.js";function h(n){return o(n,!0)}function o(n,t){if(Array.isArray(n)){if(n.length<r)return n}else if(n.length<r)return Array.from(n);let e=!0,a=!0;return n.some((A,c)=>(e=e&&A===0,a=a&&A===c,!e&&!a)),e?s(n.length):a?w(n.length):y(n)&&n.BYTES_PER_ELEMENT===Uint16Array.BYTES_PER_ELEMENT?n:g(n,!t)}function g(n,t){for(const e of n){if(e>=65536)return y(n)?n:new Uint32Array(n);e>=256&&(t=!1)}return t?new Uint8Array(n):new Uint16Array(n)}function E(n){return n<=r?new Array(n):n<=65536?new Uint16Array(n):new Uint32Array(n)}function m(n){return n<=r?new Array(n):new Uint32Array(n)}let i=U(131072);const l=[0],u=(()=>{const n=new Uint16Array(65536);for(let t=0;t<n.length;++t)n[t]=t;return n})();function w(n){return n===1?l:n<r?Array.from(new Uint16Array(u.buffer,0,n)):n<u.length?new Uint16Array(u.buffer,0,n):(n>i.length&&(i=U(Math.max(2*i.length,n))),new Uint32Array(i.buffer,0,n))}function U(n){const t=new Uint32Array(n);for(let e=0;e<t.length;e++)t[e]=e;return t}let f=new Uint8Array(65536);function s(n){if(n===1)return l;if(n<r)return new Array(n).fill(0);if(n>f.length){const t=Math.max(2*f.length,n);f=new Uint8Array(t)}return new Uint8Array(f.buffer,0,n)}export{w as A,s as U,m as a,o as e,E as f,h as t};
