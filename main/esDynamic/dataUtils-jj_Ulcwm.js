import{B as Lt,s as jt,h as Et,i as H,v as q,x as W,cc as Gt,z as qt,ie as Mt,aw as Nt,ao as tt,O as Wt,ig as At,b_ as Ot,bY as zt,dz as Xt}from"./main-CnDVnExo.js";import{u as at}from"./pixelRangeUtils-DcEknavd.js";let ht=class{constructor(t=null,e=null,n=null){this.minValue=t,this.maxValue=e,this.noDataValue=n}};var J;let V=J=class extends Lt{static createEmptyBand(t,e){return new(J.getPixelArrayConstructor(t))(e)}static combineBandMasks(t){if(t.length<2)return t[0];const e=t[0].length,n=new Uint8Array(e).fill(255);for(let s=0;s<t.length;s++){const r=t[s];for(let i=0;i<e;i++)r[i]||(n[i]=0)}return n}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){return this.pixels?.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new jt("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new ht)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map(n=>$t(n,this.mask));const t=this.mask;let e=0;if(t!=null)for(let n=0;n<t.length;n++)t[n]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||t==="f64"||t==="f32"||!this.pixels)return;const[e,n]=at(t),s=this.pixels,r=this.width*this.height,i=s.length;let l,f,o;const a=[];for(let h=0;h<i;h++){o=J.createEmptyBand(t,r),l=s[h];for(let c=0;c<r;c++)f=l[c],o[c]=f>n?n:f<e?e:f;a.push(o)}this.pixels=a,this.pixelType=t}extractBands(t){const{pixels:e,statistics:n}=this;if(t==null||t.length===0||!e||e.length===0)return this;const s=e.length,r=t.some(c=>c>=e.length),i=s===t.length&&!t.some((c,p)=>c!==p);if(r||i)return this;const l=this.bandMasks?.length===s?t.map(c=>this.bandMasks[c]):void 0;let{mask:f,validPixelCount:o}=this;const{width:a,height:h}=this;return l?.length&&(f=J.combineBandMasks(l),o=f.filter(c=>!!c).length),new J({pixelType:this.pixelType,width:a,height:h,mask:f,bandMasks:l,validPixelCount:o,maskIsAlpha:this.maskIsAlpha,pixels:t.map(c=>e[c]),statistics:n&&t.map(c=>n[c])})}clone(){const t=new J({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;this.mask!=null&&(t.mask=new Uint8Array(this.mask)),this.bandMasks&&(t.bandMasks=this.bandMasks.map(s=>new Uint8Array(s)));const n=J.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const s=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=s?this.pixels[e].slice():new n(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=Et(this.statistics[e]);return t.premultiplyAlpha=this.premultiplyAlpha,t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:n,premultiplyAlpha:s,pixels:r}=this;if(!t||!r?.length)return void H.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let i,l,f,o;i=l=f=r[0],r.length>=3?(l=r[1],f=r[2]):r.length===2&&(l=r[1]);const a=new Uint32Array(t),h=this.width*this.height;if(i.length===h)if(e!=null&&e.length===h)if(n)for(o=0;o<h;o++){const c=e[o];if(c){const p=c/255;a[o]=s?c<<24|f[o]*p<<16|l[o]*p<<8|i[o]*p:c<<24|f[o]<<16|l[o]<<8|i[o]}}else for(o=0;o<h;o++)e[o]&&(a[o]=255<<24|f[o]<<16|l[o]<<8|i[o]);else for(o=0;o<h;o++)a[o]=255<<24|f[o]<<16|l[o]<<8|i[o];else H.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:n,statistics:s}=this;if(!t||!e?.length)return void H.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const r=this.pixelType;let i=1,l=0,f=1;if(s&&s.length>0){for(const m of s)if(m.minValue!=null&&(l=Math.min(l,m.minValue)),m.maxValue!=null&&m.minValue!=null){const g=m.maxValue-m.minValue;f=Math.max(f,g)}i=255/f}else{let m=255;r==="s8"?(l=-128,m=127):r==="u16"?m=65535:r==="s16"?(l=-32768,m=32767):r==="u32"?m=4294967295:r==="s32"?(l=-2147483648,m=2147483647):r==="f32"?(l=-34e38,m=34e38):r==="f64"&&(l=-Number.MAX_VALUE,m=Number.MAX_VALUE),i=255/(m-l)}const o=new Uint32Array(t),a=this.width*this.height;let h,c,p,u,d;if(h=c=p=e[0],h.length!==a)return H.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(c=e[1],e.length>=3&&(p=e[2]),n!=null&&n.length===a)for(u=0;u<a;u++)n[u]&&(o[u]=255<<24|(p[u]-l)*i<<16|(c[u]-l)*i<<8|(h[u]-l)*i);else for(u=0;u<a;u++)o[u]=255<<24|(p[u]-l)*i<<16|(c[u]-l)*i<<8|(h[u]-l)*i;else if(n!=null&&n.length===a)for(u=0;u<a;u++)d=(h[u]-l)*i,n[u]&&(o[u]=255<<24|d<<16|d<<8|d);else for(u=0;u<a;u++)d=(h[u]-l)*i,o[u]=255<<24|d<<16|d<<8|d}_fillFrom32Bit(t){const{pixels:e,mask:n}=this;if(!t||!e?.length)return H.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let s,r,i,l;s=r=i=e[0],e.length>=3?(r=e[1],i=e[2]):e.length===2&&(r=e[1]);const f=this.width*this.height;if(s.length!==f)return H.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let o=0;if(n!=null&&n.length===f)for(l=0;l<f;l++)t[o++]=s[l],t[o++]=r[l],t[o++]=i[l],t[o++]=1&n[l];else for(l=0;l<f;l++)t[o++]=s[l],t[o++]=r[l],t[o++]=i[l],t[o++]=1}};function $t(t,e){let n=1/0,s=-1/0;const r=t.length;let i,l=0;if(e!=null)for(i=0;i<r;i++)e[i]&&(l=t[i],n=l<n?l:n,s=l>s?l:s);else for(i=0;i<r;i++)l=t[i],n=l<n?l:n,s=l>s?l:s;return new ht(n,s)}q([W({json:{write:!0}})],V.prototype,"width",void 0),q([W({json:{write:!0}})],V.prototype,"height",void 0),q([W({json:{write:!0}})],V.prototype,"pixelType",void 0),q([Gt("pixelType")],V.prototype,"castPixelType",null),q([W({json:{write:!0}})],V.prototype,"validPixelCount",void 0),q([W({json:{write:!0}})],V.prototype,"mask",void 0),q([W({json:{write:!0}})],V.prototype,"maskIsAlpha",void 0),q([W({json:{write:!0}})],V.prototype,"pixels",void 0),q([W()],V.prototype,"premultiplyAlpha",void 0),q([W({json:{write:!0}})],V.prototype,"statistics",void 0),q([W({json:{write:!0}})],V.prototype,"depthCount",void 0),q([W({json:{write:!0}})],V.prototype,"noDataValues",void 0),q([W({json:{write:!0}})],V.prototype,"bandMasks",void 0),V=J=q([qt("esri.layers.support.PixelBlock")],V);var ct,ft;(function(t){t[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll"})(ct||(ct={})),function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(ft||(ft={}));const ut=9;function R(t){return t!=null&&t.pixels?.length>0}function Jt(t){if(!t?.length||t.some(h=>!R(h)))return null;if(t.length===1)return t[0]?.clone()??null;const e=t,{width:n,height:s,pixelType:r}=e[0];if(e.some(h=>h.width!==n||h.height!==s))return null;const i=e.map(({mask:h})=>h).filter(h=>h!=null);let l=null;i.length&&(l=new Uint8Array(n*s),l.set(i[0]),i.length>1&&Ut(i.slice(1),l));const f=[];e.forEach(({pixels:h})=>f.push(...h));const o=e.map(({statistics:h})=>h).filter(h=>h?.length),a=[];return o.forEach(h=>a.push(...h)),new V({pixelType:r,width:n,height:s,mask:l,pixels:f,statistics:a.length?a:null})}function Kt(t){if(!t)return;const e=t.colormap;if(!e||e.length===0)return;const n=e.sort((o,a)=>o[0]-a[0]),s=n[0][0]<0?n[0][0]:0,r=Math.max(256,n[n.length-1][0]-s+1),i=new Uint8Array(4*r),l=[],f=n[0].length===5;if(r>65536)return n.forEach(o=>{l[o[0]-s]=f?o.slice(1):o.slice(1).concat([255])}),{indexed2DColormap:l,offset:s,alphaSpecified:f};if(t.fillUnspecified){let o=n[0];for(let a=o[0]-s,h=0;a<r;a++)i[4*a]=o[1],i[4*a+1]=o[2],i[4*a+2]=o[3],i[4*a+3]=f?o[4]:255,a===o[0]-s&&(o=h===n.length-1?o:n[++h])}else for(let o=0;o<n.length;o++){const a=n[o],h=4*(a[0]-s);i[h]=a[1],i[h+1]=a[2],i[h+2]=a[3],i[h+3]=f?a[4]:255}return{indexedColormap:i,offset:s,alphaSpecified:f}}function Ht(t,e){if(!R(t)||!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),s=n.pixels;let r=n.mask;const i=n.width*n.height;if(s.length!==1)return t;const{indexedColormap:l,indexed2DColormap:f,offset:o,alphaSpecified:a}=e,h=s[0],c=new Uint8Array(h.length),p=new Uint8Array(h.length),u=new Uint8Array(h.length);let d,m=0;if(l){const g=l.length-1;if(r!=null)for(let w=0;w<i;w++)r[w]&&(m=4*(h[w]-o),m<o||m>g?r[w]=0:(c[w]=l[m],p[w]=l[m+1],u[w]=l[m+2],r[w]=l[m+3]));else{r=new Uint8Array(i);for(let w=0;w<i;w++)m=4*(h[w]-o),m<o||m>g?r[w]=0:(c[w]=l[m],p[w]=l[m+1],u[w]=l[m+2],r[w]=l[m+3]);n.mask=r}}else if(f)if(r!=null)for(let g=0;g<i;g++)r[g]&&(d=f[h[g]],c[g]=d[0],p[g]=d[1],u[g]=d[2],r[g]=d[3]);else{r=new Uint8Array(i);for(let g=0;g<i;g++)d=f[h[g]],c[g]=d[0],p[g]=d[1],u[g]=d[2],r[g]=d[3];n.mask=r}return n.pixels=[c,p,u],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=a,n}function Yt(t,e){if(!R(t))return null;const{pixels:n,mask:s}=t,r=n.length;let i=e.lut;const{offset:l}=e;i&&i[0].length===1&&(i=n.map(()=>i));const f=[],o=e.outputPixelType||"u8";for(let h=0;h<r;h++){const c=pt(n[h],s,i[h],l||0,o);f.push(c)}const a=new V({width:t.width,height:t.height,pixels:f,mask:s,pixelType:o});return a.updateStatistics(),a}function pt(t,e,n,s,r){const i=t.length,l=V.createEmptyBand(r,i);if(e)for(let f=0;f<i;f++)e[f]&&(l[f]=n[t[f]-s]);else for(let f=0;f<i;f++)l[f]=n[t[f]-s];return l}function Qt(t,e){if(!R(t))return null;const n=t.clone(),{pixels:s}=n,r=n.width*n.height,i=e.length,l=Math.floor(i/2),f=e[Math.floor(l)],o=s[0],a=new Uint8Array(r),h=new Uint8Array(r),c=new Uint8Array(r);let p=n.mask;const u=e[0].mappedColor.length===4;p||(p=new Uint8Array(r),p.fill(u?255:1),n.mask=p);for(let d=0;d<r;d++)if(p[d]){const m=o[d];let g=!1,w=l,k=f,M=0,y=i-1;for(;y-M>1;){if(m===k.value){g=!0;break}m>k.value?M=w:y=w,w=Math.floor((M+y)/2),k=e[Math.floor(w)]}g||(m===e[M].value?(k=e[M],g=!0):m===e[y].value?(k=e[y],g=!0):m<e[M].value?g=!1:m>e[M].value&&(m<e[y].value?(k=e[M],g=!0):y===i-1?g=!1:(k=e[y],g=!0))),g?(a[d]=k.mappedColor[0],h[d]=k.mappedColor[1],c[d]=k.mappedColor[2],p[d]=k.mappedColor[3]):a[d]=h[d]=c[d]=p[d]=0}return n.pixels=[a,h,c],n.mask=p,n.pixelType="u8",n.maskIsAlpha=u,n}function Zt(t,e,n=!1){const s=new Float32Array(3*ut),r=e.length;for(let i=0;i<ut;i++)s[3*i]=t[2*i]??Mt-1,s[3*i+1]=t[2*i+1]??Mt,s[3*i+2]=e[i]??0,i<r&&(i>0&&(s[3*i]-=1e-5),t[2*i+1]!==t[2*i]&&(i<r-1||!n)&&(s[3*i+1]-=1e-5));return s}function te(t,e){if(!R(t))return null;const{width:n,height:s}=t,{inputRanges:r,outputValues:i,outputPixelType:l,noDataRanges:f,allowUnmatched:o,replacementValue:a,isLastInputRangeInclusive:h}=e,c=t.pixels[0],p=V.createEmptyBand(l,c.length),u=t.mask,d=new Uint8Array(n*s);u?d.set(u):d.fill(255);const m=t.pixelType.startsWith("f")?1e-6:0,g=r.map(x=>x-m);g[0]=r[0],g[g.length-1]=r[r.length-1]+(h?1e-6:0);const w=r.length/2,[k,M]=at(l);for(let x=0;x<s;x++)for(let b=0;b<n;b++){const T=x*n+b;if(d[T]){const U=c[T];let B=!1;for(let v=w-1;v>=0;v--)if(U===r[2*v]||U>g[2*v]&&U<g[2*v+1]){p[T]=i[v],B=!0;break}B||(o?p[T]=U>M?M:U<k?k:a??U:d[T]=0)}}const y=f?.length;if(y)for(let x=0;x<s;x++)for(let b=0;b<n;b++){const T=x*n+b;if(!u||u[T]){const U=c[T];for(let B=0;B<y;B+=2)if(U>=f[B]&&U<=f[B+1]){p[T]=0,d[T]=0;break}}}return new V({width:n,height:s,pixelType:l,pixels:[p],mask:d})}function bt(t,e,n,s){const r=n!=null&&n.length>=2?new Set(n):null,i=n?.length===1?n[0]:null,l=!!e?.length;for(let f=0;f<t.length;f++)if(s[f]){const o=t[f];if(l){let a=!1;for(let h=0;h<e.length;h+=2)if(o>=e[h]&&o<=e[h+1]){a=!0;break}a||(s[f]=0)}s[f]&&(o===i||r?.has(o))&&(s[f]=0)}}function vt(t,e){const n=t[0].length;for(let s=0;s<n;s++)if(e[s]){let r=!1;for(let i=0;i<t.length;i++)if(t[i][s]){r=!0;break}r||(e[s]=0)}}function Ut(t,e){const n=t[0].length;for(let s=0;s<n;s++)if(e[s]){let r=!1;for(let i=0;i<t.length;i++)if(t[i][s]===0){r=!0;break}r&&(e[s]=0)}}function ee(t,e){if(!R(t))return null;const{width:n,height:s,pixels:r}=t,i=n*s,l=new Uint8Array(i);t.mask?l.set(t.mask):l.fill(255);const f=r.length,{includedRanges:o,noDataValues:a,outputPixelType:h,matchAll:c,lookups:p}=e;if(p){const u=[];for(let d=0;d<f;d++){const m=p[d],g=pt(r[d],l,m.lut,m.offset||0,"u8");u.push(g)}u.length===1?l.set(u[0]):c?vt(u,l):Ut(u,l)}else if(c){const u=[];for(let d=0;d<f;d++){const m=new Uint8Array(i);m.set(l),bt(r[d],o?.slice(2*d,2*d+2),a?.[d],m),u.push(m)}u.length===1?l.set(u[0]):vt(u,l)}else for(let u=0;u<f;u++)bt(r[u],o?.slice(2*u,2*u+2),a?.[u],l);return new V({width:n,height:s,pixelType:h,pixels:r,mask:l})}function ne(t){const{srcPixelType:e,inputRanges:n,outputValues:s,allowUnmatched:r,noDataRanges:i,isLastInputRangeInclusive:l,outputPixelType:f}=t;if(e!=="u8"&&e!=="s8"&&e!=="u16"&&e!=="s16")return null;const o=e.includes("16")?65536:256,a=e.includes("s")?-o/2:0,h=V.createEmptyBand(f,o),c=new Uint8Array(o);r&&c.fill(255);const[p,u]=at(f);if(n?.length&&s?.length){const d=n.map(m=>m-1e-6);d[0]=n[0],l&&(d[d.length-1]=n[n.length-1]);for(let m=0;m<d.length;m++){const g=s[m]>u?u:s[m]<p?p:s[m],w=Math.ceil(d[2*m]-a),k=n[2*m+1]===n[2*m]?w:Math.floor(d[2*m+1]-a);for(let M=w;M<=k;M++)h[M]=g,c[M]=255}}if(i?.length)for(let d=0;d<i.length;d++){const m=Math.ceil(i[2*d]-a),g=Math.floor(i[2*d+1]-a);for(let w=m;w<=g;w++)c[w]=0}return{lut:h,offset:a,mask:c}}function ie(t,e,n){if(t!=="u8"&&t!=="s8"&&t!=="u16"&&t!=="s16")return null;const s=t.includes("16")?65536:256,r=t.includes("s")?-s/2:0,i=new Uint8Array(s);if(e)for(let l=0;l<e.length;l++){const f=Math.ceil(e[2*l]-r),o=Math.floor(e[2*l+1]-r);for(let a=f;a<=o;a++)i[a]=255}else i.fill(255);if(n)for(let l=0;l<n.length;l++)i[n[l]-r]=0;return{lut:i,offset:r}}function le(t,e,n,s,r,i,l,f){return{xmin:r<=n*t?0:r<n*t+t?r-n*t:t,ymin:i<=s*e?0:i<s*e+e?i-s*e:e,xmax:r+l<=n*t?0:r+l<n*t+t?r+l-n*t:t,ymax:i+f<=s*e?0:i+f<s*e+e?i+f-s*e:e}}function se(t,e){if(!t||t.length===0)return null;const n=t.find(d=>d.pixelBlock);if(n?.pixelBlock==null)return null;const s=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,r=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,i=.01*Math.min(s,r),l=t.sort((d,m)=>Math.abs(d.extent.ymax-m.extent.ymax)>i?m.extent.ymax-d.extent.ymax:Math.abs(d.extent.xmin-m.extent.xmin)>i?d.extent.xmin-m.extent.xmin:0),f=Math.min.apply(null,l.map(d=>d.extent.xmin)),o=Math.min.apply(null,l.map(d=>d.extent.ymin)),a=Math.max.apply(null,l.map(d=>d.extent.xmax)),h=Math.max.apply(null,l.map(d=>d.extent.ymax)),c={x:Math.round((e.xmin-f)/s),y:Math.round((h-e.ymax)/r)},p={width:Math.round((a-f)/s),height:Math.round((h-o)/r)},u={width:Math.round((e.xmax-e.xmin)/s),height:Math.round((e.ymax-e.ymin)/r)};return Math.round(p.width/n.pixelBlock.width)*Math.round(p.height/n.pixelBlock.height)!==l.length||c.x<0||c.y<0||p.width<u.width||p.height<u.height?null:{extent:e,pixelBlock:Tt(l.map(d=>d.pixelBlock),p,{clipOffset:c,clipSize:u})}}function dt(t,e,n,s,r,i){const{width:l,height:f}=n.block,{x:o,y:a}=n.offset,{width:h,height:c}=n.mosaic,p=le(l,f,s,r,o,a,h,c);let u=0,d=0;if(i){const m=i.hasGCSSShiftTransform?360:i.halfWorldWidth??0,g=l*i.resolutionX,w=i.startX+s*g;w<m&&w+g>m?d=i.rightPadding:w>=m&&(u=i.leftMargin-i.rightPadding,d=0)}if(p.xmax-=d,typeof e!="number")for(let m=p.ymin;m<p.ymax;m++){const g=(r*f+m-a)*h+(s*l-o)+u,w=m*l;for(let k=p.xmin;k<p.xmax;k++)t[g+k]=e[w+k]}else for(let m=p.ymin;m<p.ymax;m++){const g=(r*f+m-a)*h+(s*l-o)+u;for(let w=p.xmin;w<p.xmax;w++)t[g+w]=e}}function Tt(t,e,n={}){const{clipOffset:s,clipSize:r,alignmentInfo:i,blockWidths:l}=n;if(l)return re(t,e,{blockWidths:l});const f=t.find(v=>R(v));if(f==null)return null;const o=r?r.width:e.width,a=r?r.height:e.height,h=f.width,c=f.height,p=e.width/h,u=e.height/c,d={offset:s||{x:0,y:0},mosaic:r||e,block:{width:h,height:c}},m=f.pixelType,g=V.getPixelArrayConstructor(m),w=f.pixels.length,k=[];let M,y;for(let v=0;v<w;v++){y=new g(o*a);for(let P=0;P<u;P++)for(let A=0;A<p;A++){const I=t[P*p+A];R(I)&&(M=I.pixels[v],dt(y,M,d,A,P,i))}k.push(y)}const x=t.some(v=>v==null||v.mask!=null&&v.mask.length>0),b=t.some(v=>v?.bandMasks&&v.bandMasks.length>1),T=x?new Uint8Array(o*a):void 0,U=b?[]:void 0;if(T){for(let v=0;v<u;v++)for(let P=0;P<p;P++){const A=t[v*p+P],I=A!=null?A.mask:null;dt(T,I??(A?255:0),d,P,v,i)}if(U)for(let v=0;v<w;v++){const P=new Uint8Array(o*a);for(let A=0;A<u;A++)for(let I=0;I<p;I++){const C=t[A*p+I],S=C?.bandMasks?.[v]??C?.mask;dt(P,S??(C?255:0),d,I,A,i)}U.push(P)}}const B=new V({width:o,height:a,pixels:k,pixelType:m,bandMasks:U,mask:T});return B.updateStatistics(),B}function re(t,e,n){const s=t.find(g=>g!=null);if(s==null)return null;const r=t.some(g=>g==null||!!g.mask),{width:i,height:l}=e,f=r?new Uint8Array(i*l):null,{blockWidths:o}=n,a=[],h=s.getPlaneCount(),c=V.getPixelArrayConstructor(s.pixelType);if(r)for(let g=0,w=0;g<t.length;w+=o[g],g++){const k=t[g];if(!R(k))continue;const M=k.mask;for(let y=0;y<l;y++)for(let x=0;x<o[g];x++)f[y*i+x+w]=M==null?255:M[y*k.width+x]}const p=t.some(g=>g?.bandMasks&&g.bandMasks.length>1),u=p?[]:void 0,d=i*l;for(let g=0;g<h;g++){const w=new c(d),k=p?new Uint8Array(d):void 0;for(let M=0,y=0;M<t.length;y+=o[M],M++){const x=t[M];if(!R(x))continue;const b=x.pixels[g];if(b!=null){for(let T=0;T<l;T++)for(let U=0;U<o[M];U++)w[T*i+U+y]=b[T*x.width+U];if(k){const T=x.bandMasks?.[g]??x.mask;for(let U=0;U<l;U++)for(let B=0;B<o[M];B++)k[U*i+B+y]=T?T[U*x.width+B]:255}}}a.push(w),u&&k&&u.push(k)}const m=new V({width:i,height:l,mask:f,bandMasks:u,pixels:a,pixelType:s.pixelType});return m.updateStatistics(),m}function oe(t,e,n){if(!R(t))return null;const{width:s,height:r}=t,i=e.x,l=e.y,f=n.width+i,o=n.height+l;if(i<0||l<0||f>s||o>r||i===0&&l===0&&f===s&&o===r)return t;t.mask||(t.mask=new Uint8Array(s*r));const a=t.mask;for(let h=0;h<r;h++){const c=h*s;for(let p=0;p<s;p++)a[c+p]=h<l||h>=o||p<i||p>=f?0:1}return t.updateStatistics(),t}function ae(t){if(!R(t))return null;const e=t.clone(),{width:n,height:s,pixels:r}=t,i=r[0],l=e.pixels[0],f=t.mask;for(let o=2;o<s-1;o++){const a=new Map;for(let c=o-2;c<o+2;c++)for(let p=0;p<4;p++){const u=c*n+p;it(a,i[u],f?f[u]:1)}l[o*n]=It(a),l[o*n+1]=l[o*n+2]=l[o*n];let h=3;for(;h<n-1;h++){let c=(o-2)*n+h+1;it(a,i[c],f?f[c]:1),c=(o-1)*n+h+1,it(a,i[c],f?f[c]:1),c=o*n+h+1,it(a,i[c],f?f[c]:1),c=(o+1)*n+h+1,it(a,i[c],f?f[c]:1),c=(o-2)*n+h-3,st(a,i[c],f?f[c]:1),c=(o-1)*n+h-3,st(a,i[c],f?f[c]:1),c=o*n+h-3,st(a,i[c],f?f[c]:1),c=(o+1)*n+h-3,st(a,i[c],f?f[c]:1),l[o*n+h]=It(a)}l[o*n+h+1]=l[o*n+h]}for(let o=0;o<n;o++)l[o]=l[n+o]=l[2*n+o],l[(s-1)*n+o]=l[(s-2)*n+o];return e.updateStatistics(),e}function It(t){if(t.size===0)return 0;let e=0,n=-1,s=0;const r=t.keys();let i=r.next();for(;!i.done;)s=t.get(i.value),s>e&&(n=i.value,e=s),i=r.next();return n}function st(t,e,n){if(n===0)return;const s=t.get(e);s===1?t.delete(e):t.set(e,s-1)}function it(t,e,n){n!==0&&t.set(e,t.has(e)?t.get(e)+1:1)}function mt(t,e,n){let{x:s,y:r}=e;const{width:i,height:l}=n;if(s===0&&r===0&&l===t.height&&i===t.width)return t;const{width:f,height:o}=t,a=Math.max(0,r),h=Math.max(0,s),c=Math.min(s+i,f),p=Math.min(r+l,o);if(c<0||p<0||!R(t))return null;s=Math.max(0,-s),r=Math.max(0,-r);const{pixels:u}=t,d=i*l,m=u.length,g=[];for(let y=0;y<m;y++){const x=u[y],b=V.createEmptyBand(t.pixelType,d);for(let T=a;T<p;T++){const U=T*f;let B=(T+r-a)*i+s;for(let v=h;v<c;v++)b[B++]=x[U+v]}g.push(b)}const w=new Uint8Array(d),k=t.mask;for(let y=a;y<p;y++){const x=y*f;let b=(y+r-a)*i+s;for(let T=h;T<c;T++)w[b++]=k?k[x+T]:1}const M=new V({width:n.width,height:n.height,pixelType:t.pixelType,pixels:g,mask:w});return M.updateStatistics(),M}function Pt(t,e=!0){if(!R(t))return null;const{pixels:n,width:s,height:r,mask:i,pixelType:l}=t,f=[],o=Math.round(s/2),a=Math.round(r/2),h=r-1,c=s-1;for(let u=0;u<n.length;u++){const d=n[u],m=V.createEmptyBand(l,o*a);let g=0;for(let w=0;w<r;w+=2)for(let k=0;k<s;k+=2){const M=d[w*s+k];if(e){const y=k===c?M:d[w*s+k+1],x=w===h?M:d[w*s+k+s],b=k===c?x:w===h?y:d[w*s+k+s+1];m[g++]=(M+y+x+b)/4}else m[g++]=M}f.push(m)}let p=null;if(i!=null){p=new Uint8Array(o*a);let u=0;for(let d=0;d<r;d+=2)for(let m=0;m<s;m+=2){const g=i[d*s+m];if(e){const w=m===c?g:i[d*s+m+1],k=d===h?g:i[d*s+m+s],M=m===c?k:d===h?w:i[d*s+m+s+1];p[u++]=g*w*k*M?1:0}else p[u++]=g}}return new V({width:o,height:a,pixelType:l,pixels:f,mask:p})}function he(t,e,n=0,s=!0){if(!R(t))return null;const{width:r,height:i}=e;let{width:l,height:f}=t;const o=new Map,a={x:0,y:0},h=1+n;let c=t;for(let p=0;p<h;p++){const u=Math.ceil(l/r),d=Math.ceil(f/i);for(let m=0;m<d;m++){a.y=m*i;for(let g=0;g<u;g++){a.x=g*r;const w=mt(c,a,e);o.set(`${p}/${m}/${g}`,w)}}p<h-1&&(c=Pt(c,s)),l=Math.round(l/2),f=Math.round(f/2)}return o}function ce(t){const{pixelBlock:e,tileSize:n,level:s,row:r,col:i,useBilinear:l}=t;if(!R(e))return null;const{width:f,height:o}=n,a=2**s,h=a*f,c=a*o;let p=mt(e,{y:r*c,x:i*h},{width:h,height:c});if(!p)return null;for(let u=s;u>0;u--)p=Pt(p,l);return p}function Bt(t,e,n,s,r=0){const{width:i,height:l}=t,{width:f,height:o}=e,a=s.cols,h=s.rows,c=Math.ceil(f/a-.1/a),p=Math.ceil(o/h-.1/h);let u,d,m,g,w,k,M;const y=c*a,x=y*p*h,b=new Float32Array(x),T=new Float32Array(x),U=new Uint32Array(x),B=new Uint32Array(x);let v,P,A=0;for(let I=0;I<p;I++)for(let C=0;C<c;C++){u=12*(I*c+C),d=n[u],m=n[u+1],g=n[u+2],w=n[u+3],k=n[u+4],M=n[u+5];for(let S=0;S<h;S++){A=(I*h+S)*y+C*a,P=(S+.5)/h;for(let F=0;F<S;F++)v=(F+.5)/a,b[A+F]=(d*v+m*P+g)*i+r,T[A+F]=(w*v+k*P+M)*l+r,U[A+F]=Math.floor(b[A+F]),B[A+F]=Math.floor(T[A+F])}u+=6,d=n[u],m=n[u+1],g=n[u+2],w=n[u+3],k=n[u+4],M=n[u+5];for(let S=0;S<h;S++){A=(I*h+S)*y+C*a,P=(S+.5)/h;for(let F=S;F<a;F++)v=(F+.5)/a,b[A+F]=(d*v+m*P+g)*i+r,T[A+F]=(w*v+k*P+M)*l+r,U[A+F]=Math.floor(b[A+F]),B[A+F]=Math.floor(T[A+F])}}return{offsets_x:b,offsets_y:T,offsets_xi:U,offsets_yi:B,gridWidth:y}}function fe(t,e){const{coefficients:n,spacing:s}=e,{offsets_x:r,offsets_y:i,gridWidth:l}=Bt(t,t,n,{rows:s[0],cols:s[1]}),{width:f,height:o}=t,a=new Float32Array(f*o),h=180/Math.PI;for(let c=0;c<o;c++)for(let p=0;p<f;p++){const u=c*l+p,d=c===0?u:u-l,m=c===o-1?u:u+l,g=r[d]-r[m],w=i[m]-i[d];if(isNaN(g)||isNaN(w))a[c*f+p]=90;else{let k=Math.atan2(w,g)*h;k=(360+k)%360,a[c*f+p]=k}}return a}function ue(t,e,n,s,r="nearest"){if(!R(t))return null;r==="majority"&&(t=ae(t));const{pixels:i,mask:l,bandMasks:f,pixelType:o}=t,a=t.width,h=t.height,c=V.getPixelArrayConstructor(o),p=i.length,{width:u,height:d}=e;let m=!1;for(let A=0;A<n.length;A+=3)n[A]===-1&&n[A+1]===-1&&n[A+2]===-1&&(m=!0);const{offsets_x:g,offsets_y:w,offsets_xi:k,offsets_yi:M,gridWidth:y}=Bt({width:a,height:h},e,n,s,r==="majority"?.5:0);let x;const b=(A,I,C,S)=>{const F=A instanceof Float32Array||A instanceof Float64Array?0:.5;for(let j=0;j<d;j++){x=j*y;for(let _=0;_<u;_++){if(g[x]<0||w[x]<0)A[j*u+_]=0;else if(S)A[j*u+_]=I[k[x]+M[x]*a];else{const G=Math.floor(g[x]),N=Math.floor(w[x]),O=Math.ceil(g[x]),$=Math.ceil(w[x]),X=g[x]-G,K=w[x]-N;if(!C||C[G+N*a]&&C[O+N*a]&&C[G+$*a]&&C[O+$*a]){const Z=(1-X)*I[G+N*a]+X*I[O+N*a],D=(1-X)*I[G+$*a]+X*I[O+$*a];A[j*u+_]=(1-K)*Z+K*D+F}else A[j*u+_]=I[k[x]+M[x]*a]}x++}}},T=[];let U;const B=f?.length===p,v=[];for(let A=0;A<p;A++){if(B){const I=new Uint8Array(u*d);b(I,f[A],f[A],!0),v.push(I)}U=new c(u*d),b(U,i[A],B?f[A]:l,r==="nearest"||r==="majority"),T.push(U)}const P=new V({width:u,height:d,pixelType:o,pixels:T,bandMasks:B?v:void 0});if(l!=null)P.mask=new Uint8Array(u*d),b(P.mask,l,l,!0);else if(m){P.mask=new Uint8Array(u*d);for(let A=0;A<u*d;A++)P.mask[A]=g[A]<0||w[A]<0?0:1}return P.updateStatistics(),P}const Y=new Map;Y.set("meter-per-second",1),Y.set("kilometer-per-hour",.277778),Y.set("knots",.514444),Y.set("feet-per-second",.3048),Y.set("mile-per-hour",.44704);const gt=180/Math.PI,xt=5,lt=new Nt({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function rt(t,e){return Y.get(t)/Y.get(e)||1}function St(t){return(450-t)%360}function wt(t,e="geographic"){const[n,s]=t,r=Math.sqrt(n*n+s*s);let i=Math.atan2(s,n)*gt;return i=(360+i)%360,e==="geographic"&&(i=St(i)),[r,i]}function pe(t,e="geographic"){let n=t[1];e==="geographic"&&(n=St(n)),n%=360;const s=t[0];return[s*Math.cos(n/gt),s*Math.sin(n/gt)]}function de(t,e,n,s="geographic"){if(!R(t)||n==null)return t;const r=e==="vector-magdir"?t.clone():yt(t,e),i=r.pixels[1];for(let l=0;l<i.length;l++)i[l]=s==="geographic"?(i[l]+n[l]+270)%360:(i[l]+360-n[l])%360;return e==="vector-magdir"?r:yt(r,"vector-magdir")}function yt(t,e,n="geographic",s=1){if(!R(t))return t;const{pixels:r,width:i,height:l}=t,f=i*l,o=r[0],a=r[1],h=t.pixelType.startsWith("f")?t.pixelType:"f32",c=V.createEmptyBand(h,f),p=V.createEmptyBand(h,f);let u=0;for(let m=0;m<l;m++)for(let g=0;g<i;g++)e==="vector-uv"?([c[u],p[u]]=wt([o[u],a[u]],n),c[u]*=s):([c[u],p[u]]=pe([o[u],a[u]],n),c[u]*=s,p[u]*=s),u++;const d=new V({pixelType:h,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[c,p]});return d.updateStatistics(),d}function me(t,e,n=1){if(n===1||!R(t))return t;const s=t.clone(),{pixels:r,width:i,height:l}=s,f=r[0];r[1];let o=0;for(let a=0;a<l;a++)for(let h=0;h<i;h++)f[o]*=n,o++;return s.updateStatistics(),s}function ge(t,e,n,s,r){if(r==null||!r.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/s),height:Math.round(n/s),resolution:t.width/e};const i=r.xmin,l=r.ymax,f=(t.xmax-t.xmin)/e*s,o=(t.ymax-t.ymin)/n*s,a=(f+o)/2;return t.xmin=i+Math.floor((t.xmin-i)/f)*f,t.xmax=i+Math.ceil((t.xmax-i)/f)*f,t.ymin=l+Math.floor((t.ymin-l)/o)*o,t.ymax=l+Math.ceil((t.ymax-l)/o)*o,{extent:t,width:Math.round(t.width/f),height:Math.round(t.height/o),resolution:a}}const xe=Ft(0,0,0);function Ft(t=0,e=0,n=Math.PI,s=!0){s&&(n=(2*Math.PI-n)%(2*Math.PI));const r=s?-1:1,i=13*r,l=-7*r,f=-2*r,o=-16*r,a=21.75,[h,c]=E(0,e+i,n,a),[p,u]=E(t-5.5,e+l,n,a),[d,m]=E(t+5.5,e+l,n,a),[g,w]=E(t-1.5,e+f,n,a),[k,M]=E(t+1.5,e+f,n,a),[y,x]=E(t-1.5,e+o,n,a),[b,T]=E(t+1.5,e+o,n,a);return[h,c,p,u,g,w,k,M,d,m,y,x,b,T]}function we(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const s=10,r=n?-1:1,i=5*r,l=20*r,f=25*r,o=45,a=0,h=0,c=2,p=0,u=c*r,d=n?1:-1,m=s/2*d;let[g,w]=[a+m,h-l],[k,M]=[g+c*d,w],[y,x]=[k-p*d,M+u],[b,T]=[a-m,h-f],[U,B]=[b+p*d,T-u],v=Math.ceil(t/xt),P=Math.floor(v/10);v-=8*P;const A=[],I=[];for(let X=0;X<v/2;X++,P--){P<=0&&v%2==1&&X===(v-1)/2&&(b=a,U=b+p*d,T=(T+w)/2,B=T-u);const[K,Z]=E(b,T,e,o);if(P>0){const[D,L]=E(k,T,e,o),[et,nt]=E(g,w,e,o);A.push(D),A.push(L),A.push(K),A.push(Z),A.push(et),A.push(nt)}else{const[D,L]=E(k,M,e,o),[et,nt]=E(y,x,e,o),[Dt,Rt]=E(U,B,e,o);I.push(K),I.push(Z),I.push(Dt),I.push(Rt),I.push(et),I.push(nt),I.push(D),I.push(L)}T+=i,w+=i,M+=i,x+=i,B+=i}const[C,S]=E(a+m,h+l,e,o),F=(s/2+c)*d,[j,_]=E(a+F,h+l,e,o),[G,N]=E(a+m,h-f,e,o),[O,$]=E(a+F,h-f,e,o);return{pennants:A,barbs:I,shaft:[C,S,j,_,G,N,O,$]}}function E(t,e,n,s=1){const r=Math.sqrt(t*t+e*e)/s,i=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[r,(2*Math.PI+i-n)%(2*Math.PI)]}const ot=[0,1,3,6,10,16,21,27,33,40,47,55,63],ye=[0,.5,1,1.5,2],ke=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function Q(t,e,n,s){const r=rt(s||"knots",n);let i;for(i=1;i<e.length;i++)if(i===e.length-1){if(t<e[i]*r)break}else if(t<=e[i]*r)break;return Math.min(i-1,e.length-2)}function Me(t,e,n,s,r){let i=0;switch(e){case"beaufort_kn":i=Q(t,ot,"knots",n);break;case"beaufort_km":i=Q(t,ot,"kilometer-per-hour",n);break;case"beaufort_ft":i=Q(t,ot,"feet-per-second",n);break;case"beaufort_m":i=Q(t,ot,"meter-per-second",n);break;case"classified_arrow":i=Q(t,r??[],s,n);break;case"ocean_current_m":i=Q(t,ye,"meter-per-second",n);break;case"ocean_current_kn":i=Q(t,ke,"knots",n)}return i}function Ae(t,e){const{style:n,inputUnit:s,outputUnit:r,breakValues:i}=e,l=lt.fromJSON(s),f=lt.fromJSON(r),o=42,a=15;let h=0,c=0;const{width:p,height:u,mask:d}=t,m=t.pixels[0],g=t.pixels[1],w=d!=null?d.filter(x=>x>0).length:p*u,k=new Float32Array(w*o),M=new Uint32Array(a*w),y=e.invertDirection?Ft(0,0,0,!1):xe;for(let x=0;x<u;x++)for(let b=0;b<p;b++){const T=x*p+b;if(!d||d[x*p+b]){const U=(g[T]+360)%360/180*Math.PI,B=Me(m[T],n,l,f,i);for(let P=0;P<y.length;P+=2)k[h++]=(b+.5)/p,k[h++]=(x+.5)/u,k[h++]=y[P],k[h++]=y[P+1]+U,k[h++]=B,k[h++]=m[T];const v=7*(h/o-1);M[c++]=v,M[c++]=v+1,M[c++]=v+2,M[c++]=v+0,M[c++]=v+4,M[c++]=v+3,M[c++]=v+0,M[c++]=v+2,M[c++]=v+3,M[c++]=v+2,M[c++]=v+5,M[c++]=v+3,M[c++]=v+5,M[c++]=v+6,M[c++]=v+3}}return{vertexData:k,indexData:M}}const kt=[];function be(t,e){if(kt.length===0)for(let u=0;u<30;u++)kt.push(we(5*u,0,!e.invertDirection));const n=rt(lt.fromJSON(e.inputUnit),"knots"),{width:s,height:r,mask:i}=t,l=t.pixels[0],f=t.pixels[1],o=6,a=[],h=[];let c=0,p=0;for(let u=0;u<r;u++)for(let d=0;d<s;d++){const m=u*s+d,g=l[m]*n;if((!i||i[u*s+d])&&g>=xt){const w=(f[m]+360)%360/180*Math.PI,{pennants:k,barbs:M,shaft:y}=kt[Math.min(Math.floor(g/5),29)];if(k.length+M.length===0)continue;let x=a.length/o;const b=(d+.5)/s,T=(u+.5)/r;for(let U=0;U<k.length;U+=2)a[c++]=b,a[c++]=T,a[c++]=k[U],a[c++]=k[U+1]+w,a[c++]=0,a[c++]=g;for(let U=0;U<M.length;U+=2)a[c++]=b,a[c++]=T,a[c++]=M[U],a[c++]=M[U+1]+w,a[c++]=0,a[c++]=g;for(let U=0;U<y.length;U+=2)a[c++]=b,a[c++]=T,a[c++]=y[U],a[c++]=y[U+1]+w,a[c++]=0,a[c++]=g;for(let U=0;U<k.length/6;U++)h[p++]=x,h[p++]=x+1,h[p++]=x+2,x+=3;for(let U=0;U<M.length/8;U++)h[p++]=x,h[p++]=x+1,h[p++]=x+2,h[p++]=x+1,h[p++]=x+2,h[p++]=x+3,x+=4;h[p++]=x+0,h[p++]=x+1,h[p++]=x+2,h[p++]=x+1,h[p++]=x+3,h[p++]=x+2,x+=4}}return{vertexData:new Float32Array(a),indexData:new Uint32Array(h)}}function Vt(t,e){let n=0,s=0;const{width:r,height:i,mask:l}=t,f=t.pixels[0],o=[],a=[],h=rt(lt.fromJSON(e.inputUnit),"knots"),c=e.style==="wind_speed"?xt:Number.MAX_VALUE;for(let p=0;p<i;p++)for(let u=0;u<r;u++){const d=f[p*r+u]*h;if((!l||l[p*r+u])&&d<c){for(let g=0;g<4;g++)o[n++]=(u+.5)/r,o[n++]=(p+.5)/i,o[n++]=g<2?-.5:.5,o[n++]=g%2==0?-.5:.5,o[n++]=0,o[n++]=d;const m=4*(n/24-1);a[s++]=m,a[s++]=m+1,a[s++]=m+2,a[s++]=m+1,a[s++]=m+2,a[s++]=m+3}}return{vertexData:new Float32Array(o),indexData:new Uint32Array(a)}}function ve(t,e){return e.style==="simple_scalar"?Vt(t,e):e.style==="wind_speed"?be(t,e):Ae(t,e)}function Ue(t,e,n,s=[0,0],r=.5){const{width:i,height:l,mask:f}=t,[o,a]=t.pixels,[h,c]=s,p=Math.round((i-h)/n),u=Math.round((l-c)/n),d=p*u,m=new Float32Array(d),g=new Float32Array(d),w=new Uint8Array(d);for(let M=0;M<u;M++)for(let y=0;y<p;y++){let x=0;const b=M*p+y,T=Math.max(0,M*n+c),U=Math.max(0,y*n+h),B=Math.min(l,T+n),v=Math.min(i,U+n);for(let P=T;P<B;P++)for(let A=U;A<v;A++){const I=P*i+A;if(!f||f[I]){x++;const C=[o[I],a[I]],[S,F]=C;m[b]+=S,g[b]+=F}}if(x>=(B-T)*(v-U)*(1-r)){w[b]=1;const[P,A]=wt([m[b]/x,g[b]/x]);m[b]=P,g[b]=A}else w[b]=0,m[b]=0,g[b]=0}const k=new V({width:p,height:u,pixels:[m,g],mask:w});return k.updateStatistics(),k}const z=()=>H.getLogger("esri.views.2d.engine.flow.dataUtils"),Te=10;async function Ie(t,e,n,s){const r=performance.now(),i=Pe(e,n),l=performance.now(),f=Se(e,i,n.width,n.height),o=performance.now(),a=Ve(f),h=performance.now(),c=t==="Streamlines"?Ce(a,Te):_e(a),p=performance.now();return tt("esri-2d-profiler")&&(z().info("I.1","_createFlowFieldFromData (ms)",Math.round(l-r)),z().info("I.2","_getStreamlines (ms)",Math.round(o-l)),z().info("I.3","createAnimatedLinesData (ms)",Math.round(h-o)),z().info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(p-h)),z().info("I.5","createFlowMesh (ms)",Math.round(p-r)),z().info("I.6","Mesh size (bytes)",c.vertexData.buffer.byteLength+c.indexData.buffer.byteLength)),await Promise.resolve(),Wt(s),c}function Pe(t,e){const n=Fe(e.data,e.width,e.height,t.smoothing);return t.interpolate?(s,r)=>{const i=Math.floor(s),l=Math.floor(r);if(i<0||i>=e.width)return[0,0];if(l<0||l>=e.height)return[0,0];const f=s-i,o=r-l,a=i,h=l,c=i<e.width-1?i+1:i,p=l<e.height-1?l+1:l,u=n[2*(h*e.width+a)],d=n[2*(h*e.width+c)],m=n[2*(p*e.width+a)],g=n[2*(p*e.width+c)],w=n[2*(h*e.width+a)+1],k=n[2*(h*e.width+c)+1];return[(u*(1-o)+m*o)*(1-f)+(d*(1-o)+g*o)*f,(w*(1-o)+n[2*(p*e.width+a)+1]*o)*(1-f)+(k*(1-o)+n[2*(p*e.width+c)+1]*o)*f]}:(s,r)=>{const i=Math.round(s),l=Math.round(r);return i<0||i>=e.width||l<0||l>=e.height?[0,0]:[n[2*(l*e.width+i)],n[2*(l*e.width+i)+1]]}}function Be(t,e,n,s,r,i,l,f,o){const a=[];let h=n,c=s,p=0,[u,d]=e(h,c);u*=t.velocityScale,d*=t.velocityScale;const m=Math.sqrt(u*u+d*d);let g,w;a.push({x:h,y:c,t:p,speed:m});for(let k=0;k<t.verticesPerLine;k++){let[M,y]=e(h,c);M*=t.velocityScale,y*=t.velocityScale;const x=Math.sqrt(M*M+y*y);if(x<t.minSpeedThreshold)return a;const b=M/x,T=y/x;if(h+=b*t.segmentLength,c+=T*t.segmentLength,p+=t.segmentLength/x,Math.acos(b*g+T*w)>t.maxTurnAngle)return a;if(t.collisions){const U=Math.round(h*o),B=Math.round(c*o);if(U<0||U>l-1||B<0||B>f-1)return a;const v=i[B*l+U];if(v!==-1&&v!==r)return a;i[B*l+U]=r}a.push({x:h,y:c,t:p,speed:x}),g=b,w=T}return a}function Se(t,e,n,s){const r=[],i=new At,l=1/Math.max(t.lineCollisionWidth,1),f=Math.round(n*l),o=Math.round(s*l),a=new Int32Array(f*o);for(let c=0;c<a.length;c++)a[c]=-1;const h=[];for(let c=0;c<s;c+=t.lineSpacing)for(let p=0;p<n;p+=t.lineSpacing)h.push({x:p,y:c,sort:i.getFloat()});h.sort((c,p)=>c.sort-p.sort);for(const{x:c,y:p}of h)if(i.getFloat()<t.density){const u=Be(t,e,c,p,r.length,a,f,o,l);if(u.length<2)continue;r.push(u)}return r}function Fe(t,e,n,s){if(s===0)return t;const r=Math.round(3*s),i=new Array(2*r+1);let l=0;for(let a=-r;a<=r;a++){const h=Math.exp(-a*a/(s*s));i[a+r]=h,l+=h}for(let a=-r;a<=r;a++)i[a+r]/=l;const f=new Float32Array(t.length);for(let a=0;a<n;a++)for(let h=0;h<e;h++){let c=0,p=0;for(let u=-r;u<=r;u++){if(h+u<0||h+u>=e)continue;const d=i[u+r];c+=d*t[2*(a*e+(h+u))],p+=d*t[2*(a*e+(h+u))+1]}f[2*(a*e+h)]=c,f[2*(a*e+h)+1]=p}const o=new Float32Array(t.length);for(let a=0;a<e;a++)for(let h=0;h<n;h++){let c=0,p=0;for(let u=-r;u<=r;u++){if(h+u<0||h+u>=n)continue;const d=i[u+r];c+=d*f[2*((h+u)*e+a)],p+=d*f[2*((h+u)*e+a)+1]}o[2*(h*e+a)]=c,o[2*(h*e+a)+1]=p}return o}function Ve(t,e){const n=new At,s=t.reduce((o,a)=>o+a.length,0),r=new Float32Array(4*s),i=new Array(t.length);let l=0,f=0;for(const o of t){const a=l;for(const h of o)r[4*l]=h.x,r[4*l+1]=h.y,r[4*l+2]=h.t,r[4*l+3]=h.speed,l++;i[f++]={startVertex:a,numberOfVertices:o.length,totalTime:o[o.length-1].t,timeSeed:n.getFloat()}}return{lineVertices:r,lineDescriptors:i}}function Ce(t,e){const{lineVertices:n,lineDescriptors:s}=t;let r=0,i=0;for(const p of s)r+=2*p.numberOfVertices,i+=6*(p.numberOfVertices-1);const l=new Float32Array(r*9),f=new Uint32Array(i);let o=0,a=0;function h(){f[a++]=o-2,f[a++]=o,f[a++]=o-1,f[a++]=o,f[a++]=o+1,f[a++]=o-1}function c(p,u,d,m,g,w,k,M){const y=o*9;let x=0;l[y+x++]=p,l[y+x++]=u,l[y+x++]=1,l[y+x++]=d,l[y+x++]=w,l[y+x++]=k,l[y+x++]=m/2,l[y+x++]=g/2,l[y+x++]=M,o++,l[y+x++]=p,l[y+x++]=u,l[y+x++]=-1,l[y+x++]=d,l[y+x++]=w,l[y+x++]=k,l[y+x++]=-m/2,l[y+x++]=-g/2,l[y+x++]=M,o++}for(const p of s){const{totalTime:u,timeSeed:d}=p;let m=null,g=null,w=null,k=null,M=null,y=null;for(let x=0;x<p.numberOfVertices;x++){const b=n[4*(p.startVertex+x)],T=n[4*(p.startVertex+x)+1],U=n[4*(p.startVertex+x)+2],B=n[4*(p.startVertex+x)+3];let v=null,P=null,A=null,I=null;if(x>0){v=b-m,P=T-g;const C=Math.sqrt(v*v+P*P);if(v/=C,P/=C,x>1){let S=v+M,F=P+y;const j=Math.sqrt(S*S+F*F);S/=j,F/=j;const _=Math.min(1/(S*v+F*P),e);S*=_,F*=_,A=-F,I=S}else A=-P,I=v;A!==null&&I!==null&&(c(m,g,w,A,I,u,d,B),h())}m=b,g=T,w=U,M=v,y=P,k=B}c(m,g,w,-y,M,u,d,k)}return{vertexData:l,indexData:f}}function _e(t){const{lineVertices:e,lineDescriptors:n}=t;let s=0,r=0;for(const A of n){const I=A.numberOfVertices-1;s+=4*I*2,r+=6*I*2}const i=new Float32Array(s*16),l=new Uint32Array(r);let f,o,a,h,c,p,u,d,m,g,w,k,M,y,x=0,b=0;function T(){l[b++]=x-8,l[b++]=x-7,l[b++]=x-6,l[b++]=x-7,l[b++]=x-5,l[b++]=x-6,l[b++]=x-4,l[b++]=x-3,l[b++]=x-2,l[b++]=x-3,l[b++]=x-1,l[b++]=x-2}function U(A,I,C,S,F,j,_,G,N,O,$,X,K,Z){const D=x*16;let L=0;for(const et of[1,2])for(const nt of[1,2,3,4])i[D+L++]=A,i[D+L++]=I,i[D+L++]=C,i[D+L++]=S,i[D+L++]=_,i[D+L++]=G,i[D+L++]=N,i[D+L++]=O,i[D+L++]=et,i[D+L++]=nt,i[D+L++]=K,i[D+L++]=Z,i[D+L++]=F/2,i[D+L++]=j/2,i[D+L++]=$/2,i[D+L++]=X/2,x++}function B(A,I){let C=m+w,S=g+k;const F=Math.sqrt(C*C+S*S);C/=F,S/=F;const j=m*C+g*S;C/=j,S/=j;let _=w+M,G=k+y;const N=Math.sqrt(_*_+G*G);_/=N,G/=N;const O=w*_+k*G;_/=O,G/=O,U(f,o,a,h,-S,C,c,p,u,d,-G,_,A,I),T()}function v(A,I,C,S,F,j){if(m=w,g=k,w=M,k=y,m==null&&g==null&&(m=w,g=k),c!=null&&p!=null){M=A-c,y=I-p;const _=Math.sqrt(M*M+y*y);M/=_,y/=_}m!=null&&g!=null&&B(F,j),f=c,o=p,a=u,h=d,c=A,p=I,u=C,d=S}function P(A,I){m=w,g=k,w=M,k=y,m==null&&g==null&&(m=w,g=k),m!=null&&g!=null&&B(A,I)}for(const A of n){f=null,o=null,a=null,h=null,c=null,p=null,u=null,d=null,m=null,g=null,w=null,k=null,M=null,y=null;const{totalTime:I,timeSeed:C}=A;for(let S=0;S<A.numberOfVertices;S++)v(e[4*(A.startVertex+S)],e[4*(A.startVertex+S)+1],e[4*(A.startVertex+S)+2],e[4*(A.startVertex+S)+3],I,C);P(I,C)}return{vertexData:i,indexData:l}}function Ct(t,e){const n=e.pixels,{width:s,height:r}=e,i=new Float32Array(s*r*2),l=e.mask||new Uint8Array(s*r*2);if(e.mask||l.fill(255),t==="vector-uv")for(let f=0;f<s*r;f++)i[2*f]=n[0][f],i[2*f+1]=-n[1][f];else if(t==="vector-magdir")for(let f=0;f<s*r;f++){const o=n[0][f],a=Xt(n[1][f]),h=Math.cos(a-Math.PI/2),c=Math.sin(a-Math.PI/2);i[2*f]=h*o,i[2*f+1]=c*o}return{data:i,mask:l,width:s,height:r}}async function De(t,e,n,s,r,i){const l=performance.now(),f=Ot(e.spatialReference);if(!f){const y=await _t(t,e,n,s,r,i);return tt("esri-2d-profiler")&&z().info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-l)),tt("esri-2d-profiler")&&z().info("I.9","Number of parts",1),y}const[o,a]=f.valid,h=a-o,c=Math.ceil(e.width/h),p=e.width/c,u=Math.round(n/c);let d=e.xmin;const m=[],g=performance.now();for(let y=0;y<c;y++){const x=new zt({xmin:d,xmax:d+p,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});m.push(_t(t,x,u,s,r,i)),d+=p}const w=await Promise.all(m);tt("esri-2d-profiler")&&z().info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-g)),tt("esri-2d-profiler")&&z().info("I.9","Number of parts",w.length);const k={data:new Float32Array(n*s*2),mask:new Uint8Array(n*s),width:n,height:s};let M=0;for(const y of w){for(let x=0;x<y.height;x++)for(let b=0;b<y.width;b++)M+b>=n||(k.data[2*(x*n+M+b)]=y.data[2*(x*y.width+b)],k.data[2*(x*n+M+b)+1]=y.data[2*(x*y.width+b)+1],k.mask[x*n+M+b]=y.mask[x*y.width+b]);M+=y.width}return tt("esri-2d-profiler")&&z().info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-l)),k}async function _t(t,e,n,s,r,i){const l={requestProjectedLocalDirections:!0,signal:i};if(r!=null&&(l.timeExtent=r),t.type==="imagery"){await t.load({signal:i});const o=await t.internalFetchImage(e,n,s,l);return o?.pixelData?.pixelBlock==null?{data:new Float32Array(n*s*2),mask:new Uint8Array(n*s),width:n,height:s}:Ct(t.rasterInfo.dataType,o.pixelData.pixelBlock)}await t.load({signal:i});const f=await t.fetchPixels(e,n,s,l);return f?.pixelBlock==null?{data:new Float32Array(n*s*2),mask:new Uint8Array(n*s),width:n,height:s}:Ct(t.serviceRasterInfo.dataType,f.pixelBlock)}export{Zt as A,oe as B,ue as D,he as I,ie as M,ce as R,Ue as S,Tt as T,se as U,mt as W,Vt as _,ve as a,lt as b,V as c,rt as d,ht as e,yt as f,De as g,Ht as h,Qt as i,fe as j,Yt as k,wt as l,ge as m,Kt as n,Jt as o,me as p,ft as q,R as r,Ie as s,ct as t,de as u,ut as v,ee as w,ne as x,pt as y,te as z};
