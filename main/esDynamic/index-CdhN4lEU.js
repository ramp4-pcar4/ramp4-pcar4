import{l as k,c as O,g as C}from"./jsxFactory-EHFHGYYs.js";import{ci as j,cj as D,ch as I,cm as p,cn as f,cg as U}from"./main-CnDVnExo.js";import{g as A,t as P}from"./dom-CfeWJMXO.js";import{c as R}from"./observers-Cn5B0DTD.js";const b=new Set,m={trace:0,debug:1,info:2,warn:4,error:8,off:10};function L(t){return m[t]>=m[k]}function c(t,...e){L(t)&&console[t].call(this,"%ccalcite","background: #007AC2; color: #fff; border-radius: 4px; padding: 2px 4px;",...e)}let d;const g={debug:t=>c("debug",t),info:t=>c("info",t),warn:t=>c("warn",t),error:t=>c("error",t),trace:t=>c("trace",t),deprecated:B};function B(t,{component:e,name:n,suggested:i,removalVersion:s}){const a=`${t}:${t==="component"?"":e}${n}`;if(b.has(a))return;b.add(a);const o=Array.isArray(i);o&&!d&&(d=new Intl.ListFormat("en",{style:"long",type:"disjunction"}));const r=`[${n}] ${t} is deprecated and will be removed in ${s==="future"?"a future version":`v${s}`}.${i?` Use ${o?d.format(i.map(l=>`"${l}"`)):`"${i}"`} instead.`:""}`;c("warn",r)}const F={flipRtl:"flip-rtl"},v={},u={},$={s:16,m:24,l:32};function x({icon:t,scale:e}){const n=$[e],i=_(t),s=i.charAt(i.length-1)==="F";return`${s?i.substring(0,i.length-1):i}${n}${s?"F":""}`}async function N(t){const e=x(t),n=y(e);if(n)return n;u[e]||(u[e]=fetch(C(`./assets/icon/${e}.json`)).then(s=>s.json()).catch(()=>(g.error(`${t.icon} (${t.scale}) icon failed to load`),"")));const i=await u[e];return v[e]=i,i}function S(t){return y(x(t))}function y(t){return v[t]}function _(t){const e=!isNaN(Number(t.charAt(0))),n=t.split("-");if(n.length>0){const i=/[a-z]/i;t=n.map((s,a)=>s.replace(i,function(o,r){return a===0&&r===0?o:o.toUpperCase()})).join("")}return e?`i${t}`:t}const V=j`:host{display:inline-flex;color:var(--calcite-icon-color, var(--calcite-ui-icon-color, currentColor))}:host([scale=s]){inline-size:16px;block-size:16px;min-inline-size:16px;min-block-size:16px}:host([scale=m]){inline-size:24px;block-size:24px;min-inline-size:24px;min-block-size:24px}:host([scale=l]){inline-size:32px;block-size:32px;min-inline-size:32px;min-block-size:32px}.flip-rtl{transform:scaleX(-1)}.svg{display:block}:host([hidden]){display:none}[hidden]{display:none}`;class w extends D{constructor(){super(...arguments),this.visible=!1,this.flipRtl=!1,this.icon=null,this.preload=!1,this.scale="m"}static{this.properties={pathData:[16,{},{state:!0}],visible:[16,{},{state:!0}],flipRtl:[7,{},{reflect:!0,type:Boolean}],icon:[3,{},{reflect:!0}],preload:[7,{},{reflect:!0,type:Boolean}],scale:[3,{},{reflect:!0}],textLabel:1}}static{this.styles=V}connectedCallback(){if(super.connectedCallback(),this.preload){this.visible=!0,this.loadIconPathData();return}this.visible||this.waitUntilVisible(()=>{this.visible=!0,this.loadIconPathData()})}willUpdate(e){(e.has("icon")&&(this.hasUpdated||this.icon!==null)||e.has("scale")&&(this.hasUpdated||this.scale!=="m"))&&this.loadIconPathData()}disconnectedCallback(){super.disconnectedCallback(),this.intersectionObserver?.disconnect(),this.intersectionObserver=null}async loadIconPathData(){const{icon:e,scale:n,visible:i}=this;if(!e||!i)return;const s={icon:e,scale:n},a=S(s)||await N(s);e===this.icon&&(this.pathData=a)}waitUntilVisible(e){if(this.intersectionObserver=R("intersection",n=>{n.forEach(i=>{i.isIntersecting&&(this.intersectionObserver.disconnect(),this.intersectionObserver=null,e())})},{rootMargin:"50px"}),!this.intersectionObserver){e();return}this.intersectionObserver.observe(this.el)}render(){const{el:e,flipRtl:n,pathData:i,scale:s,textLabel:a}=this,o=A(e),r=$[s],l=!!a,z=[].concat(i||"");return this.el.ariaHidden=P(!l),this.el.ariaLabel=l?a:null,this.el.role=l?"img":null,U`<svg aria-hidden=true class=${I({[F.flipRtl]:o==="rtl"&&n,svg:!0})} fill=currentColor height=100% viewBox=${`0 0 ${r} ${r}`} width=100% xmlns=http://www.w3.org/2000/svg>${z.map(h=>typeof h=="string"?f`<path d=${h??p} />`:f`<path d=${h.d??p} opacity=${("opacity"in h?h.opacity:1)??p} />`)}</svg>`}}O("calcite-icon",w);const E=Object.freeze(Object.defineProperty({__proto__:null,Icon:w},Symbol.toStringTag,{value:"Module"}));export{E as i,g as l};
