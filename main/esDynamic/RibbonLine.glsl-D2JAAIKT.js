import{ah as O,fA as et,da as tt,cG as Pi,f_ as Li,cQ as Mi,G as Ct,N as Ii,n as Fi,fJ as ji,j8 as je,mf as ce,i as it,v as l,x as m,z as Ni,af as rt,bs as zi,O as Ui}from"./main-CnDVnExo.js";import{c as Ne,n as ve,H as Vi,h as st,s as Wi,A as Bi,C as ki,X as Hi}from"./mat4-i0cPq9AY.js";import{e as Z,r as Gi}from"./mat4f64-xsZDPPj0.js";import{r as Pt,E as Ji}from"./vec2-BnynUbeJ.js";import{r as $i}from"./vec2f64-CkowXrDb.js";import{I as Yi,E as Q,p as ze,o as V,u as Ue,H as xe,s as q,c as ne,R as Lt,P as Ve,Z as Mt,X as Zi,g as me,r as nt,_ as It,A as Ft,K as qi}from"./vec32-wzgHRfsM.js";import{m as jt,L as Nt,E as at,a as We,x as zt,z as Be,s as Xi}from"./vec42-D8CJyqHG.js";import{r as ot,n as Oe,a as Qi,s as Ki}from"./vec4f64-DD-nkcCV.js";import{b as er,H as tr,N as ir,L as rr,j as ke}from"./Octree-BpjVoDS8.js";import{U as Ut,E as sr,b as nr}from"./sphere-CJmmCgGH.js";import{a as ar}from"./vectorStacks-Du5l6qOg.js";import{l as or}from"./ViewingMode-CdRKcXnc.js";import{o as lt}from"./projectionUtils-B4YRVrjd.js";import{t as lr}from"./orientedBoundingBox-CV_E_cTb.js";import{b2 as cr,b3 as hr,b4 as pr,as as Vt,O as Wt,at as Bt,au as T,c as ie,ag as Ee,b5 as kt,H as dr,d as ur,e as ct,w as ht,I as fr,ad as pt,a2 as vr,M as mr,ae as gr,f as _r,aE as yr,Z as Tr,o as Sr,J as wr,af as xr,a9 as Or,D as be,V as Er,W as br,aH as Ht,b6 as Rr,ap as Gt,aq as Dr,ar as Jt,ak as He,am as Ar,an as Cr,ao as Pr,al as Lr,b7 as Mr,b8 as $t,b9 as Ir,ba as Fr,bb as Yt,aw as K,av as jr,ai as ge,aC as Zt,aN as Nr,aO as zr,bc as qt,p as Ur,b as Vr}from"./OutputColorHighlightOID.glsl-CHXQczIE.js";import{m as Wr,p as Ge,M as Je,V as ee,O as Xt}from"./plane-C0adzhgY.js";import{t as Br}from"./basicInterfaces-Dsf65ICa.js";import{s as kr,n as Hr,t as Gr}from"./BufferView-DWXocpS0.js";import{E as Jr,e as p}from"./VertexAttribute-hUz6pozM.js";import{M as $r,h as dt,v as Qt,B as Yr}from"./lineSegment-Bgh7Pui4.js";import{O as Zr}from"./InterleavedLayout-BKk1mCyx.js";import{n as Kt,u as Re,i as qr,S as Xr,s as ei,e as Qr}from"./ShaderOutput-CUn9tpiG.js";import{R as ti}from"./enums-wEDHPbCF.js";import{B as $e,g as ut,c as ii}from"./renderState-BM-MCKUz.js";import{m as Kr}from"./computeTranslationToOriginAndRotation-9s0_SIdK.js";import{b as es,t as ri}from"./dehydratedFeatureUtils-Cjgc7BuU.js";import{n as ts,e as is}from"./ElevationInfo-CUSBHOB_.js";import{u as rs}from"./hydratedFeatures-Dnt52XAZ.js";import{n as h,t as ss}from"./glsl-Z5uYj8ka.js";import"./BindType-CKbZk6AG.js";import"./floatRGBA-6lp0-wI1.js";import"./Texture-BMXmG4Zf.js";import{i as ns}from"./ShaderBuilder-D7ZTGT0a.js";var ft,vt,mt;(function(e){e[e.RasterImage=0]="RasterImage",e[e.Features=1]="Features"})(ft||(ft={})),function(e){e[e.MapLayer=0]="MapLayer",e[e.ViewLayer=1]="ViewLayer",e[e.Outline=2]="Outline",e[e.SnappingHint=3]="SnappingHint"}(vt||(vt={})),function(e){e[e.WithRasterImage=0]="WithRasterImage",e[e.WithoutRasterImage=1]="WithoutRasterImage"}(mt||(mt={}));var De;(function(e){e[e.ASYNC=0]="ASYNC",e[e.SYNC=1]="SYNC"})(De||(De={}));function as(e,t){return e==null&&(e=[]),e.push(t),e}function os(e,t){if(e==null)return null;const i=e.filter(r=>r!==t);return i.length===0?null:i}function ls(e,t,i,r,s){Ye[0]=e.get(t,0),Ye[1]=e.get(t,1),Ye[2]=e.get(t,2),cr(Ye,he,3),i.set(s,0,he[0]),r.set(s,0,he[1]),i.set(s,1,he[2]),r.set(s,1,he[3]),i.set(s,2,he[4]),r.set(s,2,he[5])}const Ye=O(),he=new Float32Array(6);let si=class{constructor(e={}){this.id=et(),this._highlightIds=new Set,this._shaderTransformation=null,this._visible=!0,this.castShadow=e.castShadow??!0,this.usesVerticalDistanceToGround=e.usesVerticalDistanceToGround??!1,this.graphicUid=e.graphicUid,this.layerViewUid=e.layerViewUid,e.isElevationSource&&(this.lastValidElevationBB=new ni),this._geometries=e.geometries?Array.from(e.geometries):new Array}dispose(){this._geometries.length=0}get layer(){return this._layer}set layer(e){kr(this._layer==null||e==null,"Object3D can only be added to a single Layer"),this._layer=e}addGeometry(e){e.visible=this._visible,this._geometries.push(e);for(const t of this._highlightIds)e.addHighlight(t);this._emit("geometryAdded",{object:this,geometry:e}),this._highlightIds.size&&this._emit("highlightChanged",this),this._invalidateBoundingVolume()}removeGeometry(e){const t=this._geometries.splice(e,1)[0];if(t){for(const i of this._highlightIds)t.removeHighlight(i);this._emit("geometryRemoved",{object:this,geometry:t}),this._highlightIds.size&&this._emit("highlightChanged",this),this._invalidateBoundingVolume()}}removeAllGeometries(){for(;this._geometries.length>0;)this.removeGeometry(0)}geometryVertexAttributeUpdated(e,t,i=!1){this._emit("attributesChanged",{object:this,geometry:e,attribute:t,sync:i}),Jr(t)&&this._invalidateBoundingVolume()}get visible(){return this._visible}set visible(e){if(this._visible!==e){this._visible=e;for(const t of this._geometries)t.visible=this._visible;this._emit("visibilityChanged",this)}}maskOccludee(){const e=new hr;for(const t of this._geometries)t.occludees=as(t.occludees,e);return this._emit("occlusionChanged",this),e}removeOcclude(e){for(const t of this._geometries)t.occludees=os(t.occludees,e);this._emit("occlusionChanged",this)}highlight(e){const t=new pr(e);for(const i of this._geometries)i.addHighlight(t);return this._emit("highlightChanged",this),this._highlightIds.add(t),t}removeHighlight(e){this._highlightIds.delete(e);for(const t of this._geometries)t.removeHighlight(e);this._emit("highlightChanged",this)}removeStateID(e){e.channel===Br.Highlight?this.removeHighlight(e):this.removeOcclude(e)}getCombinedStaticTransformation(e,t){return Ne(t,this.transformation,e.transformation)}getCombinedShaderTransformation(e,t=Z()){return Ne(t,this.effectiveTransformation,e.transformation)}get boundingVolumeWorldSpace(){return this._bvWorldSpace||(this._bvWorldSpace=this._bvWorldSpace||new ai,this._validateBoundingVolume(this._bvWorldSpace,Ae.WorldSpace)),this._bvWorldSpace}get boundingVolumeObjectSpace(){return this._bvObjectSpace||(this._bvObjectSpace=this._bvObjectSpace||new ai,this._validateBoundingVolume(this._bvObjectSpace,Ae.ObjectSpace)),this._bvObjectSpace}_validateBoundingVolume(e,t){const i=t===Ae.ObjectSpace;for(const r of this._geometries){const s=r.boundingInfo;s&&cs(s,e,i?r.transformation:this.getCombinedShaderTransformation(r))}Yi(Ut(e.bounds),e.min,e.max,.5);for(const r of this._geometries){const s=r.boundingInfo;if(s==null)continue;const n=i?r.transformation:this.getCombinedShaderTransformation(r),a=Wr(n);Q(oi,s.center,n);const o=ze(oi,Ut(e.bounds)),c=s.radius*a;e.bounds[3]=Math.max(e.bounds[3],o+c)}}_invalidateBoundingVolume(){const e=this._bvWorldSpace?.bounds;this._bvObjectSpace=this._bvWorldSpace=void 0,this.layer&&e&&this.layer.notifyObjectBBChanged(this,e)}_emit(e,t){this.layer?.events.emit(e,t)}get geometries(){return this._geometries}get transformation(){return this._transformation??Gi}set transformation(e){this._transformation=ve(this._transformation??Z(),e),this._invalidateBoundingVolume(),this._emit("transformationChanged",this)}get shaderTransformation(){return this._shaderTransformation}set shaderTransformation(e){this._shaderTransformation=e?ve(this._shaderTransformation??Z(),e):null,this._invalidateBoundingVolume(),this._emit("shaderTransformationChanged",this)}get effectiveTransformation(){return this.shaderTransformation??this.transformation}get test(){}};class ni{constructor(){this.min=tt(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this.max=tt(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE)}isEmpty(){return this.max[0]<this.min[0]&&this.max[1]<this.min[1]&&this.max[2]<this.min[2]}}let ai=class extends ni{constructor(){super(...arguments),this.bounds=sr()}};function cs(e,t,i){const r=e.bbMin,s=e.bbMax;if(Vi(i)){const n=V(hs,i[12],i[13],i[14]);Ue($,r,n),Ue(X,s,n);for(let a=0;a<3;++a)t.min[a]=Math.min(t.min[a],$[a]),t.max[a]=Math.max(t.max[a],X[a])}else if(Q($,r,i),xe(r,s))for(let n=0;n<3;++n)t.min[n]=Math.min(t.min[n],$[n]),t.max[n]=Math.max(t.max[n],$[n]);else{Q(X,s,i);for(let n=0;n<3;++n)t.min[n]=Math.min(t.min[n],$[n],X[n]),t.max[n]=Math.max(t.max[n],$[n],X[n]);for(let n=0;n<3;++n){q($,r),q(X,s),$[n]=s[n],X[n]=r[n],Q($,$,i),Q(X,X,i);for(let a=0;a<3;++a)t.min[a]=Math.min(t.min[a],$[a],X[a]),t.max[a]=Math.max(t.max[a],$[a],X[a])}}}const hs=O(),$=O(),X=O(),oi=O();var Ae;(function(e){e[e.WorldSpace=0]="WorldSpace",e[e.ObjectSpace=1]="ObjectSpace"})(Ae||(Ae={}));const ps=["layerObjectAdded","layerObjectRemoved","layerObjectsAdded","layerObjectsRemoved","transformationChanged","shaderTransformationChanged","visibilityChanged","occlusionChanged","highlightChanged","geometryAdded","geometryRemoved","attributesChanged"];let li=class{constructor(e,t,i=""){this.stage=e,this.apiLayerViewUid=i,this.id=et(),this.events=new Pi,this.visible=!0,this.sliceable=!1,this._objectsAdded=new Array,this._handles=new Li,this._objects=new Map,this._pickable=!0,this.visible=t?.visible??!0,this._pickable=t?.pickable??!0,this.updatePolicy=t?.updatePolicy??De.ASYNC,e.addLayer(this);for(const r of ps)this._handles.add(this.events.on(r,s=>e.handleEvent(r,s)))}destroy(){this._handles.size&&(this._handles.destroy(),this.stage.removeLayer(this),this.invalidateSpatialQueryAccelerator())}get objects(){return this._objects}getObject(e){return Mi(this._objects.get(e))}set pickable(e){this._pickable=e}get pickable(){return this._pickable&&this.visible}add(e){this._objects.set(e.id,e),e.layer=this,this.events.emit("layerObjectAdded",e),this._octree!=null&&this._objectsAdded.push(e)}remove(e){this._objects.delete(e.id)&&(this.events.emit("layerObjectRemoved",e),e.layer=null,this._octree!=null&&(Ct(this._objectsAdded,e)||this._octree.remove([e])))}addMany(e){for(const t of e)this._objects.set(t.id,t),t.layer=this;this.events.emit("layerObjectsAdded",e),this._octree!=null&&this._objectsAdded.push(...e)}removeMany(e){const t=new Array;for(const i of e)this._objects.delete(i.id)&&t.push(i);if(t.length!==0&&(this.events.emit("layerObjectsRemoved",t),t.forEach(i=>i.layer=null),this._octree!=null)){for(let i=0;i<t.length;)Ct(this._objectsAdded,t[i])?(t[i]=t[t.length-1],t.length-=1):++i;this._octree.remove(t)}}sync(){this.updatePolicy!==De.SYNC&&this.stage.syncLayer(this.id)}notifyObjectBBChanged(e,t){this._octree==null||this._objectsAdded.includes(e)||this._octree.update(e,t)}getSpatialQueryAccelerator(){return this._octree==null&&this._objects.size>50?(this._octree=new er(e=>e.boundingVolumeWorldSpace.bounds),this._octree.add(this._objects.values())):this._octree!=null&&this._objectsAdded.length>0&&(this._octree.add(this._objectsAdded),this._objectsAdded.length=0),this._octree}invalidateSpatialQueryAccelerator(){this._octree=Ii(this._octree),this._objectsAdded.length=0}get test(){}},ds=class{constructor(e,t){this.vec3=e,this.id=t}};function gt(e,t,i,r){return new ds(tt(e,t,i),r)}function us(e,t,i){return 2*Math.atan(Math.sqrt(t*t+i*i)*Math.tan(.5*e)/t)}function fs(e,t,i){return 2*Math.atan(Math.sqrt(t*t+i*i)*Math.tan(.5*e)/i)}function vs(e,t,i){return 2*Math.atan(t*Math.tan(.5*e)/Math.sqrt(t*t+i*i))}function ms(e,t,i){return 2*Math.atan(i*Math.tan(.5*e)/Math.sqrt(t*t+i*i))}var ci,S;(function(e){e[e.Default=0]="Default",e[e.Screenshot=1]="Screenshot",e[e.ObjectAndLayerID=2]="ObjectAndLayerID"})(ci||(ci={})),function(e){e[e.TOP=0]="TOP",e[e.RIGHT=1]="RIGHT",e[e.BOTTOM=2]="BOTTOM",e[e.LEFT=3]="LEFT"}(S||(S={}));var _t;let v=_t=class extends Fi{constructor(e){super(e),this._ray=nr(),this._viewport=ot(0,0,1,1),this._padding=ot(0,0,0,0),this._fov=55/180*Math.PI,this._nearFar=$i(1,1e3),this._viewDirty=!0,this._viewMatrix=Z(),this._viewProjectionDirty=!0,this._viewProjectionMatrix=Z(),this._viewInverseTransposeMatrixDirty=!0,this._viewInverseTransposeMatrix=Z(),this._frustumDirty=!0,this._frustum=tr(),this._fullViewport=Oe(),this._pixelRatio=1,this.row=0,this.column=0,this._rows=1,this._columns=1,this._center=O(),this._up=O(),this.relativeElevation=0}get pixelRatio(){return this._pixelRatio}set pixelRatio(e){this._pixelRatio=e>0?e:1}get rows(){return this._rows}set rows(e){this._rows=Math.max(1,e)}get columns(){return this._columns}set columns(e){this._columns=Math.max(1,e)}get eye(){return this._ray.origin}set eye(e){this._compareAndSetView(e,this._ray.origin)}get center(){return this._center}set center(e){this._compareAndSetView(e,this._center,"_center")}get ray(){return ne(this._ray.direction,this.center,this.eye),this._ray}get up(){return this._up}set up(e){this._compareAndSetView(e,this._up,"_up")}get viewMatrix(){return this._ensureViewClean(),this._viewMatrix}set viewMatrix(e){ve(this._viewMatrix,e),this.notifyChange("_viewMatrix"),this._viewDirty=!1,this._viewInverseTransposeMatrixDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0}get viewForward(){return this._ensureViewClean(),V(O(),-this._viewMatrix[2],-this._viewMatrix[6],-this._viewMatrix[10])}get viewUp(){return this._ensureViewClean(),V(O(),this._viewMatrix[1],this._viewMatrix[5],this._viewMatrix[9])}get viewRight(){return this._ensureViewClean(),V(O(),this._viewMatrix[0],this._viewMatrix[4],this._viewMatrix[8])}get nearFar(){return this._nearFar}get near(){return this._nearFar[0]}set near(e){this._nearFar[0]!==e&&(this._nearFar[0]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_nearFar"))}get far(){return this._nearFar[1]}set far(e){this._nearFar[1]!==e&&(this._nearFar[1]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_nearFar"))}get viewport(){return this._viewport}set viewport(e){this.x=e[0],this.y=e[1],this.width=e[2],this.height=e[3]}get screenViewport(){if(this.pixelRatio===1)return this._viewport;const e=jt(Oe(),this._viewport,1/this.pixelRatio),t=this._get("screenViewport");return t&&Nt(e,t)?t:e}get screenPadding(){if(this.pixelRatio===1)return this._padding;const e=jt(Oe(),this._padding,1/this.pixelRatio),t=this._get("screenPadding");return t&&Nt(e,t)?t:e}get x(){return this._viewport[0]}set x(e){e+=this._padding[S.LEFT],this._viewport[0]!==e&&(this._viewport[0]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get y(){return this._viewport[1]}set y(e){e+=this._padding[S.BOTTOM],this._viewport[1]!==e&&(this._viewport[1]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get width(){return this._viewport[2]}set width(e){this._viewport[2]!==e&&(this._viewport[2]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get height(){return this._viewport[3]}set height(e){this._viewport[3]!==e&&(this._viewport[3]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get fullWidth(){return this._viewport[2]+this._padding[S.RIGHT]+this._padding[S.LEFT]}set fullWidth(e){this.width=e-(this._padding[S.RIGHT]+this._padding[S.LEFT])}get fullHeight(){return this._viewport[3]+this._padding[S.TOP]+this._padding[S.BOTTOM]}set fullHeight(e){this.height=e-(this._padding[S.TOP]+this._padding[S.BOTTOM])}get fullViewport(){return this._fullViewport[0]=this._viewport[0]-this._padding[S.LEFT],this._fullViewport[1]=this._viewport[1]-this._padding[S.BOTTOM],this._fullViewport[2]=this.fullWidth,this._fullViewport[3]=this.fullHeight,this._fullViewport}get _aspect(){return this.width/this.height}get padding(){return this._padding}set padding(e){at(this._padding,e)||(this._viewport[0]+=e[S.LEFT]-this._padding[S.LEFT],this._viewport[1]+=e[S.BOTTOM]-this._padding[S.BOTTOM],this._viewport[2]-=e[S.RIGHT]+e[S.LEFT]-(this._padding[S.RIGHT]+this._padding[S.LEFT]),this._viewport[3]-=e[S.TOP]+e[S.BOTTOM]-(this._padding[S.TOP]+this._padding[S.BOTTOM]),We(this._padding,e),this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_padding"),this.notifyChange("_viewport"))}get viewProjectionMatrix(){return this._viewProjectionDirty&&(Ne(this._viewProjectionMatrix,this.projectionMatrix,this.viewMatrix),this._viewProjectionDirty=!1),this._viewProjectionMatrix}get projectionMatrix(){return this._projectionMatrixInternal}get inverseProjectionMatrix(){return st(Z(),this.projectionMatrix)||this._get("inverseProjectionMatrix")||Z()}get fov(){return this._fov}set fov(e){this._fov=e,this._viewProjectionDirty=!0,this._frustumDirty=!0}get fovX(){return vs(this._fov,this.width,this.height)}set fovX(e){this._fov=us(e,this.width,this.height),this._viewProjectionDirty=!0,this._frustumDirty=!0}get fovY(){return ms(this._fov,this.width,this.height)}set fovY(e){this._fov=fs(e,this.width,this.height),this._viewProjectionDirty=!0,this._frustumDirty=!0}get distance(){return ze(this.center,this.eye)}get frustum(){return this._recomputeFrustum(),this._frustum}get viewInverseTransposeMatrix(){return(this._viewInverseTransposeMatrixDirty||this._viewDirty)&&(st(this._viewInverseTransposeMatrix,this.viewMatrix),Wi(this._viewInverseTransposeMatrix,this._viewInverseTransposeMatrix),this._viewInverseTransposeMatrixDirty=!1),this._viewInverseTransposeMatrix}depthNDCToWorld(e){const{near:t,far:i}=this;return 2*t*i/(i+t-e*(i-t))}get perRenderPixelRatio(){return Math.tan(this.fovX/2)/(this.width/2)}get perScreenPixelRatio(){return this.perRenderPixelRatio*this.pixelRatio}get aboveGround(){return this.relativeElevation!=null&&this.relativeElevation>=0}get _projectionMatrixInternal(){const e=this.width,t=this.height,i=this.near*Math.tan(this.fovY/2)*2,r=i*this._aspect,s=i/this.rows,n=r/this.columns,a=-r/2+this.column*n,o=a+n,c=-i/2+this.row*s,f=c+s,_=Bi(Z(),a*(1+2*this._padding[S.LEFT]/e),o*(1+2*this._padding[S.RIGHT]/e),c*(1+2*this._padding[S.BOTTOM]/t),f*(1+2*this._padding[S.TOP]/t),this.near,this.far),w=this._get("projectionMatrix");return w&&ki(w,_)?w:_}copyFrom(e){q(this._ray.origin,e.eye),this.center=e.center,this.up=e.up,We(this._viewport,e.viewport),this.notifyChange("_viewport"),We(this._padding,e.padding),this.notifyChange("_padding"),Pt(this._nearFar,e.nearFar),this.notifyChange("_nearFar"),this._fov=e.fov,this.row=e.row,this.column=e.column,this.rows=e.rows,this.columns=e.columns,this.relativeElevation=e.relativeElevation;const t=e;return this._viewDirty=t._viewDirty,this._viewDirty||(ve(this._viewMatrix,e.viewMatrix),this.notifyChange("_viewMatrix")),this._viewProjectionDirty=!0,this._frustumDirty=t._frustumDirty,this._frustumDirty||(ir(this._frustum,e.frustum),this._frustumDirty=!1),t._viewInverseTransposeMatrixDirty?this._viewInverseTransposeMatrixDirty=!0:(ve(this._viewInverseTransposeMatrix,e.viewInverseTransposeMatrix),this._viewInverseTransposeMatrixDirty=!1),We(this._fullViewport,e.fullViewport),this.pixelRatio=e.pixelRatio,this}copyViewFrom(e){this.eye=e.eye,this.center=e.center,this.up=e.up,this.fov=e.fov}clone(){return new _t().copyFrom(this)}equals(e){return xe(this.eye,e.eye)&&xe(this.center,e.center)&&xe(this.up,e.up)&&at(this._viewport,e.viewport)&&at(this._padding,e.padding)&&Ji(this.nearFar,e.nearFar)&&this._fov===e.fov&&this.pixelRatio===e.pixelRatio&&this.relativeElevation===e.relativeElevation&&this.row===e.row&&this.column===e.column&&this.rows===e.rows&&this.columns===e.columns}almostEquals(e){const t=Math.max(1,1/this.pixelRatio,1/e.pixelRatio);if(Math.abs(e.fov-this._fov)>=.001||zt(e.screenPadding,this.screenPadding)>=t||zt(this.screenViewport,e.screenViewport)>=t||this.row!==e.row||this.column!==e.column||this.rows!==e.rows||this.columns!==e.columns)return!1;Lt(N,e.eye,e.center),Lt(yt,this.eye,this.center);const i=Ve(N,yt),r=Mt(N),s=Mt(yt),n=5e-4;return i*i>=(1-1e-10)*r*s&&Zi(e.eye,this.eye)<Math.max(r,s)*n*n}computeRenderPixelSizeAt(e){return this.computeRenderPixelSizeAtDist(this._viewDirectionDistance(e))}computeRenderPixelSizeAtDist(e){return e*this.perRenderPixelRatio}computeScreenPixelSizeAt(e){return this.computeScreenPixelSizeAtDist(this._viewDirectionDistance(e))}_viewDirectionDistance(e){return Math.abs(ar(this.viewForward,ne(N,e,this.eye)))}computeScreenPixelSizeAtDist(e){return e*this.perScreenPixelRatio}computeDistanceFromRadius(e,t){return e/Math.tan(Math.min(this.fovX,this.fovY)/(2*(t||1)))}getScreenCenter(e=ji()){return e[0]=(this.padding[S.LEFT]+this.width/2)/this.pixelRatio,e[1]=(this.padding[S.TOP]+this.height/2)/this.pixelRatio,e}getRenderCenter(e,t=.5,i=.5){return e[0]=this.padding[S.LEFT]+this.width*t,e[1]=this.padding[S.BOTTOM]+this.height*i,e[2]=.5,e}setGLViewport(e){const t=this.viewport,i=this.padding;e.setViewport(t[0]-i[3],t[1]-i[2],t[2]+i[1]+i[3],t[3]+i[0]+i[2])}applyProjection(e,t){e!==g&&q(g,e),g[3]=1,Be(g,g,this.projectionMatrix);const i=Math.abs(g[3]);me(g,g,1/i);const r=this.fullViewport;t[0]=je(0,r[0]+r[2],.5+.5*g[0]),t[1]=je(0,r[1]+r[3],.5+.5*g[1]),t[2]=.5*(g[2]+1),t[3]=i}unapplyProjection(e,t){const i=this.fullViewport;g[0]=(e[0]/(i[0]+i[2])*2-1)*e[3],g[1]=(e[1]/(i[1]+i[3])*2-1)*e[3],g[2]=(2*e[2]-1)*e[3],g[3]=e[3],this.inverseProjectionMatrix!=null&&(Be(g,g,this.inverseProjectionMatrix),t[0]=g[0],t[1]=g[1],t[2]=g[2])}projectToScreen(e,t){return this.projectToRenderScreen(e,Tt),this.renderToScreen(Tt,t),t}projectToRenderScreen(e,t){if(g[0]=e[0],g[1]=e[1],g[2]=e[2],g[3]=1,Be(g,g,this.viewProjectionMatrix),g[3]===0)return null;const i=g;me(i,i,1/Math.abs(g[3]));const r=this.fullViewport,s=je(0,r[0]+r[2],.5+.5*i[0]),n=je(0,r[1]+r[3],.5+.5*i[1]);return"x"in t?(t.x=s,t.y=n):(t[0]=s,t[1]=n,t.length>2&&(t[2]=.5*(i[2]+1))),t}unprojectFromScreen(e,t){return this.unprojectFromRenderScreen(this.screenToRender(e,Tt),t)}unprojectFromRenderScreen(e,t){if(Ne(Ze,this.projectionMatrix,this.viewMatrix),!st(Ze,Ze))return null;const i=this.fullViewport;return g[0]=2*(e[0]-i[0])/i[2]-1,g[1]=2*(e[1]-i[1])/i[3]-1,g[2]=2*e[2]-1,g[3]=1,Be(g,g,Ze),g[3]===0?null:(t[0]=g[0]/g[3],t[1]=g[1]/g[3],t[2]=g[2]/g[3],t)}constrainWindowSize(e,t,i,r){const s=e*this.pixelRatio,n=t*this.pixelRatio,a=Math.max(s-i/2,0),o=Math.max(this.fullHeight-n-r/2,0),c=-Math.min(s-i/2,0),f=-Math.min(this.fullHeight-n-r/2,0),_=i-c- -Math.min(this.fullWidth-s-i/2,0),w=r-f- -Math.min(n-r/2,0);return[Math.round(a),Math.round(o),Math.round(_),Math.round(w)]}computeUp(e){e===or.Global?this._computeUpGlobal():this._computeUpLocal()}screenToRender(e,t){const i=e[0]*this.pixelRatio,r=this.fullHeight-e[1]*this.pixelRatio;return t[0]=i,t[1]=r,t}renderToScreen(e,t){const i=e[0]/this.pixelRatio,r=(this.fullHeight-e[1])/this.pixelRatio;t[0]=i,t[1]=r}_computeUpGlobal(){ne(N,this.center,this.eye);const e=nt(this.center);e<1?(V(this._up,0,0,1),this._markViewDirty(),this.notifyChange("_up")):Math.abs(Ve(N,this.center))>.9999*nt(N)*e||(It(this._up,N,this.center),It(this._up,this._up,N),Ft(this._up,this._up),this.notifyChange("_up"),this._markViewDirty())}_computeUpLocal(){qi(N,this.eye,this.center),Math.abs(N[2])<=.9999&&(me(N,N,N[2]),V(this._up,-N[0],-N[1],1-N[2]),Ft(this._up,this._up),this.notifyChange("_up"),this._markViewDirty())}_compareAndSetView(e,t,i=""){typeof e[0]=="number"&&isFinite(e[0])&&typeof e[1]=="number"&&isFinite(e[1])&&typeof e[2]=="number"&&isFinite(e[2])?xe(e,t)||(q(t,e),this._markViewDirty(),i.length&&this.notifyChange(i)):it.getLogger("esri.views.3d.webgl-engine.lib.RenderCamera").warn("RenderCamera vector contains invalid number, ignoring value")}_markViewDirty(){this._viewDirty=!0,this._frustumDirty=!0,this._viewProjectionDirty=!0}_recomputeFrustum(){this._frustumDirty&&(rr(this.viewMatrix,this.projectionMatrix,this._frustum),this._frustumDirty=!1)}_ensureViewClean(){this._viewDirty&&(Hi(this._viewMatrix,this.eye,this.center,this.up),this.notifyChange("_viewMatrix"),this._viewDirty=!1,this._viewInverseTransposeMatrixDirty=!0)}};l([m()],v.prototype,"_viewport",void 0),l([m()],v.prototype,"_padding",void 0),l([m()],v.prototype,"_fov",void 0),l([m()],v.prototype,"_nearFar",void 0),l([m()],v.prototype,"_viewDirty",void 0),l([m()],v.prototype,"_viewMatrix",void 0),l([m()],v.prototype,"_pixelRatio",void 0),l([m()],v.prototype,"pixelRatio",null),l([m()],v.prototype,"row",void 0),l([m()],v.prototype,"column",void 0),l([m()],v.prototype,"_rows",void 0),l([m()],v.prototype,"rows",null),l([m()],v.prototype,"_columns",void 0),l([m()],v.prototype,"columns",null),l([m()],v.prototype,"eye",null),l([m()],v.prototype,"center",null),l([m()],v.prototype,"_center",void 0),l([m()],v.prototype,"up",null),l([m()],v.prototype,"_up",void 0),l([m()],v.prototype,"viewMatrix",null),l([m({readOnly:!0})],v.prototype,"viewForward",null),l([m({readOnly:!0})],v.prototype,"viewUp",null),l([m({readOnly:!0})],v.prototype,"viewRight",null),l([m({readOnly:!0})],v.prototype,"nearFar",null),l([m()],v.prototype,"near",null),l([m()],v.prototype,"far",null),l([m()],v.prototype,"viewport",null),l([m({readOnly:!0})],v.prototype,"screenViewport",null),l([m({readOnly:!0})],v.prototype,"screenPadding",null),l([m()],v.prototype,"x",null),l([m()],v.prototype,"y",null),l([m()],v.prototype,"width",null),l([m()],v.prototype,"height",null),l([m()],v.prototype,"fullWidth",null),l([m()],v.prototype,"fullHeight",null),l([m({readOnly:!0})],v.prototype,"_aspect",null),l([m()],v.prototype,"padding",null),l([m({readOnly:!0})],v.prototype,"projectionMatrix",null),l([m({readOnly:!0})],v.prototype,"inverseProjectionMatrix",null),l([m()],v.prototype,"fov",null),l([m()],v.prototype,"fovX",null),l([m()],v.prototype,"fovY",null),l([m()],v.prototype,"viewInverseTransposeMatrix",null),l([m({readOnly:!0})],v.prototype,"_projectionMatrixInternal",null),l([m()],v.prototype,"relativeElevation",void 0),v=_t=l([Ni("esri.views.3d.webgl.RenderCamera")],v);const gs=v,g=Oe(),Ze=Z(),N=O(),yt=O(),Tt=ce();var ae,_e;(function(e){e[e.Draped=0]="Draped",e[e.Screen=1]="Screen",e[e.World=2]="World",e[e.COUNT=3]="COUNT"})(ae||(ae={})),function(e){e[e.Center=0]="Center",e[e.Tip=1]="Tip",e[e.COUNT=2]="COUNT"}(_e||(_e={}));let H=class extends Vt{constructor(){super(...arguments),this.space=ae.Screen,this.anchor=_e.Center,this.occluder=!1,this.writeDepth=!1,this.hideOnShortSegments=!1,this.hasCap=!1,this.hasTip=!1,this.vvSize=!1,this.vvColor=!1,this.vvOpacity=!1,this.hasOccludees=!1,this.terrainDepthTest=!1,this.cullAboveTerrain=!1,this.textureCoordinateType=Wt.None,this.emissionSource=Bt.None,this.discardInvisibleFragments=!0,this.occlusionPass=!1,this.hasVvInstancing=!0,this.hasSliceTranslatedView=!0,this.objectAndLayerIdColorInstanced=!1,this.overlayEnabled=!1,this.snowCover=!1}get draped(){return this.space===ae.Draped}};l([T({count:ae.COUNT})],H.prototype,"space",void 0),l([T({count:_e.COUNT})],H.prototype,"anchor",void 0),l([T()],H.prototype,"occluder",void 0),l([T()],H.prototype,"writeDepth",void 0),l([T()],H.prototype,"hideOnShortSegments",void 0),l([T()],H.prototype,"hasCap",void 0),l([T()],H.prototype,"hasTip",void 0),l([T()],H.prototype,"vvSize",void 0),l([T()],H.prototype,"vvColor",void 0),l([T()],H.prototype,"vvOpacity",void 0),l([T()],H.prototype,"hasOccludees",void 0),l([T()],H.prototype,"terrainDepthTest",void 0),l([T()],H.prototype,"cullAboveTerrain",void 0);const hi=8;function pi(e,t){const{vertex:i,attributes:r}=e;i.uniforms.add(new ie("intrinsicWidth",s=>s.width)),t.vvSize?(r.add(p.SIZEFEATUREATTRIBUTE,"float"),i.uniforms.add(new Ee("vvSizeMinSize",s=>s.vvSize.minSize),new Ee("vvSizeMaxSize",s=>s.vvSize.maxSize),new Ee("vvSizeOffset",s=>s.vvSize.offset),new Ee("vvSizeFactor",s=>s.vvSize.factor),new Ee("vvSizeFallback",s=>s.vvSize.fallback)),i.code.add(h`float getSize() {
if (isnan(sizeFeatureAttribute)) {
return vvSizeFallback.x;
}
return intrinsicWidth * clamp(vvSizeOffset + sizeFeatureAttribute * vvSizeFactor, vvSizeMinSize, vvSizeMaxSize).x;
}`)):(r.add(p.SIZE,"float"),i.code.add(h`float getSize(){
return intrinsicWidth * size;
}`)),t.vvOpacity?(r.add(p.OPACITYFEATUREATTRIBUTE,"float"),i.constants.add("vvOpacityNumber","int",8),i.uniforms.add(new kt("vvOpacityValues",s=>s.vvOpacity.values,hi),new kt("vvOpacityOpacities",s=>s.vvOpacity.opacityValues,hi),new ie("vvOpacityFallback",s=>s.vvOpacity.fallback)),i.code.add(h`float interpolateOpacity(float value){
if (isnan(value)) {
return vvOpacityFallback;
}
if (value <= vvOpacityValues[0]) {
return vvOpacityOpacities[0];
}
for (int i = 1; i < vvOpacityNumber; ++i) {
if (vvOpacityValues[i] >= value) {
float f = (value - vvOpacityValues[i-1]) / (vvOpacityValues[i] - vvOpacityValues[i-1]);
return mix(vvOpacityOpacities[i-1], vvOpacityOpacities[i], f);
}
}
return vvOpacityOpacities[vvOpacityNumber - 1];
}
vec4 applyOpacity( vec4 color ){
return vec4(color.xyz, interpolateOpacity(opacityFeatureAttribute));
}`)):i.code.add(h`vec4 applyOpacity( vec4 color ){
return color;
}`),t.vvColor?(e.include(dr,t),r.add(p.COLORFEATUREATTRIBUTE,"float"),i.code.add(h`vec4 getColor(){
return applyOpacity(interpolateVVColor(colorFeatureAttribute));
}`)):(r.add(p.COLOR,"vec4"),i.code.add(h`vec4 getColor(){
return applyOpacity(color);
}`))}function di(e){return e.pattern.map(t=>Math.round(t*e.pixelRatio))}function _s(e){if(e==null)return 1;const t=di(e);return Math.floor(t.reduce((i,r)=>i+r))}function ys(e){return di(e).reduce((t,i)=>Math.max(t,i))}function Ts(e){return e==null?Qi:e.length===4?e:Xi(Ss,e[0],e[1],e[2],1)}const Ss=Oe();function ws(e,t){if(!t.stippleEnabled)return void e.fragment.code.add(h`float getStippleAlpha() { return 1.0; }
void discardByStippleAlpha(float stippleAlpha, float threshold) {}
vec4 blendStipple(vec4 color, float stippleAlpha) { return color; }`);const i=!(t.draped&&t.stipplePreferContinuous),{vertex:r,fragment:s}=e;s.include(es),t.draped||(ur(r,t),r.uniforms.add(new ct("worldToScreenPerDistanceRatio",({camera:n})=>1/n.perScreenPixelRatio)).code.add(h`float computeWorldToScreenRatio(vec3 segmentCenter) {
float segmentDistanceToCamera = length(segmentCenter - cameraPosition);
return worldToScreenPerDistanceRatio / segmentDistanceToCamera;
}`)),e.varyings.add("vStippleDistance","float"),e.varyings.add("vStippleDistanceLimits","vec2"),e.varyings.add("vStipplePatternStretch","float"),r.code.add(h`
    float discretizeWorldToScreenRatio(float worldToScreenRatio) {
      float step = ${h.float(Os)};

      float discreteWorldToScreenRatio = log(worldToScreenRatio);
      discreteWorldToScreenRatio = ceil(discreteWorldToScreenRatio / step) * step;
      discreteWorldToScreenRatio = exp(discreteWorldToScreenRatio);
      return discreteWorldToScreenRatio;
    }
  `),r.code.add(h`vec2 computeStippleDistanceLimits(float startPseudoScreen, float segmentLengthPseudoScreen, float segmentLengthScreen, float patternLength) {`),r.code.add(h`
    if (segmentLengthPseudoScreen >= ${i?"patternLength":"1e4"}) {
  `),ht(r),r.code.add(h`float repetitions = segmentLengthScreen / (patternLength * pixelRatio);
float flooredRepetitions = max(1.0, floor(repetitions + 0.5));
float segmentLengthScreenRounded = flooredRepetitions * patternLength;
float stretch = repetitions / flooredRepetitions;
vStipplePatternStretch = max(0.75, stretch);
return vec2(0.0, segmentLengthScreenRounded);
}
return vec2(startPseudoScreen, startPseudoScreen + segmentLengthPseudoScreen);
}`),s.uniforms.add(new fr("stipplePatternTexture",n=>n.stippleTexture),new ie("stipplePatternSDFNormalizer",n=>xs(n.stipplePattern)),new ie("stipplePatternPixelSizeInv",n=>1/ui(n))),t.stippleOffColorEnabled&&s.uniforms.add(new pt("stippleOffColor",n=>Ts(n.stippleOffColor))),s.code.add(h`float getStippleSDF(out bool isClamped) {
float stippleDistanceClamped = clamp(vStippleDistance, vStippleDistanceLimits.x, vStippleDistanceLimits.y);
vec2 aaCorrectedLimits = vStippleDistanceLimits + vec2(1.0, -1.0) / gl_FragCoord.w;
isClamped = vStippleDistance < aaCorrectedLimits.x || vStippleDistance > aaCorrectedLimits.y;
float u = stippleDistanceClamped * gl_FragCoord.w * stipplePatternPixelSizeInv * vLineSizeInv;
u = fract(u);
float encodedSDF = rgbaTofloat(texture(stipplePatternTexture, vec2(u, 0.5)));
float sdf = (encodedSDF * 2.0 - 1.0) * stipplePatternSDFNormalizer;
return (sdf - 0.5) * vStipplePatternStretch + 0.5;
}
float getStippleSDF() {
bool ignored;
return getStippleSDF(ignored);
}
float getStippleAlpha() {
bool isClamped;
float stippleSDF = getStippleSDF(isClamped);
float antiAliasedResult = clamp(stippleSDF * vLineWidth + 0.5, 0.0, 1.0);
return isClamped ? floor(antiAliasedResult + 0.5) : antiAliasedResult;
}`),s.code.add(h`
    void discardByStippleAlpha(float stippleAlpha, float threshold) {
     ${ss(!t.stippleOffColorEnabled,"if (stippleAlpha < threshold) { discard; }")}
    }

    vec4 blendStipple(vec4 color, float stippleAlpha) {
      return ${t.stippleOffColorEnabled?"mix(color, stippleOffColor, stippleAlpha)":"vec4(color.rgb, color.a * stippleAlpha)"};
    }
  `)}function xs(e){return e?(Math.floor(.5*(ys(e)-1))+.5)/e.pixelRatio:1}function ui(e){const t=e.stipplePattern;return t?_s(e.stipplePattern)/t.pixelRatio:1}const Os=.4,St=64,fi=St/2,Es=fi/5,bs=St/Es,Rs=.25;function vi(e,t){const i=e.vertex;ht(i),i.uniforms.get("markerScale")==null&&i.constants.add("markerScale","float",1),i.constants.add("markerSizePerLineWidth","float",bs).code.add(h`float getLineWidth() {
return max(getSize(), 1.0) * pixelRatio;
}
float getScreenMarkerSize() {
return markerSizePerLineWidth * markerScale * getLineWidth();
}`),t.space===ae.World&&(i.constants.add("maxSegmentLengthFraction","float",.45),i.uniforms.add(new ct("perRenderPixelRatio",r=>r.camera.perRenderPixelRatio)),i.code.add(h`bool areWorldMarkersHidden(vec4 pos, vec4 other) {
vec3 midPoint = mix(pos.xyz, other.xyz, 0.5);
float distanceToCamera = length(midPoint);
float screenToWorldRatio = perRenderPixelRatio * distanceToCamera * 0.5;
float worldMarkerSize = getScreenMarkerSize() * screenToWorldRatio;
float segmentLen = length(pos.xyz - other.xyz);
return worldMarkerSize > maxSegmentLengthFraction * segmentLen;
}
float getWorldMarkerSize(vec4 pos) {
float distanceToCamera = length(pos.xyz);
float screenToWorldRatio = perRenderPixelRatio * distanceToCamera * 0.5;
return getScreenMarkerSize() * screenToWorldRatio;
}`))}var oe;(function(e){e[e.BUTT=0]="BUTT",e[e.SQUARE=1]="SQUARE",e[e.ROUND=2]="ROUND",e[e.COUNT=3]="COUNT"})(oe||(oe={}));let P=class extends Vt{constructor(){super(...arguments),this.capType=oe.BUTT,this.hasPolygonOffset=!1,this.writeDepth=!1,this.draped=!1,this.stippleEnabled=!1,this.stippleOffColorEnabled=!1,this.stipplePreferContinuous=!0,this.roundJoins=!1,this.applyMarkerOffset=!1,this.vvSize=!1,this.vvColor=!1,this.vvOpacity=!1,this.falloffEnabled=!1,this.innerColorEnabled=!1,this.hasOccludees=!1,this.occluder=!1,this.terrainDepthTest=!1,this.cullAboveTerrain=!1,this.wireframe=!1,this.discardInvisibleFragments=!1,this.objectAndLayerIdColorInstanced=!1,this.textureCoordinateType=Wt.None,this.emissionSource=Bt.None,this.occlusionPass=!1,this.hasVvInstancing=!0,this.hasSliceTranslatedView=!0,this.overlayEnabled=!1,this.snowCover=!1}};l([T({count:oe.COUNT})],P.prototype,"capType",void 0),l([T()],P.prototype,"hasPolygonOffset",void 0),l([T()],P.prototype,"writeDepth",void 0),l([T()],P.prototype,"draped",void 0),l([T()],P.prototype,"stippleEnabled",void 0),l([T()],P.prototype,"stippleOffColorEnabled",void 0),l([T()],P.prototype,"stipplePreferContinuous",void 0),l([T()],P.prototype,"roundJoins",void 0),l([T()],P.prototype,"applyMarkerOffset",void 0),l([T()],P.prototype,"vvSize",void 0),l([T()],P.prototype,"vvColor",void 0),l([T()],P.prototype,"vvOpacity",void 0),l([T()],P.prototype,"falloffEnabled",void 0),l([T()],P.prototype,"innerColorEnabled",void 0),l([T()],P.prototype,"hasOccludees",void 0),l([T()],P.prototype,"occluder",void 0),l([T()],P.prototype,"terrainDepthTest",void 0),l([T()],P.prototype,"cullAboveTerrain",void 0),l([T()],P.prototype,"wireframe",void 0),l([T()],P.prototype,"discardInvisibleFragments",void 0),l([T()],P.prototype,"objectAndLayerIdColorInstanced",void 0);const Ce=1;function mi(e){const t=new ns,{attributes:i,varyings:r,vertex:s,fragment:n}=t,{applyMarkerOffset:a,draped:o,output:c,capType:f,stippleEnabled:_,falloffEnabled:w,roundJoins:u,wireframe:E,innerColorEnabled:x}=e;n.include(vr),t.include(pi,e),t.include(ws,e),t.include(mr,e),t.include(gr,e);const A=a&&!o;A&&(s.uniforms.add(new ie("markerScale",d=>d.markerScale)),t.include(vi,{space:ae.World})),_r(s,e),s.uniforms.add(new yr("inverseProjectionMatrix",d=>d.camera.inverseProjectionMatrix),new Tr("nearFar",d=>d.camera.nearFar),new ie("miterLimit",d=>d.join!=="miter"?0:d.miterLimit),new Sr("viewport",d=>d.camera.fullViewport)),s.constants.add("LARGE_HALF_FLOAT","float",65500),i.add(p.POSITION,"vec3"),i.add(p.PREVIOUSDELTA,"vec4"),i.add(p.NEXTDELTA,"vec4"),i.add(p.LINEPARAMETERS,"vec2"),i.add(p.U0,"float"),r.add("vColor","vec4"),r.add("vpos","vec3",{invariant:!0}),r.add("vLineDistance","float"),r.add("vLineWidth","float");const b=_;b&&r.add("vLineSizeInv","float");const D=f===oe.ROUND,J=_&&D,y=w||J;y&&r.add("vLineDistanceNorm","float"),D&&(r.add("vSegmentSDF","float"),r.add("vReverseSegmentSDF","float")),s.code.add(h`vec2 perpendicular(vec2 v) {
return vec2(v.y, -v.x);
}
float interp(float ncp, vec4 a, vec4 b) {
return (-ncp - a.z) / (b.z - a.z);
}
vec2 rotate(vec2 v, float a) {
float s = sin(a);
float c = cos(a);
mat2 m = mat2(c, -s, s, c);
return m * v;
}`),s.code.add(h`vec4 projectAndScale(vec4 pos) {
vec4 posNdc = proj * pos;
posNdc.xy *= viewport.zw / posNdc.w;
return posNdc;
}`),s.code.add(h`void clipAndTransform(inout vec4 pos, inout vec4 prev, inout vec4 next, in bool isStartVertex) {
float vnp = nearFar[0] * 0.99;
if(pos.z > -nearFar[0]) {
if (!isStartVertex) {
if(prev.z < -nearFar[0]) {
pos = mix(prev, pos, interp(vnp, prev, pos));
next = pos;
} else {
pos = vec4(0.0, 0.0, 0.0, 1.0);
}
} else {
if(next.z < -nearFar[0]) {
pos = mix(pos, next, interp(vnp, pos, next));
prev = pos;
} else {
pos = vec4(0.0, 0.0, 0.0, 1.0);
}
}
} else {
if (prev.z > -nearFar[0]) {
prev = mix(pos, prev, interp(vnp, pos, prev));
}
if (next.z > -nearFar[0]) {
next = mix(next, pos, interp(vnp, next, pos));
}
}
forwardViewPosDepth(pos.xyz);
pos = projectAndScale(pos);
next = projectAndScale(next);
prev = projectAndScale(prev);
}`),ht(s),s.constants.add("aaWidth","float",_?0:1).main.add(h`
    // unpack values from vertex type
    bool isStartVertex = abs(abs(lineParameters.y)-3.0) == 1.0;
    vec3 prevPosition = position + previousDelta.xyz * previousDelta.w;
    vec3 nextPosition = position + nextDelta.xyz * nextDelta.w;

    float coverage = 1.0;

    // Check for special value of lineParameters.y which is used by the Renderer when graphics are removed before the
    // VBO is recompacted. If this is the case, then we just project outside of clip space.
    if (lineParameters.y == 0.0) {
      // Project out of clip space
      gl_Position = vec4(1e038, 1e038, 1e038, 1.0);
    }
    else {
      bool isJoin = abs(lineParameters.y) < 3.0;
      float lineSize = getSize();

      if (lineSize < 1.0) {
        coverage = lineSize; // convert sub-pixel coverage to alpha
        lineSize = 1.0;
      }
      lineSize += aaWidth;

      float lineWidth = lineSize * pixelRatio;
      vLineWidth = lineWidth;
      ${b?h`vLineSizeInv = 1.0 / lineSize;`:""}

      vec4 pos  = view * vec4(position, 1.0);
      vec4 prev = view * vec4(prevPosition, 1.0);
      vec4 next = view * vec4(nextPosition, 1.0);
  `),A&&s.main.add(h`vec4 other = isStartVertex ? next : prev;
bool markersHidden = areWorldMarkersHidden(pos, other);
if(!isJoin && !markersHidden) {
pos.xyz += normalize(other.xyz - pos.xyz) * getWorldMarkerSize(pos) * 0.5;
}`),s.main.add(h`clipAndTransform(pos, prev, next, isStartVertex);
vec2 left = (pos.xy - prev.xy);
vec2 right = (next.xy - pos.xy);
float leftLen = length(left);
float rightLen = length(right);`),(_||D)&&s.main.add(h`
      float isEndVertex = float(!isStartVertex);
      vec2 segmentOrigin = mix(pos.xy, prev.xy, isEndVertex);
      vec2 segment = mix(right, left, isEndVertex);
      ${D?h`vec2 segmentEnd = mix(next.xy, pos.xy, isEndVertex);`:""}
    `),s.main.add(h`left = (leftLen > 0.001) ? left/leftLen : vec2(0.0, 0.0);
right = (rightLen > 0.001) ? right/rightLen : vec2(0.0, 0.0);
vec2 capDisplacementDir = vec2(0, 0);
vec2 joinDisplacementDir = vec2(0, 0);
float displacementLen = lineWidth;
if (isJoin) {
bool isOutside = (left.x * right.y - left.y * right.x) * lineParameters.y > 0.0;
joinDisplacementDir = normalize(left + right);
joinDisplacementDir = perpendicular(joinDisplacementDir);
if (leftLen > 0.001 && rightLen > 0.001) {
float nDotSeg = dot(joinDisplacementDir, left);
displacementLen /= length(nDotSeg * left - joinDisplacementDir);
if (!isOutside) {
displacementLen = min(displacementLen, min(leftLen, rightLen)/abs(nDotSeg));
}
}
float subdivisionFactor = lineParameters.x;
if (isOutside && (displacementLen > miterLimit * lineWidth)) {`),u?s.main.add(h`
        vec2 startDir = leftLen < 0.001 ? right : left;
        startDir = perpendicular(startDir);

        vec2 endDir = rightLen < 0.001 ? left : right;
        endDir = perpendicular(endDir);

        float factor = ${_?h`min(1.0, subdivisionFactor * ${h.float((Ce+2)/(Ce+1))})`:h`subdivisionFactor`};

        float rotationAngle = acos(clamp(dot(startDir, endDir), -1.0, 1.0));
        joinDisplacementDir = rotate(startDir, -sign(lineParameters.y) * factor * rotationAngle);
      `):s.main.add(h`if (leftLen < 0.001) {
joinDisplacementDir = right;
}
else if (rightLen < 0.001) {
joinDisplacementDir = left;
}
else {
joinDisplacementDir = (isStartVertex || subdivisionFactor > 0.0) ? right : left;
}
joinDisplacementDir = perpendicular(joinDisplacementDir);`);const M=f!==oe.BUTT;return s.main.add(h`
        displacementLen = lineWidth;
      }
    } else {
      // CAP handling ---------------------------------------------------
      joinDisplacementDir = isStartVertex ? right : left;
      joinDisplacementDir = perpendicular(joinDisplacementDir);

      ${M?h`capDisplacementDir = isStartVertex ? -right : left;`:""}
    }
  `),s.main.add(h`
    // Displacement (in pixels) caused by join/or cap
    vec2 dpos = joinDisplacementDir * sign(lineParameters.y) * displacementLen + capDisplacementDir * displacementLen;
    float lineDistNorm = sign(lineParameters.y) * pos.w;

    vLineDistance =  lineWidth * lineDistNorm;
    ${y?h`vLineDistanceNorm = lineDistNorm;`:""}

    pos.xy += dpos;
  `),D&&s.main.add(h`vec2 segmentDir = normalize(segment);
vSegmentSDF = (isJoin && isStartVertex) ? LARGE_HALF_FLOAT : (dot(pos.xy - segmentOrigin, segmentDir) * pos.w) ;
vReverseSegmentSDF = (isJoin && !isStartVertex) ? LARGE_HALF_FLOAT : (dot(pos.xy - segmentEnd, -segmentDir) * pos.w);`),_&&(o?s.uniforms.add(new ct("worldToScreenRatio",d=>1/d.screenToPCSRatio)):s.main.add(h`vec3 segmentCenter = mix((nextPosition + position) * 0.5, (position + prevPosition) * 0.5, isEndVertex);
float worldToScreenRatio = computeWorldToScreenRatio(segmentCenter);`),s.main.add(h`float segmentLengthScreenDouble = length(segment);
float segmentLengthScreen = segmentLengthScreenDouble * 0.5;
float discreteWorldToScreenRatio = discretizeWorldToScreenRatio(worldToScreenRatio);
float segmentLengthRender = length(mix(nextPosition - position, position - prevPosition, isEndVertex));
vStipplePatternStretch = worldToScreenRatio / discreteWorldToScreenRatio;`),o?s.main.add(h`float segmentLengthPseudoScreen = segmentLengthScreen / pixelRatio * discreteWorldToScreenRatio / worldToScreenRatio;
float startPseudoScreen = u0 * discreteWorldToScreenRatio - mix(0.0, segmentLengthPseudoScreen, isEndVertex);`):s.main.add(h`float startPseudoScreen = mix(u0, u0 - segmentLengthRender, isEndVertex) * discreteWorldToScreenRatio;
float segmentLengthPseudoScreen = segmentLengthRender * discreteWorldToScreenRatio;`),s.uniforms.add(new ie("stipplePatternPixelSize",d=>ui(d))),s.main.add(h`float patternLength = lineSize * stipplePatternPixelSize;
vStippleDistanceLimits = computeStippleDistanceLimits(startPseudoScreen, segmentLengthPseudoScreen, segmentLengthScreen, patternLength);
vStippleDistance = mix(vStippleDistanceLimits.x, vStippleDistanceLimits.y, isEndVertex);
if (segmentLengthScreenDouble >= 0.001) {
vec2 stippleDisplacement = pos.xy - segmentOrigin;
float stippleDisplacementFactor = dot(segment, stippleDisplacement) / (segmentLengthScreenDouble * segmentLengthScreenDouble);
vStippleDistance += (stippleDisplacementFactor - isEndVertex) * (vStippleDistanceLimits.y - vStippleDistanceLimits.x);
}
vStippleDistanceLimits *= pos.w;
vStippleDistance *= pos.w;
vStippleDistanceLimits = isJoin ?
vStippleDistanceLimits :
isStartVertex ?
vec2(-1e34, vStippleDistanceLimits.y) :
vec2(vStippleDistanceLimits.x, 1e34);`)),s.main.add(h`
      // Convert back into NDC
      pos.xy = (pos.xy / viewport.zw) * pos.w;

      vColor = getColor();
      vColor.a *= coverage;

      ${E&&!o?"pos.z -= 0.001 * pos.w;":""}

      // transform final position to camera space for slicing
      vpos = (inverseProjectionMatrix * pos).xyz;
      gl_Position = pos;
      forwardObjectAndLayerIdColor();
    }`),t.fragment.include(wr,e),t.include(xr,e),n.include(Or),n.main.add(h`discardBySlice(vpos);
discardByTerrainDepth();`),E?n.main.add(h`vec4 finalColor = vec4(1.0, 0.0, 1.0, 1.0);`):(D&&n.main.add(h`
        float sdf = min(vSegmentSDF, vReverseSegmentSDF);
        vec2 fragmentPosition = vec2(
          min(sdf, 0.0),
          vLineDistance
        ) * gl_FragCoord.w;

        float fragmentRadius = length(fragmentPosition);
        float fragmentCapSDF = (fragmentRadius - vLineWidth) * 0.5; // Divide by 2 to transform from double pixel scale
        float capCoverage = clamp(0.5 - fragmentCapSDF, 0.0, 1.0);

        if (capCoverage < ${h.float(be)}) {
          discard;
        }
      `),J?n.main.add(h`
      vec2 stipplePosition = vec2(
        min(getStippleSDF() * 2.0 - 1.0, 0.0),
        vLineDistanceNorm * gl_FragCoord.w
      );
      float stippleRadius = length(stipplePosition * vLineWidth);
      float stippleCapSDF = (stippleRadius - vLineWidth) * 0.5; // Divide by 2 to transform from double pixel scale
      float stippleCoverage = clamp(0.5 - stippleCapSDF, 0.0, 1.0);
      float stippleAlpha = step(${h.float(be)}, stippleCoverage);
      `):n.main.add(h`float stippleAlpha = getStippleAlpha();`),c!==Kt.ObjectAndLayerIdColor&&n.main.add(h`discardByStippleAlpha(stippleAlpha, ${h.float(be)});`),n.uniforms.add(new pt("intrinsicColor",d=>d.color)),n.main.add(h`vec4 color = intrinsicColor * vColor;`),x&&(n.uniforms.add(new pt("innerColor",d=>d.innerColor??d.color),new ie("innerWidth",(d,z)=>d.innerWidth*z.camera.pixelRatio)),n.main.add(h`float distToInner = abs(vLineDistance * gl_FragCoord.w) - innerWidth;
float innerAA = clamp(0.5 - distToInner, 0.0, 1.0);
float innerAlpha = innerColor.a + color.a * (1.0 - innerColor.a);
color = mix(color, vec4(innerColor.rgb, innerAlpha), innerAA);`)),n.main.add(h`vec4 finalColor = blendStipple(color, stippleAlpha);`),w&&(n.uniforms.add(new ie("falloff",d=>d.falloff)),n.main.add(h`finalColor.a *= pow(max(0.0, 1.0 - abs(vLineDistanceNorm * gl_FragCoord.w)), falloff);`)),_||n.main.add(h`float featherStartDistance = max(vLineWidth - 2.0, 0.0);
float value = abs(vLineDistance) * gl_FragCoord.w;
float feather = (value - featherStartDistance) / (vLineWidth - featherStartDistance);
finalColor.a *= 1.0 - clamp(feather, 0.0, 1.0);`)),n.main.add(h`outputColorHighlightOID(finalColor, vpos, finalColor.rgb);`),t}const Ds=Object.freeze(Object.defineProperty({__proto__:null,build:mi,ribbonlineNumRoundJoinSubdivisions:Ce},Symbol.toStringTag,{value:"Module"}));class As extends Er{constructor(t,i){super(t,i,new br(Ds,()=>Promise.resolve().then(()=>nn)),_i),this.primitiveType=i.wireframe?ti.LINES:ti.TRIANGLE_STRIP}_makePipelineState(t,i){const{oitPass:r,output:s,hasOccludees:n,hasPolygonOffset:a}=t,o=r===Ht.NONE,c=r===Ht.FrontFace;return $e({blending:Re(s)?Pr(r):null,depthTest:{func:Cr(r)},depthWrite:Ar(t),drawBuffers:He(s,Lr(r,s)),colorWrite:ut,stencilWrite:n?Jt:null,stencilTest:n?i?Gt:Dr:null,polygonOffset:o||c?a?gi:null:Rr})}initializePipeline(t){if(t.occluder){const i=t.hasPolygonOffset?gi:null,{output:r,hasOccludees:s}=t;this._occluderPipelineTransparent=$e({blending:ii,polygonOffset:i,depthTest:$t,depthWrite:null,colorWrite:ut,stencilWrite:null,stencilTest:s?Mr:null,drawBuffers:He(r)}),this._occluderPipelineOpaque=$e({blending:ii,polygonOffset:i,depthTest:s?$t:Yt,depthWrite:null,colorWrite:ut,stencilWrite:s?Fr:null,stencilTest:s?Ir:null,drawBuffers:He(r)}),this._occluderPipelineMaskWrite=$e({blending:null,polygonOffset:i,depthTest:Yt,depthWrite:null,colorWrite:null,stencilWrite:s?Jt:null,stencilTest:s?Gt:null,drawBuffers:He(r)})}return this._occludeePipeline=this._makePipelineState(t,!0),this._makePipelineState(t,!1)}getPipeline(t,i){if(t)return this._occludeePipeline;switch(i){case K.TRANSPARENT_OCCLUDER_MATERIAL:return this._occluderPipelineTransparent??super.getPipeline();case K.OCCLUDER_MATERIAL:return this._occluderPipelineOpaque??super.getPipeline();default:return this._occluderPipelineMaskWrite??super.getPipeline()}}}const gi={factor:0,units:-4},_i=new Map([[p.POSITION,0],[p.PREVIOUSDELTA,1],[p.NEXTDELTA,2],[p.U0,3],[p.LINEPARAMETERS,4],[p.COLOR,5],[p.COLORFEATUREATTRIBUTE,5],[p.SIZE,6],[p.SIZEFEATUREATTRIBUTE,6],[p.OPACITYFEATUREATTRIBUTE,7],[p.OLIDCOLOR,8]]);var G;(function(e){e[e.LEFT_JOIN_START=-2]="LEFT_JOIN_START",e[e.LEFT_JOIN_END=-1]="LEFT_JOIN_END",e[e.LEFT_CAP_START=-4]="LEFT_CAP_START",e[e.LEFT_CAP_END=-5]="LEFT_CAP_END",e[e.RIGHT_JOIN_START=2]="RIGHT_JOIN_START",e[e.RIGHT_JOIN_END=1]="RIGHT_JOIN_END",e[e.RIGHT_CAP_START=4]="RIGHT_CAP_START",e[e.RIGHT_CAP_END=5]="RIGHT_CAP_END"})(G||(G={}));class yi extends jr{constructor(t){super(t,Ps),this._configuration=new P,this.vertexAttributeLocations=_i,this.produces=new Map([[K.OPAQUE_MATERIAL,i=>qr(i)||Re(i)&&this.parameters.renderOccluded===ge.OccludeAndTransparentStencil],[K.OPAQUE_MATERIAL_WITHOUT_NORMALS,i=>Xr(i)],[K.OCCLUDER_MATERIAL,i=>ei(i)&&this.parameters.renderOccluded===ge.OccludeAndTransparentStencil],[K.TRANSPARENT_OCCLUDER_MATERIAL,i=>ei(i)&&this.parameters.renderOccluded===ge.OccludeAndTransparentStencil],[K.TRANSPARENT_MATERIAL,i=>Re(i)&&this.parameters.writeDepth&&this.parameters.renderOccluded!==ge.OccludeAndTransparentStencil],[K.TRANSPARENT_MATERIAL_WITHOUT_DEPTH,i=>Re(i)&&!this.parameters.writeDepth&&this.parameters.renderOccluded!==ge.OccludeAndTransparentStencil],[K.DRAPED_MATERIAL,i=>Qr(i)]])}getConfiguration(t,i){super.getConfiguration(t,i,this._configuration),this._configuration.oitPass=i.oitPass,this._configuration.draped=i.slot===K.DRAPED_MATERIAL;const r=this.parameters.stipplePattern!=null&&t!==Kt.Highlight;return this._configuration.stippleEnabled=r,this._configuration.stippleOffColorEnabled=r&&this.parameters.stippleOffColor!=null,this._configuration.stipplePreferContinuous=r&&this.parameters.stipplePreferContinuous,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.roundJoins=this.parameters.join==="round",this._configuration.capType=this.parameters.cap,this._configuration.applyMarkerOffset=this.parameters.markerParameters!=null&&Ms(this.parameters.markerParameters),this._configuration.hasPolygonOffset=this.parameters.hasPolygonOffset,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.vvSize=!!this.parameters.vvSize,this._configuration.vvColor=!!this.parameters.vvColor,this._configuration.vvOpacity=!!this.parameters.vvOpacity,this._configuration.innerColorEnabled=this.parameters.innerWidth>0&&this.parameters.innerColor!=null,this._configuration.falloffEnabled=this.parameters.falloff>0,this._configuration.hasOccludees=i.hasOccludees,this._configuration.occluder=this.parameters.renderOccluded===ge.OccludeAndTransparentStencil,this._configuration.terrainDepthTest=i.terrainDepthTest&&Re(t),this._configuration.cullAboveTerrain=i.cullAboveTerrain,this._configuration.wireframe=this.parameters.wireframe,this._configuration}get visible(){return this.parameters.color[3]>=be||this.parameters.stipplePattern!=null&&(this.parameters.stippleOffColor?.[3]??0)>be}intersectDraped({attributes:t,screenToWorldRatio:i},r,s,n,a){if(!r.options.selectionMode)return;const o=t.get(p.SIZE);let c=this.parameters.width;if(this.parameters.vvSize){const b=t.get(p.SIZEFEATUREATTRIBUTE).data[0];Number.isNaN(b)?c*=this.parameters.vvSize.fallback[0]:c*=rt(this.parameters.vvSize.offset[0]+b*this.parameters.vvSize.factor[0],this.parameters.vvSize.minSize[0],this.parameters.vvSize.maxSize[0])}else o&&(c*=o.data[0]);const f=s[0],_=s[1],w=(c/2+4)*i;let u=Number.MAX_VALUE,E=0;const x=t.get(p.POSITION).data,A=xt(this.parameters,t)?x.length-2:x.length-5;for(let b=0;b<A;b+=3){const D=x[b],J=x[b+1],y=(b+3)%x.length,M=f-D,d=_-J,z=x[y]-D,C=x[y+1]-J,fe=rt((z*M+C*d)/(z*z+C*C),0,1),se=z*fe-M,Te=C*fe-d,U=se*se+Te*Te;U<u&&(u=U,E=b/3)}u<w*w&&n(a.distance,a.normal,E)}intersect(t,i,r,s,n,a){const{options:o,camera:c,rayBegin:f,rayEnd:_}=r;if(!o.selectionMode||!t.visible||!c)return;if(!Hr(i))return void it.getLogger("esri.views.3d.webgl-engine.materials.RibbonLineMaterial").error("intersection assumes a translation-only matrix");const w=t.attributes,u=w.get(p.POSITION).data;let E=this.parameters.width;if(this.parameters.vvSize){const y=w.get(p.SIZEFEATUREATTRIBUTE).data[0];Number.isNaN(y)||(E*=rt(this.parameters.vvSize.offset[0]+y*this.parameters.vvSize.factor[0],this.parameters.vvSize.minSize[0],this.parameters.vvSize.maxSize[0]))}else w.has(p.SIZE)&&(E*=w.get(p.SIZE).data[0]);const x=Is;Pt(x,r.point);const A=E*c.pixelRatio/2+4*c.pixelRatio;V(Pe[0],x[0]-A,x[1]+A,0),V(Pe[1],x[0]+A,x[1]+A,0),V(Pe[2],x[0]+A,x[1]-A,0),V(Pe[3],x[0]-A,x[1]-A,0);for(let y=0;y<4;y++)if(!c.unprojectFromRenderScreen(Pe[y],re[y]))return;Ge(c.eye,re[0],re[1],Ot),Ge(c.eye,re[1],re[2],Et),Ge(c.eye,re[2],re[3],bt),Ge(c.eye,re[3],re[0],Rt);let b=Number.MAX_VALUE,D=0;const J=xt(this.parameters,w)?u.length-2:u.length-5;for(let y=0;y<J;y+=3){W[0]=u[y]+i[12],W[1]=u[y+1]+i[13],W[2]=u[y+2]+i[14];const M=(y+3)%u.length;if(B[0]=u[M]+i[12],B[1]=u[M+1]+i[13],B[2]=u[M+2]+i[14],ee(Ot,W)<0&&ee(Ot,B)<0||ee(Et,W)<0&&ee(Et,B)<0||ee(bt,W)<0&&ee(bt,B)<0||ee(Rt,W)<0&&ee(Rt,B)<0)continue;if(c.projectToRenderScreen(W,de),c.projectToRenderScreen(B,ue),de[2]<0&&ue[2]>0){ne(te,W,B);const z=c.frustum,C=-ee(z[ke.NEAR],W)/Ve(te,Xt(z[ke.NEAR]));me(te,te,C),Ue(W,W,te),c.projectToRenderScreen(W,de)}else if(de[2]>0&&ue[2]<0){ne(te,B,W);const z=c.frustum,C=-ee(z[ke.NEAR],B)/Ve(te,Xt(z[ke.NEAR]));me(te,te,C),Ue(B,B,te),c.projectToRenderScreen(B,ue)}else if(de[2]<0&&ue[2]<0)continue;de[2]=0,ue[2]=0;const d=$r(dt(de,ue,wi),x);d<b&&(b=d,q(Ti,W),q(Si,B),D=y/3)}if(b<A*A){let y=Number.MAX_VALUE;if(Yr(dt(Ti,Si,wi),dt(f,_,Fs),pe)){ne(pe,pe,f);const M=nt(pe);me(pe,pe,1/M),y=M/ze(f,_)}a(y,pe,D)}}get _layout(){const t=Zr().vec3f(p.POSITION).vec4f16(p.PREVIOUSDELTA).vec4f16(p.NEXTDELTA).f32(p.U0).vec2f16(p.LINEPARAMETERS);return this.parameters.vvColor?t.f32(p.COLORFEATUREATTRIBUTE):t.vec4u8(p.COLOR,{glNormalized:!0}),this.parameters.vvSize?t.f32(p.SIZEFEATUREATTRIBUTE):t.f32(p.SIZE),this.parameters.vvOpacity&&t.f32(p.OPACITYFEATUREATTRIBUTE),Zt()&&t.vec4u8(p.OLIDCOLOR),t}createBufferWriter(){return new Ls(this._layout,this.parameters)}createGLMaterial(t){return new Cs(t)}validateParameters(t){t.join!=="miter"&&(t.miterLimit=0),t.markerParameters!=null&&(t.markerScale=t.markerParameters.width/t.width)}}class Cs extends zr{constructor(){super(...arguments),this._stipplePattern=null}dispose(){super.dispose(),this._stippleTextures.release(this._stipplePattern),this._stipplePattern=null}beginSlot(t){const i=this._material.parameters.stipplePattern;return this._stipplePattern!==i&&(this._material.setParameters({stippleTexture:this._stippleTextures.swap(i,this._stipplePattern)}),this._stipplePattern=i),this.getTechnique(As,t)}}class Ps extends Nr{constructor(){super(...arguments),this.width=0,this.color=Ki,this.join="miter",this.cap=oe.BUTT,this.miterLimit=5,this.writeDepth=!0,this.hasPolygonOffset=!1,this.stippleTexture=null,this.stipplePreferContinuous=!0,this.markerParameters=null,this.markerScale=1,this.hasSlicePlane=!1,this.vvFastUpdate=!1,this.isClosed=!1,this.falloff=0,this.innerWidth=0,this.wireframe=!1}get transparent(){return this.color[3]<1||this.stipplePattern!=null&&(this.stippleOffColor?.[3]??0)<1}}class Ls{constructor(t,i){this.vertexBufferLayout=t,this._parameters=i;const r=i.stipplePattern?1:0;switch(this._parameters.join){case"miter":case"bevel":this.numJoinSubdivisions=r;break;case"round":this.numJoinSubdivisions=Ce+r}}_isClosed(t){return xt(this._parameters,t)}allocate(t){return this.vertexBufferLayout.createBuffer(t)}elementCount(t){const i=t.get(p.POSITION).indices.length/2+1,r=this._isClosed(t);let s=r?2:4;return s+=((r?i:i-1)-(r?0:1))*(2*this.numJoinSubdivisions+4),s+=2,this._parameters.wireframe&&(s=2+4*(s-2)),s}write(t,i,r,s,n,a){const o=r.get(p.POSITION),c=o.indices,f=o.data.length/3,_=r.get(p.DISTANCETOSTART)?.data;c&&c.length!==2*(f-1)&&console.warn("RibbonLineMaterial does not support indices");const w=(this.vertexBufferLayout.fields.has(p.SIZEFEATUREATTRIBUTE)?r.get(p.SIZEFEATUREATTRIBUTE)?.data[0]:r.get(p.SIZE)?.data[0])??1;let u=[1,1,1,1],E=0;const x=this.vertexBufferLayout.fields.has(p.COLORFEATUREATTRIBUTE);x?E=r.get(p.COLORFEATUREATTRIBUTE).data[0]:r.has(p.COLOR)&&(u=r.get(p.COLOR).data);const A=this.vertexBufferLayout.fields.has(p.OPACITYFEATUREATTRIBUTE),b=A?r.get(p.OPACITYFEATUREATTRIBUTE).data[0]:0,D=new Float32Array(n.buffer),J=Gr(n.buffer),y=new Uint8Array(n.buffer),M=this.vertexBufferLayout.stride/4;let d=a*M;const z=d;let C=0;const fe=_?(I,Y,le)=>C=_[le]:(I,Y,le)=>C+=ze(I,Y),se=D.BYTES_PER_ELEMENT/J.BYTES_PER_ELEMENT,Te=4/se,U=(I,Y,le,we,Ie,Ai,Ci)=>{D[d++]=Y[0],D[d++]=Y[1],D[d++]=Y[2],qt(I,Y,J,d*se),d+=Te,qt(le,Y,J,d*se),d+=Te,D[d++]=Ci;let Ke=d*se;if(J[Ke++]=we,J[Ke++]=Ie,d=Math.ceil(Ke/se),x)D[d]=E;else{const k=Math.min(4*Ai,u.length-4),Fe=4*d;y[Fe]=255*u[k],y[Fe+1]=255*u[k+1],y[Fe+2]=255*u[k+2],y[Fe+3]=255*u[k+3]}if(d++,D[d++]=w,A&&(D[d++]=b),Zt()){let k=4*d;s?(y[k++]=s[0],y[k++]=s[1],y[k++]=s[2],y[k++]=s[3]):(y[k++]=0,y[k++]=0,y[k++]=0,y[k++]=0),d=Math.ceil(.25*k)}};d+=M,V(R,o.data[0],o.data[1],o.data[2]),t&&Q(R,R,t);const Me=this._isClosed(r);if(Me){const I=o.data.length-3;V(j,o.data[I],o.data[I+1],o.data[I+2]),t&&Q(j,j,t)}else V(L,o.data[3],o.data[4],o.data[5]),t&&Q(L,L,t),U(R,R,L,1,G.LEFT_CAP_START,0,0),U(R,R,L,1,G.RIGHT_CAP_START,0,0),q(j,R),q(R,L);const Qe=Me?0:1,Se=Me?f:f-1;for(let I=Qe;I<Se;I++){const Y=(I+1)%f*3;V(L,o.data[Y],o.data[Y+1],o.data[Y+2]),t&&Q(L,L,t),fe(j,R,I),U(j,R,L,0,G.LEFT_JOIN_END,I,C),U(j,R,L,0,G.RIGHT_JOIN_END,I,C);const le=this.numJoinSubdivisions;for(let we=0;we<le;++we){const Ie=(we+1)/(le+1);U(j,R,L,Ie,G.LEFT_JOIN_END,I,C),U(j,R,L,Ie,G.RIGHT_JOIN_END,I,C)}U(j,R,L,1,G.LEFT_JOIN_START,I,C),U(j,R,L,1,G.RIGHT_JOIN_START,I,C),q(j,R),q(R,L)}return Me?(V(L,o.data[3],o.data[4],o.data[5]),t&&Q(L,L,t),C=fe(j,R,Se),U(j,R,L,0,G.LEFT_JOIN_END,Qe,C),U(j,R,L,0,G.RIGHT_JOIN_END,Qe,C)):(C=fe(j,R,Se),U(j,R,R,0,G.LEFT_CAP_END,Se,C),U(j,R,R,0,G.RIGHT_CAP_END,Se,C)),wt(D,z+M,D,z,M),d=wt(D,d-M,D,d,M),this._parameters.wireframe&&this._addWireframeVertices(n,z,d,M),null}_addWireframeVertices(t,i,r,s){const n=new Float32Array(t.buffer,r*Float32Array.BYTES_PER_ELEMENT),a=new Float32Array(t.buffer,i*Float32Array.BYTES_PER_ELEMENT,r-i);let o=0;const c=f=>o=wt(a,f,n,o,s);for(let f=0;f<a.length-1;f+=2*s)c(f),c(f+2*s),c(f+1*s),c(f+2*s),c(f+1*s),c(f+3*s)}}function wt(e,t,i,r,s){for(let n=0;n<s;n++)i[r++]=e[t++];return r}function xt(e,t){return e.isClosed?t.get(p.POSITION).indices.length>2:!1}function Ms(e){return e.anchor===_e.Tip&&e.hideOnShortSegments&&e.placement==="begin-end"&&e.worldSpace}const W=O(),B=O(),te=O(),pe=O(),Is=O(),de=ce(),ue=ce(),Ti=O(),Si=O(),wi=Qt(),Fs=Qt(),j=O(),R=O(),L=O(),Pe=[ce(),ce(),ce(),ce()],re=[O(),O(),O(),O()],Ot=Je(),Et=Je(),bt=Je(),Rt=Je();let js=class{constructor(e){this._originSR=e,this._rootOriginId="root/"+et(),this._origins=new Map,this._objects=new Map,this._gridSize=5e5}getOrigin(e){const t=this._origins.get(this._rootOriginId);if(t==null){const f=gt(e[0]+Math.random()-.5,e[1]+Math.random()-.5,e[2]+Math.random()-.5,this._rootOriginId);return this._origins.set(this._rootOriginId,f),f}const i=this._gridSize,r=Math.round(e[0]/i),s=Math.round(e[1]/i),n=Math.round(e[2]/i),a=`${r}/${s}/${n}`;let o=this._origins.get(a);const c=.5*i;if(ne(F,e,t.vec3),F[0]=Math.abs(F[0]),F[1]=Math.abs(F[1]),F[2]=Math.abs(F[2]),F[0]<c&&F[1]<c&&F[2]<c){if(o){const f=Math.max(...F);if(ne(F,e,o.vec3),F[0]=Math.abs(F[0]),F[1]=Math.abs(F[1]),F[2]=Math.abs(F[2]),Math.max(...F)<f)return o}return t}return o||(o=gt(r*i,s*i,n*i,a),this._origins.set(a,o)),o}_drawOriginBox(e,t=ot(1,1,0,1)){const i=window.view,r=i.stage,s=t.toString();if(!this._objects.has(s)){this._material=new yi({width:2,color:t});const u=new li(r,{pickable:!1}),E=new si({castShadow:!1});u.add(E),this._objects.set(s,E)}const n=this._objects.get(s),a=[0,1,5,4,0,2,1,7,6,2,0,1,3,7,5,4,6,2,0],o=a.length,c=new Array(3*o),f=new Array,_=.5*this._gridSize;for(let u=0;u<o;u++)c[3*u]=e[0]+(1&a[u]?_:-_),c[3*u+1]=e[1]+(2&a[u]?_:-_),c[3*u+2]=e[2]+(4&a[u]?_:-_),u>0&&f.push(u-1,u);lt(c,this._originSR,0,c,i.renderSpatialReference,0,o);const w=new Ur(this._material,[[p.POSITION,new lr(c,f,3,!0)]],null,Vr.Line);n.addGeometry(w)}get test(){}};const F=O();class Ns{constructor(t,i=null,r=0){this.array=t,this.spatialReference=i,this.offset=r}}function xi(e){return"array"in e}function Le(e,t,i="ground"){if(ri(t))return e.getElevation(t.x,t.y,t.z||0,t.spatialReference,i);if(xi(t)){let r=t.offset;return e.getElevation(t.array[r++],t.array[r++],t.array[r]||0,t.spatialReference??e.spatialReference,i)}return e.getElevation(t[0],t[1],t[2]||0,e.spatialReference,i)}function zs(e,t,i,r,s,n,a,o,c,f,_){const w=Zs[_.mode];let u,E,x=0;if(lt(e,t,i,r,c.spatialReference,s,o))return w?.requiresAlignment(_)?(x=w.applyElevationAlignmentBuffer(r,s,n,a,o,c,f,_),u=n,E=a):(u=r,E=s),lt(u,c.spatialReference,E,n,f.spatialReference,a,o)?x:void 0}function Dt(e,t,i,r,s){const n=(ri(e)?e.z:xi(e)?e.array[e.offset+2]:e[2])||0;switch(i.mode){case"on-the-ground":{const a=Le(t,e,"ground")??0;return s.verticalDistanceToGround=0,s.sampledElevation=a,void(s.z=a)}case"relative-to-ground":{const a=Le(t,e,"ground")??0,o=i.geometryZWithOffset(n,r);return s.verticalDistanceToGround=o,s.sampledElevation=a,void(s.z=o+a)}case"relative-to-scene":{const a=Le(t,e,"scene")??0,o=i.geometryZWithOffset(n,r);return s.verticalDistanceToGround=o,s.sampledElevation=a,void(s.z=o+a)}case"absolute-height":{const a=i.geometryZWithOffset(n,r),o=Le(t,e,"ground")??0;return s.verticalDistanceToGround=a-o,s.sampledElevation=o,void(s.z=a)}default:return void(s.z=0)}}function Us(e,t,i,r){return Dt(e,t,i,r,ye),ye.z}function Vs(e,t,i){return t==="on-the-ground"&&i==="on-the-ground"?e.staysOnTheGround:t===i||t!=="on-the-ground"&&i!=="on-the-ground"?t==null||i==null?e.definedChanged:qe.UPDATE:e.onTheGroundChanged}function Ws(e){return e==="relative-to-ground"||e==="relative-to-scene"}function Bs(e){return e!=="absolute-height"}function ks(e,t,i,r,s){Dt(t,i,s,r,ye),Oi(e,ye.verticalDistanceToGround);const n=ye.sampledElevation,a=ve(qs,e.transformation);return Xe[0]=t.x,Xe[1]=t.y,Xe[2]=ye.z,Kr(t.spatialReference,Xe,a,r.spatialReference)?e.transformation=a:console.warn("Could not locate symbol object properly, it might be misplaced"),n}function Oi(e,t){for(let i=0;i<e.geometries.length;++i){const r=e.geometries[i].getMutableAttribute(p.CENTEROFFSETANDDISTANCE);r&&r.data[3]!==t&&(r.data[3]=t,e.geometryVertexAttributeUpdated(e.geometries[i],p.CENTEROFFSETANDDISTANCE))}}function Hs(e,t,i,r,s,n){let a=0;const o=n.spatialReference;t*=3,r*=3;for(let c=0;c<s;++c){const f=e[t],_=e[t+1],w=e[t+2],u=n.getElevation(f,_,w,o,"ground")??0;a+=u,i[r]=f,i[r+1]=_,i[r+2]=u,t+=3,r+=3}return a/s}function Gs(e,t,i,r,s,n,a,o){let c=0;const f=o.calculateOffsetRenderUnits(a),_=o.featureExpressionInfoContext,w=n.spatialReference;t*=3,r*=3;for(let u=0;u<s;++u){const E=e[t],x=e[t+1],A=e[t+2],b=n.getElevation(E,x,A,w,"ground")??0;c+=b,i[r]=E,i[r+1]=x,i[r+2]=_==null?A+b+f:b+f,t+=3,r+=3}return c/s}function Js(e,t,i,r,s,n,a,o){let c=0;const f=o.calculateOffsetRenderUnits(a),_=o.featureExpressionInfoContext,w=n.spatialReference;t*=3,r*=3;for(let u=0;u<s;++u){const E=e[t],x=e[t+1],A=e[t+2],b=n.getElevation(E,x,A,w,"scene")??0;c+=b,i[r]=E,i[r+1]=x,i[r+2]=_==null?A+b+f:b+f,t+=3,r+=3}return c/s}function $s(e){const t=e.meterUnitOffset,i=e.featureExpressionInfoContext;return t!==0||i!=null}function Ys(e,t,i,r,s,n,a,o){const c=o.calculateOffsetRenderUnits(a),f=o.featureExpressionInfoContext;t*=3,r*=3;for(let _=0;_<s;++_){const w=e[t],u=e[t+1],E=e[t+2];i[r]=w,i[r+1]=u,i[r+2]=f==null?E+c:c,t+=3,r+=3}return 0}class Ei{constructor(){this.verticalDistanceToGround=0,this.sampledElevation=0,this.z=0}}var qe;(function(e){e[e.NONE=0]="NONE",e[e.UPDATE=1]="UPDATE",e[e.RECREATE=2]="RECREATE"})(qe||(qe={}));const Zs={"absolute-height":{applyElevationAlignmentBuffer:Ys,requiresAlignment:$s},"on-the-ground":{applyElevationAlignmentBuffer:Hs,requiresAlignment:()=>!0},"relative-to-ground":{applyElevationAlignmentBuffer:Gs,requiresAlignment:()=>!0},"relative-to-scene":{applyElevationAlignmentBuffer:Js,requiresAlignment:()=>!0}},qs=Z(),ye=new Ei,Xe=O(),Xs=()=>it.getLogger("esri.views.3d.layers.graphics.featureExpressionInfoUtils");function Qs(e){return{cachedResult:e.cachedResult,arcade:e.arcade?{func:e.arcade.func,context:e.arcade.modules.arcadeUtils.createExecContext(null,{sr:e.arcade.context.spatialReference}),modules:e.arcade.modules}:null}}async function Ks(e,t,i,r){const s=e?.expression;if(typeof s!="string")return null;const n=sn(s);if(n!=null)return{cachedResult:n};const a=await zi();Ui(i);const o=a.arcadeUtils,c=o.createSyntaxTree(s);return o.dependsOnView(c)?(r?.error("Expressions containing '$view' are not supported on ElevationInfo"),{cachedResult:0}):{arcade:{func:o.createFunction(c),context:o.createExecContext(null,{sr:t}),modules:a}}}function bi(e,t,i){return e.arcadeUtils.createFeature(t.attributes,t.geometry,i)}function Ri(e,t){if(e!=null&&!Di(e)){if(!t||!e.arcade)return void Xs().errorOncePerTick("Arcade support required but not provided");const i=t;i._geometry&&(i._geometry=rs(i._geometry)),e.arcade.modules.arcadeUtils.updateExecContext(e.arcade.context,t)}}function en(e){if(e!=null){if(Di(e))return e.cachedResult;const t=e.arcade;let i=t?.modules.arcadeUtils.executeFunction(t.func,t.context);return typeof i!="number"&&(e.cachedResult=0,i=0),i}return 0}function tn(e,t=!1){let i=e?.featureExpressionInfo;const r=i?.expression;return t||r==="0"||(i=null),i??null}const rn={cachedResult:0};function Di(e){return e.cachedResult!=null}function sn(e){return e==="0"?0:null}class At{constructor(){this._meterUnitOffset=0,this._renderUnitOffset=0,this._unit="meters",this._metersPerElevationInfoUnit=1,this._featureExpressionInfoContext=null,this.centerPointInElevationSR=null,this.mode=null}get featureExpressionInfoContext(){return this._featureExpressionInfoContext}get meterUnitOffset(){return this._meterUnitOffset}get unit(){return this._unit}set unit(t){this._unit=t,this._metersPerElevationInfoUnit=ts(t)}get requiresSampledElevationInfo(){return this.mode!=="absolute-height"}reset(){this.mode=null,this._meterUnitOffset=0,this._renderUnitOffset=0,this._featureExpressionInfoContext=null,this.unit="meters"}set offsetMeters(t){this._meterUnitOffset=t,this._renderUnitOffset=0}set offsetElevationInfoUnits(t){this._meterUnitOffset=t*this._metersPerElevationInfoUnit,this._renderUnitOffset=0}addOffsetRenderUnits(t){this._renderUnitOffset+=t}geometryZWithOffset(t,i){const r=this.calculateOffsetRenderUnits(i);return this.featureExpressionInfoContext!=null?r:t+r}calculateOffsetRenderUnits(t){let i=this._meterUnitOffset;const r=this.featureExpressionInfoContext;return r!=null&&(i+=en(r)*this._metersPerElevationInfoUnit),i/t.unitInMeters+this._renderUnitOffset}setFromElevationInfo(t){this.mode=t.mode,this.unit=is(t.unit)?t.unit:"meters",this.offsetElevationInfoUnits=t.offset??0}updateFeatureExpressionInfoContext(t,i,r){if(t==null)return void(this._featureExpressionInfoContext=null);const s=t?.arcade;s&&i!=null&&r!=null?(this._featureExpressionInfoContext=Qs(t),Ri(this._featureExpressionInfoContext,bi(s.modules,i,r))):this._featureExpressionInfoContext=t}static fromElevationInfo(t){const i=new At;return t!=null&&i.setFromElevationInfo(t),i}}const nn=Object.freeze(Object.defineProperty({__proto__:null,build:mi,ribbonlineNumRoundJoinSubdivisions:Ce},Symbol.toStringTag,{value:"Module"}));export{si as A,St as B,De as C,fi as D,Oi as E,Rs as F,H as G,yi as H,ls as I,Us as J,Le as K,Ei as R,mt as a,vt as b,Ks as c,tn as d,ft as e,Dt as f,Ri as g,rn as h,gs as i,qe as j,Ws as k,js as l,Vs as m,li as n,At as o,ks as p,Bs as q,Ns as r,bi as s,gt as t,zs as u,oe as v,ae as w,pi as x,vi as y,_e as z};
