import{h as c,r as b,i as w}from"./TimeOnly-58KEB45-.js";import{bs as g,s as S,bw as x,aQ as D,bU as F}from"./main-CnDVnExo.js";import{Z as v}from"./FieldsIndex-BZRQHZ3i.js";const R=["geometry","scale","timeProperties"];function A(n,e){if(e!=null)for(const t of R)e.hasArcadeDependency(t)&&n.add(t);return n}function $(n,e){return d.create(n,e,null,["$feature","$view"])}function E(n,e,t){return d.create(n,e,t,["$feature","$view","$config"])}class d{static async create(e,t,i,r){const{arcade:s,Dictionary:a}=await g();let o;try{o=s.parseScript(e)}catch(m){throw new S("arcade-bad-expression","Failed to parse arcade script",{script:e,error:m})}const l=s.scriptUsesGeometryEngine(o);l&&await s.enableGeometrySupport(),await s.loadDependentModules(new Set,o,null,!1,l);const _={vars:r.reduce((m,T)=>({...m,[T]:null}),{}),spatialReference:t,useAsync:!1},y=s.compileScript(o,_);let u=null;i!=null&&(u=new a(i),u.immutable=!0);const h=new a;return h.immutable=!1,h.setField("scale",0),new d(e,s,o,y,t,h,u,a)}constructor(e,t,i,r,s,a,o,l){this.script=e,this._arcade=t,this._syntaxTree=i,this._compiled=r,this._spatialReference=s,this._viewDict=a,this._configDict=o,this._dictionaryCtor=l,this._dependencies=new Map,this._featureReader=new p,this._dependencies.set("geometry",t.scriptTouchesGeometry(this._syntaxTree)),this._dependencies.set("scale",this._arcade.referencesMember(this._syntaxTree,"scale")),this._dependencies.set("timeProperties",this._arcade.scriptUsesViewProperties(this._syntaxTree,["timeProperties"]))}evaluate(e,t){const i=t.$view?.timeZone;if(t.$view){let r;if(this._viewDict.setField("scale",t.$view.scale),t.$view.timeProperties!=null){const{currentStart:s,currentEnd:a}=t.$view.timeProperties;r=new this._dictionaryCtor({currentStart:s!=null?i!=null?c.epochToArcadeDate(s,i):c.unknownEpochToArcadeDate(s):void 0,currentEnd:a!=null?i!=null?c.epochToArcadeDate(a,i):c.unknownEpochToArcadeDate(a):void 0,startIncluded:!0,endIncluded:!0})}this._viewDict.setField("timeProperties",r)}return this._compiled({vars:{$view:this._viewDict,$config:this._configDict,$feature:e},spatialReference:this._spatialReference,timeZone:i})}repurposeFeature(e,t){return this._featureReader.bind(e,t,this._spatialReference),this._featureReader}references(e){return this._dependencies.get(e)??!1}}class p{constructor(){this._boundTarget=null,this._boundSchema={fields:null,fieldsIndex:null,spatialReference:null,get geometryType(){return null},get objectIdField(){return null}},this.arcadeDeclaredClass="esri.arcade.Feature",this._contextTimeZone=null}bind(e,t,i){const r=t??new v(f(e.attributes));this._boundTarget=e,this._boundSchema.fields=r.fields,this._boundSchema.fieldsIndex=r,this._boundSchema.spatialReference=i}_getField(e){return this._boundSchema.fieldsIndex.get(e)}get contextTimeZone(){return this._contextTimeZone}set contextTimeZone(e){this._contextTimeZone=e}readArcadeFeature(){return this}hasField(e){return this._boundSchema.fieldsIndex.has(e)}geometry(){if("fromJSON"in this._boundTarget)return this._boundTarget.geometry;const e=x(this._boundTarget.geometry);if(e){if(!this._boundSchema.spatialReference)throw new Error("InternalError: Expected spatial reference to be defined");e.spatialReference=this._boundSchema.spatialReference}return e}isUnknownDateTimeField(e){return this._boundSchema.fieldsIndex.getTimeZone(e)===D}field(e,t=!0){const i=this._getField(e);if(i){const r=this._boundTarget.attributes[i.name];if(r==null)return null;switch(i.type){case"date-only":case"esriFieldTypeDateOnly":return w.fromReader(r);case"time-only":case"esriFieldTypeTimeOnly":return b.fromReader(r);case"esriFieldTypeTimestampOffset":case"timestamp-offset":return c.fromReaderAsTimeStampOffset(r);case"date":case"esriFieldTypeDate":return this.isUnknownDateTimeField(e)?c.unknownEpochToArcadeDate(r):c.epochToArcadeDate(r,this.contextTimeZone??F);default:return r}}if(t)throw new Error(`Field ${e} does not exist`);return null}setField(e,t){throw new Error("Unable to update feature attribute values, feature is readonly")}keys(){return this._boundSchema.fieldsIndex.fields.map(e=>e.name)}castToText(e=!1){return JSON.stringify(this._boundTarget)}gdbVersion(){return null}fullSchema(){return this._boundSchema}castAsJson(e=null){return{attributes:this._boundTarget.attributes,geometry:e?.keepGeometryType===!0?this.geometry():this.geometry()?.toJSON()??null}}castAsJsonAsync(e=null,t=null){return Promise.resolve(this.castAsJson(t))}}function f(n){const e=[];for(const t in n)e.push({name:t,alias:t,type:typeof n[t]=="string"?"esriFieldTypeString":"esriFieldTypeDouble"});return e}export{f as _,A as d,p as f,$ as h,E as m};
