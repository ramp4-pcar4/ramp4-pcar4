import{cG as ke,cJ as Fe,J as A,bL as Es,bM as js,am as Ws,eq as Ls,dx as ut,a9 as _t,ao as y,i as J,bp as Us,aG as H,l$ as Gs,aJ as pt,il as zs,cN as ft,lI as gt,lv as Z,hU as Ce,N as yt,O,g3 as Ns,c7 as mt,bt as Bs,n as bt,ab as Oe,v as j,x as K,z as It,s as T,c4 as Vs,fZ as ee,e as te,aS as Qs,R as vt,fg as $s,a0 as Me,iq as Xs,im as Ys,af as Js,fa as wt,bS as Hs,ig as Zs,gA as Ks,L as er}from"./main-CnDVnExo.js";import{O as Te,c as tr}from"./workers-COYZ-Fi7.js";import{j as sr}from"./TileInfo-DhBuU59d.js";import{a as k}from"./definitions-MCCItX4r.js";import{y as xt,a as St,s as qe}from"./diffUtils-CxEHnaq2.js";import{e as Ae,i as rr,h as ir,a as ar}from"./enums-COb5EYx9.js";import{e as Re}from"./TileKey-CPiI3emG.js";import{b as kt,l as se,p as Pe,i as re,u as F,c as nr,v as De,a as or,x as cr,d as dr,e as lr}from"./AttributeStore-BlJ_Om5V.js";import{r as W,s as L,t as hr,i as Ee,_ as ur,e as Ft}from"./streamLayerUtils-Dae818Yl.js";import{s as _r}from"./DictionaryScriptEvaluator-DFzQHX4p.js";import{r as pr,y as fr}from"./MeshWriterRegistry-UgMYiKjp.js";import{QueueProcessor as Ct}from"./QueueProcessor-CdvWemgp.js";import{M as gr,s as Ot,w as yr,b as mr,T as br,g as E,X as Mt,R as Ir,l as Tt,t as B,a as vr,m as qt}from"./featureConversionUtils-DJPd03TP.js";import{s as q}from"./OptimizedFeature-Ch3Mnc5k.js";import{x as wr,j as ie}from"./queryUtils-Djye3faZ.js";import{Z as ae}from"./FieldsIndex-BZRQHZ3i.js";import{e as xr}from"./optimizedFeatureQueryEngineAdapter-CI7c99qH.js";import{L as At}from"./QueryEngine-BTiuHzq6.js";import{d as Sr}from"./ArcadeExpression-Daidjqw4.js";import{e as w}from"./OptimizedGeometry-BBZXbf77.js";import"./vec2-BnynUbeJ.js";import"./vec2f64-CkowXrDb.js";import{s as je}from"./memoryEstimations-HljZip0q.js";import{u as We,i as Rt,a as Pt,s as Dt}from"./quantizationUtils-B2004thd.js";import{s as kr,i as Fr,u as Cr}from"./operatorGeodeticDensify-B069zQt_.js";import{e as Or}from"./geodeticCurveType-D_etKnbP.js";import{P as Mr}from"./normalizeUtils-CahpTq5j.js";import{a as Tr}from"./normalizeUtilsSync-tIpeJyPX.js";import{m as qr,c as Le,S as Ar}from"./query-BanlwgJG.js";import{R as Et,b as Rr,p as Pr}from"./Query-B3kr4GG5.js";import{c as Dr}from"./displayFilterUtils-CnsIIXf2.js";import{u as Er}from"./TimeExtent-CrpfETyH.js";import{n as jr}from"./uuid-Dj9mdEVg.js";import{$ as jt}from"./ogcFeatureUtils-1BPFapdU.js";import{a as Wr}from"./pbf-B0wvdwKJ.js";import{e as Lr,J as Ur,Q as Gr,E as ne}from"./bundle-CEMFEMun.js";import{b as zr,h as Nr}from"./pbfQueryUtils-B4u12MoN.js";import{t as Wt}from"./CircularArray-DaQg3PQl.js";import{createConnection as Br}from"./createConnection-Bx7uGt4D.js";import{d as Vr}from"./UpdateTracking2D-Cx4qEMNv.js";let Qr=class{constructor(i){this._client=i,this.layerView=this._client.createInvokeProxy(""),this.container=this._client.createInvokeProxy("container"),this._eventLog=this._client.createInvokeProxy("eventLog")}onEvent(i){Te(this._eventLog.onEvent(i))}};const oe=1,Ue=2,ce=4,Ge=8,ze=16,de=32,Ne=64,le=128;function Be(i){switch(i){case oe:case Ge:case de:return-1;case Ue:case Ne:return 0;case ce:case ze:case le:return 1}}function Ve(i){switch(i){case oe:case Ue:case ce:return-1;case Ge:case ze:return 0;case de:case Ne:case le:return 1}}const Lt=oe|Ge|de,Ut=ce|ze|le,Gt=oe|Ue|ce,zt=de|Ne|le;let $r=class{constructor(i,e,t,s,r=0){this.tileKey=i,this._bufferingEnabled=e,this._sizeHint=r,this._meshes={self:new kt(this.id,this._sizeHint),neighbors:new Array},this._currentRecordOverlaps=0,this._currentEntityOverlaps=0;const a=s?1:0;this._copyBufferedDataIntoSelf=t&&this._bufferingEnabled&&i.level===a}get id(){return this.tileKey.id}vertexStart(){return this._meshes.self.vertexStart()??0}vertexCount(){return this._meshes.self.vertexCount()}indexCount(){return this._meshes.self.indexCount()}indexEnsureSize(i){this._meshes.self.indexEnsureSize(i)}entityStart(i,e=i){this._currentEntityOverlaps=0,this._meshes.self.entityStart(i,e)}entityRecordCount(){return this._meshes.self.entityRecordCount()}entityEnd(){if(this._meshes.self.entityEnd(),this._bufferingEnabled){if(this._copyBufferedDataIntoSelf)return;for(let i=0;i<8;i++){const e=1<<i;this._currentEntityOverlaps&e&&this._meshes.neighbors[i].entityEnd()}}}recordStart(i,e,t){this._currentRecordOverlaps=0,this._meshes.self.recordStart(i,e,t)}recordEnd(i=0){const e=this._meshes.self.recordEnd(this._currentRecordOverlaps);return e&&this._currentRecordOverlaps!==0?(this._copyIntoNeighbors(),this._currentEntityOverlaps|=this._currentRecordOverlaps,!0):e}recordBounds(i,e,t,s){this._bufferingEnabled&&this._addOverlap(i,e,t,s)}recordCount(){return this._meshes.self.recordCount()}metricStart(i){this._meshes.self.metricStart(i)}metricBoxWrite(i){this._meshes.self.metricBoxWrite(i)}metricEnd(){this._meshes.self.metricEnd()}vertexWrite(i){this._meshes.self.vertexWrite(i)}vertexWriteF32(i){this._meshes.self.vertexWriteF32(i)}vertexWriteRegion(i){this._meshes.self.vertexWriteRegion(i)}indexWrite(i){this._meshes.self.indexWrite(i)}serialize(i){const e={message:[],transferList:[]},t=this._meshes.self.serialize();return e.message.push({tileId:this.tileKey.id,...t.message}),e.transferList.push(...t.transferList),this._meshes.neighbors.forEach((s,r)=>{const a=s.serialize(),n=1<<r,o=Be(n),c=Ve(n),d=new Re(this.tileKey).getNormalizedNeighbor(o,c,i);e.message.push({tileId:d.id,...a.message}),e.transferList.push(...a.transferList)}),e}_addOverlap(i,e,t,s){const r=Math.min(k/2,t),a=Math.min(k/2,s),n=255^((i<0+r?Ut:i>=k-r?Lt:Ut|Lt)|(e<0+a?zt:e>=k-a?Gt:zt|Gt));this._currentRecordOverlaps|=n}_copyIntoNeighbors(){for(let i=0;i<8;i++){const e=1<<i;if(this._currentRecordOverlaps&e){if(this._copyBufferedDataIntoSelf){const a=-Be(e)*k,n=-Ve(e)*k;if(n!==0)continue;this._meshes.self.copyLast(a,n);continue}if(!this._meshes.neighbors[i]){const a=Math.floor(this._sizeHint/16);this._meshes.neighbors[i]=new kt(e,a)}const t=this._meshes.neighbors[i],s=-Be(e)*k,r=-Ve(e)*k;t.copyLastFrom(this._meshes.self,s,r)}}}},Xr=class{},R=class ps{constructor(){this._defaultResult=null,this._backgroundFillResult=null}static async from(e,t){const s=new ps;return s.setDefault(await e.createMeshWriters(t.meshes)),s}size(){return 1}getDefault(){return this._defaultResult}setDefault(e){this._defaultResult=e}getBackgroundFill(){return this._backgroundFillResult}setBackgroundFill(e){this._backgroundFillResult=e}hasArcadeDependency(e){return this._defaultResult?.some(t=>t.hasArcadeDependency(e))??!1}match(e,t,s){const r=this.doMatch(e,t)||this.getDefault();if(r&&r.length>0){const a=this.getBackgroundFill();if(a)return[...a,...r]}return r}getSortKey(e,t){return 0}doMatch(e,t){return null}async fetchResources(e,t){}},Yr=class fs extends R{static async fromDictionaryRenderer(e,t){const s=await _r.from(t.dictionaryInfo,t.userConfig,t.fieldMap);return new fs(e,s)}constructor(e,t){super(),this._context=e,this._evaluator=t,this._controlStringToPromise=new Map,this._controlStringToGroup=new Map}async fetchResources(e,t){const s=t.getCursor(),r=new Set;for(;s.next();){const n=this._evaluateControlString(s);n&&r.add(n)}const a=Array.from(r.values()).map(n=>this._ensureGroup(e,n));await Promise.all(a)}match(e,t){const s=this._evaluateControlString(e);return s?this._controlStringToGroup.get(s):null}_evaluateControlString(e){const t=e.readLegacyFeatureWorldSpace();return this._evaluator.evaluate(t,0,e.fields,null)}_ensureGroup(e,t){let s=this._controlStringToPromise.get(t);return s==null&&(s=this._fetchGroup(e,t),this._controlStringToPromise.set(t,s)),s}async _fetchGroup(e,t){const s=await e.fetchDictionaryResourceImmediate({type:"dictionary-request",controlString:t});if(!s)return;const r=await this._context.createMeshWriters(s.meshes);this._controlStringToGroup.set(t,r)}},Jr=class gs extends R{constructor(e,t){super(),this._intervals=[],this._isMaxInclusive=t,this._field=e}static async fromIntervalSchema(e,t){const s=await e.storage.createComputedField(t),r=new gs(s,t.isMaxInclusive);await Promise.all(t.intervals.map(async o=>{const c=await e.createMeshWriters(o.meshes);r.add(o,c)}));const a=await e.createMeshWriters(t.defaultSymbol);r.setDefault(a);const n=await e.createMeshWriters(t.backgroundFill);return r.setBackgroundFill(n),r}add(e,t){this._intervals.push({interval:e,result:t}),this._intervals.sort((s,r)=>s.interval.min-r.interval.min)}size(){return super.size()+this._intervals.length}hasArcadeDependency(e){return this._field?.hasArcadeDependency(e)||this._intervals.some(t=>t.result.some(s=>s.hasArcadeDependency(e)))}doMatch(e,t){const s=this._field?.read(e,t);if(s==null||isNaN(s)||s===1/0||s===-1/0)return null;for(let r=0;r<this._intervals.length;r++){const{interval:a,result:n}=this._intervals[r],o=s>=a.min,c=this._isMaxInclusive?s<=a.max:s<a.max;if(o&&c)return n}return null}},Hr=class ys extends R{static async fromLabelSchema(e,t){const s=t.classes.map(async a=>{const n=await e.createMeshWriters(a.meshes);return{minScale:a.minScale,maxScale:a.maxScale,meshes:n,expression:null,where:await e.storage.createWhereClause(a.where)}}),r=await Promise.all(s);return new ys(r)}constructor(e){super(),this._labels=e}match(e,t,s){if(!this._labels.length)return null;const r=this._getLabels(t.$view.scale),a=[];for(const n of r)n.where&&!n.where(e,s)||a.push(...n.meshes);return a}hasArcadeDependency(e){return this._labels.some(t=>t.meshes.some(s=>s.hasArcadeDependency(e)))}_getLabels(e){return this._labels.filter(t=>this._validForTileScale(t,e))}_validForTileScale(e,t){const s=t-t/4,r=t+t/2;return(!e.minScale||e.minScale>=s)&&(!e.maxScale||e.maxScale<=r)}},Zr=class ms extends R{constructor(e,t){super(),this._defaultSymbolSortKey=0,this._nullResult=null,this._resultsMap=new Map,this._fields=[],this._fields=e,this._separator=t||""}static async fromMatcherSchema(e,t){const s=t.expression?[e.storage.createComputedField({expression:t.expression})]:[t.field?e.storage.createComputedField({field:t.field}):null,t.field2?e.storage.createComputedField({field:t.field2}):null,t.field3?e.storage.createComputedField({field:t.field3}):null],r=(await Promise.all(s)).filter(c=>!!c),a=new ms(r,t.fieldDelimiter),n=await e.createMeshWriters(t.defaultSymbol);a.setDefault(n);const o=await e.createMeshWriters(t.backgroundFill);return a.setBackgroundFill(o),await Promise.all(t.map.map(async(c,d)=>{const l=await e.createMeshWriters(c.symbol);c.value==="<Null>"?a.setNullResult(l):a.add(c.value,l,d+1)})),a}setNullResult(e){this._nullResult=e}getSortKey(e,t){const s=this._getValueFromFields(e,t);if(s==null||s===""||s==="<Null>")return 0;const r=this._resultsMap.get(s.toString());return r?r.sortKey:this._defaultSymbolSortKey}add(e,t,s){this._resultsMap.set(e.toString(),{meshWriters:t,sortKey:s}),this._defaultSymbolSortKey=Math.max(this._defaultSymbolSortKey,s+1)}size(){return super.size()+this._resultsMap.size}hasArcadeDependency(e){return this._fields.some(t=>t.hasArcadeDependency(e))||[...this._resultsMap.values()].some(t=>t.meshWriters.some(s=>s.hasArcadeDependency(e)))||this._nullResult?.some(t=>t.hasArcadeDependency(e))||!1}doMatch(e,t){const s=this._getValueFromFields(e,t);if(this._nullResult!==null&&(s==null||s===""||s==="<Null>"))return this._nullResult;if(s==null)return null;const r=s.toString();return this._resultsMap.get(r)?.meshWriters}_getValueFromFields(e,t){const s=[];for(const r of this._fields){const a=r.read(e,t);a==null||a===""?s.push("<Null>"):s.push(a)}return s.join(this._separator)}};async function P(i,e){switch(e.type){case"simple":case"heatmap":case"dot-density":case"pie-chart":return R.from(i,e);case"interval":return Jr.fromIntervalSchema(i,e);case"dictionary":return Yr.fromDictionaryRenderer(i,e);case"label":return Hr.fromLabelSchema(i,e);case"map":return Zr.fromMatcherSchema(i,e);case"subtype":return Kr.fromSubtypes(i,e);case"cluster":return ei.fromClusterSchema(i,e);case"track":return ti.fromTrackSchema(i,e);default:throw new Error("Impl")}}let Kr=class bs extends R{constructor(e,t){super(),this._subMatchers=e,this._subtypeField=t}static async fromSubtypes(e,t){const s=new Map,r=[];for(const a in t.renderers){const n=parseInt(a,10),o=P(e,t.renderers[a]).then(c=>s.set(n,c));r.push(o)}return await Promise.all(r),new bs(s,t.subtypeField)}match(e,t,s){const r=e.readAttribute(this._subtypeField),a=this._subMatchers.get(r);return a?a.match(e,t,s):null}hasArcadeDependency(e){for(const t of this._subMatchers.values())if(t.hasArcadeDependency(e))return!0;return!1}},ei=class Is extends R{static async fromClusterSchema(e,t){const[s,r]=await Promise.all([P(e,t.feature),P(e,t.cluster)]);return new Is(s,r)}constructor(e,t){super(),this._featureMatcher=e,this._clusterMatcher=t}match(e,t,s){return e.readAttribute("cluster_count")===1?this._featureMatcher.match(e,t,s):this._clusterMatcher.match(e,t,s)}hasArcadeDependency(e){return this._featureMatcher.hasArcadeDependency(e)||this._clusterMatcher.hasArcadeDependency(e)}},ti=class vs extends R{static async fromTrackSchema(e,t){const[s,r,a]=await Promise.all([P(e,t.previousObservation),P(e,t.latestObservation),P(e,t.trackLine)]);return new vs(s,r,a)}constructor(e,t,s){super(),this._previousObservationMatcher=e,this._latestObservationMatcher=t,this._trackLineMatcher=s}match(e,t,s){switch(e.readAttribute(W)){case L.TrackLine:return this._trackLineMatcher.match(e,t,s);case L.LatestObservation:return this._latestObservationMatcher.match(e,t,s);case L.PreviousObservation:return this._previousObservationMatcher.match(e,t,s)}return null}hasArcadeDependency(e){return this._trackLineMatcher.hasArcadeDependency(e)||this._latestObservationMatcher.hasArcadeDependency(e)||this._previousObservationMatcher.hasArcadeDependency(e)}},si=class ws extends Xr{static async create(e,t){const s=await P(e,t.symbology),r=t.labels?await P(e,t.labels):null;return new ws(s,r)}constructor(e,t){super(),this._symbology=e,this._labels=t}destroy(){}async enqueueMatcherRequests(e,t){await Promise.all([this._symbology.fetchResources(e,t),this._labels?.fetchResources(e,t)])}enqueueWriterRequests(e,t,s,r){const a=this._symbology.match(t,s,r);if(a){for(const n of a)n.enqueueRequest(e,t,s);if(this._labels){const n=this._labels.match(t,s,r);if(!n)return;for(const o of n)o.enqueueRequest(e,t,s)}}}write(e,t,s,r,a,n){const o=this._symbology.match(s,r,a);if(o){for(const c of o)c.write(e,t,s,r,n);if(e.entityRecordCount()>=1&&this._labels){const c=this._labels.match(s,r,a);if(!c)return;for(const d of c)d.setReferences(o),d.write(e,t,s,r,n)}}}getSortKey(e,t){return this._symbology.getSortKey(e,t)}hasArcadeDependency(e){return!(!this._symbology.hasArcadeDependency(e)&&!this._labels?.hasArcadeDependency(e))}},ri=class{constructor(i,e,t,s,r){this.storage=i,this.proxy=e,this.viewParams=t,this.registry=s,this.fieldsMap=r}async createMeshWriters(i){const e=i.map(t=>this.registry.createMeshWriter(this.storage,this.proxy,this.viewParams,t,this.fieldsMap));return Promise.all(e)}},ii=class{constructor(i){this._outstandingMessages=[],this._queue=new Ct({concurrency:i.concurrency,process:e=>i.process(e)})}async push(i){if(i.end)return await Promise.all(this._outstandingMessages),await this._queue.push(i),void(this._outstandingMessages=[]);const e=this._queue.push(i);return this._outstandingMessages.push(e),e}},Qe=class at{static async create(e,t){if(t.statisticType==="count"){const r=new pr(1);return new at(t.name,t.alias,t.type,t.statisticType,r)}const s=await e.createComputedField({expression:t.onStatisticExpression?.expression,field:t.onStatisticField});return new at(t.name,t.alias,t.type,t.statisticType,s)}constructor(e,t,s,r,a){this.name=e,this.alias=t,this.type=s,this.statisticType=r,this.computed=a}},he=class{constructor(i){this.subscription=i,this.handledChunks=new Set}destroy(){}},Nt=class{constructor(i,e,t){this._source=i,this._attributeStore=e,this._sqlOptions=t,this._sendStates=new Map}destroy(){}get enablePixelBuffering(){return!0}get isAggregate(){return!1}onSubscribe(i){const e=this.createState(i);this._sendStates.set(i.key.id,e),this.updateChunks()}onUnsubscribe(i){this._sendStates.get(i.key.id)?.destroy(),this._sendStates.delete(i.key.id)}get hasSubscribers(){return this._sendStates.size>0}requiresInvalidation(){return!1}invalidate(){const i=Array.from(this._sendStates.values());this._sendStates.clear();for(const e of i)e.destroy(),this.onSubscribe(e.subscription)}invalidateAttributeData(i){}hasArcadeDependency(i){return!1}getFeatureObjectIdsForAggregate(i){throw new Error("InternalError: AggregateId lookup not supported")}getDisplayIds(i){return this.displayMap(i,e=>e,e=>e)}getDisplayAndObjectIds(i){return this.displayMap(i,e=>e,(e,t,s)=>[e,s])}afterUpdateChunks(){}},$e=class extends Nt{constructor(i,e,t,s,r){super(i,e,r),this.spatialReference=t,this.aggregateFields=s,this._arcadeDependencies=new Set,this.events=new ke,this.featureAdapter=xr;for(const a of s)Sr(this._arcadeDependencies,a.computed)}get aggregateQueryEngine(){return this._aggregateQueryEngine||(this._aggregateQueryEngine=new At({featureStore:this,fieldsIndex:this._metadata.fieldsIndex,geometryType:this._metadata.geometryType,featureIdInfo:this._metadata.featureIdInfo,spatialReference:this.spatialReference})),this._aggregateQueryEngine}get isAggregate(){return!0}removeChunks(i){}hasArcadeDependency(i){return this._arcadeDependencies.has(i)}forEach(i){return this.forEachAggregateWorldSpace(i)}forEachInBounds(i,e){}forEachBounds(i,e){const t=Fe();for(const s of i){const r=gr(t,s.geometry,!1,!1);r&&e(r)}}},U=class{constructor(i,e,t,s,r){this.subscription=i,this.reader=e,this.clear=t,this.end=s,this.debugInfo=r,this.type="append"}get id(){return this.subscription.tile.id}createMessage(i,e,t){return{type:"append",clear:this.clear,id:this.id,append:i,end:this.end,debugInfo:this.debugInfo,subscriptionVesrion:this.subscription.version,version:e,attributeEpoch:t}}},Xe=class{constructor(i,e,t,s,r){this.subscription=i,this.reader=e,this.remove=t,this.end=s,this.debugInfo=r,this.type="update"}get id(){return this.subscription.tile.id}createMessage(i,e,t){return{type:"update",id:this.id,modify:i,debugInfo:this.debugInfo,remove:this.remove,version:e,subscriptionVesrion:this.subscription.version,end:this.end,attributeEpoch:t}}},ai=class extends he{constructor(i,e){super(i),this.bins=new Map,this.featureCache=new Map,this.done=!1,this._store=e}reset(){this.destroy(),this.done=!1}destroy(){const i=this.subscription.tile.key.level;for(const e of this.featureCache.keys())this._store.releaseDisplayIdForObjectId(`${e}.${i}`);this.bins.clear(),this.featureCache.clear(),this.handledChunks.clear()}get tile(){return this.subscription.tile}*featuresWorldSpace(){for(const i of this.featureCache.values()){const e=i.clone();e.geometry&&yr(e.geometry,e.geometry,!1,!1,this.subscription.tile.transform),yield e}}},ni=class xs extends $e{static async create(e,t,s,r,a,n){const o=new se({spatialReference:t}),c=await Promise.all(e.fields.map(async l=>Qe.create(o,l))),d=e.featureFilter?await Pe.create({geometryType:s.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:s.metadata.timeInfo,fieldsIndex:s.metadata.fieldsIndex,spatialReference:t,filterJSON:e.featureFilter}):null;return e.index.type==="geohash"&&await wr(t,A.WGS84),new xs(e,d,a,c,t,s,r,n)}constructor(e,t,s,r,a,n,o,c){super(n,o,a,r,c),this._schema=e,this._featureFilter=t,this._arcadeContextInfo=s,this._metadata=re.createFeature({geometryType:"esriGeometryPolygon",featureIdInfo:{type:"object-id",fieldName:"aggregateId"},fieldsIndex:new ae(e.fields).toJSON(),globalIdField:null,spatialReference:n.metadata.spatialReference,outSpatialReference:n.metadata.outSpatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,dateFieldsTimeZone:null,typeIdField:null,types:null})}createState(e){return new ai(e,this._attributeStore)}async*applyOverrideUpdate(e){for(const t of this._sendStates.values())t.reset(),yield new U(t.subscription,F.empty(this._source.metadata),!0,!1,{})}displayMap(e,t,s){const r=new Map(e.map(n=>[t(n),n])),a=[];for(const n of this._sendStates.values())for(const o of n.featuresWorldSpace()){const{objectId:c,displayId:d}=o,l=r.get(c);if(l!=null){const h=s(d,l,c);a.push(h),r.delete(c)}}return a}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const a of this._sendStates.values())for(const n of a.featuresWorldSpace())t.has(n.displayId)&&!s.has(n.objectId)&&(n.geometry&&r.push({...Ot(n,this._metadata.geometryType,!1,!1),displayId:n.displayId}),s.add(n.objectId));return{features:[],aggregates:r,tracks:[]}}getFeatureObjectIdsForAggregate(e){for(const t of this._sendStates.values())for(const s of t.bins.values())if(s.id===e)return Array.from(s.containedObjectIds);return[]}async*updateChunks(){for(const e of this._sendStates.values())yield*this._update(e,this._source)}forEachAggregateWorldSpace(e){const t=new Set;for(const s of this._sendStates.values())for(const r of s.featuresWorldSpace())t.has(r.objectId)||(e(r),t.add(r.objectId))}_createIndexOptions(e){switch(this._schema.index.type){case"geohash":return{type:"geohash",fields:this.aggregateFields,featureFilter:this._featureFilter,geohashLevel:this._schema.index.fixBinLevel,spatialReference:this.spatialReference,arcadeContextInfo:this._arcadeContextInfo,scale:e.scale,sqlOptions:this._sqlOptions};case"grid":{const t=this._schema.index.fixedBinLevel,s=t!=null?e.tileInfoView.getLODInfoAt(t).scale:e.scale;return{type:"grid",fields:this.aggregateFields,cellSize:this._schema.index.size,featureFilter:this._featureFilter,spatialReference:this.spatialReference,arcadeContextInfo:this._arcadeContextInfo,scale:s,sqlOptions:this._sqlOptions}}}}async*_update(e,t){const{handledChunks:s,subscription:r,bins:a,featureCache:n}=e,o=r.tile;if(e.done)return;for(const _ of t.chunks()){if(s.has(_.chunkId))continue;s.add(_.chunkId);const f=_.queryInfo;if("tileId"in f){const m=new Re(f.tileId);if(m.level!==o.level||m.world!==o.key.world)continue}_.getAggregateIndex(this._createIndexOptions(e.tile)).putBounded(a,e.tile.extent,e.tile.resolution)}const c=[],d=r.tile.transform,l=r.tile.key.level;for(const _ of a.values()){let f=n.get(_.id);if(f)f.attributes=_.getAttributes();else{const m=_.getGeometry(this.spatialReference,d);f=new q(m,_.getAttributes(),null,_.id),m||(f.centroid=_.getGeometricCentroid(this.spatialReference,d)),f.displayId=this._attributeStore.createDisplayIdForObjectId(`${f.objectId}.${l}`),n.set(_.id,f)}c.push(f)}this.events.emit("changed"),e.done=!t.updateTracking.updating;const h=F.fromOptimizedFeatures(c,this._metadata,d),u=h.getCursor(),p=e.subscription.tile.createArcadeEvaluationOptions(this._arcadeContextInfo);for(;u.next();)this._attributeStore.setAttributeData(u.getDisplayId(),u,p,this._sqlOptions);yield new Xe(e.subscription,h,[],e.done,{})}},Bt=class{constructor(i){this._statistics=i}get statistics(){return this._statistics}};const Vt=Math.PI/180;let Ye=class nt{static create(e){return new nt(e.map(t=>oi(t)))}constructor(e){this._statistics=e}values(){return this._statistics.values()}insert(e,t){for(const s of this._statistics)s.insert(e,t)}merge(e){for(let t=0;t<this._statistics.length;t++){const s=this._statistics[t],r=e._statistics[t];if(s.field.name!==r.field.name)throw new Error("InternalError: Tried to merge incompatible statistics");s.merge(r)}}clone(){return new nt(this._statistics.map(e=>e.clone()))}};function oi(i){switch(i.statisticType){case"min":return new ci(i);case"max":return new di(i);case"avg":return new hi(i);case"avg_angle":return new ui(i);case"sum":case"count":return new li(i);case"mode":return new _i(i)}}let G=class{constructor(i){this.field=i}insert(i,e){if(!this.field.computed)return;const t=this.field.computed.read(i,e);nr(t)||this._insertValue(t)}},ci=class Ss extends G{constructor(){super(...arguments),this.type="min",this.value=Number.MAX_VALUE}_insertValue(e){this.value=Math.min(this.value,e)}merge(e){this.value=Math.min(this.value,e.value)}clone(){const e=new Ss(this.field);return e.value=this.value,e}},di=class ks extends G{constructor(){super(...arguments),this.type="max",this.value=Number.MIN_VALUE}_insertValue(e){this.value=Math.max(this.value,e)}merge(e){this.value=Math.max(this.value,e.value)}clone(){const e=new ks(this.field);return e.value=this.value,e}},li=class Fs extends G{constructor(){super(...arguments),this.type="sum",this.value=0}_insertValue(e){this.value+=e}merge(e){this.value+=e.value}clone(){const e=new Fs(this.field);return e.value=this.value,e}},hi=class Cs extends G{constructor(){super(...arguments),this.type="avg",this._total=0,this._count=0}get value(){return this._total/this._count}_insertValue(e){this._total+=e,this._count+=1}merge(e){this._total+=e._total,this._count+=e._count}clone(){const e=new Cs(this.field);return e._total=this._total,e._count=this._count,e}},ui=class Os extends G{constructor(){super(...arguments),this.type="avg_angle",this._x=0,this._y=0,this._count=0}get value(){const e=this._x/this._count,t=this._y/this._count,s=180/Math.PI;return Math.atan2(t,e)*s}_insertValue(e){this._x=this._x+Math.cos(e*Vt),this._y=this._y+Math.sin(e*Vt),this._count+=1}merge(e){this._x+=e._x,this._y+=e._y,this._count+=e._count}clone(){const e=new Os(this.field);return e._x=this._x,e._y=this._y,e._count=this._count,e}},_i=class Ms extends G{constructor(){super(...arguments),this._frequencies=new Map}get value(){let e,t=0;for(const[s,r]of this._frequencies.entries())r>t&&(t=r,e=s);return e}_insertValue(e){const t=this._frequencies.get(e);t!=null?this._frequencies.set(e,t+1):this._frequencies.set(e,1)}merge(e){for(const[t,s]of e._frequencies.entries()){const r=this._frequencies.get(t);r!=null?this._frequencies.set(t,r+s):this._frequencies.set(t,s)}}clone(){const e=new Ms(this.field);return e._frequencies=new Map(this._frequencies),e}},Je=class ye extends Bt{static createId(e,t){return`${e}.${t}`}static create(e,t,s,r){return new ye(e,t,Ye.create(s),r)}constructor(e,t,s,r){super(s),this.gridX=e,this.gridY=t,this._worldUnitsPerCell=r,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._objectIds=new Set}get id(){return ye.createId(this.gridX,this.gridY)}get containedObjectIds(){return this._objectIds}get count(){return this._count}get firstObjectId(){return this._objectIds.values().next().value}get centroidXWorld(){return this._xWorldTotal/this._count}get centroidYWorld(){return this._yWorldTotal/this._count}clone(){const e=new ye(this.gridX,this.gridY,this._statistics.clone(),this._worldUnitsPerCell);return e._count=this._count,e._xWorldTotal=this._xWorldTotal,e._yWorldTotal=this._yWorldTotal,e._firstFeatureAttributes=this._firstFeatureAttributes,e._objectIds=new Set(this._objectIds),e}insert(e,t,s,r){this._count===0?this._firstFeatureAttributes=e.readAttributes():this._firstFeatureAttributes=null,this._count+=1,this._xWorldTotal+=s,this._yWorldTotal+=r,this._statistics.insert(e,t),this._objectIds.add(e.getObjectId())}merge(e){if(e._count!==0){this._count+=e._count,this._firstFeatureAttributes=e._firstFeatureAttributes,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getCentroidX(e){return e==null?this.centroidXWorld:mr(e,this.centroidXWorld)}getCentroidY(e){return e==null?this.centroidYWorld:br(e,this.centroidYWorld)}getGeometry(e,t){const s=this.gridX*this._worldUnitsPerCell,r=this.gridY*this._worldUnitsPerCell,a=new w([4],[s,r,s+this._worldUnitsPerCell,r,s+this._worldUnitsPerCell,r+this._worldUnitsPerCell,s,r+this._worldUnitsPerCell]);if(t!=null){const n=new w;return E(n,a,!1,!1,"esriGeometryPolygon",t)}return a}getCentroid(e){const t=new w([],[this.centroidXWorld,this.centroidYWorld]);if(e!=null){const s=new w;return E(s,t,!1,!1,"esriGeometryPoint",e)}return t}getGeometricCentroid(e,t){const s=this.gridX*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,r=this.gridY*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,a=new w([],[s,r]);if(t!=null){const n=new w;return E(n,a,!1,!1,"esriGeometryPoint",t)}return a}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return this._firstFeatureAttributes!=null?{...e,...this._firstFeatureAttributes}:e}},Qt=class{constructor(i){this._options=i}insert(i,e){const t=i.getCursor(),{arcadeContextInfo:s,scale:r}=this._options,a=Ae(r,s);for(;t.next();)this._insertFeature(t,a,this._options.sqlOptions,e)}_insertFeature(i,e,t,s){const{featureFilter:r}=this._options;if(r!==null&&!r.check(i,t))return;let a=0,n=0;if(i.geometryType==="esriGeometryPoint")a=i.readXWorldSpace(),n=i.readYWorldSpace();else{if(s){const c=i.readCentroidForDisplay();if(c==null)return;const[d,l]=c.coords;if(d<0||d>k||l<0||l>k)return}const o=i.readCentroidWorldSpace();if(o==null)return;a=o.coords[0],n=o.coords[1]}this._insert(i,a,n,e)}};const pi=96;function He(i,e){return Es(i)*js*pi/e}let fi=class extends Qt{constructor(i){super(i),this._cells=new Map,this._pixelsPerMapUnit=He(i.spatialReference,i.scale)}put(i){for(const e of this._cells.values()){const t=i.get(e.id);t?t.merge(e):i.set(e.id,e.clone())}}putBounded(i,e,t){const s=[e.xmin,e.ymin,e.xmax,e.ymax],[r,a,n,o]=s,c=Math.floor(r*this._pixelsPerMapUnit/this._options.cellSize),d=Math.floor(a*this._pixelsPerMapUnit/this._options.cellSize),l=Math.ceil(n*this._pixelsPerMapUnit/this._options.cellSize),h=Math.ceil(o*this._pixelsPerMapUnit/this._options.cellSize);for(let u=d;u<=h;u++)for(let p=c;p<=l;p++){const _=`${p}.${u}`,f=this._cells.get(_);if(!f)continue;const m=i.get(f.id);m?f&&!i.has(f.id)&&m.merge(f):i.set(f.id,f.clone())}}_insert(i,e,t,s){const r=e*this._pixelsPerMapUnit,a=t*this._pixelsPerMapUnit,n=Math.floor(r/this._options.cellSize),o=Math.floor(a/this._options.cellSize);this._getCellOrCreate(n,o).insert(i,s,e,t)}_getCellOrCreate(i,e){const t=Je.createId(i,e);let s=this._cells.get(t);if(!s){const r=1*this._options.cellSize/this._pixelsPerMapUnit;s=Je.create(i,e,this._options.fields,r),this._cells.set(t,s)}return s}},gi=class{constructor(i,e){this.inner=i,this.displayId=e}};const $t=128;let yi=class extends he{constructor(i){super(i),this.didSend=!1,this.done=!1}},mi=class{constructor(i,e,t,s,r){this._level=i,this._scale=e,this._indexOptions=t,this._clusterRadius=s,this._store=r,this._cells=new Map,this._handledChunks=new Set,this._statistics=new Map,this._clusters=new Map}destroy(){this._clearClusters()}_clearClusters(){for(const i of this._clusters.values())this._store.releaseDisplayIdForObjectId(i.inner.id);this._clusters.clear()}*aggregatesWorldSpace(){for(const i of this._clusters.values()){const e=i.inner.getCentroid(null);yield new q(e,i.inner.getAttributes(),null,i.inner.id,i.displayId)}}clusters(){return this._clusters.values()}updateChunks(i,e){let t=!1;for(const n of i){const o=n.queryInfo;"tileId"in o&&new Re(o.tileId).level!==this._level||this._handledChunks.has(n.normalizedChunkId)||(this._handledChunks.add(n.normalizedChunkId),t=!0,n.getAggregateIndex({...this._indexOptions,scale:this._scale}).put(this._cells))}const s={xMin:1/0,yMin:1/0,xMax:-1/0,yMax:-1/0},r=He(this._indexOptions.spatialReference,this._scale),a=this._indexOptions.cellSize;for(const{subscription:n}of e){const o=n.tile.bounds,c=Math.floor(o[0]*r/a),d=Math.floor(o[1]*r/a),l=Math.ceil(o[2]*r/a),h=Math.ceil(o[3]*r/a);s.xMin=Math.min(s.xMin,c),s.yMin=Math.min(s.yMin,d),s.xMax=Math.max(s.xMax,l),s.yMax=Math.max(s.yMax,h)}return this._lastCellBounds!=null&&s.xMin===this._lastCellBounds.xMin&&s.yMin===this._lastCellBounds.yMin&&s.yMin===this._lastCellBounds.yMin&&s.yMax===this._lastCellBounds.yMax||(t=!0,this._lastCellBounds=s),t&&this._clusterCells(s),t}async updateStatistics(i){let e=!1;for(const t of this._clusters.values())t.inner.count>1&&(e=this._updateAggregateStatistics(this._statistics,t.inner)||e);if(e){const t=Array.from(this._statistics.entries()).map(([s,r])=>({fieldName:s,minValue:r.minValue,maxValue:r.maxValue}));await i.container.updateStatistics(this._level,t)}}createAggregateFeatures(i,e){const t=i.subscription,s=[],r=t.tile.transform;for(const a of this._clusters.values()){let n=a.inner.getCentroidX(r);const o=a.inner.getCentroidY(r),c=t.tile.lod,d=c.wrap?c.worldSize[0]:null,l=a.inner.count===1?a.inner.firstObjectId:a.inner.id,h=a.displayId;if(d!=null)if(d===1){const u=new w([],[n,o]),p=new q(u,a.inner.getAttributes(),null,l,h);p.geometry.coords[0]-=k,s.push(p);const _=new w([],[n,o]),f=new q(_,a.inner.getAttributes(),null,l,h);f.geometry.coords[0]+=k,s.push(f)}else n>k+k/2?n-=d*k:n<-256&&(n+=d*k);if(n<k+$t&&n>=-128&&o<k+$t&&o>=-128){const u=new w([],[n,o]),p=new q(u,a.inner.getAttributes(),null,l,h);s.push(p)}}return F.fromOptimizedFeatures(s,e,t.tile.transform)}_clusterCells(i){let e=Array.from(this._cells.values());e=e.sort((n,o)=>o.count-n.count);const t=[];for(const n of this._clusters.values())t.push(n.inner.id);this._clusters.clear();const s=this._clusterRadius*(1/He(this._indexOptions.spatialReference,this._scale)),r=1+this._clusterRadius/this._indexOptions.cellSize,a=new Set;for(const n of e){if(a.has(n.id)||n.gridX<i.xMin||n.gridX>i.xMax||n.gridY<i.yMin||n.gridY>i.yMax)continue;const o=this._store.createDisplayIdForObjectId(n.id),c=new gi(n.clone(),o);a.add(n.id),this._clusters.set(n.id,c);const d=n.centroidXWorld,l=n.centroidYWorld;for(let h=n.gridY-r;h<=n.gridY+r;h++)for(let u=n.gridX-r;u<=n.gridX+r;u++){if(h===n.gridY&&u===n.gridX)continue;const p=this._cells.get(Je.createId(u,h));if(!p||a.has(p.id))continue;const _=Math.abs(p.centroidXWorld-d),f=Math.abs(p.centroidYWorld-l);_<s&&f<s&&(c.inner.merge(p),a.add(p.id))}}for(const n of t)this._store.releaseDisplayIdForObjectId(n)}_updateAggregateStatistics(i,e){let t=!1;for(const s of e.statistics.values()){if(s.field.type==="esriFieldTypeString")continue;const r=s.value,a=s.field,n=i.get(a.name);if(n){const{minValue:o,maxValue:c}=n,d=Math.min(n.minValue,r),l=Math.max(n.maxValue,r);o===d&&c===l||(n.minValue=d,n.maxValue=l,t=!0)}else i.set(a.name,{minValue:r,maxValue:r}),t=!0}return t}};class dt extends $e{static async create(e,t,s,r,a,n,o){const c=new se({spatialReference:s}),d={type:"grid",fields:await Promise.all(t.fields.map(async l=>Qe.create(c,l))),spatialReference:s,featureFilter:t.featureFilter?await Pe.create({geometryType:r.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:r.metadata.timeInfo,fieldsIndex:r.metadata.fieldsIndex,spatialReference:s,filterJSON:t.featureFilter}):null,cellSize:t.clusterRadius/4,arcadeContextInfo:n,sqlOptions:o};return new dt(e,t.clusterRadius,d,t.fields,r,a,o)}constructor(e,t,s,r,a,n,o){super(a,n,s.spatialReference,s.fields,o),this._connection=e,this._clusterRadius=t,this._indexOptions=s,this._cellsPerScale=new Map,this._metadata=re.createFeature({geometryType:"esriGeometryPoint",featureIdInfo:{type:"object-id",fieldName:"aggregateId"},fieldsIndex:new ae([...r,...this._source.metadata.fieldsIndex.fields,{name:"aggregateId",alias:"aggregateId",type:"esriFieldTypeOID"}]).toJSON(),globalIdField:null,spatialReference:a.metadata.spatialReference,outSpatialReference:a.metadata.outSpatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,dateFieldsTimeZone:null,typeIdField:null,types:null})}get enablePixelBuffering(){return!1}invalidate(){super.invalidate();for(const e of this._cellsPerScale.values())e.destroy();this._cellsPerScale.clear()}onSubscribe(e){super.onSubscribe(e),this._requiredLevel=e.tile.level,this._requiredScale=e.tile.scale}createState(e){return new yi(e)}async*applyOverrideUpdate(e){for(const t of this._cellsPerScale.values())t.destroy();this._cellsPerScale.clear();for(const t of this._sendStates.values())t.done=!1}displayMap(e,t,s){const r=new Map(e.map(o=>[t(o),o])),a=[],n=this._getClusterState(this._requiredLevel,this._requiredScale);for(const o of n.clusters()){const c=r.get(o.inner.id);if(c==null){if(o.inner.count===1){const{firstObjectId:d}=o.inner,l=d?r.get(d):null;if(l!=null){const h=s(o.displayId,l,d);a.push(h),r.delete(d)}}}else{const d=s(o.displayId,c,o.inner.id);a.push(d),r.delete(o.inner.id)}}return a}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[],a=[],n=this._getClusterState(this._requiredLevel,this._requiredScale);for(const o of n.aggregatesWorldSpace())if(t.has(o.displayId)&&!s.has(o.displayId)){const c=Ot(o,this._metadata.geometryType,!1,!1);if(s.add(o.displayId),c.attributes.cluster_count===1){r.push({...c,displayId:o.displayId});continue}a.push({...c,displayId:o.displayId})}return{features:r,aggregates:a,tracks:[]}}getFeatureObjectIdsForAggregate(e){const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.clusters())if(s.inner.id===e)return Array.from(s.inner.containedObjectIds);return[]}async*updateChunks(){const e=this._source.chunks();if(!e.length)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale),s=Array.from(this._sendStates.values()).filter(n=>n.subscription.tile.level===this._requiredLevel);if(t.updateChunks(e,s)||!this._source.updateTracking.updating)for(const n of s)n.subscription.tile.level===this._requiredLevel&&(n.didSend=!1,n.done=!1);const r=Array.from(this._sendStates.values()).filter(n=>n.done).map(n=>n.subscription.tile.key),a=new Set(r);for(const n of this._sendStates.values())this._source.updateTracking.updating&&(r.some(o=>o.containsChild(n.subscription.tile.key))||n.subscription.tile.key.getChildKeys().every(o=>a.has(o)))||n.didSend||n.subscription.tile.level!==this._requiredLevel||(n.didSend=!0,yield*this._update(n,t,this._source));await t.updateStatistics(this._connection)}forEachAggregateWorldSpace(e){if(this._requiredLevel==null||this._requiredScale==null)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.aggregatesWorldSpace())e(s)}_getClusterState(e,t){if(e==null||t==null)throw new Error("InternalError: Level and scale must be defined");let s=this._cellsPerScale.get(t);return s||(s=new mi(e,t,this._indexOptions,this._clusterRadius,this._attributeStore),this._cellsPerScale.set(t,s)),s}async*_update(e,t,s){if(e.done)return;const r=t.createAggregateFeatures(e,this._metadata);this.events.emit("changed"),e.done=!s.updateTracking.updating;const a=r.getCursor(),n=e.subscription.tile.createArcadeEvaluationOptions(this._indexOptions.arcadeContextInfo);for(;a.next();)this._attributeStore.setAttributeData(a.getDisplayId(),a,n,this._sqlOptions);yield new U(e.subscription,r,!0,e.done,{})}}let bi=class Ts{static fromReader(e){const t=[],s=e.copy(),r=Fe();for(;s.next();)s.getBounds(r)&&t.push(s.getIndex());const a=rr(9,n=>(s.setIndex(n),{minX:s.getBoundsXMin(),minY:s.getBoundsYMin(),maxX:s.getBoundsXMax(),maxY:s.getBoundsYMax()}));return a.load(t),new Ts(a)}constructor(e){this._index=e}search(e){const t={minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]};return this._index.search(t)}};const Ii=64;function vi(i,e,t,s){const r=[i.xmin,i.ymin,i.xmax,i.ymax],a=Ws.fromExtent(Ls(r,s)),n=ie(a,s,A.WGS84,{densificationStep:e*Ii});if(!n)return null;const o=Mt(new w,n,!1,!1),c=o.coords.filter((m,g)=>!(g%2)),d=o.coords.filter((m,g)=>g%2),l=Math.min(...c),h=Math.min(...d),u=Math.max(...c),p=Math.max(...d),_=Ze(l,h,t,A.WGS84),f=Ze(u,p,t,A.WGS84);return _&&f?{bounds:r,geohashBounds:{xLL:_[0],yLL:_[1],xTR:f[0],yTR:f[1]},level:t}:null}function Ze(i,e,t,s){if(s.isWebMercator){const n=ut(i/_t.radius),o=n-360*Math.floor((n+180)/360),c=[0,0];return Xt(c,0,ut(Math.PI/2-2*Math.atan(Math.exp(-e/_t.radius))),o,t),c}const r=ie({x:i,y:e},s,A.WGS84);if(!r)return null;const a=[0,0];return Xt(a,0,r.y,r.x,t),a}function wi(i,e){let t=-90,s=90,r=-180,a=180;for(let n=0;n<e;n++){const o=Math.ceil((n+1)/2),c=Math.floor((n+1)/2),d=1-n%2,l=30-(3*o+2*c),h=30-(2*o+3*c),u=3*d+2*(1-d),p=2*d+3*(1-d),_=3*d+7*(1-d)<<h,f=(7*d+3*(1-d)<<l&i.geohashX)>>l,m=(_&i.geohashY)>>h;for(let g=u-1;g>=0;g--){const I=(r+a)/2,b=f&1<<g?1:0;r=(1-b)*r+b*I,a=(1-b)*I+b*a}for(let g=p-1;g>=0;g--){const I=(t+s)/2,b=m&1<<g?1:0;t=(1-b)*t+b*I,s=(1-b)*I+b*s}}return[r,t,a,s]}function Xt(i,e,t,s,r){r%2&&(r+=1);let a=0,n=0,o=-90,c=90,d=-180,l=180;for(let h=0;h<r/2;h++){for(let u=0;u<5;u++){const p=(d+l)/2,_=s>p?1:0;a|=_<<29-(u+5*h),d=(1-_)*d+_*p,l=(1-_)*p+_*l}for(let u=0;u<5;u++){const p=(o+c)/2,_=t>p?1:0;n|=_<<29-(u+5*h),o=(1-_)*o+_*p,c=(1-_)*p+_*c}}i[2*e]=a,i[2*e+1]=n}let Yt=class ot extends Bt{static create(e,t,s,r){const a=Ye.create(e),n=new Array(32);for(let o=0;o<n.length;o++)n[o]=null;return new ot(a,t,s,r,n)}constructor(e,t,s,r,a){super(e),this.xNode=t,this.yNode=s,this.depth=r,this.children=a,this._objectIds=new Set,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._xGeohashTotal=0,this._yGeohashTotal=0,this.next=null}get id(){return`${this.xNode}.${this.yNode}`}get containedObjectIds(){return this._objectIds}get count(){return this._count}clone(){const e=new ot(this._statistics.clone(),this.xNode,this.yNode,this.depth,this.children);return e._count=this._count,e._xWorldTotal=this._xWorldTotal,e._yWorldTotal=this._yWorldTotal,e._xGeohashTotal=this._xGeohashTotal,e._yGeohashTotal=this._yGeohashTotal,e.next=this.next,e._objectIds=new Set(this._objectIds),e}insert(e,t,s,r,a,n){this._count+=1,this._xWorldTotal+=t,this._yWorldTotal+=s,this._xGeohashTotal+=r,this._yGeohashTotal+=a,this._statistics.insert(e,n),this._objectIds.add(e.getObjectId())}merge(e){if(e._count!==0){this._count+=e._count,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._xGeohashTotal+=e._xWorldTotal,this._yGeohashTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getCentroid(e){throw new Error("getCentroid not supported for GeohashNode")}getGeometry(e,t){const s=this._getLngLatBounds(),[r,a,n,o]=s,c=ie({rings:[[[r,a],[r,o],[n,o],[n,a],[r,a]]]},A.WGS84,e),d=Mt(new w,c,!1,!1);return t!=null?E(new w,d,!1,!1,"esriGeometryPolygon",t,!1,!1):d}getGeometricCentroid(e,t){const s=this._getLngLatBounds(),[r,a,n,o]=s,c=ie({x:(r+n)/2,y:(a+o)/2},A.WGS84,e),d=Ir(new w,c);return t!=null?E(new w,d,!1,!1,"esriGeometryPoint",t,!1,!1):d}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return e.aggregateCount=this._count,e}find(e,t,s,r,a,n){if(r>=s)return this;const o=1-r%2,c=3*o+2*(1-o),d=2*o+3*(1-o),l=30-a-c,h=30-n-d,u=((e&7*o+3*(1-o)<<l)>>l)+((t&3*o+7*(1-o)<<h)>>h)*(8*o+4*(1-o)),p=this.children[u];return p==null?null:p.find(e,t,s,r+1,a+c,n+d)}_getLngLatBounds(){const e=this.depth,t=Math.ceil(e/2),s=Math.floor(e/2),r=30-(3*t+2*s),a=30-(2*t+3*s),n=this.xNode<<r,o=this.yNode<<a;return wi({geohashX:n,geohashY:o},this.depth)}};class xi{constructor(e){this._fields=e,this._size=0,this._depth=0,this._root=Yt.create(this._fields,0,0,0)}destroy(){}get size(){return this._size}get depth(){return this._depth}find(e,t,s){return this._root.find(e,t,s,0,0,0)}insert(e,t,s,r,a,n,o){let c=this._root,d=0,l=0,h=0;for(;c!==null;){if(c.insert(e,t,s,r,a,o),d>=n)return;const u=Math.ceil((d+1)/2),p=Math.floor((d+1)/2),_=1-d%2,f=30-(3*u+2*p),m=30-(2*u+3*p),g=(r&7*_+3*(1-_)<<f)>>f,I=(a&3*_+7*(1-_)<<m)>>m,b=g+I*(8*_+4*(1-_));l=l<<3*_+2*(1-_)|g,h=h<<2*_+3*(1-_)|I,c.children[b]==null&&(c.children[b]=Yt.create(this._fields,l,h,d+1),this._depth=Math.max(this._depth,d+1),this._size+=1),d+=1,c=c.children[b]}}putBins(e,t){for(const s of this.getNodes(t)){const r=e.get(s.id);r?r.merge(s):e.set(s.id,s.clone())}}getNodes(e){const t=[],{geohashBounds:s,level:r}=e;let a=this._root;for(;a!==null;){const n=a.depth,o=a.xNode,c=a.yNode;if(n>=r){t.push(a),a=a.next;continue}const d=Math.ceil((n+1)/2),l=Math.floor((n+1)/2),h=1-n%2,u=30-(3*d+2*l),p=30-(2*d+3*l),_=~((1<<u)-1),f=~((1<<p)-1),m=(s.xLL&_)>>u,g=(s.yLL&f)>>p,I=(s.xTR&_)>>u,b=(s.yTR&f)>>p,v=o<<3*h+2*(1-h),S=c<<2*h+3*(1-h),x=v+8*h+4*(1-h),C=S+4*h+8*(1-h),D=Math.max(v,m),ve=Math.max(S,g),X=Math.min(x,I),Ps=Math.min(C,b);let Y=null,we=null;for(let xe=ve;xe<=Ps;xe++)for(let Se=D;Se<=X;Se++){const Ds=Se-v+(xe-S)*(8*h+4*(1-h)),N=a.children[Ds];N&&(Y||(Y=N,Y.next=a.next),we&&(we.next=N),we=N,N.next=a.next)}a=Y||a.next}return t}}let Si=class extends Qt{constructor(i){super(i),this._tree=new xi(this._options.fields)}put(i){throw new Error("Geohash tree does not support put")}putBounded(i,e,t){const{geohashLevel:s,spatialReference:r}=this._options,a=vi(e,t,s,r);a!=null&&this._tree.putBins(i,a)}_insert(i,e,t,s){const{geohashLevel:r,spatialReference:a}=this._options,n=Ze(e,t,r,a);n&&this._tree.insert(i,e,t,n[0],n[1],r,s)}},Jt=class me extends De{static from(e,t){if(e instanceof this){const s=new Set(t),r=e._indices.filter(a=>s.has(a));return new me(e._reader,r)}return new me(e.copy(),t)}constructor(e,t){super(e.metadata),this._currentIndex=-1,this._displayTransform=null,this._reader=e,this._indices=t}setTransformForDisplay(e){const t=this._reader.getInTransform();if(t==null)return void(this._displayTransform=We(e));const s=We(t),r=We(e),[a,n]=s.scale,[o,c]=s.translate,[d,l]=r.scale,[h,u]=r.translate,p=a/d,_=n/l,f=(o-h)/d,m=(c-u)/l;this._displayTransform={originPosition:"lowerLeft",scale:[1/p,1/_,1,1],translate:[-f/p,-m/_,0,0]}}getInTransform(){return this._reader.getInTransform()}get fields(){return this._reader.fields}get hasNext(){return this._currentIndex+1<this._indices.length}getSize(){return this._indices.length}getCursor(){return this.copy()}copy(){const e=new me(this._reader.copy(),this._indices);return e._currentIndex=this._currentIndex,e._displayTransform=this._displayTransform,e._processorAttributes=this._processorAttributes,e}get contextTimeZone(){return this._reader.contextTimeZone}set contextTimeZone(e){this._reader.contextTimeZone=e}get usedMemory(){return je+this._reader.usedMemory}setProcessorAttributes(e){this._processorAttributes=Object.assign(this._processorAttributes??{},e)}_nextIndex(){return++this._currentIndex<this._indices.length&&(this._reader.setIndex(this._indices[this._currentIndex]),!0)}next(){for(;this._nextIndex()&&!this._reader._getExists(););return this._currentIndex<this._indices.length}readXForDisplay(){return this._displayTransform?Rt(this._displayTransform,this._reader.readXForDisplay()):this._reader.readXForDisplay()}readYForDisplay(){return this._displayTransform?Pt(this._displayTransform,this._reader.readYForDisplay()):this._reader.readYForDisplay()}readGeometryForDisplay(){return this._displayTransform?this._reader.readGeometryForDisplayTransformed(this._displayTransform):this._reader.readGeometryForDisplay()}readCentroidForDisplay(){const e=this._reader.readCentroidForDisplay()?.clone();if(e){const[t,s]=e.coords;this._displayTransform?(e.coords[0]=Rt(this._displayTransform,t),e.coords[1]=Pt(this._displayTransform,s)):(e.coords[0]=t,e.coords[1]=s)}return e}get geometryType(){return this._reader.geometryType}get hasFeatures(){return this._reader.hasFeatures}get exceededTransferLimit(){return this._reader.exceededTransferLimit}get hasZ(){return this._reader.hasZ}get hasM(){return this._reader.hasM}readAttribute(e,t=!1){const s=this._reader.readAttribute(e,t);return s==null&&this._processorAttributes?this._processorAttributes[e]:s}readAttributes(){return{...this._processorAttributes??{},...this._reader.readAttributes()}}joinAttributes(e){return this._reader.joinAttributes(e)}getBounds(e){return this._reader.getBounds(e)}getAttributeHash(){return this._reader.getAttributeHash()}getObjectId(){return this._reader.getObjectId()}getDisplayId(){return this._reader.getDisplayId()}setDisplayId(e){return this._reader.setDisplayId(e)}setIndex(e){return this._reader.setIndex(e)}getIndex(){return this._reader.getIndex()}readXWorldSpace(){return this._reader.readXWorldSpace()}readYWorldSpace(){return this._reader.readYWorldSpace()}_readX(){return this._reader.readXForDisplay()}_readY(){return this._reader.readYForDisplay()}_readServerCentroid(){return this._reader._readServerCentroid()}readLegacyFeatureForDisplay(){const e=this.readCentroidForDisplay();return{attributes:this.readAttributes(),geometry:this.readLegacyGeometryForDisplay(),centroid:(e&&{x:e.coords[0],y:e.coords[1]})??null}}readLegacyGeometryForDisplay(){const e=this.readGeometryForDisplay();return Tt(e,this.geometryType,!1,!1)}readGeometryArea(){return this._displayTransform?this._reader.readGeometryForDisplayTransformed(this._displayTransform)?.area()??0:this._reader.readGeometryArea()}readGeometryWorldSpace(){return this._reader.readGeometryWorldSpace()}_readGeometry(){return this._reader._readGeometry()}_readAttribute(e,t){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}_readAttributes(){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}readArcadeFeature(){return this._reader.readArcadeFeature()}geometry(){return this._reader.geometry()}field(e){return this._reader.field(e)}hasField(e){return this._reader.hasField(e)}setField(e,t){return this._reader.setField(e,t)}keys(){return this._reader.keys()}castToText(e=!1){return this._reader.castToText(e)}},V=class{size(){return this.reader.getSize()}get fields(){return this.reader.fields}invalidate(){this._aggregateIndex=null,this._aggregateIndexHash=null,this._spatialIndex=null}registerOverrides(i){this.reader.registerOverrides(i),this.invalidate()}queryFeaturesInBounds(i){const e=this._getSpatialIndex().search(i);return Jt.from(this.reader,e)}getAggregateIndex(i){const e=JSON.stringify(i);if(e!==this._aggregateIndexHash){switch(this._aggregateIndexHash=e,i.type){case"grid":this._aggregateIndex=new fi(i);break;case"geohash":this._aggregateIndex=new Si(i)}this._aggregateIndex.insert(this.reader,this.isTiled)}return this._aggregateIndex}_getSpatialIndex(){return this._spatialIndex||(this._spatialIndex=bi.fromReader(this.reader)),this._spatialIndex}};const Ht=1e4,ki=1e3;let Zt=class{constructor(){this.modified=[],this.removed=[]}modify(i){this.modified.push(i)}remove(i){this.removed.push(i)}get isEmpty(){return this.modified.length===0&&this.removed.length===0}},Kt=class qs extends V{constructor(e){super(),this._reader=e,this.chunkId="override",this.normalizedChunkId="override"}static fromFeatures(e,t){const s=F.fromOptimizedFeatures(e,t);return new qs(s)}get reader(){return this._reader}get queryInfo(){return{}}get first(){return!1}get end(){return!1}get isTiled(){return!1}getTileReader(e){if(!this._reader.getSize())return null;const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}},ue=class{constructor(i,e){this.inner=i,this.isWeak=e,this.lastWeak=null}get isStrong(){return!this.isWeak}},Fi=class{constructor(){this._overrides=new Map,this._update=new Zt,this._lastCleanup=0}hasOverride(i){return this._overrides.has(i)}onChunkInsert(i){if(this._overrides.size){const e=i.reader.getCursor();for(;e.next();){const t=e.getObjectId(),s=this._overrides.get(t);if(s?.lastWeak&&(s.lastWeak=null),s?.isWeak){const r=e.readOptimizedFeatureWorldSpace();s.inner=r,this._update.modify(r),this.invalidate()}}}i.registerOverrides(this)}apply(i,e){const{updateWeak:t,removeWeak:s,update:r,remove:a,release:n}=i.commands;this.invalidate();for(const o of t){const c=new ue(o,!0),d=this._overrides.get(o.objectId);d?.isStrong?d.lastWeak=c:(this._overrides.set(o.objectId,c),this._update.modify(o))}for(const o of r){const c=new ue(o,!1),d=this._overrides.get(o.objectId);c.lastWeak=d?.isWeak?d:d?.lastWeak??null,this._overrides.set(o.objectId,c),this._update.modify(o)}for(const o of s){const c=new ue(null,!0),d=this._overrides.get(o);d?.isStrong?d.lastWeak=c:(this._overrides.set(o,c),this._update.remove(o))}for(const o of a){const c=new ue(null,!1),d=this._overrides.get(o);c.lastWeak=d?.isWeak?d:d?.lastWeak??null,this._overrides.set(o,c),this._update.remove(o)}if(n.length){const o=new Set;for(const c of n){const d=this._overrides.get(c);d?.lastWeak?(this._overrides.set(c,d.lastWeak),d.lastWeak.inner==null?this._update.remove(c):this._update.modify(d.lastWeak.inner)):d&&!d.isWeak&&(this._overrides.delete(c),o.add(c))}e.forEachUnsafe(c=>{const d=c.getObjectId();o.has(d)&&(this._update.modify(c.readOptimizedFeatureWorldSpace()),o.delete(d))});for(const c of o.values())this._update.remove(c)}}clearWeakOverrides(){for(const[i,e]of this._overrides.entries())e.isWeak&&this._overrides.delete(i);this.invalidate()}cleanup(i){if(this._overrides.size<Ht)return;const e=performance.now();if(e-this._lastCleanup<ki)return;this._lastCleanup=e;const t=this._getWeakDeletions();if(!(t.size<Ht)){for(const s of i){const r=s.reader.withoutOverrides().getCursor();for(;r.next();){const a=r.getObjectId();t.delete(a)}}for(const s of t)this._overrides.delete(s);t.size&&this.invalidate()}}takeOverrideUpdate(){const i=this._update;return i.isEmpty?null:(this._update=new Zt,i)}asChunk(i){if(!this._chunk){const e=[];for(const t of this._overrides.values())t.inner!=null&&e.push(t.inner);this._chunk=Kt.fromFeatures(e,i)}return this._chunk}invalidate(){this._chunk=null}putWeakObjectIdsFromGlobalIds(i,e,t){for(const[s,r]of this._overrides.entries())if(r.isWeak&&r.inner!=null){const a=r.inner.attributes[t];a&&e.has(a)&&!i.has(a)&&i.set(a,s)}else if(r.lastWeak!=null&&r.lastWeak.inner!=null){const a=r.lastWeak.inner.attributes[t];a&&e.has(a)&&!i.has(a)&&i.set(a,s)}}_getWeakDeletions(){const i=new Set;for(const[e,t]of this._overrides.entries())t.isWeak&&t.inner==null&&i.add(e);return i}},Ci=class extends he{},Oi=class extends Nt{constructor(i,e,t,s){super(i,e,s),this._arcadeContextInfo=t,this.handledChunks=new Set,this.handledChunksForIdCreation=new Set,this.handledChunksForAttributeData=new Set,this._streamLayerDeferredObjectIdsToRemove=[]}destroy(){super.destroy();for(const i of this._source.chunks())this._cleanupChunkIds(i)}invalidateAttributeData(i){this.handledChunksForAttributeData.clear(),this._arcadeContextInfo=i,this._evalOptions!=null&&(this._evalOptions=Ae(this._evalOptions.$view.scale,i))}onSubscribe(i){super.onSubscribe(i),this._evalOptions=i.tile.createArcadeEvaluationOptions(this._arcadeContextInfo)}createState(i){return new Ci(i)}get aggregateQueryEngine(){return null}displayMap(i,e,t){const s=new Map(i.map(a=>[e(a),a])),r=[];for(const a of this._source.chunks()){const n=a.reader.getCursor();for(;n.next();){const o=n.getObjectId(),c=n.getDisplayId(),d=s.get(o);if(d!=null){const l=t(c,d,o);r.push(l),s.delete(o)}}}return r}getDisplayFeatures(i){const e=new Set(i),t=new Set,s=[];for(const r of this._source.chunks()){const a=r.reader.getCursor();for(;a.next();){const n=a.getObjectId(),o=a.getDisplayId();e.has(o)&&!t.has(n)&&(s.push({...a.readLegacyFeatureWorldSpace(),displayId:o}),t.add(n))}}return{features:s,aggregates:[],tracks:[]}}async*applyOverrideUpdate(i){const e=[];for(const a of i.modified){const n=this._attributeStore.createDisplayIdForObjectId(a.objectId);a.displayId=n,e.push(n)}const t=F.fromOptimizedFeatures(i.modified,this._source.metadata).getCursor();for(;t.next();)this._attributeStore.setAttributeData(t.getDisplayId(),t,this._evalOptions,this._sqlOptions);const s=[];for(const a of i.removed){const n=this._attributeStore.getDisplayIdForObjectId(a);n!=null&&s.push(n)}y("esri-2d-update-debug")&&console.debug("FeatureUpdateStrategy.applyLocalEdit",{message:i,modifiedDisplayIds:e,removedDisplayIds:s});const r=Kt.fromFeatures(i.modified,this._source.metadata);this.handledChunks.add(r.chunkId),this.handledChunksForAttributeData.add(r.chunkId),this.handledChunksForIdCreation.add(r.chunkId);for(const a of this._sendStates.values())a.handledChunks.add(r.chunkId),yield new Xe(a.subscription,null,e,!1,r.queryInfo);for(const a of this._sendStates.values()){const n=r.getTileReader(a.subscription.tile);yield new Xe(a.subscription,n,s,!1,r.queryInfo)}for(const a of i.removed)this._attributeStore.releaseDisplayIdForObjectId(a)}async*updateChunks(){if(this._source.chunks().length){await this._updateAttributeData();for(const i of this._sendStates.values())yield*this._update(i)}}removeChunks(i){for(const e of i)this.handledChunks.delete(e.chunkId),this.handledChunksForAttributeData.delete(e.chunkId),this._cleanupChunkIds(e)}afterUpdateChunks(){for(const i of this._streamLayerDeferredObjectIdsToRemove)this._attributeStore.releaseDisplayIdForObjectId(i);this._streamLayerDeferredObjectIdsToRemove=[]}_cleanupChunkIds(i){if(this.handledChunksForIdCreation.has(i.chunkId)){const e=i.reader.getCursor();for(;e.next();){const t=e.getObjectId();this._source.isStream?this._streamLayerDeferredObjectIdsToRemove.push(t):this._attributeStore.releaseDisplayIdForObjectId(t)}this.handledChunksForIdCreation.delete(i.chunkId)}}async _updateAttributeData(){for(const i of this._source.chunks()){const{chunkId:e,reader:t}=i;if(!this.handledChunksForIdCreation.has(e)){this.handledChunksForIdCreation.add(e);const s=t.getCursor();for(;s.next();){const r=this._attributeStore.createDisplayIdForObjectId(s.getObjectId());s.setDisplayId(r)}}}for(const i of this._source.chunks())if(!this.handledChunksForAttributeData.has(i.chunkId)){this.handledChunksForAttributeData.add(i.chunkId);const e=i.reader.getCursor();for(;e.next();){const t=e.getDisplayId();this._attributeStore.setAttributeData(t,e,this._evalOptions,this._sqlOptions)}}}*_update(i){const{subscription:e,handledChunks:t}=i;for(const s of this._source.chunks()){const{chunkId:r}=s;if(t.has(r))continue;t.add(r);const a=s.getTileReader(e.tile);a&&(yield new U(i.subscription,a,!1,s.end,s.queryInfo))}}},_e;const Mi=()=>J.getLogger("esri.views.2d.layers.features.processor.TrackStrategy"),Ti=32;class qi{constructor(e,t,s,r,a){this.chunkIndex=e,this.featureIndex=t,this.objectId=s,this.displayId=r,this.time=a}}class es{static getOid(e){return hr+e}constructor(e,t,s,r,a,n,o,c){this._schema=e,this.trackId=t,this.objectId=s,this.displayId=r,this._fields=a,this._spatialReference=n,this._metadata=o,this._isStream=c,this._maxDisplayDuration=this._schema.maxDisplayDuration>0?this._schema.maxDisplayDuration:1/0,this._maxDisplayObservationsPerTrack=this._schema.maxDisplayObservationsPerTrack>=1?this._schema.maxDisplayObservationsPerTrack:1/0,this._observationRecords=[],this._nextObservationRecords=[],this._trackLinePath=[],this._bounds=[],this._trackLineGeometry=new w}get _trackLineAttributes(){const e={...this._latestObservationFeature?.attributes??{},aggregateId:this.objectId,[W]:L.TrackLine};if(this._statistics!=null)for(const t of this._statistics.values())e[t.field.name]=t.value;return e}get _startTimeField(){return this._metadata.timeInfo?.startTimeField}get length(){return this._observationRecords.length}*observations(){yield*this._observationRecords}*previousObservations(){for(let e=0;e<this._observationRecords.length-1;e++)yield this._observationRecords[e]}get latestObservationFeature(){return this._latestObservationFeature}get latestObservationRecord(){return this._latestObservationRecord}stageObservation(e,t){this._nextObservationRecords.push(new qi(e,t.getIndex(),t.getObjectId(),t.getDisplayId(),this._startTimeField!=null?t.readAttributeAsTimestamp(this._startTimeField):null))}commitObservations(e,t,s){const r=new Set(this._nextObservationRecords.map(l=>l.objectId)),a=this._observationRecords.filter(l=>!r.has(l.objectId)).map(l=>l.objectId);let n,o;switch(this._observationRecords=[],this._trackLinePath=[],this._isStream||this._startTimeField==null||this._nextObservationRecords.sort((l,h)=>{const u=l.time,p=h.time;return u!=null&&p!=null?u-p:0}),this._schema.timeField){case"startTimeField":n=this._metadata.timeInfo?.startTimeField;break;case"endTimeField":n=this._metadata.timeInfo?.endTimeField;break;case"timeReceived":n=this._isStream?Ee:null}o=this._isStream?s?.end??Date.now():s?.end??-1/0;const c=t.map(l=>l.reader.getCursor());let d;for(let l=this._nextObservationRecords.length-1;l>=0&&!(this._observationRecords.length>=this._maxDisplayObservationsPerTrack);l--){const h=this._nextObservationRecords[l],u=c[h.chunkIndex];H(u),u.setIndex(h.featureIndex);const p=n!=null?u.readAttributeAsTimestamp(n):null;(p!=null?o-p:0)>=this._maxDisplayDuration||(this._commitObservation(h,u),d??=h)}if(d!=null){const{chunkIndex:l,featureIndex:h}=d,u=`${d.objectId}.latest`,p=e.createDisplayIdForObjectId(u),_=c[l];H(_),_.setIndex(h);const f=new q(_.readGeometryWorldSpace(),{..._.readAttributes(),[W]:L.LatestObservation},null,u,p);this._latestObservationFeature&&a.push(this._latestObservationFeature.objectId),this._latestObservationFeature=f,this._latestObservationRecord=d}else this._latestObservationFeature=null;return this._trackLineGeometry=Ri(this._trackLineGeometry,this._trackLinePath,this._spatialReference),this._bounds=Di(this._trackLineGeometry),this._nextObservationRecords=[],a}updateStatistics(e,t){this._statistics=Ye.create(this._fields);const s=e.map(r=>r.reader.getCursor());for(const{chunkIndex:r,featureIndex:a}of this._observationRecords){const n=s[r];H(n),n.setIndex(a),this._statistics.insert(n,t)}}overlapsTile(e){for(const t of this._bounds)if(Gs(t,e.bounds,Ti))return!0;return!1}getLatestObservationFeatureForTile(e){if(this._latestObservationFeature==null)return null;const{objectId:t,displayId:s,geometry:r,attributes:a}=this._latestObservationFeature,n=new w;E(n,r,!1,!1,this._metadata.geometryType,e.subscription.tile.transform);const o=pt(1/0,1/0,-1/0,-1/0);return Pi(n,(c,d)=>gt(o,[c,d])),zs(o,pt(0,0,k,k))?new q(n,a,null,t,s):null}getTrackLineFeatureForTile(e){const t=new w;return E(t,this._trackLineGeometry,!1,!1,"esriGeometryPolyline",e.subscription.tile.transform),new q(t,this._trackLineAttributes,null,this.objectId,this.displayId)}getTrackLineOptimizedFeature(){return new q(this._trackLineGeometry,this._trackLineAttributes,null,this.objectId,this.displayId)}getTrackLineDisplayFeature(){const{_trackLineGeometry:e,_trackLineAttributes:t,displayId:s}=this;return{geometry:Tt(e,"esriGeometryPolyline",!1,!1),attributes:t,displayId:s}}_commitObservation(e,t){const s=t.readCentroidWorldSpace();let r=s?.coords[0],a=s?.coords[1];s==null&&(r=t.readXWorldSpace(),a=t.readYWorldSpace()),r!=null&&a!=null&&(this._observationRecords.unshift(e),this._trackLinePath.unshift([r,a]))}}class Ai extends he{constructor(e){super(e),this.done=!1}}class lt extends $e{static async create(e,t,s,r,a,n){const o=new se({spatialReference:t}),c=await Promise.all(e.fields.map(async l=>Qe.create(o,l))),d=e.featureFilter?await Pe.create({geometryType:s.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:s.metadata.timeInfo,fieldsIndex:s.metadata.fieldsIndex,spatialReference:t,filterJSON:e.featureFilter}):null;return t.isWrappable||kr()||await Promise.all([import("./apiConverter-DJnuowzl.js"),import("./jsonConverter-BPW2b21U.js"),Fr()]).then(([l,h,u])=>{_e={fromGeometryToGXGeometry:h.fromGeometryToGXGeometry,toGeometry:h.toGeometry,fromSpatialReference:l.fromSpatialReference}}),new lt(e,s,r,t,c,d,a,n)}constructor(e,t,s,r,a,n,o,c){super(t,s,r,a,c),this._schema=e,this._featureFilter=n,this._arcadeContextInfo=o,this._tracks=new Map,this._handledChunks=new Set,this._metadata=t.metadata.weakCloneWithAdditionalFields([{name:W,alias:"trackPart",type:"esriFieldTypeSmallInteger"}]),this._trackLineMetadata=re.createFeature({geometryType:"esriGeometryPolyline",featureIdInfo:{type:"object-id",fieldName:"aggregateId"},fieldsIndex:{fields:[...this._source.metadata.fieldsIndex.fields,...this.aggregateFields,{name:W,alias:"trackPart",type:"esriFieldTypeSmallInteger"},{name:"aggregateId",alias:"aggregateId",type:"esriFieldTypeOID"}],timeZoneByFieldName:null},globalIdField:null,spatialReference:t.metadata.spatialReference,outSpatialReference:t.metadata.outSpatialReference,subtypeField:null,subtypes:null,timeInfo:t.metadata.timeInfo,timeReferenceUnknownClient:null,dateFieldsTimeZone:null,typeIdField:null,types:null})}destroy(){super.destroy();for(const e of this._tracks.values())this._removeTrack(e);this._tracks.clear()}get _isStream(){return this._source.isStream}get enablePixelBuffering(){return!0}get isAggregate(){return!1}requiresInvalidation(){const e=new Set(this._source.chunks().map(t=>t.chunkId));for(const t of e)if(!this._handledChunks.has(t))return!0;for(const t of this._handledChunks)if(!e.has(t))return!0;return!1}invalidate(){this._handledChunks.clear(),super.invalidate()}createState(e){return new Ai(e)}async*applyOverrideUpdate(e){Mi().error("Applying override to tracks is not supported")}displayMap(e,t,s){const r=new Map(e.map(n=>[t(n),n])),a=[];for(const n of this._tracks.values()){const o=r.get(n.objectId);if(o!=null){const d=s(n.displayId,o,n.objectId);a.push(d),r.delete(n.objectId);continue}const c=n.latestObservationFeature;if(c?.objectId){const d=r.get(c.objectId);if(d!=null){const l=s(c.displayId,d,c.objectId);a.push(l),r.delete(c.objectId);continue}}for(const d of n.observations()){const l=r.get(d.objectId);if(l!=null){const h=s(d.displayId,l,d.objectId);a.push(h),r.delete(d.objectId)}}}return a}getDisplayFeatures(e){const t=new Set(e),s=[],r=[],a=this._source.chunks().map(n=>n.reader.getCursor());for(const n of this._tracks.values()){if(t.has(n.displayId)&&r.push(n.getTrackLineDisplayFeature()),n.latestObservationFeature!=null&&t.has(n.latestObservationFeature.displayId)){const{displayId:o,chunkIndex:c,featureIndex:d}=n.latestObservationRecord,l=a[c];l.setIndex(d),s.push({displayId:o,attributes:{},...l.readLegacyFeatureWorldSpace()})}for(const{displayId:o,chunkIndex:c,featureIndex:d}of n.observations())if(t.has(o)){const l=a[c];l.setIndex(d),s.push({displayId:o,attributes:{},...l.readLegacyFeatureWorldSpace()})}}return{features:s,aggregates:[],tracks:r}}getFeatureObjectIdsForAggregate(e){for(const t of this._tracks.values())if(t.objectId===e)return Array.from(t.observations(),s=>s.objectId);return[]}async*updateChunks(){this._handledChunks.size===0&&this._rebuildTracks();for(const e of this._sendStates.values())yield*this._update(e)}forEachAggregateWorldSpace(e){for(const t of this._tracks.values())e(t.getTrackLineOptimizedFeature())}_rebuildTracks(){const e=this._source.chunks();if(!e.length)return;const t=this._metadata.timeInfo?.trackIdField;if(t==null)return;const s=new Set;for(let r=0;r<e.length;r++){const a=e[r];this._handledChunks.add(a.chunkId);const n=a.reader.getCursor();for(;n.next();){const o=n.readAttribute(t),c=n.getObjectId();if(o!=null&&c!=null&&(this._featureFilter===null||this._featureFilter.check(n,this._sqlOptions))){if(n.getDisplayId()||n.setDisplayId(this._attributeStore.createDisplayIdForObjectId(c)),!this._tracks.has(o)){const d=es.getOid(o),l=this._attributeStore.createDisplayIdForObjectId(d),h=new es(this._schema,o,d,l,this.aggregateFields,this.spatialReference,this._source.metadata,this._isStream);this._tracks.set(o,h)}this._tracks.get(o).stageObservation(r,n),s.add(o)}}}for(const r of this._tracks.values())if(s.has(r.trackId)){const a=r.commitObservations(this._attributeStore,e,this._featureFilter?.timeExtent);for(const n of a)this._attributeStore.releaseDisplayIdForObjectId(n);r.updateStatistics(e,Ae(1,this._arcadeContextInfo))}else this._removeTrack(r)}_removeTrack(e){this._tracks.delete(e.trackId),this._attributeStore.releaseDisplayIdForObjectId(e.objectId);for(const{objectId:t}of e.observations())this._attributeStore.releaseDisplayIdForObjectId(t);e.latestObservationFeature!=null&&this._attributeStore.releaseDisplayIdForObjectId(e.latestObservationFeature.objectId)}*_update(e){if(e.done)return;e.done=!this._source.updateTracking.updating;const t=[],s=[];for(const l of this._tracks.values())if(l.length>0){if(this._schema.showLatestObservation){const h=l.getLatestObservationFeatureForTile(e);h!=null&&t.push(h)}this._schema.showTrackLine&&l.overlapsTile(e.subscription.tile)&&s.push(l.getTrackLineFeatureForTile(e))}const r=F.fromOptimizedFeatures(t,this._metadata,e.subscription.tile.transform),a=F.fromOptimizedFeatures(s,this._trackLineMetadata,e.subscription.tile.transform);let n=[];if(this._schema.showPreviousObservations){const l=this._source.chunks().map(()=>[]);for(const h of this._tracks.values())for(const{chunkIndex:u,featureIndex:p}of h.previousObservations())l[u].push(p);n=this._source.chunks().map((h,u)=>{const p=h.getTileReader(e.subscription.tile);if(p==null)return null;const _=Jt.from(p,l[u]);return _.setProcessorAttributes({[W]:L.PreviousObservation}),_.geometryType!=="esriGeometryPoint"&&_.getInTransform()!=null||_.setTransformForDisplay(e.subscription.tile.transform),_}).filter(Us)}this.events.emit("changed");const o=e.subscription.tile.createArcadeEvaluationOptions(this._arcadeContextInfo),c=a.getCursor();for(;c.next();)this._attributeStore.setAttributeData(c.getDisplayId(),c,o,this._sqlOptions);for(const l of n){const h=l.getCursor();for(;h.next();)this._attributeStore.setAttributeData(h.getDisplayId(),h,o,this._sqlOptions)}const d=r.getCursor();for(;d.next();)this._attributeStore.setAttributeData(d.getDisplayId(),d,o,this._sqlOptions);yield new U(e.subscription,a,!1,!1,{});for(const l of n)yield new U(e.subscription,l,!1,!1,{});yield new U(e.subscription,r,!1,e.done,{})}}function Ri(i,e,t){if(e.length<2)return B(i,[e],!1,!1);if(t.isWrappable){let a=!1;for(let n=1;n<e.length;n++){const o=e[n][0],c=Mr(o,e[n-1][0],t);o!==c&&(e[n][0]=c,a=!0)}if(a){const n=Tr({paths:[e],spatialReference:t});if(n!=null)return B(i,n.paths,!1,!1)}return B(i,[e],!1,!1)}const s=_e.fromGeometryToGXGeometry({hasM:!1,hasZ:!1,paths:[e]}),r=_e.fromSpatialReference(t);if(r!=null){const a=Cr(s,1e6,r,Or.geodesic);if(a!=null){const n=_e.toGeometry(a,r);if(n!=null&&"paths"in n)return B(i,n.paths,!1,!1)}}return B(i,[e],!1,!1)}function Pi(i,e){const{coords:t,lengths:s}=i;if(!s.length)return void e(t[0],t[1]);let r=0;for(let a=0;a<s.length;a++){const n=s[a];let o=0,c=0;for(let d=0;d<n;d++)o+=t[2*(d+r)],c+=t[2*(d+r)+1],e(o,c);r+=n}}function Di(i){const{lengths:e,coords:t}=i,s=2;if(!e.length)return[ft()];const r=[];let a=0;for(let n=0;n<e.length;n++){const o=e[n],c=ft();r.push(c);for(let d=0;d<o;d++){const l=t[s*(d+a)],h=t[s*(d+a)+1];gt(c,[l,h])}a+=o}return r}class Ei{constructor(e,t){this._connection=e,this._source=t,this._version=1,this._registry=new fr,this._proxy=new or({fetch:(s,r)=>this._connection.layerView.fetch(s,r),fetchDictionary:(s,r)=>this._connection.layerView.fetchDictionary(s,r)}),this._attributeStore=new cr({isLocal:!1,update:s=>Te(this._connection.container.updateAttributeView(s))})}destroy(){this._proxy.destroy(),this._strategy?.destroy(),this._attributeStore.destroy()}get aggregateQueryEngine(){return this._strategy?.aggregateQueryEngine}get version(){return this._version}getDisplayFeatures(e){return this._strategy?this._strategy.getDisplayFeatures(e):{features:[],aggregates:[],tracks:[]}}getDisplayIds(e){const t={};return this._strategy&&this._strategy.displayMap(e,s=>s,(s,r,a)=>{t[a]=s}),t}getFeatureObjectIdsForAggregate(e){return this._strategy?this._strategy.getFeatureObjectIdsForAggregate(e):[]}onSubscribe(e){this._strategy?.onSubscribe(e)}onUnsubscribe(e){this._strategy?.onUnsubscribe(e)}requiresInvalidation(){return this._strategy?.requiresInvalidation()??!1}async update(e,t,s,r,a){const n=e.processor,o=Z(this._schema?.storage,n.storage),c=Z(this._schema?.mesh.properties,n.mesh.properties),d=Z(this._schema?.mesh.factory,n.mesh.factory),l=Z(this._schema?.mesh.strategy,n.mesh.strategy),h=ji(this._schema?.expressionProperties,n.expressionProperties),u=h.some(x=>this._attributeStore.hasArcadeDependency(x)),p=h.some(x=>this._factory?.hasArcadeDependency(x)??!1),_=h.some(x=>this._strategy?.hasArcadeDependency(x))||this._strategy?.isAggregate&&u,f=p||_,m=c||d||l;if(!(o||m||p||u||_)&&!r)return!1;y("esri-2d-update-debug")&&console.debug(`Version[${this._version}] SymbolProcessor.update`,{changes:xt(this._schema,n),schema:n}),this._schema=n;const g=A.fromJSON(this._source.service.outSpatialReference),I=new se({fields:this._source.metadata.fieldsIndex,spatialReference:g}),b={currentUser:n.mesh.properties.currentUser};if((o||m||u)&&(await this._attributeStore.update(n.storage,I,this._source.metadata,t),this._strategy?.invalidateAttributeData(Q(n))),!r&&!m&&!f)return!1;(l||c||f)&&await this._updateStrategy(n.mesh.strategy,g,a,Q(n),b),this._updateSortKey(I,"sortKey"in n.mesh.properties?n.mesh.properties.sortKey:null);const v=n.mesh.factory.symbology.type==="dictionary"?n.mesh.factory.symbology.fieldMap:null,S=new ri(I,this._proxy,s,this._registry,v);return(d||n.mesh.factory.symbology.type==="dictionary")&&(this._factory=await si.create(S,n.mesh.factory)),this._version=t,!0}async applyOverrideUpdate(e){if(!this._strategy)return;const t=this._strategy.applyOverrideUpdate(e);for await(const s of t)try{await this._process(s)}catch{}}async updateChunks(){await this._doUpdateChunks(),this._strategy?.afterUpdateChunks()}async removeChunks(e){this._strategy?.removeChunks(e),this._attributeStore.incrementDisplayIdGeneration()}updateHighlight({highlights:e}){if(!this._strategy||!this._strategy.hasSubscribers)return void this._attributeStore.setHighlight(e.map(({objectId:s,highlightFlags:r})=>({objectId:s,highlightFlags:r,displayId:-1})),e);const t=this._strategy.displayMap(e,({objectId:s})=>s,(s,{highlightFlags:r},a)=>({objectId:a,displayId:s,highlightFlags:r}));this._attributeStore.setHighlight(t,e)}invalidate(){this._strategy&&this._strategy.invalidate()}async _doUpdateChunks(){if(!this._strategy)return;const e=this._strategy.updateChunks(),t=[],s=new Map;for await(const r of e){let a=s.get(r.id);a==null&&(a=new ii({concurrency:16,process:o=>this._process(o)}),s.set(r.id,a));const n=a.push(r).catch(o=>Ce(o));t.push(n)}try{await Promise.all(t)}catch{}y("esri-2d-update-debug")&&console.log("SendUpdates"),this._attributeStore.sendUpdates(),y("esri-2d-update-debug")&&console.log("SendUpdates.await")}async _updateStrategy(e,t,s,r,a){switch(this._strategy?.destroy(),e.type){case"feature":this._strategy=new Oi(this._source,this._attributeStore,r,a);break;case"binning":this._strategy=await ni.create(e,t,this._source,this._attributeStore,r,a);break;case"cluster":this._strategy=await dt.create(this._connection,e,t,this._source,this._attributeStore,r,a);break;case"track":this._strategy=await lt.create(e,t,this._source,this._attributeStore,r,a)}for(const n of s)this._strategy.onSubscribe(n)}async _updateSortKey(e,t){if(this._sortInfo=yt(this._sortInfo?.computed),t!=null){const s=t.byRenderer?null:await e.createComputedField(t);this._sortInfo={...t,computed:s}}}async _process(e){const t=e.subscription;if(y("esri-2d-update-debug")){const d=t.tile;console.debug(`Version[${this._version}] Tile[${d.key.id}, end=${e.end}] Processor._process`)}const s={currentUser:this._schema?.mesh.properties.currentUser};await this._fetchResources(e,s),O(t.signal);const r=await this._write(e,t.tile.createArcadeEvaluationOptions(Q(this._schema)),s),a=t.tile.tileInfoView.getLODInfoAt(t.tile.key);O(t.signal);const{message:n,transferList:o}=r.serialize(a),c={objectIdMap:null,inner:e.createMessage(n,this._version,this._attributeStore.epoch)};if(this._schema?.mesh.properties.returnMeshObjectId){c.objectIdMap={};const d=e.reader?.getCursor();if(d)for(;d.next();)c.objectIdMap[d.getDisplayId()]=d.getObjectId()}if(O(t.signal),await this._connection.container.onMessage(c,{signal:t.signal,transferList:o}),this._attributeStore.sendUpdates(),y("esri-2d-update-debug")){const d=t.tile;console.debug(`Version[${this._version}] Tile[${d.key.id}, end=${e.end}] Processor._process.await`)}}async _fetchResources(e,t){await this._fetchMatcherResources(e),await this._fetchWriterResources(e,t)}async _fetchMatcherResources(e){if(e.reader)return this._factory.enqueueMatcherRequests(this._proxy,e.reader)}async _fetchWriterResources(e,t){if(!e.reader)return;const s=e.reader.getCursor(),r=e.subscription.tile.createArcadeEvaluationOptions(Q(this._schema));for(;s.next();)this._factory.enqueueWriterRequests(this._proxy,s,r,t);await this._proxy.fetchEnqueuedResources()}async _write(e,t,s){const r=e.subscription.tile,a=e.reader?.getCursor(),n=a?.getSize()??0,o=r.tileInfoView.tileInfo.isWrappable,c=r.tileInfoView.tileInfo.spatialReference.isWGS84,d=new $r(r.key,this._strategy.enablePixelBuffering,o,c,n);if(!a)return d;const l=r.createArcadeEvaluationOptions(Q(this._schema));let h=0;for(;a.next();){++h%1e3||(await Ns(0),O(e.subscription));const u=this._getSortKeyValue(a,t);d.entityStart(a.getDisplayId(),u),this._factory.write(d,this._proxy,a,l,s,r.level),d.entityEnd()}return d}_getSortKeyValue(e,t){if(!this._sortInfo)return 0;const{computed:s,order:r,byRenderer:a}=this._sortInfo,n=a?this._factory.getSortKey(e,t):s?.read(e,t);return n==null||isNaN(n)?0:n*(r==="asc"?-1:1)}}function ji(i,e){const t=[];return i?.timeExtent?.start===e.timeExtent?.start&&i?.timeExtent?.end===e.timeExtent?.end||t.push("timeProperties"),t}function Q(i){const{timeZone:e}=i?.mesh.properties??{},{timeExtent:t}=i?.expressionProperties??{};return{timeZone:e,timeExtent:t}}let Wi=class As{static from(e){let t=0,s=0,r=0;return e.forEach(a=>{const n=a._readGeometry();n&&(s+=n.isPoint?1:n.lengths.reduce((o,c)=>o+c,0),r+=n.isPoint?1:n.lengths.length,t+=1)}),new As(t,s,r)}constructor(e,t,s){this.featureCount=e,this.vertexCount=t,this.ringCount=s}toJSON(){return{featureCount:this.featureCount,ringCount:this.featureCount,vertexCount:this.featureCount}}};const Ke=4;function Li(i){switch(i.type){case"object-id":case"unique-id-simple":return`${i.fieldName} ASC`;case"unique-id-composite":return`${i.fieldNames.join(",")} ASC`}}function Ui(i,e,t){const s=Li(t.featureIdInfo),r=i.source,a={returnCentroid:!(r!==null&&typeof r=="object"&&"path"in r&&Bs(r.path))&&t.serviceGeometryType==="esriGeometryPolygon",returnGeometry:!0,timeReferenceUnknownClient:t.timeReferenceUnknownClient??void 0,outSpatialReference:A.fromJSON(i.outSpatialReference),orderByFields:i.type==="memory"?[]:[s],where:e.mutable.dataFilter.definitionExpression??"1=1",outFields:e.mutable.availableFields,multipatchOption:t.serviceGeometryType==="esriGeometryMultiPatch"?"xyFootprint":null};if(e.type==="feature"){const{gdbVersion:n,historicMoment:o,timeExtent:c}=e.mutable.dataFilter;return{...a,gdbVersion:n,historicMoment:o?new Date(o):null,timeExtent:c?Er.fromJSON(c):null,outFields:e.mutable.availableFields}}return a}let Gi=class Rs{static fromSchema(e,t,s){const r=t.type==="feature"?t.mutable.dataFilter.queryScaleRanges:[],a=t.mutable.displayFilterInfo;return new Rs(Ui(e,t,s),a,r,s.subtypeField,t.mutable.dataFilter.customParameters,s.geometryType,e.queryMetadata)}constructor(e,t,s,r,a,n,o){this._queryParams=e,this._displayFilter=t,this._queryScaleRanges=s,this._subtypeField=r,this._customParameters=a,this._geometryType=n,this._queryMetadata=o}get pageSize(){if(this._queryMetadata==null)throw new Error("InternalError: Service does not support paged queries");const e=this._queryMetadata.supportsMaxRecordCountFactor?Ke:null,t=(this._queryMetadata.maxRecordCount??8e3)*(e??1);return Math.min(8e3,t)}get objectIdsQueryPageSize(){return this._queryMetadata?.maxRecordCount??2e3}updateHistoricMoment(e){this._queryParams.historicMoment=e}updateFields(e){this._queryParams.outFields=e}createPatchFieldsQuery(e,t,s){if(!t.getSize())return null;const r=e.clone();if(this._queryParams.outFields[0]==="*"){if((r.outFields??[])[0]==="*")return null;r.outFields=this._queryParams.outFields}else{const n=new Set(this._queryParams.outFields),o=[];for(const c of n)t.hasField(c)||o.push(c);if(o.length===0)return null;r.outFields=o}r.returnGeometry=!1,r.returnCentroid=!1,r.quantizationParameters=null,r.cacheHint=!0;const a={inner:r,customParameters:this._customParameters};if(y("esri-tiles-debug")&&s!=null){const n=s.chunkId.toString().replaceAll("/",".");a.customParameters=a.customParameters?{...a.customParameters,chunkId:n}:{chunkId:n}}return a}createQuery(e={}){if(!this._queryParams)throw new Error("InternalError: queryInfo should be defined");return{inner:new Et({...this._queryParams,...e}),customParameters:this._customParameters}}createTileQuery(e,t){if(this._queryMetadata==null)throw new Error("InternalError: Service does not support tile queries");const s=this.createQuery(t),r=s.inner;if(this._queryScaleRanges.length){const a=this._queryScaleRanges.filter(n=>(!n.minScale||n.minScale>=e.maxScale)&&(!n.maxScale||n.maxScale<=e.minScale)).map(n=>n.subtypeCode);if(a.length){const n=`${this._subtypeField} IN (${a})`;r.where=mt(r.where,n)}}if(this._displayFilter&&(r.where=mt(r.where,Dr(this._displayFilter,e.minScale,e.maxScale))),r.quantizationParameters=t.quantizationParameters??e.getQuantizationParameters(),r.resultType="tile",r.geometry=e.extent,this._queryMetadata.supportsQuantization?this._geometryType==="esriGeometryPolyline"&&(r.maxAllowableOffset=e.resolution*y("feature-polyline-generalization-factor")):this._geometryType!=="esriGeometryPolyline"&&this._geometryType!=="esriGeometryPolygon"||(r.maxAllowableOffset=e.resolution,this._geometryType==="esriGeometryPolyline"&&(r.maxAllowableOffset*=y("feature-polyline-generalization-factor"))),r.defaultSpatialReferenceEnabled=this._queryMetadata.supportsDefaultSpatialReference,r.compactGeometryEnabled=this._queryMetadata.supportsCompactGeometry,this._queryMetadata.supportsMaxRecordCountFactor&&(r.maxRecordCountFactor=Ke),y("esri-tiles-debug")){const a=e.id.replaceAll("/",".");s.customParameters=s.customParameters?{...s.customParameters,tileId:a}:{tileId:a}}return s}createPagedTileQuery(e,t){const s=this.pageSize;return this.createTileQuery(e,{start:s*t,num:s,returnExceededLimitFeatures:!0})}createPagedQuery(e,t){const s=this.pageSize;return this.createQuery({start:s*e,num:s,returnExceededLimitFeatures:!0,maxRecordCountFactor:Ke,quantizationParameters:t,cacheHint:!0})}createObjectIdsQuery(e){return this.createQuery({objectIds:e,outFields:["*"]})}};const zi=2500;let pe=class extends bt{constructor(i){super(),this._connection=i,this._enabledEventTypes=new Set,this._updateInfo={websocket:0,client:0},this._lastTime=performance.now(),this._queuedCommands=[],this.addHandles([Oe(()=>this._strategy?.connectionStatus??"disconnected",e=>{this._layerView.setProperty({propertyName:"pipelineConnectionStatus",value:e})},{initial:!0}),Oe(()=>this._strategy?.errorString||null,e=>this._layerView.setProperty({propertyName:"pipelineErrorString",value:e}),{initial:!0})])}destroy(){this._strategy=null,this.removeAllHandles()}get _layerView(){return this._connection.layerView}set strategy(i){this._strategy==null&&this._resetUpdateInfo(performance.now());const e="event-handles";this.removeHandles(e),i!=null&&(this.addHandles([i.events.on("data-received",t=>this._onFeature(t)),i.events.on("message-received",t=>this._onWebSocketMessage(t)),i.events.on("features-updated",t=>this._onUpdate(t)),i.events.on("tick",()=>this._onTick())],e),this._queuedCommands.forEach(t=>t(i)),this._queuedCommands=[]),this._strategy=i}updateCustomParameters(i){i!=null&&this._callOrEnqueue(e=>e.updateCustomParameters(i))}sendMessageToSocket(i){this._callOrEnqueue(e=>e.sendMessageToSocket(i))}sendMessageToClient(i){this._callOrEnqueue(e=>e.sendMessageToClient(i))}enableEvent(i,e){e?this._enabledEventTypes.add(i):this._enabledEventTypes.delete(i)}disconnect(){this._strategy?.disconnect()}connect(){this._strategy?.connect()}clear(){this._strategy?.clear()}_onWebSocketMessage(i){this._enabledEventTypes.has("message-received")&&this._layerView.emitEvent({name:"message-received",event:i})}_onFeature(i){this._updateInfo.websocket++,this._enabledEventTypes.has("data-received")&&this._layerView.emitEvent({name:"data-received",event:{attributes:i.attributes,centroid:i.centroid,geometry:i.geometry}})}_onUpdate(i){this._updateInfo.client+=i}_onTick(){const i=performance.now(),e=i-this._lastTime;if(e>zi){const t=Math.round(this._updateInfo.client/(e/1e3)),s=Math.round(this._updateInfo.websocket/(e/1e3));this._resetUpdateInfo(i),this._layerView.emitEvent({name:"update-rate",event:{client:t,websocket:s}})}}_resetUpdateInfo(i){this._lastTime=i,this._updateInfo.client=0,this._updateInfo.websocket=0}_callOrEnqueue(i){this._strategy!=null?i(this._strategy):this._queuedCommands.push(i)}};j([K()],pe.prototype,"_strategy",void 0),pe=j([It("esri.views.2d.layers.features.sources.StreamMessenger")],pe);let $=class extends V{constructor(i,e,t,s){super(),this._reader=i,this._queryJSON=e,this._page=t,this._end=s,this.chunkId=`${this._page}${this.end?"e":""}`,this.normalizedChunkId=this.chunkId}get reader(){return this._reader}get first(){return this._page===0}get end(){return this._end}get queryInfo(){return{type:"snapshot",chunkId:this.chunkId,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(i){const e=this.queryFeaturesInBounds(i.bounds);return e.setTransformForDisplay(i.transform),e}};async function Ni(i,e,t,s={}){const r=(await Promise.allSettled(t.map(a=>Bi(i,e,a,s)))).filter(a=>a.status==="rejected").map(a=>a.reason);if(r.length)throw new T("featurelayer-query","Encountered errors when downloading data",{errors:r})}async function Bi(i,e,t,s={}){const r=`${i.chunkPrefix??""}${t.num}`,a=await i.fetch(t.query,s,{chunkId:r}),n=new $(a,t.query.inner.toJSON(),t.num,!1);n.chunkId=n.normalizedChunkId=r,O(s),e.insert(n)}const et=8e3;class Vi{constructor(e,t,s,r){this.store=e,this.queryInfo=t,this._options=s,this._fetch=r,this._nextBatch=new Set,this._fetchFeatures=Vs(async()=>{if(this._nextBatch.size===0||this._options.signal?.aborted)return;const a=Array.from(this._nextBatch);this._nextBatch.clear(),a.length>et&&J.getLogger("esri.views.2d.layers.FeatureLayerView2D").warn(new T("highlight-too-many-features",`highlight is limited to ${et} features on large layers configured with a display filter to avoid performance issues`));const n=this.queryInfo.objectIdsQueryPageSize,o=Math.ceil(et/n),c=Math.min(o,Math.ceil(a.length/n)),d=Array.from({length:c},(l,h)=>{const u=h*n,p=Math.min(u+n,a.length);return{num:h,query:this.queryInfo.createObjectIdsQuery(a.slice(u,p))}});try{await Ni({chunkPrefix:"cache."+jr(),fetch:this._fetch},this.store,d,this._options)}catch{}})}prepareCacheUpdate(e,t){if(t)for(const s of t)this._nextBatch.delete(s);for(const s of e)this._nextBatch.add(s)}applyCacheUpdate(){return this._nextBatch.size===0||this._options.signal?.aborted?null:this._fetchFeatures().catch(()=>{})}}let tt=class{constructor(i){this._store=i,this._controller=new AbortController}destroy(){this._controller.abort()}get _options(){return{signal:this._controller.signal}}unsafeSetQueryHistoricMoment(i){throw new Error("InternalError: LoadStrategy does not support query info")}async queryByObjectId(i){throw new Error("InternalError: LoadStrategy does not support fetching")}async addParquetFile(i){throw new Error("InternalError: LoadStrategy does not support loading blobs")}prepareCacheUpdate(i,e){}applyCacheUpdate(){return null}};const st=268435455;let Qi=class{constructor(){this.hasFeatures=!1,this.exceededTransferLimit=!1,this.fieldCount=0,this.featureCount=0,this.idFieldIndices=[],this.vertexCount=0,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}};function $i(i,e,t,s=!1){const r=i.asUnsafe(),a=r.pos(),n=new Qi;let o=0,c=0;const d=1,l=2,h=4,u=3;let p=null,_=!1;const f=[];for(;r.next();)switch(r.tag()){case 12:p=r.processMessage(Nr);break;case 9:if(n.exceededTransferLimit=r.getBool(),n.exceededTransferLimit){n.offsets.geometry=s?new Float64Array(8e3):new Int32Array(8e3),n.centroid=s?new Float64Array(16e3):new Int32Array(16e3);for(let g=0;g<n.centroid.length;g++)n.centroid[g]=st}break;case 13:{const g=r.processMessage(zr);g.index=o++,f.push(g);break}case 15:{const g=r.getLength(),I=r.pos()+g;if(!n.exceededTransferLimit){const v=n.offsets.geometry,S=n.centroid;v.push(0),S.push(st),S.push(st)}!_&&n.exceededTransferLimit&&(_=!0,n.offsets.attributes=s?new Float64Array(8e3*o):new Uint32Array(8e3*o));let b=c*o;for(;r.pos()<I&&r.next();)switch(r.tag()){case d:{_?n.offsets.attributes[b++]=r.pos():n.offsets.attributes.push(r.pos());const v=r.getLength();r.skipLen(v);break}case l:if(e){const v=r.getLength(),S=r.pos()+v;for(;r.pos()<S&&r.next();)switch(r.tag()){case u:{r.getUInt32();const x=r.getSInt64(),C=r.getSInt64();n.centroid[2*c]=x,n.centroid[2*c+1]=C;break}default:r.skip()}}else{n.offsets.geometry[c]=r.pos();const v=r.getLength();n.vertexCount+=v,r.skipLen(v)}break;case h:{const v=r.getLength(),S=r.pos()+v;for(;r.pos()<S&&r.next();)switch(r.tag()){case u:{r.getUInt32();const x=r.getSInt64(),C=r.getSInt64();n.centroid[2*c]=x,n.centroid[2*c+1]=C;break}default:r.skip()}break}default:r.skip()}c++,n.hasFeatures=!0;break}default:r.skip()}n.fields=new ae(f),n.featureCount=c,n.fieldCount=o;const m=Lr(t);return n.idFieldIndices=Array.from(m,g=>n.fields.get(g)?.index),n.transform=p,n.displayIds=new Uint32Array(n.featureCount),n.groupIds=new Uint16Array(n.featureCount),r.move(a),n}const ts=268435455,ss=128,rs=128e3,M={small:{delta:new Int32Array(ss),decoded:new Int32Array(ss)},small64:{delta:new Float64Array(0),decoded:new Float64Array(0)},large:{delta:new Int32Array(rs),decoded:new Int32Array(rs)},large64:{delta:new Float64Array(0),decoded:new Float64Array(0)}};function is(i,e){return e?i<=M.small64.delta.length?M.small64:(i<=M.large64.delta.length||(M.large64.delta=new Float64Array(Math.round(1.25*i)),M.large64.decoded=new Float64Array(Math.round(1.25*i))),M.large64):i<=M.small.delta.length?M.small:(i<=M.large.delta.length||(M.large.delta=new Int32Array(Math.round(1.25*i)),M.large.decoded=new Int32Array(Math.round(1.25*i))),M.large)}function Xi(i){try{const e=new Wr(new Uint8Array(i),new DataView(i));for(;e.next();){if(e.tag()===2)return Yi(e.getMessage());e.skip()}}catch(e){const t=new T("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:e});J.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF").error(t)}return null}function Yi(i){for(;i.next();){if(i.tag()===1)return i.getMessage();i.skip()}return null}function Ji(i){const e=i.getLength(),t=i.pos()+e;for(;i.pos()<t&&i.next();)switch(i.tag()){case 1:return i.getString();case 2:return i.getFloat();case 3:return i.getDouble();case 4:return i.getSInt32();case 5:return i.getUInt32();case 6:return i.getInt64();case 7:return i.getUInt64();case 8:return i.getSInt64();case 9:return i.getBool();default:return i.skip(),null}return null}function Hi(i,e,t,s,r){return i?e*r-s*t===0&&e*s+t*r>0:!1}class be extends De{static fromBuffer(e,t,s=!1){const r=t.geometryType,a=Xi(e),n=$i(a,r==="esriGeometryPoint",t.featureIdInfo,s);return new be(a,n,t,s)}constructor(e,t,s,r){super(s),this._use64Bit=r,this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0},this._parseCaches=new Array,this._geometryType=s.geometryType,this._reader=e,this._header=t,this._hasNext=t.hasFeatures,this._isPoints=s.geometryType==="esriGeometryPoint"}get _size(){return this._header.featureCount}get fields(){return this._header.fields}get geometryType(){return this._geometryType}get hasZ(){return!1}get hasM(){return!1}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}getSize(){return this._size}getInTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._featureIndex=e}getAttributeHash(){let e="";for(const t of this._header.fields.fields)e+=this._readAttributeAtIndex(t.index)+".";return e}getObjectId(){if(this._header.idFieldIndices.length===1)return this._readAttributeAtIndex(this._header.idFieldIndices[0]);const e=this._header.idFieldIndices.map(t=>this._readAttributeAtIndex(t));return JSON.stringify(e)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}readGeometryArea(){return this._cache.area||this._readGeometry(!0),this._cache.area}copy(){const e=this._reader.clone(),t=new be(e,this._header,this.metadata,this._use64Bit);return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0;++this._featureIndex<this._size&&!this._getExists(););return this._featureIndex<this._size}get usedMemory(){return je+(this._cache.geometry?.usedMemory??0)}_readX(){return this._header.centroid[2*this._featureIndex]}_readY(){return this._header.centroid[2*this._featureIndex+1]}_readServerCentroid(){const e=this._header.centroid[2*this._featureIndex],t=this._header.centroid[2*this._featureIndex+1];return e===ts?null:new w([],[e,t])}_readGeometry(e=!1){if(this._cache.geometry===void 0){let t=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===ts)return null;const s=this._header.centroid[2*this._featureIndex],r=this._header.centroid[2*this._featureIndex+1];t=new w([],[s,r])}else{const s=this._header.offsets.geometry[this._featureIndex],r=this._reader;if(s===0)return null;r.move(s);try{t=e?this._parseGeometryForDisplay(r):this._parseGeometry(r)}catch{return null}}return t?.coords.length===0&&(t=null),this._cache.geometry=t,t}return this._cache.geometry}_readAttribute(e,t){const s=this._header.fields.get(e);if(s==null)return;const r=this._readAttributeAtIndex(s.index),a=this._header.fields.isDateField(s.name);return t?r==null?r:a?new Date(r):r:r}_readAttributes(){const e={};for(const t of this._header.fields.fields)e[t.name]=this._readAttributeAtIndex(t.index);return e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext,e._parseCaches=this._parseCaches}_readAttributeAtIndex(e){let t=this._parseCaches[e];if(t||(t=new dr(this.getSize()),this._parseCaches[e]=t),t.has(this._featureIndex))return t.get(this._featureIndex);const s=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],r=this._reader;r.move(s);const a=Ji(r);return t.set(this._featureIndex,a),a}_readGeometryDeltaDecoded(e=!1){if(this._cache.unquantGeometry===void 0){const t=this._readGeometry(e);if(!t)return this._cache.unquantGeometry=void 0,null;if(!this.getInTransform())return this._cache.unquantGeometry=t,t;const s=is(t.coords.length,this._use64Bit).decoded,r=t.clone(s),a=r.coords;let n=0;for(const o of r.lengths){for(let c=1;c<o;c++){const d=2*(n+c),l=2*(n+c-1);a[d]+=a[l],a[d+1]+=a[l+1]}n+=o}return this._cache.unquantGeometry=r,r}return this._cache.unquantGeometry}_parseGeometry(e){const t=e.asUnsafe(),s=t.getLength(),r=t.pos()+s,a=[],n=[];for(;t.pos()<r&&t.next();)switch(t.tag()){case 2:{const o=t.getUInt32(),c=t.pos()+o;for(;t.pos()<c;)n.push(t.getUInt32());break}case 3:{const o=t.getUInt32(),c=t.pos()+o;for(a.push(t.getSInt64()),a.push(t.getSInt64()),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();t.pos()<c;)a.push(t.getSInt64()),a.push(t.getSInt64()),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();break}default:t.skip()}return new w(n,a)}_parseGeometryForDisplay(e){const t=e.asUnsafe(),s=t.getLength(),r=t.pos()+s,a=[],n=[];let o=0,c=0,d=null,l=0;const h=this.geometryType==="esriGeometryPolygon",u=this.geometryType==="esriGeometryPolyline",p=h?3:u?2:1,_=h||u;for(;t.pos()<r&&t.next();)switch(t.tag()){case 2:{const f=t.getUInt32(),m=t.pos()+f;for(;t.pos()<m;){const g=t.getUInt32();a.push(g),o+=g}d=is(2*o,this._use64Bit).delta;break}case 3:{t.getUInt32();const f=2+(this.hasZ?1:0)+(this.hasM?1:0);H(d);for(const m of a){if(c+f*m>d.length){for(let v=0;v<m;v++)t.getSInt64(),t.getSInt64(),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();continue}let g=0,I=t.getSInt64(),b=t.getSInt64();this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64(),d[c++]=I,d[c++]=b,g+=1;for(let v=1;v<m;v++){const S=t.getSInt64(),x=t.getSInt64(),C=I+S,D=b+x;l+=-.5*(C-I)*(D+b),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64(),S===0&&x===0||Hi(_,d[c-2],d[c-1],S,x)?(d[c-2]+=S,d[c-1]+=x):(d[c++]=S,d[c++]=x,g+=1),I=C,b=D}g>=p?n.push(g):c-=g*f}break}default:t.skip()}return this._cache.area=l,n.length?new w(n,d):d!=null?this._createDeltaQuantizedExtrudedGeometry(d[0],d[1]):null}}let fe=class{constructor(i,e){this.service=i,this._metadata=e}destroy(){}};function Zi(i,e){switch(i.type){case"memory":return new ea(i,e);case"ogc":return new ra(i,e);case"feature-service":return i.queryMetadata.supportsFormatPBF&&y("featurelayer-pbf")?new ta(i,e):new sa(i,e)}}async function Ki(i){const e=new tr;return await e.open(i,{}),e}class ea extends fe{constructor(e,t){super(e,t),this._portsOpen=Ki(e.source).then(s=>this.client=s)}destroy(){this.client.close(),this.client=null}async executeQuery(e,t){await this._portsOpen;const s=await this.client.invoke("queryFeatures",e.toJSON(),t);return F.fromFeatureSet(s,this._metadata)}}let ta=class extends fe{async executeQuery(i,e){const{data:t}=await qr(this.service.source,i,e),s=!i.quantizationParameters;return be.fromBuffer(t,this._metadata,s)}},sa=class extends fe{async executeQuery(i,e){const{source:t,queryMetadata:s}=this.service;if(i.quantizationParameters!=null&&!s.supportsQuantization){const a=i.clone(),n=Dt(a.quantizationParameters);a.quantizationParameters=null;const{data:o}=await Le(t,a,this._metadata.spatialReference,e),c=vr(o,this._metadata.featureIdInfo);return qt(n,c),F.fromOptimizedFeatureSet(c,this._metadata)}const{data:r}=await Le(t,i,this._metadata.spatialReference,e);return this._metadata.geometryType==="esriGeometryPoint"&&(r.features=r.features?.filter(a=>{if(a.geometry!=null){const n=a.geometry;return Number.isFinite(n.x)&&Number.isFinite(n.y)}return!0})),F.fromFeatureSet(r,this._metadata)}},ra=class extends fe{async executeQuery(i,e){if(i.quantizationParameters&&!this.service.queryMetadata.supportsQuantization){const s=i.clone(),r=Dt(s.quantizationParameters);s.quantizationParameters=null;const a=await jt(this.service.source,i,e);return qt(r,a),F.fromOptimizedFeatureSet(a,this._metadata)}const t=await jt(this.service.source,i,e);return F.fromOptimizedFeatureSet(t,this._metadata)}},as=class extends tt{constructor(i,e,t,s,r){super(t),this._serviceInfo=i,this._queryInfo=e,this._metadata=s,this._connection=r,this._queue=new Ct({concurrency:32,process:async a=>{const n={signal:a.options?.signal,query:a.query.customParameters,useRequestQueue:!0};return this._adapter.executeQuery(a.query.inner,n)}}),this._adapter=Zi(i,s)}unsafeSetQueryHistoricMoment(i){this._queryInfo.updateHistoricMoment(i)}async updateFields(i){this._queryInfo.updateFields(i);const e=Array.from(this._store.chunks()).map(async s=>{const r=Et.fromJSON(s.queryInfo.queryJSON);if(r)try{return await this._tryUpdateFields(s.reader,r,{chunkId:s.chunkId}),null}catch(a){return a}}),t=(await Promise.all(e)).filter(s=>s);if(t.length)throw new T("featurelayer-query","Encountered errors when downloading fields",{errors:t})}async queryByObjectId(i){if(i.length===0)return F.empty(this._metadata);const e=this._queryInfo.createQuery({objectIds:i});return this._fetch(e,null,null)}async _fetch(i,e,t){const s=await this._enqueue(i,e);return await this._tryUpdateFields(s,i.inner,t),s}async _tryUpdateFields(i,e,t){const s=this._queryInfo.createPatchFieldsQuery(e,i,t);if(!s)return;const r=await this._enqueue(s,this._options);r.getSize()===i.getSize()?i.joinAttributes(r):J.getLogger("esri.views.2d.layers.features.sources.strategies.AFetchLoadStrategy").error(new T("featurelayer-query",`Failed to join features. Expected a count of ${i.getSize()} features, but got ${r.getSize()}`,{query:s.inner.toJSON(),debugInfo:t}))}async _enqueue(i,e){return this._connection.onEvent({type:"fetchStart"}),this._queue.push({query:i,options:e}).finally(()=>{this._connection.onEvent({type:"fetchEnd",done:this._queue.length===0})})}},ns=class extends as{constructor(i,e,t,s,r){super(i,e,t,s,r),this._chunksById=new Map,this._featureCache=new Vi(t,e,this._options,this._fetch.bind(this))}prepareCacheUpdate(i,e){return this._featureCache.prepareCacheUpdate(i,e)}applyCacheUpdate(){return this._featureCache.applyCacheUpdate()}unload(i){this._removeChunks(i.tile)}_addChunk(i){const e=i.tile.id;this._chunksById.has(e)||this._chunksById.set(e,[]);const t=i.size();(t||i.first||i.end)&&(y("esri-2d-update-debug")&&console.debug(`Chunk[${i.chunkId}] ATileLoadStrategy.addChunk [count=${t}]`),this._chunksById.get(e).push(i),this._store.insert(i))}_removeChunks(i){const e=this._chunksById.get(i.key.id)??[];for(const t of e)y("esri-2d-update-debug")&&console.debug(`Tile[${i.key.id}] Chunk[${t.chunkId}] ATileLoadStrategy.removeChunk`),this._store.remove(t);this._chunksById.delete(i.key.id)}},os=class extends V{constructor(i,e,t,s,r,a){super(),this._reader=i,this._queryJSON=e,this._tile=t,this._sourceTile=s,this._sourceTileDepth=r,this._end=a,this.chunkId=`${this._tile.key.id}.${this._sourceTile?.key.id}${this._end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._sourceTile?.key.normalizedId}${this._end?"e":""}`}get queryInfo(){return{type:"drill-down-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,sourceTileDepth:this._sourceTileDepth,sourceTileId:this._sourceTile?.key.id,size:this.size(),end:this.end}}get first(){return this._sourceTileDepth===0}get reader(){return this._reader}get end(){return this._end}get tile(){return this._tile}get isTiled(){return!0}getTileReader(i){return this._tile.key.id===i.key.id?this.reader:null}},ia=class{constructor(i,e){this.subscription=i,this._tileIdToResult=new Map,this._controller=new AbortController,this._handles=ee([te(i.signal,()=>this._controller.abort()),te(e,()=>this._controller.abort())])}destroy(){this._controller.abort(),this._handles.remove()}get(i){return this._tileIdToResult.get(i)}set(i,e){this._tileIdToResult.set(i,e)}get options(){return{signal:this._controller.signal}}},aa=class extends ns{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const i of this._loadStates.values())i.destroy();this._loadStates.clear()}get about(){return{supportsDisplayFilter:!0,willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(i){this._loadStates.has(i.key.id)||this._loadStates.set(i.key.id,new ia(i,this._options));const e=this._loadStates.get(i.key.id);let t;try{for await(const r of this._fetchChunkInfos(e,i.tile,0)){const{queryJSON:a,reader:n,sourceTile:o,sourceTileDepth:c,tile:d}=r,l=new os(n,a,d,o,c,!1);O(e.options),this._addChunk(l)}}catch(r){t=r}const s=new os(F.empty(this._metadata),null,i.tile,null,-1,!0);if(this._addChunk(s),t)throw t}unload(i){super.unload(i),this._loadStates.get(i.key.id)?.destroy(),this._loadStates.delete(i.key.id)}async*_fetchChunkInfos(i,e,t){let s=i.get(e.id);const r=!!s;if(s||(s=await this._fetchChunkInfo(i,e,t),i.set(e.id,s)),s.reader.exceededTransferLimit&&t<y("featurelayer-query-max-depth"))for(const a of e.createChildTiles())yield*this._fetchChunkInfos(i,a,t+1);else r||(yield s)}async _fetchChunkInfo(i,e,t){const s=i.subscription.tile.getQuantizationParameters(),r=this._queryInfo.createTileQuery(e,{returnExceededLimitFeatures:!1,quantizationParameters:s});return{reader:await this._fetch(r,i.options,{chunkId:e.id}),queryJSON:r.inner.toJSON(),tile:i.subscription.tile,sourceTile:e,sourceTileDepth:t}}},cs=class extends V{constructor(i,e,t,s,r){super(),this._reader=i,this._queryJSON=e,this._tile=t,this._page=s,this._end=r,this.chunkId=`${this._tile.key.id}.${this._page}${this.end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._page}${this.end?"e":""}`}get queryInfo(){return{type:"paged-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get reader(){return this._reader}get first(){return this._page===0}get end(){return this._end}get page(){return this._page}get tile(){return this._tile}get isTiled(){return!0}getTileReader(i){return this._tile.key.id===i.key.id?this.reader:null}},na=class{constructor(i,e){this.subscription=i,this._pages=new Set,this._controller=new AbortController,this._done=!1,this._handles=ee([te(i.signal,()=>this._controller.abort()),te(e,()=>this._controller.abort())])}destroy(){this._controller.abort(),this._handles.remove()}get pageStart(){let i=-1;for(const e of this._pages.values())i=Math.max(i,e);return i+1}get done(){return this._done}get options(){return{signal:this._controller.signal}}add(i,e){this._pages.add(i),this._done=this._done||e}};class oa extends ns{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const e of this._loadStates.values())e.destroy();this._loadStates.clear()}get about(){return{supportsDisplayFilter:!0,willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){const t=Qs(this._loadStates,e.key.id,()=>new na(e,this._options));for await(const s of this._fetchPages(t))this._addChunk(s)}unload(e){super.unload(e),this._loadStates.get(e.key.id)?.destroy(),this._loadStates.delete(e.key.id)}async*_fetchPages(e){let t;try{for await(const s of this._concurrentPageStream(e))O(e.options),s.size()!==0&&(yield s)}catch(s){t=s}if(t&&vt(t)||(yield new cs(F.empty(this._metadata),null,e.subscription.tile,-1,!0)),t)throw t}async*_concurrentPageStream(e){const t=y("featurelayer-query-tile-concurrency"),s=this._pageStreamAll(e),r=[];let a=!1,n=1;for(;!a;){const o=[];for(;!a&&r.length<n;){const c=s.next();if(!c.value){a=!0;break}const d=c.value;d.then(l=>{l.reader.exceededTransferLimit||(a=!0)}).catch(l=>{a=!0}).finally(()=>{r.splice(r.indexOf(d),1)}),r.push(d),o.push(d)}for(const c of o)yield c;r.length&&await Promise.race(r),n<t&&(n+=1)}}*_pageStreamAll(e){const t=Math.ceil(y("featurelayer-query-tile-max-features")/this._queryInfo.pageSize);for(let s=0;s<t;s++)yield this._downloadPage(s,e)}async _downloadPage(e,t){O(t.options);const s=t.subscription.tile,r=this._queryInfo.createPagedTileQuery(s,e),a=await this._fetch(r,t.options,{chunkId:`${s.id}-${e}`});return O(t.options),new cs(a,r.inner.toJSON(),s,e,!1)}}let rt=null;async function it(){return rt||(rt=ca()),rt}async function ca(){const i=await import("./bundle-CEMFEMun.js").then(e=>e.b);return await i.default({module_or_path:$s("esri/libs/parquet/pkg/bundle_bg.wasm")}),i}const ds=i=>async function(e,t,s){const r=i(),{data:a}=await Me(e,{responseType:"array-buffer",query:r,headers:{range:`bytes=${t}-${s}`},useRequestQueue:!0});return a},ls=i=>async function(e){const t=i(),{data:s}=await Me(e,{responseType:"native",method:"head",query:t,useRequestQueue:!0}),r=s.headers.get("Content-Length");if(r==null)throw new Error("Unable to parse content length");return parseInt(r,10)};let hs=class ct{static async create(e,t){const s=await it(),r=await s.readMetadata(e,ds(t),ls(t));return ct.fromFileMetadata(r)}static fromFileMetadata(e){const t=[];for(let s=0;s<e.numFields();s++){const r=e.getFieldByIndex(s);t.push({name:r.name,type:r.type,alias:r.name,index:r.index}),r.free()}return new ct(e,t)}constructor(e,t){this._inner=e,this.fields=t}destroy(){this._inner.free()}[Symbol.dispose](){this.destroy()}get size(){return this._inner.numRows()}getFieldIndex(e){return this._inner.getFieldIndex(e)}tryReadGeoMetadata(){const e=this._inner.keyValueMetadata("geo");return e==null?null:JSON.parse(e)}tryReadEsriMetadata(){const e=this._inner.keyValueMetadata("esri");return e==null?null:JSON.parse(e)}};function da(i){switch(i){case"esriGeometryPoint":return ne.Point;case"esriGeometryPolygon":return ne.Polygon;case"esriGeometryPolyline":return ne.Polyline;case"esriGeometryMultipoint":return ne.Multipoint;default:throw new Error(`InternalError: Found unexpected GeometryType: ${i}`)}}function us(i,e,t){const s=Ur.new();if(s.geometryType=da(i.geometryType),i.encoding.type==="location")s.latIndex=e.getFieldIndex(i.encoding.latitudeFieldName),s.lngIndex=e.getFieldIndex(i.encoding.longitudeFieldName);else if(s.wkbIndex=e.getFieldIndex(i.encoding.primaryFieldName),i.encoding.multiscale){const r=Gr.new();for(const a of i.encoding.multiscale.levels){const[n,o]=a.transform.translate,[c,d]=a.transform.scale,l=e.getFieldIndex(a.column);r.push(l,n,o,c,d)}s.setMultiscaleInfo(r)}return s.inWkid=i.spatialReference.wkid,t&&(s.outWkid=t.wkid),s}class Ie{static async create(e,t){const s=await it(),r=ds(t.getCustomParameters),a=ls(t.getCustomParameters),n=await s.readMetadata(e,r,a),o=us(t.geometryInfo,n,t.outSpatialReference),c=await s.readFile(e,r,a,n,o);return new Ie(c,hs.fromFileMetadata(c.metadata()))}static async fromFile(e,t,s){const r=await it(),a=await r.readMetadataFromFile(e),n=t?us(t,a,s):void 0,o=await r.readFileFromBinary(n,e);return new Ie(o,hs.fromFileMetadata(o.metadata()))}constructor(e,t){this.inner=e,this.metadata=t}destroy(){this.inner.free(),this.metadata.destroy()}[Symbol.dispose](){this.destroy()}}class ht extends De{constructor(e,t,s,r,a,n=new Uint32Array(r.size())){super(e),this._fields=t,this._geometryInfo=s,this._inner=r,this._chunkId=a,this._displayIds=n,this._index=-1,this.usedMemory=je,this._size=this._inner.size();const o=e.featureIdInfo;o.type==="object-id"&&(this._objectIdFieldIndex=this._fields.get(o.fieldName)?.index),this._chunkId>65535&&console.error("Exceeded max allowed parquet reader size")}destroy(){super.destroy(),this._inner.free()}get fields(){return this._fields}get geometryType(){return this._geometryInfo.geometryType}get hasFeatures(){return!0}get hasNext(){throw new Error("Method not implemented.")}get exceededTransferLimit(){return!1}get hasZ(){return!1}get hasM(){return!1}getInTransform(){return null}getSize(){return this._size}getCursor(){return this.copy()}getAttributeHash(){let e="";for(const t of this.fields.fields)e+=this._readAttribute(t.name,!1)+".";return e}getObjectId(){return this._objectIdFieldIndex!=null?this._inner.readAttribute(this._index,this._objectIdFieldIndex):this._index<<16|this._chunkId}getDisplayId(){return this._displayIds[this._index]}setDisplayId(e){this._displayIds[this._index]=e}setIndex(e){this._index=e}getBoundsXMin(){return this._inner.boundsXMin(this._index)}getBoundsYMin(){return this._inner.boundsYMin(this._index)}getBoundsXMax(){return this._inner.boundsXMax(this._index)}getBoundsYMax(){return this._inner.boundsYMax(this._index)}setBoundsXMin(e){throw new Error("InternalError: Setting bounds is unsupported")}setBoundsYMin(e){throw new Error("InternalError: Setting bounds is unsupported")}setBoundsXMax(e){throw new Error("InternalError: Setting bounds is unsupported")}setBoundsYMax(e){throw new Error("InternalError: Setting bounds is unsupported")}getIndex(){return this._index}next(){for(;++this._index<this._size&&!this._getExists(););return this._index<this._size}readGeometryArea(){return this.readGeometryForDisplay()?.area()??0}copy(){const e=new ht(this.metadata,this._fields,this._geometryInfo,this._inner,this._chunkId,this._displayIds);return this.copyInto(e),e}copyInto(e){super.copyInto(e),e._index=this._index}readGeometryForDisplayTransformed(e){const[t,s]=e.translate,[r,a]=e.scale,n=this._inner.readGeometryTransformed(this._index,t,s,r,a);return n?new w(n.readLengthsUnsafe(),n.readCoordsUnsafe()):null}_readGeometry(e){const t=this._inner.readCoords(this._index),s=this._inner.readLengths(this._index);return t&&s?new w(s,t):null}_readX(){return this._readGeometry()?.coords[0]}_readY(){return this._readGeometry()?.coords[1]}_readServerCentroid(){return null}_readAttribute(e,t){const s=this.fields.get(e);if(!s)return;if(s.index==null)return this.getObjectId();const r=this._inner.readAttribute(this._index,s.index);if(r==null)return r;const a=this.fields.isDateField(s.name);return t?r==null?r:a?new Date(r):r:r}_readAttributes(){const e={};for(const t of this._fields.fields)t.index!=null?this._inner.hasField(t.index)&&(e[t.name]=this._readAttribute(t.name,!1)):e.__OBJECTID=this.getObjectId();return e}}let la=class extends tt{constructor(i,e,t,s){super(s),this._service=i,this._metadata=e,this._schema=t,this._chunkId=0,this._files=[],this._availableFields=new Set(t.mutable.availableFields);const{geometryInfo:r}=this._service;if(r.encoding.type==="location")this._availableFields.add(r.encoding.latitudeFieldName),this._availableFields.add(r.encoding.longitudeFieldName);else if(r.encoding.multiscale!=null&&r.encoding.multiscale.levels.length>=1){const a=r.encoding.multiscale.levels[0];this._availableFields.add(a.column)}else this._availableFields.add(r.encoding.primaryFieldName)}destroy(){for(const i of this._files)i.destroy()}get about(){return{supportsDisplayFilter:!1,willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}async updateFields(i){await this._promise;const e=new Set(i),t=Xs(e,this._availableFields);this._availableFields=Ys(t,this._availableFields),t.size&&await Promise.all(this._files.map(s=>{const r=Array.from(t).map(a=>s.metadata.getFieldIndex(a));return s.inner.updateChunks(new Uint16Array(r))}))}async load(i){return this._promise==null&&(this._promise=this._download().then(()=>{this._loadHigherResGeometry()})),this._promise}unload(i){}async addParquetFile(i){this._insert(i)}async _loadHigherResGeometry(){const{geometryInfo:i}=this._service;if(i.encoding.type==="wkb"){if(!(i.encoding.multiscale!=null&&i.encoding.multiscale.levels.length>=1))return;await this.updateFields([i.encoding.primaryFieldName])}const e=Array.from(this._store.chunks());this._store.clear();for(const t of e)this._store.insert(t);this._store.refresh()}async _insert(i){const e=await Ie.create(i,{geometryInfo:this._service.geometryInfo,outSpatialReference:this._service.outSpatialReference,getCustomParameters:()=>this._schema.mutable.dataFilter.customParameters}),{geometryInfo:t}=this._service;O(this._options);const{fields:s,timeZoneByFieldName:r}=this._service.metadata.fieldsIndex,a=s.map(c=>({...c,index:e.metadata.getFieldIndex(c.name)})),n=ae.fromJSON({fields:a,timeZoneByFieldName:r}),o=new Uint16Array(Array.from(this._availableFields.values()).map(c=>n.get(c)?.index).filter(c=>c!=null));await e.inner.readChunksWithCallback(o,c=>{const d=this._chunkId++,l=new ht(this._metadata,n,t,c,d),h=new $(l,null,d,!1);this._store.insert(h)}),this._files.push(e)}async _download(){try{await Promise.all(this._service.source.urls.map(e=>this._insert(e)));const i=new $(F.empty(this._metadata),null,-1,!0);this._store.insert(i)}catch(i){throw console.error(i),i}}};class ha extends as{constructor(e,t,s,r,a,n){super(e,t,s,a,n),this._snapshotInfo=r}get about(){return{supportsDisplayFilter:!1,willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}load(e){return this._promise==null&&(this._promise=this._download()),this._promise}unload(e){}async _download(){const e=this._snapshotInfo.initialTolerance,t=e?new Rr({mode:"view",originPosition:"upper-left",tolerance:e}):null;await this._downloadStreaming(t),t!=null&&await this._downloadRefresh()}async _downloadStreaming(e){try{for await(const t of this._fetchPages(e))this._store.insert(t)}catch(t){throw new T("featurelayer-query","Encountered error when downloading data",{error:t})}}async _downloadRefresh(){try{const e=[];for await(const t of this._fetchPages(null))e.push(t);this._store.clear();for(const t of e)this._store.insert(t);this._store.refresh()}catch(e){throw new T("featurelayer-query","Encountered error when downloading data",{error:e})}}async*_fetchPages(e){let t;try{for await(const s of this._concurrentPageStream(e))s.size()!==0&&(yield s)}catch(s){t=s}if(t&&vt(t)||(yield new $(F.empty(this._metadata),null,-1,!0)),t)throw t}async*_concurrentPageStream(e){const t=y("featurelayer-snapshot-concurrency"),s=this._pageStreamAll(e),r=[];let a=!1,n=1;for(;!a;){const o=[];for(;!a&&r.length<n;){const c=s.next();if(!c.value){a=!0;break}const d=c.value;d.then(l=>{l.reader.exceededTransferLimit||(a=!0)}).catch(l=>{a=!0}).finally(()=>{r.splice(r.indexOf(d),1)}),r.push(d),o.push(d)}for(const c of o)yield c;r.length&&await Promise.race(r),n<t&&(n+=1)}}*_pageStreamAll(e){const t=Math.ceil(this._snapshotInfo.maxFeatureCount/this._queryInfo.pageSize);for(let s=0;s<t;s++)yield this._downloadPage(s,e)}async _downloadPage(e,t){O(this._options);const s=this._queryInfo.createPagedQuery(e,t),r=await this._fetch(s,this._options,{chunkId:e.toString()}),a=new $(r,s.inner.toJSON(),e,!1);return O(this._options),a}}const _s=1e3;class ua{constructor(e,t,s,r,a=128){if(this._trackIdToObservations=new Map,this._idCounter=0,this._lastPurge=performance.now(),this._addOrUpdated=new Map,this._removed=[],this._maxAge=0,this._timeInfo=s,this._purgeOptions=r,this.store=e,t.type==="unique-id-composite")throw new T("stream-layer","composite uniqueIds are not supported");this.idField=t.fieldName,this.purgeInterval=a,this._useGeneratedIds=this.idField===ur}removeById(e){this._removed.push(e)}removeByTrackId(e){const t=this._trackIdToObservations.get(e);if(t)for(const s of t.entries)this._removed.push(s)}add(e){if(this._useGeneratedIds){const n=this._nextId();e.attributes[this.idField]=n,e.objectId=n}else e.objectId=e.attributes[this.idField];const t=e.objectId;if(this._addOrUpdated.set(t,e),this._maxAge=Math.max(this._maxAge,e.attributes[this._timeInfo.startTimeField]),!this._timeInfo.trackIdField)return this._trackIdLessObservations==null&&(this._trackIdLessObservations=new Wt(1e5)),void this._trackIdLessObservations.enqueue(t);const s=e.attributes[this._timeInfo.trackIdField];if(!this._trackIdToObservations.has(s)){const n=this._purgeOptions?.maxObservations!=null?this._purgeOptions.maxObservations:_s,o=Js(n,0,_s);this._trackIdToObservations.set(s,new Wt(o))}const r=this._trackIdToObservations.get(s),a=r?.enqueue(t);a!=null&&(this._addOrUpdated.has(a)?this._addOrUpdated.delete(a):this._removed.push(a))}checkForUpdates(){const e=this._getToAdd(),t=this._getToRemove(),s=performance.now(),r=s-this._lastPurge,a=Date.now();r>=this.purgeInterval&&(this._purge(s),this._lastPurge=s);const n=[];if(t!=null)for(const c of t){const d=this.store.removeById(c);d!=null&&n.push(d)}const o=[];if(e!=null){const c=new Set(t??[]);for(const d of e)c.has(d.objectId)||(d.attributes[Ft]=s,d.attributes[Ee]=a,this.store.add(d),o.push(d))}return!(!o.length&&!n?.length)&&(this.store.update(o,n),!0)}_getToAdd(){if(!this._addOrUpdated.size)return null;const e=new Array(this._addOrUpdated.size);let t=0;return this._addOrUpdated.forEach(s=>e[t++]=s),this._addOrUpdated.clear(),e}_getToRemove(){const e=this._removed;return this._removed.length?(this._removed=[],e):null}_nextId(){const e=this._idCounter;return this._idCounter=(this._idCounter+1)%4294967294+1,e}_purge(e){const t=this._purgeOptions;t!=null&&(this._purgeSomeByDisplayCount(t),this._purgeByAge(t),this._purgeByAgeReceived(e,t),this._purgeTracks())}_purgeSomeByDisplayCount(e){if(!e.displayCount)return;let t=this.store.size;if(t>e.displayCount){if(this._timeInfo.trackIdField){for(const s of this._trackIdToObservations.values())if(t>e.displayCount&&s.size){const r=s.dequeue();this._removed.push(r),t--}}if(this._trackIdLessObservations!=null){let s=t-e.displayCount;for(;s-- >0;){const r=this._trackIdLessObservations.dequeue();r!=null&&this._removed.push(r)}}}}_purgeByAge(e){const t=this._timeInfo?.startTimeField;if(!e.age||!t)return;const s=60*e.age*1e3,r=this._maxAge-s;this.store.forEach(a=>{a.attributes[t]<r&&this._removed.push(a.objectId)})}_purgeByAgeReceived(e,t){if(!t.ageReceived)return;const s=e-60*t.ageReceived*1e3;this.store.forEach(r=>{r.attributes[Ft]<s&&this._removed.push(r.objectId)})}_purgeTracks(){this._trackIdToObservations.forEach((e,t)=>{e.size===0&&this._trackIdToObservations.delete(t)})}}let z=class extends bt{constructor(i){super(i)}get connectionStatus(){return this.connection?.connectionStatus}get errorString(){return this.connection?.errorString}};j([K()],z.prototype,"connection",void 0),j([K()],z.prototype,"connectionStatus",null),j([K()],z.prototype,"errorString",null),z=j([It("esri.views.2d.layers.features.sources.StreamConnectionState")],z);let _a=class{constructor(i,e){this._metadata=i,this._onUpdate=e,this._objectIdToFeature=new Map}get size(){return this._objectIdToFeature.size}get reader(){return F.fromFeatures([...this._objectIdToFeature.values()],this._metadata)}add(i){this._objectIdToFeature.set(i.objectId,i)}forEach(i){this._objectIdToFeature.forEach(i)}removeById(i){const e=this._objectIdToFeature.get(i);return e?(this._objectIdToFeature.delete(i),e):null}clear(){this._objectIdToFeature=new Map}update(i,e){this._onUpdate(i?.length??0)}};class pa extends V{constructor(e){super(),this._reader=e,this.chunkId="stream-chunk",this.normalizedChunkId="stream-chunk"}get reader(){return this._reader}get first(){return!0}get end(){return!0}get queryInfo(){return{type:"stream",chunkId:this.chunkId,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}}let fa=class extends tt{constructor(i,e,t,s,r){super(t),this._service=i,this._dataFilter=e,this._streamOptions=s,this._metadata=r,this._connectionState=new z,this._forceRefresh=!1,this.events=new ke;const{timeInfo:a}=this._metadata,{purgeOptions:n}=e;this._stagingStore=new _a(this._metadata.weakCloneWithAdditionalFields([{name:Ee,alias:"timeReceived",type:"esriFieldTypeDate"}]),o=>this.events.emit("features-updated",o)),this._manager=new ua(this._stagingStore,r.featureIdInfo,a,n),this.connect()}destroy(){super.destroy(),this.disconnect()}get about(){return{supportsDisplayFilter:!1,willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}get connectionStatus(){return this._connectionState.connectionStatus}get errorString(){return this._connectionState?.errorString}async refresh(){const i=this._chunk!=null;return this._manager.checkForUpdates()||!i||this._forceRefresh?(this._chunk&&this._store.remove(this._chunk),this._forceRefresh=!1,this._chunk=new pa(this._stagingStore.reader),this._store.insert(this._chunk),this.events.emit("tick"),!0):(this.events.emit("tick"),!1)}async updateFields(i){throw new Error("Updating available fields not supported for StreamLayer")}async load(i){}unload(i){}disconnect(){this._connection=yt(this._connection),this._connectionState.connection=null,this._handlesGroup?.remove()}connect(){if(this._connection!=null)return;const{geometryType:i,spatialReference:e}=this._metadata,{maxReconnectionAttempts:t,maxReconnectionInterval:s,geometryDefinition:r,definitionExpression:a,customParameters:n}=this._dataFilter;this._connection=Br(this._service.source,e,this._streamOptions.outSR,i,a,r,t,s,n),this._handlesGroup=ee([this._connection.on("data-received",o=>this._onFeature(o)),this._connection.on("message-received",o=>this._onWebSocketMessage(o))]),this._connectionState.connection=this._connection}clear(){this._manager.checkForUpdates(),this._stagingStore.clear(),this._forceRefresh=!0}updateCustomParameters(i){this._connection?.updateCustomParameters(i)}sendMessageToSocket(i){this._connection?.sendMessageToSocket(i)}sendMessageToClient(i){this._connection?.sendMessageToClient(i)}_onWebSocketMessage(i){if("type"in i)switch(i.type){case"delete":if(i.objectIds)for(const e of i.objectIds)this._manager.removeById(e);if(i.trackIds)for(const e of i.trackIds)this._manager.removeByTrackId(e);break;case"clear":this.clear()}this.events.emit("message-received",i)}_onFeature(i){try{this._manager.add(i),this.events.emit("data-received",i)}catch{}}};class ga{constructor(e){this._metadata=e,this._chunks=new Map,this._chunksToRemove=[],this._overrides=new Fi,this.events=new ke,this.featureAdapter=new lr}destroy(){this.clear()}clear(){for(const e of this._chunks.values())this._chunksToRemove.push(e);this._chunks.clear(),this._overrides.clearWeakOverrides()}*chunks(){this._overrides&&(yield this._overrides.asChunk(this._metadata)),yield*this._chunks.values()}insert(e){y("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.insert`),this._overrides.onChunkInsert(e),this._chunks.set(e.chunkId,e),this.events.emit("changed")}remove(e){y("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.remove`),this._chunks.delete(e.chunkId),this._chunksToRemove.push(e)}cleanup(){const e=this._chunksToRemove;return this._chunksToRemove=[],this._overrides.cleanup(this._chunks.values()),e}applyOverride(e){this._overrides.apply(e,this),this.events.emit("changed");for(const t of this._chunks.values())t.invalidate()}takeOverrideUpdate(){return this._overrides.takeOverrideUpdate()}refresh(){this.events.emit("refresh")}forEach(e){const t=new Set;for(const s of this.chunks()){const r=s.reader.getCursor();for(;r.next();){const a=r.getObjectId();t.has(a)||(e(r.copy()),t.add(a))}}}forEachUnsafe(e){const t=new Set;for(const s of this.chunks()){const r=s.reader.getCursor();for(;r.next();){const a=r.getObjectId();t.has(a)||(e(r),t.add(a))}}}mapObjectIdsFromGlobalIds(e,t){const s=new Map,r=new Set(e);return this._overrides.putWeakObjectIdsFromGlobalIds(s,r,t),this._forEachUnsafeIgnoreOverrides(a=>{const n=a.readAttribute(t);if(n&&r.has(n)&&!s.has(n)){const o=a.getObjectId();s.set(n,o)}}),s}forEachInBounds(e,t){const s=new Set;for(const r of this.chunks()){const a=r.queryFeaturesInBounds(e);for(;a.next();){const n=a.getObjectId();s.has(n)||(t(a.copy()),s.add(n))}}}forEachBounds(e,t){const s=Fe();for(const r of e)r.getBounds(s)&&t(s)}_forEachUnsafeIgnoreOverrides(e){const t=new Set;for(const s of this._chunks.values()){const r=s.reader.withoutOverrides().getCursor();for(;r.next();){const a=r.getObjectId();t.has(a)||(e(r),t.add(a))}}}}class ya{constructor(e,t,s,r,a){this.service=e,this._aggregateAdapter=t,this._subscriptions=s,this._connection=r,this._cachedObjectIds=a,this._updateTracking=new Vr({debugName:"FeatureSource"}),this._didInvalidateData=!1,this._metadata=re.createFeature(e.metadata),this._store=new ga(this._metadata)}destroy(){this._strategy?.destroy(),this._store.destroy(),this._streamMessenger?.destroy(),this.service.type==="memory"&&this.service.source.map(e=>e.close())}get metadata(){if(!this._metadata)throw new Error("InternalError: Metadata not defined. Was update called?");return this._metadata}get store(){return this._store}get streamMessenger(){return this._streamMessenger==null&&this._initStreamMessenger(),this._streamMessenger}get statistics(){return Wi.from(this._store)}get updateTracking(){return this._updateTracking}get queryEngine(){if(!this._queryEngine){if(!this._schema)return null;const{dataFilter:e}=this._schema.mutable,t=this._schema.mutable.availableFields,s=this._metadata;this._queryEngine=new At({featureStore:this._store,fieldsIndex:s.fieldsIndex,geometryType:s.geometryType,featureIdInfo:s.featureIdInfo,hasM:!1,hasZ:!1,spatialReference:this.service.outSpatialReference,aggregateAdapter:this._aggregateAdapter,timeInfo:s.timeInfo,definitionExpression:e.definitionExpression,availableFields:t})}return this._queryEngine}get isStream(){return this._schema.type==="stream"}get hasDisplayFilter(){return!!this._schema&&"displayFilterInfo"in this._schema.mutable&&this._schema.mutable.displayFilterInfo!=null}chunks(){return Array.from(this._store.chunks())}prepareCacheUpdate(e,t){const s=new Set,r=new Set;for(const a of e)this._cachedObjectIds.has(a)||(this._cachedObjectIds.add(a),s.add(a));for(const a of t)this._cachedObjectIds.delete(a),r.add(a);this.hasDisplayFilter&&this._strategy.prepareCacheUpdate(s,r)}async applyCacheUpdate(){this.hasDisplayFilter&&await this._updateTracking.addPromise(this._strategy.applyCacheUpdate())}cleanup(){return this._store.cleanup()}onSubscribe(e){this._connection.onEvent({type:"subscribe",tile:e.tile.id});const t=this._strategy?.load(e);t&&(t.then(()=>this._connection.onEvent({type:"loaded",tile:e.tile.id})).catch(s=>this._connection.onEvent({type:"error",tile:e.tile.id,error:s})),this._updateTracking.addPromise(t))}onResume(e){this._updateTracking.addPromise(wt(this._strategy?.load(e)))}onUnsubscribe(e){this._connection.onEvent({type:"unsubscribe",tile:e.tile.id}),this._strategy?.unload(e)}applyOverride(e){this._didInvalidateData=!0,this._store.applyOverride(e)}takeOverrideUpdate(){return this._store.takeOverrideUpdate()}async update(e,t){const s=e.source,r=xt(this._schema?.mutable,s.mutable);if(!r)return!1;if(y("esri-2d-update-debug")&&console.debug(`Version[${t}] FeatureSource.update`,{changes:r}),this._schema=s,this._queryEngine?.destroy(),this._queryEngine=null,this.service.type==="feature-service"&&this.service.queryMetadata.lastEditDate!=null&&(this._lastEditDate=this.service.queryMetadata.lastEditDate),this._streamMessenger==null&&this._schema.type==="stream"&&this._initStreamMessenger(),St(r,"sourceRefreshVersion")&&this._strategy?.refresh)return this._strategy.refresh();if((s.type==="feature"||s.type==="parquet")&&St(r,"availableFields")){if(await this._queryLastEditDateChanged()||this._didInvalidateData)this._didInvalidateData=!1,await this._updateStrategy(t);else{this._connection.onEvent({type:"updateFieldsStart"});try{await this._strategy.updateFields(s.mutable.availableFields),this._connection.onEvent({type:"updateFieldsEnd"})}catch(a){this._connection.onEvent({type:"updateFieldsError",error:a})}}return!1}return!!(qe(r,"dataFilter")||qe(r,"sourceRefreshVersion")||this._strategy.about.supportsDisplayFilter&&qe(r,"displayFilterInfo"))&&(await this._updateStrategy(t),!0)}async addParquetFile(e){this._strategy.addParquetFile(e)}unsafeSetQueryHistoricMoment(e){this._schema.type==="feature"&&(this._schema.mutable.dataFilter.historicMoment=e,this._strategy.unsafeSetQueryHistoricMoment(new Date(e)))}_initStreamMessenger(){this._streamMessenger==null&&(this._streamMessenger=new pe(this._connection))}async normalizeOverrides(e){const t={historicMoment:e.historicMoment,commands:{updateWeak:e.commands.updateWeak.map(q.fromJSON),removeWeak:e.commands.removeWeak,update:e.commands.update.map(q.fromJSON),remove:e.commands.remove,release:e.commands.release}},s=e.commands.updateByIdWeak,r=await this._queryOptimizedFeatures(s);return t.commands.updateWeak.push(...r),t}async _queryOptimizedFeatures(e){if(e.length===0)return[];const t=[],s=(await this._strategy.queryByObjectId(e)).getCursor();for(;s.next();)t.push(s.readOptimizedFeatureWorldSpace());return t}getObjectIdsFromGlobalIds(e){const t=this.metadata.globalIdField;if(t==null)throw new Error("InternalError: Recieved an edit with globalIds, but not supported by the service");const s=this._store.mapObjectIdsFromGlobalIds(e,t).values();return Array.from(s)}async _queryLastEditDateChanged(){if(this._lastEditDate==null)return!1;const e=this.service.source,t={...e.query,f:"json"},s=(await Me(e.path,{query:t,responseType:"json"})).data.editingInfo.lastEditDate;return s!==this._lastEditDate&&(this._lastEditDate=s,!0)}async _createStrategy(){const e="isSourceHosted"in this.service&&this.service.isSourceHosted,t=Array.isArray(this.service.source),s=this.service.source&&"collection"in this.service.source,r=e||t||s;if(this._schema.type==="stream"){const c=new fa(this.service,this._schema.mutable.dataFilter,this._store,{outSR:this.service.outSpatialReference},this.metadata);return this._streamMessenger.strategy=c,c}if(this._schema.type==="parquet"){const c=this.service;return new la(c,this._metadata,this._schema,this._store)}const a=this.service,n=Gi.fromSchema(a,this._schema,this._metadata),o=await this._supportSnapshotMode(a,n);return o?new ha(a,n,this._store,o,this.metadata,this._connection):r?new oa(a,n,this._store,this.metadata,this._connection):new aa(a,n,this._store,this.metadata,this._connection)}async _updateStrategy(e){const t=await this._createStrategy();this._connection.onEvent({type:"updateStrategyStart",about:t.about});const s=!!this._strategy;this._store.clear(),this._strategy?.destroy(),this._strategy=t,y("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategy`,{strategy:t});const r=Array.from(this._subscriptions.values());if(!r.length)return void this._connection.onEvent({type:"updateStrategyEnd"});const a=Promise.all(r.map(n=>this._strategy.load(n).then(()=>this._connection.onEvent({type:"loaded",tile:n.tile.id})).catch(o=>this._connection.onEvent({type:"error",tile:n.tile.id,error:o}))));this._updateTracking.addPromise(a),this._strategy.prepareCacheUpdate(this._cachedObjectIds);try{s&&await a}catch(n){Ce(n)}this._connection.onEvent({type:"updateStrategyEnd"}),y("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategyEnd`,{strategy:t})}async _supportSnapshotMode(e,t){const{queryMetadata:s}=e,r=s.snapshotInfo;return r?await this._executeExceedsLimitQuery(e,t,r)?null:r:null}async _executeExceedsLimitQuery(e,t,s){if(!s.supportsExceedsLimit)return this._executeExceedsLimitFallbackQuery(e,t,s);try{const r=e.source,a=t.createQuery();a.inner.orderByFields=[],a.inner.returnGeometry=!1;const n=new Pr;return n.statisticType="exceedslimit",n.maxPointCount=s.maxFeatureCount,n.maxRecordCount=s.maxFeatureCount,n.outStatisticFieldName="exceedslimit",s.maxVertexCount&&(n.maxVertexCount=s.maxVertexCount),a.inner.outStatistics=[n],a.inner.cacheHint=!0,(await Le(r,a.inner,void 0,{query:a.customParameters})).data.features[0]?.attributes.exceedslimit!==0}catch{return!0}}async _executeExceedsLimitFallbackQuery(e,t,s){if(s.maxVertexCount)return!0;const r=e.source,a=t.createQuery();a.inner.orderByFields=[],a.inner.returnGeometry=!1,a.inner.cacheHint=!0;try{return(await Ar(r,a.inner,{query:a.customParameters})).data.count>s.maxFeatureCount}catch{return!0}}}class ma{constructor(e,t){this.tile=e,this.version=t,this._abortController=new AbortController}get key(){return this.tile.key}get signal(){return this._abortController.signal}abort(){this._abortController.abort()}}class ge{constructor(e){this.inner=e,this.resolver=er()}}class ba{constructor(){this._aggregateAdapter={getFeatureObjectIds:e=>this._processor.getFeatureObjectIdsForAggregate(e)},this._subscriptions=new Map,this._cachedObjectIds=new Set,this._updateRequested=!1,this._didSourceRefresh=!1,this._updateSubscriptionRequests=[],this._updateHighlightRequests=[]}destroy(){this._subscriptions.clear(),this._processor?.destroy(),this._source?.destroy(),this._handles?.remove(),this._updateOverridesRequest=null,this._tileInfoView=null}onAttach(e){y("esri-2d-update-debug")&&console.debug("Pipeline.onAttach");const t=this._connection,s=sr.fromJSON(e.tileInfoJSON);this._tileInfoView=new ir(s),this._source=new ya(e.service,this._aggregateAdapter,this._subscriptions,t,this._cachedObjectIds),this._processor=new Ei(t,this._source),this._handles=ee([this._source.store.events.on("changed",()=>this._requestUpdate()),this._source.store.events.on("refresh",()=>this._requestRefresh()),Oe(()=>this._source.updateTracking.updating,()=>{this._requestUpdate(),wt(this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0}))})])}onDetach(){y("esri-2d-update-debug")&&console.debug("Pipeline.onDetach"),this.destroy()}set remoteClient(e){this._connection=new Qr(e)}get features(){const e=this._source?.queryEngine;if(!e)throw new T("no-queryEngine","No query engine defined");return e}get aggregates(){const e=this._processor?.aggregateQueryEngine;if(!e)throw new T("no-queryEngine","No aggregate query engine defined");return e}get processor(){return this._processor}get streamMessenger(){return this._source.streamMessenger}getDisplayFeatures(e){return this._processor.getDisplayFeatures(e)}getDisplayIds(e){return this._processor.getDisplayIds(e)}getObjectIdsFromGlobalIds(e){return this._source.getObjectIdsFromGlobalIds(e)}async updateSchema(e,t){return y("esri-2d-update-debug")&&this._updateSchemaRequest&&console.error("InternalError: Schema already updating"),this._updateSchemaRequest=new ge({schema:e,version:t}),this._requestUpdate(),this._updateSchemaRequest.resolver.promise}updateSubscriptions(e){const t=new ge(e);return this._updateSubscriptionRequests.push(t),this._requestUpdate(),t.resolver.promise}updateHighlight(e){const t=new ge(e);return this._updateHighlightRequests.push(t),this._requestUpdate(),t.resolver.promise}async addParquetFile(e){return this._source.addParquetFile(e)}async onOverride(e){if(this._updateOverridesRequest!=null)throw new T("featurelayer","InternalError - Already processing an edit");this._updateOverridesRequest=new ge(e);const t=this._updateOverridesRequest.resolver.promise;return this._requestUpdate(),t}queryStatistics(){return this._source.statistics.toJSON()}async queryVisibleFeatures(e,t){return this.features.executeQuery(e,t)}async queryHeatmapStatistics(e){const t=Math.round(Hs(e.radius));let s=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY;const a=typeof e.fieldOffset=="string",n=e.fieldOffset??0,o=Array.from(this._subscriptions.values()),c=this._source.chunks(),d=t**2,l=3/(Math.PI*d),h=2*t,u=Math.ceil(k/h);for(const p of o){const _=p.tile,f=new Float64Array(u*u);for(const m of c){const g=m.getTileReader(_);if(!g)continue;const I=g.getCursor();for(;I.next();){let b=1;if(e.field!=null){const X=I.readAttribute(e.field);b=a?-1*+X:+X+n}const v=I.readXForDisplay()/h,S=I.readYForDisplay()/h,x=Math.floor(v),C=Math.floor(S);if(x<0||C<0||x>=u||C>=u)continue;const D=((.5+x-v)*h)**2+((.5+C-S)*h)**2;if(D>d)continue;const ve=b*(l*(1-D/d)**2);f[C+x*u]+=ve}}for(let m=0;m<f.length;m++)s=Math.min(s,f[m]),r=Math.max(r,f[m])}return{max:r,min:s}}async getSampleFeatures(e){const t=this._source.chunks();if(t.reduce((c,d)=>c+d.size(),0)<=e.minFeatureCount){if(!this._source.updateTracking.updating){const c=[];return this._source.store.forEachUnsafe(d=>c.push(d.readLegacyFeatureWorldSpace())),c}return null}const s=new Set,r=[],a=t.map(c=>c.reader.getCursor()),n=new Zs,o=3*e.sampleSize;for(let c=0;c<o&&r.length<e.sampleSize;c++){const d=a[n.getIntRange(0,t.length-1)];if(d.getSize()===0)continue;const l=n.getIntRange(0,d.getSize()-1);d.setIndex(l);const h=d.getObjectId();s.has(h)||(s.add(h),r.push(d.readLegacyFeatureWorldSpace()))}return r.length>=e.sampleSize?r:null}_requestUpdate(){this._updateRequested||(this._updateRequested=!0,Ks(()=>this._scheduleNextUpdate()))}_requestRefresh(){this._didSourceRefresh=!0,this._requestUpdate()}_scheduleNextUpdate(){this._updateRequested&&(this._ongoingUpdate||(this._ongoingUpdate=Te(this._doUpdate()).finally(()=>{this._ongoingUpdate=null,this._scheduleNextUpdate()}),this._updateRequested=!1))}_subscribe(e){const t=e.tileId;if(this._subscriptions.has(t))return;y("esri-2d-update-debug")&&console.debug(`Tile[${t}] Pipeline.subscribe`);const s=new ar(this._tileInfoView,t),r=new ma(s,e.version);this._subscriptions.set(t,r),this._source.onSubscribe(r),this._processor.onSubscribe(r)}_unsubscribe(e){const t=this._subscriptions.get(e);t&&(y("esri-2d-update-debug")&&console.debug(`Tile[${e}] Pipeline.unsubscribe`),t.abort(),this._source.onUnsubscribe(t),this._processor.onUnsubscribe(t),this._subscriptions.delete(t.key.id))}async _doUpdate(){if(y("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateStart"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0}),this._updateSubscriptionRequests.length){const a=this._updateSubscriptionRequests;this._updateSubscriptionRequests=[];for(const n of a)this._doUpdateSubscriptions(n.inner),n.resolver.resolve()}if(this._updateHighlightRequests.length){const a=this._updateHighlightRequests,n=new Set,o=new Set;for(const c of a)for(const{objectId:d,highlightFlags:l}of c.inner.highlights)l?(n.add(d),o.delete(d)):(o.add(d),n.delete(d));this._source.prepareCacheUpdate(n,o)}const e=this._updateSchemaRequest;this._updateSchemaRequest=null;let t=!1;if(e!=null){const{schema:a,version:n}=e.inner;t=await this._doUpdateSchema(a,n)}this._processor.requiresInvalidation()&&(t=!0),this._didSourceRefresh&&(t=!0,this._didSourceRefresh=!1),t&&(this._processor.invalidate(),await this._connection.container.updateRenderState(this._processor.version));const s=this._updateOverridesRequest;if(this._updateOverridesRequest=null,s!=null){y("esri-2d-update-debug")&&console.debug("Pipeline.applyOverride",s.inner),s.inner.historicMoment!=null&&this._source.unsafeSetQueryHistoricMoment(s.inner.historicMoment);const a=await this._source.normalizeOverrides(s.inner);this._source.applyOverride(a),y("esri-2d-update-debug")&&console.debug("Pipeline.endOverride",s.inner)}if(await this._source.applyCacheUpdate(),this._updateHighlightRequests.length){const a=this._updateHighlightRequests;this._updateHighlightRequests=[];for(const n of a)this._processor.updateHighlight(n.inner),n.resolver.resolve()}const r=this._source.cleanup();this._processor.removeChunks(r);try{const a=this._source.takeOverrideUpdate();if(a!=null&&this._subscriptions.size){y("esri-2d-update-debug")&&console.debug("Pipeline.applyOverrideChangesStart"),await this._connection.container.lockForOverrides();try{await this._processor.applyOverrideUpdate(a)}catch(n){y("esri-2d-update-debug")&&console.debug("InternalError",n)}await this._connection.container.unlockForOverrides(),y("esri-2d-update-debug")&&console.debug("Pipeline.applyOverrideChangesEnd")}this._subscriptions.size&&(y("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksStart"),await this._processor.updateChunks(),y("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksEnd"))}catch(a){Ce(a)}s?.resolver.resolve(),e?.resolver.resolve(),e==null&&t&&await this._connection.container.trySwapRenderState(),this._updateRequested?(y("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=true]"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0})):(y("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=false, After flush]"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:this._updateRequested}))}async _doUpdateSchema(e,t){y("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateStart`,{schema:e});const s={tileInfo:this._tileInfoView?.tileInfo},r=await this._source.update(e,t),a=Array.from(this._subscriptions.values()),n=this._processor.update(e,t,s,r,a);return y("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateEnd`),n}_doUpdateSubscriptions(e){y("esri-2d-update-debug")&&console.debug("Pipeline.updateSubscriptions",e);for(const t of e.subscribe)this._subscribe(t);for(const t of e.unsubscribe)this._unsubscribe(t)}}export{ba as default};
