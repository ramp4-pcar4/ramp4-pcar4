import{n as m,c7 as c,v as i,x as l,z as u}from"./main-CnDVnExo.js";import{d as p}from"./scaleUtils-vWhSfrfy.js";import{n as y}from"./floorFilterUtils-4r-vVdzs.js";import{i as b}from"./sublayerUtils-DYdOZR7k.js";const d={visible:"visibleSublayers",definitionExpression:"layerDefs",labelingInfo:"hasDynamicLayers",labelsVisible:"hasDynamicLayers",opacity:"hasDynamicLayers",minScale:"visibleSublayers",maxScale:"visibleSublayers",renderer:"hasDynamicLayers",source:"hasDynamicLayers"};let s=class extends m{constructor(e){super(e),this.floors=null,this.scale=0}destroy(){this.layer=null}get dynamicLayers(){if(!this.hasDynamicLayers)return null;const e=this.visibleSublayers.map(r=>{const a=y(this.floors,r);return r.toExportImageJSON(a)});return e.length?JSON.stringify(e):null}get hasDynamicLayers(){return this.layer&&b(this.visibleSublayers,this.layer.serviceSublayers,this.layer.gdbVersion)}set layer(e){this._get("layer")!==e&&(this._set("layer",e),this.removeHandles("layer"),e&&this.addHandles([e.allSublayers.on("change",()=>this.notifyChange("visibleSublayers")),e.on("sublayer-update",r=>this.notifyChange(d[r.propertyName]))],"layer"))}get layers(){const e=this.visibleSublayers;return e?e.length?"show:"+e.map(r=>r.id).join(","):"show:-1":null}get layerDefs(){const e=!!this.floors?.length,r=this.visibleSublayers.filter(a=>a.definitionExpression!=null||e&&a.floorInfo!=null);return r.length?JSON.stringify(r.reduce((a,n)=>{const o=y(this.floors,n),t=c(o,n.definitionExpression);return t!=null&&(a[n.id]=t),a},{})):null}get version(){this.commitProperty("layers"),this.commitProperty("layerDefs"),this.commitProperty("dynamicLayers");const e=this.layer;return e&&(e.commitProperty("dpi"),e.commitProperty("imageFormat"),e.commitProperty("imageTransparency"),e.commitProperty("gdbVersion")),(this._get("version")||0)+1}get visibleSublayers(){const e=[];if(!this.layer)return e;const r=this.layer.sublayers,a=this.scale,n=t=>{t.visible&&(a===0||p(a,t.minScale,t.maxScale))&&(t.sublayers?t.sublayers.forEach(n):e.unshift(t))};r&&r.forEach(n);const o=this._get("visibleSublayers");return!o||o.length!==e.length||o.some((t,h)=>e[h]!==t)?e:o}toJSON(){const e=this.layer;let r={dpi:e.dpi,format:e.imageFormat,transparent:e.imageTransparency,gdbVersion:e.gdbVersion||null};return this.hasDynamicLayers&&this.dynamicLayers?r.dynamicLayers=this.dynamicLayers:r={...r,layers:this.layers,layerDefs:this.layerDefs},r}};i([l({readOnly:!0})],s.prototype,"dynamicLayers",null),i([l()],s.prototype,"floors",void 0),i([l({readOnly:!0})],s.prototype,"hasDynamicLayers",null),i([l()],s.prototype,"layer",null),i([l({readOnly:!0})],s.prototype,"layers",null),i([l({readOnly:!0})],s.prototype,"layerDefs",null),i([l({type:Number})],s.prototype,"scale",void 0),i([l({readOnly:!0})],s.prototype,"version",null),i([l({readOnly:!0})],s.prototype,"visibleSublayers",null),s=i([u("esri.layers.support.ExportImageParameters")],s);export{s as y};
