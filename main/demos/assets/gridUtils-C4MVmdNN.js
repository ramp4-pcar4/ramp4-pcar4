import{d1 as g,bN as y,I as h,b$ as m,a2 as M,an as G}from"./main-Crkq4LWq.js";import{y as W,R as w}from"./geodesicUtils-qV27ZpRT.js";import{M as S}from"./normalizeUtils-Dg7DX0Kf.js";const d=50,Z=5;function N(t,n){return Math.log(t)/Math.log(n)}function _(t,n,a){const o=t===1?10:t;return o**(a?Math.round(N(d/n,o)):0)}function j(t){const{isGeographic:n,isWebMercator:a}=t;return!n&&!a}function k(t,n,a){const o=typeof t=="number"?null:t,e=a??o?.spatialReference;if(e==null||!g(e)||j(e))return y(e);let s=o?.x??t,c=o?.y??n;const f=1/Math.sqrt(2);let i=s+f,u=c+f;const{isWebMercator:$,isGeographic:x}=e;let l=x&&!W(e)?h.WGS84:e;if($){let r=new m({x:s,y:c,spatialReference:e});M(r,!0,r),s=r.x,c=r.y,r=new m({x:i,y:u,spatialReference:e}),M(r,!0,r),i=r.x,u=r.y,l=h.WGS84}const b=new G({paths:[[[s,c],[i,u]]],spatialReference:l}),R=S(b,10);let p;try{[p]=w([R],"meters")}catch{return y(e)}return p}export{j as f,_ as l,Z as t,k as u};
