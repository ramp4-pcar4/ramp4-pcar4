import{dV as x,dW as S}from"./main-Crkq4LWq.js";import{P,j as E,a as y,f as G,x as T}from"./Point2D-yI-uny1B.js";import{w as v}from"./OperatorShapePreservingLength-C27yNl3r.js";import{H as w,K as C,b as D,m as q,A as X,T as A,q as L,Z as Y,C as b,D as j}from"./ProjectionTransformation-DvPoqTHa.js";import"./preload-helper-DMGCcr4D.js";import"./Envelope2D-N58wWtPO.js";import"./Transformation2D-CZuEM6rU.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./OperatorDefinitions-DP7_WWTp.js";class k{getOperatorType(){return 10311}supportsCurves(){return!0}accelerateGeometry(t,r,l){return!1}canAccelerateGeometry(t){return!1}execute(t,r,l,a){if(l===4)return new v().execute(t,r,a);if(r.getCoordinateSystemType()===0&&P(""),E(t),t.isEmpty()||t.getDimension()<1)return 0;const s=r.getGCS(),n=w();s.querySpheroidData(n);const c=n.majorSemiAxis,u=n.e2,m=s.getUnit().getUnitToBaseFactor();let e;const o=t.getGeometryType();if(o===y.enumPolygon?e=t.getBoundary():o===y.enumEnvelope?e=C(t):G(o)?(e=new D({vd:t.getDescription()}),e.addSegment(t,!0)):e=t,e.hasNonLinearSegments()&&(e=new q().execute(e,0,r.getTolerance(0),0,a)),s!==r){const i=r.getSRToGCSTransform();if(r.isPannable()){e=X(e,r),o===y.enumPolyline&&e===t&&(e=t.clone());const d=new T;r.getPannableExtent().queryIntervalX(d);for(let g=0,h=e.getPointCount();g<h;g++){const p=e.getXY(g);p.x=A(p.x,d),e.setXY(g,p)}}const f=e.createInstance();e=Y(i,e,f,a)?f:new L().execute(e,i,a)}return this._ExecuteMultiPathGeodeticLength(e,l,c,u,m)}_ExecuteMultiPathGeodeticLength(t,r,l,a,s){const n={stack:[],error:void 0,hasError:!1};try{const c=x(n,new b,!1);let u=0;const m=t.querySegmentIterator();for(;m.nextPath();)for(;m.hasNextSegment();){const e=m.nextSegment(),o=e.getStartXY(),i=e.getEndXY();o.scale(s),i.scale(s),j.geodeticDistance(l,a,o.x,o.y,i.x,i.y,c,null,null,r),u+=c.val}return u}catch(c){n.error=c,n.hasError=!0}finally{S(n)}}}export{k as OperatorGeodeticLength};
