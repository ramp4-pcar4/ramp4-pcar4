import{bp as W,z,q as n,v as o,x as h,f as d,ia as y,ac as L,bL as C,bA as N,h3 as B,G as E,H as w,iX as Y,dw as Z,i as ee,s as te,aq as O,ad as ie,ag as re}from"./main-Crkq4LWq.js";import{a as se}from"./layerContainerType-C5CzMsLd.js";import{t as x,c as G}from"./FeatureReductionSelection-CbJd8GIU.js";import{p as U,l as J}from"./OperationalLayer-C2tThDwf.js";import{t as D,A as H}from"./labelingInfo-DLuYGuzY.js";import{read as R}from"./jsonUtils-CAbJUe8w.js";import{m as X}from"./typeUtils-CnKFz_x7.js";import{m as T}from"./SimpleRenderer-Dbpl5h1j.js";import{g as ne,f as oe,l as I}from"./commonProperties-CYfuZJGd.js";import{x as K}from"./MD5-MtSiOt06.js";let f=class extends W.ClonableMixin(z){constructor(s){super(s),this.expression=null,this.title=null,this.returnType=null}};n([o({type:String,json:{write:!0}})],f.prototype,"expression",void 0),n([o({type:String,json:{write:!0}})],f.prototype,"title",void 0),n([o({type:String,json:{write:!0}})],f.prototype,"returnType",void 0),f=n([h("esri.layers.support.ExpressionInfo")],f);var _;let p=class extends z{static{_=this}constructor(i){super(i),this.isAutoGenerated=!1,this.name=null,this.alias=null,this.onStatisticField=null,this.onStatisticExpression=null,this.statisticType=null}clone(){return new _({name:this.name,alias:this.alias,isAutoGenerated:this.isAutoGenerated,onStatisticExpression:d(this.onStatisticExpression),onStatisticField:this.onStatisticField,statisticType:this.statisticType})}};n([o({type:Boolean,json:{write:!0}})],p.prototype,"isAutoGenerated",void 0),n([o({type:String,json:{write:!0}})],p.prototype,"name",void 0),n([o({type:String,json:{write:!0}})],p.prototype,"alias",void 0),n([o({type:String,json:{write:!0}})],p.prototype,"onStatisticField",void 0),n([o({type:f,json:{write:!0}})],p.prototype,"onStatisticExpression",void 0),n([o({type:String,json:{write:!0}})],p.prototype,"statisticType",void 0),p=_=n([h("esri.layers.support.AggregateField")],p);var F;let u=F=class extends x{constructor(i){super(i),this.type="binning",this.binType="geohash",this.fixedBinLevel=null,this.labelingInfo=null,this.labelsVisible=!0,this.maxScale=0,this.popupEnabled=!0,this.popupTemplate=null,this.size=y("12px"),this.fields=[],this.renderer=null}writeFields(i,s,e){const t=i.filter(r=>r.statisticType!=="avg_angle").map(r=>r.toJSON());L(e,t,s)}readRenderer(i,s,e){const t=s.drawingInfo?.renderer;return t?R(t,s,e)??void 0:D(s,e)}clone(){return new F({fields:d(this.fields),fixedBinLevel:this.fixedBinLevel,labelingInfo:d(this.labelingInfo),labelsVisible:this.labelsVisible,maxScale:this.maxScale,popupEnabled:this.popupEnabled,popupTemplate:d(this.popupTemplate),renderer:d(this.renderer),binType:d(this.binType),size:this.size})}};n([C({binning:"binning"})],u.prototype,"type",void 0),n([C({geohash:"geohash",square:"square"}),o({type:["geohash","square"]})],u.prototype,"binType",void 0),n([o({type:Number,json:{write:!0}})],u.prototype,"fixedBinLevel",void 0),n([o({type:[H],json:{read:{source:"drawingInfo.labelingInfo"},write:{target:"drawingInfo.labelingInfo"}}})],u.prototype,"labelingInfo",void 0),n([o(U)],u.prototype,"labelsVisible",void 0),n([o({type:Number,json:{default:0,name:"visibilityInfo.maxScale"}})],u.prototype,"maxScale",void 0),n([o(J)],u.prototype,"popupEnabled",void 0),n([o({type:N,json:{name:"popupInfo",write:!0}})],u.prototype,"popupTemplate",void 0),n([o({cast:i=>i==="auto"?i:B(y(i))})],u.prototype,"size",void 0),n([o({type:[p],json:{write:!0}})],u.prototype,"fields",void 0),n([E("fields")],u.prototype,"writeFields",null),n([o({types:X,json:{write:{target:"drawingInfo.renderer"}}})],u.prototype,"renderer",void 0),n([w("renderer",["drawingInfo.renderer"])],u.prototype,"readRenderer",null),u=F=n([h("esri.layers.support.FeatureReductionBinning")],u);var V;function M(i){return i.type==="simple"&&!i.visualVariables?.length}let l=V=class extends z{constructor(i){super(i),this.type="cluster",this.clusterRadius=y("80px"),this.clusterMinSize=y("12px"),this.clusterMaxSize=y("50px"),this.maxScale=0,this.popupEnabled=!0,this.popupTemplate=null,this.renderer=null,this.symbol=null,this.labelingInfo=null,this.labelsVisible=!0,this.fields=[]}readRenderer(i,s,e){const t=s.drawingInfo?.renderer;return t?.authoringInfo?.isAutoGenerated?null:t?M(t)?null:R(t,s,e)??void 0:D(s,e)}readSymbol(i,s,e){const t=s.drawingInfo?.renderer;return t?.authoringInfo?.isAutoGenerated?null:t&&M(t)?R(t,s,e)?.symbol:null}writeSymbol(i,s,e,t){const r=this.renderer?.authoringInfo?.isAutoGenerated;if(!this.renderer||r){const a=new T({symbol:i});s.drawingInfo={renderer:a.write({},t)}}}writeFields(i,s,e){const t=i.filter(r=>r.statisticType!=="avg_angle").map(r=>r.toJSON());L(e,t,s)}readFields(i,s,e){return i.filter(t=>!t.isAutoGenerated).map(t=>p.fromJSON(t))}clone(){return new V({clusterRadius:this.clusterRadius,clusterMinSize:this.clusterMinSize,clusterMaxSize:this.clusterMaxSize,labelingInfo:d(this.labelingInfo),labelsVisible:this.labelsVisible,fields:d(this.fields),maxScale:this.maxScale,renderer:d(this.renderer),symbol:d(this.symbol),popupEnabled:this.popupEnabled,popupTemplate:d(this.popupTemplate)})}};n([o({type:["cluster"],readOnly:!0,json:{write:!0}})],l.prototype,"type",void 0),n([o({cast:i=>i==="auto"?i:B(y(i)),json:{write:!0}})],l.prototype,"clusterRadius",void 0),n([o({type:Number,cast:y,json:{write:!0}})],l.prototype,"clusterMinSize",void 0),n([o({type:Number,cast:y,json:{write:!0}})],l.prototype,"clusterMaxSize",void 0),n([o({type:Number,json:{default:0,name:"visibilityInfo.maxScale"}})],l.prototype,"maxScale",void 0),n([o(J)],l.prototype,"popupEnabled",void 0),n([o({type:N,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],l.prototype,"popupTemplate",void 0),n([o({types:X,json:{write:{target:"drawingInfo.renderer"}}})],l.prototype,"renderer",void 0),n([w("renderer",["drawingInfo.renderer"])],l.prototype,"readRenderer",null),n([o({types:Y})],l.prototype,"symbol",void 0),n([w("symbol",["drawingInfo.renderer"])],l.prototype,"readSymbol",null),n([E("symbol")],l.prototype,"writeSymbol",null),n([o({type:[H],json:{read:{source:"drawingInfo.labelingInfo"},write:{target:"drawingInfo.labelingInfo"}}})],l.prototype,"labelingInfo",void 0),n([o(U)],l.prototype,"labelsVisible",void 0),n([o({type:[p],json:{write:!0}})],l.prototype,"fields",void 0),n([E("fields")],l.prototype,"writeFields",null),n([w("fields")],l.prototype,"readFields",null),l=V=n([h("esri.layers.support.FeatureReductionCluster")],l);const k={key:"type",base:x,typeMap:{cluster:l,binning:u}},ae={types:{key:"type",base:x,typeMap:{selection:G,cluster:l,binning:u}},json:{name:"layerDefinition.featureReduction",write:{allowNull:!0},origins:{"web-map":{types:k},"portal-item":{types:k},"web-scene":{types:{key:"type",base:x,typeMap:{selection:G}},name:"layerDefinition.featureReduction",write:{layerContainerTypes:se}}}}},le=()=>ee.getLogger("esri.views.2d.layers.support.clusterUtils");O.add("esri-cluster-arcade-enabled",!0);const ue=O("esri-cluster-arcade-enabled"),pe=new Set(["simple-line","simple-fill","picture-fill"]);function q(i,s){let e=s.clone();if(!de(e))return e;if(s.symbols.some(t=>pe.has(t.type))&&(e=new T({symbol:new Z})),e.authoringInfo||(e.authoringInfo=new ne),e.authoringInfo.isAutoGenerated=!0,"visualVariables"in e){const t=(e.visualVariables||[]).filter(r=>r.valueExpression!=="$view.scale");t.forEach(r=>{r.type==="rotation"?r.field?r.field=m(i,r.field,"avg_angle","number"):r.valueExpression&&(r.field=v(i,r.valueExpression,"avg_angle","number"),r.valueExpression=null):r.normalizationField?(r.field=m(i,r.field,"avg_norm","number",r.normalizationField),r.normalizationField=null):r.field?r.field=m(i,r.field,"avg","number"):r.valueExpression&&(r.field=v(i,r.valueExpression,"avg","number"),r.valueExpression=null)}),e.visualVariables=t}switch(e.type){case"simple":break;case"pie-chart":for(const t of e.attributes)t.field?t.field=m(i,t.field,"sum","number"):t.valueExpression&&(t.field=v(i,t.valueExpression,"sum","number"),t.valueExpression=null);break;case"unique-value":e.field?e.field=m(i,e.field,"mode","string"):e.valueExpression&&(e.field=v(i,e.valueExpression,"mode","string"),e.valueExpression=null);break;case"class-breaks":e.normalizationField?(e.field=m(i,e.field,"avg_norm","number",e.normalizationField),e.normalizationField=null):e.field?e.field=m(i,e.field,"avg","number"):e.valueExpression&&(e.field=v(i,e.valueExpression,"avg","number"),e.valueExpression=null)}return e}const de=i=>{const s=e=>le().error(new te("Unsupported-renderer",e,{renderer:i}));if(!i)return!1;switch(i.type){case"unique-value":if(i.field2||i.field3)return s("FeatureReductionCluster does not support multi-field UniqueValueRenderers"),!1;break;case"class-breaks":if(i.normalizationField){const e=i.normalizationType;if(e!=="field")return s(`FeatureReductionCluster does not support a normalizationType of ${e}`),!1}break;case"simple":case"pie-chart":break;default:return s(`FeatureReductionCluster does not support renderers of type ${i.type}`),!1}if(!ue){if("valueExpression"in i&&i.valueExpression)return s("FeatureReductionCluster does not currently support renderer.valueExpression. Support will be added in a future release"),!1;if(("visualVariables"in i&&i.visualVariables||[]).some(e=>!(!("valueExpression"in e)||!e.valueExpression)))return s("FeatureReductionCluster does not currently support visualVariables with a valueExpression. Support will be added in a future release"),!1}return!0};function ce(i,s,e){switch(i){case"sum":return`cluster_sum_${s}`;case"avg":case"avg_angle":return`cluster_avg_${s}`;case"mode":return`cluster_type_${s}`;case"avg_norm":{const t=e,r="field",a=s.toLowerCase()+",norm:"+r+","+t.toLowerCase();return"cluster_avg_"+K(a)}}}function v(i,s,e,t){const r=K(s),a=e==="mode"?`cluster_type_${r}`:e==="sum"?`cluster_sum_${r}`:`cluster_avg_${r}`;return i.some(c=>c.name===a)||i.push(new p({name:a,isAutoGenerated:!0,onStatisticExpression:new f({expression:s,returnType:t}),statisticType:e})),a}function m(i,s,e,t,r){if(s==="cluster_count"||i.some(c=>c.name===s))return s;const a=ce(e,s,r);return i.some(c=>c.name===a)||(e==="avg_norm"?i.push(new p({name:a,isAutoGenerated:!0,onStatisticExpression:new f({expression:`$feature.${s} / $feature.${r}`,returnType:t}),statisticType:"avg"})):i.push(new p({name:a,isAutoGenerated:!0,onStatisticField:s,statisticType:e}))),a}const Ie=i=>{let s=class extends i{constructor(...e){super(...e),this.addHandles(ie(()=>this.renderer,()=>{if(this.featureReduction){const t=this._normalizeFeatureReduction(this.featureReduction);this._set("featureReduction",t)}},re))}set featureReduction(e){const t=this._normalizeFeatureReduction(e);this._set("featureReduction",t)}set renderer(e){}_withClusterVariable(e,t,r){const a=e.clone();return"visualVariables"in a&&(a.visualVariables||(a.visualVariables=[]),a.visualVariables.some(c=>c.type==="size")||a.visualVariables.push(new oe({field:"cluster_count",stops:[new I({value:1}),new I({useMinValue:!0,size:t}),new I({useMaxValue:!0,size:r})]}))),a}_normalizeFeatureReduction(e){if(e?.type!=="cluster")return e;const t=e.clone(),r=[new p({name:"cluster_count",alias:"cluster_count",isAutoGenerated:!0,statisticType:"count"})],a=(t.fields??[]).filter(b=>!b.isAutoGenerated),c=e.renderer&&!e.renderer.authoringInfo?.isAutoGenerated,{clusterMinSize:S,clusterMaxSize:$}=t;if(c){t.fields=[...r,...a];const b=this._withClusterVariable(t.renderer,S,$);return t.effectiveFeatureRenderer=b,t.effectiveClusterRenderer=b,t}if(e.symbol){if(t.fields=[...r,...a],t.renderer=null,!this.renderer)return t.effectiveFeatureRenderer=null,t.effectiveClusterRenderer=null,t;const b=q(r,this.renderer),g=this._withClusterVariable(b,S,$),P="visualVariables"in g&&g.visualVariables?g.visualVariables:[],Q=new T({symbol:e.symbol,visualVariables:P});return t.fields=[...r,...a],t.effectiveFeatureRenderer=g,t.effectiveClusterRenderer=Q,t}if(!this.renderer)return e;const j=q(r,this.renderer);t.fields=[...r,...a],t.renderer=j;const A=this._withClusterVariable(j,S,$);return t.effectiveFeatureRenderer=A,t.effectiveClusterRenderer=A,t}};return n([o(ae)],s.prototype,"featureReduction",null),s=n([h("esri.layers.mixins.FeatureReductionLayer")],s),s};export{Ie as d,p as n,ae as p};
