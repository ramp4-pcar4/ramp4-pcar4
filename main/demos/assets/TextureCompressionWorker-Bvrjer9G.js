import{_ as D}from"./preload-helper-DMGCcr4D.js";import{fj as S}from"./main-Crkq4LWq.js";import{_ as A}from"./TextureFormat-1mYWTFa-.js";import{l as w}from"./enums-UBzvFP7O.js";function R(){return C??=(async()=>{const t=await D(()=>import("./basis_encoder-j4FPjaUP.js"),[],import.meta.url),e=await t.default({locateFile:r=>S(`esri/libs/basisu/${r}`)});return e.initializeBasis(),e})(),C}let C;function b(){return E??=(async()=>await(await D(()=>import("./dxt_encoder-CtpzRCd9.js"),[],import.meta.url)).default({locateFile:e=>S(`esri/libs/dxtEncoder/${e}`)}))(),E}let E,X,B,u=null,h=null;class m{constructor(e,r){this.internalFormat=e,this.compressedTexture=r}}async function N(t){let e;if(e=t.data instanceof ImageBitmap?U(t.data):G(t.data,t.width,t.height,t.components,t.needsFlip),t.hasS3TC){h||await g();const r=new Uint8Array(e.length);if(h?.encode(e,t.width,t.height,t.preMultiplyAlpha,r)){const a=H(r,!0),o=[r.buffer];return{result:new m(a?.internalFormat??null,a?.textureData??null),transferList:o}}return{result:new m(null,null)}}if(t.hasETC){if(u||await M(),t.preMultiplyAlpha&&!h&&await g(),t.preMultiplyAlpha){const i=new Uint8ClampedArray(e.length);h?.premultiply(new Uint8Array(e),t.width,t.height,i),e=i}const r=await x(e,t.width,t.height,t.hasMipmap),a=r?await F(r):null,o=a?.compressedTexture?.levels.map(i=>i.buffer)||[];return{result:new m(a?.internalFormat??null,a?.compressedTexture??null),transferList:o}}return{result:new m(null,null)}}async function M(){u||(u=await(X??=R()))}async function g(){h||(h=await(B??=b()))}async function x(t,e,r,a,o=255,i=0,s=!1,l=!1){if(!u)return null;const n=new u.BasisEncoder;n.setPerceptual(!l),n.setCheckForAlpha(!0),n.setForceAlpha(!1),n.setRenormalize(l),n.setMipGen(a),n.setMipSRGB(!l),n.setCreateKTX2File(!0),n.setKTX2SRGBTransferFunc(!l),n.setQualityLevel(o),n.setCompressionLevel(i);const c=new Uint8Array(t.byteLength);n.setSliceSourceImage(0,new Uint8Array(t),e,r,s);const f=n.encode(c),d=new Uint8Array(c.buffer,0,f),p=new u.KTX2File(new Uint8Array(d));return p.isValid()?(n.delete(),d):(p.close(),p.delete(),n.delete(),null)}async function F(t){if(!u)return new m(null,null);const e=new u.KTX2File(new Uint8Array(t));e.startTranscoding();const[r,a]=e.getHasAlpha()?[A.ETC2_RGBA,w.COMPRESSED_RGBA8_ETC2_EAC]:[A.ETC1_RGB,w.COMPRESSED_RGB8_ETC2],o=e.getLevels(),i=[];for(let s=0;s<o;s++)i.push(new Uint8Array(e.getImageTranscodedSizeInBytes(s,0,0,r))),e.transcodeImage(i[s],s,0,0,r,0,-1,-1);return e.close(),e.delete(),{internalFormat:a,compressedTexture:{type:"compressed",levels:i}}}function U(t){const e=new OffscreenCanvas(t.width,t.height),r=e.getContext("2d");return r.drawImage(t,0,0),r.getImageData(0,0,e.width,e.height).data}function G(t,e,r,a,o){const i=new Uint8ClampedArray(t).subarray(0,e*r*a);if(!o)return i;const s=new Uint8ClampedArray(i.length),l=e*a;for(let n=0;n<r;n++){const c=n*l,f=(r-n-1)*l;s.set(i.subarray(c,c+l),f)}return s}const O=31,v=1,I=2,P=3,L=4,K=7,k=21,z=131072;function T(t){return t.charCodeAt(0)+(t.charCodeAt(1)<<8)+(t.charCodeAt(2)<<16)+(t.charCodeAt(3)<<24)}const $=T("DXT1"),V=T("DXT3"),j=T("DXT5");function H(t,e){const r=new Int32Array(t.buffer,t.byteOffset,O);let a,o;switch(r[k]){case $:a=8,o=w.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case V:a=16,o=w.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case j:a=16,o=w.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;default:return null}let i=1,s=r[L],l=r[P];(3&s||3&l)&&(s=s+3&-4,l=l+3&-4);const n=s,c=l;let f,d;r[I]&z&&e!==!1&&(i=Math.max(1,r[K]));let p=t.byteOffset+r[v]+4;const _=[];for(let y=0;y<i;++y)d=(s+3>>2)*(l+3>>2)*a,f=new Uint8Array(t.buffer,p,d),_.push(f),p+=d,s=Math.max(1,s>>1),l=Math.max(1,l>>1);return{textureData:{type:"compressed",levels:_},internalFormat:o,width:n,height:c}}export{m as TextureCompressionWorkerOutput,N as compress,x as compressRGBADataToKTX2,F as createTextureDataKTX2,M as initializeBasisEncoder,g as initializeDXTEncoder};
