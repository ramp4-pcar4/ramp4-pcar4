const y=9999999e31,E=2e-7,L={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE],unknown:void 0,c64:void 0,c128:void 0};function M(t){return L[t]??[-34028234663852886e22,34028234663852886e22]}const S={u1:1,u2:1,u4:1,u8:1,s8:1,u16:2,s16:2,u32:4,s32:4,f32:4,f64:8,unknown:4,c64:16,c128:32};function w(t){return S[t]}function I(t){return w(t.pixelType)*t.bandCount}function O(t,n){return t==null||n==null?"s32":t<0?t>=-128&&n<128?"s8":t>=-32768&&n<32768?"s16":"s32":n<256?"u8":n<65536?"u16":"u32"}function U(t){return(t?.startsWith("s")||t?.startsWith("u"))??!1}function P(t,n,e,i){let[r,o]=M(e);const u=U(e);return u&&(r-=1e-5,o+=1e-5),u?e.startsWith("u")?V(t,n,i,[r,o]):v(t,n,i,[r,o]):C(t,n,i,[r,o])}function T(t,n){for(let e=0;e<n.length;e++)n[e]&&isNaN(t[e])&&(n[e]=0,t[e]=0)}function V(t,n,e,i){const[r,o]=i;for(let u=0;u<n.length;u++)if(n[u]){const l=t[u];l<r||l>o?n[u]=0:e[u]=l+.5|0}}function v(t,n,e,i){const[r,o]=i;for(let u=0;u<n.length;u++)if(n[u]){const l=t[u];l<r||l>o?n[u]=0:e[u]=l+(l>0?.5:-.5)|0}}function C(t,n,e,i){const[r,o]=i;for(let u=0;u<n.length;u++)if(n[u]){const l=t[u];l<r||l>o?n[u]=0:e[u]=l}}function W(t,n,e){if(t.depthCount&&t.depthCount>1)return;const{pixels:i,statistics:r,pixelType:o}=t,u=i[0].length,l=t.bandMasks??[],g=t.mask??new Uint8Array(u).fill(255),A=o==="f32"||o==="f64",N=M(o);let p=!1;for(let s=0;s<i.length;s++){const a=typeof n=="number"?n:n[s];if(a==null)continue;const d=r?.[s]?.minValue??N[0],m=r?.[s]?.maxValue??N[1];if(d>a+Number.EPSILON||m<a-Number.EPSILON)continue;const h=l[s]||g.slice(),c=i[s],k=e?.customFloatTolerance;if(A&&k!==0){let f=k;f||(f=Math.abs(a)>=y?E*Math.abs(a):o==="f32"?2**-23:Number.EPSILON);for(let b=0;b<c.length;b++)h[b]&&Math.abs(c[b]-a)<f&&(c[b]=0,h[b]=0,g[b]=0,p=!0)}else for(let f=0;f<c.length;f++)h[f]&&c[f]===a&&(c[f]=0,h[f]=0,g[f]=0,p=!0);l[s]=h}if(p){const s=t.bandMasks||t.pixels.length>1?l:null;e?.matchAllNoData?t.mask=s&&s.length>1?x(s):g:(t.bandMasks=s,t.mask=g)}function x(s){if(s.length<2)return s[0];const a=s[0].length,d=new Uint8Array(a).fill(0);for(let m=0;m<s.length;m++){const h=s[m];for(let c=0;c<a;c++)h[c]&&(d[c]=255)}return d}p&&"updateStatistics"in t&&t.updateStatistics()}export{P as c,T as f,W as g,O as i,I as l,U as r,M as u};
