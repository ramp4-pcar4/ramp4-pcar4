import{z as M,dw as z,q as o,v as s,kv as V,x as O,dx as we,eo as He,kw as ge,kx as Ye,bL as A,H as R,G as q,s as k,$ as X,i as Ne,jt as Pe,t as Qe,ay as Xe,b$ as Ge,an as he,bx as Y,b_ as qe,I as W,br as We,gx as et,bp as Oe,by as tt,bz as rt,am as ot,V as j,af as it,ac as st,cA as nt,cY as De,R as Ce,K as at,a$ as lt,Y as ut,O as pt,bA as ct,a6 as yt}from"./main-Crkq4LWq.js";import{S as dt}from"./MultiOriginJSONSupport-CMemxIrm.js";import{i as mt}from"./originUtils-CPX8CCAY.js";import{O as ft,Q as ht}from"./projectionUtils-CE8Ogge1.js";import{h as vt}from"./Layer-DyCDZpQP.js";import{p as wt}from"./BlendLayer-Bfjdkd1n.js";import{b as gt}from"./OperationalLayer-C2tThDwf.js";import{j as bt}from"./PortalLayer-fZB0dEvA.js";import{t as St}from"./ScaleRangeLayer-BXnA5dV_.js";import Bt from"./PortalItem-DoXbvgWk.js";import{E as Tt}from"./portalItemUtils-DhVXTK5J.js";import{read as Nt}from"./jsonUtils-CAbJUe8w.js";import{s as ve,f as Ze}from"./utils-BdBs5klf.js";import{D as Q,U as je,n as Pt,b as Rt,a as ze,q as It,R as At,M as Ot,w as ke,o as jt,f as $t,r as Lt,l as Dt,m as Ct}from"./networkEnums-DgBPWv46.js";import{e as $e,n as kt,o as Mt,c as ye,a as de,S as re,h as oe,d as ie,f as be,b as se,g as _t}from"./Stop-VC8Vl-5F.js";import{R as xt}from"./normalizeUtils-Dg7DX0Kf.js";import{g as E}from"./FeatureSet-DRSRw7Pj.js";import{a as Jt}from"./GPMessage-DwTGhfqg.js";import{t as Ft}from"./commonProperties-DHiB1uzW.js";import"./preload-helper-DMGCcr4D.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./TimeExtent-R7s_TuxB.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-BKompkv5.js";import"./parser-B_oj8OEu.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-DgBklfbN.js";import"./common-DQOJ18NT.js";import"./ElevationInfo-Dpz_kzPY.js";import"./lengthUtils-l5Hl4s3A.js";import"./asyncUtils-DfTs-X0F.js";import"./typeUtils-CnKFz_x7.js";import"./ClassBreaksRenderer-CV4bp_5g.js";import"./commonProperties-CYfuZJGd.js";import"./colorRamps-Bjywyw2D.js";import"./ColorStop-9dWa0RDE.js";import"./visualVariableUtils-BpBEckvt.js";import"./RendererLegendOptions-CyIaj9P3.js";import"./LRUCache-BB1cebTv.js";import"./MemCache-BSBM3Sy1.js";import"./DictionaryScriptEvaluator-BzcupkpP.js";import"./Version-Dg6OjmkZ.js";import"./FieldsIndex-Cwq_t80R.js";import"./UnknownTimeZone-CGGNrDrV.js";import"./timeZoneUtils-BHCW7jir.js";import"./ArcadeExpression-ON2N40QW.js";import"./TimeOnly-BjqJuv0j.js";import"./enum-DXEdVlyM.js";import"./utils-jjGHTGcN.js";import"./defaultCIMValues-CQAn2izL.js";import"./enums-_AFKM9Yk.js";import"./heatmapUtils-BtFqvjWS.js";import"./vec42-CKs01hkn.js";import"./vec4f64-DPb6J-GU.js";import"./SimpleRenderer-Dbpl5h1j.js";import"./UniqueValueRenderer-BU4f67En.js";import"./diffUtils-COJ4IIqY.js";import"./styleUtils-DFM-g8fO.js";import"./normalizeUtilsCommon-KviMv5LJ.js";import"./utils-Courd1_m.js";import"./Field-CfEWUurB.js";import"./fieldType-DTrwgDiS.js";let F=class extends M{constructor(r){super(r),this.break=new z({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}}),this.first=new z({color:[0,255,0],size:20,outline:{color:[255,255,255],width:4}}),this.unlocated=new z({color:[255,0,0],size:12,outline:{color:[255,255,255],width:3}}),this.last=new z({color:[255,0,0],size:20,outline:{color:[255,255,255],width:4}}),this.middle=new z({color:[51,51,51],size:12,outline:{color:[0,122,194],width:3}}),this.waypoint=new z({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}})}};o([s({types:V})],F.prototype,"break",void 0),o([s({types:V})],F.prototype,"first",void 0),o([s({types:V})],F.prototype,"unlocated",void 0),o([s({types:V})],F.prototype,"last",void 0),o([s({types:V})],F.prototype,"middle",void 0),o([s({types:V})],F.prototype,"waypoint",void 0),F=o([O("esri.layers.support.RouteStopSymbols")],F);let x=class extends M{constructor(r){super(r),this.directionLines=new we({color:[0,122,194],width:6}),this.directionPoints=new z({color:[255,255,255],size:6,outline:{color:[0,122,194],width:2}}),this.pointBarriers=new z({style:"x",size:10,outline:{color:[255,0,0],width:3}}),this.polygonBarriers=new He({color:[255,170,0,.6],outline:{width:7.5,color:[255,0,0,.6]}}),this.polylineBarriers=new we({width:7.5,color:[255,85,0,.7]}),this.routeInfo=new we({width:8,color:[20,89,127]}),this.stops=new F}};o([s({types:ge})],x.prototype,"directionLines",void 0),o([s({types:V})],x.prototype,"directionPoints",void 0),o([s({types:V})],x.prototype,"pointBarriers",void 0),o([s({types:Ye})],x.prototype,"polygonBarriers",void 0),o([s({types:ge})],x.prototype,"polylineBarriers",void 0),o([s({types:ge})],x.prototype,"routeInfo",void 0),o([s({type:F})],x.prototype,"stops",void 0),x=o([O("esri.layers.support.RouteSymbols")],x);let _=class extends M{constructor(r){super(r),this.dataType=null,this.name=null,this.parameterNames=null,this.restrictionUsageParameterName=null,this.timeNeutralAttributeName=null,this.trafficSupport=null,this.units=null,this.usageType=null}};o([s({type:String})],_.prototype,"dataType",void 0),o([A(Q,{ignoreUnknown:!1})],_.prototype,"name",void 0),o([s({type:[String]})],_.prototype,"parameterNames",void 0),o([s({type:String})],_.prototype,"restrictionUsageParameterName",void 0),o([A(je,{ignoreUnknown:!1})],_.prototype,"timeNeutralAttributeName",void 0),o([s({type:String})],_.prototype,"trafficSupport",void 0),o([A(Pt)],_.prototype,"units",void 0),o([A(Rt)],_.prototype,"usageType",void 0),_=o([O("esri.rest.support.NetworkAttribute")],_);const Et=_;let Z=class extends M{constructor(r){super(r),this.buildTime=null,this.name=null,this.networkAttributes=null,this.networkSources=null,this.state=null}};o([s({type:Number})],Z.prototype,"buildTime",void 0),o([s({type:String})],Z.prototype,"name",void 0),o([s({type:[Et]})],Z.prototype,"networkAttributes",void 0),o([s()],Z.prototype,"networkSources",void 0),o([s({type:String})],Z.prototype,"state",void 0),Z=o([O("esri.rest.support.NetworkDataset")],Z);const Ut=Z;let I=class extends M{constructor(r){super(r),this.accumulateAttributeNames=null,this.attributeParameterValues=null,this.currentVersion=null,this.defaultTravelMode=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsSupportedLanguages=null,this.directionsTimeAttribute=null,this.hasZ=null,this.impedance=null,this.networkDataset=null,this.supportedTravelModes=null}readAccumulateAttributes(r){return r==null?null:r.map(t=>Q.fromJSON(t))}writeAccumulateAttributes(r,t,i){r?.length&&(t[i]=r.map(n=>Q.toJSON(n)))}get capabilities(){return{supportsNow:(this.currentVersion??10)>=10.81}}readDefaultTravelMode(r,t){const i=t.supportedTravelModes?.find(({id:n})=>n===t.defaultTravelMode)??t.supportedTravelModes?.find(({itemId:n})=>n===t.defaultTravelMode);return i?$e.fromJSON(i):null}};o([s()],I.prototype,"accumulateAttributeNames",void 0),o([R("accumulateAttributeNames")],I.prototype,"readAccumulateAttributes",null),o([q("accumulateAttributeNames")],I.prototype,"writeAccumulateAttributes",null),o([s()],I.prototype,"attributeParameterValues",void 0),o([s()],I.prototype,"capabilities",null),o([s()],I.prototype,"currentVersion",void 0),o([s()],I.prototype,"defaultTravelMode",void 0),o([R("defaultTravelMode",["defaultTravelMode","supportedTravelModes"])],I.prototype,"readDefaultTravelMode",null),o([s()],I.prototype,"directionsLanguage",void 0),o([A(ze)],I.prototype,"directionsLengthUnits",void 0),o([s()],I.prototype,"directionsSupportedLanguages",void 0),o([A(je,{ignoreUnknown:!1})],I.prototype,"directionsTimeAttribute",void 0),o([s()],I.prototype,"hasZ",void 0),o([A(Q,{ignoreUnknown:!1})],I.prototype,"impedance",void 0),o([s({type:Ut})],I.prototype,"networkDataset",void 0),o([s({type:[$e]})],I.prototype,"supportedTravelModes",void 0),I=o([O("esri.rest.support.NetworkServiceDescription")],I);const Gt=()=>Ne.getLogger("esri.rest.networkService");function ne(e,r,t,i){i[t]=[r.length,r.length+e.length],e.forEach(n=>{r.push(n.geometry)})}function qt(e,r){for(let t=0;t<r.length;t++){const i=e[r[t]];if(i&&i.length)for(const n of i)n.z=void 0}Gt().warnOnce(`The remote Network Analysis service is powered by a network dataset which is not Z-aware.
Z-coordinates of the input geometry are ignored.`)}function Wt(e,r){for(let t=0;t<r.length;t++){const i=e[r[t]];if(i&&i.length){for(const n of i)if(n!=null&&n.hasZ)return!0}}return!1}async function Ve(e,r,t){if(!e)throw new k("network-service:missing-url","Url to Network service is missing");const i=ve({f:"json",token:r},t),{data:n}=await X(e,i),p=n.currentVersion>=10.4?zt(e,r,t):Zt(e,t),{defaultTravelMode:a,supportedTravelModes:y}=await p;return n.defaultTravelMode=a,n.supportedTravelModes=y,I.fromJSON(n)}async function Zt(e,r){const t=ve({f:"json"},r),{data:i}=await X(e.replace(/\/rest\/.*$/i,"/info"),t);if(!i?.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:n}=i,p=Pe(n)+"/sharing/rest/portals/self",{data:a}=await X(p,t),y=Qe("helperServices.routingUtilities.url",a);if(!y)return{supportedTravelModes:[],defaultTravelMode:null};const g=Ze(n),N=/\/solve$/i.test(g.path)?"Route":/\/solveclosestfacility$/i.test(g.path)?"ClosestFacility":"ServiceAreas",m=ve({f:"json",serviceName:N},r),l=Pe(y)+"/GetTravelModes/execute",h=await X(l,m),T=[];let w=null;if(h?.data?.results?.length){const b=h.data.results;for(const d of b)if(d.paramName==="supportedTravelModes"){if(d.value?.features){for(const{attributes:S}of d.value.features)if(S){const f=JSON.parse(S.TravelMode);T.push(f)}}}else d.paramName==="defaultTravelMode"&&(w=d.value)}return{supportedTravelModes:T,defaultTravelMode:w}}async function zt(e,r,t){try{const i=ve({f:"json",token:r},t),n=Pe(e)+"/retrieveTravelModes",{data:{supportedTravelModes:p,defaultTravelMode:a}}=await X(n,i);return{supportedTravelModes:p,defaultTravelMode:a}}catch(i){throw new k("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:i})}}const Me=new Xe({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let me=class extends Jt{constructor(r){super(r),this.type=null}};o([s({type:String,json:{read:Me.read,write:Me.write}})],me.prototype,"type",void 0),me=o([O("esri.rest.support.NAMessage")],me);const Vt=me;let ee=class extends M{constructor(r){super(r)}};o([s({json:{read:{source:"string"}}})],ee.prototype,"text",void 0),o([A(It,{name:"stringType"})],ee.prototype,"type",void 0),ee=o([O("esri.rest.support.DirectionsString")],ee);const Ke=ee;let G=class extends M{constructor(r){super(r),this.arriveTime=null,this.arriveTimeOffset=null,this.geometry=null,this.strings=null}readArriveTimeOffset(r,t){return kt(t.ETA,t.arriveTimeUTC)}readGeometry(r,t){return Ge.fromJSON(t.point)}};o([s({type:Date,json:{read:{source:"arriveTimeUTC"}}})],G.prototype,"arriveTime",void 0),o([s()],G.prototype,"arriveTimeOffset",void 0),o([R("arriveTimeOffset",["arriveTimeUTC","ETA"])],G.prototype,"readArriveTimeOffset",null),o([s({type:Ge})],G.prototype,"geometry",void 0),o([R("geometry",["point"])],G.prototype,"readGeometry",null),o([s({type:[Ke]})],G.prototype,"strings",void 0),G=o([O("esri.rest.support.DirectionsEvent")],G);const Kt=G;function Ht(e){if(e==null||e==="")return null;let r=0,t=0,i=0,n=0;const p=[];let a,y,g,N,m,l,h,T,w=0,b=0,d=0;if(m=e.match(/((\+|-)[^+\-|]+|\|)/g),m||(m=[]),parseInt(m[w],32)===0){w=2;const S=parseInt(m[w],32);w++,l=parseInt(m[w],32),w++,1&S&&(b=m.indexOf("|")+1,h=parseInt(m[b],32),b++),2&S&&(d=m.indexOf("|",b)+1,T=parseInt(m[d],32),d++)}else l=parseInt(m[w],32),w++;for(;w<m.length&&m[w]!=="|";){a=parseInt(m[w],32)+r,w++,r=a,y=parseInt(m[w],32)+t,w++,t=y;const S=[a/l,y/l];b&&(N=parseInt(m[b],32)+i,b++,i=N,S.push(N/h)),d&&(g=parseInt(m[d],32)+n,d++,n=g,S.push(g/T)),p.push(S)}return{paths:[p],hasZ:b>0,hasM:d>0}}let H=class extends Y{constructor(e){super(e),this.events=null,this.geometry=null,this.strings=null}readGeometry(e,r){const t=Ht(r.compressedGeometry);return t!=null?he.fromJSON(t):null}};o([s({type:[Kt]})],H.prototype,"events",void 0),o([s({type:he})],H.prototype,"geometry",void 0),o([R("geometry",["compressedGeometry"])],H.prototype,"readGeometry",null),o([s({type:[Ke]})],H.prototype,"strings",void 0),H=o([O("esri.rest.support.DirectionsFeature")],H);const Yt=H;function Qt(e,r){if(e.length===0)return new he({spatialReference:r});const t=[];for(const a of e)for(const y of a.paths)t.push(...y);const i=[];t.forEach((a,y)=>{y!==0&&a[0]===t[y-1][0]&&a[1]===t[y-1][1]||i.push(a)});const{hasM:n,hasZ:p}=e[0];return new he({hasM:n,hasZ:p,paths:[i],spatialReference:r})}let L=class extends E{constructor(r){super(r),this.extent=null,this.features=[],this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(r,t){if(!r)return[];const i=t.summary.envelope.spatialReference??t.spatialReference,n=i&&W.fromJSON(i);return r.map(p=>{const a=Yt.fromJSON(p);if(a.geometry!=null&&(a.geometry.spatialReference=n),a.events!=null)for(const y of a.events)y.geometry!=null&&(y.geometry.spatialReference=n);return a})}get mergedGeometry(){return this.features?Qt(this.features.map(({geometry:r})=>r),this.extent.spatialReference):null}get strings(){return this.features.flatMap(({strings:r})=>r).filter(We)}};o([s({type:qe,json:{read:{source:"summary.envelope"}}})],L.prototype,"extent",void 0),o([s({nonNullable:!0})],L.prototype,"features",void 0),o([R("features")],L.prototype,"readFeatures",null),o([s()],L.prototype,"geometryType",void 0),o([s({readOnly:!0})],L.prototype,"mergedGeometry",null),o([s()],L.prototype,"routeId",void 0),o([s()],L.prototype,"routeName",void 0),o([s({value:null,readOnly:!0})],L.prototype,"strings",null),o([s({json:{read:{source:"summary.totalDriveTime"}}})],L.prototype,"totalDriveTime",void 0),o([s({json:{read:{source:"summary.totalLength"}}})],L.prototype,"totalLength",void 0),o([s({json:{read:{source:"summary.totalTime"}}})],L.prototype,"totalTime",void 0),L=o([O("esri.rest.support.DirectionsFeatureSet")],L);const Xt=L;let D=class extends M{constructor(r){super(r),this.directionLines=null,this.directionPoints=null,this.directions=null,this.route=null,this.routeName=null,this.stops=null,this.traversedEdges=null,this.traversedJunctions=null,this.traversedTurns=null}};o([s({type:E,json:{write:!0}})],D.prototype,"directionLines",void 0),o([s({type:E,json:{write:!0}})],D.prototype,"directionPoints",void 0),o([s({type:Xt,json:{write:!0}})],D.prototype,"directions",void 0),o([s({type:Y,json:{write:!0}})],D.prototype,"route",void 0),o([s({type:String,json:{write:!0}})],D.prototype,"routeName",void 0),o([s({type:[Y],json:{write:!0}})],D.prototype,"stops",void 0),o([s({type:E,json:{write:!0}})],D.prototype,"traversedEdges",void 0),o([s({type:E,json:{write:!0}})],D.prototype,"traversedJunctions",void 0),o([s({type:E,json:{write:!0}})],D.prototype,"traversedTurns",void 0),D=o([O("esri.rest.support.RouteResult")],D);const er=D;function Se(e){return e?E.fromJSON(e).features.filter(We):[]}let C=class extends M{constructor(r){super(r),this.checksum=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routeResults=null}readPointBarriers(r,t){return Se(t.barriers)}readPolylineBarriers(r){return Se(r)}readPolygonBarriers(r){return Se(r)}};o([s({type:String})],C.prototype,"checksum",void 0),o([s({type:[Vt]})],C.prototype,"messages",void 0),o([s({type:[Y]})],C.prototype,"pointBarriers",void 0),o([R("pointBarriers",["barriers"])],C.prototype,"readPointBarriers",null),o([s({type:[Y]})],C.prototype,"polylineBarriers",void 0),o([R("polylineBarriers")],C.prototype,"readPolylineBarriers",null),o([s({type:[Y]})],C.prototype,"polygonBarriers",void 0),o([R("polygonBarriers")],C.prototype,"readPolygonBarriers",null),o([s({type:[er]})],C.prototype,"routeResults",void 0),C=o([O("esri.rest.support.RouteSolveResult")],C);function ae(e){return e instanceof E}async function tr(e,r,t){const i=[],n=[],p={},a={},y=Ze(e),{path:g}=y;ae(r.stops)&&ne(r.stops.features,n,"stops.features",p),ae(r.pointBarriers)&&ne(r.pointBarriers.features,n,"pointBarriers.features",p),ae(r.polylineBarriers)&&ne(r.polylineBarriers.features,n,"polylineBarriers.features",p),ae(r.polygonBarriers)&&ne(r.polygonBarriers.features,n,"polygonBarriers.features",p);const N=await xt(n);for(const T in p){const w=p[T];i.push(T),a[T]=N.slice(w[0],w[1])}if(Wt(a,i)){let T=null;try{T=await Ve(g,r.apiKey,t)}catch{}T&&!T.hasZ&&qt(a,i)}for(const T in a)a[T].forEach((w,b)=>{et(r,T)[b].geometry=w});const m={...t,query:{...y.query,...Mt(r),f:"json"}},l=g.endsWith("/solve")?g:`${g}/solve`,{data:h}=await X(l,m);return rr(h)}function rr(e){const{barriers:r,checksum:t,directionLines:i,directionPoints:n,directions:p,messages:a,polygonBarriers:y,polylineBarriers:g,routes:N,stops:m,traversedEdges:l,traversedJunctions:h,traversedTurns:T}=e,w=f=>{const P=d.find($=>$.routeName===f);if(P!=null)return P;const B={routeId:d.length+1,routeName:f};return d.push(B),B},b=f=>{const P=d.find($=>$.routeId===f);if(P!=null)return P;const B={routeId:f,routeName:null};return d.push(B),B},d=[];N?.features.forEach((f,P)=>{f.geometry.spatialReference=N.spatialReference??void 0;const B=f.attributes.Name,$=P+1;d.push({routeId:$,routeName:B,route:f})}),p?.forEach(f=>{const{routeName:P}=f;w(P).directions=f});const S=(m?.features.every(f=>f.attributes.RouteName==null)??!1)&&d.length>0?d[0].routeName:null;return m?.features.forEach(f=>{f.geometry&&(f.geometry.spatialReference??=m.spatialReference??void 0);const P=S??f.attributes.RouteName,B=w(P);B.stops??=[],B.stops.push(f)}),i?.features.forEach(f=>{const P=f.attributes.RouteID,B=b(P),{geometryType:$,spatialReference:U}=i;B.directionLines??={features:[],geometryType:$,spatialReference:U},B.directionLines.features.push(f)}),n?.features.forEach(f=>{const P=f.attributes.RouteID,B=b(P),{geometryType:$,spatialReference:U}=n;B.directionPoints??={features:[],geometryType:$,spatialReference:U},B.directionPoints.features.push(f)}),l?.features.forEach(f=>{const P=f.attributes.RouteID,B=b(P),{geometryType:$,spatialReference:U}=l;B.traversedEdges??={features:[],geometryType:$,spatialReference:U},B.traversedEdges.features.push(f)}),h?.features.forEach(f=>{const P=f.attributes.RouteID,B=b(P),{geometryType:$,spatialReference:U}=h;B.traversedJunctions??={features:[],geometryType:$,spatialReference:U},B.traversedJunctions.features.push(f)}),T?.features.forEach(f=>{const P=f.attributes.RouteID,B=b(P);B.traversedTurns??={features:[]},B.traversedTurns.features.push(f)}),C.fromJSON({barriers:r,checksum:t,messages:a,polygonBarriers:y,polylineBarriers:g,routeResults:d})}let J=class extends Oe.ClonableMixin(M){constructor(e){super(e),this.doNotLocateOnRestrictedElements=null,this.geometry=null,this.geometryType=null,this.name=null,this.spatialRelationship=null,this.type="layer",this.where=null}};o([s({type:Boolean,json:{write:!0}})],J.prototype,"doNotLocateOnRestrictedElements",void 0),o([s({types:rt,json:{read:tt,write:!0}})],J.prototype,"geometry",void 0),o([A(At)],J.prototype,"geometryType",void 0),o([s({type:String,json:{name:"layerName",write:!0}})],J.prototype,"name",void 0),o([A(Ot,{name:"spatialRel"})],J.prototype,"spatialRelationship",void 0),o([s({type:String,json:{write:!0}})],J.prototype,"type",void 0),o([s({type:String,json:{write:!0}})],J.prototype,"where",void 0),J=o([O("esri.rest.support.DataLayer")],J);var Re;let fe=class extends E{static{Re=this}constructor(e){super(e),this.doNotLocateOnRestrictedElements=null}clone(){return new Re({doNotLocateOnRestrictedElements:this.doNotLocateOnRestrictedElements,...this.cloneProperties()})}};o([s({type:Boolean,json:{write:!0}})],fe.prototype,"doNotLocateOnRestrictedElements",void 0),fe=Re=o([O("esri.rest.support.NetworkFeatureSet")],fe);let te=class extends Oe.ClonableMixin(M){constructor(e){super(e),this.doNotLocateOnRestrictedElements=null,this.url=null}};o([s({type:Boolean,json:{write:!0}})],te.prototype,"doNotLocateOnRestrictedElements",void 0),o([s({type:String,json:{write:!0}})],te.prototype,"url",void 0),te=o([O("esri.rest.support.NetworkUrl")],te);var Ie;let u=class extends Oe.ClonableMixin(M){static{Ie=this}constructor(e){super(e),this.accumulateAttributes=null,this.apiKey=null,this.attributeParameterValues=null,this.checksum=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsOutputType=null,this.directionsStyleName=null,this.directionsTimeAttribute=null,this.findBestSequence=null,this.geometryPrecision=null,this.geometryPrecisionM=null,this.geometryPrecisionZ=null,this.ignoreInvalidLocations=null,this.impedanceAttribute=null,this.outputGeometryPrecision=null,this.outputGeometryPrecisionUnits=null,this.outputLines="true-shape",this.outSpatialReference=null,this.overrides=null,this.pointBarriers=null,this.polygonBarriers=null,this.polylineBarriers=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.preserveObjectID=null,this.restrictionAttributes=null,this.restrictUTurns=null,this.returnBarriers=!1,this.returnDirections=!1,this.returnPolygonBarriers=!1,this.returnPolylineBarriers=!1,this.returnRoutes=!0,this.returnStops=!1,this.returnTraversedEdges=null,this.returnTraversedJunctions=null,this.returnTraversedTurns=null,this.returnZ=!0,this.startTime=null,this.startTimeIsUTC=!0,this.stops=null,this.timeWindowsAreUTC=null,this.travelMode=null,this.useHierarchy=null,this.useTimeWindows=null}static from(e){return ot(Ie,e)}readAccumulateAttributes(e){return e==null?null:e.map(r=>Q.fromJSON(r))}writeAccumulateAttributes(e,r,t){e?.length&&(r[t]=e.map(i=>Q.toJSON(i)))}writePointBarriers(e,r,t){le(e,r,t)}writePolygonBarrier(e,r,t){le(e,r,t)}writePolylineBarrier(e,r,t){le(e,r,t)}readRestrictionAttributes(e){return e==null?null:e.map(r=>ke.fromJSON(r))}writeRestrictionAttributes(e,r,t){e?.length&&(r[t]=e.map(i=>ke.toJSON(i)))}readStartTime(e,r){const{startTime:t}=r;return t==null?null:t==="now"?"now":new Date(t)}writeStartTime(e,r){e!=null&&(r.startTime=e==="now"?"now":e.getTime())}readStops(e,r){return ar(r.stops)}writeStops(e,r,t){le(e,r,t)}};function or(e){return e&&"type"in e}function ir(e){return e&&"features"in e&&"doNotLocateOnRestrictedElements"in e}function sr(e){return e&&"url"in e}function nr(e){return e&&"features"in e}function ar(e){return or(e)?J.fromJSON(e):sr(e)?te.fromJSON(e):ir(e)?fe.fromJSON(e):nr(e)?E.fromJSON(e):null}function le(e,r,t){e!=null&&(r[t]=j.isCollection(e)?{features:e.toArray().map(i=>i.toJSON())}:e.toJSON())}o([s({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],u.prototype,"accumulateAttributes",void 0),o([R("accumulateAttributes")],u.prototype,"readAccumulateAttributes",null),o([q("accumulateAttributes")],u.prototype,"writeAccumulateAttributes",null),o([s(Ft)],u.prototype,"apiKey",void 0),o([s({json:{write:!0}})],u.prototype,"attributeParameterValues",void 0),o([s({type:String,json:{write:!0}})],u.prototype,"checksum",void 0),o([s({type:String,json:{write:!0}})],u.prototype,"directionsLanguage",void 0),o([A(ze)],u.prototype,"directionsLengthUnits",void 0),o([A(jt)],u.prototype,"directionsOutputType",void 0),o([A($t)],u.prototype,"directionsStyleName",void 0),o([A(je,{name:"directionsTimeAttributeName",ignoreUnknown:!1})],u.prototype,"directionsTimeAttribute",void 0),o([s({type:Boolean,json:{write:!0}})],u.prototype,"findBestSequence",void 0),o([s({type:Number,json:{write:!0}})],u.prototype,"geometryPrecision",void 0),o([s({type:Number,json:{write:!0}})],u.prototype,"geometryPrecisionM",void 0),o([s({type:Number,json:{write:!0}})],u.prototype,"geometryPrecisionZ",void 0),o([s({type:Boolean,json:{write:!0}})],u.prototype,"ignoreInvalidLocations",void 0),o([A(Q,{name:"impedanceAttributeName",ignoreUnknown:!1})],u.prototype,"impedanceAttribute",void 0),o([s({type:Number,json:{write:!0}})],u.prototype,"outputGeometryPrecision",void 0),o([A(Lt)],u.prototype,"outputGeometryPrecisionUnits",void 0),o([A(Dt)],u.prototype,"outputLines",void 0),o([s({type:W,json:{name:"outSR",write:!0}})],u.prototype,"outSpatialReference",void 0),o([s({json:{write:!0}})],u.prototype,"overrides",void 0),o([s({json:{name:"barriers",write:!0}})],u.prototype,"pointBarriers",void 0),o([q("pointBarriers")],u.prototype,"writePointBarriers",null),o([s({json:{write:!0}})],u.prototype,"polygonBarriers",void 0),o([q("polygonBarriers")],u.prototype,"writePolygonBarrier",null),o([s({json:{write:!0}})],u.prototype,"polylineBarriers",void 0),o([q("polylineBarriers")],u.prototype,"writePolylineBarrier",null),o([s({type:Boolean,json:{write:!0}})],u.prototype,"preserveFirstStop",void 0),o([s({type:Boolean,json:{write:!0}})],u.prototype,"preserveLastStop",void 0),o([s({type:Boolean,json:{write:!0}})],u.prototype,"preserveObjectID",void 0),o([s({type:[String],json:{name:"restrictionAttributeNames",write:!0}})],u.prototype,"restrictionAttributes",void 0),o([R("restrictionAttributes")],u.prototype,"readRestrictionAttributes",null),o([q("restrictionAttributes")],u.prototype,"writeRestrictionAttributes",null),o([A(Ct)],u.prototype,"restrictUTurns",void 0),o([s({type:Boolean,json:{write:!0}})],u.prototype,"returnBarriers",void 0),o([s({type:Boolean,json:{write:!0}})],u.prototype,"returnDirections",void 0),o([s({type:Boolean,json:{write:!0}})],u.prototype,"returnPolygonBarriers",void 0),o([s({type:Boolean,json:{write:!0}})],u.prototype,"returnPolylineBarriers",void 0),o([s({type:Boolean,json:{write:!0}})],u.prototype,"returnRoutes",void 0),o([s({type:Boolean,json:{write:!0}})],u.prototype,"returnStops",void 0),o([s({type:Boolean,json:{write:!0}})],u.prototype,"returnTraversedEdges",void 0),o([s({type:Boolean,json:{write:!0}})],u.prototype,"returnTraversedJunctions",void 0),o([s({type:Boolean,json:{write:!0}})],u.prototype,"returnTraversedTurns",void 0),o([s({type:Boolean,json:{write:!0}})],u.prototype,"returnZ",void 0),o([s({json:{write:!0}})],u.prototype,"startTime",void 0),o([R("startTime")],u.prototype,"readStartTime",null),o([q("startTime")],u.prototype,"writeStartTime",null),o([s({type:Boolean,json:{write:!0}})],u.prototype,"startTimeIsUTC",void 0),o([s({json:{write:!0}})],u.prototype,"stops",void 0),o([R("stops")],u.prototype,"readStops",null),o([q("stops")],u.prototype,"writeStops",null),o([s({type:Boolean,json:{write:!0}})],u.prototype,"timeWindowsAreUTC",void 0),o([s({type:$e,json:{write:!0}})],u.prototype,"travelMode",void 0),o([s({type:Boolean,json:{write:!0}})],u.prototype,"useHierarchy",void 0),o([s({type:Boolean,json:{write:!0}})],u.prototype,"useTimeWindows",void 0),u=Ie=o([O("esri.rest.support.RouteParameters")],u);function ue(e){if(!e.length)return;const r=e.toArray(),t=r.map(({objectId:n})=>n).filter(n=>n!=null);let i=Math.max(...t,0);for(const n of r)n.objectId==null&&(n.objectId=++i)}function pe(e,r){return!!e.length&&e.length===r.length&&_e(e)&&_e(r)}function _e(e){return e.every(({objectId:r})=>r!=null)}function Be(e){return e.length?e:null}function Ae(e){switch(e){case"esriGeometryPoint":return{type:"esriSMS",style:"esriSMSCircle",size:12,color:[0,0,0,0],outline:Ae("esriGeometryPolyline")};case"esriGeometryPolyline":return{type:"esriSLS",style:"esriSLSSolid",width:1,color:[0,0,0,0]};case"esriGeometryPolygon":return{type:"esriSFS",style:"esriSFSNull",outline:Ae("esriGeometryPolyline")}}}function ce(e){return"layers"in e}function lr(e){return e.declaredClass==="esri.rest.support.FeatureSet"}function ur(e){return e.declaredClass==="esri.rest.support.NetworkFeatureSet"}function pr(e,r){for(const t of e){const i=r.find(n=>n.objectId===t.objectId);i&&(i.addedCost=t.addedCost,i.barrierType=t.barrierType,i.costs=t.costs,i.curbApproach=t.curbApproach,i.fullEdge=t.fullEdge,i.geometry=t.geometry,i.name=t.name,i.sideOfEdge=t.sideOfEdge,i.sourceId=t.sourceId,i.sourceOid=t.sourceOid,i.status=t.status,i.symbol=t.symbol)}}function cr(e,r){for(const t of e){const i=r.find(n=>n.objectId===t.objectId);i&&(i.barrierType=t.barrierType,i.costs=t.costs,i.geometry=t.geometry,i.name=t.name,i.scaleFactor=t.scaleFactor,i.symbol=t.symbol)}}function yr(e,r){for(const t of e){const i=r.find(n=>n.objectId===t.objectId);i&&(i.barrierType=t.barrierType,i.costs=t.costs,i.geometry=t.geometry,i.name=t.name,i.scaleFactor=t.scaleFactor,i.symbol=t.symbol)}}function dr(e,r){for(const t of e){const i=r.find(n=>n.objectId===t.objectId);i&&(i.arriveCurbApproach=t.arriveCurbApproach,i.arriveTime=t.arriveTime,i.arriveTimeOffset=t.arriveTimeOffset,i.cumulativeCosts=t.cumulativeCosts,i.cumulativeDistance=t.cumulativeDistance,i.cumulativeDuration=t.cumulativeDuration,i.curbApproach=t.curbApproach,i.departCurbApproach=t.departCurbApproach,i.departTime=t.departTime,i.departTimeOffset=t.departTimeOffset,i.distanceToNetworkInMeters=t.distanceToNetworkInMeters,i.geometry=t.geometry,i.lateDuration=t.lateDuration,i.name=t.name,i.navLatency=t.navLatency,i.posAlong=t.posAlong,i.routeName=t.routeName,i.serviceCosts=t.serviceCosts,i.serviceDistance=t.serviceDistance,i.serviceDuration=t.serviceDuration,i.sequence=t.sequence,i.sideOfEdge=t.sideOfEdge,i.snapX=t.snapX,i.snapY=t.snapY,i.snapZ=t.snapZ,i.sourceId=t.sourceId,i.sourceOid=t.sourceOid,i.status=t.status,i.symbol=t.symbol,i.timeWindowEnd=t.timeWindowEnd,i.timeWindowStart=t.timeWindowStart,i.violations=t.violations,i.waitDuration=t.waitDuration,i.wait=t.wait)}}async function xe(e){const r=W.WGS84;return await ht(e.spatialReference,r),ft(e,r)}function K(e,r){switch(r){case"seconds":return e/60;case"hours":return 60*e;case"days":return 60*e*24;default:return e}}function Te(e,r){return r==="decimal-degrees"||r==="points"||r==="unknown"?e:yt(e,r,"meters")}function mr(e){const{attributes:r,geometry:t,popupTemplate:i,symbol:n}=e.toGraphic().toJSON();return{attributes:r,geometry:t,popupInfo:i,symbol:n}}const fr=j.ofType(ye),hr=j.ofType(de),Je=j.ofType(re),Fe=j.ofType(oe),Ee=j.ofType(ie),Ue=j.ofType(se);let v=class extends wt(St(gt(bt(dt(vt))))){constructor(e){super(e),this._cachedServiceDescription=null,this._featureCollection=null,this._type="Feature Collection",this.checksum=null,this.defaultSymbols=new x,this.directionLines=null,this.directionPoints=null,this.featureCollectionType="route",this.legendEnabled=!1,this.maxScale=0,this.minScale=0,this.pointBarriers=new Je,this.polygonBarriers=new Fe,this.polylineBarriers=new Ee,this.routeInfo=null,this.spatialReference=W.WGS84,this.stops=new Ue,this.type="route";const r=()=>{this._setStopSymbol(this.stops)};this.addHandles(it(()=>this.stops,"change",r,{sync:!0,onListenerAdd:r}))}writeFeatureCollectionWebmap(e,r,t,i){const n=[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),this._writeStops()].filter(y=>!!y),p=n.map((y,g)=>g),a=i.origin==="web-map"?"featureCollection.layers":"layers";st(a,n,r),r.opacity=this.opacity,r.visibility=this.visible,r.visibleLayers=p}readDirectionLines(e,r){return this._getNetworkFeatures(r,"DirectionLines",t=>ye.fromGraphic(t))}readDirectionPoints(e,r){return this._getNetworkFeatures(r,"DirectionPoints",t=>de.fromGraphic(t))}get fullExtent(){const e=new qe({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:W.WGS84});if(this.routeInfo?.geometry!=null)return this.routeInfo.geometry.extent??e;if(this.stops==null)return e;const r=this.stops.filter(n=>n.geometry!=null);if(r.length<2)return e;const{spatialReference:t}=r.at(0).geometry;if(t==null)return e;const i=r.toArray().map(n=>{const p=n.geometry;return[p.x,p.y]});return new nt({points:i,spatialReference:t}).extent}readMaxScale(e,r){return(ce(r)?r.layers:r.featureCollection?.layers)?.find(n=>n.layerDefinition.maxScale!=null)?.layerDefinition.maxScale??0}readMinScale(e,r){return(ce(r)?r.layers:r.featureCollection?.layers)?.find(n=>n.layerDefinition.minScale!=null)?.layerDefinition.minScale??0}readPointBarriers(e,r){return this._getNetworkFeatures(r,"Barriers",t=>re.fromGraphic(t))}readPolygonBarriers(e,r){return this._getNetworkFeatures(r,"PolygonBarriers",t=>oe.fromGraphic(t))}readPolylineBarriers(e,r){return this._getNetworkFeatures(r,"PolylineBarriers",t=>ie.fromGraphic(t))}readRouteInfo(e,r){return this._getNetworkFeatures(r,"RouteInfo",t=>be.fromGraphic(t)).at(0)??null}readSpatialReference(e,r){const t=ce(r)?r.layers:r.featureCollection?.layers;if(!t?.length)return W.WGS84;const{layerDefinition:i,featureSet:n}=t[0],p=n.features[0],a=p?.geometry?.spatialReference??n.spatialReference??i.spatialReference??i.extent.spatialReference??De;return W.fromJSON(a)}readStops(e,r){return this._getNetworkFeatures(r,"Stops",t=>se.fromGraphic(t),t=>this._setStopSymbol(t))}get title(){return this.routeInfo?.name??"Route"}set title(e){this._overrideIfSome("title",e)}get url(){return Ce.routeServiceUrl}set url(e){e!=null?this._set("url",at(e,Ne.getLogger(this))):this._set("url",Ce.routeServiceUrl)}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}removeAll(){this.removeResult(),this.pointBarriers.removeAll(),this.polygonBarriers.removeAll(),this.polylineBarriers.removeAll(),this.stops.removeAll()}removeResult(){this.directionLines!=null&&(this.directionLines.removeAll(),this._set("directionLines",null)),this.directionPoints!=null&&(this.directionPoints.removeAll(),this._set("directionPoints",null)),this.routeInfo!=null&&this._set("routeInfo",null)}async save(){await this.load();const{fullExtent:e,portalItem:r}=this;if(!r)throw new k("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");if(!r.id)throw new k("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if(r.type!=="Feature Collection")throw new k("routelayer:portal-item-wrong-type",'Portal item needs to have type "Feature Collection"');if(!this.routeInfo)throw new k("routelayer:route-unsolved","save() requires a solved route");const{portal:t}=r;await t.signIn(),t.user||await r.reload();const{itemUrl:i,itemControl:n}=r;if(n!=="admin"&&n!=="update")throw new k("routelayer:insufficient-permissions","To save this layer, you need to be the owner or an administrator of your organization");const p={messages:[],origin:"portal-item",portal:t,url:i?lt(i):void 0,writtenProperties:[]},a=this.write(void 0,p);return r.extent=await xe(e),r.title=this.title,await r.update({data:a}),r}async saveAs(e,r={}){if(await this.load(),this.routeInfo==null)throw new k("routelayer:route-unsolved","saveAs() requires a solved route");const t=Bt.from(e).clone();t.extent??=await xe(this.fullExtent),t.id=null,t.portal??=ut.getDefault(),t.title??=this.title,t.type="Feature Collection",t.typeKeywords=["Data","Feature Collection",Tt.MULTI_LAYER,"Route Layer"];const{portal:i}=t,n={messages:[],origin:"portal-item",portal:i,url:null,writtenProperties:[]};await i.signIn();const p=r?.folder,a=this.write(void 0,n);return await i.user.addItem({item:t,folder:p,data:a}),this.portalItem=t,mt(n),n.portalItem=t,t}async solve(e,r){ue(this.stops),ue(this.pointBarriers),ue(this.polylineBarriers),ue(this.polygonBarriers);const t=e?.stops??this.stops,i=e?.pointBarriers??Be(this.pointBarriers),n=e?.polylineBarriers??Be(this.polylineBarriers),p=e?.polygonBarriers??Be(this.polygonBarriers);if(t==null)throw new k("routelayer:undefined-stops","the route layer must have stops defined in the route parameters.");if((lr(t)||ur(t))&&t.features.length<2||j.isCollection(t)&&t.length<2)throw new k("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");if(j.isCollection(t))for(const d of t)d.routeName=null;const a=e?.apiKey,{checksum:y,url:g}=this,N=await this._getServiceDescription(g,a,r),m=e?.travelMode??N.defaultTravelMode,l=e?.accumulateAttributes??[];m&&(l.push(m.distanceAttributeName),m.timeAttributeName&&l.push(m.timeAttributeName));const h={accumulateAttributes:l,checksum:y,directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:i,polylineBarriers:n,polygonBarriers:p,preserveObjectID:!0,returnBarriers:!!i,returnDirections:!0,returnPolygonBarriers:!!p,returnPolylineBarriers:!!n,returnRoutes:!0,returnStops:!0,stops:t},T=u.from(e??{});let w;T.set(h);try{w=await tr(g,T,r)}catch(d){throw pt(d)?d:new k("routelayer:failed-route-request","the routing request failed",{error:d})}const b=this._toRouteLayerSolution(w);return this._isOverridden("title")||(this.title=b.routeInfo.name??"Route"),this._populatePortalFields(b,N,T),b}update(e){const{checksum:r,directionLines:t,directionPoints:i,pointBarriers:n,polygonBarriers:p,polylineBarriers:a,routeInfo:y,stops:g}=e;pe(g,this.stops)?dr(g,this.stops):this.set({stops:g}),pe(n,this.pointBarriers)?pr(n,this.pointBarriers):this.set({pointBarriers:n}),pe(a,this.polylineBarriers)?cr(a,this.polylineBarriers):this.set({polylineBarriers:a}),pe(p,this.polygonBarriers)?yr(p,this.polygonBarriers):this.set({polygonBarriers:p}),this.set({checksum:r}),this._set("directionLines",t),this._set("directionPoints",i),this._set("routeInfo",y),y.geometry!=null&&(this.spatialReference=y.geometry.spatialReference)}_getNetworkFeatures(e,r,t,i){const n=ce(e)?e.layers:e.featureCollection?.layers,p=n?.find(b=>b.layerDefinition.name===r);if(p==null)return new j;const{layerDefinition:a,popupInfo:y,featureSet:g}=p,N=a.drawingInfo.renderer,{features:m}=g,l=g.spatialReference??a.spatialReference??a.extent.spatialReference??De,h=N&&Nt(N),T=W.fromJSON(l),w=m.map(b=>{const d=Y.fromJSON(b);d.geometry!=null&&b.geometry!=null&&b.geometry.spatialReference==null&&(d.geometry.spatialReference=T);const S=t(d);return S.symbol??=h?.getSymbol(d)??this._getNetworkSymbol(r),S.popupTemplate??=y&&ct.fromJSON(y),S});return i&&w.some(({symbol:b})=>!b)&&i(w),new j(w)}_getNetworkSymbol(e){switch(e){case"Barriers":return this.defaultSymbols.pointBarriers;case"DirectionPoints":return this.defaultSymbols.directionPoints;case"DirectionLines":return this.defaultSymbols.directionLines;case"PolylineBarriers":return this.defaultSymbols.polylineBarriers;case"PolygonBarriers":return this.defaultSymbols.polygonBarriers;case"RouteInfo":return this.defaultSymbols.routeInfo;case"Stops":return null}}async _getServiceDescription(e,r,t){if(this._cachedServiceDescription!=null&&this._cachedServiceDescription.url===e)return this._cachedServiceDescription.serviceDescription;const i=await Ve(e,r,t);return this._cachedServiceDescription={serviceDescription:i,url:e},i}_setStopSymbol(e){if(!e||!e.length||!this.defaultSymbols.stops||e.every(({symbol:l})=>!!l))return;const{first:r,last:t,middle:i,unlocated:n,waypoint:p,break:a}=this.defaultSymbols.stops,y=e.map(({sequence:l})=>l).filter(l=>l!=null),g=e.length===y.length;if(!this.routeInfo&&!g||e.length===1)return void e.forEach((l,h)=>{switch(h){case 0:l.symbol=r;break;case e.length-1:l.symbol=t;break;default:l.symbol=i}});const N=Math.min(...y),m=Math.max(...y);for(const l of e)l.sequence!==N?l.sequence!==m?this.routeInfo&&l.status!=="ok"&&l.status!=="not-located-on-closest"?l.symbol=n:l.locationType!=="waypoint"?l.locationType!=="break"?l.symbol=i:l.symbol=a:l.symbol=p:l.symbol=t:l.symbol=r}_toRouteLayerSolution(e){const{checksum:r,routeResults:t}=e,i=t[0].stops?.map(l=>se.fromJSON(l.toJSON()));this._setStopSymbol(i);const n=new Ue(i),p=new Fe(e.polygonBarriers?.map(l=>{const h=oe.fromJSON(l.toJSON());return h.symbol=this.defaultSymbols.polygonBarriers,h})),a=new Ee(e.polylineBarriers?.map(l=>{const h=ie.fromJSON(l.toJSON());return h.symbol=this.defaultSymbols.polylineBarriers,h})),y=new Je(e.pointBarriers?.map(l=>{const h=re.fromJSON(l.toJSON());return h.symbol=this.defaultSymbols.pointBarriers,h})),g=t[0].route?.toJSON(),N=be.fromJSON(g);N.symbol=this.defaultSymbols.routeInfo;const m=new hr(t[0].directionPoints?.features.map(l=>{const h=de.fromJSON(l.toJSON());return h.symbol=this.defaultSymbols.directionPoints,h}));return{checksum:r,directionLines:new fr(t[0].directionLines?.features.map(l=>{const h=ye.fromJSON(l.toJSON());return h.symbol=this.defaultSymbols.directionLines,h})),directionPoints:m,pointBarriers:y,polygonBarriers:p,polylineBarriers:a,routeInfo:N,stops:n}}_writeDirectionLines(){return this._writeNetworkFeatures(this.directionLines,this.defaultSymbols.directionLines,"esriGeometryPolyline",ye.fields,"DirectionLines","Direction Lines")}_writeDirectionPoints(){return this._writeNetworkFeatures(this.directionPoints,this.defaultSymbols.directionPoints,"esriGeometryPoint",de.fields,"DirectionPoints","Direction Points")}_writeNetworkFeatures(e,r,t,i,n,p){if(!e?.length)return null;const a=this.spatialReference.toJSON(),{fullExtent:y,maxScale:g,minScale:N}=this;return{featureSet:{features:e.toArray().map(m=>mr(m)),geometryType:t,spatialReference:a},layerDefinition:{capabilities:"Query,Update,Editing",drawingInfo:{renderer:{type:"simple",symbol:r!=null?r.toJSON():Ae(t)}},extent:y.toJSON(),fields:i,geometryType:t,hasM:!1,hasZ:!1,maxScale:g,minScale:N,name:n,objectIdField:"ObjectID",spatialReference:a,title:p,type:"Feature Layer",typeIdField:""}}}_writePointBarriers(){return this._writeNetworkFeatures(this.pointBarriers,this.defaultSymbols.pointBarriers,"esriGeometryPoint",re.fields,"Barriers","Point Barriers")}_writePolygonBarriers(){return this._writeNetworkFeatures(this.polygonBarriers,this.defaultSymbols.polygonBarriers,"esriGeometryPolygon",oe.fields,"PolygonBarriers","Polygon Barriers")}_writePolylineBarriers(){return this._writeNetworkFeatures(this.polylineBarriers,this.defaultSymbols.polylineBarriers,"esriGeometryPolyline",ie.fields,"PolylineBarriers","Line Barriers")}_writeRouteInfo(){return this._writeNetworkFeatures(this.routeInfo!=null?new j([this.routeInfo]):null,this.defaultSymbols.routeInfo,"esriGeometryPolyline",be.fields,"RouteInfo","Route Details")}_writeStops(){const e=this._writeNetworkFeatures(this.stops,null,"esriGeometryPoint",se.fields,"Stops","Stops");if(e==null)return null;const{stops:r}=this.defaultSymbols,t=r?.first?.toJSON(),i=r?.middle?.toJSON(),n=r?.last?.toJSON();return e.layerDefinition.drawingInfo.renderer={type:"uniqueValue",field1:"Sequence",defaultSymbol:i,uniqueValueInfos:[{value:"1",symbol:t,label:"First Stop"},{value:`${this.stops.length}`,symbol:n,label:"Last Stop"}]},e}_populatePortalFields(e,r,t){const i=r.networkDataset?.networkAttributes,n=i?.filter(({usageType:c})=>c==="cost")??[],p=t.travelMode??r.defaultTravelMode;if(p==null)return void Ne.getLogger(this).warn("route-layer:missing-travel-mode","The routing service must have a default travel mode or one must be specified in the route parameter.");const{timeAttributeName:a,distanceAttributeName:y}=p,g=n.find(({name:c})=>c===a),N=n.find(({name:c})=>c===y),m=t.travelMode?.impedanceAttributeName??t.impedanceAttribute??r.impedance,l=g?.units,h=N?.units;if(!l||!h)throw new k("routelayer:unknown-impedance-units","the units of either the distance or time impedance are unknown");const T=t.directionsLanguage??r.directionsLanguage,w=t.accumulateAttributes??r.accumulateAttributeNames??[],b=new Set(n.filter(({name:c})=>c===a||c===y||c===m||c!=null&&w.includes(c)).map(({name:c})=>c)),d=c=>{for(const Le in c)b.has(Le)||delete c[Le]};for(const c of e.pointBarriers)c.costs!=null&&(c.addedCost=c.costs[m]??0,d(c.costs));for(const c of e.polygonBarriers)c.costs!=null&&(c.scaleFactor=c.costs[m]??1,d(c.costs));for(const c of e.polylineBarriers)c.costs!=null&&(c.scaleFactor=c.costs[m]??1,d(c.costs));const{routeInfo:S}=e,{findBestSequence:f,preserveFirstStop:P,preserveLastStop:B,startTimeIsUTC:$,timeWindowsAreUTC:U}=t;S.analysisSettings=new _t({accumulateAttributes:w,directionsLanguage:T,findBestSequence:f,preserveFirstStop:P,preserveLastStop:B,startTimeIsUTC:$,timeWindowsAreUTC:U,travelMode:p}),S.totalDuration=K(S.totalCosts?.[a]??0,l),S.totalDistance=Te(S.totalCosts?.[y]??0,h),S.totalLateDuration=K(S.totalViolations?.[a]??0,l),S.totalWaitDuration=K(S.totalWait?.[a]??0,l),S.totalCosts!=null&&d(S.totalCosts),S.totalViolations!=null&&d(S.totalViolations),S.totalWait!=null&&d(S.totalWait);for(const c of e.stops)c.serviceCosts!=null&&(c.serviceDuration=K(c.serviceCosts[a]??0,l),c.serviceDistance=Te(c.serviceCosts[y]??0,h),d(c.serviceCosts)),c.cumulativeCosts!=null&&(c.cumulativeDuration=K(c.cumulativeCosts[a]??0,l),c.cumulativeDistance=Te(c.cumulativeCosts[y]??0,h),d(c.cumulativeCosts)),c.violations!=null&&(c.lateDuration=K(c.violations[a]??0,l),d(c.violations)),c.wait!=null&&(c.waitDuration=K(c.wait[a]??0,l),d(c.wait))}};o([s({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:this.portalItem==null}}}}}}})],v.prototype,"_featureCollection",void 0),o([q(["web-map","portal-item"],"_featureCollection")],v.prototype,"writeFeatureCollectionWebmap",null),o([s({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:this.portalItem!=null}}}}}}})],v.prototype,"_type",void 0),o([s({type:String})],v.prototype,"checksum",void 0),o([s({nonNullable:!0,type:x})],v.prototype,"defaultSymbols",void 0),o([s({readOnly:!0})],v.prototype,"directionLines",void 0),o([R(["web-map","portal-item"],"directionLines",["layers","featureCollection.layers"])],v.prototype,"readDirectionLines",null),o([s({readOnly:!0})],v.prototype,"directionPoints",void 0),o([R(["web-map","portal-item"],"directionPoints",["layers","featureCollection.layers"])],v.prototype,"readDirectionPoints",null),o([s({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],v.prototype,"featureCollectionType",void 0),o([s({readOnly:!0})],v.prototype,"fullExtent",null),o([s({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],v.prototype,"legendEnabled",void 0),o([s({type:["show","hide"]})],v.prototype,"listMode",void 0),o([s({type:Number,nonNullable:!0,json:{write:!1}})],v.prototype,"maxScale",void 0),o([R(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],v.prototype,"readMaxScale",null),o([s({type:Number,nonNullable:!0,json:{write:!1}})],v.prototype,"minScale",void 0),o([R(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],v.prototype,"readMinScale",null),o([s({type:["ArcGISFeatureLayer"],value:"ArcGISFeatureLayer"})],v.prototype,"operationalLayerType",void 0),o([s({nonNullable:!0,type:j.ofType(re)})],v.prototype,"pointBarriers",void 0),o([R(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],v.prototype,"readPointBarriers",null),o([s({nonNullable:!0,type:j.ofType(oe)})],v.prototype,"polygonBarriers",void 0),o([R(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],v.prototype,"readPolygonBarriers",null),o([s({nonNullable:!0,type:j.ofType(ie)})],v.prototype,"polylineBarriers",void 0),o([R(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],v.prototype,"readPolylineBarriers",null),o([s({readOnly:!0})],v.prototype,"routeInfo",void 0),o([R(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],v.prototype,"readRouteInfo",null),o([s({type:W})],v.prototype,"spatialReference",void 0),o([R(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],v.prototype,"readSpatialReference",null),o([s({nonNullable:!0,type:j.ofType(se)})],v.prototype,"stops",void 0),o([R(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],v.prototype,"readStops",null),o([s()],v.prototype,"title",null),o([s({readOnly:!0,json:{read:!1}})],v.prototype,"type",void 0),o([s()],v.prototype,"url",null),v=o([O("esri.layers.RouteLayer")],v);const _o=v;export{_o as default};
