import{g0 as F,j as _,q as a,v as r,x as f,i_ as M}from"./main-Crkq4LWq.js";import{P as z,Q,S as C,T as R,U as A,V as p,W as w,X as O}from"./SketchViewModel-Cxe7wh4H.js";import{n as P}from"./PointSnappingHint-B1PXgiFi.js";import{h as V,s as m,a as k,o as $,i as h,d as D,U as b,l as T}from"./quantityUtils-DTW_4BVX.js";import{B as c,U as B,a as L,w as S,b as X,A as Y,J as q,K as U}from"./SketchTooltipInfo-DP18t8jJ.js";import{n as j}from"./uuid-Cl5lrJ4c.js";class st{draw(i,t){const e=H(i),s=this.sortUniqueHints(e),u=[];for(const l of s)l instanceof z&&u.push(this.visualizeIntersectionPoint(l,t)),l instanceof Q&&u.push(this.visualizeLine(l,t)),l instanceof C&&u.push(this.visualizeParallelSign(l,t)),l instanceof R&&u.push(this.visualizeRightAngleQuad(l,t)),l instanceof P&&u.push(this.visualizePoint(l,t));return F(u)}sortUniqueHints(i){return i}}function H(n){const i=[];for(const t of n){let e=!0;for(const s of i)if(t.equals(s)){e=!1;break}e&&i.push(t)}return i}let o=class extends _{constructor(n){super(n),this.actual=null,this.lockable=!0,this.id=j(),this.inputValue=null,this.readOnly=!1,this.suffix=null,this.visible=!0,this.invalid=!1,this.unlockOnVertexPlacement=!0}get committed(){return this.lockable?this._get("committed"):null}set committed(n){this.lockable&&this._set("committed",n)}get dirty(){return this.inputValue!=null}get locked(){return this.lockable&&this.committed!=null}onInput(n){this.inputValue=n,this.invalid=!1}onCommit(n,i,t){this.lockable?this._onCommitLockable(n,t):this._onCommitNonLockable(t),this.invalid&&n==="commit-and-exit"||t.onCommit(i,n)}_onCommitLockable(n,i){const{inputValue:t,locked:e}=this;e&&d(t)?this.unlock():(n==="commit-and-exit"&&!e||t!=null)&&this._parseInputAndLock(i)}_onCommitNonLockable(n){const{inputValue:i}=this;d(i)?this.lockable?this.setActual(null):this.clearInputValue():i!=null&&this._parseInputAndSetActual(n)}applyValue(n){this.lockable?this.lock(n):this.setActual(n)}clearInputValue(){this.inputValue=null,this.invalid=!1}setActual(n){this.actual=n,this.clearInputValue()}lock(n){this.lockable&&(this.committed=n??this.actual,this.clearInputValue())}unlock(){this.lockable&&(this.committed=null,this.clearInputValue())}toggleLock(n){this.lockable&&(this.locked?this.unlock():this._parseInputAndLock(n))}getSuffix(n){const{suffix:i}=this;return typeof i=="function"?i(n):i}getFormattedValue(n){const{actual:i,committed:t,format:e}=this;return t!=null?e(t,n):i!=null?e(i,n):null}getRawDisplayValue(n){const{actual:i,committed:t,inputValue:e}=this;return e??(this.lockable&&t!=null?this.formatForInputMode(t,n):i!=null?this.formatForInputMode(i,n):null)}_parseInputAndSetActual(n){const{inputValue:i}=this;if(i==null||d(i))return this.setActual(null);const t=this.parse(i,n);t!=null?this.setActual(t):this.invalid=!0}_parseInputAndLock(n){const{inputValue:i,actual:t}=this;if(d(i))return this.unlock();if(i==null)return this.lock(t);const e=this.parse(i,n);e!=null?this.lock(e):this.invalid=!0}};function d(n){return n!=null&&n.trim()===""}a([r()],o.prototype,"actual",void 0),a([r()],o.prototype,"committed",null),a([r()],o.prototype,"dirty",null),a([r()],o.prototype,"format",void 0),a([r()],o.prototype,"formatForInputMode",void 0),a([r()],o.prototype,"lockable",void 0),a([r()],o.prototype,"locked",null),a([r()],o.prototype,"id",void 0),a([r()],o.prototype,"inputValue",void 0),a([r()],o.prototype,"name",void 0),a([r()],o.prototype,"parse",void 0),a([r()],o.prototype,"readOnly",void 0),a([r()],o.prototype,"suffix",void 0),a([r()],o.prototype,"title",void 0),a([r()],o.prototype,"visible",void 0),a([r()],o.prototype,"invalid",void 0),a([r()],o.prototype,"unlockOnVertexPlacement",void 0),o=a([f("esri.views.interactive.tooltip.fields.TooltipField")],o);let g=class extends o{constructor(i){super(i),this.showAsZ=!1}normalizeCtorArgs(i){const t=e=>e.inputUnitInfos.verticalLength.unit;return{name:"elevation",actual:V,parse:c({createQuantity:(e,s)=>k(e,t(s))}),format:(e,s)=>s.formatters.verticalLength(e),formatForInputMode:(e,s)=>s.formatters.scalar(m(e,t(s))),suffix:e=>e.inputUnitInfos.verticalLength.abbreviation,title:e=>e.messages.sketch[this.showAsZ?"z":"elevation"],unlockOnVertexPlacement:!1,...i}}};a([r()],g.prototype,"showAsZ",void 0),g=a([f("esri.views.interactive.tooltip.fields.TooltipFieldElevation")],g);let v=class extends o{constructor(n){super(n),this.precision=1}normalizeCtorArgs(n){const i=t=>t.inputUnitInfos.angle.unit;return{name:"orientation",actual:null,parse:c({createQuantity:(t,e)=>$(t,i(e),"geographic"),sanitize:L}),format:t=>{const e=A(t);return B(e,"geographic",this.precision)},formatForInputMode:(t,e)=>{const s=A(t);return e.formatters.scalar(s)},suffix:t=>t.inputUnitInfos.angle.abbreviation,title:t=>t.messages.sketch.orientation,...n}}};a([r()],v.prototype,"precision",void 0),v=a([f("esri.views.interactive.tooltip.fields.TooltipFieldOrientation")],v);let y=class extends o{constructor(n){super(n),this.precision=null}normalizeCtorArgs(n){const i=t=>t.inputUnitInfos.length.unit;return{name:"size",actual:null,parse:c({createQuantity:(t,e)=>k(t,i(e))}),format:(t,e)=>e.formatters.length(t),formatForInputMode:(t,e)=>e.formatters.scalar(m(t,i(e))),suffix:t=>t.inputUnitInfos.length.abbreviation,title:t=>t.messages.sketch.size,...n}}};a([r()],y.prototype,"precision",void 0),y=a([f("esri.views.interactive.tooltip.fields.TooltipFieldSize")],y);function rt(n){const i=e=>e.inputUnitInfos.angle.unit,t=e=>e.sketchOptions.values.effectiveDirectionMode;return new o({name:"direction",actual:b,parse:c({createQuantity:(e,s)=>$(e,i(s),"geographic"),sanitize:L}),format:(e,s)=>{const u=t(s),l=w(e,u);switch(u){case p.Absolute:return s.formatters.direction(l);case p.Relative:return s.formatters.directionRelative(l);case p.RelativeBilateral:return s.formatters.directionRelativeBilateral(l)}},formatForInputMode:(e,s)=>{const u=w(e,t(s));return s.formatters.scalar(m(u,i(s)))},suffix:e=>e.inputUnitInfos.angle.abbreviation,title:e=>{const s=t(e),{absolute:u,relative:l}=e.messages.sketch.direction;switch(s){case p.Absolute:return u;case p.Relative:case p.RelativeBilateral:return l}},...n})}function I(n){const i=t=>t.inputUnitInfos.length.unit;return new o({name:"distance",actual:V,parse:c({createQuantity:(t,e)=>k(Math.max(t,0),i(e))}),format:(t,e)=>e.formatters.length(t),formatForInputMode:(t,e)=>e.formatters.scalar(m(t,i(e))),suffix:t=>t.inputUnitInfos.length.abbreviation,title:t=>t.messages.sketch.distance,...n})}function lt(n){return I({format:(i,t)=>t.formatters.totalLength(i),title:i=>i.messages.sketch.totalLength,readOnly:!0,...n})}function ut(n){return I({...n})}function ct(n){const i=t=>t.inputUnitInfos.length.unit;return I({...n,parse:c({createQuantity:(t,e)=>k(t,i(e))}),format:(t,e)=>e.formatters.lengthRelative(t)})}function Z(n){return new g(n)}function pt(n){return new v(n)}function ht(n){return new y(n)}function ft(n){return x("scale",{name:"scale",actual:null,parse:c({createQuantity:i=>h(Math.abs(i))}),...n})}function mt(n){const i=t=>t.inputUnitInfos.area.unit;return new o({name:"area",actual:D,parse:c({createQuantity:(t,e)=>T(t,i(e))}),format:(t,e)=>e.formatters.area(t),formatForInputMode:(t,e)=>e.formatters.scalar(m(t,i(e))),suffix:t=>t.inputUnitInfos.area.abbreviation,title:t=>t.messages.sketch.area,readOnly:!0,...n})}function N(n){return new o({name:"x",actual:b,parse:X,format:(i,t)=>t.formatters.longitudeDecimalDegrees(i),formatForInputMode:i=>S(i),suffix:i=>i.inputUnitInfos.angle.abbreviation,title:i=>i.messages.sketch.longitude,...n})}function W(n){return new o({name:"y",actual:b,parse:q,format:(i,t)=>t.formatters.latitudeDecimalDegrees(i),formatForInputMode:i=>Y(i),suffix:i=>i.inputUnitInfos.angle.abbreviation,title:i=>i.messages.sketch.latitude,...n})}function E(n){return x("x",{name:"x",...n})}function J(n){return x("y",{name:"y",...n})}function x(n,i){return new o({actual:h(0),parse:c({createQuantity:t=>h(t)}),format:(t,e)=>e.formatters.scalar(t),formatForInputMode:(t,e)=>e.formatters.scalar(t),title:t=>t.messages.sketch[n],...i})}const dt=n=>{let i=class extends n{constructor(){super(...arguments),this.longitude=N(),this.latitude=W(),this.x=E(),this.y=J(),this.elevation=Z(),this.geographic=!1}get effectiveX(){return this.geographic?this.longitude:this.x}get effectiveY(){return this.geographic?this.latitude:this.y}get key(){return{longitude:this.longitude.actual,latitude:this.latitude.actual,x:this.x.actual,y:this.y.actual,elevation:this.elevation.actual,geographic:this.geographic}}setLocationFromPoint(t,e=t?.spatialReference){if(this.geographic=!!e&&O(e),t==null)return this._setActualLonLat(null,null),void this._setActualXY(null,null);if(this.geographic){const s=M(t,K);this._setActualLonLat(U(s?.[0]),U(s?.[1]))}else this._setActualXY(h(t.x),h(t.y))}_setActualLonLat(t,e){this.longitude.actual=t,this.latitude.actual=e}_setActualXY(t,e){this.x.actual=t,this.y.actual=e}};return a([r()],i.prototype,"geographic",void 0),a([r()],i.prototype,"effectiveX",null),a([r()],i.prototype,"effectiveY",null),a([r()],i.prototype,"key",null),i=a([f("esri.views.interactive.tooltip.infos.TooltipInfoWithCoordinates")],i),i},K=[0,0];export{ut as F,mt as Q,ft as R,dt as h,ht as j,pt as k,st as r,lt as w,ct as x,rt as y};
