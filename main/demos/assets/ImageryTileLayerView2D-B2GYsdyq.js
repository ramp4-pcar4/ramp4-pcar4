import{fY as A,q as u,g$ as Ee,cL as Rt,j as hs,c6 as ds,b_ as ms,aH as fs,b$ as gs,O as ze,i as ke,v as T,x as Me,aq as ys,ad as Ae,s as ws,bx as xs,ag as bs,e4 as _s}from"./main-Crkq4LWq.js";import{r as St,V as vs,k as Ce,s as Cs,x as wt}from"./datasetUtils-73IFBxcx.js";import{f as Ts,d as Rs,h as Ss}from"./RasterVFDisplayObject-BwLKqpF8.js";import{S as Ps}from"./LayerView2D-CrOqte-c.js";import{l as Is}from"./pixelRangeUtils-BvOub3JO.js";import{x as zs}from"./clipUtils-CZNeK333.js";import{e as $e,m as ks,y as Pt}from"./MapView-CJJhGIL5.js";import{o as $s,M as Qe,h as Ms,b as Fs,i as It,r as Vs}from"./mat3-CruJiiUv.js";import{r as Oe}from"./vec2f32-CaVKkSa6.js";import{e as Bs}from"./Container-B6lwYvR2.js";import{L as Ke,D as Xe,C as Os,B as Ds,X as As,P as Gs,A as De}from"./enums-UBzvFP7O.js";import{m as Us,c as qs,s as js,l as et}from"./rasterUtils-1Yn7oIv4.js";import{r as zt}from"./WGLContainer-W5xN5SW-.js";import{E as tt,r as xt,h as Ls,p as Es}from"./enums-Cr_bgujp.js";import{i as kt}from"./TileContainer--GoXcL9S.js";import{z as X,Z as K,I as P,M as ee,T as ht,Y as W,e as y,d as S,q as V,c as b,N as Ws,O as bt,X as w,k as j,B as $t,y as E,g as m,U as ie,P as I,j as Mt,w as Ft,V as L,f as Vt,r as _e,_ as d,K as v,$ as pe,m as We,i as Bt,v as Ot,n as N,D as st,p as it,Q as O,a0 as Q,A as te,W as Y,t as dt,a1 as we,a as Dt,E as Ne,u as D,b as ye,a2 as ae,a3 as Ns,G as oe,a4 as Zs,a5 as Hs,a6 as Qs,a7 as Xs,a8 as Ys,a9 as Js,aa as Ks,ab as ei,ac as ti,ad as si,ae as ii,af as ri,s as ai,ag as oi,F as ni,ah as li,ai as ui,aj as ci,ak as pi,al as hi,am as di,an as mi,ao as Ye,ap as fi,C as mt,x as gi,aq as yi,ar as wi,as as xi}from"./GraphShaderModule-D9wKQV46.js";import{t as k}from"./TechniqueType-CFPo0AVB.js";import{m as bi}from"./bitmapUtils-_ZFWjM-_.js";import{D as xe,z as _i}from"./utils-C3lRdHqP.js";import{a as ce}from"./definitions-CASyCajO.js";import{R as vi}from"./FramebufferObject-CvTmAk7h.js";import{a as Ci,S as Ti}from"./Texture-B5fSG5wj.js";import{v as be,c as Ri,S as Si}from"./dataUtils-B-IB1pKA.js";import{h as Pi}from"./UpdatingHandles-eO6gDPm8.js";import{j as _t}from"./TileInfo-DAvxtt9h.js";import{g as vt,a as Ct,i as Ii,u as zi}from"./RawBlockCache-ACZ7qGBE.js";import{e as ki,x as $i,C as Mi,m as Tt,O as Fi}from"./rasterProjectionHelper-VwvIstg-.js";import"./TileKey-DWL9a-dq.js";import{g as Vi}from"./Scheduler-Pc61bPwM.js";import{t as Bi}from"./capabilities-Bi6C4OG6.js";import{i as Oi}from"./timeSupport-9RirMNDe.js";import{p as Di}from"./popupUtils-Bvi2xCbV.js";import{u as Ai}from"./LayerView-aw_QW3G3.js";import{i as Gi}from"./RefreshableLayerView-Qw8N-9FQ.js";import"./preload-helper-DMGCcr4D.js";import"./Field-CfEWUurB.js";import"./fieldType-DTrwgDiS.js";import"./VertexArrayObject-D8gxGcVe.js";import"./memoryEstimations-DknB37rc.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./Utils-CRLFUF29.js";import"./BoundingBox-BSOANoLO.js";import"./getDataTypeBytes-D2DiHx_d.js";import"./utils-BQBvadb7.js";import"./ReactiveMap-Cu7iaDFo.js";import"./layerViewUtils-Brvm02SE.js";import"./Cyclical-CYdxR5S5.js";import"./CollectionFlattener-Bv62WCS2.js";import"./workers-cjuoJTHE.js";import"./Queue-DQom_e3o.js";import"./intl-BbkIuURR.js";import"./projectionUtils-CE8Ogge1.js";import"./jsxFactory-Bp35jaL4.js";import"./uuid-Cl5lrJ4c.js";import"./sanitizerUtils-CJlLEeXg.js";import"./asyncUtils-DfTs-X0F.js";import"./utils-5b6BMTlC.js";import"./Version-Dg6OjmkZ.js";import"./Map-BNbpD8LB.js";import"./Basemap-C9yb0ly4.js";import"./loadAll-BXn9jnyu.js";import"./PortalItem-DoXbvgWk.js";import"./writeUtils-DcrUcLLa.js";import"./persistable-Bj2MRLvH.js";import"./MD5-MtSiOt06.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-TV-TTAKd.js";import"./PolygonCollection-Dmw0ki-o.js";import"./editableLayers-DsLdzz8Q.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-DgBklfbN.js";import"./common-DQOJ18NT.js";import"./TablesMixin-_8wUyxBH.js";import"./Layer-DyCDZpQP.js";import"./TimeExtent-R7s_TuxB.js";import"./GraphicsCollection-BLVS1AvI.js";import"./HeightModelInfo-CKmXOeat.js";import"./timeZoneUtils-BHCW7jir.js";import"./Query-D4pOe5d7.js";import"./IViewEvents-Bci6PjlS.js";import"./mat2df64-CH-gvrN5.js";import"./a11yUtils-lesmaVf1.js";import"./projectionUtils-Ct6hX8mo.js";import"./ViewingMode-Chk7YAAL.js";import"./vec2-ChnYg_BJ.js";import"./vec2f64-Cgb6qxNH.js";import"./mat2d-D9DBP-jx.js";import"./normalizeUtils-Dg7DX0Kf.js";import"./normalizeUtilsCommon-KviMv5LJ.js";import"./utils-BdBs5klf.js";import"./utils-Courd1_m.js";import"./mat2df32-Dpt2CT5P.js";import"./vec32-StvNi8k0.js";import"./unitBezier-B1N-tmtC.js";import"./imageUtils-rE9d6Mzq.js";import"./modeUtils-1fSvrGRf.js";import"./ILyr3DWasmPerSceneView-CIC-HPGZ.js";import"./ColorBackground-BYtpFnXc.js";import"./EffectView-DrUQPYiX.js";import"./parser-B_oj8OEu.js";import"./ProgramTemplate-B6LPNqUk.js";import"./vec3f32-WCVSSNPR.js";import"./StyleDefinition-CQkO14Uj.js";import"./enums-_AFKM9Yk.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-vqNz0xi_.js";import"./OptimizedFeature--b1MQl_i.js";import"./OptimizedGeometry-DmzaLtTI.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./quickselect-QQC62dOK.js";import"./ShaderBuilder-BLr00_qu.js";import"./BindType-BBwFZqyN.js";import"./constants-BFLErLYb.js";import"./TileKey-DZd6gJy7.js";import"./debugFlags-cjveQ8k-.js";const Ui={bandCount:3,minOutput:0,maxOutput:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};let qi=class extends Bs{constructor(e=null,s=null,t=null){super(),this._textureInvalidated=!0,this._colormapTextureInvalidated=!0,this._rasterTexture=null,this._maskTexture=null,this._rasterTextureBandIds=null,this._transformGridTexture=null,this._colormapTexture=null,this._colormap=null,this._supportsBilinearTexture=!0,this._processedTexture=null,this.functionTextures=[],this.projected=!1,this.stencilRef=0,this.coordScale=[1,1],this._processed=!1,this._symbolizerParameters=null,this.height=null,this.isRendereredSource=!1,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this._mask=null,this.rawPixelData=null,this._suspended=!1,this._bandIds=null,this._interpolation=null,this._transformGrid=null,this.width=null,this.x=0,this.y=0,this.source=e,this.transformGrid=s,this.interpolation=t}destroy(){this._disposeTextures()}get processedTexture(){return this._processedTexture}set processedTexture(e){this._processedTexture!==e&&(this._disposeTextures(!0),this._processedTexture=e)}get rasterTexture(){return this._rasterTexture}set rasterTexture(e){this._rasterTexture!==e&&(this._rasterTexture?.dispose(),this._rasterTexture=e),e==null&&(this.projected=!1)}get processed(){return this._processed}set processed(e){this._processed=e,e||(this.processedTexture=A(this.processedTexture),this.invalidateTexture())}get symbolizerParameters(){return this._symbolizerParameters||Ui}set symbolizerParameters(e){this._symbolizerParameters!==e&&(this._symbolizerParameters=e,this._colormapTextureInvalidated=!0)}get source(){return this._source}set source(e){this._source!==e&&(this._source=e,this._rasterTexture&&(this._rasterTexture=A(this._rasterTexture),this._rasterTextureBandIds=null),this.projected=!1,this.invalidateTexture())}get mask(){return this._mask}set mask(e){this._mask!==e&&(this._mask=e,this._maskTexture=A(this._maskTexture))}get suspended(){return this._suspended}set suspended(e){this._suspended&&!e&&this.stage&&(this.ready(),this.requestRender()),this._suspended=e}get bandIds(){return this._bandIds}set bandIds(e){this._bandIds=e,this._isBandIdsChanged(e)&&(this.projected=!1,this.invalidateTexture())}get interpolation(){return this._interpolation||"nearest"}set interpolation(e){this._interpolation=e,this._rasterTexture&&this._rasterTexture.setSamplingMode(this._getTextureSamplingMethod(e||"nearest")==="bilinear"?Ke.LINEAR:Ke.NEAREST)}get transformGrid(){return this._transformGrid}set transformGrid(e){this._transformGrid!==e&&(this._transformGrid=e,this._transformGridTexture=A(this._transformGridTexture))}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRender())}getRasterTextureSize(e=!1){const s=e||this.projected;return[s?this.width:this.source?.width||this.width,s?this.height:this.source?.height||this.height]}getRasterCellSize(){const e=this.rawPixelData?.srcPixelSize,{projected:s,resolution:t}=this;return e&&!s?[e.x,e.y]:[t,t]}_createTransforms(){return{displayViewScreenMat3:$e()}}setTransform(e){const s=$s(this.transforms.displayViewScreenMat3),[t,a]=e.toScreenNoRotation([0,0],[this.x,this.y]),i=this.resolution/this.pixelRatio/e.resolution,o=i*this.width,n=i*this.height,l=Math.PI*this.rotation/180;Qe(s,s,Oe(t,a)),Qe(s,s,Oe(o/2,n/2)),Ms(s,s,-l),Qe(s,s,Oe(-o/2,-n/2)),Fs(s,s,Oe(o,n)),It(this.transforms.displayViewScreenMat3,e.displayViewMat3,s)}getTextures({forProcessing:e=!1,useProcessedTexture:s=!1}={}){const t=s?this._processedTexture??this._rasterTexture:this._rasterTexture,a=[],i=[];return t?(this._transformGridTexture&&!this.projected&&(i.push(this._transformGridTexture),a.push("u_transformGrid")),i.push(t),a.push("u_image"),!this._colormapTexture||!s&&e||(i.push(this._colormapTexture),a.push("u_colormap")),this._maskTexture&&(i.push(this._maskTexture),a.push("u_mask")),{names:a,textures:i}):{names:a,textures:i}}onAttach(){this.invalidateTexture()}onDetach(){this.invalidateTexture()}updateTexture({context:e}){if(!this.stage)return void this._disposeTextures();const s=this._isValidSource(this.source);s&&this._colormapTextureInvalidated&&(this._colormapTextureInvalidated=!1,this._updateColormapTexture(e)),this._textureInvalidated&&(this._textureInvalidated=!1,this._createOrDestroyRasterTexture(e),this._rasterTexture&&(s?(this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=Us(e,this.transformGrid)),this._mask&&!this._maskTexture&&(this._maskTexture=qs(e,this._mask,[this.width,this.height]))):this._rasterTexture.setData(null)),this.suspended||(this.ready(),this.requestRender()))}updateProcessedTexture(){const{functionTextures:e}=this;e.length!==0&&(this.processedTexture=e.shift(),e.forEach(s=>s?.dispose()),e.length=0,this.processed=!!this.processedTexture)}_createOrDestroyRasterTexture(e){const s=this.source?.extractBands(this.bandIds);if(!this._isValidSource(s))return void(this._rasterTexture&&(this._rasterTexture=A(this._rasterTexture),this._rasterTextureBandIds=null));const t=!this._isBandIdsChanged(this.bandIds);if(this._rasterTexture){if(t)return;this._rasterTexture=A(this._rasterTexture),this._rasterTextureBandIds=null}this._supportsBilinearTexture=!!e.capabilities.textureFloatLinear;const a=this._getTextureSamplingMethod(this.interpolation),i=this.isRendereredSource;this._rasterTexture=js(e,s,a,i),this.projected=!1,this._processed=!1,this._rasterTextureBandIds=this.bandIds?[...this.bandIds]:null}_isBandIdsChanged(e){const s=this._rasterTextureBandIds;return!(s==null&&e==null||s&&e&&s.join("")===e.join(""))}_isValidSource(e){return e!=null&&e.pixels?.length>0}_getTextureSamplingMethod(e){const{type:s}=this.symbolizerParameters,t=s==="lut"&&!this.symbolizerParameters.isClassBreaks||s==="hillshade"||s==="stretch"&&this.symbolizerParameters.bandCount===1;return!this._supportsBilinearTexture||t||e!=="bilinear"&&e!=="cubic"?"nearest":"bilinear"}_updateColormapTexture(e){const s=this._colormap,t=this.symbolizerParameters.colormap;return t?s?t.length!==s.length||t.some((a,i)=>a!==s[i])?(this._colormapTexture&&(this._colormapTexture=A(this._colormapTexture)),this._colormapTexture=et(e,t),void(this._colormap=t)):void 0:(this._colormapTexture=et(e,t),void(this._colormap=t)):(this._colormapTexture&&(this._colormapTexture=A(this._colormapTexture)),void(this._colormap=null))}_disposeTextures(e=!1){e?this.projected&&(this._transformGridTexture=A(this._transformGridTexture)):(this._rasterTexture=A(this._rasterTexture),this._colormapTexture=A(this._colormapTexture),this._transformGridTexture=A(this._transformGridTexture),this._maskTexture=A(this._maskTexture),this._rasterTextureBandIds=null,this._colormap=null,this._colormapTextureInvalidated=!0),this._processedTexture=A(this._processedTexture)}},ji=class extends zt{constructor(e,s,t,a,i,o,n=null){super(e,s,t,a,i,o),this.bitmap=null,this.bitmap=new qi(n,null,null),this.bitmap.coordScale=[i,o],this.bitmap.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.bitmap.destroy(),this.bitmap=null,this.stage=null}set stencilRef(e){this.bitmap.stencilRef=e}get stencilRef(){return this.bitmap.stencilRef}setTransform(e){super.setTransform(e),this.bitmap.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}_createTransforms(){return{displayViewScreenMat3:$e(),tileMat3:$e()}}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap.stage=null}};function Li(r,e,s,t){const a=X(e.multiply(s)),i=new K(new P(a.x),new P(a.y)),o=new K(i.x.add(1),i.y),n=new K(i.x,i.y.add(1)),l=new K(i.x.add(1),i.y.add(1)),c=ee(r,i,new P(0)),h=ee(r,o,new P(0)),p=ee(r,n,new P(0)),f=ee(r,l,new P(0)),g=ht(e.multiply(s)),x=W(c,h,g.x),_=W(p,f,g.x),R=W(x,_,g.y);if(!t)return R;const z=new y(c.a,h.a,p.a,f.a),C=z.xy.multiply(z.zw),q=X(C.x.multiply(C.y).add(.5)),J=R.multiply(q),He=xe(q).multiply(S(r,e));return J.add(He)}class Te extends I{}function Ei(r,e){const s=S(e.transformTexture,r);return new b(s.r,s.g)}function Wi(r,e){const{transformTexture:s,targetImageSize:t,transformSpacing:a}=e,i=X(r.multiply(t)),o=new b(4,1),n=X(i.divide(a)).multiply(o),l=ht(i.add(new b(.5,.5)).divide(a)),c=new K(bt(n.x),bt(n.y)),h=new w(l,1);return j($t(l.x,l.y),Ni(s,c,h),Zi(s,c,h))}function Ni(r,e,s){const t=ee(r,e,new P(0)),a=new K(e.x.add(1),e.y),i=ee(r,a,new P(0));return new b(E(t.rgb,s),E(i.rgb,s))}function Zi(r,e,s){const t=new K(e.x.add(2),e.y),a=ee(r,t,new P(0)),i=new K(e.x.add(3),e.y),o=ee(r,i,new P(0));return new b(E(a.rgb,s),E(o.rgb,s))}function Hi(r){const e=V(new b(-1e-5,-1e-5),r).multiply(V(r,new b(1.00001,1.00001))),s=xe(e.x.multiply(e.y));return new Ws(s)}function At(r,e,s=!1){return e?s?Ei(r,e):Wi(r,e):r}function Gt(r,e,s){const{bicubic:t=!1,bilinear:a=!1,nearestOnEdge:i=!1}=s??{};return t||a?t?bi(e.texture,r,e.srcImageSize):Li(e.texture,r,e.srcImageSize,i):S(e.texture,r)}u([m(ie)],Te.prototype,"transformTexture",void 0),u([m(b)],Te.prototype,"targetImageSize",void 0),u([m(b)],Te.prototype,"transformSpacing",void 0),u([m(b)],Te.prototype,"transformGridSize",void 0);let Ut=class extends Bt{};u([Vt(0,b)],Ut.prototype,"position",void 0);let Qi=class extends Ot{},he=class extends I{};u([m(ie)],he.prototype,"texture",void 0),u([m(_e)],he.prototype,"dvsMat3",void 0),u([m(b)],he.prototype,"coordScale",void 0),u([m(b)],he.prototype,"srcImageSize",void 0),u([m(d)],he.prototype,"opacity",void 0);class qt extends I{}u([m(ie)],qt.prototype,"maskTexture",void 0);class G extends Mt{constructor(){super(...arguments),this.applyProjection=!0,this.lookupProjection=!1,this.bilinear=!1,this.bicubic=!1,this.nearestOnEdge=!1,this.applyPixelMask=!1}vertex(e){const s=e.position,{dvsMat3:t,coordScale:a}=this.config,i=t.multiply(new w(s.multiply(a),1));return{uv:s,glPosition:new y(i,1)}}fragment(e){const s=new Ft,t=At(e.uv,this.applyProjection?this.projectionConfig:void 0,this.lookupProjection),a=j(Hi(t),new y(0,0,0,0),this._colorize(t));let i=a.a.multiply(this.config.opacity);if(this.applyPixelMask){const o=this._getPixelMask(e.uv);i=i.multiply(o)}return s.fragColor=new y(a.rgb,1).multiply(i),s}_getPixel(e){const{config:s,bicubic:t,bilinear:a,nearestOnEdge:i}=this;return Gt(e,s,{bicubic:t,bilinear:a,nearestOnEdge:i})}_getPixelMask(e){const{maskTexture:s}=this.pixelMaskConfig,t=S(s,e);return L(t.a)}}u([v],G.prototype,"applyProjection",void 0),u([v],G.prototype,"lookupProjection",void 0),u([v],G.prototype,"bilinear",void 0),u([v],G.prototype,"bicubic",void 0),u([v],G.prototype,"nearestOnEdge",void 0),u([v],G.prototype,"applyPixelMask",void 0),u([m(he)],G.prototype,"config",void 0),u([pe(Te)],G.prototype,"projectionConfig",void 0),u([pe(qt)],G.prototype,"pixelMaskConfig",void 0),u([Ee(0,We(Ut))],G.prototype,"vertex",null),u([Ee(0,We(Qi))],G.prototype,"fragment",null);let se=class extends I{};function Fe(r,e,s,t=!0){const{colormapTexture:a,colormapOffset:i,colormapMaxIndex:o}=s,n=r.r.multiply(e).subtract(i),l=N(n,new d(0),o),c=new b(l.add(.5).divide(o.add(1)),0),h=S(a,c),p=new y(h.rgb,h.a.multiply(r.a));if(t)return p;const f=V(new d(0),n).multiply(V(n,s.colormapMaxIndex));return p.multiply(f)}u([m(ie)],se.prototype,"colormapTexture",void 0),u([m(d)],se.prototype,"colormapOffset",void 0),u([m(d)],se.prototype,"colormapMaxIndex",void 0);let jt=class extends G{constructor(){super(...arguments),this.type="RasterColorizerLUTShader"}_colorize(e){const s=this._getPixel(e);return Fe(s,new d(1),this.colormapConfig,!1)}};u([m(se)],jt.prototype,"colormapConfig",void 0);function Lt(r){const e=new y(0,-.3333333333333333,.6666666666666666,-1),s=j(st(r.y,r.z),new y(r.zy,e.wz),new y(r.yz,e.xy)),t=j(st(r.x,s.x),new y(s.xyw,r.x),new y(r.x,s.yzx)),a=t.x.subtract(it(t.w,t.y)),i=new d(1e-10),o=t.w.subtract(t.y),n=a.multiply(6).add(i),l=O(o.divide(n).add(t.z)),c=t.x.add(i),h=it(a.divide(c),new d(1));return new w(l,h,t.x)}function Et(r){const e=new y(1,.6666666666666666,.3333333333333333,3),s=O(ht(r.xxx.add(e.xyz)).multiply(6).subtract(e.www)),t=N(s.subtract(e.xxx),new w(0,0,0),new w(1));return r.z.multiply(W(e.xxx,t,r.y))}let Z=class extends I{};function U(r){const e=O(r),s=V(e,new b(1,1)).multiply(e),t=new d(2).subtract(e),a=V(new d(1),e).multiply(t);return s.add(a)}function Ve(r,e,s){const t=new d(1).divide(s),a=S(r,U(t.multiply(new b(-1,-1)).add(e))),i=S(r,U(t.multiply(new b(0,-1)).add(e))),o=S(r,U(t.multiply(new b(1,-1)).add(e))),n=S(r,U(t.multiply(new b(-1,0)).add(e))),l=S(r,U(e)),c=S(r,U(t.multiply(new b(1,0)).add(e))),h=S(r,U(t.multiply(new b(-1,1)).add(e))),p=S(r,U(t.multiply(new b(0,1)).add(e))),f=S(r,U(t.multiply(new b(1,1)).add(e))),g=new y(a.a,i.a,o.a,n.a),x=new y(c.a,h.a,p.a,f.a),_=g.multiply(x),R=_.xy.multiply(_.zw),z=R.x.multiply(R.y).multiply(l.a),C=new Q(new d(0),10);return C[0]=a.r,C[1]=i.r,C[2]=o.r,C[3]=n.r,C[4]=l.r,C[5]=c.r,C[6]=h.r,C[7]=p.r,C[8]=f.r,C[9]=z,C}function ft(r,e){const s=new y(r[5],r[3],r[7],r[1]).multiply(2),t=new w(r[2],s[0],r[8]),a=new w(r[0],s[1],r[6]),i=E(t.subtract(a),new w(1)),o=new w(r[6],s[2],r[8]),n=new w(r[0],s[3],r[2]),l=E(o.subtract(n),new w(1));return new b(i,l).multiply(e)}function Wt(r,e,s){const{factor:t}=e,a=ft(r,t),i=te(E(a,a).add(1)),o=r[9],{sinZsinAs:n,sinZcosAs:l,cosZs:c,weights:h}=e;if(!s){const x=Je({sinZsinA:n[0],sinZcosA:l[0],cosZ:c[0],weights:new d(1),dzxy:a,dzd:i});return new y(x,x,x,o)}const p=Je({sinZsinA:new w(n[0],n[1],n[2]),sinZcosA:new w(l[0],l[1],l[2]),cosZ:new w(c[0],c[1],c[2]),weights:new w(h[0],h[1],h[2]),dzxy:a,dzd:i}),f=Je({sinZsinA:new w(n[3],n[4],n[5]),sinZcosA:new w(l[3],l[5],l[5]),cosZ:new w(c[3],c[4],c[5]),weights:new w(h[3],h[4],h[5]),dzxy:a,dzd:i}),g=E(p.add(f),new w(1));return new y(g,g,g,o)}function Je(r){const e=r.sinZsinA.multiply(r.dzxy.y),s=r.sinZcosA.multiply(r.dzxy.x),t=e.subtract(s),a=r.cosZ.add(t).divide(r.dzd);return a.multiply(V(new d(0),a)).multiply(r.weights)}function Nt(r,e){const{pixelSizeFactor:s}=r,t=[r.factor[0]/e[0],r.factor[1]/e[1]];if(s>0){const{zFactor:a,pixelSizePower:i,gcsFactor:o}=r,n=e[0]*o,l=e[1]*o;t[0]=(a+n**i*s)/(8*n),t[1]=(a+l**i*s)/(8*l)}return t}u([m(Q.ofType(d,6))],Z.prototype,"sinZcosAs",void 0),u([m(Q.ofType(d,6))],Z.prototype,"sinZsinAs",void 0),u([m(Q.ofType(d,6))],Z.prototype,"cosZs",void 0),u([m(Q.ofType(d,6))],Z.prototype,"weights",void 0),u([m(d)],Z.prototype,"minValue",void 0),u([m(d)],Z.prototype,"maxValue",void 0),u([m(b)],Z.prototype,"factor",void 0);let Re=class extends G{constructor(){super(...arguments),this.type="RasterColorizerShadedReliefShader",this.applyColormap=!1,this.isMultidirectional=!1}_colorize(e){const{texture:s}=this.config,t=Ve(s,e,this.config.srcImageSize),a=Wt(t,this.hillshadeConfig,this.isMultidirectional);if(!this.applyColormap)return new y(a.x,a.x,a.x,a.a);const{minValue:i,maxValue:o}=this.hillshadeConfig,n=this._getPixel(e),l=o.subtract(i),c=n.r.subtract(i),h=N(c.divide(l),new d(0),new d(1)),p=Fe(new y(h,h,h,1),new d(255),this.colormapConfig),f=Lt(p.xyz),g=Et(new w(f.xy,a.x));return new y(g,p.a.multiply(a.a))}};u([v],Re.prototype,"applyColormap",void 0),u([v],Re.prototype,"isMultidirectional",void 0),u([m(Z)],Re.prototype,"hillshadeConfig",void 0),u([pe(se)],Re.prototype,"colormapConfig",void 0);let H=class extends I{};function Xi(r,e){const{minCutOff:s,maxCutOff:t,factor:a,minOutput:i}=e;return N(r,s,t).subtract(s).multiply(a).add(i)}function Yi(r,e){const{minCutOff:s,maxCutOff:t,minOutput:a,maxOutput:i,gamma:o,gammaCorrection:n}=e,l=N(r,s,t).subtract(s),c=t.subtract(s),h=l.divide(c),p=V(new d(1),o),f=L(o.subtract(1)),g=i.subtract(a),x=new w(1),_=Y(x.divide(g),h.multiply(n)),R=xe(p.multiply(f).multiply(_)),z=Y(h,x.divide(o)),C=R.multiply(g).multiply(z).add(a);return N(C,a,i)}function Zt(r,e,s,t=255){const a=s?Yi(r.rgb,e).divide(t):Xi(r.rgb,e);return new y(a,r.a)}u([m(d)],H.prototype,"minOutput",void 0),u([m(d)],H.prototype,"maxOutput",void 0),u([m(w)],H.prototype,"minCutOff",void 0),u([m(w)],H.prototype,"maxCutOff",void 0),u([m(w)],H.prototype,"factor",void 0),u([m(w)],H.prototype,"gamma",void 0),u([m(w)],H.prototype,"gammaCorrection",void 0);let ne=class extends G{constructor(){super(...arguments),this.type="RasterColorizerStretchShader",this.isMultiband=!0,this.applyColormap=!1,this.useGamma=!1,this.noOp=!1}_colorize(e){const s=this._getPixel(e);if(this.noOp)return s;let t=Zt(s,this.stretchConfig,this.useGamma);if(this.isMultiband)return t;if(t=new y(t.rrr,t.a),this.applyColormap){const a=this.useGamma?255:1;t=Fe(t,new d(a),this.colormapConfig)}return t}};u([v],ne.prototype,"isMultiband",void 0),u([v],ne.prototype,"applyColormap",void 0),u([v],ne.prototype,"useGamma",void 0),u([v],ne.prototype,"noOp",void 0),u([m(H)],ne.prototype,"stretchConfig",void 0),u([pe(se)],ne.prototype,"colormapConfig",void 0);let Ji=class extends dt{constructor(){super(...arguments),this.name="BrushRasterColorizer",this.type=k.RasterColorizer,this.shaders={lut:new jt,stretch:new ne,shadedRelief:new Re}}render(e,s){for(const t of s.bitmaps){if(!t.source||t.suspended)continue;e.timeline.begin(this.name);const{painter:a}=e;a.setPipelineState({depth:!1,stencil:{test:{mask:255,ref:t.stencilRef,compare:Os.EQUAL,op:{fail:Xe.KEEP,zFail:Xe.KEEP,zPass:Xe.KEEP}},write:!1},color:{write:[!0,!0,!0,!0],blendMode:"composite"}}),t.updateTexture(e),t.processedTexture||t.updateProcessedTexture();const{type:i}=t.symbolizerParameters,o=i==="stretch"?this._getStretchOptions(t):i==="lut"?this._getLutOptions(t):this._getShadedReliefOptions(t);t.interpolation!=="bilinear"||e.context.capabilities.textureFloatLinear||(o.defines.bilinear=!0),a.submitDrawMesh(e.context,o,a.quadMesh),e.timeline.end(this.name)}}_getLutOptions(e){const{config:s,projectionConfig:t,colormapConfig:a,pixelMaskConfig:i,projectionDefines:o}=this._getCommonConfig(e),n=this._getInterpolationDefines("nearest",!1);return{shader:this.shaders.lut,uniforms:{projectionConfig:t,config:s,colormapConfig:a,pixelMaskConfig:i},defines:{...o,...n,applyPixelMask:!!i},optionalAttributes:null,useComputeBuffer:!1}}_getStretchOptions(e){const s=e.symbolizerParameters,{config:t,projectionConfig:a,colormapConfig:i,pixelMaskConfig:o,projectionDefines:n}=this._getCommonConfig(e),l=this._getInterpolationDefines(e.interpolation,s.bandCount===1);return{shader:this.shaders.stretch,uniforms:{projectionConfig:a,config:t,stretchConfig:s,colormapConfig:i,pixelMaskConfig:o},defines:{...n,...l,isMultiband:s.bandCount>1,applyColormap:!!i,useGamma:s.useGamma,noOp:e.isRendereredSource&&!e.processed,applyPixelMask:!!o},optionalAttributes:null,useComputeBuffer:!1}}_getShadedReliefOptions(e){const s=e.symbolizerParameters,{config:t,projectionConfig:a,colormapConfig:i,pixelMaskConfig:o,projectionDefines:n}=this._getCommonConfig(e),l=this._getInterpolationDefines(e.interpolation,!0);return{shader:this.shaders.shadedRelief,uniforms:{projectionConfig:a,config:t,hillshadeConfig:s,colormapConfig:i,pixelMaskConfig:o},defines:{...n,...l,isMultidirectional:s.hillshadeType>0,applyColormap:!!i,applyPixelMask:!!o},optionalAttributes:null,useComputeBuffer:!1}}_getCommonConfig(e){const{coordScale:s,computedOpacity:t,transforms:a}=e,{names:i,textures:o}=e.getTextures({useProcessedTexture:e.processed}),n=o[i.indexOf("u_image")],l=e.getRasterTextureSize(),c={texture:{texture:n,unit:0},dvsMat3:a.displayViewScreenMat3,coordScale:s,srcImageSize:l,opacity:t},h=o[i.indexOf("u_transformGrid")],{transformGrid:p}=e,f=!(!h||!p),g=f?{transformTexture:{texture:h,unit:2},targetImageSize:[e.width,e.height],transformSpacing:p.spacing,transformGridSize:p.size}:void 0,x=o[i.indexOf("u_colormap")],{colormap:_,colormapOffset:R}=e.symbolizerParameters,z=x&&_?{colormapTexture:{texture:x,unit:1},colormapOffset:R??0,colormapMaxIndex:_.length/4-1}:void 0,C=o[i.indexOf("u_mask")];return{config:c,projectionConfig:g,colormapConfig:z,pixelMaskConfig:C?{maskTexture:{texture:C,unit:3}}:void 0,projectionDefines:{applyProjection:f,lookupProjection:f&&p.spacing[0]===1}}}_getInterpolationDefines(e,s){const t=e==="bilinear"&&s;return{bilinear:t,bicubic:e==="cubic",nearestOnEdge:t}}};function Ht(r,e){const s=new Ci;return s.width=r,s.height=e,s.internalFormat=Ds.RGBA32F,s.samplingMode=Ke.NEAREST,s.dataType=As.FLOAT,s.isImmutable=!0,s.wrapMode=Gs.CLAMP_TO_EDGE,s}function Ki(r,e,s){const t=Ht(e,s);return new Ti(r,t)}function Qt(r,e,s){const t=Ht(e,s);return new vi(r,t)}let F=class extends dt{shutdown(e){super.shutdown(e),this._fbo?.dispose(),this._fbo=void 0}render(e,s){const{rasterFunction:t}=e;if(!t)return;const{context:a}=e,i="indexedColormap"in t.parameters?et(a,t.parameters.indexedColormap):void 0,o=t.name==="Reproject",n=a.getBoundFramebufferObject(),l=a.getViewport();for(const c of s.bitmaps){const h=o?!(c.rasterTexture&&c.projected):!c.processed;if(!c.source||!h||c.suspended)continue;e.timeline.begin(this.name);const{painter:p}=e;p.setPipelineState({depth:!1,stencil:{test:!1,write:!1},color:{write:[!0,!0,!0,!0],blendMode:"custom",blendParameters:{srcRGB:De.ONE,dstRGB:De.ZERO,srcAlpha:De.ONE,dstAlpha:De.ZERO}}}),o||(c.processedTexture=A(c.processedTexture)),c.updateTexture(e);const[f,g]=c.getRasterTextureSize(o),x=f===ce&&g===ce,_=x?s.processorFbo:Qt(a,f,g);a.bindFramebuffer(_),a.setViewport(0,0,_.width,_.height),this._process(e,c,i);const R=Ki(e.context,f,g);if(_.copyToTexture(0,0,f,g,0,0,R),o)c.rasterTexture=R;else{const z=e.hasBranches?t.id:0;c.functionTextures[z]=R}x||_.dispose(),e.timeline.end(this.name)}i?.dispose(),a.bindFramebuffer(n),a.setViewport(l.x,l.y,l.width,l.height)}_getCommonConfig(e,s){const{rasterFunction:t,hasBranches:a}=e,{raster:i,rasters:o}=t.parameters,n=a?i?.id??o?.filter(h=>h.name!=="Constant")?.[0]?.id??-1:0,l=s.functionTextures[n]??s.rasterTexture,c=t.name==="Reproject";return{texture:{texture:l,unit:0},srcImageSize:s.getRasterTextureSize(c)}}_getMultipleInputConfig(e,s){return s?.length?s.length===2?{twoRasterConfig:this._getTwoInputConfig(s,e)}:s.length===3?{threeRasterConfig:this._getThreeInputConfig(s,e)}:{}:{}}_getConstantCount(e){return e?.filter(s=>s.name==="Constant").length??0}_getTextures(e,s){return e.filter(t=>t.name!=="Constant").map(t=>t.id!=null&&t.name!=="Identity"?s.functionTextures[t.id]:s.rasterTexture)}_getTwoInputConfig(e,s){const t=this._getTextures(e,s),a=t[1]?{texture:t[1],unit:1}:void 0,i=e.findIndex(n=>n.name==="Constant"),o=i===0?new Float32Array([0,1,0,1,0,0,0,0,0]):new Float32Array([1,0,0,0,1,0,0,0,0]);return{image1:a,image1Const:i>-1?e[i].parameters.value:0,imageSwap:o}}_getThreeInputConfig(e,s){const t=this._getTextures(e,s);let a=0,i=0,o=new Float32Array([1,0,0,0,1,0,0,0,1]);const n=t[1]?{texture:t[1],unit:1}:void 0,l=t[2]?{texture:t[2],unit:2}:void 0,c=[];if(e.forEach((h,p)=>h.name==="Constant"&&c.push(p)),c.length===1)a=e[c[0]].parameters.value,o=c[0]===0?new Float32Array([0,1,0,0,0,1,1,0,0]):c[0]===1?new Float32Array([1,0,0,0,0,1,0,1,0]):new Float32Array([1,0,0,0,1,0,0,0,1]);else if(c.length===2){a=e[c[0]].parameters.value,i=e[c[1]].parameters.value;const h=e.findIndex(p=>p.name!=="Constant");o=h===0?new Float32Array([1,0,0,0,1,0,0,0,1]):h===1?new Float32Array([0,1,0,1,0,0,0,0,1]):new Float32Array([0,0,1,1,0,0,0,1,0])}return{image1:n,image2:l,image1Const:a,image2Const:i,imageSwap:o}}},Xt=class extends Bt{};u([Vt(0,b)],Xt.prototype,"position",void 0);let er=class extends Ot{},rt=class extends I{};u([m(ie)],rt.prototype,"texture",void 0),u([m(b)],rt.prototype,"srcImageSize",void 0);let $=class extends Mt{vertex(e){return{uv:e.position,glPosition:new y(_i(e.position),0,1)}}fragment(e){const s=new Ft,t=At(e.uv),a=this._process(t);return s.fragColor=new y(a.rgb,1).multiply(a.a),s}_getPixel(e){return Gt(e,this.config)}};u([m(rt)],$.prototype,"config",void 0),u([Ee(0,We(Xt))],$.prototype,"vertex",null),u([Ee(0,We(er))],$.prototype,"fragment",null);let Yt=class extends I{};u([m(b)],Yt.prototype,"cellSize",void 0);let Jt=class extends ${constructor(){super(...arguments),this.type="AspectShader"}_process(e){const{texture:s}=this.config,t=Ve(s,e,this.config.srcImageSize),a=new b(1).divide(this.aspectConfig.cellSize.multiply(8)),{x:i,y:o}=ft(t,a),n=we(o),l=t[9].multiply(L(O(i).add(O(n)))),c=O(L(i)),h=new d(3.14159265359),p=new d(0),f=V(p,n).multiply(.5).multiply(h).add(V(n,p).multiply(1.5).multiply(h)),g=Dt(new d(2.5).multiply(h).add(Ne(n,we(i))),new d(2).multiply(h)),x=W(f,g,c).multiply(180).divide(h);return new y(x,x,x,l)}};u([m(Yt)],Jt.prototype,"aspectConfig",void 0);let tr=class extends F{constructor(){super(...arguments),this.name="RasterAspectProcessor",this.type=k.Aspect,this.shaders={aspect:new Jt}}_process(e,s){const t={cellSize:s.getRasterCellSize()},a=this._getCommonConfig(e,s),i={shader:this.shaders.aspect,uniforms:{config:a,aspectConfig:t},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:o,context:n}=e;o.submitDrawMesh(n,i,o.quadMesh)}};function M(r){const e=L(r),s=r.add(O(e).subtract(1));return e.multiply(e).divide(s)}function ve(r){return new y(X(r.rgb.add(.5)),r.a)}function Kt(r,e){return V(e.x,r).multiply(V(r,e.y))}function sr(r,e,s){const t=new w(r);let a=new w(0,0,0),i=new d(0);for(let o=0;o<s/3;o++){const n=9*o,l=new w(e[n],e[n+3],e[n+6]),c=new w(e[n+1],e[n+4],e[n+7]),h=V(l,t).multiply(V(t,c)),p=new w(e[n+2],e[n+5],e[n+8]);i=W(i,p.x,h.x),i=W(i,p.y,h.y),i=W(i,p.z,h.z),a=a.add(h)}return{mapValue:i,includeMask:L(E(a,new w(1,1,1)))}}class es extends I{}u([m(_e)],es.prototype,"bandIndexMat3",void 0);let ts=class extends I{};u([m(w)],ts.prototype,"adjustments",void 0);let Se=class extends ${constructor(){super(...arguments),this.type="BandArithmeticShader",this.isOutputRounded=!1}_process(e){const s=this._getPixel(e),t=this.bandArithmeticConfig.bandIndexMat3.multiply(s.rgb),a=this._processIndex(t),i=new y(a,a,a,s.a);return this.isOutputRounded?ve(i):i}_processIndex(e){const{r:s,g:t}=e,a=this.adjustmentConfig?.adjustments;switch(this.indexType){case"ndxi":{const i=s.subtract(t),o=s.add(t);return i.multiply(M(o))}case"sr":return s.multiply(M(t));case"ci":return s.multiply(M(t)).subtract(1);case"savi":{const{x:i}=a,o=s.subtract(t),n=s.add(t).add(i);return o.multiply(M(n)).multiply(i.add(1))}case"tsavi":{const{x:i,y:o,z:n}=a,l=n.multiply(i.multiply(i).add(1)).subtract(o.multiply(i)),c=i.multiply(s.subtract(i.multiply(t)).subtract(o)),h=o.multiply(s).add(t).add(l);return c.multiply(M(h))}case"msavi":{const i=s.multiply(2).add(1),o=i.multiply(i).subtract(s.subtract(t).multiply(8));return i.subtract(te(o)).multiply(.5)}case"gemi":{const i=s.multiply(s).subtract(t.multiply(t)).multiply(2).add(s.multiply(1.5)).add(t.multiply(.5)),o=s.add(t).add(.5),n=i.multiply(M(o)),l=n.multiply(xe(n.multiply(.25))),c=t.subtract(.125).multiply(M(xe(t)));return l.subtract(c)}case"pvi":{const{x:i,y:o}=a,n=te(i.multiply(i).add(1));return s.subtract(t.multiply(i)).subtract(o).multiply(M(n))}case"vari":{const i=e.g.subtract(e.r),o=e.g.add(e.r).subtract(e.b);return i.multiply(M(o))}case"rtvicore":return s.subtract(t).multiply(100).subtract(s.subtract(e.b).multiply(10));case"bai":{const i=Y(new d(.1).subtract(t),new d(2)),o=Y(new d(.06).subtract(s),new d(2));return M(i.add(o))}case"evi":{const i=e.b,o=s.add(t.multiply(6)).subtract(i.multiply(7.5)).add(1);return s.subtract(t).multiply(2.5).multiply(M(o))}case"wndwi":{const{r:i,g:o,b:n}=e,l=a.x,c=l.multiply(o),h=l.multiply(n),p=i.add(c).add(n).subtract(h);return i.subtract(c).subtract(n).add(h).multiply(M(p))}case"mtvi":{const i=e.b,o=Y(s.multiply(2).add(1),new d(2)),n=s.multiply(6).subtract(te(t).multiply(5)),l=te(o.subtract(n).subtract(.5)),c=s.subtract(i).multiply(1.2),h=t.subtract(i).multiply(2.5);return c.subtract(h).multiply(1.5).multiply(M(l))}default:return s}}};u([v],Se.prototype,"indexType",void 0),u([v],Se.prototype,"isOutputRounded",void 0),u([m(es)],Se.prototype,"bandArithmeticConfig",void 0),u([pe(ts)],Se.prototype,"adjustmentConfig",void 0);let ir=class extends F{constructor(){super(...arguments),this.name="RasterBandArithmeticProcessor",this.type=k.BandArithmetic,this.shaders={bandArithmetic:new Se}}_process(e,s){const t=e.rasterFunction.parameters,a={indexType:t.indexType,isOutputRounded:t.isOutputRounded},i={bandIndexMat3:t.bandIndexMat3},o=t.adjustments?{adjustments:[...t.adjustments]}:void 0,n=this._getCommonConfig(e,s),l={shader:this.shaders.bandArithmetic,uniforms:{config:n,bandArithmeticConfig:i,adjustmentConfig:o},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:c,context:h}=e;c.submitDrawMesh(h,l,c.quadMesh)}},ss=class extends ${constructor(){super(...arguments),this.type="ColormapToRGBShader"}_process(e){const s=this._getPixel(e),t=Fe(s,new d(1),this.colormapConfig,!1);return new y(t.xyz.multiply(255),t.a)}};u([m(se)],ss.prototype,"colormapConfig",void 0);class rr extends F{constructor(){super(...arguments),this.name="RasterColormapToRGBProcessor",this.type=k.ColormapToRGB,this.shaders={colormapToRGB:new ss}}_process(e,s,t){const a=e.rasterFunction.parameters,i={colormapTexture:{texture:t,unit:1},colormapOffset:a.offset,colormapMaxIndex:a.indexedColormap.length/4-1},o=this._getCommonConfig(e,s),n={shader:this.shaders.colormapToRGB,uniforms:{config:o,colormapConfig:i},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:l,context:c}=e;l.submitDrawMesh(c,n,l.quadMesh)}}let Ge=class extends I{};u([m(ie)],Ge.prototype,"image1",void 0),u([m(d)],Ge.prototype,"image1Const",void 0),u([m(_e)],Ge.prototype,"imageSwap",void 0);let de=class extends I{};u([m(ie)],de.prototype,"image1",void 0),u([m(ie)],de.prototype,"image2",void 0),u([m(d)],de.prototype,"image1Const",void 0),u([m(d)],de.prototype,"image2Const",void 0),u([m(_e)],de.prototype,"imageSwap",void 0);const gt=r=>{class e extends r{constructor(){super(...arguments),this.constantCount=0,this.imageCount=1}_getRasterValues(t){const{imageCount:a}=this;if(a===1){const i=S(this.config.texture,t);return{a:i.r,b:i.g,c:i.b,alpha:i.a}}if(a===2){const i=this._getTwoValues(t);return{a:i.a,b:i.b,c:i.b,alpha:i.alpha}}return this._getThreeValues(t)}_getTwoValues(t){const a=S(this.config.texture,t);if(this.constantCount===1){const{imageSwap:n,image1Const:l}=this.twoRasterConfig,c=n.multiply(new w(a.r,l,0));return{a:c.x,b:c.y,alpha:a.a}}const{image1:i}=this.twoRasterConfig,o=S(i,t);return{a:a.r,b:o.r,alpha:a.a.multiply(o.a)}}_getThreeValues(t){const a=S(this.config.texture,t),{imageSwap:i,image1:o,image2:n,image1Const:l,image2Const:c}=this.threeRasterConfig;if(this.constantCount===2){const f=i.multiply(new w(a.r,l,c));return{a:f.x,b:f.y,c:f.z,alpha:a.a}}if(this.constantCount===1){const f=S(o,t),g=i.multiply(new w(a.r,f.r,l));return{a:g.x,b:g.y,c:g.z,alpha:a.a.multiply(f.a)}}const h=S(o,t),p=S(n,t);return{a:a.r,b:h.r,c:p.r,alpha:a.a.multiply(h.a).multiply(p.a)}}}return u([v],e.prototype,"constantCount",void 0),u([v],e.prototype,"imageCount",void 0),u([pe(Ge)],e.prototype,"twoRasterConfig",void 0),u([pe(de)],e.prototype,"threeRasterConfig",void 0),e};let ar=class extends gt($){constructor(){super(...arguments),this.type="CompositeBandShader"}_process(e){const{a:s,b:t,c:a,alpha:i}=this._getRasterValues(e);return new y(s,t,a,i)}},or=class extends F{constructor(){super(...arguments),this.name="RasterCompositeBandProcessor",this.type=k.CompositeBand,this.shaders={compositeBand:new ar}}_process(e,s){const{rasters:t}=e.rasterFunction.parameters,a={constantCount:this._getConstantCount(t),imageCount:t?.length??1},i=this._getMultipleInputConfig(s,t),o=this._getCommonConfig(e,s),n={shader:this.shaders.compositeBand,uniforms:{config:o,...i},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:l,context:c}=e;l.submitDrawMesh(c,n,l.quadMesh)}};class yt extends I{}u([m(b)],yt.prototype,"domainRange",void 0);class Ue extends gt($){constructor(){super(...arguments),this.type="LocalShader",this.isOutputRounded=!1}_process(e){if(this.operationName==="conditional")return this._conditional(e);const{a:s,b:t,alpha:a}=this._getRasterValues(e),{value:i,alpha:o}=this._compute(s,t,a);return this._processResult(i,o)}_processResult(e,s){const t=Kt(e,this.domainRangeConfig.domainRange),a=new y(e,e,e,s).multiply(t);return this.isOutputRounded?ve(a):a}_compute(e,s,t){const{operationName:a}=this;let i;switch(a){case"plus":i=e.add(s);break;case"minus":i=e.subtract(s);break;case"times":i=e.multiply(s);break;case"divide":case"floatdivide":i=e.multiply(M(s)),t=t.multiply(D(O(L(s))));break;case"floordivide":i=X(e.multiply(M(s))),t=t.multiply(D(O(L(s))));break;case"square":i=e.multiply(e);break;case"sqrt":i=te(e);break;case"power":i=Y(e,s);break;case"ln":i=j(oe(e,new d(0)),fi(e),new d(0)),t=t.multiply(this._isAboveZero(e));break;case"log10":i=j(oe(e,new d(0)),Ye(e).multiply(M(Ye(new d(10)))),new d(0)),t=t.multiply(this._isAboveZero(e));break;case"log2":i=j(oe(e,new d(0)),Ye(e),new d(0)),t=t.multiply(this._isAboveZero(e));break;case"exp":i=mi(e);break;case"exp10":i=Y(new d(10),e);break;case"exp2":i=Y(new d(2),e);break;case"rounddown":i=X(e);break;case"roundup":i=di(e);break;case"int":i=L(e).multiply(X(O(e)));break;case"mod":i=Dt(e,s);break;case"negate":i=we(e);break;case"abs":i=O(e);break;case"acos":{const o=this._isAbsBiggerThanOne(e);i=j(o,new d(0),hi(e)),t=j(o,new d(0),t);break}case"acosh":i=pi(e);break;case"asin":{const o=this._isAbsBiggerThanOne(e);i=j(o,new d(0),ci(e)),t=j(o,new d(0),t);break}case"asinh":i=ui(e);break;case"atan":i=Ne(e);break;case"atanh":{const o=this._isAbsBiggerThanOne(e);i=j(o,new d(0),li(e)),t=j(o,new d(0),t);break}case"atan2":i=Ne(e,s);break;case"cos":i=ni(e);break;case"cosh":i=oi(e);break;case"sin":i=ai(e);break;case"sinh":i=ri(e);break;case"tan":i=ii(e);break;case"tanh":i=si(e);break;case"bitwiseand":i=new d(ti(new P(e),new P(s)));break;case"bitwiseor":i=new d(ei(new P(e),new P(s)));break;case"bitwiseleftshift":i=new d(Ks(new P(e),new P(s)));break;case"bitwiserightshift":i=new d(Js(new P(e),new P(s)));break;case"bitwisenot":i=new d(Ys(new P(e)));break;case"bitwisexor":i=new d(Xs(new P(e),new P(s)));break;case"booleanand":i=D(Qs(ae(e,new d(0)),ae(s,new d(0))));break;case"booleanor":i=D(Hs(ae(e,new d(0)),ae(s,new d(0))));break;case"booleannot":i=D(ye(e,new d(0)));break;case"booleanxor":i=D(Zs(ae(e,new d(0)),ae(s,new d(0))));break;case"greaterthan":i=D(oe(e,s));break;case"greaterthanequal":i=D(Ns(e,s));break;case"lessthan":i=D(st(e,s));break;case"lessthanequal":i=D($t(e,s));break;case"equalto":i=D(ye(e,s));break;case"notequal":i=D(ae(e,s));break;case"isnull":i=D(ye(t,new d(0))),t=new d(1);break;case"setnull":{const o=D(ye(e,new d(0)));i=o.multiply(s),t=t.multiply(o);break}default:i=e}return{value:i,alpha:t}}_conditional(e){const{a:s,b:t,c:a,alpha:i}=this._getRasterValues(e),o=new d(O(L(s))),n=W(a,t,o);return this._processResult(n,i)}_isAboveZero(e){return D(oe(e,new d(0)))}_isAbsBiggerThanOne(e){return oe(O(e),new d(1))}}u([v],Ue.prototype,"operationName",void 0),u([v],Ue.prototype,"isOutputRounded",void 0),u([m(yt)],Ue.prototype,"domainRangeConfig",void 0);let qe=class extends gt($){constructor(){super(...arguments),this.type="ComputeChangeShader",this.isOutputRounded=!1}_process(e){const{a:s,b:t,alpha:a}=this._getRasterValues(e);let i=s.subtract(t);this.method==="relative-difference"&&(i=i.multiply(M(mt(O(s),O(t)))));const o=Kt(i,this.domainRangeConfig.domainRange),n=new y(i,i,i,a).multiply(o);return this.isOutputRounded?ve(n):n}};u([v],qe.prototype,"method",void 0),u([v],qe.prototype,"isOutputRounded",void 0),u([m(yt)],qe.prototype,"domainRangeConfig",void 0);let nr=class extends F{constructor(){super(...arguments),this.name="RasterComputeChangeProcessor",this.type=k.ComputeChange,this.shaders={computeChange:new qe}}_process(e,s){const t=e.rasterFunction.parameters,{rasters:a}=t,i={constantCount:this._getConstantCount(a),imageCount:a.length,method:t.method,isOutputRounded:t.isOutputRounded},o={domainRange:t.domainRange},{twoRasterConfig:n}=this._getMultipleInputConfig(s,a),l=this._getCommonConfig(e,s),c={shader:this.shaders.computeChange,uniforms:{config:l,domainRangeConfig:o,twoRasterConfig:n},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:h,context:p}=e;h.submitDrawMesh(p,c,h.quadMesh)}},at=class extends I{};u([m(d)],at.prototype,"contrastOffset",void 0),u([m(d)],at.prototype,"brightnessOffset",void 0);let is=class extends ${constructor(){super(...arguments),this.type="ContrastBrightnessShader"}_process(e){const{rgb:s,a:t}=this._getPixel(e),{contrastOffset:a,brightnessOffset:i}=this.contrastBrightnessConfig,o=new d(255),n=new d(128),l=s.multiply(200),c=o.multiply(100),h=o.multiply(2).multiply(i),p=l.subtract(c).add(h),f=gi([ye(a,new d(-100)),new w(n)],[ye(a,new d(100)),L(p).add(1).divide(2).multiply(o)],[oe(a,new d(0)),p.divide(new d(100).subtract(a).multiply(2)).add(n)],[!0,p.multiply(a.add(100)).divide(2e4).add(n)]);return ve(new y(f,t))}};u([m(at)],is.prototype,"contrastBrightnessConfig",void 0);class lr extends F{constructor(){super(...arguments),this.name="RasterContrastBrightnessProcessor",this.type=k.ContrastBrightness,this.shaders={contrastBrightness:new is}}_process(e,s){const t=this._getCommonConfig(e,s),a=e.rasterFunction.parameters,i={shader:this.shaders.contrastBrightness,uniforms:{config:t,contrastBrightnessConfig:a},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:o,context:n}=e;o.submitDrawMesh(n,i,o.quadMesh)}}let ot=class extends I{};u([m(wi.ofType(d,5,5,!0))],ot.prototype,"kernel",void 0),u([m(b)],ot.prototype,"clampRange",void 0);let je=class extends ${constructor(){super(...arguments),this.type="ConvolutionShader",this.rows=3,this.cols=3}_process(e){const{rows:s,cols:t}=this,a=new b(Math.floor(s/2),Math.floor(t/2)),{texture:i,srcImageSize:o}=this.config,n=new d(1).divide(o),{kernel:l}=this.convolutionConfig,c=yi(l,{initialValue:new y(0,0,0,1),xRange:[0,s],yRange:[0,t],callback:(p,f,g,x)=>{const _=new b(new d(g),new d(x)).subtract(a).multiply(n),R=S(i,U(e.add(_))),z=R.rgb.multiply(f).add(p.rgb),C=R.a.multiply(p.a);return new y(z,C)}}),{clampRange:h}=this.convolutionConfig;return new y(N(c.rgb,h.x,h.y),1).multiply(c.a)}};u([v],je.prototype,"rows",void 0),u([v],je.prototype,"cols",void 0),u([m(ot)],je.prototype,"convolutionConfig",void 0);let ur=class extends F{constructor(){super(...arguments),this.name="RasterConvolutionProcessor",this.type=k.Convolution,this.shaders={convolution:new je}}_process(e,s){const t=e.rasterFunction.parameters,a={rows:t.kernelRows,cols:t.kernelCols},i={kernel:[...t.kernel],clampRange:t.clampRange},o=this._getCommonConfig(e,s),n={shader:this.shaders.convolution,uniforms:{config:o,convolutionConfig:i},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:l,context:c}=e;l.submitDrawMesh(c,n,l.quadMesh)}},rs=class extends I{};u([m(d)],rs.prototype,"zlFactor",void 0);let nt=class extends ${constructor(){super(...arguments),this.type="CurvatureShader"}_process(e){const{texture:s}=this.config,t=Ve(s,e,this.config.srcImageSize),a=t[3].add(t[5]).multiply(.5).subtract(t[4]),i=t[1].add(t[7]).multiply(.5).subtract(t[4]),{zlFactor:o}=this.curvatureConfig,{curvatureType:n}=this;let l;if(n==="standard")l=we(o).multiply(a.add(i));else{const c=t[2].subtract(t[0]).add(t[6]).subtract(t[8]).divide(4),h=t[5].subtract(t[3]).divide(2),p=t[1].subtract(t[7]).divide(2),f=h.multiply(h),g=p.multiply(p),x=h.multiply(p),_=o.divide(f.add(g));l=n==="profile"?E(new w(a,i,c),new w(f,g,x)).multiply(_):E(new w(a,i,we(c)),new w(g,f,x)).multiply(we(_))}return new y(l,l,l,t[9])}};u([v],nt.prototype,"curvatureType",void 0),u([m(rs)],nt.prototype,"curvatureConfig",void 0);let cr=class extends F{constructor(){super(...arguments),this.name="RasterCurvatureProcessor",this.type=k.Curvature,this.shaders={curvature:new nt}}_process(e,s){const t=e.rasterFunction.parameters,a={curvatureType:t.curvatureType},i=s.getRasterCellSize(),o={zlFactor:200*t.zFactor/i[0]/i[1]},n=this._getCommonConfig(e,s),l={shader:this.shaders.curvature,uniforms:{config:n,curvatureConfig:o},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:c,context:h}=e;c.submitDrawMesh(h,l,c.quadMesh)}},as=class extends I{};u([m(_e)],as.prototype,"bandIndexMat3",void 0);let os=class extends ${constructor(){super(...arguments),this.type="ExtractBandShader"}_process(e){const s=this._getPixel(e),t=this.extractBandConfig.bandIndexMat3.multiply(s.rgb);return new y(t,s.a)}};u([m(as)],os.prototype,"extractBandConfig",void 0);let pr=class extends F{constructor(){super(...arguments),this.name="RasterExtractBandProcessor",this.type=k.ExtractBand,this.shaders={extractBand:new os}}_process(e,s){const t={bandIndexMat3:e.rasterFunction.parameters.bandIndexMat3},a=this._getCommonConfig(e,s),i={shader:this.shaders.extractBand,uniforms:{config:a,extractBandConfig:t},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:o,context:n}=e;o.submitDrawMesh(n,i,o.quadMesh)}},ns=class extends I{};u([m(b)],ns.prototype,"clampRange",void 0);class me extends ${constructor(){super(...arguments),this.type="FocalStatisticsShader",this.rows=3,this.cols=3,this.fill=!1}_process(e){const s=this._process1(e),t=V(new d(1),s.a);if(!this.fill)return this._clamp(s.rgb,t);const a=this._getPixel(e),i=W(s.rgb,a.rgb,a.a);return this._clamp(i,t)}_clamp(e,s){const{clampRange:t}=this.focalStatisticsConfig;return new y(N(e,t.x,t.y),1).multiply(s)}_process1(e){const{texture:s,srcImageSize:t}=this.config,{rows:a,cols:i}=this,o=new b(Math.floor(a/2),Math.floor(i/2)),n=new d(1).divide(t),l=this._getPixel(e),{statisticsType:c}=this,h=c==="min"||c==="max"?new y(l.rgb,0):new y(0,0,0,0);switch(c){case"min":return this._stat(a,i,h,(p,f,g)=>{const x=new b(new d(f),new d(g)).subtract(o).multiply(n),_=S(s,U(e.add(x))),R=it(p.rgb,_.rgb);return new y(R,p.a.add(_.a))});case"max":return this._stat(a,i,h,(p,f,g)=>{const x=new b(new d(f),new d(g)).subtract(o).multiply(n),_=S(s,U(e.add(x))),R=mt(p.rgb,_.rgb);return new y(R,p.a.add(_.a))});case"mean":{const p=this._stat(a,i,h,(g,x,_)=>{const R=new b(new d(x),new d(_)).subtract(o).multiply(n),z=S(s,U(e.add(R))),C=g.rgb.add(z.rgb.multiply(z.a));return new y(C,g.a.add(z.a))}),f=p.rgb.multiply(M(p.a));return new y(f,p.a)}case"stddev":{const p=this._stat(a,i,h,(_,R,z)=>{const C=new b(new d(R),new d(z)).subtract(o).multiply(n),q=S(s,U(e.add(C))),J=_.rgb.add(q.rgb.multiply(q.a));return new y(J,_.a.add(q.a))}),f=this._stat(a,i,h,(_,R,z)=>{const C=new b(new d(R),new d(z)).subtract(o).multiply(n),q=S(s,U(e.add(C))),J=_.rgb.add(q.a.multiply(q.rgb).multiply(q.rgb));return new y(J,_.a.add(q.a))}),g=M(f.a),x=te(f.subtract(p.multiply(p).multiply(g)).multiply(g));return new y(x.rgb,p.a)}default:return l}}_stat(e=3,s=3,t,a){const i=new P(0).setMutable().setDebugName("StatColIterator"),o=new P(0).setMutable().setDebugName("StatRowIterator"),n=t.setMutable().setDebugName("StatAccumulator"),l=a(n,i,o).setDebugName("StatPredicate");return xi({iterX:i,iterY:o,accumulator:n},y,l,({out:h,iterX:p,iterY:f,accumulator:g,subgraph:x})=>`
  for (${f} = 0; ${f} < ${e}; ${f}++) {
    for (${p} = 0; ${p} < ${s}; ${p}++) {
  
    ${x.body}
  
    ${g} = ${x.varName};
    }
  }
  ${h} = ${g};
  `).setDebugName("statBody")}}u([v],me.prototype,"rows",void 0),u([v],me.prototype,"cols",void 0),u([v],me.prototype,"statisticsType",void 0),u([v],me.prototype,"fill",void 0),u([m(ns)],me.prototype,"focalStatisticsConfig",void 0);class hr extends F{constructor(){super(...arguments),this.name="RasterFocalStatisticsProcessor",this.type=k.Statistics,this.shaders={focalStatistics:new me}}_process(e,s){const t=e.rasterFunction.parameters,a={rows:t.kernelRows,cols:t.kernelCols,statisticsType:t.statisticsType,fill:t.fillNoDataOnly},i={clampRange:t.clampRange},o=this._getCommonConfig(e,s),n={shader:this.shaders.focalStatistics,uniforms:{config:o,focalStatisticsConfig:i},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:l,context:c}=e;l.submitDrawMesh(c,n,l.quadMesh)}}class ls extends I{}u([m(w)],ls.prototype,"weights",void 0);let us=class extends ${constructor(){super(...arguments),this.type="GrayscaleShader"}_process(e){const s=this._getPixel(e),{weights:t}=this.grayscaleConfig,a=E(t,s.rgb);return new y(a,a,a,s.a)}};u([m(ls)],us.prototype,"grayscaleConfig",void 0);let dr=class extends F{constructor(){super(...arguments),this.name="RasterGrayscaleProcessor",this.type=k.Grayscale,this.shaders={grayscale:new us}}_process(e,s){const t={weights:e.rasterFunction.parameters.weights},a=this._getCommonConfig(e,s),i={shader:this.shaders.grayscale,uniforms:{config:a,grayscaleConfig:t},defines:{},optionalAttributes:null,useComputeBuffer:!1},{painter:o,context:n}=e;o.submitDrawMesh(n,i,o.quadMesh)}},Ze=class extends ${constructor(){super(...arguments),this.type="HillshadeShader",this.isMultidirectional=!1}_process(e){const{texture:s}=this.config,t=Ve(s,e,this.config.srcImageSize),a=Wt(t,this.hillshadeConfig,this.isMultidirectional);return new y(a.rgb.multiply(255),a.a)}};u([v],Ze.prototype,"isMultidirectional",void 0),u([m(Z)],Ze.prototype,"hillshadeConfig",void 0);let mr=class extends F{constructor(){super(...arguments),this.name="RasterHillshadeProcessor",this.type=k.Hillshade,this.shaders={hillshade:new Ze}}_process(e,s){const t=e.rasterFunction.parameters,a={isMultidirectional:t.hillshadeType>0},i=s.getRasterCellSize(),o=Nt(t,i),n={...t,factor:o,minValue:0,maxValue:8e3},l=this._getCommonConfig(e,s),c={shader:this.shaders.hillshade,uniforms:{config:l,hillshadeConfig:n},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:h,context:p}=e;h.submitDrawMesh(p,c,h.quadMesh)}},fr=class extends F{constructor(){super(...arguments),this.name="RasterLocalProcessor",this.type=k.Local,this.shaders={local:new Ue}}_process(e,s){const t=e.rasterFunction.parameters,a={constantCount:this._getConstantCount(t.rasters),imageCount:t.imageCount,operationName:t.operationName,isOutputRounded:t.isOutputRounded},i={domainRange:t.domainRange},o=t.operationName==="conditional"?t.rasters:t.rasters?.slice(0,2),n=this._getMultipleInputConfig(s,o),l=this._getCommonConfig(e,s),c={shader:this.shaders.local,uniforms:{config:l,domainRangeConfig:i,...n},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:h,context:p}=e;h.submitDrawMesh(p,c,h.quadMesh)}};class lt extends I{}u([m(Q.ofType(d,6))],lt.prototype,"includedRanges",void 0),u([m(Q.ofType(d,be))],lt.prototype,"noDataValues",void 0);let ut=class extends ${constructor(){super(...arguments),this.type="MaskShader",this.isMultiband=!0}_process(e){const s=this._getPixel(e),t=this._computeNoDataFactor(s.r),a=this._computeRangeFactor(s.rgb);let i;if(this.isMultiband){const o=this._computeNoDataFactor(s.g),n=this._computeNoDataFactor(s.b),l=new w(t,o,n).multiply(a);i=l.x.multiply(l.y).multiply(l.z)}else i=t.multiply(a.x);return s.multiply(i)}_computeNoDataFactor(e){const{noDataValues:s}=this.maskConfig;let t=new w(1);for(let a=0;a<be/3;a++){const i=3*a,o=new w(s[i+0],s[i+1],s[i+2]),n=O(L(o.subtract(e)));t=t.multiply(n)}return t.x.multiply(t.y).multiply(t.z)}_computeRangeFactor(e){const{includedRanges:s}=this.maskConfig,t=new w(s[0],s[2],s[4]),a=new w(s[1],s[3],s[5]);return V(t,e).multiply(V(e,a))}};u([v],ut.prototype,"isMultiband",void 0),u([m(lt)],ut.prototype,"maskConfig",void 0);let gr=class extends F{constructor(){super(...arguments),this.name="RasterMaskProcessor",this.type=k.Mask,this.shaders={mask:new ut}}_process(e,s){const t=e.rasterFunction.parameters,a={isMultiband:t.bandCount>1},i={includedRanges:[...t.includedRanges],noDataValues:[...t.noDataValues]},o=this._getCommonConfig(e,s),n={shader:this.shaders.mask,uniforms:{config:o,maskConfig:i},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:l,context:c}=e;l.submitDrawMesh(c,n,l.quadMesh)}};class cs extends I{}u([m(_e)],cs.prototype,"bandIndexMat3",void 0);class ct extends ${constructor(){super(...arguments),this.type="NDVIShader",this.scaled=!0}_process(e){const s=this._getPixel(e),{r:t,g:a}=this.ndviConfig.bandIndexMat3.multiply(s.rgb),i=t.subtract(a),o=t.add(a),n=i.multiply(M(o));if(!this.scaled)return new y(n,n,n,s.a);const l=X(n.multiply(100).add(100.5));return new y(l,l,l,s.a)}}u([v],ct.prototype,"scaled",void 0),u([m(cs)],ct.prototype,"ndviConfig",void 0);let yr=class extends F{constructor(){super(...arguments),this.name="RasterNDVIProcessor",this.type=k.NDVI,this.shaders={ndvi:new ct}}_process(e,s){const t=e.rasterFunction.parameters,a={scaled:t.scaled},i={bandIndexMat3:t.bandIndexMat3},o=this._getCommonConfig(e,s),n={shader:this.shaders.ndvi,uniforms:{config:o,ndviConfig:i},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:l,context:c}=e;l.submitDrawMesh(c,n,l.quadMesh)}},fe=class extends I{};u([m(Q.ofType(d,3*be))],fe.prototype,"rangeMaps",void 0),u([m(Q.ofType(d,2*be))],fe.prototype,"noDataRanges",void 0),u([m(d)],fe.prototype,"unmatchMask",void 0),u([m(d)],fe.prototype,"replacementValue",void 0),u([m(b)],fe.prototype,"clampRange",void 0);class pt extends ${constructor(){super(...arguments),this.type="RemapShader"}_process(e){const s=this._getPixel(e),{rangeMaps:t,unmatchMask:a,clampRange:i,replacementValue:o}=this.remapConfig,{mapValue:n,includeMask:l}=sr(s.r,t,be),c=this.replaceUnmatched?o:a.multiply(s.r),h=W(c,n,l),p=N(h,i.x,i.y),f=this._computeNoDataFactor(s.rrr).multiply(mt(a,l));return new y(p,p,p,s.a).multiply(f)}_computeNoDataFactor(e){const{noDataRanges:s}=this.remapConfig;let t=new w(0,0,0);for(let a=0;a<be/3;a++){const i=6*a,o=new w(s[i],s[i+2],s[i+4]),n=new w(s[i+1],s[i+3],s[i+5]);t=t.add(V(o,e).multiply(V(e,n)))}return xe(L(E(t,new w(1,1,1))))}}u([m(fe)],pt.prototype,"remapConfig",void 0),u([v],pt.prototype,"replaceUnmatched",void 0);let wr=class extends F{constructor(){super(...arguments),this.name="RasterRemapProcessor",this.type=k.Remap,this.shaders={remap:new pt}}_process(e,s){const t=e.rasterFunction.parameters,a={replaceUnmatched:t.allowUnmatched&&t.replacementValue!=null},i={rangeMaps:[...t.rangeMaps],noDataRanges:[...t.noDataRanges],unmatchMask:t.allowUnmatched?1:0,replacementValue:t.replacementValue??0,clampRange:t.clampRange},o=this._getCommonConfig(e,s),n={shader:this.shaders.remap,uniforms:{config:o,remapConfig:i},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:l,context:c}=e;l.submitDrawMesh(c,n,l.quadMesh)}},xr=class extends G{constructor(){super(...arguments),this.type="ReprojectShader"}_colorize(e){return this._getPixel(e)}},br=class extends F{constructor(){super(...arguments),this.name="RasterReprojectProcessor",this.type=k.Reproject,this.shaders={reproject:new xr}}_process(e,s){const t=e.rasterFunction.parameters,a=this._getInterpolationDefines(s.interpolation,!!t.requireNNEdge),{config:i,projectionConfig:o,projectionDefines:n}=this._getReprojectConfig(s),l={shader:this.shaders.reproject,uniforms:{config:i,projectionConfig:o},defines:{...n,...a,applyPixelMask:!1},optionalAttributes:null,useComputeBuffer:!1},{interpolation:c}=s;s.interpolation="nearest";const{painter:h,context:p}=e;h.submitDrawMesh(p,l,h.quadMesh),s.interpolation=c,s.projected=!0}_getReprojectConfig(e){const{source:s}=e,{names:t,textures:a}=e.getTextures({forProcessing:!0}),i={texture:{texture:a[t.indexOf("u_image")],unit:0},dvsMat3:new Float32Array([2,0,0,0,2,0,-1,-1,0]),coordScale:[1,1],srcImageSize:[s.width,s.height],opacity:1},o=a[t.indexOf("u_transformGrid")],{transformGrid:n}=e,l=!(!o||!n);return{config:i,projectionConfig:l?{transformTexture:{texture:o,unit:1},targetImageSize:[e.width,e.height],transformSpacing:n.spacing,transformGridSize:n.size}:void 0,projectionDefines:{applyProjection:l,lookupProjection:l&&n.spacing[0]===1}}}_getInterpolationDefines(e,s){const t=e==="bilinear"&&s;return{bilinear:t,bicubic:e==="cubic",nearestOnEdge:t}}};class ps extends Ze{constructor(){super(...arguments),this.type="ShadedReliefShader"}_process(e){const s=super._process(e),{minValue:t,maxValue:a}=this.hillshadeConfig,i=this._getPixel(e),o=a.subtract(t),n=i.r.subtract(t),l=N(n.divide(o),new d(0),new d(1)),c=Fe(new y(l,l,l,1),new d(255),this.colormapConfig),h=Lt(c.xyz),p=Et(new w(h.xy,s.x.divide(255))).multiply(255);return new y(p,c.a.multiply(s.a))}}u([m(se)],ps.prototype,"colormapConfig",void 0);class _r extends F{constructor(){super(...arguments),this.name="RasterShadedReliefProcessor",this.type=k.ShadedRelief,this.shaders={shadedRelief:new ps}}_process(e,s,t){const a=e.rasterFunction.parameters,i={isMultidirectional:a.hillshadeType>0},o=s.getRasterCellSize(),n=Nt(a,o),l={...a,factor:n},c={colormapTexture:{texture:t,unit:1},colormapOffset:a.offset,colormapMaxIndex:a.indexedColormap.length/4-1},h=this._getCommonConfig(e,s),p={shader:this.shaders.shadedRelief,uniforms:{config:h,hillshadeConfig:l,colormapConfig:c},defines:i,optionalAttributes:null,useComputeBuffer:!1},{painter:f,context:g}=e;f.submitDrawMesh(g,p,f.quadMesh)}}let Pe=class extends I{};u([m(d)],Pe.prototype,"pixelSizePower",void 0),u([m(d)],Pe.prototype,"pixelSizeFactor",void 0),u([m(d)],Pe.prototype,"zFactor",void 0),u([m(b)],Pe.prototype,"cellSize",void 0);class Le extends ${constructor(){super(...arguments),this.type="SlopeShader",this.isOutputRounded=!1,this.percentRise=!1}_process(e){const{cellSize:s,pixelSizePower:t,pixelSizeFactor:a,zFactor:i}=this.slopeConfig,o=Y(s,new b(t)).multiply(a).add(i).divide(s.multiply(8)),{texture:n}=this.config,l=Ve(n,e,this.config.srcImageSize),{x:c,y:h}=ft(l,o),p=te(c.multiply(c).add(h.multiply(h))),f=this.percentRise?p.multiply(100):Ne(p).multiply(57.2957795),g=new y(f,f,f,l[9]);return this.isOutputRounded?ve(g):g}}u([v],Le.prototype,"isOutputRounded",void 0),u([v],Le.prototype,"percentRise",void 0),u([m(Pe)],Le.prototype,"slopeConfig",void 0);let vr=class extends F{constructor(){super(...arguments),this.name="RasterSlopeProcessor",this.type=k.Slope,this.shaders={slope:new Le}}_process(e,s){const t=e.rasterFunction.parameters,a={isOutputRounded:t.isOutputRounded,percentRise:t.slopeType==="percent-rise"},i={cellSize:s.getRasterCellSize(),pixelSizePower:t.slopeType==="adjusted"?t.pixelSizePower:0,pixelSizeFactor:t.slopeType==="adjusted"?t.pixelSizeFactor:0,zFactor:t.zFactor},o=this._getCommonConfig(e,s),n={shader:this.shaders.slope,uniforms:{config:o,slopeConfig:i},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:l,context:c}=e;l.submitDrawMesh(c,n,l.quadMesh)}};class Ie extends ${constructor(){super(...arguments),this.type="StretchShader",this.isMultiband=!0,this.isOutputRounded=!1,this.useGamma=!1}_process(e){const s=this._getPixel(e);let t=Zt(s,this.stretchConfig,this.useGamma,1);return this.isMultiband||(t=new y(t.rrr,t.a)),this.isOutputRounded?ve(t):t}}u([v],Ie.prototype,"isMultiband",void 0),u([v],Ie.prototype,"isOutputRounded",void 0),u([v],Ie.prototype,"useGamma",void 0),u([m(H)],Ie.prototype,"stretchConfig",void 0);let Cr=class extends F{constructor(){super(...arguments),this.name="RasterStretchProcessor",this.type=k.Stretch,this.shaders={stretch:new Ie}}_process(e,s){const t=e.rasterFunction.parameters,a={isMultiband:t.bandCount>1,isOutputRounded:t.isOutputRounded,useGamma:t.useGamma},i=this._getCommonConfig(e,s),o={shader:this.shaders.stretch,uniforms:{config:i,stretchConfig:t},defines:a,optionalAttributes:null,useComputeBuffer:!1},{painter:n,context:l}=e;n.submitDrawMesh(l,o,n.quadMesh)}};const Tr=new Map([["Aspect",tr],["BandArithmetic",ir],["ColormapToRGB",rr],["CompositeBand",or],["ComputeChange",nr],["ContrastBrightness",lr],["Convolution",ur],["Curvature",cr],["ExtractBand",pr],["Grayscale",dr],["Hillshade",mr],["Local",fr],["Mask",gr],["NDVI",yr],["Remap",wr],["Reproject",br],["ShadedRelief",_r],["Slope",vr],["Statistics",hr],["Stretch",Cr]]);class Rr extends dt{constructor(){super(...arguments),this.type=k.RasterProcessor,this.shaders={},this._techniques=new Map}shutdown(e){super.shutdown(e),this._fbo?.dispose(),this._fbo=void 0;for(const s of this._techniques.values())s.shutdown();this._techniques.clear()}render(e,s){this._fbo??=Qt(e.context,ce,ce);let{name:t}=e.rasterFunction;if(t==="Arithmetic"&&(t="Local"),!this._techniques.has(t)){const a=Tr.get(t);if(!a)return;this._techniques.set(t,new a)}this._techniques.get(t).render(e,{...s,processorFbo:this._fbo})}}let Sr=class extends kt{constructor(){super(...arguments),this.isCustomTilingScheme=!1}createTile(e){const s=this._getTileBounds(e),[t,a]=this.tileInfoView.tileInfo.size,i=this.tileInfoView.getTileResolution(e.level);return new ji(e,i,s[0],s[3],t,a)}onAttach(){super.onAttach(),this._colorizerTechnique=new Ji,this._processorTechnique=new Rr}onDetach(){super.onDetach(),this._colorizerTechnique?.shutdown(),this._colorizerTechnique=void 0,this._processorTechnique?.shutdown(),this._processorTechnique=void 0}doRender(e){if(!this.visible||e.drawPhase!==tt.MAP||!this._colorizerTechnique)return;const{rasterFunctionChain:s}=this;if(s?.functions?.length){if(!this._processorTechnique)return;const{functions:a,hasBranches:i}=s;for(const o of a){if(o.name==="Constant"||o.name==="Identity")continue;e.rasterFunction=o,e.hasBranches=i,super.doRender(e);const n=this.children.map(l=>l.bitmap);this._processorTechnique.render(e,{bitmaps:n})}}e.rasterFunction=null,super.doRender(e);const t=this.children.map(a=>a.bitmap);this._colorizerTechnique.render(e,{bitmaps:t})}_getTileBounds(e){const s=this.tileInfoView.getTileBounds(Rt(),e);if(this.isCustomTilingScheme&&e.world){const{tileInfo:t}=this.tileInfoView,a=ks(t.spatialReference);if(a){const i=t.lodAt(e.level);if(!i)return s;const{resolution:o}=i,n=o*t.size[0];s[0]=a*e.world+t.origin.x+e.col*n,s[2]=s[0]+n}}return s}};const Pr=[0,0];let B=class extends hs{constructor(){super(...arguments),this._updatingHandles=new Pi,this._emptyTilePixelBlock=null,this._tileStrategy=null,this._tileInfoView=null,this._fetchQueue=null,this._blockCacheRegistryUrl=null,this._blockCacheRegistryId=null,this._srcResolutions=[],this.previousLOD=null,this._needBlockCacheUpdate=!1,this._globalSymbolizerParams=null,this._symbolizerParams=null,this._abortController=null,this._isCustomTilingScheme=!1,this._maxIndexedColormapSize=0,this._rasterFunctionState="na",this._globalUpdateRequested=!1,this.attached=!1,this.timeExtent=null,this.redrawOrRefetch=ds(async(r={})=>{const e=this._rasterFunctionState,s=r.reprocess||e==="gpu"&&!this.canUseWebGLForProcessing||e==="cpu"&&this.canUseWebGLForProcessing;if(s&&(await this._updatingHandles.addPromise(this.layer.updateRasterFunction()),this.updateRasterFunctionParameters()),!this.previousLOD||this.layerView.suspended)return;const t=this._rasterFunctionState,{type:a}=this;return r.refetch||a!=="raster"&&s||t==="cpu"||e==="cpu"?this._updatingHandles.addPromise(this.doRefresh()):this._updatingHandles.addPromise(this._redrawImage(r.signal))})}destroy(){this._updatingHandles.destroy()}get canUseWebGLForProcessing(){return!1}get canUseLocalSymbolizerParams(){return(this.canUseWebGLForProcessing||this.type==="rasterVF")&&!this.layerView.hasTilingEffects}get useWebGLForProcessing(){return this._get("useWebGLForProcessing")??!0}set useWebGLForProcessing(r){this._set("useWebGLForProcessing",r)}get useProgressiveUpdate(){return this._get("useProgressiveUpdate")??!0}set useProgressiveUpdate(r){if(this._tileStrategy&&this.useProgressiveUpdate!==r){this._tileStrategy.destroy(),this.container.removeAllChildren();const e=this._getCacheSize(r);this._tileStrategy=new xt({cachePolicy:"purge",acquireTile:s=>this.acquireTile(s),releaseTile:s=>this.releaseTile(s),cacheSize:e,tileInfoView:this._tileInfoView}),this._set("useProgressiveUpdate",r),this.layerView.requestUpdate()}}update(r){this._fetchQueue.pause(),this._fetchQueue.state=r.state,this._tileStrategy.update(r),this._fetchQueue.resume();const{extent:e,resolution:s,scale:t}=r.state,a=this._tileInfoView.getClosestInfoForScale(t);if(this.layer.raster){if(!this.useProgressiveUpdate||this._needBlockCacheUpdate){const i=this._srcResolutions[a.level],o="toJSON"in e?e:ms.fromJSON(e);vt(this._blockCacheRegistryUrl,this._blockCacheRegistryId,o,s,i,this.layer.raster.ioConfig.sampling)}this._needBlockCacheUpdate=!1,this.previousLOD?.level!==a.level&&(this.previousLOD=a,this._symbolizerParams!=null&&this.canUseLocalSymbolizerParams&&this._updateSymbolizerParams(),this._tileStrategy.updateCacheSize(0))}}moveEnd(){!this.layerView.hasTilingEffects&&this.useProgressiveUpdate||(this._abortController&&this._abortController.abort(),this._abortController=new AbortController,this._fetchQueue.length===0&&this._redrawImage(this._abortController.signal).then(()=>{this._globalUpdateRequested=!1,this.layerView.requestUpdate()}));const r=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy.updateCacheSize(r),this.layerView.requestUpdate()}get updating(){return this._globalUpdateRequested||this._updatingHandles?.updating}attach(){const r=Bi();this._maxIndexedColormapSize=4*(r.maxTextureSize||4096),this._initializeTileInfo(),this._tileInfoView=new Ls(this.layerView.tileInfo,this.layerView.fullExtent);const e=this._computeFetchConcurrency();this._fetchQueue=new Es({tileInfoView:this._tileInfoView,concurrency:e,process:(t,a)=>this._fetchTile(t,a),priority:Vi.MAPVIEW_FETCH_QUEUE,scheduler:this.scheduler});const s=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy=new xt({cachePolicy:"purge",acquireTile:t=>this.acquireTile(t),releaseTile:t=>this.releaseTile(t),cacheSize:s,tileInfoView:this._tileInfoView}),this._updateBlockCacheRegistry()}detach(){this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null,Ct(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryUrl=this._blockCacheRegistryId=null}acquireTile(r){const e=this.container.createTile(r);return this._updatingHandles.addPromise(this._enqueueTileFetch(e)),this.layerView.requestUpdate(),this._needBlockCacheUpdate=!0,this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,e}releaseTile(r){this._fetchQueue.abort(r.key.id),this.container.removeChild(r),r.once("detach",()=>{r.destroy(),this.layerView.requestUpdate()}),this.layerView.requestUpdate()}createEmptyTilePixelBlock(r=null){const e=r==null||r.join(",")===this._tileInfoView.tileInfo.size.join(",");if(e&&this._emptyTilePixelBlock!=null)return this._emptyTilePixelBlock;r=r||this._tileInfoView.tileInfo.size;const[s,t]=r,a=new Ri({width:s,height:t,pixels:[new Uint8Array(s*t)],mask:new Uint8Array(s*t),pixelType:"u8"});return e&&(this._emptyTilePixelBlock=a),a}_getBandIds(){if(!("rasterFunctionChain"in this.container)||!this.container.rasterFunctionChain)return this.layer.bandIds;const{bandIds:r,raster:e}=this.layer,s="rasterFunction"in e?e.rasterFunction.rawInputBandIds:null;return r?.length&&s?.length&&e.rasterInfo.bandCount!==1?r.map(t=>s[Math.min(t,s.length-1)]):"rasterFunction"in e?s:r}updateRasterFunctionParameters(){}_fetchTile(r,e){const s=this._getFetchOptions(r.level,e.signal);return this.fetchTile(r,s)}_getFetchOptions(r,e){const{canUseWebGLForProcessing:s}=this,{layerView:t}=this,{tileInfo:a}=t,i=!a.isWrappable&&ki(t.view.spatialReference)!=null,o=s&&this.layer.raster.hasUniqueSourceStorageInfo,{layer:n}=this.layerView,l=n.serviceRasterInfo?.storageInfo.isBsqTile?n.bandIds:void 0;return{allowPartialFill:!0,datumTransformation:t.datumTransformation,interpolation:s?"nearest":this.layer.interpolation,registryId:this._blockCacheRegistryId,requestRawData:o,skipRasterFunction:this.type==="raster"&&this.container.rasterFunctionChain!=null,signal:e,srcResolution:this._srcResolutions[r],timeExtent:t.timeExtent,tileInfo:a,bandIds:l,disableWrapAround:i}}_getCacheSize(r){return r?40:0}_initializeTileInfo(){const{layerView:r}=this,e=r.view.spatialReference;if(this._canUseLayerLODs()){const{origin:c,lods:h}=this.layer.tileInfo,p=h.map(({scale:g})=>g),f=_t.create({spatialReference:e,size:ce,scales:p,origin:c});return r.set("tileInfo",f),void(this._srcResolutions=h.map(({resolution:g})=>({x:g,y:g})))}const{scales:s,srcResolutions:t,isCustomTilingScheme:a}=$i(this.layer.serviceRasterInfo,e,{tileSize:ce,alignGlobalDatasetWithAGOL:!0}),i=_t.create({spatialReference:e,size:ce,scales:s}),o=i.origin.x===0;fs(r.fullExtent);const{xmin:n,ymax:l}=r.fullExtent;(o||a&&i.origin.x>n)&&(i.origin=new gs({x:n,y:l,spatialReference:e})),this._isCustomTilingScheme=a,r.set("tileInfo",i),this._srcResolutions=t??[]}_canUseLayerLODs(){const{layer:r,layerView:e}=this;if(r.raster.tileType!=="Map")return!1;const{lods:s}=r.tileInfo,t=e.view.constraints?.effectiveLODs;return t?.length===s.length&&t.every(({scale:a},i)=>Math.abs(a-s[i].scale)<.001)}_computeFetchConcurrency(){const{blockBoundary:r}=this.layer.serviceRasterInfo.storageInfo,e=r[r.length-1];return(e.maxCol-e.minCol+1)*(e.maxRow-e.minRow+1)>64?2:10}async _enqueueTileFetch(r,e){if(!this._fetchQueue.has(r.key.id)){try{const s=await this._fetchQueue.push(r.key),t=this._getBandIds();let a=!this.useProgressiveUpdate||this.layerView.hasTilingEffects&&!this._globalSymbolizerParams;if(this._globalUpdateRequested&&!this.layerView.moving&&this._fetchQueue.length===0){a=!1;try{await this._redrawImage(this._abortController?.signal)}catch(n){ze(n)&&ke.getLogger(this).error(n)}this._globalUpdateRequested=!1}this.canUseLocalSymbolizerParams&&this._symbolizerParams==null&&this._updateSymbolizerParams();const i=this._tileInfoView.getTileCoords(Pr,r.key),o=this._tileInfoView.getTileResolution(r.key);await this.updateTileSource(r,{source:s,symbolizerParams:this._symbolizerParams,globalSymbolizerParams:this._globalSymbolizerParams,suspended:a,bandIds:t,coords:i,resolution:o}),r.once("attach",()=>this.layerView.requestUpdate()),this.container.addChild(r)}catch(s){ze(s)||ke.getLogger(this).error(s)}this.layerView.requestUpdate()}}async _redrawImage(r){if(this.container.children.length===0)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects?await this._updateGlobalSymbolizerParams(r):(this.canUseLocalSymbolizerParams&&this._updateSymbolizerParams(),this._globalSymbolizerParams=null);const e=this.container.children.map(async s=>this.updateTileSymbolizerParameters(s,{local:this._symbolizerParams,global:this._globalSymbolizerParams}));await Promise.allSettled(e),this.container.requestRender()}async _updateGlobalSymbolizerParams(r){const e=this._getFetchOptions(this.previousLOD.level,r),s=await this.layer.fetchPixels(this.layerView.view.extent,this.layerView.view.width,this.layerView.view.height,{...e,interpolation:"nearest",requestRawData:!1,skipRasterFunction:!1});if(!s?.pixelBlock)return;const{resolution:t}=this.previousLOD,{isBsqTile:a}=this.layer.raster.rasterInfo.storageInfo,i=a?null:this._getBandIds(),o=this.layer.symbolizer.generateWebGLParameters({pixelBlock:s.pixelBlock.extractBands(i),isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:t,y:t},bandIds:i});!this.canUseWebGLForProcessing&&o&&o.type==="stretch"&&this.layer.renderer&&this.layer.renderer.type==="raster-stretch"&&(o.factor=o.factor.map(n=>255*n),o.minOutput=Math.round(255*o.minOutput),o.maxOutput=Math.round(255*o.maxOutput)),this._globalSymbolizerParams=o}_updateSymbolizerParams(){const{resolution:r}=this.previousLOD,e=this._getBandIds();this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null,isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:r,y:r},bandIds:e})}_updateBlockCacheRegistry(r=!1){const{layer:e,layerView:s}=this,{raster:t}=e,{multidimensionalDefinition:a}=e.normalizeRasterFetchOptions({multidimensionalDefinition:e.multidimensionalDefinition,timeExtent:s.timeExtent}),i=t.rasterInfo.multidimensionalInfo?t.getSliceIndex(a):null,o=t.rasterInfo.storageInfo.isBsqTile&&e.bandIds?.length?e.bandIds:null,n=Ii(t.rasterId,i,o);if(n!==this._blockCacheRegistryUrl){if(this._blockCacheRegistryUrl!=null&&Ct(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryId=zi(n,t.rasterInfo),r){const{view:l}=s,c=this._tileInfoView.getClosestInfoForScale(l.scale),h=this._srcResolutions[c.level];vt(n,this._blockCacheRegistryId,l.extent,l.resolution,h,t.ioConfig.sampling)}this._blockCacheRegistryUrl=n}}async doRefresh(){if(!this.attached||!this.previousLOD||this.layerView.suspended)return;await this.layer.updateRenderer(),this.canUseLocalSymbolizerParams&&this._updateSymbolizerParams(),this._updateBlockCacheRegistry(!0),this._fetchQueue.reset();const r=[];this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,this._tileStrategy.refresh(e=>r.push(this._enqueueTileFetch(e))),await this._updatingHandles.addPromise(Promise.allSettled(r))}};u([T()],B.prototype,"_globalUpdateRequested",void 0),u([T()],B.prototype,"attached",void 0),u([T()],B.prototype,"canUseWebGLForProcessing",null),u([T()],B.prototype,"canUseLocalSymbolizerParams",null),u([T()],B.prototype,"container",void 0),u([T()],B.prototype,"layer",void 0),u([T()],B.prototype,"layerView",void 0),u([T()],B.prototype,"scheduler",void 0),u([T()],B.prototype,"type",void 0),u([T()],B.prototype,"useWebGLForProcessing",null),u([T()],B.prototype,"useProgressiveUpdate",null),u([T()],B.prototype,"timeExtent",void 0),u([T()],B.prototype,"updating",null),B=u([Me("esri.views.2d.layers.imagery.BaseImageryTileSubView2D")],B);let le=class extends B{constructor(){super(...arguments),this.type="raster"}get canUseWebGLForProcessing(){const{loaded:r,symbolizer:e}=this.layer;if(!r||!e)return!1;const s=e.lookup.colormapLut?.indexedColormap,t=s&&s.length>this._maxIndexedColormapSize,a=Is(this.layer.serviceRasterInfo);return!(ys("ios")&&a>4)&&this.useWebGLForProcessing&&e.canRenderInWebGL&&!t&&!(this.layer.interpolation==="majority"&&Pt(this.layer))}attach(){super.attach(),this.container=new Sr(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this.updateRasterFunctionParameters()}detach(){super.detach(),this.container.removeAllChildren(),this.container=null}fetchTile(r,e){return this.layer.fetchTile(r.level,r.row,r.col,e)}updateRasterFunctionParameters(){const{raster:r,type:e}=this.layer,{container:s}=this;if(r.datasetFormat!=="Function"||e==="wcs")return s.rasterFunctionChain=null,s.children.forEach(f=>{const{bitmap:g}=f;g&&(g.suspended=!0,g.processed=!1,g.projected&&(g.invalidateTexture(),g.rasterTexture=null))}),void(this._rasterFunctionState="na");const t=this._rasterFunctionState,{rasterFunction:a,primaryRasters:i}=r,o=a.supportsGPU&&(!i||i.rasters.length<=1),n=o?a.flatWebGLFunctionChain:null,{renderer:l}=this.layer,c=!o||!n?.functions.length||l?.type==="raster-stretch"&&l.dynamicRangeAdjustment||!this.canUseWebGLForProcessing;s.rasterFunctionChain=c?null:this._addProjection(n);const h=a==null?"na":s.rasterFunctionChain?"gpu":"cpu",p=t===h||t==="na"&&h==="cpu"&&n?.functions?.length===0;s.children.forEach(f=>{const{bitmap:g}=f;g&&(g.suspended=!p,g.processed=!1,g.processedTexture=null)}),this._rasterFunctionState=h}async updateTileSource(r,e){const s=this._getBandIds(),t=this._getLayerInterpolation(),{canUseWebGLForProcessing:a}=this,{source:i,globalSymbolizerParams:o,suspended:n,coords:l,resolution:c}=e,h=this.layerView.hasTilingEffects?o:e.symbolizerParams,{bitmap:p}=r;if([p.x,p.y]=l,p.resolution=c,i?.pixelBlock!=null){const x={extent:i.extent,pixelBlock:i.pixelBlock,srcPixelSize:i.srcTilePixelSize};if(p.rawPixelData=x,a)p.source=i.pixelBlock,p.isRendereredSource=!1;else{const _=await this.layer.applyRenderer(x,o?.type==="stretch"?o:void 0);p.source=_,p.isRendereredSource=!0}p.symbolizerParameters=a?h:null,p.transformGrid=a?i.transformGrid:null}else{const x=this.createEmptyTilePixelBlock();p.source=x,p.symbolizerParameters=a?h:null,p.transformGrid=null}const{isBsqTile:f}=this.layer.raster.rasterInfo.storageInfo;p.bandIds=a&&!f?s:null,p.width=this._tileInfoView.tileInfo.size[0],p.height=this._tileInfoView.tileInfo.size[1],p.interpolation=t,p.suspended=n;const{raster:g}=this.layer;if(St(g)){const x=g.getClippingGeometry(this.layerView.view.spatialReference);if(x){const _=g.getTileExtentFromTileInfo(r.key.level,r.key.row,r.key.col,this._tileInfoView.tileInfo);p.mask=zs({srcExtent:_,geometry:x,size:[p.width,p.height]})}}p.invalidateTexture()}async updateTileSymbolizerParameters(r,e){const{local:s,global:t}=e,a=this._getBandIds(),i=this._getLayerInterpolation(),{canUseWebGLForProcessing:o}=this,{bitmap:n}=r,{rawPixelData:l}=n;o||l==null?(n.isRendereredSource&&l!=null&&(n.source=l.pixelBlock),n.isRendereredSource=!1):(n.source=await this.layer.applyRenderer(l,t?.type==="stretch"?t:void 0),n.isRendereredSource=!0),n.symbolizerParameters=o?this.layerView.hasTilingEffects?t:s:null;const{isBsqTile:c}=this.layer.raster.rasterInfo.storageInfo;n.bandIds=o&&!c?a:null,n.interpolation=i,n.suspended=!1}_getLayerInterpolation(){const{interpolation:r,renderer:e}=this.layer;if(!e)return r;const s=e.type;return s==="raster-colormap"||s==="unique-value"?"nearest":e.type==="raster-stretch"&&e.colorRamp!=null?r==="bilinear"||r==="cubic"?"bilinear":"nearest":r}_addProjection(r){return r?.functions?.length&&!r.hasFocalFunction&&r.functions.unshift({name:"Reproject",parameters:{targetImageSize:this._tileInfoView.tileInfo.size,requireNNEdge:r.isSourceSingleBand},pixelType:"f32",id:0,isNoopProcess:!1}),r}};u([T()],le.prototype,"canUseWebGLForProcessing",null),u([T()],le.prototype,"container",void 0),u([T()],le.prototype,"layer",void 0),u([T()],le.prototype,"type",void 0),le=u([Me("esri.views.2d.layers.imagery.ImageryTileView2D")],le);class Ir extends zt{constructor(e,s,t,a,i,o,n=null){super(e,s,t,a,i,o),this.tileData=new Ts(n),this.tileData.coordScale=[i,o],this.tileData.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.tileData.destroy(),this.tileData=null,this.stage=null}set stencilRef(e){this.tileData.stencilRef=e}get stencilRef(){return this.tileData.stencilRef}_createTransforms(){return{displayViewScreenMat3:$e(),tileMat3:$e()}}setTransform(e){super.setTransform(e);const s=this.resolution/(e.resolution*e.pixelRatio),t=this.transforms.tileMat3,[a,i]=this.tileData.offset,o=[this.x+a*this.resolution,this.y-i*this.resolution],[n,l]=e.toScreenNoRotation([0,0],o),{symbolTileSize:c}=this.tileData.symbolizerParameters,h=Math.round((this.width-this.tileData.offset[0])/c)*c,p=Math.round((this.height-this.tileData.offset[1])/c)*c,f=h/this.rangeX*s,g=p/this.rangeY*s;Vs(t,f,0,0,0,g,0,n,l,1),It(this.transforms.displayViewScreenMat3,e.displayViewMat3,t),this.tileData.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}onAttach(){this.tileData.stage=this.stage}onDetach(){this.tileData.stage=null}}class zr extends kt{constructor(){super(...arguments),this.isCustomTilingScheme=!1,this.symbolTypes=["triangle"]}createTile(e){const s=this.tileInfoView.getTileBounds(Rt(),e),[t,a]=this.tileInfoView.tileInfo.size,i=this.tileInfoView.getTileResolution(e.level);return new Ir(e,i,s[0],s[3],t,a)}prepareRenderPasses(e){const s=e.registerRenderPass({name:"imagery (vf tile)",brushes:[Rs],target:()=>this.children.map(t=>t.tileData),drawPhase:tt.MAP});return[...super.prepareRenderPasses(e),s]}doRender(e){this.visible&&e.drawPhase===tt.MAP&&this.symbolTypes.forEach(s=>{e.renderPass=s,super.doRender(e)})}}let ge=class extends B{constructor(){super(...arguments),this._handle=null,this.type="rasterVF"}async fetchTile(r,e){e={...e,interpolation:"nearest",requestProjectedLocalDirections:!0};const s=await this.layer.fetchTile(r.level,r.row,r.col,e);return this.layer.serviceRasterInfo?.dataType==="vector-magdir"&&s?.pixelBlock&&(s.pixelBlock=await this.layer.convertVectorFieldData(s.pixelBlock,"vector-magdir",e)),s}updateTileSource(r,e){const s=e.symbolizerParams,{tileData:t}=r;t.key=r.key,t.width=this._tileInfoView.tileInfo.size[0],t.height=this._tileInfoView.tileInfo.size[1];const{symbolTileSize:a}=s,{source:i}=e;if(t.offset=this._getTileSymbolOffset(t.key,a),i?.pixelBlock!=null){const o={extent:i.extent,pixelBlock:i.pixelBlock};t.rawPixelData=o,t.symbolizerParameters=s,t.source=this._sampleVectorFieldData(i.pixelBlock,s,t.offset)}else{const o=[Math.round((this._tileInfoView.tileInfo.size[0]-t.offset[0])/a),Math.round((this._tileInfoView.tileInfo.size[1]-t.offset[1])/a)],n=this.createEmptyTilePixelBlock(o);t.source=n,t.symbolizerParameters=s}return t.invalidateVAO(),Promise.resolve()}updateTileSymbolizerParameters(r,e){const s=e.local,{symbolTileSize:t}=s,{tileData:a}=r;a.offset=this._getTileSymbolOffset(a.key,t);const i=a.symbolizerParameters.symbolTileSize;a.symbolizerParameters=s;const o=a.rawPixelData?.pixelBlock;return o!=null&&i!==t&&(a.source=this._sampleVectorFieldData(o,a.symbolizerParameters,a.offset)),Promise.resolve()}attach(){super.attach(),this.container=new zr(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this._updateSymbolType(this.layer.renderer),this._handle=Ae(()=>this.layer.renderer,r=>this._updateSymbolType(r))}detach(){super.detach(),this.container.removeAllChildren(),this._handle?.remove(),this._handle=null,this.container=null}_getTileSymbolOffset(r,e){const s=r.col*this._tileInfoView.tileInfo.size[0]%e,t=r.row*this._tileInfoView.tileInfo.size[1]%e;return[s>e/2?e-s:-s,t>e/2?e-t:-t]}_sampleVectorFieldData(r,e,s){const{symbolTileSize:t}=e;return Si(r,"vector-uv",t,s)}_updateSymbolType(r){r?.type==="vector-field"&&(this.container.symbolTypes=r.style==="wind-barb"?["scalar","triangle"]:r.style==="simple-scalar"?["scalar"]:["triangle"])}};u([T()],ge.prototype,"container",void 0),u([T()],ge.prototype,"layer",void 0),u([T()],ge.prototype,"type",void 0),ge=u([Me("esri.views.2d.layers.imagery.VectorFieldTileView2D")],ge);const kr=r=>{let e=class extends r{constructor(){super(...arguments),this.layer=null,this.tileInfo=null}get fullExtent(){try{return this.layer.loaded?this._getFullExtent():null}catch{return null}}get timeExtent(){return Oi(this.layer,this.view?.timeExtent,this._get("timeExtent"))}get hasTilingEffects(){return!!(this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment)}get datumTransformation(){try{return this.layer.loaded?Mi(this.layer.fullExtent,this.view.spatialReference,!0):null}catch{return null}}supportsSpatialReference(s){try{return!this.layer.loaded||!!Tt(this.layer.serviceRasterInfo,s)}catch{return!1}}async fetchPopupFeaturesAtLocation(s,t){const{layer:a}=this;if(!s)throw new ws("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:a});const{popupEnabled:i}=a,o=Di(a,t);if(!i||o==null)return[];const n=[],{value:l,magdirValue:c,processedValue:h}=await a.identify(s,{timeExtent:this.timeExtent,signal:t?.signal});let p="";if(l?.length){p=a.type==="imagery-tile"&&a.hasStandardTime()&&l[0]!=null?l.map(C=>a.getStandardTimeValue(C)).join(", "):l.join(", ");const f={ObjectId:0};f[Ce.servicePixelValue]=a.type==="imagery-tile"&&St(a.raster)?h?.join(", "):p,f[Ce.rawServicePixelValue]=p;const g=a.raster?.rasterInfo??a.serviceRasterInfo,x=g?.attributeTable;if(x!=null){const{fields:C,features:q}=x,J=C.find(({name:re})=>re.toLowerCase()==="value"),He=f[Ce.servicePixelValue],Be=J?q.find(re=>String(re.attributes[J.name])===He):null;if(Be)for(const re in Be.attributes)Be.attributes.hasOwnProperty(re)&&(f[Cs+re]=Be.attributes[re])}const _=g?.dataType;_!=="vector-magdir"&&_!=="vector-uv"||(f[Ce.magnitude]=c?.[0],f[Ce.direction]=c?.[1]);const{multidimensionalDefinition:R}=this.layer.normalizeRasterFetchOptions({timeExtent:this.timeExtent});vs(a.rasterFields,f,R);const z=new xs({geometry:this.fullExtent?.clone(),attributes:f,layer:a,sourceLayer:a});n.push(z)}return n}async getSourceScale(){return await this.layer.load(),Fi(this.layer.serviceRasterInfo,this.view.spatialReference)}_getFullExtent(){return Tt(this.layer.serviceRasterInfo,this.view.spatialReference)}};return u([T()],e.prototype,"fullExtent",null),u([T()],e.prototype,"layer",void 0),u([T({readOnly:!0})],e.prototype,"timeExtent",null),u([T()],e.prototype,"tileInfo",void 0),u([T({readOnly:!0})],e.prototype,"hasTilingEffects",null),u([T()],e.prototype,"datumTransformation",null),e=u([Me("esri.views.layers.ImageryTileLayerView")],e),e};let ue=class extends kr(Gi(Ps(Ai))){constructor(){super(...arguments),this._useWebGLForProcessing=!0,this._useProgressiveUpdate=!0,this.subview=null}get useWebGLForProcessing(){return this._useWebGLForProcessing}set useWebGLForProcessing(r){this._useWebGLForProcessing=r,this.subview&&"useWebGLForProcessing"in this.subview&&(this.subview.useWebGLForProcessing=r)}get useProgressiveUpdate(){return this._useWebGLForProcessing}set useProgressiveUpdate(r){this._useProgressiveUpdate=r,this.subview&&"useProgressiveUpdate"in this.subview&&(this.subview.useProgressiveUpdate=r)}get displayParameters(){const{layer:r}=this,e=this._get("displayParameters");return r.renderer&&r.visible?{bandIds:r.bandIds,renderer:r.renderer,interpolation:r.interpolation,multidimensionalDefinition:r.multidimensionalDefinition,rasterFunction:r.type==="imagery-tile"?r.rasterFunction:null}:e}update(r){this.subview?.update(r),this.notifyChange("updating")}isUpdating(){return!this.subview||this.subview.updating}attach(){this.layer.increaseRasterJobHandlerUsage(),this._updateSubview(),this.addAttachHandles([Ae(()=>this.displayParameters,(r,e)=>{const s=r.interpolation!==e?.interpolation&&(r.interpolation==="majority"||e?.interpolation==="majority")&&Pt(this.layer),t=!!this.layer.serviceRasterInfo?.storageInfo?.isBsqTile&&r.bandIds?.join()!==e?.bandIds?.join(),a=r.renderer!==e?.renderer&&this._getSubviewType(e?.renderer)!==this._getSubviewType(r.renderer);a&&this._updateSubview();const i=r.multidimensionalDefinition!==e?.multidimensionalDefinition,o=r.rasterFunction!==e?.rasterFunction,n=o&&!this._useWebGLForProcessing,l=i||s||a||n||t;this.subview.redrawOrRefetch({refetch:l,reprocess:o}).catch(c=>{ze(c)||ke.getLogger(this).error(c)}),this.notifyChange("updating")}),Ae(()=>this.layer.multidimensionalSubset??null,(r,e)=>{const{multidimensionalDefinition:s}=this.layer;s!=null&&wt(s,r)!==wt(s,e)&&(this.subview.redrawOrRefetch({refetch:!0}).catch(t=>{ze(t)||ke.getLogger(this).error(t)}),this.notifyChange("updating"))},bs),Ae(()=>this.timeExtent,()=>{this.subview.timeExtent=this.timeExtent,this.subview.redrawOrRefetch({refetch:!0}).catch(r=>{ze(r)||ke.getLogger(this).error(r)})},_s)])}detach(){this.layer.decreaseRasterJobHandlerUsage(),this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null}viewChange(){this.requestUpdate()}moveEnd(){this.subview.moveEnd()}doRefresh(){return this.subview?this.subview.doRefresh():Promise.resolve()}_updateSubview(){const{renderer:r}=this.layer;if(!r)return;const e=this._getSubviewType(r);if(this.subview){if(this.subview.type===e)return void this._attachSubview(this.subview);this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null}const{layer:s}=this;let t;if(t=e==="rasterVF"?new ge({layer:s,layerView:this,scheduler:this.scheduler}):e==="flow"?new Ss({layer:s,layerView:this,scheduler:this.scheduler}):new le({layer:s,layerView:this,scheduler:this.scheduler}),"useWebGLForProcessing"in t&&(t.useWebGLForProcessing=this._useWebGLForProcessing),"useProgressiveUpdate"in t&&(t.useProgressiveUpdate=this._useProgressiveUpdate),"previousLOD"in t){const{subview:a}=this;t.previousLOD=a&&"previousLOD"in a?a.previousLOD:null}this._attachSubview(t),this.subview=t,this.requestUpdate()}_attachSubview(r){r&&!r.attached&&(r.attach(),r.attached=!0,this.container.addChildAt(r.container,0))}_detachSubview(r){r?.attached&&(this.container.removeChild(r.container),r.detach(),r.attached=!1)}_getSubviewType(r){const e=r?.type;return e==="vector-field"?"rasterVF":e==="flow"?"flow":"raster"}};u([T()],ue.prototype,"subview",void 0),u([T()],ue.prototype,"useWebGLForProcessing",null),u([T()],ue.prototype,"useProgressiveUpdate",null),u([T({readOnly:!0})],ue.prototype,"displayParameters",null),ue=u([Me("esri.views.2d.layers.ImageryTileLayerView2D")],ue);const Wn=ue;export{Wn as default};
