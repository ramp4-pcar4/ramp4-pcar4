import{g1 as j,ae as I,e4 as y,g2 as X,fY as B,ao as J,b$ as z,g3 as V,bx as x,eo as N,bj as K,dw as R,dx as q,M as F,ad as c,q as b,v as L,g4 as Q,x as Z}from"./main-Crkq4LWq.js";import tt from"./GraphicsLayer-tdnGrVvL.js";import{p as U,h as et}from"./videoUtils-CgyFQlaF.js";import{S as it}from"./cimSymbolUtils-TrTP_j9U.js";import{u as rt}from"./OverlayContainer-DwUW7E-9.js";import{n as st}from"./vec2f64-Cgb6qxNH.js";import{O as S}from"./projectionUtils-CE8Ogge1.js";import{e as ot}from"./Container-B6lwYvR2.js";import{n as nt,S as at}from"./LayerView2D-CrOqte-c.js";import{P as lt}from"./enums-UBzvFP7O.js";import{a as mt,S as ht}from"./Texture-B5fSG5wj.js";import{t as pt}from"./GraphicContainer-isvgpXb5.js";import{O as yt}from"./GraphicsView2D-Y3XzeYV_.js";import{u as ct}from"./LayerView-aw_QW3G3.js";import"./preload-helper-DMGCcr4D.js";import"./GraphicsCollection-BLVS1AvI.js";import"./Layer-DyCDZpQP.js";import"./TimeExtent-R7s_TuxB.js";import"./BlendLayer-Bfjdkd1n.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-BKompkv5.js";import"./parser-B_oj8OEu.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-DgBklfbN.js";import"./common-DQOJ18NT.js";import"./ScaleRangeLayer-BXnA5dV_.js";import"./ElevationInfo-Dpz_kzPY.js";import"./lengthUtils-l5Hl4s3A.js";import"./utils-BV55yp3A.js";import"./asyncUtils-DfTs-X0F.js";import"./LRUCache-BB1cebTv.js";import"./MemCache-BSBM3Sy1.js";import"./utils-jjGHTGcN.js";import"./defaultCIMValues-CQAn2izL.js";import"./enums-_AFKM9Yk.js";import"./mat3-CruJiiUv.js";import"./MapView-CJJhGIL5.js";import"./Cyclical-CYdxR5S5.js";import"./CollectionFlattener-Bv62WCS2.js";import"./workers-cjuoJTHE.js";import"./Queue-DQom_e3o.js";import"./intl-BbkIuURR.js";import"./TileInfo-DAvxtt9h.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-Bp35jaL4.js";import"./uuid-Cl5lrJ4c.js";import"./sanitizerUtils-CJlLEeXg.js";import"./UpdatingHandles-eO6gDPm8.js";import"./utils-5b6BMTlC.js";import"./Version-Dg6OjmkZ.js";import"./Map-BNbpD8LB.js";import"./Basemap-C9yb0ly4.js";import"./loadAll-BXn9jnyu.js";import"./PortalItem-DoXbvgWk.js";import"./writeUtils-DcrUcLLa.js";import"./persistable-Bj2MRLvH.js";import"./MD5-MtSiOt06.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-TV-TTAKd.js";import"./PolygonCollection-Dmw0ki-o.js";import"./editableLayers-DsLdzz8Q.js";import"./TablesMixin-_8wUyxBH.js";import"./HeightModelInfo-CKmXOeat.js";import"./timeZoneUtils-BHCW7jir.js";import"./ReactiveMap-Cu7iaDFo.js";import"./Query-D4pOe5d7.js";import"./Field-CfEWUurB.js";import"./fieldType-DTrwgDiS.js";import"./IViewEvents-Bci6PjlS.js";import"./mat2df64-CH-gvrN5.js";import"./a11yUtils-lesmaVf1.js";import"./projectionUtils-Ct6hX8mo.js";import"./ViewingMode-Chk7YAAL.js";import"./vec2-ChnYg_BJ.js";import"./mat2d-D9DBP-jx.js";import"./normalizeUtils-Dg7DX0Kf.js";import"./normalizeUtilsCommon-KviMv5LJ.js";import"./utils-BdBs5klf.js";import"./utils-Courd1_m.js";import"./mat2df32-Dpt2CT5P.js";import"./vec2f32-CaVKkSa6.js";import"./Scheduler-Pc61bPwM.js";import"./debugFlags-cjveQ8k-.js";import"./vec32-StvNi8k0.js";import"./unitBezier-B1N-tmtC.js";import"./enums-Cr_bgujp.js";import"./TileKey-DWL9a-dq.js";import"./quickselect-QQC62dOK.js";import"./definitions-CASyCajO.js";import"./imageUtils-rE9d6Mzq.js";import"./capabilities-Bi6C4OG6.js";import"./modeUtils-1fSvrGRf.js";import"./ILyr3DWasmPerSceneView-CIC-HPGZ.js";import"./ColorBackground-BYtpFnXc.js";import"./vec3f32-WCVSSNPR.js";import"./WGLContainer-W5xN5SW-.js";import"./Utils-CRLFUF29.js";import"./BoundingBox-BSOANoLO.js";import"./getDataTypeBytes-D2DiHx_d.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./ProgramTemplate-B6LPNqUk.js";import"./VertexArrayObject-D8gxGcVe.js";import"./memoryEstimations-DknB37rc.js";import"./StyleDefinition-CQkO14Uj.js";import"./config-DHajyIwB.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-vqNz0xi_.js";import"./OptimizedFeature--b1MQl_i.js";import"./OptimizedGeometry-DmzaLtTI.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./FeatureCommandQueue-DA3eduKz.js";import"./CIMSymbolHelper-nIE1FQPf.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-CcDLQxe3.js";import"./GeometryUtils-BGe_5xyi.js";import"./rasterizingUtils-eA7dkndo.js";import"./floatRGBA-DqTSKoin.js";import"./Rect-CUzevAry.js";import"./TechniqueType-CFPo0AVB.js";import"./GraphShaderModule-D9wKQV46.js";import"./FramebufferObject-CvTmAk7h.js";import"./ShaderBuilder-BLr00_qu.js";import"./BindType-BBwFZqyN.js";import"./UpdateTracking2D-By27PAAp.js";import"./utils-C3lRdHqP.js";import"./constants-BFLErLYb.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-Blt2rFhT.js";import"./utils-ehcGqGxa.js";import"./EffectView-DrUQPYiX.js";import"./utils-BQBvadb7.js";import"./layerViewUtils-Brvm02SE.js";import"./AGraphicContainer-DFPDFvUT.js";import"./TechniqueInstance-6lEvrJzJ.js";import"./TileContainer--GoXcL9S.js";import"./FieldsIndex-Cwq_t80R.js";import"./UnknownTimeZone-CGGNrDrV.js";import"./OverrideHelper-CgrdFD66.js";import"./colorUtils-DXf65Ue7.js";import"./vec42-CKs01hkn.js";import"./vec4f64-DPb6J-GU.js";import"./ArcadeExpression-ON2N40QW.js";import"./TimeOnly-BjqJuv0j.js";import"./enum-DXEdVlyM.js";import"./callExpressionWithFeature-CtoHHKBd.js";import"./quantizationUtils-kCN6oAvL.js";import"./AttributeStore-BdEiDt_N.js";import"./labelUtils-JQEemrpf.js";import"./diffUtils-COJ4IIqY.js";import"./queryUtils-ClMG3bzJ.js";import"./json-Wa8cmqdu.js";import"./timeSupport-BSHfEr7S.js";import"./normalizeUtilsSync-B38SGrdl.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-BaG3wrh1.js";const T=2;class ut extends ot{constructor(t){super(),this.element=t,this._handles=new j,this.isWrapAround=!1,this.perspectiveTransform=st(),this.wrapAroundShift=0,this.clipGeometry=null,this._handles.add(I(()=>this.element,()=>{const e=this.element;this.ready(),e&&this._handles.add(X(e,"play",()=>this.requestRender()))},y))}getMesh(t){throw new Error("Method not implemented.")}destroy(){this._handles.destroy(),this.texture=B(this.texture)}get textureSize(){if(!this.texture)return[1,1];const t=this.texture.descriptor;return[t.width,t.height]}get dvsMat3(){return this.parent.dvsMat3}beforeRender(t){const e=this.element;if(e==null)return;const{context:l}=t,{videoWidth:n,videoHeight:r}=e;if(n!==0&&r!==0){if(this.texture)e.paused||this.texture.setData(e);else{const i=new mt;i.wrapMode=lt.CLAMP_TO_EDGE,i.preMultiplyAlpha=!0,i.width=n,i.height=r,this.texture=new ht(l,i,e)}e.paused||(this.texture.generateMipmap(),this.requestRender()),super.beforeRender(t)}}_createTransforms(){return null}updateDrawCoords(t,e,l,n){const r=this.element,i=this._getFrameInfo();if(!r||!i)return;const{spatialReference:a}=l;this._initializeData(t,i,a);const{controlPoints:m,horizon:h}=i,p=Math.sqrt(m.length),o=p,{x:u,y:_}=t,v=this._vertices,C=m[0],W=m[p-1],k=m[(o-1)*p],Y=m[(o-1)*p+p-1],G=S(h?h[0].mapPoint:C.mapPoint,a),P=S(h?h[1].mapPoint:W.mapPoint,a),g=S(k.mapPoint,a),A=S(Y.mapPoint,a);this.clipGeometry=h?new nt({geometry:J.fromJSON({rings:[[[g.x,g.y],[A.x,A.y],[P.x,P.y],[G.x,G.y],[g.x,g.y]]],spatialReference:a})}):null;for(let d=0;d<m.length;d++){const E=m[d],{sourcePoint:M,mapPoint:$}=E;if(M==null||$==null)continue;const w=S($,a);v[d*T+0]=w.x-u,v[d*T+1]=w.y-_}let D=e;if(n){const d=Math.min(G.x,P.x,g.x,A.x),E=Math.max(G.x,P.x,g.x,A.x),{worldWidth:M,xBounds:$}=n,[w,H]=$;d<w&&E>w?D=M:E>H&&d<H&&(D=-M)}this.wrapAroundShift=D,this.isWrapAround=D!==0}draw(t,e){if(this.visible){if(!(this.isReady&&this._vertices&&this._indices&&this._texCoords))return void this.requestRender();this.stage||console.warn("OverlayMultipoint: stage is null"),e.render(t,{transform:{dvs:this.dvsMat3},config:{perspective:this.perspectiveTransform,texSize:this.textureSize,wrapAroundShift:this.wrapAroundShift,isWrapAround:this.isWrapAround,opacity:this.opacity,texture:{texture:this.texture,unit:0}},position:this._vertices,tex:this._texCoords,index:this._indices})}}_initializeData(t,e,l){if(this._vertices!=null&&this._indices!=null)return;const{controlPoints:n}=e,r=Math.sqrt(n.length),i=r,a=new Float32Array(T*n.length),m=new Uint16Array(2*n.length);for(let o=0;o<n.length;o++){const u=n[o],{sourcePoint:_,mapPoint:v}=u;if(_==null||v==null)continue;const C=S(v,l);a[o*T+0]=C.x-t.x,a[o*T+1]=C.y-t.y,m[2*o+0]=_.x,m[2*o+1]=_.y}const h=new Uint16Array(i*r+(i-2)*(r+2));let p=0;for(let o=0;o<i;o++){for(let u=0;u<r;u++)h[p++]=o*r+u,h[p++]=(o+1)*r+u;o<i-2&&(h[p++]=(o+1)*r+(r-1),h[p++]=(o+1)*r)}this._vertices=a,this._texCoords=m,this._indices=h}_getFrameInfo(){if(!this.groundControlPoints)return null;const t=this._getFrameControlPoints(),e=this.frameHorizonPoints;let l=null;if(e){const n=e.startX,r=e.startY,i=e.endX,a=e.endY;l=[{sourcePoint:V(n,r),mapPoint:new z(e.startLongitude,e.startLatitude)},{sourcePoint:V(i,a),mapPoint:new z(e.endLongitude,e.endLatitude)}]}return{controlPoints:t,horizon:l}}_getFrameControlPoints(){const t=this.groundControlPoints,e=t?.length;if(!e)return[];const l=new Array(e),n=Math.max(...t.map(({x:i})=>i)),r=this.element.videoWidth/n;for(let i=0;i<e;i++){const{x:a,y:m,lat:h,lon:p}=t[i];l[i]={sourcePoint:V(a*r,-m*r),mapPoint:new z(p,h)}}return l}}const O=new K([255,127,0]),dt=10005,ft=10018;let f=class extends at(ct){constructor(){super(...arguments),this._graphicsLayer=new tt,this._frameOutlineGraphic=new x({symbol:new N({outline:{type:"simple-line",color:O}})}),this._frameCenterGraphic=new x({symbol:new R({color:O,style:"cross"})}),this._sensorTrailGraphic=new x({symbol:new q({color:O})}),this._sensorSightlineGraphic=new x({symbol:new q({color:O})}),this._sensorLocationGraphic=new x({symbol:new R({color:O})}),this._overlayContainer=null,this._sensorLocationSymbolType=null,this.layer=null,this.sensorLocationSymbol=null,this.symbolAngle=0,this.visibleTelemetryElements=null}destroy(){this._graphicsLayer=F(this._graphicsLayer)}initialize(){this._sensorLocationSymbolType=this.layer?.sensorSymbol.type,this._graphicsLayer.graphics.addMany([this._frameCenterGraphic,this._frameOutlineGraphic,this._sensorLocationGraphic,this._sensorSightlineGraphic,this._sensorTrailGraphic]),this.visibleTelemetryElements=new U({frame:this.layer.telemetryDisplay?.frame??!1,frameCenter:this.layer.telemetryDisplay?.frameCenter??!0,frameOutline:this.layer.telemetryDisplay?.frameOutline??!0,lineOfSight:this.layer.telemetryDisplay?.lineOfSight??!0,sensorLocation:this.layer.telemetryDisplay?.sensorLocation??!0,sensorTrail:this.layer.telemetryDisplay?.sensorTrail??!0})}attach(){this._overlayContainer=new rt,this.container.addChild(this._overlayContainer),this._addOverlayMultipoint(),this.graphicsView=new yt({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this._graphicsLayer.graphics,container:new pt(this.view.featuresTilingScheme)}),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this._graphicsLayer.on("graphic-update",this.graphicsView.graphicUpdateHandler)),this.addAttachHandles([c(()=>[this.layer.telemetryDisplay?.frame,this.layer.telemetryDisplay?.frameCenter,this.layer.telemetryDisplay?.frameOutline,this.layer.telemetryDisplay?.sensorLocation,this.layer.telemetryDisplay?.sensorTrail,this.layer.telemetryDisplay?.lineOfSight],()=>this._updateVisibleTelemetryElements(),y),c(()=>[this.layer.telemetry,this.visibleTelemetryElements?.frameCenter,this.visibleTelemetryElements?.frameOutline,this.visibleTelemetryElements?.sensorLocation,this.visibleTelemetryElements?.sensorTrail,this.visibleTelemetryElements?.lineOfSight],()=>this._updateGraphicGeometries(),y),c(()=>this.layer.metadata,()=>this._updateSensorLocationSymbolAngle(),y),c(()=>this.layer?.frameCenterSymbol,()=>this._updateFrameCenterSymbol(),y),c(()=>this.layer?.frameOutlineSymbol,()=>this._updateFrameOutlineSymbol(),y),c(()=>this.layer?.sensorSightLineSymbol,()=>this._updateSensorSightlineSymbol(),y),c(()=>this.layer?.sensorSymbol,()=>this._updateSensorLocationSymbol(),y),c(()=>this.layer?.sensorTrailSymbol,()=>this._updateSensorTrailSymbol(),y),c(()=>this.symbolAngle,()=>this._updateSensorLocationSymbol(),y)])}detach(){this._overlayContainer.removeAllChildren(),this.container.removeAllChildren(),this.graphicsView=F(this.graphicsView)}supportsSpatialReference(s){return!0}moveEnd(){}viewChange(){this.graphicsView.viewChange()}update(s){this.graphicsView.processUpdate(s)}isUpdating(){return!this.graphicsView||this.graphicsView.updating}_updateVisibleTelemetryElements(){this.visibleTelemetryElements&&this.layer.telemetryDisplay&&(this.visibleTelemetryElements.frame=this.layer.telemetryDisplay.frame,this.visibleTelemetryElements.frameCenter=this.layer.telemetryDisplay.frameCenter,this.visibleTelemetryElements.frameOutline=this.layer.telemetryDisplay.frameOutline,this.visibleTelemetryElements.lineOfSight=this.layer.telemetryDisplay.lineOfSight,this.visibleTelemetryElements.sensorLocation=this.layer.telemetryDisplay.sensorLocation,this.visibleTelemetryElements.sensorTrail=this.layer.telemetryDisplay.sensorTrail)}_updateGraphicGeometries(){const{telemetry:s}=this.layer,{visibleTelemetryElements:t}=this;s&&t&&(t.frameOutline&&s.frameOutline?this._frameOutlineGraphic.geometry=this.layer.telemetry.frameOutline:this._frameOutlineGraphic.geometry=null,t.sensorTrail&&s.sensorTrail?this._sensorTrailGraphic.geometry=this.layer.telemetry.sensorTrail:this._sensorTrailGraphic.geometry=null,t.lineOfSight&&s.lineOfSight?this._sensorSightlineGraphic.geometry=this.layer.telemetry.lineOfSight:this._sensorSightlineGraphic.geometry=null,t.sensorLocation&&s.sensorLocation?this._sensorLocationGraphic.geometry=this.layer.telemetry.sensorLocation:this._sensorLocationGraphic.geometry=null,t.frameCenter&&s.frameCenter?this._frameCenterGraphic.geometry=this.layer.telemetry.frameCenter:this._frameCenterGraphic.geometry=null)}_updateSensorLocationSymbolAngle(){if(!this.layer?.metadata?.size)return;const{source:s,symbolOffset:t=0}=this.layer.sensorSymbolOrientation||{};if(!s&&!t)return;const e=this.layer?.metadata?.get(dt)?.value??0,l=this.layer?.metadata?.get(ft)?.value??0,n=et({cameraAzimuth:l,platformHeading:e,source:this.layer.sensorSymbolOrientation?.source,symbolOffset:this.layer.sensorSymbolOrientation?.symbolOffset??0});this.symbolAngle=Math.round(Math.abs(n))}_updateSensorLocationSymbol(){switch(this._sensorLocationSymbolType){case"simple-marker":this.sensorLocationSymbol=this.layer.sensorSymbol.clone(),this.sensorLocationSymbol.angle=this.symbolAngle,this._sensorLocationGraphic.symbol=this.sensorLocationSymbol.clone();break;case"picture-marker":this.sensorLocationSymbol=this.layer.sensorSymbol,this.sensorLocationSymbol.angle=this.symbolAngle,this._sensorLocationGraphic.symbol=this.sensorLocationSymbol;break;case"cim":this.sensorLocationSymbol=this.layer.sensorSymbol,it(this.sensorLocationSymbol,this.symbolAngle,!0),this._sensorLocationGraphic.symbol=this.sensorLocationSymbol}}_updateFrameCenterSymbol(){this.layer?.frameCenterSymbol&&(this._frameCenterGraphic.symbol=this.layer.frameCenterSymbol.clone())}_updateFrameOutlineSymbol(){this.layer?.frameOutlineSymbol&&(this._frameOutlineGraphic.symbol=this.layer.frameOutlineSymbol.clone())}_updateSensorSightlineSymbol(){this.layer?.sensorSightLineSymbol&&(this._sensorSightlineGraphic.symbol=this.layer.sensorSightLineSymbol.clone())}_updateSensorTrailSymbol(){this.layer?.sensorTrailSymbol&&(this._sensorTrailGraphic.symbol=this.layer.sensorTrailSymbol.clone())}async _addOverlayMultipoint(){if(!this.layer.videoElement)return;const s=new ut(this.layer.videoElement);this.addAttachHandles([c(()=>[this.layer.frameHorizonPoints,this.layer.groundControlPoints,this.layer.frameOpacity,this.layer.telemetryDisplay?.frame],()=>{const{visibleTelemetryElements:t}=this;s.frameHorizonPoints=this.layer.frameHorizonPoints,s.groundControlPoints=this.layer.groundControlPoints,s.opacity=this.layer.frameOpacity,s.visible=t?.frame??!1},y)]),this._overlayContainer.addChild(s),this.view.stage.requestRender()}};b([L()],f.prototype,"graphicsView",void 0),b([L()],f.prototype,"layer",void 0),b([L({types:Q})],f.prototype,"sensorLocationSymbol",void 0),b([L()],f.prototype,"symbolAngle",void 0),b([L({type:U})],f.prototype,"visibleTelemetryElements",void 0),f=b([Z("esri.views.2d.layers.VideoLayerView2D")],f);const hr=f;export{hr as default};
