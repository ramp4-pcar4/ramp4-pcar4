import{L as k,w as y,hX as A,q as n,g$ as b}from"./main-Crkq4LWq.js";import{o as P,M as f,h as E,b as I,i as T}from"./mat3-CruJiiUv.js";import{e as L}from"./MapView-CJJhGIL5.js";import{r as p}from"./vec2f32-CaVKkSa6.js";import{e as C}from"./Container-B6lwYvR2.js";import{B as H,M as D,P as W,D as _,C as q,L as m}from"./enums-UBzvFP7O.js";import{a as N,S as G}from"./Texture-B5fSG5wj.js";import{w as U}from"./definitions-CASyCajO.js";import{j as V,X as j,e as S,w as F,d as K,f as z,c as B,g as u,U as O,r as X,_ as Q,K as Y,m as v,i as J,P as Z,v as tt,t as et}from"./GraphShaderModule-D9wKQV46.js";import{e as it}from"./TechniqueType-CFPo0AVB.js";import{m as st}from"./bitmapUtils-_ZFWjM-_.js";class rt{constructor(t,e,i){this.pixelBlock=t,this.extent=e,this.originalPixelBlock=i}get width(){return this.pixelBlock!=null?this.pixelBlock.width:0}get height(){return this.pixelBlock!=null?this.pixelBlock.height:0}render(t){const e=this.pixelBlock;if(e==null)return;const i=this.filter({extent:this.extent,pixelBlock:this.originalPixelBlock??e});if(i.pixelBlock==null)return;i.pixelBlock.maskIsAlpha&&(i.pixelBlock.premultiplyAlpha=!0);const r=i.pixelBlock.getAsRGBA(),a=t.createImageData(i.pixelBlock.width,i.pixelBlock.height);a.data.set(r),t.putImageData(a,0,0)}getRenderedRasterPixels(){const t=this.filter({extent:this.extent,pixelBlock:this.pixelBlock});return t.pixelBlock==null?null:(t.pixelBlock.maskIsAlpha&&(t.pixelBlock.premultiplyAlpha=!0),{width:t.pixelBlock.width,height:t.pixelBlock.height,renderedRasterPixels:new Uint8Array(t.pixelBlock.getAsRGBA().buffer)})}}function ot(s){return s&&"render"in s}function at(s){const t=document.createElement("canvas");return t.width=s.width,t.height=s.height,s.render(t.getContext("2d")),t}function nt(s){return ot(s)?s instanceof rt?s.getRenderedRasterPixels()?.renderedRasterPixels:at(s):s}let bt=class extends C{constructor(t=null,e=!1){super(),this.blendFunction="standard",this._sourceWidth=0,this._sourceHeight=0,this._textureInvalidated=!1,this.stencilRef=0,this.coordScale=[1,1],this._height=void 0,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this._texture=null,this._width=void 0,this.x=0,this.y=0,this.immutable=e,this.source=t,this.requestRender=this.requestRender.bind(this)}destroy(){this._texture&&(this._texture.dispose(),this._texture=null),this._uploadStatus!=null&&(this._uploadStatus.controller.abort(),this._uploadStatus=null)}get isSourceScaled(){return this.width!==this._sourceWidth||this.height!==this._sourceHeight}get height(){return this._height!==void 0?this._height:this._sourceHeight}set height(t){this._height=t}get source(){return this._source}set source(t){t==null&&this._source==null||(this._source=t,this.invalidateTexture(),this.requestRender())}get texture(){return this._texture}get width(){return this._width!==void 0?this._width:this._sourceWidth}set width(t){this._width=t}beforeRender(t){super.beforeRender(t),this.updateTexture(t)}async setSourceAsync(t,e){this._uploadStatus!=null&&this._uploadStatus.controller.abort();const i=new AbortController,r=k();return y(e,()=>i.abort()),y(i,a=>r.reject(a)),this._uploadStatus={controller:i,resolver:r},this.source=t,r.promise}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this._source instanceof HTMLImageElement?(this._sourceHeight=this._source.naturalHeight,this._sourceWidth=this._source.naturalWidth):this._source&&(this._sourceHeight=this._source.height,this._sourceWidth=this._source.width))}transitionStep(t,e){t>=64&&(this.fadeTransitionEnabled=!1),super.transitionStep(t,e)}setTransform(t){const e=P(this.transforms.displayViewScreenMat3),[i,r]=t.toScreenNoRotation([0,0],[this.x,this.y]),a=this.resolution/this.pixelRatio/t.resolution,o=a*this.width,l=a*this.height,h=Math.PI*this.rotation/180;f(e,e,p(i,r)),f(e,e,p(o/2,l/2)),E(e,e,-h),f(e,e,p(-o/2,-l/2)),I(e,e,p(o,l)),T(this.transforms.displayViewScreenMat3,t.displayViewMat3,e)}setSamplingProfile(t){this._texture&&(t.mips&&!this._texture.descriptor.hasMipmap&&this._texture.generateMipmap(),this._texture.setSamplingMode(t.samplingMode))}bind(t,e){this._texture&&t.bindTexture(this._texture,e)}async updateTexture({context:t,painter:e}){if(!this._textureInvalidated)return;if(this._textureInvalidated=!1,this._texture||(this._texture=this._createTexture(t)),!this.source)return void this._texture.setData(null);this._texture.resize(this._sourceWidth,this._sourceHeight);const i=nt(this.source);try{if(this._uploadStatus!=null){const{controller:r,resolver:a}=this._uploadStatus,o={signal:r.signal},{width:l,height:h}=this,g=this._texture;await e.textureUploadManager.enqueueTextureUpdate({data:i,texture:g,width:l,height:h},o),a.resolve(),this._uploadStatus=null}else this._texture.setData(i);this.ready()}catch(r){A(r)}}onDetach(){this.destroy()}_createTransforms(){return{displayViewScreenMat3:L()}}_createTexture(t){const e=this.immutable,i=new N;return i.internalFormat=e?H.RGBA8:D.RGBA,i.wrapMode=W.CLAMP_TO_EDGE,i.isImmutable=e,i.width=this._sourceWidth,i.height=this._sourceHeight,new G(t,i)}};class M extends J{}n([z(0,B)],M.prototype,"position",void 0);class lt extends tt{}class c extends Z{}n([u(O)],c.prototype,"texture",void 0),n([u(X)],c.prototype,"dvsMat3",void 0),n([u(B)],c.prototype,"coordScale",void 0),n([u(Q)],c.prototype,"opacity",void 0);class d extends V{constructor(){super(...arguments),this.type="BitmapShader"}vertex(t){const e=this.config.dvsMat3.multiply(new j(t.position.multiply(this.config.coordScale),1));return{glPosition:new S(e,1),texcoord:t.position}}fragment(t){const e=new F;let i;return i=this.bicubic?st(this.config.texture,t.texcoord,this.config.coordScale):K(this.config.texture,t.texcoord),e.fragColor=new S(i.rgb.multiply(this.config.opacity),i.a.multiply(this.config.opacity)),e}}n([u(c)],d.prototype,"config",void 0),n([Y],d.prototype,"bicubic",void 0),n([b(0,v(M))],d.prototype,"vertex",null),n([b(0,v(lt))],d.prototype,"fragment",null);const x={nearest:{samplingMode:m.NEAREST,mips:!1},bilinear:{samplingMode:m.LINEAR,mips:!1},bicubic:{samplingMode:m.LINEAR,mips:!1},trilinear:{samplingMode:m.LINEAR_MIPMAP_LINEAR,mips:!0}},ht=(s,t,e)=>{if(e.samplingMode==="dynamic"){const{state:i}=s,r=t.resolution/t.pixelRatio/i.resolution,a=Math.round(s.pixelRatio)!==s.pixelRatio,o=r>1.05||r<.95;return i.rotation||o||a||t.isSourceScaled||t.rotation?x.bilinear:x.nearest}return x[e.samplingMode]};class vt extends et{constructor(){super(...arguments),this.name="BrushBitmap",this.type=it.Bitmap,this.shaders={bitmap:new d}}render(t,e){const{context:i,renderingOptions:r,painter:a}=t;for(const o of e.bitmaps){const l=o.texture;if(!o.source||!o.isReady||l==null)continue;const h=ht(t,o,r);t.timeline.begin(this.name),a.setPipelineState({depth:!1,stencil:{test:{mask:255,ref:o.stencilRef,compare:q.EQUAL,op:{fail:_.KEEP,zFail:_.KEEP,zPass:_.KEEP}},write:!1},color:{write:[!0,!0,!0,!0],blendMode:o.blendFunction==="additive"?"additive":"composite"}}),o.setSamplingProfile(h);const{coordScale:g,computedOpacity:w,transforms:R}=o,$={texture:{texture:l,unit:U},dvsMat3:R.displayViewScreenMat3,coordScale:g,opacity:w};a.submitDrawMesh(i,{shader:this.shaders.bitmap,uniforms:{config:$},defines:{bicubic:h===x.bicubic},optionalAttributes:null,useComputeBuffer:!1},a.quadMesh),t.timeline.end(this.name)}}}export{bt as S,at as f,ot as g,rt as l,vt as p};
