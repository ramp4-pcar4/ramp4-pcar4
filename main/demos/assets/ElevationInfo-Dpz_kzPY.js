import{q as s,v as o,x as d,z as x,fg as c,a4 as y,gA as E,B as v,ay as I,H as w,G as g}from"./main-Crkq4LWq.js";import{m as p}from"./lengthUtils-l5Hl4s3A.js";var u;let i=u=class extends x{constructor(e){super(e)}async collectRequiredFields(e,t){return c(e,t,this.expression)}clone(){return new u({expression:this.expression,title:this.title})}equals(e){return this.expression===e.expression&&this.title===e.title}};s([o({type:String,json:{write:{isRequired:!0}}})],i.prototype,"expression",void 0),s([o({type:String,json:{write:!0}})],i.prototype,"title",void 0),i=u=s([d("esri.symbols.support.FeatureExpressionInfo")],i);const f=i;function F(e){return!!e&&p[e]!=null}function G(e){return 1/(p[e]||1)}function $(){const e=Object.keys(p);return y(e,"decimal-degrees"),e.sort(),e}const j=$();var a;const n=v()({onTheGround:"on-the-ground",relativeToGround:"relative-to-ground",relativeToScene:"relative-to-scene",absoluteHeight:"absolute-height"}),l=new I({foot:"feet",kilometer:"kilometers",meter:"meters",mile:"miles","us-foot":"us-feet",yard:"yards"});let r=class extends x{static{a=this}constructor(e){super(e),this.featureExpressionInfo=void 0,this.offset=null}readFeatureExpressionInfo(e,t){return e!=null?e.expression?e:void 0:t.featureExpression&&t.featureExpression.value===0?{expression:"0"}:void 0}writeFeatureExpressionInfo(e,t,h,m){t[h]=e.write({},m),e.expression==="0"&&(t.featureExpression={value:0})}get mode(){const{offset:e,featureExpressionInfo:t}=this;return this._isOverridden("mode")?this._get("mode"):e!=null||t?"relative-to-ground":"on-the-ground"}set mode(e){this._override("mode",e)}set unit(e){this._set("unit",e)}write(e,t){return this.offset||this.mode||this.featureExpressionInfo||this.unit?super.write(e,t):null}clone(){return new a({mode:this.mode,offset:this.offset,featureExpressionInfo:this.featureExpressionInfo?this.featureExpressionInfo.clone():void 0,unit:this.unit})}equals(e){return this.mode===e.mode&&this.offset===e.offset&&this.unit===e.unit&&E(this.featureExpressionInfo,e.featureExpressionInfo)}};s([o({type:f,json:{write:!0}})],r.prototype,"featureExpressionInfo",void 0),s([w("featureExpressionInfo",["featureExpressionInfo","featureExpression"])],r.prototype,"readFeatureExpressionInfo",null),s([g("featureExpressionInfo",{featureExpressionInfo:{type:f},"featureExpression.value":{type:[0]}})],r.prototype,"writeFeatureExpressionInfo",null),s([o({type:n.apiValues,nonNullable:!0,json:{type:n.jsonValues,read:n.read,write:{writer:n.write,isRequired:!0}}})],r.prototype,"mode",null),s([o({type:Number,json:{write:!0}})],r.prototype,"offset",void 0),s([o({type:j,json:{type:String,read:l.read,write:l.write}})],r.prototype,"unit",null),r=a=s([d("esri.symbols.support.ElevationInfo")],r);export{r as c,F as e,G as n};
