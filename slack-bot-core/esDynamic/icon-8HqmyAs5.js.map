{"version":3,"file":"icon-8HqmyAs5.js","sources":["../../node_modules/@esri/calcite-components/dist/components/icon.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/main/LICENSE.md for details.\n * v2.6.0\n */\nimport { getAssetPath, proxyCustomElement, HTMLElement, h, Host, Build } from '@stencil/core/internal/client/index.js';\nimport { a as getElementDir, t as toAriaBoolean } from './dom.js';\nimport { c as createObserver } from './observers.js';\n\nconst CSS = {\n    icon: \"icon\",\n    flipRtl: \"flip-rtl\",\n};\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nconst iconCache = {};\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nconst requestCache = {};\nconst scaleToPx = {\n    s: 16,\n    m: 24,\n    l: 32,\n};\nasync function fetchIcon({ icon, scale }) {\n    const size = scaleToPx[scale];\n    const name = normalizeIconName(icon);\n    const filled = name.charAt(name.length - 1) === \"F\";\n    const iconName = filled ? name.substring(0, name.length - 1) : name;\n    const id = `${iconName}${size}${filled ? \"F\" : \"\"}`;\n    if (iconCache[id]) {\n        return iconCache[id];\n    }\n    if (!requestCache[id]) {\n        requestCache[id] = fetch(getAssetPath(`./assets/icon/${id}.json`))\n            .then((resp) => resp.json())\n            .catch(() => {\n            console.error(`\"${id}\" is not a valid calcite-ui-icon name`);\n            return \"\";\n        });\n    }\n    const path = await requestCache[id];\n    iconCache[id] = path;\n    return path;\n}\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name â€“ an icon name that can be either kebab or camel-cased\n * @private\n */\nfunction normalizeIconName(name) {\n    const numberLeadingName = !isNaN(Number(name.charAt(0)));\n    const parts = name.split(\"-\");\n    const kebabCased = parts.length > 0;\n    if (kebabCased) {\n        const firstNonDigitInPartPattern = /[a-z]/i;\n        name = parts\n            .map((part, partIndex) => {\n            return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n                const isFirstCharInName = partIndex === 0 && offset === 0;\n                if (isFirstCharInName) {\n                    return match;\n                }\n                return match.toUpperCase();\n            });\n        })\n            .join(\"\");\n    }\n    return numberLeadingName ? `i${name}` : name;\n}\n\nconst iconCss = \":host{display:inline-flex;color:var(--calcite-ui-icon-color)}:host([scale=s]){inline-size:16px;block-size:16px;min-inline-size:16px;min-block-size:16px}:host([scale=m]){inline-size:24px;block-size:24px;min-inline-size:24px;min-block-size:24px}:host([scale=l]){inline-size:32px;block-size:32px;min-inline-size:32px;min-block-size:32px}.flip-rtl{transform:scaleX(-1)}.svg{display:block}:host([hidden]){display:none}[hidden]{display:none}\";\n\nconst Icon = /*@__PURE__*/ proxyCustomElement(class Icon extends HTMLElement {\n    constructor() {\n        super();\n        this.__registerHost();\n        this.__attachShadow();\n        this.icon = null;\n        this.flipRtl = false;\n        this.scale = \"m\";\n        this.textLabel = undefined;\n        this.pathData = undefined;\n        this.visible = false;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    connectedCallback() {\n        this.waitUntilVisible(() => {\n            this.visible = true;\n            this.loadIconPathData();\n        });\n    }\n    disconnectedCallback() {\n        this.intersectionObserver?.disconnect();\n        this.intersectionObserver = null;\n    }\n    async componentWillLoad() {\n        this.loadIconPathData();\n    }\n    render() {\n        const { el, flipRtl, pathData, scale, textLabel } = this;\n        const dir = getElementDir(el);\n        const size = scaleToPx[scale];\n        const semantic = !!textLabel;\n        const paths = [].concat(pathData || \"\");\n        return (h(Host, { \"aria-hidden\": toAriaBoolean(!semantic), \"aria-label\": semantic ? textLabel : null, role: semantic ? \"img\" : null }, h(\"svg\", { \"aria-hidden\": \"true\", class: {\n                [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n                svg: true,\n            }, fill: \"currentColor\", height: \"100%\", viewBox: `0 0 ${size} ${size}`, width: \"100%\", xmlns: \"http://www.w3.org/2000/svg\" }, paths.map((path) => typeof path === \"string\" ? (h(\"path\", { d: path })) : (h(\"path\", { d: path.d, opacity: \"opacity\" in path ? path.opacity : 1 }))))));\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    async loadIconPathData() {\n        const { icon, scale, visible } = this;\n        if (!Build.isBrowser || !icon || !visible) {\n            return;\n        }\n        const pathData = await fetchIcon({ icon, scale });\n        // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n        if (icon !== this.icon) {\n            return;\n        }\n        this.pathData = pathData;\n    }\n    waitUntilVisible(callback) {\n        this.intersectionObserver = createObserver(\"intersection\", (entries) => {\n            entries.forEach((entry) => {\n                if (entry.isIntersecting) {\n                    this.intersectionObserver.disconnect();\n                    this.intersectionObserver = null;\n                    callback();\n                }\n            });\n        }, { rootMargin: \"50px\" });\n        if (!this.intersectionObserver) {\n            callback();\n            return;\n        }\n        this.intersectionObserver.observe(this.el);\n    }\n    static get assetsDirs() { return [\"assets\"]; }\n    get el() { return this; }\n    static get watchers() { return {\n        \"icon\": [\"loadIconPathData\"],\n        \"scale\": [\"loadIconPathData\"]\n    }; }\n    static get style() { return iconCss; }\n}, [1, \"calcite-icon\", {\n        \"icon\": [513],\n        \"flipRtl\": [516, \"flip-rtl\"],\n        \"scale\": [513],\n        \"textLabel\": [1, \"text-label\"],\n        \"pathData\": [32],\n        \"visible\": [32]\n    }, undefined, {\n        \"icon\": [\"loadIconPathData\"],\n        \"scale\": [\"loadIconPathData\"]\n    }]);\nfunction defineCustomElement() {\n    if (typeof customElements === \"undefined\") {\n        return;\n    }\n    const components = [\"calcite-icon\"];\n    components.forEach(tagName => { switch (tagName) {\n        case \"calcite-icon\":\n            if (!customElements.get(tagName)) {\n                customElements.define(tagName, Icon);\n            }\n            break;\n    } });\n}\ndefineCustomElement();\n\nexport { Icon as I, defineCustomElement as d };\n\n//# sourceMappingURL=icon.js.map"],"names":["CSS","iconCache","requestCache","scaleToPx","fetchIcon","icon","scale","size","name","normalizeIconName","filled","id","getAssetPath","resp","path","numberLeadingName","parts","firstNonDigitInPartPattern","part","partIndex","match","offset","iconCss","Icon","proxyCustomElement","HTMLElement","el","flipRtl","pathData","textLabel","dir","getElementDir","semantic","paths","Host","toAriaBoolean","visible","callback","createObserver","entries","entry","defineCustomElement","tagName"],"mappings":"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","x_google_ignoreList":[0]}