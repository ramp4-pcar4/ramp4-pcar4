{"version":3,"file":"index-Bu1Q_e1Y.js","sources":["../../src/fixtures/scrollguard/lang/lang.csv?raw","../../src/fixtures/scrollguard/map-scrollguard.vue","../../src/fixtures/scrollguard/api/scrollguard.ts","../../src/fixtures/scrollguard/index.ts"],"sourcesContent":["export default \"key,enValue,enValid,frValue,frValid\\nscrollguard.instructions,Use ctrl + scroll to zoom the map,1,Utilisez les touches Ctrl et + pour faire un zoom de la carte,1\\n\"","<template>\n    <div class=\"sg\" ref=\"scrollGuard\">\n        <p class=\"sg-label\">{{ t('scrollguard.instructions') }}</p>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { GlobalEvents, InstanceAPI } from '@/api';\nimport { computed, inject, onBeforeUnmount, onMounted, ref } from 'vue';\nimport { useI18n } from 'vue-i18n';\nimport { useScrollguardStore } from './store';\n\nconst scrollguardStore = useScrollguardStore();\nconst { t } = useI18n();\nconst iApi = inject('iApi') as InstanceAPI;\nconst scrollGuard = ref<HTMLElement>();\n\nconst enabled = computed(() => scrollguardStore.enabled);\n\nonMounted(() => {\n    (iApi.$vApp.$el.querySelector('.inner-shell + .esri-view')! as HTMLElement)?.addEventListener(\n        'wheel',\n        wheelHandler,\n        {\n            capture: true\n        }\n    );\n    iApi.event.on(GlobalEvents.MAP_CREATED, () => {\n        (iApi.$vApp.$el.querySelector('.inner-shell + .esri-view')! as HTMLElement)?.addEventListener(\n            'wheel',\n            wheelHandler,\n            {\n                capture: true\n            }\n        );\n    });\n});\n\nonBeforeUnmount(() => {\n    (iApi.$vApp.$el.querySelector('.inner-shell + .esri-view')! as HTMLElement)?.removeEventListener(\n        'wheel',\n        wheelHandler,\n        {\n            capture: true\n        }\n    );\n});\n\nconst wheelHandler = (event: WheelEvent) => {\n    // If the scrollguard is disabled, do not block scrolling.\n    if (!enabled.value) return;\n\n    const scrollGuardClassList = scrollGuard.value!.classList;\n\n    // prevent scroll unless ctrlKey is depressed\n    if (!event.ctrlKey) {\n        event.stopPropagation();\n        scrollGuardClassList.remove('sg-scrolling');\n        scrollGuardClassList.add('sg-active');\n\n        // remove scroll guard notification after two seconds\n        window.setTimeout(() => scrollGuardClassList.remove('sg-active'), 2000);\n    } else {\n        scrollGuardClassList.remove('sg-active');\n        scrollGuardClassList.add('sg-scrolling');\n    }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.sg {\n    transition: opacity ease-in-out;\n    background-color: rgba(0, 0, 0, 0.45);\n    text-align: center;\n\n    position: absolute;\n    padding: 0px;\n    margin: 0px;\n    border-width: 0px;\n    width: 100%;\n    height: 100%;\n    left: 0px;\n    top: 0px;\n\n    transition-duration: 0.8s;\n\n    opacity: 0;\n    pointer-events: none !important;\n    z-index: 100;\n\n    &.sg-active {\n        opacity: 1;\n        transition-duration: 0.3s;\n    }\n\n    &.sg-scrolling {\n        transition-duration: 0.3s;\n    }\n\n    .sg-label {\n        font-size: 1em * 1.5;\n        color: white;\n        position: relative;\n        margin: 0;\n        top: 50% !important;\n        transform: translateY(-50%);\n    }\n}\n</style>\n","import { FixtureInstance } from '@/api';\nimport { useScrollguardStore } from '../store';\nimport type { ScrollguardConfig } from '../store';\n\nexport class ScrollguardAPI extends FixtureInstance {\n    /**\n     * Enables the scrollguard on the map if set to true.\n     *\n     * @param {boolean} value\n     * @memberof ScrollguardAPI\n     */\n    setEnabled(value: boolean) {\n        useScrollguardStore(this.$vApp.$pinia).enabled = value;\n    }\n\n    /**\n     * Parses the scrollguard config JSON snippet from the config file and save to the fixture store.\n     *\n     * @param {ScrollguardConfig} [ScrollguardConfig]\n     * @memberof ScrollguardAPI\n     */\n    _parseConfig(scrollguardConfig?: ScrollguardConfig) {\n        useScrollguardStore(this.$vApp.$pinia).enabled = scrollguardConfig?.enabled || false;\n    }\n\n    get config(): ScrollguardConfig | undefined {\n        return super.config;\n    }\n}\n","import messages from './lang/lang.csv?raw';\nimport ScrollguardV from './map-scrollguard.vue';\nimport { ScrollguardAPI } from './api/scrollguard';\nimport { type ScrollguardConfig, useScrollguardStore } from './store';\n\nclass ScrollguardFixture extends ScrollguardAPI {\n    added(): void {\n        // console.log(`[fixture] ${this.id} added`);\n        // Manually add lang entries to i18n\n        Object.entries(messages).forEach(value => (<any>this.$iApi.$i18n).mergeLocaleMessage(...value));\n\n        this._parseConfig(this.config);\n        const unwatch = this.$vApp.$watch(\n            () => this.config,\n            (value: ScrollguardConfig | undefined) => this._parseConfig(value)\n        );\n\n        const { destroy, el } = this.mount(ScrollguardV, {\n            app: this.$element\n        });\n\n        const innerShell = this.$vApp.$el.getElementsByClassName('inner-shell')[0];\n        innerShell.appendChild(el.childNodes[0]);\n\n        // override the removed method here to get access to scope\n        this.removed = () => {\n            // console.log(`[fixture] ${this.id} removed`);\n            unwatch();\n            destroy();\n\n            const scrollguardStore = useScrollguardStore(this.$vApp.$pinia);\n            scrollguardStore.$reset();\n        };\n    }\n}\n\nexport default ScrollguardFixture;\n"],"names":["messages","scrollguardStore","useScrollguardStore","t","useI18n","iApi","inject","scrollGuard","ref","enabled","computed","onMounted","wheelHandler","GlobalEvents","onBeforeUnmount","event","scrollGuardClassList","ScrollguardAPI","FixtureInstance","value","scrollguardConfig","ScrollguardFixture","unwatch","destroy","el","ScrollguardV"],"mappings":";AAAA,MAAAA,IAAe,EAAC,IAAK,EAAC,4BAA2B,oCAAmC,GAAE,IAAK,EAAC,4BAA2B,gEAA+D,EAAC;;;ACYvL,UAAMC,IAAmBC,KACnB,EAAE,GAAAC,MAAMC,KACRC,IAAOC,EAAO,MAAM,GACpBC,IAAcC,KAEdC,IAAUC,EAAS,MAAMT,EAAiB,OAAO;AAEvD,IAAAU,EAAU,MAAM;AACX,MAAAN,EAAK,MAAM,IAAI,cAAc,2BAA2B,GAAoB;AAAA,QACzE;AAAA,QACAO;AAAA,QACA;AAAA,UACI,SAAS;AAAA,QACb;AAAA,MAAA,GAEJP,EAAK,MAAM,GAAGQ,EAAa,aAAa,MAAM;AACzC,QAAAR,EAAK,MAAM,IAAI,cAAc,2BAA2B,GAAoB;AAAA,UACzE;AAAA,UACAO;AAAA,UACA;AAAA,YACI,SAAS;AAAA,UACb;AAAA,QAAA;AAAA,MACJ,CACH;AAAA,IAAA,CACJ,GAEDE,EAAgB,MAAM;AACjB,MAAAT,EAAK,MAAM,IAAI,cAAc,2BAA2B,GAAoB;AAAA,QACzE;AAAA,QACAO;AAAA,QACA;AAAA,UACI,SAAS;AAAA,QACb;AAAA,MAAA;AAAA,IACJ,CACH;AAEK,UAAAA,IAAe,CAACG,MAAsB;AAEpC,UAAA,CAACN,EAAQ,MAAO;AAEd,YAAAO,IAAuBT,EAAY,MAAO;AAG5C,MAACQ,EAAM,WAQPC,EAAqB,OAAO,WAAW,GACvCA,EAAqB,IAAI,cAAc,MARvCD,EAAM,gBAAgB,GACtBC,EAAqB,OAAO,cAAc,GAC1CA,EAAqB,IAAI,WAAW,GAGpC,OAAO,WAAW,MAAMA,EAAqB,OAAO,WAAW,GAAG,GAAI;AAAA,IAI1E;;;;;;;;;;AC7DG,MAAMC,UAAuBC,EAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOhD,WAAWC,GAAgB;AACvB,IAAAjB,EAAoB,KAAK,MAAM,MAAM,EAAE,UAAUiB;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,aAAaC,GAAuC;AAChD,IAAAlB,EAAoB,KAAK,MAAM,MAAM,EAAE,UAAUkB,GAAmB,WAAW;AAAA,EACnF;AAAA,EAEA,IAAI,SAAwC;AACxC,WAAO,MAAM;AAAA,EACjB;AACJ;ACvBA,MAAMC,UAA2BJ,EAAe;AAAA,EAC5C,QAAc;AAGH,WAAA,QAAQjB,CAAQ,EAAE,QAAQ,CAAAmB,MAAe,KAAK,MAAM,MAAO,mBAAmB,GAAGA,CAAK,CAAC,GAEzF,KAAA,aAAa,KAAK,MAAM;AACvB,UAAAG,IAAU,KAAK,MAAM;AAAA,MACvB,MAAM,KAAK;AAAA,MACX,CAACH,MAAyC,KAAK,aAAaA,CAAK;AAAA,IAAA,GAG/D,EAAE,SAAAI,GAAS,IAAAC,EAAA,IAAO,KAAK,MAAMC,GAAc;AAAA,MAC7C,KAAK,KAAK;AAAA,IAAA,CACb;AAGD,IADmB,KAAK,MAAM,IAAI,uBAAuB,aAAa,EAAE,CAAC,EAC9D,YAAYD,EAAG,WAAW,CAAC,CAAC,GAGvC,KAAK,UAAU,MAAM;AAET,MAAAF,KACAC,KAEiBrB,EAAoB,KAAK,MAAM,MAAM,EAC7C,OAAO;AAAA,IAAA;AAAA,EAEhC;AACJ;"}