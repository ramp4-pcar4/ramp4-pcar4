import{e as r,y as a,fc as l,k as m,fd as g,bl as d,bq as u,p as c,bp as y}from"./main-46bfe858.js";import{a as f}from"./BitmapContainer-4ce3d745.js";import{f as x,u as w}from"./LayerView-4b859dea.js";import{a as v}from"./GraphicsView2D-a124d76c.js";import{n as _}from"./HighlightGraphicContainer-da0fbc71.js";import{v as H}from"./ExportStrategy-810755f6.js";import{i as I}from"./RefreshableLayerView-fe095c03.js";import{S as b,a as V}from"./drapedUtils-c46149f7.js";import"./preload-helper-388ac9d5.js";import"./WGLContainer-e53a2aa7.js";import"./definitions-cc1dbf1d.js";import"./VertexArrayObject-7235cc80.js";import"./Texture-60617f2b.js";import"./enums-64ab819c.js";import"./VertexElementDescriptor-2925c6af.js";import"./color-4c2d892a.js";import"./enums-f1a6a48a.js";import"./ProgramTemplate-42007c37.js";import"./MaterialKey-ca26043c.js";import"./utils-19c662c2.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./GeometryUtils-dd03fc25.js";import"./Container-64c78eb9.js";import"./earcut-61f7b102.js";import"./ExpandedCIM-2ce0d8a5.js";import"./BidiEngine-836b7ef6.js";import"./GeometryUtils-984e8446.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-588a963a.js";import"./floatRGBA-8c551af7.js";import"./normalizeUtilsSync-28982f04.js";import"./projectionSupport-bc3ffa50.js";import"./json-48e3ea08.js";import"./AttributeStoreView-a2e47ee8.js";import"./TiledDisplayObject-6f782928.js";import"./visualVariablesUtils-3b7d454d.js";import"./visualVariablesUtils-482b5d38.js";import"./Matcher-5c077bf0.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-50b8bef8.js";import"./devEnvironmentUtils-f2a1f21e.js";import"./schemaUtils-617d5b39.js";import"./util-884a3ac5.js";import"./ComputedAttributeStorage-accc33e9.js";import"./arcadeTimeUtils-007efe86.js";import"./executionError-c1d13a98.js";import"./centroid-a01fe3e0.js";import"./BaseGraphicContainer-e6cb571e.js";import"./FeatureContainer-a0c92dc0.js";import"./TileContainer-a0269865.js";import"./vec3f32-ad1dc57f.js";import"./Bitmap-b11d35f0.js";import"./popupUtils-a888c487.js";const P=t=>{let e=class extends t{initialize(){this.exportImageParameters=new g({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){return this.view?.floors??null}get exportImageVersion(){return this.exportImageParameters?.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}canResume(){return!!super.canResume()&&!this.timeExtent?.isEmpty}};return r([a()],e.prototype,"exportImageParameters",void 0),r([a({readOnly:!0})],e.prototype,"floors",null),r([a({readOnly:!0})],e.prototype,"exportImageVersion",null),r([a()],e.prototype,"layer",void 0),r([a()],e.prototype,"suspended",void 0),r([a(l)],e.prototype,"timeExtent",void 0),e=r([m("esri.views.layers.MapImageLayerView")],e),e};let s=class extends P(I(x(w))){constructor(){super(...arguments),this._highlightGraphics=new d,this._updateHash=""}fetchPopupFeatures(t,e){return this._popupHighlightHelper.fetchPopupFeatures(t,e)}update(t){const e=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==e&&(this._updateHash=e,this.strategy.update(t).catch(i=>{u(i)||c.getLogger(this.declaredClass).error(i)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:e,version:i}=this.layer,o=i>=10.3,n=i>=10;this._bitmapContainer=new f,this.container.addChild(this._bitmapContainer),this._highlightView=new v({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new _(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new b({createFetchPopupFeaturesQueryGeometry:(p,h)=>V(p,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(p,h)=>{this._highlightView.graphicUpdateHandler({graphic:p,property:h})},layerView:this,updatingHandles:this.updatingHandles}),this.strategy=new H({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:e,imageRotationSupported:o,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(y(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,i,o){return this.layer.fetchImage(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...o})}fetchImageBitmap(t,e,i,o){return this.layer.fetchImageBitmap(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...o})}highlight(t){return this._popupHighlightHelper.highlight(t)}};r([a()],s.prototype,"strategy",void 0),r([a()],s.prototype,"updating",void 0),s=r([m("esri.views.2d.layers.MapImageLayerView2D")],s);const $t=s;export{$t as default};
