import { cC as c, co as r, c as s, cO as i, cP as M, cQ as j, bq as j$1, p as s$1, ar as E$1, r as r$1, cu as ct, cR as ut, U as U$1, be as c$1, cS as nt, cT as st, cU as ot } from './main-5658cd6e.js';
import { g } from './FeatureStore-db16325c.js';
import { f, g as g$1 } from './projectionSupport-90bb00b7.js';
import { e as ee } from './QueryEngine-83668d5d.js';
import { L, I, T } from './geojson-211ae12e.js';
import { o, a, i as i$1 } from './clientSideDefaults-1d7b4fea.js';
import { w, m, f as f$1, a as a$1, g as g$2 } from './sourceUtils-8a4c1a3d.js';
import './preload-helper-a4975f27.js';
import './BoundsStore-1cad0f07.js';
import './PooledRBush-5e47a5ad.js';
import './centroid-c9063998.js';
import './utils-0bd9643b.js';
import './json-ce6e5728.js';
import './QueryEngineResult-0581c70c.js';
import './quantizationUtils-ec270d9a.js';
import './WhereClause-2f1c02a5.js';
import './executionError-ed2c63c0.js';
import './utils-fe8b3668.js';
import './QueryEngineCapabilities-014f3e07.js';
import './timeSupport-6b86616d.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const C={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};class D{constructor(){this._queryEngine=null,this._snapshotFeatures=async e=>{const t=await this._fetch(e);return this._createFeatures(t)};}destroy(){this._queryEngine?.destroy(),this._queryEngine=this._fieldsIndex=this._createDefaultAttributes=null;}async load(e,t={}){this._loadOptions={url:e.url,customParameters:e.customParameters};const i$2=[];await this._checkProjection(e.spatialReference);let r$1=null;e.url&&(r$1=await this._fetch(t?.signal));const n=L(r$1,{geometryType:e.geometryType}),a$1=e.fields||n.fields||[],u=null!=e.hasZ?e.hasZ:n.hasZ,l=n.geometryType;let d=e.objectIdField||n.objectIdFieldName||"__OBJECTID";const p=e.spatialReference||c;let c$1=e.timeInfo;a$1===n.fields&&n.unknownFields.length>0&&i$2.push({name:"geojson-layer:unknown-field-types",message:"Some fields types couldn't be inferred from the features and were dropped",details:{unknownFields:n.unknownFields}});let h=new r(a$1).get(d);h?("esriFieldTypeString"!==h.type&&(h.type="esriFieldTypeOID"),h.editable=!1,h.nullable=!1,d=h.name):(h={alias:d,name:d,type:"string"===n.objectIdFieldType?"esriFieldTypeString":"esriFieldTypeOID",editable:!1,nullable:!1},a$1.unshift(h));const m={};for(const o of a$1){if(null==o.name&&(o.name=o.alias),null==o.alias&&(o.alias=o.name),!o.name)throw new s("geojson-layer:invalid-field-name","field name is missing",{field:o});if(!i.jsonValues.includes(o.type))throw new s("geojson-layer:invalid-field-type",`invalid type for field "${o.name}"`,{field:o});if(o.name!==h.name){const e=M(o);void 0!==e&&(m[o.name]=e);}}this._fieldsIndex=new r(a$1);const f=this._fieldsIndex.requiredFields.indexOf(h);if(f>-1&&this._fieldsIndex.requiredFields.splice(f,1),c$1){if(c$1.startTimeField){const e=this._fieldsIndex.get(c$1.startTimeField);e?(c$1.startTimeField=e.name,e.type="esriFieldTypeDate"):c$1.startTimeField=null;}if(c$1.endTimeField){const e=this._fieldsIndex.get(c$1.endTimeField);e?(c$1.endTimeField=e.name,e.type="esriFieldTypeDate"):c$1.endTimeField=null;}if(c$1.trackIdField){const e=this._fieldsIndex.get(c$1.trackIdField);e?c$1.trackIdField=e.name:(c$1.trackIdField=null,i$2.push({name:"geojson-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:c$1}}));}c$1.startTimeField||c$1.endTimeField||(i$2.push({name:"geojson-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing",details:{timeInfo:c$1}}),c$1=null);}const I=l?o(l):void 0,j={warnings:i$2,featureErrors:[],layerDefinition:{...C,drawingInfo:I??void 0,templates:a(m),extent:void 0,geometryType:l,objectIdField:d,fields:a$1,hasZ:!!u,timeInfo:c$1}};this._queryEngine=new ee({fields:a$1,geometryType:l,hasM:!1,hasZ:u,objectIdField:d,spatialReference:p,timeInfo:c$1,featureStore:new g({geometryType:l,hasM:!1,hasZ:u}),cacheSpatialQueries:!0}),this._createDefaultAttributes=i$1(m,d);const w=await this._createFeatures(r$1);this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,w);const T=this._normalizeFeatures(w,j.warnings,j.featureErrors);this._queryEngine.featureStore.addMany(T);const{fullExtent:x,timeExtent:q}=await this._queryEngine.fetchRecomputedExtents();if(j.layerDefinition.extent=x,q){const{start:e,end:t}=q;j.layerDefinition.timeInfo.timeExtent=[e,t];}return j}async applyEdits(e){const{spatialReference:t,geometryType:s}=this._queryEngine;return await Promise.all([w(t,s),f(e.adds,t),f(e.updates,t)]),await this._waitSnapshotComplete(),this._applyEdits(e)}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){this._loadOptions.customParameters=e,this._snapshotTask?.abort(),this._snapshotTask=j(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,e);const t=this._normalizeFeatures(e);t&&this._queryEngine.featureStore.addMany(t);}),(e=>{this._queryEngine.featureStore.clear(),j$1(e)||s$1.getLogger("esri.layers.GeoJSONLayer").error(new s("geojson-layer:refresh","An error occurred during refresh",{error:e}));})),await this._waitSnapshotComplete();const{fullExtent:r,timeExtent:a}=await this._queryEngine.fetchRecomputedExtents();return {extent:r,timeExtent:a}}async _createFeatures(e){if(null==e)return [];const{geometryType:t,hasZ:s,objectIdField:i}=this._queryEngine,n=I(e,{geometryType:t,hasZ:s,objectIdField:i});if(!E$1(this._queryEngine.spatialReference,c))for(const a of n)r$1(a.geometry)&&(a.geometry=ct(g$1(ut(a.geometry,this._queryEngine.geometryType,this._queryEngine.hasZ,!1),c,this._queryEngine.spatialReference)));return n}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise;}catch{}return this._waitSnapshotComplete()}}async _fetch(t){const{url:s,customParameters:i}=this._loadOptions,r=(await U$1(s,{responseType:"json",query:{...i},signal:t})).data;return await T(r),r}_normalizeFeatures(e,t,s){const{objectIdField:i}=this._queryEngine,r=[];for(const n of e){const e=this._createDefaultAttributes(),a=m(this._fieldsIndex,e,n.attributes,!0,t);a?s?.push(a):(this._assignObjectId(e,n.attributes,!0),n.attributes=e,n.objectId=e[i],r.push(n));}return r}async _applyEdits(e){const{adds:t,updates:s,deletes:i}=e,r={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(r,t),s&&s.length&&this._applyUpdateEdits(r,s),i&&i.length){for(const e of i)r.deleteResults.push(f$1(e));this._queryEngine.featureStore.removeManyById(i);}const{fullExtent:n,timeExtent:a}=await this._queryEngine.fetchRecomputedExtents();return {extent:n,timeExtent:a,featureEditResults:r}}_applyAddEdits(e,t){const{addResults:s}=e,{geometryType:i,hasM:n,hasZ:o,objectIdField:u,spatialReference:l,featureStore:d}=this._queryEngine,c=[];for(const p of t){if(p.geometry&&i!==c$1(p.geometry)){s.push(a$1("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),n=m(this._fieldsIndex,t,p.attributes);if(n)s.push(n);else {if(this._assignObjectId(t,p.attributes),p.attributes=t,null!=p.uid){const t=p.attributes[u];e.uidToObjectId[p.uid]=t;}if(r$1(p.geometry)){const e=p.geometry.spatialReference??l;p.geometry=g$1(g$2(p.geometry,e),e,l);}c.push(p),s.push(f$1(p.attributes[u]));}}d.addMany(nt([],c,i,o,n,u));}_applyUpdateEdits({updateResults:e},t){const{geometryType:s,hasM:i,hasZ:n,objectIdField:o,spatialReference:u,featureStore:l}=this._queryEngine;for(const d of t){const{attributes:t,geometry:p}=d,y=t&&t[o];if(null==y){e.push(a$1(`Identifier field ${o} missing`));continue}if(!l.has(y)){e.push(a$1(`Feature with object id ${y} missing`));continue}const m$1=st(l.getFeature(y),s,n,i);if(r$1(p)){if(s!==c$1(p)){e.push(a$1("Incorrect geometry type."));continue}const t=p.spatialReference??u;m$1.geometry=g$1(g$2(p,t),t,u);}if(t){const s=m(this._fieldsIndex,m$1.attributes,t);if(s){e.push(s);continue}}l.add(ot(m$1,s,n,i,o)),e.push(f$1(y));}}_createObjectIdGenerator(e,t){const s=e.fieldsIndex.get(e.objectIdField);if("esriFieldTypeString"===s.type)return ()=>s.name+"-"+Date.now().toString(16);let i=Number.NEGATIVE_INFINITY;for(const r of t)r.objectId&&(i=Math.max(i,r.objectId));return i=Math.max(0,i)+1,()=>i++}_assignObjectId(e,t,s=!1){const i=this._queryEngine.objectIdField;e[i]=s&&i in t?t[i]:this._objectIdGenerator();}async _checkProjection(e){try{await f(c,e);}catch{throw new s("geojson-layer","Projection not supported")}}}

export { D as default };
