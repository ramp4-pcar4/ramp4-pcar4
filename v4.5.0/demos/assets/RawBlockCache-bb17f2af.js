import { r as r$1, bh as w$1 } from './main-5658cd6e.js';
import { J, C, o as oe } from './rasterProjectionHelper-37018e9e.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
class t{constructor(t=15e3,e=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=t,this._interval=Math.min(t,e);}decreaseRefCount(t,e){const s=t+"/"+e,r=this._cachedBlocks;if(r.has(s)){const t=r.get(s);return t.refCount--,t.refCount<=0&&(r.delete(s),t.controller&&t.controller.abort()),t.refCount}return 0}getBlock(t,e){const s=t+"/"+e,r=this._cachedBlocks;if(r.has(s)){const t=r.get(s);return t.ts=Date.now(),t.refCount++,r.delete(s),r.set(s,t),t.block}return null}putBlock(t,e,s,r){const i=this._cachedBlocks,c=t+"/"+e;if(i.has(c)){const t=i.get(c);t.ts=Date.now(),t.refCount++;}else i.set(c,{block:s,ts:Date.now(),refCount:1,controller:r});this._trim(),this._updateTimer();}deleteBlock(t,e){const s=this._cachedBlocks,r=t+"/"+e;s.has(r)&&s.delete(r);}updateMaxSize(t){this._size=t,this._trim();}empty(){this._cachedBlocks.clear(),this._clearTimer();}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(null!=this._timer)return;const t=this._cachedBlocks;this._timer=setInterval((()=>{const e=Array.from(t),s=Date.now();for(let r=0;r<e.length&&e[r][1].ts<=s-this._duration;r++)t.delete(e[r][0]);0===t.size&&this._clearTimer();}),this._interval);}_trim(){const t=this._cachedBlocks;if(-1===this._size||this._size>=t.size)return;const e=Array.from(t);for(let s=0;s<e.length-this._size;s++)t.delete(e[s][0]);}_clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null);}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.26/esri/copyright.txt for details.
*/
const c=new Map,i=new t;function a(e,t){return null==t?e:`${e}?sliceId=${t}`}function u(e,t){const n={extent:null,rasterInfo:t,cache:new Map},o=c.get(e);return o?(o.push(n),o.length-1):(c.set(e,[n]),0)}function f(e,t){const n=c.get(e);n&&(n[t]=null,n.some((e=>null!=e))||c.delete(e));}function m(e,t,n){const o=c.get(e);if(!o)return null==t?i.decreaseRefCount(e,n):0;if(null==t||null==o[t])return i.decreaseRefCount(e,n);const l=o[t]?.cache,r=l?.get(n);if(l&&r){if(r.refCount--,0===r.refCount){l.delete(n);for(let e=0;e<o.length;e++)o[e]?.cache.delete(n);r.controller&&r.controller.abort();}return r.refCount}return 0}function x(e,t,n){const o=c.get(e);if(!o)return null==t?i.getBlock(e,n):null;if(null==t||null==o[t]){for(let e=0;e<o.length;e++){const t=o[e]?.cache.get(n);if(t)return t.refCount++,t.block}return i.getBlock(e,n)}const l=o[t]?.cache.get(n);if(l)return l.refCount++,l.block;for(let r=0;r<o.length;r++){if(r===t||!o[r])continue;const e=o[r]?.cache,l=e?.get(n);if(e&&l)return l.refCount++,e.set(n,l),l.block}return null}function h(e,t,n,o,l=null){const r=c.get(e);if(!r)return void(null==t&&i.putBlock(e,n,o,l));if(null==t||null==r[t])return void i.putBlock(e,n,o,l);const a={refCount:1,block:o,isResolved:!1,isRejected:!1,controller:l};o.then((()=>a.isResolved=!0)).catch((()=>a.isRejected=!0)),r[t]?.cache.set(n,a);}function d(e,t,n){const o=c.get(e);o?null!=t&&null!=o[t]?o[t]?.cache.delete(n):i.deleteBlock(e,n):null==t&&i.deleteBlock(e,n);}function y(e,t){const n=c.get(e);return n?n[t]??null:null}function g(t,c,i,a,u,f,s=null){const m=y(t,c);if(!m)return;const x=m.extent,{cache:h,rasterInfo:d}=m;if(x&&x.xmin===i.xmin&&x.xmax===i.xmax&&x.ymin===i.ymin&&x.ymax===i.ymax)return;a=a??0;const g=i.clone().normalize(),{spatialReference:p,transform:k}=d,M=new Set;for(let y=0;y<g.length;y++){const t=g[y];if(t.xmax-t.xmin<=a||t.ymax-t.ymin<=a)continue;let c=J(t,p,s);r$1(k)&&(c=k.inverseTransform(c));const i=new w$1({x:a,y:a,spatialReference:t.spatialReference});if(null==u&&!(u=C(i,p,t,s)))return;const{pyramidLevel:m,pyramidResolution:x,excessiveReading:h}=oe(u,d,f||"closest");if(h)return;const{storageInfo:R}=d,{origin:C$1}=R,j={x:Math.max(0,Math.floor((c.xmin-C$1.x)/x.x)),y:Math.max(0,Math.floor((C$1.y-c.ymax)/x.y))},B=Math.ceil((c.xmax-c.xmin)/x.x-.1),b=Math.ceil((c.ymax-c.ymin)/x.y-.1),v=m>0?R.pyramidBlockWidth:R.blockWidth,w=m>0?R.pyramidBlockHeight:R.blockHeight,$=1,I=Math.max(0,Math.floor(j.x/v)-$),H=Math.max(0,Math.floor(j.y/w)-$),E=Math.floor((j.x+B-1)/v)+$,P=Math.floor((j.y+b-1)/w)+$;for(let e=H;e<=P;e++)for(let t=I;t<=E;t++)M.add(`${m}/${e}/${t}`);}h.forEach(((e,t)=>{if(!M.has(t)){const e=h.get(t);(null==e||e.isResolved||e.isRejected)&&h.delete(t);}})),m.extent={xmin:i.xmin,ymin:i.ymin,xmax:i.xmax,ymax:i.ymax};}

export { a, d, f, g, h, m, u, x };
