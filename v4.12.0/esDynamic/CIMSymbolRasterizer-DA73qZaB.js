import{i as F}from"./CIMResourceManager-CQYnPdeC.js";import{a as G,u as O,h as T}from"./CIMSymbolHelper-Bcp4nGf3.js";import{OverrideHelper as q}from"./OverrideHelper-GkMo7t6B.js";import{T as I,R as D}from"./rasterizingUtils-B8CPqgVl.js";import{V as z}from"./utils-BYqzY6_X.js";const A=96/72;class H{constructor(l){this._spatialReference=l,this._imageDataCanvas=null,this._cimResourceManager=new F}get _canvas(){return this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas")),this._imageDataCanvas}get resourceManager(){return this._cimResourceManager}async rasterizeCIMSymbolAsync(l,a,s,R,m,r,g,c,p,M){if(!l)return null;const{data:d}=l;if(!d||d.type!=="CIMSymbolReference"||!d.symbol)return null;const{symbol:_}=d;r||(r=z(_));const o=await q.resolveSymbolOverrides(d,a,this._spatialReference,m,r,g,c),w=this._cimResourceManager,f=[];G.fetchResources(o,w,f),G.fetchFonts(o,w,f),f.length>0&&await Promise.all(f);const{width:t,height:h}=s;let b=k(r,t,h,R,M);const e=G.getEnvelope(o,b,w);if(!e)return null;e.x===1/0&&(e.x=t+2),e.y===1/0&&(e.y=-h/2),e.width===-1/0&&(e.width=t),e.height===-1/0&&(e.height=h);let y=1,S=0,C=0;switch(_.type){case"CIMPointSymbol":case"CIMTextSymbol":{let i=1;e.width>t&&(i=t/e.width);let n=1;e.height>h&&(n=h/e.height),R==="preview"&&(e.width<t&&(i=t/e.width),e.height<h&&(n=h/e.height)),y=Math.min(i,n),S=e.x+e.width/2,C=e.y+e.height/2}break;case"CIMLineSymbol":if(M){C=e.y+e.height/2,S=e.x+e.width/2;const i=e.width-t,n=e.height-h;b={paths:I(b.paths,{xmin:-1*e.width/2+i,xmax:e.width/2-i,ymin:-1*e.height/2+n,ymax:e.height/2-n,width:e.width-2*i,height:e.height-2*n})}}else{(p||e.height>h)&&(y=h/e.height),C=e.y+e.height/2;const i=e.x*y+t/2,n=(e.x+e.width)*y+t/2,{paths:v}=b;v[0][0][0]-=i/y,v[0][2][0]-=(n-t)/y}break;case"CIMPolygonSymbol":if(M){C=e.y+e.height/2,S=e.x+e.width/2;const i=e.width-t,n=e.height-h;b={paths:I(b.rings,{xmin:-1*e.width/2+i,xmax:e.width/2-i,ymin:-1*e.height/2+n,ymax:e.height/2-n,width:e.width-2*i,height:e.height-2*n})}}else{S=e.x+e.width/2,C=e.y+e.height/2;const i=e.x*y+t/2,n=(e.x+e.width)*y+t/2,v=e.y*y+h/2,P=(e.y+e.height)*y+h/2,{rings:u}=b;i<0&&(u[0][0][0]-=i,u[0][3][0]-=i,u[0][4][0]-=i),v<0&&(u[0][0][1]+=v,u[0][1][1]+=v,u[0][4][1]+=v),n>t&&(u[0][1][0]-=n-t,u[0][2][0]-=n-t),P>h&&(u[0][2][1]+=P-h,u[0][3][1]+=P-h)}}const E={type:"cim",data:{type:"CIMSymbolReference",symbol:o}};return this.rasterize(E,t,h,S,C,y,r,1,b)}rasterize(l,a,s,R,m,r,g,c=0,p=null,M=window.devicePixelRatio||1){const{data:d}=l;if(!d||d.type!=="CIMSymbolReference"||!d.symbol)return null;const{symbol:_}=d,o=this._canvas,w=M*A;o.width=a*w,o.height=s*w,g||(g=z(_)),p||(p=k(g,a,s,"legend")),o.width+=2*c,o.height+=2*c;const f=o.getContext("2d",{willReadFrequently:!0}),t=T.createIdentity();return t.translate(-R,-m),t.scale(r*w,-r*w),t.translate(a*w/2+c,s*w/2+c),f.clearRect(0,0,o.width,o.height),new O(f,this._cimResourceManager,t,!0).drawSymbol(_,p),f.getImageData(0,0,o.width,o.height)}}function K(x,l,a,s){return l==="esriGeometryPolygon"?{rings:D(I(x.rings,{xmin:0,ymin:0,xmax:a,ymax:s,width:a,height:s}),-1*a/2,-1*s/2)}:l==="esriGeometryPolyline"?{paths:D(I(x.paths,{xmin:0,ymin:0,xmax:a,ymax:s,width:a,height:s}),-1*a/2,-1*s/2)}:null}function k(x,l,a,s,R){const m=-l/2+1,r=l/2-1,g=a/2-1,c=-a/2+1;if(R&&(x==="esriGeometryPolygon"||x==="esriGeometryPolyline")){const p=K(R,x,l,a);if(p)return p}switch(x){case"esriGeometryPoint":return{x:0,y:0};case"esriGeometryPolyline":return{paths:[[[m,0],[0,0],[r,0]]]};default:return s==="legend"?{rings:[[[m,g],[r,0],[r,c],[m,c],[m,g]]]}:{rings:[[[m,g],[r,g],[r,c],[m,c],[m,g]]]}}}export{H as CIMSymbolRasterizer};
