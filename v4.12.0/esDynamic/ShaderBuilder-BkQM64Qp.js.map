{"version":3,"file":"ShaderBuilder-BkQM64Qp.js","sources":["../../node_modules/@arcgis/core/views/webgl/ShaderBuilder.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.32/esri/copyright.txt for details.\n*/\nimport e from\"../../core/Error.js\";import\"../../core/has.js\";import t from\"../../core/Logger.js\";import{BindType as r}from\"./BindType.js\";const n=()=>t.getLogger(\"esri.views.3d.webgl-engine.core.shaderModules.shaderBuilder\");class s{constructor(){this._includedModules=new Map}include(e,t){this._includedModules.has(e)?this._includedModules.get(e):(this._includedModules.set(e,t),e(this.builder,t))}}class i extends s{constructor(){super(...arguments),this.vertex=new c,this.fragment=new c,this.attributes=new h,this.varyings=new m,this.extensions=new _,this.outputs=new d}get fragmentUniforms(){return this.fragment.uniforms.entries}get builder(){return this}generate(e,t=!1){const r=this.extensions.generateSource(e),n=this.attributes.generateSource(e),s=this.varyings.generateSource(e),i=\"vertex\"===e?this.vertex:this.fragment,o=i.uniforms.generateSource(),a=i.code.generateSource(),u=i.main.generateSource(t),c=\"vertex\"===e?f:g,h=i.constants.generateSource(),m=this.outputs.generateSource(e);return`#version 300 es\\n${r.join(\"\\n\")}\\n${c}\\n${h.join(\"\\n\")}\\n${o.join(\"\\n\")}\\n${n.join(\"\\n\")}\\n${s.join(\"\\n\")}\\n${m.join(\"\\n\")}\\n${a.join(\"\\n\")}\\n${u.join(\"\\n\")}`}generateBind(e){const t=new Map;this.vertex.uniforms.entries.forEach((e=>{const n=e.bind[r.Bind];n&&t.set(e.name,n)})),this.fragment.uniforms.entries.forEach((e=>{const n=e.bind[r.Bind];n&&t.set(e.name,n)}));const n=Array.from(t.values()),s=n.length;return t=>{for(let r=0;r<s;++r)n[r](e,t)}}generateBindPass(e){const t=new Map;this.vertex.uniforms.entries.forEach((e=>{const n=e.bind[r.Pass];n&&t.set(e.name,n)})),this.fragment.uniforms.entries.forEach((e=>{const n=e.bind[r.Pass];n&&t.set(e.name,n)}));const n=Array.from(t.values()),s=n.length;return(t,r)=>{for(let i=0;i<s;++i)n[i](e,t,r)}}generateBindDraw(e){const t=new Map;this.vertex.uniforms.entries.forEach((e=>{const n=e.bind[r.Draw];n&&t.set(e.name,n)})),this.fragment.uniforms.entries.forEach((e=>{const n=e.bind[r.Draw];n&&t.set(e.name,n)}));const n=Array.from(t.values()),s=n.length;return(t,r,i)=>{for(let o=0;o<s;++o)n[o](e,i,t,r)}}}class o{constructor(e){this._stage=e,this._entries=new Map}add(...e){for(const t of e)this._add(t);return this._stage}get(e){return this._entries.get(e)}_add(t){if(null!=t){if(this._entries.has(t.name)&&!this._entries.get(t.name).equals(t))throw new e(`Duplicate uniform name ${t.name} for different uniform type`);this._entries.set(t.name,t)}else n().error(`Trying to add null Uniform from ${(new Error).stack}.`)}generateSource(){return Array.from(this._entries.values()).map((e=>null!=e.arraySize?`uniform ${e.type} ${e.name}[${e.arraySize}];`:`uniform ${e.type} ${e.name};`))}get entries(){return Array.from(this._entries.values())}}class a{constructor(e){this._stage=e,this._bodies=new Array}add(e){return this._bodies.push(e),this._stage}generateSource(t){if(this._bodies.length>0)return[`void main() {\\n ${this._bodies.join(\"\\n\")||\"\"} \\n}`];if(t)throw new e(\"Shader does not contain main function body.\");return[]}}class u{constructor(e){this._stage=e,this._entries=new Array}add(e){return this._entries.push(e),this._stage}generateSource(){return this._entries}}class c extends s{constructor(){super(...arguments),this.uniforms=new o(this),this.main=new a(this),this.code=new u(this),this.constants=new l(this)}get builder(){return this}}class h{constructor(){this._entries=new Array}add(e,t){this._entries.push([e,t])}generateSource(e){return\"fragment\"===e?[]:this._entries.map((e=>`in ${e[1]} ${e[0]};`))}}class m{constructor(){this._entries=new Map}add(e,t){this._entries.has(e)?n().warn(`Ignoring duplicate varying ${t} ${e}`):this._entries.set(e,t)}generateSource(e){const t=new Array;return this._entries.forEach(((r,n)=>t.push(\"vertex\"===e?`out ${r} ${n};`:`in ${r} ${n};`))),t}}class _{constructor(){this._entries=new Set}add(e){this._entries.add(e)}generateSource(e){const t=\"vertex\"===e?_.ALLOWLIST_VERTEX:_.ALLOWLIST_FRAGMENT;return Array.from(this._entries).filter((e=>t.includes(e))).map((e=>`#extension ${e} : enable`))}}_.ALLOWLIST_FRAGMENT=[\"GL_EXT_shader_texture_lod\",\"GL_OES_standard_derivatives\"],_.ALLOWLIST_VERTEX=[];class d{constructor(){this._entries=new Map}add(e,t,r=0){const s=this._entries.get(r);s?.name!==e||s?.type!==t?this._entries.set(r,{name:e,type:t}):n().warn(`Fragment shader output location ${r} occupied`)}generateSource(e){if(\"vertex\"===e)return[];0===this._entries.size&&this._entries.set(0,{name:d.DEFAULT_NAME,type:d.DEFAULT_TYPE});const t=new Array;return this._entries.forEach(((e,r)=>t.push(`layout(location = ${r}) out ${e.type} ${e.name};`))),t}}d.DEFAULT_TYPE=\"vec4\",d.DEFAULT_NAME=\"fragColor\";class l{constructor(e){this._stage=e,this._entries=new Set}add(e,t,r){let n=\"ERROR_CONSTRUCTOR_STRING\";switch(t){case\"float\":n=l._numberToFloatStr(r);break;case\"int\":n=l._numberToIntStr(r);break;case\"bool\":n=r.toString();break;case\"vec2\":n=`vec2(${l._numberToFloatStr(r[0])},                            ${l._numberToFloatStr(r[1])})`;break;case\"vec3\":n=`vec3(${l._numberToFloatStr(r[0])},                            ${l._numberToFloatStr(r[1])},                            ${l._numberToFloatStr(r[2])})`;break;case\"vec4\":n=`vec4(${l._numberToFloatStr(r[0])},                            ${l._numberToFloatStr(r[1])},                            ${l._numberToFloatStr(r[2])},                            ${l._numberToFloatStr(r[3])})`;break;case\"ivec2\":n=`ivec2(${l._numberToIntStr(r[0])},                             ${l._numberToIntStr(r[1])})`;break;case\"ivec3\":n=`ivec3(${l._numberToIntStr(r[0])},                             ${l._numberToIntStr(r[1])},                             ${l._numberToIntStr(r[2])})`;break;case\"ivec4\":n=`ivec4(${l._numberToIntStr(r[0])},                             ${l._numberToIntStr(r[1])},                             ${l._numberToIntStr(r[2])},                             ${l._numberToIntStr(r[3])})`;break;case\"mat2\":case\"mat3\":case\"mat4\":n=`${t}(${Array.prototype.map.call(r,(e=>l._numberToFloatStr(e))).join(\", \")})`}return this._entries.add(`const ${t} ${e} = ${n};`),this._stage}static _numberToIntStr(e){return e.toFixed(0)}static _numberToFloatStr(e){return Number.isInteger(e)?e.toFixed(1):e.toString()}generateSource(){return Array.from(this._entries)}}const g=\"#ifdef GL_FRAGMENT_PRECISION_HIGH\\n  precision highp float;\\n  precision highp int;\\n  precision highp sampler2D;\\n#else\\n  precision mediump float;\\n  precision mediump int;\\n  precision mediump sampler2D;\\n#endif\",f=\"precision highp float;\\nprecision highp sampler2D;\";export{u as Code,s as Includes,a as Main,i as ShaderBuilder,c as Stage,o as Uniforms};\n"],"names":["n","t","s","i","c","h","m","_","d","r","o","a","u","f","g","e","l"],"mappings":"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","x_google_ignoreList":[0]}