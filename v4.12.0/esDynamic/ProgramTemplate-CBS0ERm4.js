import"./main-DnzmeE4U.js";import{c as w}from"./Texture-DXSFJsEu.js";import{H as _,V as T}from"./enums-DBi1-Mm2.js";let Y=class{constructor(a){this._readFile=a}resolveIncludes(a){return this._resolve(a)}_resolve(a,t=new Map){if(t.has(a))return t.get(a);const r=this._read(a);if(!r)throw new Error(`cannot find shader file ${a}`);const e=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm;let i=e.exec(r);const o=[];for(;i!=null;)o.push({path:i[1],start:i.index,length:i[0].length}),i=e.exec(r);let n=0,l="";return o.forEach(s=>{l+=r.slice(n,s.start),l+=t.has(s.path)?"":this._resolve(s.path,t),n=s.start+s.length}),l+=r.slice(n),t.set(a,l),l}_read(a){return this._readFile(a)}};const ee=["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uint","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"],te=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"],L=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"],re=["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT","textureSize","texelFetch"];var p=999,A=9999,D=0,E=1,k=2,F=3,R=4,M=5,ae=6,ne=7,oe=8,j=9,ie=10,V=11,se=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function le(){var a,t,r,e=0,i=0,o=p,n=[],l=[],s=1,h=0,c=0,m=!1,d=!1,u="";return function(f){return l=[],f!==null?X(f.replace?f.replace(/\r\n/g,`
`):f):G()};function g(f){f.length&&l.push({type:se[o],data:f,position:c,line:s,column:h})}function X(f){var v;for(e=0,r=(u+=f).length;a=u[e],e<r;){switch(v=e,o){case D:e=q();break;case E:e=z();break;case k:e=C();break;case F:e=K();break;case R:e=W();break;case V:e=Q();break;case M:e=Z();break;case A:e=J();break;case j:e=$();break;case p:e=H()}v!==e&&(u[v]===`
`?(h=0,++s):++h)}return i+=e,u=u.slice(e),l}function G(f){return n.length&&g(n.join("")),o=ie,g("(eof)"),l}function H(){return n=n.length?[]:n,t==="/"&&a==="*"?(c=i+e-1,o=D,t=a,e+1):t==="/"&&a==="/"?(c=i+e-1,o=E,t=a,e+1):a==="#"?(o=k,c=i+e,e):/\s/.test(a)?(o=j,c=i+e,e):(m=/\d/.test(a),d=/[^\w_]/.test(a),c=i+e,o=m?R:d?F:A,e)}function $(){return/[^\s]/g.test(a)?(g(n.join("")),o=p,e):(n.push(a),t=a,e+1)}function C(){return a!=="\r"&&a!==`
`||t==="\\"?(n.push(a),t=a,e+1):(g(n.join("")),o=p,e)}function z(){return C()}function q(){return a==="/"&&t==="*"?(n.push(a),g(n.join("")),o=p,e+1):(n.push(a),t=a,e+1)}function K(){if(t==="."&&/\d/.test(a))return o=M,e;if(t==="/"&&a==="*")return o=D,e;if(t==="/"&&a==="/")return o=E,e;if(a==="."&&n.length){for(;U(n););return o=M,e}if(a===";"||a===")"||a==="("){if(n.length)for(;U(n););return g(a),o=p,e+1}var f=n.length===2&&a!=="=";if(/[\w_\d\s]/.test(a)||f){for(;U(n););return o=p,e}return n.push(a),t=a,e+1}function U(f){for(var v,y,b=0;;){if(v=L.indexOf(f.slice(0,f.length+b).join("")),y=L[v],v===-1){if(b--+f.length>0)continue;y=f.slice(0,1).join("")}return g(y),c+=y.length,(n=n.slice(y.length)).length}}function Q(){return/[^a-fA-F0-9]/.test(a)?(g(n.join("")),o=p,e):(n.push(a),t=a,e+1)}function W(){return a==="."||/[eE]/.test(a)?(n.push(a),o=M,t=a,e+1):a==="x"&&n.length===1&&n[0]==="0"?(o=V,n.push(a),t=a,e+1):/[^\d]/.test(a)?(g(n.join("")),o=p,e):(n.push(a),t=a,e+1)}function Z(){return a==="f"&&(n.push(a),t=a,e+=1),/[eE]/.test(a)||a==="-"&&/[eE]/.test(t)?(n.push(a),t=a,e+1):/[^\d]/.test(a)?(g(n.join("")),o=p,e):(n.push(a),t=a,e+1)}function J(){if(/[^\d\w_]/.test(a)){var f=n.join("");return o=te.indexOf(f)>-1?oe:re.indexOf(f)>-1?ne:ae,g(n.join("")),o=p,e}return n.push(a),t=a,e+1}}function ce(a){var t=le(),r=[];return r=(r=r.concat(t(a))).concat(t(null))}function fe(a){return ce(a)}function he(a){return a.map(t=>t.type!=="eof"?t.data:"").join("")}const P=new Set(["GL_OES_standard_derivatives","GL_EXT_frag_depth","GL_EXT_draw_buffers","GL_EXT_shader_texture_lod"]);function me(a,t="100",r="300 es"){const e=/^\s*#version\s+([0-9]+(\s+[a-zA-Z]+)?)\s*/;for(const i of a)if(i.type==="preprocessor"){const o=e.exec(i.data);if(o){const n=o[1].replaceAll(/\s{2,}/g," ");if(n===r)return n;if(n===t)return i.data="#version "+r,t;throw new Error("unknown glsl version: "+n)}}return a.splice(0,0,{type:"preprocessor",data:"#version "+r},{type:"whitespace",data:`
`}),null}function ge(a,t){for(let r=t-1;r>=0;r--){const e=a[r];if(e.type!=="whitespace"&&e.type!=="block-comment"){if(e.type!=="keyword")break;if(e.data==="attribute"||e.data==="in")return!0}}return!1}function S(a,t,r,e){e=e||r;for(const i of a)if(i.type==="ident"&&i.data===r)return e in t?t[e]++:t[e]=0,S(a,t,e+"_"+t[e],e);return r}function O(a,t,r="afterVersion"){function e(s,h){for(let c=h;c<s.length;c++){const m=s[c];if(m.type==="operator"&&m.data===";")return c}return null}function i(s){let h=-1,c=0,m=-1;for(let d=0;d<s.length;d++){const u=s[d];if(u.type==="preprocessor"&&(/#(if|ifdef|ifndef)\s+.+/.test(u.data)?++c:/#endif\s*.*/.test(u.data)&&--c),r!=="afterVersion"&&r!=="afterPrecision"||u.type==="preprocessor"&&u.data.startsWith("#version")&&(m=Math.max(m,d)),r==="afterPrecision"&&u.type==="keyword"&&u.data==="precision"){const g=e(s,d);if(g===null)throw new Error("precision statement not followed by any semicolons!");m=Math.max(m,g)}h<m&&c===0&&(h=d)}return h+1}const o={data:`
`,type:"whitespace"},n=s=>s<a.length&&/[^\r\n]$/.test(a[s].data);let l=i(a);n(l-1)&&a.splice(l++,0,o);for(const s of t)a.splice(l++,0,s);n(l-1)&&n(l)&&a.splice(l,0,o)}function ue(a,t,r,e="lowp"){O(a,[{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:e},{type:"whitespace",data:" "},{type:"keyword",data:r},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function de(a,t,r,e,i="lowp"){O(a,[{type:"keyword",data:"layout"},{type:"operator",data:"("},{type:"keyword",data:"location"},{type:"whitespace",data:" "},{type:"operator",data:"="},{type:"whitespace",data:" "},{type:"integer",data:e.toString()},{type:"operator",data:")"},{type:"whitespace",data:" "},{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:i},{type:"whitespace",data:" "},{type:"keyword",data:r},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function _e(a,t){let r,e,i=-1;for(let o=t;o<a.length;o++){const n=a[o];if(n.type==="operator"&&(n.data==="["&&(r=o),n.data==="]")){e=o;break}n.type==="integer"&&(i=parseInt(n.data,10))}return r&&e&&a.splice(r,e-r+1),i}function B(a,t){if(a.startsWith("#version 300"))return a;const r=fe(a);if(me(r,"100","300 es")==="300 es")return a;let e=null,i=null;const o={},n={};for(let l=0;l<r.length;++l){const s=r[l];switch(s.type){case"keyword":t===_.VERTEX_SHADER&&s.data==="attribute"?s.data="in":s.data==="varying"&&(s.data=t===_.VERTEX_SHADER?"out":"in");break;case"builtin":if(/^texture(2D|Cube)(Proj)?(Lod|Grad)?(EXT)?$/.test(s.data.trim())&&(s.data=s.data.replaceAll(/(2D|Cube|EXT)/g,"")),t===_.FRAGMENT_SHADER&&s.data==="gl_FragColor"&&(e||(e=S(r,o,"fragColor"),ue(r,e,"vec4")),s.data=e),t===_.FRAGMENT_SHADER&&s.data==="gl_FragData"){const h=_e(r,l+1),c=S(r,o,"fragData");de(r,c,"vec4",h,"mediump"),s.data=c}else t===_.FRAGMENT_SHADER&&s.data==="gl_FragDepthEXT"&&(i||(i=S(r,o,"gl_FragDepth")),s.data=i);break;case"ident":if(ee.includes(s.data)){if(t===_.VERTEX_SHADER&&ge(r,l))throw new Error("attribute in vertex shader uses a name that is a reserved word in glsl 300 es");s.data in n||(n[s.data]=S(r,o,s.data)),s.data=n[s.data]}}}for(let l=r.length-1;l>=0;--l){const s=r[l];if(s.type==="preprocessor"){const h=s.data.match(/#extension\s+(.*):/);if(h?.[1]&&P.has(h[1].trim())){const d=r[l+1];r.splice(l,d&&d.type==="whitespace"?2:1)}const c=s.data.match(/#ifdef\s+(.*)/);c?.[1]&&P.has(c[1].trim())&&(s.data="#if 1");const m=s.data.match(/#ifndef\s+(.*)/);m?.[1]&&P.has(m[1].trim())&&(s.data="#if 0")}}return pe(a,he(r))}function pe(a,t){return t}const xe=4294967295;class I{constructor(t,r,e,i,o=new Map,n=[]){this._context=t,this._locations=i,this._uniformBlockBindings=o,this._transformFeedbackVaryings=n,this._refCount=1,this._compiled=!1,this._linesOfCode=0,this._nameToUniformLocation=new Map,this._nameToUniform1=new Map,this._nameToUniform1v=new Map,this._nameToUniform2=new Map,this._nameToUniform3=new Map,this._nameToUniform4=new Map,this._nameToUniformMatrix3=new Map,this._nameToUniformMatrix4=new Map,t||console.error("RenderingContext isn't initialized!"),r.length===0&&console.error("Shaders source should not be empty!"),r=B(r,_.VERTEX_SHADER),e=B(e,_.FRAGMENT_SHADER),this._vShader=N(this._context,_.VERTEX_SHADER,r),this._fShader=N(this._context,_.FRAGMENT_SHADER,e),ye.enabled&&(this._linesOfCode=r.match(/\n/g).length+e.match(/\n/g).length+2,this._context.instanceCounter.increment(T.LinesOfCode,this._vShader,this._linesOfCode)),this._vShader&&this._fShader||console.error("Error loading shaders!"),this._context.instanceCounter.increment(T.Shader,this),w()&&(this.vertexShader=r,this.fragmentShader=e),this.usedMemory=r.length+e.length;const l=this._context.gl,s=l.createProgram();l.attachShader(s,this._vShader),l.attachShader(s,this._fShader),this._locations.forEach((h,c)=>l.bindAttribLocation(s,h,c)),this._transformFeedbackVaryings?.length&&l.transformFeedbackVaryings(s,this._transformFeedbackVaryings,l.SEPARATE_ATTRIBS),l.linkProgram(s),w()&&!l.getProgramParameter(s,l.LINK_STATUS)&&console.error(`Could not link shader
validated: ${l.getProgramParameter(s,l.VALIDATE_STATUS)}, gl error ${l.getError()}, vertex: ${l.getShaderParameter(this._vShader,l.COMPILE_STATUS)}, fragment: ${l.getShaderParameter(this._fShader,l.COMPILE_STATUS)}, info log: ${l.getProgramInfoLog(s)}, vertex source: ${this.vertexShader}, fragment source: ${this.fragmentShader}`);for(const[h,c]of this._uniformBlockBindings){const m=l.getUniformBlockIndex(s,h);m<xe&&l.uniformBlockBinding(s,m,c)}this._glName=s,this._context.instanceCounter.increment(T.Program,this)}get glName(){return this._glName}get hasGLName(){return this._glName!=null}get hasTransformFeedbackVaryings(){return!!this._transformFeedbackVaryings?.length}get compiled(){if(this._compiled)return!0;const t=this._context.gl.getExtension("KHR_parallel_shader_compile");return t==null||this.glName==null?(this._compiled=!0,!0):(this._compiled=!!this._context.gl.getProgramParameter(this.glName,t.COMPLETION_STATUS_KHR),this._compiled)}dispose(){if(--this._refCount>0)return;const t=this._context.gl,r=this._context.instanceCounter;this._nameToUniformLocation.forEach(e=>e&&r.decrement(T.Uniform,e)),this._nameToUniformLocation.clear(),this._vShader&&(this._linesOfCode>0&&(r.decrement(T.LinesOfCode,this._vShader,this._linesOfCode),this._linesOfCode=0),t.deleteShader(this._vShader),this._vShader=null,r.decrement(T.Shader,this)),this._fShader&&(t.deleteShader(this._fShader),this._fShader=null),this._glName&&(t.deleteProgram(this._glName),this._glName=null,r.decrement(T.Program,this))}ref(){++this._refCount}_getUniformLocation(t){const r=this._nameToUniformLocation.get(t);if(r!==void 0)return r;if(this.glName){const e=this._context.gl.getUniformLocation(this.glName,t);return this._nameToUniformLocation.set(t,e),e&&this._context.instanceCounter.increment(T.Uniform,e),e}return null}hasUniform(t){return this._getUniformLocation(t)!=null}setUniform1i(t,r){const e=this._nameToUniform1.get(t);e!==void 0&&r===e||(this._context.gl.uniform1i(this._getUniformLocation(t),r),this._nameToUniform1.set(t,r))}setUniform1iv(t,r){x(this._nameToUniform1v,t,r)&&this._context.gl.uniform1iv(this._getUniformLocation(t),r)}setUniform2iv(t,r){x(this._nameToUniform2,t,r)&&this._context.gl.uniform2iv(this._getUniformLocation(t),r)}setUniform3iv(t,r){x(this._nameToUniform3,t,r)&&this._context.gl.uniform3iv(this._getUniformLocation(t),r)}setUniform4iv(t,r){x(this._nameToUniform4,t,r)&&this._context.gl.uniform4iv(this._getUniformLocation(t),r)}setUniform1f(t,r){const e=this._nameToUniform1.get(t);e!==void 0&&r===e||(this._context.gl.uniform1f(this._getUniformLocation(t),r),this._nameToUniform1.set(t,r))}setUniform1fv(t,r){x(this._nameToUniform1v,t,r)&&this._context.gl.uniform1fv(this._getUniformLocation(t),r)}setUniform2f(t,r,e){const i=this._nameToUniform2.get(t);i===void 0?(this._context.gl.uniform2f(this._getUniformLocation(t),r,e),this._nameToUniform2.set(t,[r,e])):r===i[0]&&e===i[1]||(this._context.gl.uniform2f(this._getUniformLocation(t),r,e),i[0]=r,i[1]=e)}setUniform2fv(t,r){x(this._nameToUniform2,t,r)&&this._context.gl.uniform2fv(this._getUniformLocation(t),r)}setUniform3f(t,r,e,i){const o=this._nameToUniform3.get(t);o===void 0?(this._context.gl.uniform3f(this._getUniformLocation(t),r,e,i),this._nameToUniform3.set(t,[r,e,i])):r===o[0]&&e===o[1]&&i===o[2]||(this._context.gl.uniform3f(this._getUniformLocation(t),r,e,i),o[0]=r,o[1]=e,o[2]=i)}setUniform3fv(t,r){const e=this._getUniformLocation(t);e!=null&&x(this._nameToUniform3,t,r)&&this._context.gl.uniform3fv(e,r)}setUniform4f(t,r,e,i,o){const n=this._nameToUniform4.get(t);n===void 0?(this._context.gl.uniform4f(this._getUniformLocation(t),r,e,i,o),this._nameToUniform4.set(t,[r,e,i,o])):n!==void 0&&r===n[0]&&e===n[1]&&i===n[2]&&o===n[3]||(this._context.gl.uniform4f(this._getUniformLocation(t),r,e,i,o),n[0]=r,n[1]=e,n[2]=i,n[3]=o)}setUniform4fv(t,r){const e=this._getUniformLocation(t);e!=null&&x(this._nameToUniform4,t,r)&&this._context.gl.uniform4fv(e,r)}setUniformMatrix3fv(t,r,e=!1){const i=this._getUniformLocation(t);i!=null&&x(this._nameToUniformMatrix3,t,r)&&this._context.gl.uniformMatrix3fv(i,e,r)}setUniformMatrix4fv(t,r,e=!1){const i=this._getUniformLocation(t);i!=null&&x(this._nameToUniformMatrix4,t,r)&&this._context.gl.uniformMatrix4fv(i,e,r)}stop(){}}function N(a,t,r){const e=a.gl,i=e.createShader(t);return e.shaderSource(i,r),e.compileShader(i),w()&&!e.getShaderParameter(i,e.COMPILE_STATUS)&&(console.error("Compile error in ".concat(t===_.VERTEX_SHADER?"vertex":"fragment"," shader")),console.error(e.getShaderInfoLog(i)),console.error(Te(r))),i}function Te(a){let t=2;return a.replaceAll(`
`,()=>`
`+ve(t++)+":")}function ve(a){return a>=1e3?a.toString():("  "+a).slice(-3)}function x(a,t,r){const e=a.get(t);if(!e)return a.set(t,Array.from(r)),!0;const i=r.length;if(e.length!==i)return a.set(t,Array.from(r)),!0;for(let o=0;o<i;++o){const n=r[o];if(e[o]!==n){for(e[o]=n;o<i;++o)e[o]=r[o];return!0}}return!1}const ye={enabled:!1};function Se(a,t,r=""){return new I(a,r+t.shaders.vertexShader,r+t.shaders.fragmentShader,t.attributes)}export{Se as a,Y as e,I as r};
