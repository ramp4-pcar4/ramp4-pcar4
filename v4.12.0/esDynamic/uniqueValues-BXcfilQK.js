import{s as d,b7 as mt,x as w,z as v,K as M,G as $e,bj as ct,q as pt,X as V,bP as dt,cg as yt,aL as N,aA as ht,c2 as ft,dK as gt,c1 as wt,h9 as ge,jy as Be,n as Ft,c3 as vt,az as St,jz as B,bg as xt,aB as Qe,ah as we}from"./main-DnzmeE4U.js";import{j as Fe,N as ae,F as ie,a as q,d as Vt,c as qt,m as ve,q as Pe,C as re,$ as se,P as Re,b as Ge,e as Lt,n as zt,T as Tt,M as _t}from"./utils-BrRx2KpZ.js";import{j as De,M as Q,$ as I,k as bt,U as k,f as $}from"./utils-BG7WTOnW.js";import{p as Et}from"./workers-0oosFQiO.js";import{fromJSON as Ct}from"./jsonUtils-DQiDyVGY.js";import{f as Nt}from"./utils-DuaeuwP5.js";import{f as Mt}from"./executeQuery-D_1SCOAw.js";import{m as P,b as It,a as Ot}from"./Query-CxQYWcUQ.js";import{s as At}from"./quantizationUtils-Cndke4AR.js";import{i as Se}from"./fieldType-VTpxE-EM.js";import{summaryStatistics as R,uniqueValues as xe,histogram as ne,classBreaks as Ve,heatmapStatistics as kt}from"./statsWorker-CzEaGD0z.js";import $t from"./AttributeBinsQuery-BvLa1vu8.js";import{a as Bt,b as Qt,m as Pt,c as Rt}from"./FixedIntervalBinParameters-aoOPIkh7.js";import{y as Gt,p as Dt,a as Jt}from"./Field-Cj6Pz3TI.js";import{f as jt}from"./MapView-BcnxJC0k.js";import{d as Je}from"./FeatureSet-Dxf4LeOj.js";function Ut(e,t){if(!e.view)throw new d(`${t}:missing-parameters`,"'view' parameter is required for binning");if(e.sqlExpression)throw new d(`${t}:invalid-parameters`,"'sqlExpression' parameter is not supported for binning");if(e.view.type==="3d")throw new d(`${t}:invalid-parameters`,"3d view is not supported for binning")}let U=class te{constructor(){this.connection=null}async open(t){this.connection=await Et("statsWorker",{strategy:"distributed",signal:t})}destroy(){this.connection?.close()}static getInstance(){return te.instance||(te.instance=new te),te.instance}async summaryStatistics(t,a){if(!this.connection)throw new d("worker-client:summary-statistics","connection is required");return this.connection.invoke("summaryStatistics",{attribute:t,features:a})}async uniqueValues(t,a){if(!this.connection)throw new d("worker-client:unique-values","connection is required");return this.connection.invoke("uniqueValues",{attribute:t,features:a})}async classBreaks(t,a){if(!this.connection)throw new d("worker-client:class-breaks","connection is required");return this.connection.invoke("classBreaks",{attribute:t,features:a})}async histogram(t,a){if(!this.connection)throw new d("worker-client:histogram","connection is required");return this.connection.invoke("histogram",{attribute:t,features:a})}async heatmapStatistics(t,a){if(!this.connection)throw new d("worker-client:heatmap-statistics","connection is required");return this.connection.invoke("heatmapStatistics",{attribute:t,features:a})}};async function Zt(e,t,a,r){const i=Nt(e),{source:s,checkValueRange:o}=t,{classificationDefinition:n}=a,l={...a.toJSON(),f:"json"};let u=null;if(u=n?.type==="class-breaks-definition"?n.classificationField:n?.attributeField,s){const y={source:s?.toJSON()};l.layer=JSON.stringify(y)}l.classificationDef&&(l.classificationDef=JSON.stringify(l.classificationDef));let m={query:l};r&&(m={...r,...m});const c={url:i.path,field:u,checkValueRange:o},p=i.path+"/generateRenderer";return mt(p,m).then(y=>Wt(c,y))}function Wt(e,t){const{field:a,checkValueRange:r,url:i}=e,s=t?.data;if(!s)return;if(!r){const u=je(s);return Promise.resolve(u)}const o=new P({statisticType:"min",onStatisticField:a}),n=new P({statisticType:"max",onStatisticField:a}),l=new It({outStatistics:[o,n]});return Mt(i,l).then(u=>{const m=u.features[0].attributes;let c=null,p=null;for(const y in m)y.toLowerCase().indexOf("min")===0?c=m[y]:p=m[y];return je(s,c,p)})}function je(e,t,a){if(e.type==="classBreaks"){const i=Ct(e);return{classBreaks:i.classBreakInfos.map((s,o)=>(o===0&&t!=null&&(s.minValue=t),o===i.classBreakInfos.length-1&&a!=null&&(s.maxValue=a),{minValue:s.minValue,maxValue:s.maxValue,label:s.label})),normalizationTotal:i.normalizationTotal}}const{uniqueValueInfos:r}=e;return{uniqueValues:r?.map((i,s)=>(s===0&&t!=null&&(i.value=t),s===r.length-1&&a!=null&&(i.value=a),{count:i.count,value:i.value,label:i.label}))??[]}}let Z=class extends $e{constructor(e){super(e),this.classificationDefinition=null,this.where=null}};w([v({json:{name:"classificationDef",write:!0}})],Z.prototype,"classificationDefinition",void 0),w([v({type:String,json:{write:!0}})],Z.prototype,"where",void 0),Z=w([M("esri.rest.support.GenerateRendererParameters")],Z);const qe=Z;let O=class extends $e{constructor(e){super(e),this.type="unique-value-definition",this.attributeField=null,this.attributeField2=null,this.attributeField3=null,this.fieldDelimiter=null}get uniqueValueFields(){const e=[];return this.attributeField&&e.push(this.attributeField),this.attributeField2&&e.push(this.attributeField2),this.attributeField3&&e.push(this.attributeField3),e}};w([ct({uniqueValueDef:"unique-value-definition"})],O.prototype,"type",void 0),w([v()],O.prototype,"attributeField",void 0),w([v()],O.prototype,"attributeField2",void 0),w([v()],O.prototype,"attributeField3",void 0),w([v({json:{write:!0}})],O.prototype,"fieldDelimiter",void 0),w([v({json:{write:!0}})],O.prototype,"uniqueValueFields",null),O=w([M("esri.rest.support.UniqueValueDefinition")],O);const Ht=O,Ue="no_dominant_category";function Kt(e){return{expression:Xt(e,{returnFieldName:!0,defaultValue:`'${Ue}'`})}}function Xt(e,t){const{returnFieldName:a,defaultValue:r,layer:i}=t,s=[];if(a&&r){const o=e.map(n=>`${n} <= 0`).join(" AND ");s.push(`WHEN ${o} THEN ${r}`)}for(const o of e){const n=e.reduce((m,c)=>(o!==c&&m.push(`${o} > ${c}`),m),[]).join(" AND "),l=i&&De(i,o),u=a&&`'${o}'`?`'${o}'`:l?Q(o):o;s.push(`WHEN ${n} THEN ${u}`)}return`CASE ${s.join(" ")} ELSE ${r||"0"} END`}function Yt(e){return e&&e.map(t=>`$feature["${t}"];`).join(`
`)+`
`||""}function ea(e,t=!1){const a=e.map(r=>`"${r}"`);return`
  var fieldNames = [ ${a.join(", ")} ];
  var numFields = ${a.length};
  var maxValueField = null;
  var maxValue = -Infinity;
  var value, i, totalValue = null;

  for(i = 0; i < numFields; i++) {
    value = $feature[fieldNames[i]];

    if(value > 0) {
      if(value > maxValue) {
        maxValue = value;
        maxValueField = fieldNames[i];
      }
      else if (value == maxValue) {
        maxValueField = null;
      }
    }
    ${t?`
  if(value != null && value >= 0) {
    if (totalValue == null) { totalValue = 0; }
    totalValue = totalValue + value;
  }
  `:""}
  }
  `}function Le(e){const t=ea(e);return`
  ${Yt(e)}
  ${t}
  return maxValueField;
  `}let b=class extends pt{constructor(e){super(e),this.adapterName="layer-adapter"}};w([v({readOnly:!0})],b.prototype,"adapterName",void 0),w([v({constructOnly:!0})],b.prototype,"layer",void 0),w([v()],b.prototype,"geometryType",void 0),w([v()],b.prototype,"objectIdField",void 0),w([v()],b.prototype,"supportsSQLExpression",void 0),w([v()],b.prototype,"hasQueryEngine",void 0),w([v()],b.prototype,"minScale",void 0),w([v()],b.prototype,"maxScale",void 0),w([v()],b.prototype,"fullExtent",void 0),b=w([M("esri.smartMapping.support.adapters.LayerAdapter")],b);const ze=b,ta=/_value$/i,aa=Math.LOG10E,ia={SECOND:1e3,MINUTE:6e4,HOUR:36e5},W=10;function H(e){return e.map(t=>t.toJSON())}function Ze(e,t){const a=[],r=e.layer,i="featureReduction"in r?r.featureReduction:null,s=i?.type==="binning",o=i!=null&&"fields"in i?i.fields?.map(n=>n.name?.toLowerCase()).filter(Boolean):[];if(!s||!t)return a;for(const n of t)o.includes(n.toLowerCase())||a.push(n);return a}function oe(e,t,a){const r=[];if(t)for(const i of t){const s=e.getField(i);s&&a&&"availableFields"in a&&!a.availableFields?.includes(s.name)&&r.push(s.name)}return r}function Te(e,t){const a=e&&e.features;if(a?.length===0)return{avg:null,count:0,max:null,median:null,min:null,nullcount:0,stddev:null,sum:null,variance:null};const r=a?.[0]?.attributes,i={};for(const s in r)i[s.replace(ta,"").toLowerCase()]=r[s];return i.totalcount!=null&&i.totalcount>=i.count&&(i.nullcount=i.totalcount-i.count),delete i.totalcount,i.min===i.max&&i.min!=null&&i.stddev==null&&(i.stddev=i.variance=0),t&&(["min","max","avg","stddev","sum","variance"].forEach(s=>{i[s]!=null&&(i[s]=Math.ceil(i[s]))}),i.min===i.max&&i.min!=null&&(i.avg=i.min,i.stddev=i.variance=0)),i}function ra(e){const t=[],a=e.classBreaks,r=a[0].minValue,i=a[a.length-1].maxValue;a.forEach(o=>{t.push([o.minValue,o.maxValue])});const s={field:e.field,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,layer:e.layer};return{min:r,max:i,intervals:t,sqlExpr:G(s),excludeZerosExpr:e.where,normTotal:e.normalizationTotal}}function G(e){const{field:t,normalizationType:a,normalizationField:r,normalizationTotal:i,layer:s}=e,o=De(s,t);let n=t;return a==="percent-of-total"?n=`((${o?Q(t):t} / ${i}) * 100)`:a==="log"?n=`(log(${t}) * ${aa})`:a==="field"?n=`(${o?Q(t):t} / ${r})`:a==="natural-log"?n=`(log(${o?Q(t):t}))`:a==="square-root"&&(n=`(power(${o?Q(t):t}, 0.5))`),n}function We(e,t){let a;if(t=t.toLowerCase(),e){for(const r in e)if(r.toLowerCase()!==t){a=e[r];break}}return a}function K(e,t){let a;if(t=t.toLowerCase(),e){for(const r in e)if(r.toLowerCase()===t){a=e[r];break}}return a}function He(e,t,a,r,i){const s={},o="countOFExpr";e&&e.features&&e.features.forEach(l=>{const u=l.attributes,m=We(u,o),c=K(u,o);m!=null&&c!=null&&m!==0&&(s[m]=c)});const n=[];return Fe(t,a,r).forEach((l,u)=>{const m=(u+1).toString();n.push({minValue:l[0],maxValue:l[1],count:s.hasOwnProperty(m)?s[m]:0})}),{bins:n,minValue:t,maxValue:a,normalizationTotal:i}}async function _e(e,t){const a=e&&e.features,{field:r,field2:i,field3:s,fieldDelimiter:o,layer:n,view:l,signal:u,labels:m}=t,c=`countOF${(!r||!i)&&r||"Expr"}`,p={};let y=!1;for(const f of a){const g=f.attributes,S=K(g,c);let F=r?K(g,r):We(g,c),x=i?K(g,i):null,L=s?K(g,s):null;F===null&&S===0&&(y=!0),(F==null||typeof F=="string"&&F.trim()==="")&&(F=null),i&&(x==null||typeof x=="string"&&x.trim()==="")&&(x=null),s&&(L==null||typeof L=="string"&&L.trim()==="")&&(L=null);let z=F;i&&(z=`${ve(z)}${o}${ve(x)}`,s&&(z=`${z}${o}${ve(L)}`)),p[z]==null?p[z]={count:S,data:z}:p[z].count=p[z].count+S}if(r&&y){const f=r+" is NULL";try{const g=await n.queryFeatureCount({whereClause:f,view:l,signal:u});return p.null.count=p.null.count+g,be(p,m)}catch{return V(u),be(p,m)}}return be(p,m)}function be(e,t){if(t)for(const a in e)e[a].label=t[a];return{count:e}}async function Ee(e,t,a){const r=e?a.getField(e):null,i=r?a.getFieldDomain(r.name):null;if(i)return i;const{uniqueValueInfos:s}=await a.uniqueValues({field:e,sqlWhere:t.sqlWhere,features:t.features,useFeaturesInView:t.useFeaturesInView,view:t.view,signal:t.signal}),o=s.map(n=>new Dt({code:n.value}));return new Jt({codedValues:o})}async function le(e,t){if(!e.returnAllCodedValues)return[];const{field:a,field2:r,field3:i}=e;if(a&&!r){const o=a?t.getField(a):null,n=o?t.getFieldDomain(o.name):null;return n?[n]:[]}const s=[];return a&&(s.push(Ee(a,e,t)),r&&(s.push(Ee(r,e,t)),i&&s.push(Ee(i,e,t)))),Promise.all(s)}function sa(e,t){return bt(e,new Date(0),t,"milliseconds").sqlExpression}function na(e,t){return`EXTRACT(${t} FROM ${e}) * ${ia[t]}`}function oa(e){return e?Q(["HOUR","MINUTE","SECOND"].map(t=>`(${na(e,t)})`).join(" + ")):null}function E(e){return{viewingMode:e.type==="2d"?"map":e.viewingMode,scale:e.scale,spatialReference:e.spatialReference?.toJSON()}}function Ce(e,t){const a=new Set(e.map(i=>i.value)),r=t.filter(i=>!a.has(i));for(const i of r)e.push({value:i,count:0});e.sort((i,s)=>t.indexOf(i.value)-t.indexOf(s.value));for(const i of e)i.value===Ue&&(i.value=null);return{predominantCategoryInfos:e}}function Ke(e){const t="featureReduction"in e?e.featureReduction:null;return((t!=null&&"fields"in t?t.fields:null)??[]).map(a=>{const r=la(a,e.fieldsIndex);return r?new Gt({type:r,name:a.name,alias:a.alias}):null}).filter(dt)}function la(e,t){switch(e.statisticType){case"avg":case"avg_angle":return"double";case"count":return"integer";case"min":case"max":case"sum":return e.onStatisticField?t.get(e.onStatisticField)?.type??null:e.onStatisticExpression?e.onStatisticExpression.returnType==="string"?null:"double":null;case"mode":return e.onStatisticField?t.get(e.onStatisticField)?.type??null:e.onStatisticExpression?e.onStatisticExpression.returnType==="string"?"string":"double":null;default:return null}}function Xe(e,t){return I(t)?sa(e,t?.name):N(t)?oa(t?.name):null}function Ne(e,t,a){const{field:r,normalizationType:i,normalizationField:s,normalizationTotal:o,minValue:n,maxValue:l,filter:u}=t,m=e.supportsSQLExpression?Xe(e,a)||t.sqlExpression:null,c=G({field:r,normalizationType:i,normalizationField:s,normalizationTotal:o,layer:e}),p=m||c,y=p?ae(p,n,l):null,f=ie({field:r,normalizationField:s,normalizationType:i}),g=q(t.sqlWhere,f),S=q(g,y),F=Vt({normalizationField:s,normalizationType:i,sqlExpression:m,supportsSQLExpression:e.supportsSQLExpression,minValue:n,maxValue:l}),x=yt(e.getField(r??void 0)),{include:L,exclude:z}=t.outStatisticTypes||{},he=qt.filter(_=>(!L||L.includes(_))&&(!z||!z.includes(_))&&(_==="nullcount"?F:!x||_==="count")),A=e.createQuery();return A.where=q(A.where,S),A.sqlFormat=m?"standard":null,A.outStatistics=he.map(_=>{const D=new P;let J=null,j=null,ke=`${_}_value`;if(_==="variance")J="var",j=p;else if(_==="nullcount"){const fe=e.objectIdField;J="count",j=fe&&e.getField(fe)?fe:"1",ke="totalcount_value"}else _==="median"?(J="percentile-continuous",j=p,D.statisticParameters={value:.5}):(J=_,j=p);return D.statisticType=J,D.onStatisticField=j,D.outStatisticFieldName=ke,D}),C(A,u),A}function C(e,t){t&&(e.geometry=t.geometry,e.spatialRelationship=t.spatialRelationship)}function Ye(e,t){const{field:a,field2:r,field3:i,sqlExpression:s}=t,o=!(!a||!r),n=e.createQuery();return n.where=q(n.where,t.sqlWhere),n.sqlFormat=s?"standard":null,n.outStatistics=[ua(o?null:a,o?"1":s)].filter(Boolean),n.groupByFieldsForStatistics=[a||s,r,i].filter(Boolean),C(n,t.filter),n}function ua(e,t){const a="countOF"+(e||"Expr"),r=new P;return r.statisticType="count",r.onStatisticField=t?"1":e,r.outStatisticFieldName=a,r}function ue(e,t,a,r=W,i,s,o){const{min:n,max:l,normTotal:u,excludeZerosExpr:m}=t,c=t.intervals||Fe(n,l,r),p=t.sqlExpr||a;return ma(e,c,p,m,i,s,o).then(y=>({bins:y.map((f,g)=>({minValue:c[g][0],maxValue:c[g][1],count:f.status==="fulfilled"?f.value:0})),minValue:n,maxValue:l,normalizationTotal:u}))}function ma(e,t,a,r,i,s,o){const n=[],l=t.length;for(let u=0;u<l;u++){const m=q(r,q(a+" >= "+t[u][0],t[u][1]!==null?a+(u===l-1?" <= ":" < ")+t[u][1]:""));n.push(m)}return Promise.allSettled(n.map(u=>e.queryFeatureCount({whereClause:u,view:i,filter:s,signal:o})))}const et="countOFExpr",ca="lowerBoundary",pa="upperBoundary";function tt(e,t,a){const r=e.valueExpression||e.sqlExpression,i=e.signal;if(!r){const{field:s,normalizationType:o,normalizationField:n}=e,l=s?t.getField(s):null,u=I(l)||N(l);return{sqlExpression:u?Xe(t,l):G({field:s,normalizationType:o,normalizationField:n,normalizationTotal:a,layer:t}),sqlWhere:u?null:e.sqlWhere||ie({field:s,normalizationType:o,normalizationField:n}),filter:e.filter,signal:i}}return{valueExpression:e.valueExpression,sqlExpression:e.sqlExpression,sqlWhere:e.sqlWhere,filter:e.filter,signal:i}}async function Me(e,t,a){const{field:r,normalizationType:i,normalizationField:s,signal:o}=e,n=ie({field:r,normalizationType:i,normalizationField:s}),l=new qe({classificationDefinition:Pe({field:r,normalizationType:i,normalizationField:s,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,definedInterval:e.definedInterval,breakCount:e.numBins||W}),where:q(n,a)});return t.generateRenderer(l,o).then(u=>{const{normalizationTotal:m,classBreaks:c}=u;return ra({field:r,normalizationType:i,normalizationField:s,normalizationTotal:m,classBreaks:c,where:n,layer:t})})}async function da(e,t,a,r,i){const{field:s,sqlExpression:o,normalizationField:n,classificationMethod:l,normalizationType:u}=e,m=s?t.getField(s):null,c=N(m),p=wt(m)||c,y=e.numBins||W;if(p){if(u||l)throw new d(`${t.adapterName}:not-supported`,"NormalizationType and classificationMethod are not supported for date-only and time-only fields");const f=(r-a)/y/1e3,g=f/86400;return new Bt({field:s,expression:o,interval:{unit:c?"seconds":"days",value:Math.ceil(c?f:g)},start:a,end:r})}if(l==="defined-interval")return new Qt({field:s,expression:o,normalizationField:n,normalizationTotal:i,normalizationType:u,interval:e.definedInterval??Math.ceil((r-a)/y),start:u?null:a,end:u?null:r,normalizationMinValue:u?a:null,normalizationMaxValue:u?r:null});if(l==="manual")throw new d(`${t.adapterName}:not-supported`,"Layer does not support manual classificationMethod");if(l==="natural-breaks"||l==="quantile"||l==="standard-deviation"){const f=G({field:s,normalizationField:n,normalizationTotal:i,normalizationType:u,layer:t}),g=e.minValue!==null&&e.maxValue!==null?ae(f,e.minValue,e.maxValue):void 0,S=await Me(e,t,g);if(!S.intervals)throw new d(`${t.adapterName}:invalid`,"Invalid intervals returned from generate renderer");const F=[a,...S.intervals.map(x=>x[1])];return new Pt({field:u?null:s,expression:u?f:o,boundaries:F})}return new Rt({field:s,normalizationField:n,normalizationTotal:i,normalizationType:u,expression:o,numBins:y,start:u?null:a,end:u?null:r,normalizationMinValue:u?a:null,normalizationMaxValue:u?r:null})}function at(e,t,a,r){return a!=null&&r!=null?Promise.resolve({min:a,max:r}):t.summaryStatistics({...e,outStatisticTypes:{include:["min","max"]}}).then(i=>({min:i.min,max:i.max}))}async function it(e,t,a,r){const{field:i,minValue:s,maxValue:o,filter:n,view:l}=e,u=i?t.getField(i):null,m=ht(u)||ft(u),c=tt(e,t,a),{min:p,max:y}=await at(c,t,s,o);if(p==null||y==null)return{query:null,min:p,max:y};const f=new P({statisticType:"count",outStatisticFieldName:et,onStatisticField:"1"}),g=q(r,c.sqlWhere),S="lowerBoundary",F="upperBoundary",x=new $t({binParameters:await da(e,t,p,y,a),outStatistics:[f],binOrder:e.sortOrder,where:g,lowerBoundaryAlias:S,upperBoundaryAlias:F,outTimeZone:l?.timeZone&&m?gt(l.timeZone):null});return C(x,n),{query:x,min:p,max:y}}function rt(e,t=!1){return typeof e!="string"?e:(t?new Date(`1970-01-01T${e}Z`):new Date(e)).getTime()}function st(e,t,a){const r=N(t);return{...a,bins:e.features.map(i=>({minValue:rt(i.attributes[ca],r),maxValue:rt(i.attributes[pa],r),count:i.attributes[et]}))}}function nt(e,t,a){const{valueExpression:r,view:i}=e,{featuresJSON:s,graphics:o,fieldInfos:n}=t,l={field:e.field,valueExpression:r,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:a,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return r&&i&&(s||o)&&(l.viewInfoParams=E(i),l.timeZone=i.timeZone,l.fieldInfos=n),l}const ya=5;let me=null,X=class extends ze{constructor(){super(...arguments),this._hasLocalSource=!1,this.adapterName="in-memory-layer-adapter"}destroy(){this.workerClient?.destroy()}async _waitForLayerViewUpdate(e){if(!e)throw new d(`${this.adapterName}:insufficient-data", "layerView is required to fetch the features`);const t=new AbortController,a=ge(()=>!e.updating,t.signal);await Be(a,5e3,t).catch(r=>{throw Ft.getLogger(this).warn("LayerView is taking too long to update. Aborting fetch from layerView."),r})}async _fetchFeatureSetFromMemory(e,t,a){const r=this.layer;if(this._hasLocalSource&&"queryFeatures"in r)return r.queryFeatures(e);if(!t)throw new d(`${this.adapterName}:insufficient-data`,"view is required to fetch the features from layerView");const i=await t.whenLayerView(this.layer);return await this._waitForLayerViewUpdate(i),i.queryFeatures(e,{signal:a})}async _fetchFeaturesFromMemory(e,t,a,r){const i=this.layer,s=r==="json";if(this._hasLocalSource&&"queryFeatures"in i){const n=await i.queryFeatures(t);return s?H(n.features):n.features}if(await this._waitForLayerViewUpdate(e),s&&"queryFeaturesJSON"in e&&e.queryFeaturesJSON){const{features:n}=await e.queryFeaturesJSON(t,{signal:a});return n}if(!("queryFeatures"in e))throw new d(`${this.adapterName}:not-supported`,"'queryFeatures' is not supported on the layerView");const o=await e.queryFeatures(t,{signal:a});return s?H(o.features):o.features}_fetchFeaturesForStats(e,t){return k({field:e.field,field2:e.field2,field3:e.field3,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then(a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,filter:e.filter,requiredFields:a,signal:e.signal},t))}async _summaryStatsFromClientQuery(e,t){const{view:a,signal:r}=e,i=Ne(this,e,t),s=await this._fetchFeatureSetFromMemory(i,a,r),o=Te(s,I(t)||N(t));return re(o,e.outStatisticTypes)}async _getNormalizationTotalFromMemory(e,t,a){const{featuresJSON:r,graphics:i,layerView:s,query:o}=t,n={include:["sum"]},l=(!r&&!i&&s&&"querySummaryStatistics"in s?await s.querySummaryStatistics(o,{field:e},{signal:a}):r?await this.workerClient.summaryStatistics({field:e,outStatisticTypes:n},r):await R({attribute:{field:e,outStatisticTypes:n},features:i??[]})).sum;if(l==null)throw new d(`${this.adapterName}:invalid`,"invalid normalizationTotal");return l}async _summaryStatsFromMemory(e,t){const{view:a,field:r,valueExpression:i,normalizationType:s,signal:o}=e,n={field:r,valueExpression:i,normalizationType:s,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes},{featuresJSON:l,graphics:u,layerView:m,query:c,fieldInfos:p}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"querySummaryStatistics"});return i&&a&&(l||u)&&(n.fieldType=t?.type?Se.toJSON(t.type):null,n.viewInfoParams=E(a),n.timeZone=a.timeZone,n.fieldInfos=p),s==="percent-of-total"&&e.normalizationTotal==null&&(n.normalizationTotal=await this._getNormalizationTotalFromMemory(r,{featuresJSON:l,graphics:u,layerView:m,query:c},o)),!l&&!u&&m&&"querySummaryStatistics"in m?m.querySummaryStatistics(c,n,{signal:o}):l?this.workerClient.summaryStatistics(n,l):R({attribute:n,features:u})}async _getFilteredFeatures(e,t){let a=[];if(t?.spatialRelationship==="intersects"){const{intersect:r}=await import("./geometryEngineAsync-CopjVLIi.js"),i=t.geometry!=null?t.geometry:null;for(const s of e){const o=s.geometry!=null?s.geometry:null;o&&i&&await r(o,i)&&a.push(s)}}else a=e;return e.length&&"declaredClass"in e[0]&&e[0].declaredClass==="esri.Graphic"?{graphics:a}:{featuresJSON:a}}async _processStatsFromMemoryParams(e){const{features:t,filter:a}=e;if(t?.length)return this._getFilteredFeatures(t,a);const{view:r,field:i,field2:s,field3:o,normalizationField:n,valueExpression:l,layerViewFunc:u,signal:m}=e;let c=e.returnGeometry;if(c==null&&l){if(!me){const{arcadeUtils:x}=await vt();me=x}const F=me.hasGeometryOperations(l);F&&await me.enableGeometryOperations(),c=F}let p=null,y=null,f=null,g=null,S=null;if(r)try{const F=this.layer.type==="subtype-sublayer"?this.layer.parent:this.layer;p=await r.whenLayerView(F),y=u!=null&&u in p&&typeof p[u]=="function"}catch{y=!1}if(y)try{await this._waitForLayerViewUpdate(p);const F=await k({field:i,field2:s,field3:o,normalizationField:n,valueExpression:l});oe(this,F,p).length?y=!1:(f=this.layer.createQuery(),f.outFields=F,f.returnGeometry=!1,C(f,a)),p.suspended&&(y=!1)}catch{y=!1}return y||(g=await this._fetchFeaturesForStats({field:i,field2:s,field3:o,valueExpression:l,normalizationField:n,returnGeometry:c,filter:a,view:r,signal:m},"json"),S=(await k({valueExpression:l})).map(F=>this.getField(F)?.toJSON()).filter(Boolean)),{layerView:p,query:f,featuresJSON:g,fieldInfos:S}}async _uvFromClientQuery(e,t){const{view:a,signal:r}=e,i=Ye(this,e),s=await this._fetchFeatureSetFromMemory(i,a,r),o=await _e(s,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:$,view:e.view,signal:e.signal});return se(o,t,e.returnAllCodedValues,$)}async _uvFromMemory(e,t){const{view:a,field:r,valueExpression:i,returnAllCodedValues:s,signal:o}=e,{featuresJSON:n,graphics:l,layerView:u,query:m,fieldInfos:c}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryUniqueValues"}),p={field:r,field2:e.field2,field3:e.field3,fieldDelimiter:$,valueExpression:i,domains:t,returnAllCodedValues:s};return i&&a&&(n||l)&&(p.viewInfoParams=E(a),p.timeZone=a.timeZone,p.fieldInfos=c),!n&&!l&&u&&"queryUniqueValues"in u?u.queryUniqueValues(m,p,{signal:o}):n?this.workerClient.uniqueValues(p,n):xe({attribute:p,features:l})}_histogramForField(e){let t=null;return t=e.minValue!=null&&e.maxValue!=null?Promise.resolve({min:e.minValue,max:e.maxValue}):this.summaryStatistics({...e,outStatisticTypes:{include:["min","max","count"]}}).then(a=>{if(!a.count)throw new d(`${this.adapterName}:insufficient-data`,"Either the layer has no features or none of the features have data for the field");return{min:a.min,max:a.max}}),t.then(a=>ue(this,{min:a.min,max:a.max},e.field,e.numBins??void 0,e.view,e.filter,e.signal))}async _histogramFromQueryAttributeBinsFromMemory(e){const{field:t,normalizationType:a,signal:r}=e,i=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAttributeBins"}),{featuresJSON:s,graphics:o,layerView:n,query:l}=i,u=a==="percent-of-total"?e.normalizationTotal??await this._getNormalizationTotalFromMemory(t,i,r):void 0;if(!n||!("queryAttributeBins"in n)||s||o){const f=nt(e,i,u);return s?this.workerClient.histogram(f,s):ne({attribute:f,features:o})}const{query:m,min:c,max:p}=await it(e,this,u,l?.where);if(!m)return{bins:[],minValue:c,maxValue:p,normalizationTotal:u};const y=await n.queryAttributeBins(m,{signal:r});return st(y,t?this.getField(t):null,{minValue:c,maxValue:p,normalizationTotal:u})}async _histogramFromMemory(e){const{field:t,signal:a}=e,r=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryHistogram"}),{featuresJSON:i,graphics:s,layerView:o,query:n}=r,l=e.normalizationType==="percent-of-total"?e.normalizationTotal??await this._getNormalizationTotalFromMemory(t,r,a):void 0,u=nt(e,r,l);return!i&&!s&&o&&"queryHistogram"in o?o.queryHistogram(n,u,{signal:a}):i?this.workerClient.histogram(u,i):ne({attribute:u,features:s})}_classBreaksFromInterpolation(e){const{minValue:t,maxValue:a}=e,r=e.numClasses||ya,i=[],s=(a-t)/r;for(let l=0;l<r;l++){const u=t+l*s;i.push({minValue:u,maxValue:u+s})}i[r-1].maxValue=a;const o={classBreaks:i,normalizationTotal:e.normalizationTotal},n=Re(o,e.classificationMethod);return Promise.resolve(n)}async _classBreaksFromMemory(e){const{view:t,field:a,valueExpression:r,signal:i}=e,{featuresJSON:s,graphics:o,layerView:n,query:l,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryClassBreaks"}),m={field:a,valueExpression:r,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return r&&t&&(s||o)&&(m.viewInfoParams=E(t),m.timeZone=t.timeZone,m.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(m.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:s,graphics:o,layerView:n,query:l},i)),!s&&!o&&n&&"queryClassBreaks"in n?n.queryClassBreaks(l,m,{signal:i}):s?this.workerClient.classBreaks(m,s):Ve({attribute:m,features:o})}async _heatmapStatsFromMemory(e){const{view:t,field:a,radius:r,signal:i}=e;St(t,"InMemoryLayerAdapter: must have a view");try{const u=await t.whenLayerView(this.layer);if("queryHeatmapStatistics"in u&&!u.updating&&!e.filter)return await u.queryHeatmapStatistics({field:e.field,radius:e.radius})}catch{V(i)}const{featuresJSON:s,graphics:o}=await this._processStatsFromMemoryParams({...e,returnGeometry:!0}),n=new Ot({extent:t.extent,tolerance:t.type==="2d"?t.state.resolution:t.pixelSizeAt?.(t.center)}),l={field:a,radius:r,transform:At(n),spatialReference:t.spatialReference?.toJSON(),size:t.size};return s?.length||o?.length?s?this.workerClient.heatmapStatistics(l,s):kt({attribute:l,features:o}):{min:null,max:null}}getField(e=""){return this.layer.getField(e)}getFieldUsageInfo(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!0,supportsStatistics:!0}:null}getFieldDomain(e,t){return this.layer.getFieldDomain(e,t)}createQuery(){return this.layer.createQuery()}async summaryStatistics(e){const{field:t,valueExpression:a,sqlExpression:r,features:i,view:s}=e,o=t?this.getField(t):null,n=!!a,l=s?.type==="3d";if(!a&&r&&!this.supportsSQLExpression)throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return n||i||l?this._summaryStatsFromMemory(e,o):this._summaryStatsFromClientQuery(e,o)}async uniqueValues(e){const{valueExpression:t,sqlExpression:a,features:r,view:i}=e,s=await le(e,this),o=!!t,n=i?.type==="3d";if(!t&&a&&!this.supportsSQLExpression)throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return o||r||n?this._uvFromMemory(e,s):this._uvFromClientQuery(e,s)}async histogram(e){const{features:t,valueExpression:a,normalizationType:r,sqlExpression:i}=e,s=t||!!a;if(!a&&i&&!this.supportsSQLExpression)throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return s||r?this._histogramFromMemory(e):this._histogramForField(e)}async classBreaks(e){return e.analyzeData!==!1?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)}async queryFeatureCount(e){const{whereClause:t,view:a,signal:r}=e;if(!a)throw new d(`${this.adapterName}:insufficient-data`,"view is required to fetch the features from layerView");const i=this.layer.createQuery();i.where=q(i.where,t);const s=await a.whenLayerView(this.layer);return await ge(()=>!s.updating,r),s.queryFeatureCount(i,{signal:r})}async generateRenderer(e,t){throw new d(`${this.adapterName}:not-supported`,"Layer does not support generateRenderer operation")}async predominantCategories(e){const{fields:t,view:a,signal:r,filter:i}=e,s=Le(t),o=await this._uvFromMemory({valueExpression:s,view:a,signal:r,filter:i});return Ce(o.uniqueValueInfos,t)}async heatmapStatistics(e){return this._heatmapStatsFromMemory(e)}async getSampleFeatures(e,t){const{view:a,sampleSize:r,requiredFields:i,returnGeometry:s,filter:o,signal:n}=e,l=this.layer.createQuery(),u=1;if(l.outSpatialReference=a?.spatialReference,l.returnGeometry=!!s,l.outFields=i,C(l,o),!a)throw new d(`${this.adapterName}:not-supported`,"view is required to get sample features for Layer");const m=await a.whenLayerView(this.layer);if(oe(this,i,m).length)throw new d(`${this.adapterName}:not-supported`,"Required fields need to be passed in the outFields for Layer");const c=await this._fetchFeaturesFromMemory(m,l,n,t),p=r!=null&&r>0&&r<=c.length?r:c.length;return B(c,p,u)}load(e){const t=this.layer.load(e).then(async a=>{this.geometryType=a.geometryType,this.objectIdField=a.objectIdField,this.supportsSQLExpression=a.type==="stream"||!!a.capabilities?.query?.supportsSqlExpression,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent="fullExtent"in a?a.fullExtent:a.parent?.fullExtent,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.workerClient=U.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};w([v({readOnly:!0})],X.prototype,"adapterName",void 0),w([v({constructOnly:!0})],X.prototype,"layer",void 0),X=w([M("esri.smartMapping.support.adapters.InMemoryLayerAdapter")],X);const Ie=X,ot=5,lt=2e4,ha=4e5;let Y=class extends Ie{constructor(){super(...arguments),this.adapterName="feature-layer-adapter"}_isStatsSupportedOnService(){const e=this.layer;if(!e.capabilities?.query?.supportsStatistics||this.geometryType==="multipatch"&&!xt(e.url)&&e.version<10.5)throw new d(`${this.adapterName}:not-supported`,"Layer does not support statistics query");return Promise.resolve()}_fetchFeaturesFromService(e,t){return this.layer.queryFeatures(e,{signal:t}).then(a=>a.features)}_fetchFeaturesJSONFromService(e,t){return this._fetchFeaturesFromService(e,t).then(H)}_summaryStatsFromGenRend(e){const t=e.normalizationType,a=e.normalizationField;return this.classBreaks({field:e.field,numClasses:ot,classificationMethod:"standard-deviation",standardDeviationInterval:.25,normalizationType:t,normalizationField:t==="field"?a:void 0,minValue:e.minValue,maxValue:e.maxValue,filter:e.filter,signal:e.signal}).then(r=>{let i,s,o;if(r.classBreakInfos?.some(l=>(l.hasAvg&&(i=l),!!i)),i){const l=i.maxValue-i.minValue;s=i.minValue+l/2,o=4*l}const n={min:r.minValue,max:r.maxValue,avg:s,stddev:o};return re(n,e.outStatisticTypes)})}async _summaryStatsFromServiceQuery(e,t){await this._isStatsSupportedOnService(),e.normalizationType==="percent-of-total"&&(e.normalizationTotal=await this._getNormalizationTotal(e.field,e.normalizationType,e.filter));const a=I(t)||N(t),r=Ne(this,e,t),i=await this.layer.queryFeatures(r,{signal:e.signal}),s=Te(i,a);return re(s,e.outStatisticTypes)}_uvFromGenRenderer(e,t){const a=e.field??void 0,r=new Ht({attributeField:a}),i=new qe({classificationDefinition:r});return this.generateRenderer(i,e.signal).then(s=>{const o={},n=this.getField(a);return s.uniqueValues.forEach(l=>{let u=l.value;u!=null&&u!==""&&(typeof u!="string"||u.trim()!==""&&u.toLowerCase()!=="<null>")||(u=null),o[u]==null?o[u]={count:l.count,data:Qe(n)&&u?Number(u):u}:o[u].count=o[u].count+l.count}),{count:o}}).then(s=>se(s,[t],e.returnAllCodedValues))}async _uvFromServiceQuery(e,t){return this._isStatsSupportedOnService().then(()=>this.layer.queryFeatures(Ye(this,e),{signal:e.signal})).then(a=>_e(a,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:$,view:e.view,signal:e.signal})).then(a=>se(a,t,e.returnAllCodedValues,$))}_getNormalizationTotal(e,t,a,r){return e&&t==="percent-of-total"?this.summaryStatistics({field:e,outStatisticTypes:{include:["sum"]},filter:a,signal:r}).then(i=>i.sum):Promise.resolve(null)}_histogramForExpr(e){return this._getNormalizationTotal(e.field,e.normalizationType,e.filter,e.signal).then(t=>{const a=tt(e,this,t);return at(a,this,e.minValue,e.maxValue).then(r=>{const i=r.min,s=r.max;if(i==null||s==null)return{bins:[],minValue:i,maxValue:s,normalizationTotal:t};const o=e.numBins||W,n=Fe(i,s,o),l=fa(a.sqlExpression,n,e.minValue!=null&&e.maxValue!=null),u=new P({statisticType:"count",outStatisticFieldName:"countOFExpr",onStatisticField:"1"}),m=this.layer.createQuery();return m.where=q(m.where,a.sqlWhere),m.sqlFormat="standard",m.outStatistics=[u],m.groupByFieldsForStatistics=[l],m.orderByFields=[l],C(m,e.filter),this._isStatsSupportedOnService().then(()=>this.layer.queryFeatures(m,{signal:a.signal})).then(c=>He(c,i,s,o,t))})})}async _histogramFromQueryAttributeBins(e){const{field:t,normalizationType:a,filter:r,signal:i}=e,s=await this._getNormalizationTotal(t,a,r,i),o=this.layer.createQuery(),{query:n,min:l,max:u}=await it(e,this,s,o?.where);if(!n)return{bins:[],minValue:l,maxValue:u,normalizationTotal:s};const m=await this.layer.queryAttributeBins(n,{signal:i});return st(m,t?this.getField(t):null,{minValue:l,maxValue:u,normalizationTotal:s})}_classBreaksFromGenRend(e){const{field:t,normalizationType:a,normalizationField:r,normalizationTotal:i,signal:s}=e,o=ie({field:t,normalizationType:a,normalizationField:r}),n=G({field:t,normalizationType:a,normalizationField:r,normalizationTotal:i,layer:this}),l=ae(n,e.minValue,e.maxValue),u=Pe({field:t,normalizationType:a,normalizationField:r,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,breakCount:e.numClasses||ot}),m=new qe({classificationDefinition:u});return m.where=q(o,l),this.generateRenderer(m,s).then(c=>Re(c,e.classificationMethod))}async summaryStatistics(e){const{field:t,normalizationType:a,valueExpression:r,sqlExpression:i,view:s,features:o,useFeaturesInView:n}=e,l=t?this.getField(t):null,u=I(l)||N(l),m=r&&!(i&&this.supportsSQLExpression),c=this._hasLocalSource||o||n,p=s&&s.type==="3d";if(c||m)return m||o||n||p?this._summaryStatsFromMemory(e,l):this._summaryStatsFromClientQuery(e,l);if(!this.supportsSQLExpression&&(u||i||a==="natural-log"||a==="square-root"))throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return(a&&!this.supportsSQLExpression?this._summaryStatsFromGenRend(e):this._summaryStatsFromServiceQuery(e,l)).catch(()=>(V(e.signal),this._summaryStatsFromMemory(e,l)))}async uniqueValues(e){const{valueExpression:t,sqlExpression:a,features:r,useFeaturesInView:i,signal:s}=e,o=t&&!(a&&this.supportsSQLExpression),n=this._hasLocalSource||r||i||o,l=e.view,u=l&&l.type==="3d",m=await le(e,this);return n?o||r||i||u?this._uvFromMemory(e,m):this._uvFromClientQuery(e,m):this._uvFromServiceQuery(e,m).catch(c=>(V(s),!e.field||e.field2||e.field3||e.filter?c:this._uvFromGenRenderer(e,m[0]))).catch(()=>(V(s),u?this._uvFromMemory(e,m):this._uvFromClientQuery(e,m)))}async histogram(e){const{field:t,normalizationType:a,normalizationField:r,classificationMethod:i,view:s,filter:o,signal:n}=e,l=t?this.getField(t):null,u=I(l)||N(l),m=e.valueExpression||e.sqlExpression,c=e.valueExpression&&!(e.sqlExpression&&this.supportsSQLExpression),p=this._hasLocalSource||e.features||e.useFeaturesInView||c,y=this.supportsSQLExpression,f=!i||i==="equal-interval",g=e.minValue,S=e.maxValue,F=g!=null&&S!=null,x=e.numBins||W;if(p)return this._histogramFromMemory(e);if(this.layer.capabilities?.operations?.supportsQueryBins&&e.useQueryAttributeBins)try{return await this._histogramFromQueryAttributeBins(e)}catch{return V(n),this._histogramFromQueryAttributeBinsFromMemory(e)}if((m||y)&&f){if(!y&&(m||a==="natural-log"||a==="square-root"))throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return this._histogramForExpr(e)}if(u&&f)throw new d(`${this.adapterName}:not-supported`,"Normalization and date field are not allowed when layer does not support standardized SQL expression for queries");return a||!f?Me(e,this).then(L=>{if(!F)return ue(this,L,t,x,s,o,n);if(g>L.max||S<L.min)throw new d(`${this.adapterName}:insufficient-data`,"Range defined by 'minValue' and 'maxValue' does not intersect available data range of the field");if(f)return ue(this,{min:g,max:S,sqlExpr:L.sqlExpr,excludeZerosExpr:L.excludeZerosExpr},t,x,s,o,n);{const z={field:t,normalizationType:a,normalizationField:r,normalizationTotal:L.normTotal,layer:this},he=G(z),A=ae(he,g,S);return Me(e,this,A).then(_=>ue(this,_,t,x,s,o,n))}}):this._histogramForField(e)}async classBreaks(e){const t=e.analyzeData!==!1,a=this._hasLocalSource||e.features||e.useFeaturesInView||e.valueExpression||e.filter;return t&&a?this._classBreaksFromMemory(e):(t?this._classBreaksFromGenRend(e):this._classBreaksFromInterpolation(e)).catch(()=>(V(e.signal),this._classBreaksFromMemory(e)))}async queryFeatureCount(e){if(this._hasLocalSource)throw new d(`${this.adapterName}:not-supported`,"Layer does not support count query");const t=this.layer,a=t.createQuery();return a.where=q(a.where,e.whereClause),C(a,e.filter),t.queryFeatureCount(a,{signal:e.signal})}async generateRenderer(e,t){const a=this.layer;if(this._hasLocalSource||a.version<10.1)throw new d(`${this.adapterName}:not-supported`,"Layer does not support generateRenderer operation (requires ArcGIS Server version 10.1+)");const r=a.createQuery();return e.where=q(e.where,r.where),Zt(a.parsedUrl?.path??"",{source:a.dynamicDataSource??void 0,gdbVersion:a.gdbVersion??void 0},e,{signal:t})}async predominantCategories(e){if(!this._hasLocalSource&&!this.supportsSQLExpression)throw new d(`${this.adapterName}:not-supported`,"Layer does not support advanced SQL expressions and standardized queries");const{fields:t,view:a,signal:r,filter:i}=e,s=Le(t),o=Kt(t),n=a&&this._hasLocalSource?await this._uvFromMemory({valueExpression:s,view:a,signal:r,filter:i}):await this._uvFromServiceQuery({sqlExpression:o.expression,valueExpression:s,signal:r,filter:i});return Ce(n.uniqueValueInfos,t)}async getSampleFeatures(e,t){const{view:a,requiredFields:r,returnGeometry:i,filter:s,signal:o}=e,n=e.sampleSize;if(n==null||n===0)return[];const l=this.layer.createQuery(),u=1,m=t==="json";l.outSpatialReference=a?.spatialReference,l.returnGeometry=!!i,l.outFields=r,C(l,s);let c=[],p=!1;if(a)try{const y=await a.whenLayerView(this.layer);if(p=!oe(this,r,y).length,p){if(n>=1&&!e.filter&&"getSampleFeatures"in y){await this._waitForLayerViewUpdate(y);const f=await y.getSampleFeatures({minFeatureCount:n,sampleSize:n});if(f!=null)return m?f:f.map(g=>we.fromJSON(g))}if(c=await this._fetchFeaturesFromMemory(y,l,o,t),c.length>=n&&n>0)return B(c,n,u)}}catch{V(o)}try{if(this._hasLocalSource)return p?c:m?await this._fetchFeaturesJSONFromService(l,o):await this._fetchFeaturesFromService(l,o);const y=await this.queryFeatureCount({view:a,filter:s,signal:o}),f=this.layer.capabilities.query.maxRecordCount;let g=n===-1?y:n;if(g=f&&g>f?f:g,y<=c.length||c.length>=f)return c;if(l.maxAllowableOffset=e.resolution||(a?a.extent.width/a.width/a.scale:jt(this.layer.spatialReference))*ha,y<=g)return m?await this._fetchFeaturesJSONFromService(l,o):await this._fetchFeaturesFromService(l,o);if(y<=lt){const S=this.layer.createQuery();C(S,s);const F=await this.layer.queryObjectIds();return l.objectIds=B(F,g,u),m?await this._fetchFeaturesJSONFromService(l,o):await this._fetchFeaturesFromService(l,o)}return this.layer.capabilities?.query?.supportsPagination&&(l.num=Math.min(g,lt)),m?await this._fetchFeaturesJSONFromService(l,o):await this._fetchFeaturesFromService(l,o)}catch{return V(o),c}}load(e){const t=this.layer.load(e).then(async a=>{this.geometryType=a.geometryType,this.objectIdField=a.objectIdField,this.supportsSQLExpression=a.capabilities?.query?.supportsSqlExpression,this._hasLocalSource=!a.url&&!!a.source,this.hasQueryEngine=this._hasLocalSource,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent=a.fullExtent,this.workerClient=U.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};function fa(e,t,a){const r=[],i=t.length;return t.forEach((s,o)=>{const[n,l]=s;let u=null;u=o!==0||a?o!==i-1||a?q(`${e} >= ${n}`,`${e} ${o===i-1?" <= ":" < "} ${l}`):`${e} >= ${n}`:`${e} < ${l}`,r.push("WHEN ("+u+") THEN "+(o+1))}),["CASE",r.join(" "),"ELSE 0","END"].join(" ")}w([v({readOnly:!0})],Y.prototype,"adapterName",void 0),w([v({constructOnly:!0})],Y.prototype,"layer",void 0),Y=w([M("esri.smartMapping.support.adapters.FeatureLayerAdapter")],Y);const T=Y;let ce=class extends T{constructor(){super(...arguments),this.adapterName="csv-layer-adapter"}async _createGenerateRendererResult(e,t,a,r,i){const s=e?.features;if(!s?.length)throw new d("csv-layer-adapter:insufficient-data","No features are available to calculate statistics");const o=H(s);let n=null;if(r==="percent-of-total"&&(n=(await this.workerClient.summaryStatistics({field:t},o)).sum,n==null))throw new d("csv-layer-adapter:invalid","invalid normalizationTotal");if(i?.type==="class-breaks-definition"){const u=(await Ge({field:t,normalizationType:r,normalizationField:a,normalizationTotal:n},o)).filter(m=>Number.isFinite(m));return Lt({definition:i,values:u,normalizationTotal:n})}const l=(await Ge({field:t},o)).filter(u=>u!=null&&typeof u=="string"&&u.trim()!=="");return zt(l)}generateRenderer(e,t){const a=e.classificationDefinition;let r=null,i=null,s=null;a?.type==="class-breaks-definition"?(r=a.classificationField,i=a.normalizationField,s=a.normalizationType):r=a?.attributeField;const o=this.layer;return k({field:r,normalizationField:i}).then(n=>{const l=o.createQuery();return l.returnGeometry=!1,l.outFields=n,l.where=q(l.where,e.where),o.queryFeatures(l,{signal:t}).then(u=>this._createGenerateRendererResult(u,r,i,s,a))})}load(e){const t=this.layer.load(e).then(async a=>{this.geometryType=a.geometryType,this.objectIdField=a.objectIdField,this.supportsSQLExpression=!0,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.workerClient=U.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};w([v({readOnly:!0})],ce.prototype,"adapterName",void 0),ce=w([M("esri.smartMapping.support.adapters.CSVLayerAdapter")],ce);const ga=ce;let pe=class extends T{constructor(){super(...arguments),this.adapterName="feature-layer-binning-adapter"}async _getNormalizationTotalFromMemory(e,t,a){const{featuresJSON:r,graphics:i,layerView:s,query:o}=t,n={include:["sum"]},l=(!r&&!i&&s&&"queryAggregateSummaryStatistics"in s?await s.queryAggregateSummaryStatistics(o,{field:e,outStatisticTypes:n},{signal:a}):r?await this.workerClient.summaryStatistics({field:e},r):await R({attribute:{field:e,outStatisticTypes:n},features:i})).sum;if(l==null)throw new d(`${this.adapterName}:invalid`,"invalid normalizationTotal");return l}async _processStatsFromMemoryParams(e){const{features:t,filter:a}=e;if(t?.length)return this._getFilteredFeatures(t,a);const{view:r,field:i,field2:s,field3:o,normalizationField:n,valueExpression:l,returnGeometry:u,layerViewFunc:m,signal:c}=e;let p=null,y=null,f=null,g=null,S=null;if(r)try{if(p=await r.whenLayerView(this.layer),y=m!=null&&m in p&&typeof p[m]=="function",y){await this._waitForLayerViewUpdate(p);const F=await k({field:i,field2:s,field3:o,normalizationField:n,valueExpression:l});Ze(this,F).length?y=!1:(f="createAggregateQuery"in p?p.createAggregateQuery():null,f?(f.outFields=F,f.returnGeometry=!1,C(f,a)):y=!1),p.suspended&&(y=!1)}}catch{y=!1}if(!y&&(S=Ke(this.layer).map(F=>F.toJSON()),g=await this._fetchFeaturesForStats({field:i,field2:s,field3:o,valueExpression:l,normalizationField:n,returnGeometry:u,filter:a,view:r,signal:c},"json"),!g?.length))throw new d(`${this.adapterName}:insufficient-data`,"No features are available to calculate statistics");return{layerView:p,query:f,featuresJSON:g,fieldInfos:S}}async _summaryStatsFromMemory(e,t){const{view:a,field:r,valueExpression:i,normalizationType:s,signal:o}=e,n={field:r,valueExpression:i,normalizationType:s,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes},{featuresJSON:l,graphics:u,layerView:m,query:c,fieldInfos:p}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateSummaryStatistics"});return i&&a&&(l||u)&&(n.fieldType=t?.type?Se.toJSON(t.type):null,n.viewInfoParams=E(a),n.timeZone=a.timeZone,n.fieldInfos=p),s==="percent-of-total"&&e.normalizationTotal==null&&(n.normalizationTotal=await this._getNormalizationTotalFromMemory(r,{featuresJSON:l,graphics:u,layerView:m,query:c},o)),!l&&!u&&m&&"queryAggregateSummaryStatistics"in m?m.queryAggregateSummaryStatistics(c,n,{signal:o}):l?this.workerClient.summaryStatistics(n,l):R({attribute:n,features:u})}async _uvFromMemory(e,t){const{view:a,field:r,valueExpression:i,returnAllCodedValues:s,signal:o}=e,{featuresJSON:n,graphics:l,layerView:u,query:m,fieldInfos:c}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateUniqueValues"}),p={field:r,field2:e.field2,field3:e.field3,fieldDelimiter:$,valueExpression:i,domains:t,returnAllCodedValues:s};return i&&a&&(n||l)&&(p.viewInfoParams=E(a),p.timeZone=a.timeZone,p.fieldInfos=c),!n&&!l&&u&&"queryAggregateUniqueValues"in u?u.queryAggregateUniqueValues(m,p,{signal:o}):n?this.workerClient.uniqueValues(p,n):xe({attribute:p,features:l})}async _histogramFromMemory(e){const{view:t,field:a,valueExpression:r,signal:i}=e,{featuresJSON:s,graphics:o,layerView:n,query:l,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateHistogram"}),m={field:a,valueExpression:r,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return r&&t&&(s||o)&&(m.viewInfoParams=E(t),m.timeZone=t.timeZone,m.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(m.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:s,graphics:o,layerView:n,query:l},i)),!s&&!o&&n&&"queryAggregateHistogram"in n?n.queryAggregateHistogram(l,m,{signal:i}):s?this.workerClient.histogram(m,s):ne({attribute:m,features:o})}async _classBreaksFromMemory(e){const{view:t,field:a,valueExpression:r,signal:i}=e,{featuresJSON:s,graphics:o,layerView:n,query:l,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateClassBreaks"}),m={field:a,valueExpression:r,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return r&&t&&(s||o)&&(m.viewInfoParams=E(t),m.timeZone=t.timeZone,m.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(m.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:s,graphics:o,layerView:n,query:l},i)),!s&&!o&&n&&"queryAggregateClassBreaks"in n?n.queryAggregateClassBreaks(l,m,{signal:i}):s?this.workerClient.classBreaks(m,s):Ve({attribute:m,features:o})}getField(e=""){return Ke(this.layer)?.find(t=>t.name.toLowerCase()===e?.toLowerCase())}getFieldUsageInfo(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!1,supportsStatistics:!0}:null}getFieldDomain(e,t){return null}async summaryStatistics(e){const{field:t}=e,a=t?this.getField(t):null,r=I(a)||N(a),i=e.sqlExpression&&!e.valueExpression&&!t;if(r||i)throw new d(`${this.adapterName}:not-supported`,"Date field and sqlExpression are not supported");return this._summaryStatsFromMemory(e,a)}async uniqueValues(e){const t=await le(e,this);return this._uvFromMemory(e,t)}async histogram(e){const{field:t}=e,a=t?this.getField(t):null,r=I(a)||N(a),i=e.sqlExpression&&!e.valueExpression&&!t;if(r||i)throw new d(`${this.adapterName}:not-supported`,"Date field and sqlExpression are not supported");return this._histogramFromMemory(e)}async classBreaks(e){return(e.analyzeData!==!1?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)).catch(()=>(V(e.signal),this._classBreaksFromMemory(e)))}async queryFeatureCount(e){const t=await e.view?.whenLayerView(this.layer);if(!t||!("queryAggregateCount"in t)||!t.queryAggregateCount)throw new d(`${this.adapterName}:not-supported`,"LayerView is not supported.");await this._waitForLayerViewUpdate(t);const a=t.createAggregateQuery();return a.where=q(a.where,e.whereClause),C(a,e.filter),t.queryAggregateCount(a,{signal:e.signal})}generateRenderer(e,t){throw new d(`${this.adapterName}:not-supported`,"'generateRenderer' is not supported.")}heatmapStatistics(e){throw new d(`${this.adapterName}:not-supported`,"'heatmapStatistics' is not supported.")}async predominantCategories(e){const{fields:t,view:a,signal:r}=e,i=Le(t),s=await this._uvFromMemory({valueExpression:i,view:a,signal:r});return Ce(s.uniqueValueInfos,t)}async getSampleFeatures(e,t){const{view:a,sampleSize:r,requiredFields:i,returnGeometry:s,filter:o,signal:n}=e;if(!a)throw new d(`${this.adapterName}:not-supported`,"'view' is required to get sample features for binning.");if(a.type==="3d")throw new d(`${this.adapterName}:not-supported`,"3d 'view' is not supported to get sample features for binning.");const l=await a.whenLayerView(this.layer);if(!("queryAggregateJSON"in l&&l.queryAggregateJSON&&"queryAggregates"in l&&l.queryAggregates))throw new d(`${this.adapterName}:not-supported`,"LayerView is not supported.");if(await this._waitForLayerViewUpdate(l),Ze(this,i).length)throw new d(`${this.adapterName}:insufficient-data`,"Layer does not have required fields");const u=1,m=t==="json",c=l.createAggregateQuery();c.outSpatialReference=a?.spatialReference,c.returnGeometry=!!s,c.outFields=i,C(c,o);const{features:p}=m?await l.queryAggregateJSON(c,{signal:n}):await l.queryAggregates(c,{signal:n});return p.length&&r!=null&&r>0&&r<=p.length?B(p,r,u):p}load(e){const t=this.layer.load(e).then(async a=>{this.geometryType="polygon",this.objectIdField=null,this.supportsSQLExpression=!1,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent=a.fullExtent;const r="featureReduction"in a?a.featureReduction:null;if(r?.type!=="binning"&&r?.type!=="cluster")throw new d(`${this.adapterName}:invalid-parameters`,`Feature reduction type ${r?.type} is not supported`);this.workerClient=U.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};w([v({readOnly:!0})],pe.prototype,"adapterName",void 0),pe=w([M("esri.smartMapping.support.adapters.FeatureLayerBinningAdapter")],pe);const wa=pe;let ee=class extends ze{constructor(e){super(e),this._featureLayerAdapter=null,this.workerClient=null,this.adapterName="scene-layer-adapter"}destroy(){this.workerClient?.destroy()}_hasCachedStatistics(e){return this.layer.hasCachedStatistics(e)}_updateQuery(e,t=[],a=[]){if(!e||!a.length)return e;const r=this.layer.objectIdField,i=e.clone(),s=t.filter(n=>{const l=this.layer.getField(n);return!a.includes(l.name)}),o=s.some(n=>this.layer.getField(n).name===r);return i.outFields=o?s:[...s,r],i}async _fetchFeaturesFromMemory(e,t,a){if(!e)throw new d("scene-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const r=await e.whenLayerView(this.layer),i=new AbortController,s=i.signal,o=ge(()=>!r.updating,s);await Be(o,5e3,i);const n=oe(this,a,r);V(s);const l=this._updateQuery(t,a??[],n),u=await r.queryFeatures(l,{signal:s});V(s);const m=u.features;return n.length?r.whenGraphicAttributes(m,n):m}async _fetchFeaturesJSONFromMemory(e,t,a){return this._fetchFeaturesFromMemory(e,t,a).then(H)}_fetchFeaturesForStats(e,t){return k({field:e.field,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then(a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,requiredFields:a,signal:e.signal},t))}async _processStatsFromMemoryParams(e){const t=e.features;if(t?.length)return t.length&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic"?{graphics:t}:{featuresJSON:t};const{view:a,field:r,normalizationField:i,valueExpression:s,signal:o}=e,n=await this._fetchFeaturesForStats({field:r,valueExpression:s,normalizationField:i,view:a,signal:o},null);if(!n?.length)throw new d("scene-layer-adapter:insufficient-data","No features are available to calculate statistics");return{graphics:n}}_getCachedStatistics(e,t){const a=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.minValue||e.maxValue?Promise.reject(new d("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression', 'sqlWhere', 'minValue' or 'maxValue' is specified")):a.queryCachedStatistics(t?.name,{signal:e.signal}).then(r=>{const i=r.stats,{min:s,max:o,totalValuesCount:n}=i;let{avg:l,stddev:u,sum:m,variance:c,count:p}=i;return s===0&&o===0||(l=l===0?null:l,m=m===0?null:m,u=u===0?null:u,c=c===0?null:c,p=p===0?null:p),p==null&&(m!=null&&l!=null?p=Math.round(m/l):n!=null&&(p=n)),{avg:l,count:p,max:o,min:s,stddev:u,sum:m,variance:c}})}async _getNormalizationTotal(e,t,a){const r={include:["sum"]},i=(t?await this.workerClient.summaryStatistics({field:e,outStatisticTypes:r},t):await R({attribute:{field:e,outStatisticTypes:r},features:a})).sum;if(i==null)throw new d("scene-layer-adapter:invalid","invalid normalizationTotal");return i}async _getSummaryStatisticsFromMemory(e,t){const{view:a,field:r,normalizationField:i,valueExpression:s}=e,{featuresJSON:o,graphics:n}=await this._processStatsFromMemoryParams(e),l={field:r,valueExpression:s,normalizationType:e.normalizationType,normalizationField:i,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes};return e.valueExpression&&a&&o&&(l.fieldType=t?.type?Se.toJSON(t.type):null,l.viewInfoParams=E(a),l.timeZone=a.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(l.normalizationTotal=await this._getNormalizationTotal(r,o,n)),o?this.workerClient.summaryStatistics(l,o):R({attribute:l,features:n})}_getCachedStatisticsForUniqueValues(e,t){const a=this.layer,r=t?.name,i=t&&e.field?this.getFieldDomain(e.field):null;return e.valueExpression||e.sqlExpression||e.sqlWhere?Promise.reject(new d("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression' or 'sqlWhere' is specified")):a.queryCachedStatistics(r,{signal:e.signal}).then(s=>{const o=s.stats;if(!o.mostFrequentValues)throw new Error;const n=s.labels?.labels,l={},u=[],m="countOF"+r;o.mostFrequentValues.forEach(p=>{const y=new we({attributes:{}});y.attributes[r]=t&&t.name!==a.objectIdField&&(Qe(t)||I(t))?Number(p.value):p.value,y.attributes[m]=p.count,u.push(y)}),n&&n.forEach(p=>{l[p.value]=p.label});const c=new Je({features:u});return _e(c,{layer:this,field:e.field,labels:l,view:e.view,signal:e.signal})}).then(s=>se(s,[i],e.returnAllCodedValues))}async _getUniqueValuesFromMemory(e,t){const{view:a,field:r,field2:i,field3:s,valueExpression:o,returnAllCodedValues:n}=e,l={field:r,field2:i,field3:s,fieldDelimiter:$,valueExpression:o,domains:t,returnAllCodedValues:n},{featuresJSON:u,graphics:m}=await this._processStatsFromMemoryParams(e);return e.valueExpression&&a&&u&&(l.viewInfoParams=E(a),l.timeZone=a.timeZone),u?this.workerClient.uniqueValues(l,u):xe({attribute:l,features:m})}_getCachedStatisticsForHistogram(e,t){const a=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.normalizationType?Promise.reject(new d("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression' or 'sqlExpression' or 'sqlWhere' or 'normalizationType' is specified")):a.queryCachedStatistics(t&&t.name,{signal:e.signal}).then(r=>{const i=r.stats,{minValue:s,maxValue:o}=e,n=s??i.min,l=o??i.max,u=e.numBins||10,m=Fa(i.histogram,n,l,u);return He(m,n,l,u)})}async _getClassBreaksFromMemory(e){const{view:t,field:a,normalizationField:r,valueExpression:i}=e,{featuresJSON:s,graphics:o}=await this._processStatsFromMemoryParams(e),n={field:a,valueExpression:i,normalizationType:e.normalizationType,normalizationField:r,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return e.valueExpression&&t&&s&&(n.viewInfoParams=E(t),n.timeZone=t.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(n.normalizationTotal=await this._getNormalizationTotal(a,s,o)),s?this.workerClient.classBreaks(n,s):Ve({attribute:n,features:o})}async _getHistogramFromMemory(e){const{view:t,field:a}=e,{featuresJSON:r,graphics:i}=await this._processStatsFromMemoryParams(e),s={field:a,valueExpression:e.valueExpression,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return e.valueExpression&&t&&r&&(s.viewInfoParams=E(t),s.timeZone=t.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(s.normalizationTotal=await this._getNormalizationTotal(a,r,i)),r?this.workerClient.histogram(s,r):ne({attribute:s,features:i})}getField(e){return this.layer.getField(e??"")}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this.layer.getFieldUsageInfo(t.name);return{supportsLabelingInfo:a.supportsLabelingInfo,supportsPopupTemplate:a.supportsPopupTemplate,supportsRenderer:a.supportsRenderer,supportsLayerQuery:a.supportsLayerQuery,supportsStatistics:!0}}getFieldDomain(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.getFieldDomain(e,t):null}createQuery(){return this.layer.createQuery()}summaryStatistics(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.summaryStatistics(e);if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");return this._hasCachedStatistics(t?.name)?this._getCachedStatistics(e,t).catch(()=>(V(e.signal),this._getSummaryStatisticsFromMemory(e,t))):this._getSummaryStatisticsFromMemory(e,t)}async uniqueValues(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.uniqueValues(e);if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");const t=await le(e,this),{field:a,field2:r}=e,i=a&&r,s=this.getField(a);return!i&&s&&this._hasCachedStatistics(s.name)?this._getCachedStatisticsForUniqueValues(e,s).catch(()=>(V(e.signal),this._getUniqueValuesFromMemory(e,t))):this._getUniqueValuesFromMemory(e,t)}histogram(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.histogram(e);if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");return t&&this._hasCachedStatistics(t.name)?this._getCachedStatisticsForHistogram(e,t).catch(()=>(V(e.signal),this._getHistogramFromMemory(e))):this._getHistogramFromMemory(e)}classBreaks(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.classBreaks(e);if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");return this._hasCachedStatistics(t?.name)?Promise.reject(new d("scene-layer-adapter:not-supported","Cached stats not supported")):this._getClassBreaksFromMemory(e)}queryFeatureCount(e){return this._featureLayerAdapter?this._featureLayerAdapter.queryFeatureCount(e):Promise.reject(new d("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support count query"))}generateRenderer(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.generateRenderer(e,t):Promise.reject(new d("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support generateRenderer operation"))}heatmapStatistics(e){return this._featureLayerAdapter?this._featureLayerAdapter.heatmapStatistics(e):Promise.reject(new d("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support heatmapStatistics operation"))}async predominantCategories(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.predominantCategories(e);throw new d("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support predominantCategories")}async getSampleFeatures(e,t){if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");const{view:a,sampleSize:r,requiredFields:i,returnGeometry:s,signal:o}=e,n=1,l=t==="json",u=this.createQuery();u.outFields=i,u.returnGeometry=!!s,u.where=null,u.num=r;let m=[];try{if(m=l?await this._fetchFeaturesJSONFromMemory(a,u,i):await this._fetchFeaturesFromMemory(a,u,i),m.length&&r!=null&&r>0&&r<=m.length)return B(m,r,n)}catch{V(o)}let c=null;if(this._featureLayerAdapter){const p={...e};delete p.view,c=await this._featureLayerAdapter.getSampleFeatures(p,t)}return c?.length?c:B(m,m.length,n)}load(e){const t=this.layer.load(e).then(async a=>{this.workerClient=U.getInstance(),await this.workerClient.open(e.signal);const r=a.associatedLayer;if(this.geometryType=a.geometryType,r!=null)return this._featureLayerAdapter=new T({layer:r}),this._featureLayerAdapter.load(e).then(()=>{this.objectIdField=this._featureLayerAdapter.objectIdField,this.supportsSQLExpression=this._featureLayerAdapter.supportsSQLExpression,this.minScale=this._featureLayerAdapter.minScale,this.maxScale=this._featureLayerAdapter.maxScale,this.fullExtent=this._featureLayerAdapter.fullExtent});this.objectIdField=a.objectIdField,this.supportsSQLExpression=!1,this.hasQueryEngine=!1,this.fullExtent=a.fullExtent});return this.addResolvingPromise(t),Promise.resolve(this)}};function Fa(e,t=e.minimum,a=e.maximum,r){const i=[];for(let u=0;u<r;u++)i[u]=0;const s=e.counts.length,o=e.minimum,n=e.maximum;for(let u=0;u<s;u++){const m=(u+.5)/s,c=((1-m)*o+m*n-t)/(a-t)*r;c>=0&&c<=r&&(i[c===r?r-1:Math.floor(c)]+=e.counts[u])}const l=[];return i.forEach((u,m)=>{const c=new we({attributes:{}});c.attributes.EXPR_1=m+1,c.attributes.countOFExpr=u,l.push(c)}),new Je({features:l})}w([v({readOnly:!0})],ee.prototype,"adapterName",void 0),w([v({constructOnly:!0})],ee.prototype,"layer",void 0),ee=w([M("esri.smartMapping.support.adapters.SceneLayerAdapter")],ee);const ut=ee;let de=class extends ut{constructor(e){super(e),this.adapterName="point-cloud-layer-adapter"}getField(e){return this.layer.fieldsIndex.get(e??"")}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this._hasCachedStatistics(t.name);return{supportsLabelingInfo:a,supportsPopupTemplate:a,supportsRenderer:a,supportsLayerQuery:!1,supportsStatistics:a}}getFieldDomain(){return null}load(e){const t=this.layer.load(e).then(()=>{this.geometryType="point",this.objectIdField=null,this.supportsSQLExpression=!1,this.hasQueryEngine=!1});return this.addResolvingPromise(t),Promise.resolve(this)}};w([v({readOnly:!0})],de.prototype,"adapterName",void 0),de=w([M("esri.smartMapping.support.adapters.PointCloudLayerAdapter")],de);const va=de;let ye=class extends Ie{constructor(){super(...arguments),this.adapterName="stream-layer-adapter"}async _summaryStatsFromClientQuery(e,t){const{signal:a,view:r}=e,i=Ne(this,e,t);i.outStatistics=i.outStatistics?.filter(n=>n.outStatisticFieldName!=="totalcount_value");const s=await this._fetchFeatureSetFromMemory(i,r,a),o=Te(s,I(t)||N(t));return re(o,e.outStatisticTypes)}};w([v({readOnly:!0})],ye.prototype,"adapterName",void 0),ye=w([M("esri.smartMapping.support.adapters.StreamLayerAdapter")],ye);const Sa=ye;var h;(function(e){e[e.CatalogLayer=0]="CatalogLayer",e[e.CatalogFootprintLayer=1]="CatalogFootprintLayer",e[e.CSVLayer=2]="CSVLayer",e[e.FeatureLayer=3]="FeatureLayer",e[e.GeoJSONLayer=4]="GeoJSONLayer",e[e.KnowledgeGraphSublayer=5]="KnowledgeGraphSublayer",e[e.OGCFeatureLayer=6]="OGCFeatureLayer",e[e.OrientedImageryLayer=7]="OrientedImageryLayer",e[e.ParquetLayer=8]="ParquetLayer",e[e.PointCloudLayer=9]="PointCloudLayer",e[e.SceneLayer=10]="SceneLayer",e[e.StreamLayer=11]="StreamLayer",e[e.SubtypeGroupLayer=12]="SubtypeGroupLayer",e[e.SubtypeSublayer=13]="SubtypeSublayer",e[e.WFSLayer=14]="WFSLayer"})(h||(h={}));const Oe={[h.CatalogLayer]:{adapter:T,type:"catalog",label:"CatalogLayer"},[h.CatalogFootprintLayer]:{adapter:T,type:"catalog-footprint",label:"CatalogFootprintLayer"},[h.CSVLayer]:{adapter:ga,type:"csv",label:"CSVLayer"},[h.FeatureLayer]:{adapter:T,type:"feature",label:"FeatureLayer"},[h.GeoJSONLayer]:{adapter:T,type:"geojson",label:"GeoJSONLayer"},[h.KnowledgeGraphSublayer]:{adapter:T,type:"knowledge-graph-sublayer",label:"KnowledgeGraphSublayer"},[h.OGCFeatureLayer]:{adapter:Ie,type:"ogc-feature",label:"OGCFeatureLayer"},[h.OrientedImageryLayer]:{adapter:T,type:"oriented-imagery",label:"OrientedImageryLayer"},[h.ParquetLayer]:{adapter:T,type:"parquet",label:"ParquetLayer"},[h.PointCloudLayer]:{adapter:va,type:"point-cloud",label:"PointCloudLayer"},[h.SceneLayer]:{adapter:ut,type:"scene",label:"SceneLayer"},[h.StreamLayer]:{adapter:Sa,type:"stream",label:"StreamLayer"},[h.SubtypeGroupLayer]:{adapter:T,type:"subtype-group",label:"SubtypeGroupLayer"},[h.SubtypeSublayer]:{adapter:T,type:"subtype-sublayer",label:"SubtypeSublayer"},[h.WFSLayer]:{adapter:T,type:"wfs",label:"WFSLayer"}},Ae=[h.CatalogLayer,h.CatalogFootprintLayer,h.CSVLayer,h.FeatureLayer,h.GeoJSONLayer,h.KnowledgeGraphSublayer,h.OGCFeatureLayer,h.OrientedImageryLayer,h.ParquetLayer,h.PointCloudLayer,h.SceneLayer,h.StreamLayer,h.SubtypeGroupLayer,h.SubtypeSublayer,h.WFSLayer];h.CatalogFootprintLayer,h.CSVLayer,h.FeatureLayer,h.GeoJSONLayer,h.KnowledgeGraphSublayer,h.OGCFeatureLayer,h.OrientedImageryLayer,h.ParquetLayer,h.SceneLayer,h.StreamLayer,h.SubtypeGroupLayer,h.SubtypeSublayer,h.WFSLayer;const xa=[h.CSVLayer,h.FeatureLayer,h.GeoJSONLayer,h.OGCFeatureLayer,h.KnowledgeGraphSublayer,h.OrientedImageryLayer,h.ParquetLayer,h.StreamLayer,h.WFSLayer];function Va(e){return e.map(t=>Oe[t].label)}function qa(e,t=Ae,a){if(e instanceof ze)return e;const r=La(e,t);return r?a?new wa({layer:e}):new r({layer:e}):null}function La(e,t=Ae){let a=null;return t.some(r=>{const i=e.type===Oe[r].type;return i&&(a=Oe[r].adapter),i}),a}async function za(e){if(!e?.layer||!e.field&&!e.valueExpression)throw new d("unique-values:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");const t=e.valueExpression||e.sqlExpression,a=t&&!e.sqlExpression;if(t){if(a){if(!e.view)throw new d("unique-values:missing-parameters","View is required when 'valueExpression' is specified")}else if(!e.valueExpression)throw new d("unique-values:missing-parameters","'valueExpression' parameters are required")}e.forBinning&&Ut(e,"unique-values");const{layer:r,...i}=e,s=e.forBinning?xa:Ae,o=qa(r,s,e.forBinning);if(!o)throw new d("unique-values:invalid-parameters","'layer' must be one of these types: "+Va(s).join(", "));const n={layerAdapter:o,...i},l=n.signal!=null?{signal:n.signal}:null;await o.load(l);const u=await k({field:n.field,field2:n.field2,field3:n.field3,valueExpression:n.valueExpression}),m=Tt(o,u,"unique-values:invalid-parameters");if(m)throw m;n.filter&&!n.filter.spatialRelationship&&(n.filter.spatialRelationship="intersects");const c=_t(n.filter,"summary-statistics:invalid-parameters");if(c)throw c;return n}async function Ta(e){const{layerAdapter:t,...a}=await za(e);return t.uniqueValues(a)}export{Ta as default};
