import{n as T,s as g}from"./main-DnzmeE4U.js";import{a as c}from"./BindType-CKbZk6AG.js";const l=()=>T.getLogger("esri.views.3d.webgl-engine.core.shaderModules.shaderBuilder");class _{constructor(){this._includedModules=new Map}include(e,r){this._includedModules.has(e)?this._includedModules.get(e):(this._includedModules.set(e,r),e(this.builder,r))}}class w extends _{constructor(){super(...arguments),this.vertex=new f,this.fragment=new f,this.attributes=new A,this.varyings=new F,this.extensions=new h,this.outputs=new m}get fragmentUniforms(){return this.fragment.uniforms.entries}get builder(){return this}generate(e,r=!1){const t=this.extensions.generateSource(e),s=this.attributes.generateSource(e),i=this.varyings.generateSource(e),n=e==="vertex"?this.vertex:this.fragment,u=n.uniforms.generateSource(),d=n.code.generateSource(),p=n.main.generateSource(r),S=e==="vertex"?L:I,$=n.constants.generateSource(),b=this.outputs.generateSource(e);return`#version 300 es
${t.join(`
`)}
${S}
${$.join(`
`)}
${u.join(`
`)}
${s.join(`
`)}
${i.join(`
`)}
${b.join(`
`)}
${d.join(`
`)}
${p.join(`
`)}`}generateBind(e){const r=new Map;this.vertex.uniforms.entries.forEach(i=>{const n=i.bind[c.Bind];n&&r.set(i.name,n)}),this.fragment.uniforms.entries.forEach(i=>{const n=i.bind[c.Bind];n&&r.set(i.name,n)});const t=Array.from(r.values()),s=t.length;return i=>{for(let n=0;n<s;++n)t[n](e,i)}}generateBindPass(e){const r=new Map;this.vertex.uniforms.entries.forEach(i=>{const n=i.bind[c.Pass];n&&r.set(i.name,n)}),this.fragment.uniforms.entries.forEach(i=>{const n=i.bind[c.Pass];n&&r.set(i.name,n)});const t=Array.from(r.values()),s=t.length;return(i,n)=>{for(let u=0;u<s;++u)t[u](e,i,n)}}generateBindDraw(e){const r=new Map;this.vertex.uniforms.entries.forEach(i=>{const n=i.bind[c.Draw];n&&r.set(i.name,n)}),this.fragment.uniforms.entries.forEach(i=>{const n=i.bind[c.Draw];n&&r.set(i.name,n)});const t=Array.from(r.values()),s=t.length;return(i,n,u)=>{for(let d=0;d<s;++d)t[d](e,u,i,n)}}}class v{constructor(e){this._stage=e,this._entries=new Map}add(...e){for(const r of e)this._add(r);return this._stage}get(e){return this._entries.get(e)}_add(e){if(e!=null){if(this._entries.has(e.name)&&!this._entries.get(e.name).equals(e))throw new g(`Duplicate uniform name ${e.name} for different uniform type`);this._entries.set(e.name,e)}else l().error(`Trying to add null Uniform from ${new Error().stack}.`)}generateSource(){return Array.from(this._entries.values()).map(e=>e.arraySize!=null?`uniform ${e.type} ${e.name}[${e.arraySize}];`:`uniform ${e.type} ${e.name};`)}get entries(){return Array.from(this._entries.values())}}class y{constructor(e){this._stage=e,this._bodies=new Array}add(e){return this._bodies.push(e),this._stage}generateSource(e){if(this._bodies.length>0)return[`void main() {
 ${this._bodies.join(`
`)||""} 
}`];if(e)throw new g("Shader does not contain main function body.");return[]}}class E{constructor(e){this._stage=e,this._entries=new Array}add(e){return this._entries.push(e),this._stage}generateSource(){return this._entries}}class f extends _{constructor(){super(...arguments),this.uniforms=new v(this),this.main=new y(this),this.code=new E(this),this.constants=new o(this)}get builder(){return this}}class A{constructor(){this._entries=new Array}add(e,r){this._entries.push([e,r])}generateSource(e){return e==="fragment"?[]:this._entries.map(r=>`in ${r[1]} ${r[0]};`)}}class F{constructor(){this._entries=new Map}add(e,r){this._entries.has(e)?l().warn(`Ignoring duplicate varying ${r} ${e}`):this._entries.set(e,r)}generateSource(e){const r=new Array;return this._entries.forEach((t,s)=>r.push(e==="vertex"?`out ${t} ${s};`:`in ${t} ${s};`)),r}}class h{constructor(){this._entries=new Set}add(e){this._entries.add(e)}generateSource(e){const r=e==="vertex"?h.ALLOWLIST_VERTEX:h.ALLOWLIST_FRAGMENT;return Array.from(this._entries).filter(t=>r.includes(t)).map(t=>`#extension ${t} : enable`)}}h.ALLOWLIST_FRAGMENT=["GL_EXT_shader_texture_lod","GL_OES_standard_derivatives"],h.ALLOWLIST_VERTEX=[];class m{constructor(){this._entries=new Map}add(e,r,t=0){const s=this._entries.get(t);s?.name!==e||s?.type!==r?this._entries.set(t,{name:e,type:r}):l().warn(`Fragment shader output location ${t} occupied`)}generateSource(e){if(e==="vertex")return[];this._entries.size===0&&this._entries.set(0,{name:m.DEFAULT_NAME,type:m.DEFAULT_TYPE});const r=new Array;return this._entries.forEach((t,s)=>r.push(`layout(location = ${s}) out ${t.type} ${t.name};`)),r}}m.DEFAULT_TYPE="vec4",m.DEFAULT_NAME="fragColor";class o{constructor(e){this._stage=e,this._entries=new Set}add(e,r,t){let s="ERROR_CONSTRUCTOR_STRING";switch(r){case"float":s=o._numberToFloatStr(t);break;case"int":s=o._numberToIntStr(t);break;case"bool":s=t.toString();break;case"vec2":s=`vec2(${o._numberToFloatStr(t[0])},                            ${o._numberToFloatStr(t[1])})`;break;case"vec3":s=`vec3(${o._numberToFloatStr(t[0])},                            ${o._numberToFloatStr(t[1])},                            ${o._numberToFloatStr(t[2])})`;break;case"vec4":s=`vec4(${o._numberToFloatStr(t[0])},                            ${o._numberToFloatStr(t[1])},                            ${o._numberToFloatStr(t[2])},                            ${o._numberToFloatStr(t[3])})`;break;case"ivec2":s=`ivec2(${o._numberToIntStr(t[0])},                             ${o._numberToIntStr(t[1])})`;break;case"ivec3":s=`ivec3(${o._numberToIntStr(t[0])},                             ${o._numberToIntStr(t[1])},                             ${o._numberToIntStr(t[2])})`;break;case"ivec4":s=`ivec4(${o._numberToIntStr(t[0])},                             ${o._numberToIntStr(t[1])},                             ${o._numberToIntStr(t[2])},                             ${o._numberToIntStr(t[3])})`;break;case"mat2":case"mat3":case"mat4":s=`${r}(${Array.prototype.map.call(t,i=>o._numberToFloatStr(i)).join(", ")})`}return this._entries.add(`const ${r} ${e} = ${s};`),this._stage}static _numberToIntStr(e){return e.toFixed(0)}static _numberToFloatStr(e){return Number.isInteger(e)?e.toFixed(1):e.toString()}generateSource(){return Array.from(this._entries)}}const I=`#ifdef GL_FRAGMENT_PRECISION_HIGH
  precision highp float;
  precision highp int;
  precision highp sampler2D;
#else
  precision mediump float;
  precision mediump int;
  precision mediump sampler2D;
#endif`,L=`precision highp float;
precision highp sampler2D;`;export{w as i};
