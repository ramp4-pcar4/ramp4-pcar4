import{af as w,bm as B,G as g,x as t,z as r,bj as u,K as y,cm as v,a2 as f,v as k}from"./main-DnzmeE4U.js";import{m as T}from"./NormalizationBinParametersMixin-ZkplD1Sk.js";const O=new w({esriFieldTypeInteger:"integer",esriFieldTypeString:"string"});let a=class extends B.ClonableMixin(g){constructor(e){super(e),this.alias=null,this.responseType=null,this.type=null,this.value=null,this.valueType=null}};t([r({type:String,json:{name:"outAlias",write:!0}})],a.prototype,"alias",void 0),t([r({type:String})],a.prototype,"responseType",void 0),t([r({type:String,json:{write:!0}})],a.prototype,"type",void 0),t([r({type:String,json:{write:!0}})],a.prototype,"value",void 0),t([u(O)],a.prototype,"valueType",void 0),a=t([y("esri.rest.support.AttributeBinsGrouping")],a);const h=a;a.from=v(a);const I=new w({esriFieldTypeSmallInteger:"small-integer",esriFieldTypeInteger:"integer",esriFieldTypeSingle:"single",esriFieldTypeDouble:"double",esriFieldTypeLong:"long",esriFieldTypeDate:"date",esriFieldTypeDateOnly:"date-only",esriFieldTypeTimeOnly:"time-only",esriFieldTypeTimestampOffset:"timestamp-offset"}),P=new w({naturalLog:"natural-log",squareRoot:"square-root"});let i=class extends B.ClonableMixin(g){constructor(e){super(e),this.expression=null,this.expressionValueType=null,this.field=null,this.firstDayOfWeek=null,this.hideUpperBound=null,this.splitBy=null,this.stackBy=null,this.transformation=null}};t([r({type:String,json:{name:"onExpression.value",write:!0}})],i.prototype,"expression",void 0),t([u(I,{name:"onExpression.valueType"})],i.prototype,"expressionValueType",void 0),t([r({type:String,json:{name:"onField",write:!0}})],i.prototype,"field",void 0),t([r({type:String,json:{write:!0}})],i.prototype,"firstDayOfWeek",void 0),t([r({type:String,json:{write:!0}})],i.prototype,"hideUpperBound",void 0),t([r({type:h,json:{write:{overridePolicy(){return{enabled:this.splitBy?.value!=null||this.splitBy?.type!=null}}}}})],i.prototype,"splitBy",void 0),t([r({type:h,json:{write:{target:{stackBy:{type:h},jsonStyle:{type:String}},writer:(e,s)=>{e&&(s.stackBy=e.toJSON(),e.responseType!=null&&(s.jsonStyle=e.responseType))},overridePolicy(){return{enabled:this.stackBy?.value!=null||this.stackBy?.type!=null}}},read:{source:["stackBy","jsonStyle"],reader:(e,s)=>h.fromJSON({...s.stackBy,responseType:s.jsonStyle})}}})],i.prototype,"stackBy",void 0),t([u(P)],i.prototype,"transformation",void 0),i=t([y("esri.rest.support.BinParametersBase")],i);const c=i;function j(e,s,n){f(n,e instanceof Date?e.getTime():e,s)}let p=class extends T(c){constructor(e){super(e),this.numBins=null,this.end=null,this.start=null,this.type="auto-interval"}};t([r({type:Number,json:{name:"parameters.numberOfBins",write:!0}})],p.prototype,"numBins",void 0),t([r({json:{name:"parameters.end",write:{writer:j}}})],p.prototype,"end",void 0),t([r({json:{name:"parameters.start",write:{writer:j}}})],p.prototype,"start",void 0),t([u({autoIntervalBin:"auto-interval"},{readOnly:!0})],p.prototype,"type",void 0),p=t([y("esri.rest.support.AutoIntervalBinParameters")],p);const N=p;p.from=v(p);const q=k()({year:"years",quarter:"quarters",month:"months",week:"weeks",day:"days",hour:"hours",minute:"minutes",second:"seconds"});let d=class extends B.ClonableMixin(g){constructor(e){super(e),this.value=null,this.unit=null}};t([r({type:Number,json:{name:"number",write:!0}})],d.prototype,"value",void 0),t([u(q)],d.prototype,"unit",void 0),d=t([y("esri.rest.support.DateBinTimeInterval")],d);const x=d;d.from=v(d);function b(e,s,n){f(n,typeof e=="string"?e:e?.getTime(),s)}function S(e,s){const n=e.parameters[s];return n?typeof n=="string"?n:new Date(n):null}let o=class extends c{constructor(e){super(e),this.end=null,this.interval=null,this.offset=null,this.returnFullIntervalBin=null,this.start=null,this.snapToData=null,this.type="date"}};t([r({cast:e=>e!=null?typeof e=="string"?e:new Date(e):null,json:{name:"parameters.end",read:{reader:(e,s)=>S(s,"end")},write:{writer:b}}})],o.prototype,"end",void 0),t([r({type:x,json:{name:"parameters",write:!0}})],o.prototype,"interval",void 0),t([r({type:x,json:{name:"parameters.offset",write:!0}})],o.prototype,"offset",void 0),t([r({type:Boolean,json:{name:"parameters.returnFullIntervalBin",write:!0}})],o.prototype,"returnFullIntervalBin",void 0),t([r({cast:e=>e!=null?typeof e=="string"?e:new Date(e):null,json:{name:"parameters.start",read:{reader:(e,s)=>S(s,"start")},write:{writer:b}}})],o.prototype,"start",void 0),t([r({type:String,json:{name:"parameters.snapToData",write:!0}})],o.prototype,"snapToData",void 0),t([u({dateBin:"date"},{readOnly:!0})],o.prototype,"type",void 0),o=t([y("esri.rest.support.DateBinParameters")],o);const A=o;o.from=v(o);function C(e){return e[0]instanceof Date}function G(e,s,n){f(n,e&&C(e)?e.map(F=>F.getTime()):e,s)}let m=class extends c{constructor(e){super(e),this.boundaries=[],this.type="fixed-boundaries"}};t([r({json:{name:"parameters.boundaries",write:{writer:G}}})],m.prototype,"boundaries",void 0),t([u({fixedBoundariesBin:"fixed-boundaries"},{readOnly:!0})],m.prototype,"type",void 0),m=t([y("esri.rest.support.FixedBoundariesBinParameters")],m);const M=m;m.from=v(m);function D(e,s,n){f(n,e instanceof Date?e.getTime():e,s)}let l=class extends T(c){constructor(e){super(e),this.end=null,this.interval=null,this.start=null,this.type="fixed-interval"}};t([r({json:{name:"parameters.end",write:{writer:D}}})],l.prototype,"end",void 0),t([r({type:Number,json:{name:"parameters.interval",write:!0}})],l.prototype,"interval",void 0),t([r({json:{name:"parameters.start",write:{writer:D}}})],l.prototype,"start",void 0),t([u({fixedIntervalBin:"fixed-interval"},{readOnly:!0})],l.prototype,"type",void 0),l=t([y("esri.rest.support.FixedIntervalBinParameters")],l);const U=l;l.from=v(l);export{A as a,U as b,N as c,M as m,c as u};
