import{f2 as z,d5 as O}from"./main-DnzmeE4U.js";import{i as V,r as D,n as I}from"./TechniqueInstance-oJ4weLzg.js";import{e as g,N as w}from"./MapView-BcnxJC0k.js";import{j as u}from"./FeatureCommandQueue-CqM9cs0l.js";import{o as C,i as E,M as k,f as L,h as N}from"./mat3-DOnW3DjW.js";import{t as F}from"./vec2f32-CVhmN3Me.js";import{r as T}from"./vec3f32-BS0cezmI.js";import{L as P}from"./normalizeUtils-b-vZURob.js";import{e as U}from"./Container-BdpN3llD.js";import{$ as H}from"./dataViewUtils-xig9T3UA.js";import{E as v,o as W}from"./VertexArrayObject-DTkLCIKs.js";import{R as b,E as q,C as x,F as S}from"./enums-DBi1-Mm2.js";let j=0;function c(f,e){return new V(D(j++),f,e)}const h={visualVariableColor:null,visualVariableOpacity:null,visualVariableSizeMinMaxValue:null,visualVariableSizeScaleStops:null,visualVariableSizeStops:null,visualVariableSizeUnitValue:null,visualVariableRotation:null,visualVariableSizeOutlineScaleStops:null};class G{constructor(){this.instances={fill:c(u.fill,{uniforms:h,optionalAttributes:{zoomRange:!0}}),marker:c(u.marker,{uniforms:h,optionalAttributes:{zoomRange:!0}}),line:c(u.line,{uniforms:h,optionalAttributes:{zoomRange:!0}}),text:c(u.text,{uniforms:h,optionalAttributes:{zoomRange:!0,referenceSymbol:!1,clipAngle:!1}}),complexFill:c(u.complexFill,{uniforms:h,optionalAttributes:{zoomRange:!0}}),gradientFill:c(u.gradientFill,{uniforms:h,optionalAttributes:{zoomRange:!0}}),texturedLine:c(u.texturedLine,{uniforms:h,optionalAttributes:{zoomRange:!0}}),gradientStroke:c(u.gradientStroke,{uniforms:h,optionalAttributes:{zoomRange:!0}}),animatedMarker:c(u.animatedMarker,{uniforms:h,optionalAttributes:{zoomRange:!0}})},this._instancesById=Object.values(this.instances).reduce((e,t)=>(e.set(t.instanceId,t),e),new Map)}getInstance(e){return this._instancesById.get(e)}}const Y=Math.PI/180,$=4;class J extends U{constructor(e){super(),this._program=null,this._vao=null,this._vertexBuffer=null,this._indexBuffer=null,this._dvsMat3=g(),this._localOrigin={x:0,y:0},this._getBounds=e}destroy(){this._vao&&(this._vao.dispose(),this._vao=null,this._vertexBuffer=null,this._indexBuffer=null),this._program=z(this._program)}doRender(e){const{context:t}=e,s=this._getBounds();if(s.length<1)return;this._createShaderProgram(t),this._updateMatricesAndLocalOrigin(e),this._updateBufferData(t,s),t.setBlendingEnabled(!0),t.setDepthTestEnabled(!1),t.setStencilWriteMask(0),t.setStencilTestEnabled(!1),t.setBlendFunction(b.ONE,b.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0);const o=this._program;t.bindVAO(this._vao),t.useProgram(o),o.setUniformMatrix3fv("u_dvsMat3",this._dvsMat3),t.gl.lineWidth(1),t.drawElements(q.LINES,8*s.length,x.UNSIGNED_INT,0),t.bindVAO()}_createTransforms(){return{displayViewScreenMat3:g()}}_createShaderProgram(e){if(this._program)return;const t=`precision highp float;
        uniform mat3 u_dvsMat3;

        attribute vec2 a_position;

        void main() {
          mediump vec3 pos = u_dvsMat3 * vec3(a_position, 1.0);
          gl_Position = vec4(pos.xy, 0.0, 1.0);
        }`,s=`precision mediump float;
      void main() {
        gl_FragColor = vec4(0.75, 0.0, 0.0, 0.75);
      }`;this._program=e.programCache.acquire(t,s,R().attributes)}_updateMatricesAndLocalOrigin(e){const{state:t}=e,{displayMat3:s,size:o,resolution:m,pixelRatio:a,rotation:n,viewpoint:i}=t,l=Y*n,{x:r,y:M}=i.targetGeometry,A=P(r,t.spatialReference);this._localOrigin.x=A,this._localOrigin.y=M;const p=a*o[0],_=a*o[1],y=m*p,B=m*_,d=C(this._dvsMat3);E(d,d,s),k(d,d,F(p/2,_/2)),L(d,d,T(o[0]/y,-_/B,1)),N(d,d,-l)}_updateBufferData(e,t){const{x:s,y:o}=this._localOrigin,m=2*$*t.length,a=new Float32Array(m),n=new Uint32Array(8*t.length);let i=0,l=0;for(const r of t)r&&(a[2*i]=r[0]-s,a[2*i+1]=r[1]-o,a[2*i+2]=r[0]-s,a[2*i+3]=r[3]-o,a[2*i+4]=r[2]-s,a[2*i+5]=r[3]-o,a[2*i+6]=r[2]-s,a[2*i+7]=r[1]-o,n[l]=i+0,n[l+1]=i+3,n[l+2]=i+3,n[l+3]=i+2,n[l+4]=i+2,n[l+5]=i+1,n[l+6]=i+1,n[l+7]=i+0,i+=4,l+=8);if(this._vertexBuffer?this._vertexBuffer.setData(a.buffer):this._vertexBuffer=v.createVertex(e,S.DYNAMIC_DRAW,a.buffer),this._indexBuffer?this._indexBuffer.setData(n):this._indexBuffer=v.createIndex(e,S.DYNAMIC_DRAW,n),!this._vao){const r=R();this._vao=new W(e,r.attributes,r.bufferLayouts,new Map([["geometry",this._vertexBuffer]]),this._indexBuffer)}}}const R=()=>H("bounds",{geometry:[{location:0,name:"a_position",count:2,type:x.FLOAT}]});class K extends I{constructor(e){super(e),this._instanceStore=new G,this.checkHighlight=()=>!0}destroy(){super.destroy(),this._boundsRenderer=O(this._boundsRenderer)}get instanceStore(){return this._instanceStore}enableRenderingBounds(e){this._boundsRenderer=new J(e),this.requestRender()}get hasHighlight(){return this.checkHighlight()}onTileData(e,t){e.onMessage(t),this.contains(e)||this.addChild(e),this.requestRender()}_renderChildren(e,t){e.selection=t;for(const s of this.children)s.visible&&s.getDisplayList(this._instanceStore,w.STRICT_ORDER)?.render(e)}}export{K as i};
