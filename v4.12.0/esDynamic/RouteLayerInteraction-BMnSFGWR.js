import{a3 as g,a4 as y,dq as u,dD as b,d5 as d,x as o,z as n,K as w}from"./main-DnzmeE4U.js";import{h as k}from"./UpdatingHandles-DBzjq66S.js";import _ from"./GraphicsLayer-GkJJfSu5.js";import{T as v,j as f,a as B,w as M}from"./RouteLayerView2D-BJOqusbF.js";import{l as V}from"./SketchViewModel-T2dNp9Tt.js";function c(e,t){e.networkFeature=t}function L(e){const t=l(e.graphic);return{...e,networkFeature:t}}function S(e){const t=e.graphics.map(r=>l(r));return{...e,networkFeatures:t}}function l(e){return e.networkFeature}function F(e){return e?.type==="point"||e?.type==="polyline"||e?.type==="polygon"}let s=class extends g{constructor(e){super(e),this._createMode=null,this._graphicsLayer=new _({internal:!0,listMode:"hide",title:"Banana"}),this._updatingHandles=new k,this.enabled=!0,this._handleSketchViewModelEvents=async t=>{switch(t.type){case"update":switch(t.state){case"active":case"complete":for(const r of t.graphics)l(r).geometry=F(r.geometry)?r.geometry.clone():null}break;case"undo":case"redo":break;case"delete":for(const r of t.graphics){const i=l(r);this._removeNetworkFeature(i)}break;case"create":if(t.graphic&&t.state==="complete"&&this._createMode){const r=t.graphic.geometry?.clone(),i=t.graphic.symbol?.clone();if(!r)break;switch(this._createMode){case"stop":{if(r.type!=="point")break;const{stops:a}=this.layer;if(a.length>0&&a.every(({geometry:p})=>!p)){a.at(0).geometry=r;break}if(a.length>1&&a.filter((p,m)=>m!==0).every(({geometry:p})=>!p)){a.at(1).geometry=r;break}const h=new M({geometry:r});a.add(h),c(t.graphic,h);break}case"point-barrier":{if(r.type!=="point")break;const a=new B({geometry:r,symbol:i});this.layer.pointBarriers.add(a),c(t.graphic,a);break}case"polyline-barrier":{if(r.type!=="polyline")break;const a=new f({geometry:r,symbol:i});this.layer.polylineBarriers.add(a),c(t.graphic,a);break}case"polygon-barrier":{if(r.type!=="polygon")break;const a=new v({geometry:r,symbol:i});this.layer.polygonBarriers.add(a),c(t.graphic,a);break}}}}(await this.view.whenLayerView(this.layer)).emit(t.type,t.type==="create"?L(t):S(t))}}initialize(){this._sketchViewModel=new V({layer:this._graphicsLayer,view:this.view}),this.addHandles([y(()=>this.enabled,e=>{e?this._activate():this._deactivate()},u),y(()=>{const{stops:e,pointBarriers:t,polylineBarriers:r,polygonBarriers:i}=this.layer;return{stops:e,pointBarriers:t,polylineBarriers:r,polygonBarriers:i}},()=>{this.enabled&&this._loadClonedGraphics()}),this._sketchViewModel.on(["create","delete","redo","undo","update"],this._handleSketchViewModelEvents),b(this._updatingHandles)])}destroy(){this.view.map.remove(this._graphicsLayer),this._graphicsLayer.removeAll(),this._graphicsLayer=d(this._graphicsLayer),this._sketchViewModel=d(this._sketchViewModel)}get selectedNetworkFeatures(){return this._sketchViewModel.updateGraphics.map(e=>l(e))}get updating(){return this._updatingHandles.updating}create(e){switch(this._createMode=e,e){case"stop":this.layer.defaultSymbols.stops?.unlocated&&(this._sketchViewModel.pointSymbol=this.layer.defaultSymbols.stops.unlocated.clone());break;case"point-barrier":this.layer.defaultSymbols.pointBarriers&&(this._sketchViewModel.pointSymbol=this.layer.defaultSymbols.pointBarriers.clone());break;case"polyline-barrier":this.layer.defaultSymbols.polylineBarriers&&(this._sketchViewModel.polylineSymbol=this.layer.defaultSymbols.polylineBarriers.clone());break;case"polygon-barrier":this.layer.defaultSymbols.polygonBarriers&&(this._sketchViewModel.polygonSymbol=this.layer.defaultSymbols.polygonBarriers.clone())}switch(e){case"stop":case"point-barrier":return this._sketchViewModel.create("point");case"polyline-barrier":return this._sketchViewModel.create("polyline");case"polygon-barrier":return this._sketchViewModel.create("polygon")}}remove(e){const t=this._graphicsLayer.graphics.find(r=>l(r)===e);t&&this._graphicsLayer.remove(t),this._removeNetworkFeature(e)}_activate(){this._loadClonedGraphics(),this.view.map.add(this._graphicsLayer)}_deactivate(){this._sketchViewModel.cancel(),this.view.map?.remove(this._graphicsLayer),this._graphicsLayer.removeAll()}_loadClonedGraphics(){const e=[this.layer.stops,this.layer.pointBarriers,this.layer.polylineBarriers,this.layer.polygonBarriers].flatMap(t=>t.toArray().map(r=>{const i=r.toGraphic();return i.networkFeature=r,i}));this._graphicsLayer.removeAll().addMany(e)}_removeNetworkFeature(e){switch(e.type){case"stop":this.layer.stops.remove(e);break;case"point-barrier":this.layer.pointBarriers.remove(e);break;case"polyline-barrier":this.layer.polylineBarriers.remove(e);break;case"polygon-barrier":this.layer.polygonBarriers.remove(e)}}};o([n()],s.prototype,"enabled",void 0),o([n({constructOnly:!0})],s.prototype,"layer",void 0),o([n({readOnly:!0})],s.prototype,"selectedNetworkFeatures",null),o([n()],s.prototype,"updating",null),o([n({constructOnly:!0})],s.prototype,"view",void 0),s=o([w("esri.views.2d.layers.support.RouteLayerInteraction")],s);export{s as RouteLayerInteraction};
