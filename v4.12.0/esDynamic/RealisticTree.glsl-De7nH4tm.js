import{aX as z,a9 as O,aU as J,iZ as x}from"./main-DnzmeE4U.js";import{y as X,i as H}from"./memoryEstimations-iHVpvWPf.js";import{n as A}from"./mat4-BFStKTjU.js";import{e as Q,o as R}from"./mat4f64-BaJwL7tQ.js";import{u as j,E as B,g as M,r as Z,s as E,A as k}from"./vec32-BuqRmYBM.js";import{z as q}from"./vec42-D8CJyqHG.js";import{n as F}from"./vec4f64-CjUMzAyX.js";import{b as g,S as K,v as w}from"./sphere-Cj20syUS.js";import{l as U}from"./ViewingMode-CyR_b1T8.js";import{p as Y,o as S,i as f}from"./HUDVisibility.glsl-Bl7zdrV0.js";import"./boundedPlane-B6TkXVHT.js";import{bd as $,aA as I}from"./VerticalOffset.glsl-BtVaDxLq.js";import{e as tt}from"./VertexAttribute-DFC3a3eR.js";import"./glsl-o28TenZV.js";import"./vec2-BnynUbeJ.js";import"./vec2f64-CEUyUoff.js";import"./BindType-CKbZk6AG.js";import"./ShaderBuilder-BkQM64Qp.js";import{i as et,m as rt,v as st,J as it,_ as nt}from"./DefaultMaterial-DGGIMylx.js";import"./ShaderOutput-C_OqLoo1.js";import"./mat3f64-Dh9_zhFu.js";import"./mat3-DOnW3DjW.js";import"./NormalAttribute.glsl-C9zbIKka.js";import"./renderState-DlSSrLcZ.js";class at{constructor(t,e,r){this.object=t,this.geometryId=e,this.triangleNr=r}}class ot extends at{constructor(t,e,r,s){super(t,e,r),this.center=s!=null?z(s):null}}class lt{constructor(t){this.layerUid=t}}let ht=class extends lt{constructor(i,t){super(i),this.graphicUid=t}};function P(i){return i?.dist!=null}class ut extends ht{constructor(t,e,r,s,n){super(t,e),this.layerUid=t,this.graphicUid=e,this.triangleNr=r,this.baseBoundingSphere=s,this.numLodLevels=n}}const V=1e-5;class ct{constructor(t){this.options=new Y,this._results=new dt,this.transform=new $,this.tolerance=V,this.verticalOffset=null,this._ray=g(),this._rayEnd=O(),this._rayBeginTransformed=O(),this._rayEndTransformed=O(),this.viewingMode=t??U.Global}get results(){return this._results}get ray(){return this._ray}get rayBegin(){return this._ray.origin}get rayEnd(){return this._rayEnd}reset(t,e,r){this.resetWithRay(K(t,e,this._ray),r)}resetWithRay(t,e){this.camera=e,t!==this._ray&&w(t,this._ray),this.options.verticalOffset!==0?this.viewingMode===U.Local?this._ray.origin[2]-=this.options.verticalOffset:this.verticalOffset=this.options.verticalOffset:this.verticalOffset=null,j(this._rayEnd,this._ray.origin,this._ray.direction),this._results.init(this._ray)}intersect(t=null,e,r,s,n){this.point=e,this.filterPredicate=s,this.tolerance=r??V;const a=I(this.verticalOffset);if(t&&t.length>0){const o=n?l=>{n(l)&&this.intersectObject(l)}:l=>{this.intersectObject(l)};for(const l of t){const h=l.getSpatialQueryAccelerator?.();h!=null?(a!=null?h.forEachAlongRayWithVerticalOffset(this._ray.origin,this._ray.direction,o,a):h.forEachAlongRay(this._ray.origin,this._ray.direction,o),this.options.selectionMode&&this.options.hud&&h.forEachDegenerateObject(o)):l.objects.forAll(u=>o(u))}}this.sortResults()}intersectObject(t){const e=t.geometries;if(!e)return;const r=t.effectiveTransformation,s=I(this.verticalOffset);for(const n of e){if(!n.visible)continue;const{material:a,id:o}=n;if(!a.visible)continue;this.transform.setAndInvalidateLazyTransforms(r,n.transformation),B(this._rayBeginTransformed,this.rayBegin,this.transform.inverse),B(this._rayEndTransformed,this.rayEnd,this.transform.inverse);const l=this.transform.transform;s!=null&&(s.objectTransform=this.transform),a.intersect(n,this.transform.transform,this,this._rayBeginTransformed,this._rayEndTransformed,(h,u,m,y,p,L)=>{if(h>=0){if(this.filterPredicate!=null&&!this.filterPredicate(this._ray.origin,this._rayEnd,h))return;const c=y?this._results.hud:this._results,v=y?d=>{const D=new ot(t,o,m,L);d.set(f.HUD,D,h,u,R,p)}:d=>d.set(f.OBJECT,{object:t,geometryId:o,triangleNr:m},h,u,l,p);if((c.min.drapedLayerOrder==null||p>=c.min.drapedLayerOrder)&&(c.min.dist==null||h<c.min.dist)&&v(c.min),this.options.store!==S.MIN&&(c.max.drapedLayerOrder==null||p<c.max.drapedLayerOrder)&&(c.max.dist==null||h>c.max.dist)&&v(c.max),this.options.store===S.ALL)if(y){const d=new G(this._ray);v(d),this._results.hud.all.push(d)}else{const d=new _(this._ray);v(d),this._results.all.push(d)}}})}}sortResults(t=this._results.all){t.sort((e,r)=>e.dist!==r.dist?(e.dist??0)-(r.dist??0):e.drapedLayerOrder!==r.drapedLayerOrder?C(e.drapedLayerOrder,r.drapedLayerOrder):C(e.drapedLayerGraphicOrder,r.drapedLayerGraphicOrder))}}function C(i,t){return(t??-Number.MAX_VALUE)-(i??-Number.MAX_VALUE)}function mt(i){return new ct(i)}class dt{constructor(){this.min=new _(g()),this.max=new _(g()),this.hud={min:new G(g()),max:new G(g()),all:new Array},this.ground=new _(g()),this.all=[]}init(t){this.min.init(t),this.max.init(t),this.ground.init(t),this.all.length=0,this.hud.min.init(t),this.hud.max.init(t),this.hud.all.length=0}}class _{get ray(){return this._ray}get distanceInRenderSpace(){return this.dist!=null?(M(T,this.ray.direction,this.dist),Z(T)):null}withinDistance(t){return!!P(this)&&this.distanceInRenderSpace<=t}getIntersectionPoint(t){return!!P(this)&&(M(T,this.ray.direction,this.dist),j(t,this.ray.origin,T),!0)}getTransformedNormal(t){return E(b,this.normal),b[3]=0,q(b,b,this.transformation),E(t,b),k(t,t)}constructor(t){this.intersector=f.OBJECT,this.normal=O(),this.transformation=Q(),this._ray=g(),this.init(t)}init(t){this.dist=null,this.target=null,this.drapedLayerOrder=null,this.drapedLayerGraphicOrder=null,this.intersector=f.OBJECT,w(t,this._ray)}set(t,e,r,s,n,a,o){this.intersector=t,this.dist=r,E(this.normal,s??J),A(this.transformation,n??R),this.target=e,this.drapedLayerOrder=a,this.drapedLayerGraphicOrder=o}copy(t){w(t.ray,this._ray),this.intersector=t.intersector,this.dist=t.dist,this.target=t.target,this.drapedLayerOrder=t.drapedLayerOrder,this.drapedLayerGraphicOrder=t.drapedLayerGraphicOrder,E(this.normal,t.normal),A(this.transformation,t.transformation)}}class G extends _{constructor(){super(...arguments),this.intersector=f.HUD}}function ft(i){return new _(i)}const T=O(),b=F();class N{constructor(t,e,r,s){this.material=t,this.bufferWriter=t.createBufferWriter(),this.vertexBufferLayout=this.bufferWriter.vertexBufferLayout,this.buffer=e,this.elementCount=r,this.boundingInfo=s}get numTriangles(){return this.elementCount/3}get numVertices(){return this.elementCount}computeUsedMemory(){return this.buffer.byteLength+X}getRenderGeometry(){return this}intersect(t,e,r,s,n,a,o,l){const h=this.bufferWriter,u=this.buffer;h.intersect(u,t,r,s,(m,y,p,L,c)=>W(m,y,p,c,t,e,a,o,n,l))}}class yt{constructor(t){this.engineGeometry=t}get material(){return this.engineGeometry.material}get numVertices(){return this.engineGeometry.attributes.get(tt.POSITION).indices.length}get numTriangles(){return this.engineGeometry.indexCount/3}get boundingInfo(){return this.engineGeometry.boundingInfo}computeUsedMemory(){return Array.from(this.engineGeometry.attributes.values()).reduce((t,e)=>t+H(e.data,e.indices),0)}getRenderGeometry(){const t=this.material,e=this.engineGeometry,r=e.attributes,s=e.boundingInfo,n=t.createBufferWriter(),a=n.vertexBufferLayout,o=n.elementCount(r),l=a.createBuffer(o);return n.write(null,null,r,null,l,0),new N(t,l.buffer,o,s)}intersect(t,e,r,s,n,a,o,l){const h=this.engineGeometry;this.material.intersect(h,t.transform.transform,t,r,s,(u,m,y,p,L)=>W(u,m,y,L,t,e,a,o,n,l))}}function W(i,t,e,r,s,n,a,o,l,h){if(i<0||n&&!n(s.rayBegin,s.rayEnd,i))return;const u=new ut(a.layerUid,a.graphicUid(l),e,o,h);if((s.results.min.drapedLayerOrder==null||r>=s.results.min.drapedLayerOrder)&&(s.results.min.dist==null||i<s.results.min.dist)&&s.results.min.set(f.LOD,u,i,t,s.transform.transform,r),s.options.store!==S.MIN&&(s.results.max.drapedLayerOrder==null||r>=s.results.max.drapedLayerOrder)&&(s.results.max.dist==null||i>s.results.max.dist)&&s.results.max.set(f.LOD,u,i,t,s.transform.transform,r),s.options.store===S.ALL){const m=ft(s.results.min.ray);m.set(f.LOD,u,i,t,s.transform.transform,r),s.results.all.push(m)}}class pt{constructor(t,e=null){this.geometry=t,this.textures=e}get material(){return this.geometry.material}get numTriangles(){return this.geometry.numTriangles}}class gt{constructor(t,e,r){this.components=t,this.minScreenSpaceRadius=e,this.pivotOffset=r;const s=x(this.components.map(n=>n.geometry));this.numVertices=s.reduce((n,a)=>n+a.numVertices,0)}}class _t{constructor(t){this.levels=t,this.levels.sort((e,r)=>e.minScreenSpaceRadius===r.minScreenSpaceRadius?e.numVertices-r.numVertices:e.minScreenSpaceRadius-r.minScreenSpaceRadius)}getMaterials(){const t=[];return this.levels.forEach(e=>e.components.forEach(r=>t.push(r.geometry.material))),x(t)}getTextures(){const t=new Array;return this.levels.forEach(e=>e.components.forEach(r=>{r.textures!=null&&t.push(...r.textures)})),x(t)}getGeometries(){const t=new Array;return this.levels.forEach(e=>e.components.forEach(r=>{t.push(r.geometry)})),x(t)}getEngineGeometries(){return this.getGeometries().map(t=>t.engineGeometry).filter(t=>t!=null)}computeUsedMemory(){const t=this.getGeometries(),e=this.getTextures(),r=t.reduce((s,n)=>s+n.computeUsedMemory(),0);return e.reduce((s,n)=>s+n.memoryEstimate,0)+r}}const Ot=Object.freeze(Object.defineProperty({__proto__:null,build:et},Symbol.toStringTag,{value:"Module"})),bt=Object.freeze(Object.defineProperty({__proto__:null,build:rt,getRadius:st},Symbol.toStringTag,{value:"Module"})),Lt=Object.freeze(Object.defineProperty({__proto__:null,build:it},Symbol.toStringTag,{value:"Module"})),vt=Object.freeze(Object.defineProperty({__proto__:null,build:nt},Symbol.toStringTag,{value:"Module"}));export{Lt as D,vt as R,Ot as S,mt as T,yt as a,bt as b,gt as f,_t as h,pt as l,N as m};
