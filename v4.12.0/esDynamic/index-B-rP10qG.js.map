{"version":3,"file":"index-B-rP10qG.js","sources":["../../node_modules/@esri/calcite-components/dist/chunks/Heading.js","../../node_modules/tabbable/dist/index.esm.js","../../node_modules/focus-trap/dist/focus-trap.esm.js","../../node_modules/@esri/calcite-components/dist/chunks/focusTrapComponent.js","../../node_modules/@esri/calcite-components/dist/chunks/useFocusTrap.js","../../node_modules/@esri/calcite-components/dist/components/calcite-popover/customElement.js"],"sourcesContent":["import { keyed as i } from \"lit-html/directives/keyed.js\";\nimport { unsafeStatic as l, literal as n, html as m } from \"lit-html/static.js\";\nimport { safeClassMap as c } from \"@arcgis/lumina\";\n/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.0.3 */\nfunction f(e) {\n  return Math.min(Math.max(Math.ceil(e), 1), 6);\n}\nconst h = ({ children: e, ...a }) => {\n  const t = a.level ? l(`h${a.level}`) : n`div`;\n  return i(a.key, m`<${t} class=${c(a.class)}>${e}</${t}>`);\n};\nexport {\n  h as H,\n  f as c\n};\n","/*!\n* tabbable 6.2.0\n* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE\n*/\n// NOTE: separate `:not()` selectors has broader browser support than the newer\n//  `:not([inert], [inert] *)` (Feb 2023)\n// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes\n//  the entire query to fail, resulting in no nodes found, which will break a lot\n//  of things... so we have to rely on JS to identify nodes inside an inert container\nvar candidateSelectors = ['input:not([inert])', 'select:not([inert])', 'textarea:not([inert])', 'a[href]:not([inert])', 'button:not([inert])', '[tabindex]:not(slot):not([inert])', 'audio[controls]:not([inert])', 'video[controls]:not([inert])', '[contenteditable]:not([contenteditable=\"false\"]):not([inert])', 'details>summary:first-of-type:not([inert])', 'details:not([inert])'];\nvar candidateSelector = /* #__PURE__ */candidateSelectors.join(',');\nvar NoElement = typeof Element === 'undefined';\nvar matches = NoElement ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\nvar getRootNode = !NoElement && Element.prototype.getRootNode ? function (element) {\n  var _element$getRootNode;\n  return element === null || element === void 0 ? void 0 : (_element$getRootNode = element.getRootNode) === null || _element$getRootNode === void 0 ? void 0 : _element$getRootNode.call(element);\n} : function (element) {\n  return element === null || element === void 0 ? void 0 : element.ownerDocument;\n};\n\n/**\n * Determines if a node is inert or in an inert ancestor.\n * @param {Element} [node]\n * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to\n *  see if any of them are inert. If false, only `node` itself is considered.\n * @returns {boolean} True if inert itself or by way of being in an inert ancestor.\n *  False if `node` is falsy.\n */\nvar isInert = function isInert(node, lookUp) {\n  var _node$getAttribute;\n  if (lookUp === void 0) {\n    lookUp = true;\n  }\n  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`\n  //  JS API property; we have to check the attribute, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's an active element\n  var inertAtt = node === null || node === void 0 ? void 0 : (_node$getAttribute = node.getAttribute) === null || _node$getAttribute === void 0 ? void 0 : _node$getAttribute.call(node, 'inert');\n  var inert = inertAtt === '' || inertAtt === 'true';\n\n  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`\n  //  if it weren't for `matches()` not being a function on shadow roots; the following\n  //  code works for any kind of node\n  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`\n  //  so it likely would not support `:is([inert] *)` either...\n  var result = inert || lookUp && node && isInert(node.parentNode); // recursive\n\n  return result;\n};\n\n/**\n * Determines if a node's content is editable.\n * @param {Element} [node]\n * @returns True if it's content-editable; false if it's not or `node` is falsy.\n */\nvar isContentEditable = function isContentEditable(node) {\n  var _node$getAttribute2;\n  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have\n  //  to use the attribute directly to check for this, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's a non-editable element\n  var attValue = node === null || node === void 0 ? void 0 : (_node$getAttribute2 = node.getAttribute) === null || _node$getAttribute2 === void 0 ? void 0 : _node$getAttribute2.call(node, 'contenteditable');\n  return attValue === '' || attValue === 'true';\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nvar getCandidates = function getCandidates(el, includeContainer, filter) {\n  // even if `includeContainer=false`, we still have to check it for inertness because\n  //  if it's inert, all its children are inert\n  if (isInert(el)) {\n    return [];\n  }\n  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nvar getCandidatesIteratively = function getCandidatesIteratively(elements, includeContainer, options) {\n  var candidates = [];\n  var elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    var element = elementsToCheck.shift();\n    if (isInert(element, false)) {\n      // no need to look up since we're drilling down\n      // anything inside this container will also be inert\n      continue;\n    }\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      var assigned = element.assignedElements();\n      var content = assigned.length ? assigned : element.children;\n      var nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push.apply(candidates, nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates\n        });\n      }\n    } else {\n      // check candidate element\n      var validCandidate = matches.call(element, candidateSelector);\n      if (validCandidate && options.filter(element) && (includeContainer || !elements.includes(element))) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      var shadowRoot = element.shadowRoot ||\n      // check for an undisclosed shadow\n      typeof options.getShadowRoot === 'function' && options.getShadowRoot(element);\n\n      // no inert look up because we're already drilling down and checking for inertness\n      //  on the way down, so all containers to this root node should have already been\n      //  vetted as non-inert\n      var validShadowRoot = !isInert(shadowRoot, false) && (!options.shadowRootFilter || options.shadowRootFilter(element));\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        var _nestedCandidates = getCandidatesIteratively(shadowRoot === true ? element.children : shadowRoot.children, true, options);\n        if (options.flatten) {\n          candidates.push.apply(candidates, _nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: _nestedCandidates\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift.apply(elementsToCheck, element.children);\n      }\n    }\n  }\n  return candidates;\n};\n\n/**\n * @private\n * Determines if the node has an explicitly specified `tabindex` attribute.\n * @param {HTMLElement} node\n * @returns {boolean} True if so; false if not.\n */\nvar hasTabIndex = function hasTabIndex(node) {\n  return !isNaN(parseInt(node.getAttribute('tabindex'), 10));\n};\n\n/**\n * Determine the tab index of a given node.\n * @param {HTMLElement} node\n * @returns {number} Tab order (negative, 0, or positive number).\n * @throws {Error} If `node` is falsy.\n */\nvar getTabIndex = function getTabIndex(node) {\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    if ((/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || isContentEditable(node)) && !hasTabIndex(node)) {\n      return 0;\n    }\n  }\n  return node.tabIndex;\n};\n\n/**\n * Determine the tab index of a given node __for sort order purposes__.\n * @param {HTMLElement} node\n * @param {boolean} [isScope] True for a custom element with shadow root or slot that, by default,\n *  has tabIndex -1, but needs to be sorted by document order in order for its content to be\n *  inserted into the correct sort position.\n * @returns {number} Tab order (negative, 0, or positive number).\n */\nvar getSortOrderTabIndex = function getSortOrderTabIndex(node, isScope) {\n  var tabIndex = getTabIndex(node);\n  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {\n    return 0;\n  }\n  return tabIndex;\n};\nvar sortOrderedTabbables = function sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n};\nvar isInput = function isInput(node) {\n  return node.tagName === 'INPUT';\n};\nvar isHiddenInput = function isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n};\nvar isDetailsWithSummary = function isDetailsWithSummary(node) {\n  var r = node.tagName === 'DETAILS' && Array.prototype.slice.apply(node.children).some(function (child) {\n    return child.tagName === 'SUMMARY';\n  });\n  return r;\n};\nvar getCheckedRadio = function getCheckedRadio(nodes, form) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\nvar isTabbableRadio = function isTabbableRadio(node) {\n  if (!node.name) {\n    return true;\n  }\n  var radioScope = node.form || getRootNode(node);\n  var queryRadios = function queryRadios(name) {\n    return radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + name + '\"]');\n  };\n  var radioSet;\n  if (typeof window !== 'undefined' && typeof window.CSS !== 'undefined' && typeof window.CSS.escape === 'function') {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s', err.message);\n      return false;\n    }\n  }\n  var checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\nvar isRadio = function isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n};\nvar isNonTabbableRadio = function isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nvar isNodeAttached = function isNodeAttached(node) {\n  var _nodeRoot;\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible\n  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed\n  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then\n  //  `ownerDocument` will be `null`, hence the optional chaining on it.\n  var nodeRoot = node && getRootNode(node);\n  var nodeRootHost = (_nodeRoot = nodeRoot) === null || _nodeRoot === void 0 ? void 0 : _nodeRoot.host;\n\n  // in some cases, a detached node will return itself as the root instead of a document or\n  //  shadow root object, in which case, we shouldn't try to look further up the host chain\n  var attached = false;\n  if (nodeRoot && nodeRoot !== node) {\n    var _nodeRootHost, _nodeRootHost$ownerDo, _node$ownerDocument;\n    attached = !!((_nodeRootHost = nodeRootHost) !== null && _nodeRootHost !== void 0 && (_nodeRootHost$ownerDo = _nodeRootHost.ownerDocument) !== null && _nodeRootHost$ownerDo !== void 0 && _nodeRootHost$ownerDo.contains(nodeRootHost) || node !== null && node !== void 0 && (_node$ownerDocument = node.ownerDocument) !== null && _node$ownerDocument !== void 0 && _node$ownerDocument.contains(node));\n    while (!attached && nodeRootHost) {\n      var _nodeRoot2, _nodeRootHost2, _nodeRootHost2$ownerD;\n      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n      //  which means we need to get the host's host and check if that parent host is contained\n      //  in (i.e. attached to) the document\n      nodeRoot = getRootNode(nodeRootHost);\n      nodeRootHost = (_nodeRoot2 = nodeRoot) === null || _nodeRoot2 === void 0 ? void 0 : _nodeRoot2.host;\n      attached = !!((_nodeRootHost2 = nodeRootHost) !== null && _nodeRootHost2 !== void 0 && (_nodeRootHost2$ownerD = _nodeRootHost2.ownerDocument) !== null && _nodeRootHost2$ownerD !== void 0 && _nodeRootHost2$ownerD.contains(nodeRootHost));\n    }\n  }\n  return attached;\n};\nvar isZeroArea = function isZeroArea(node) {\n  var _node$getBoundingClie = node.getBoundingClientRect(),\n    width = _node$getBoundingClie.width,\n    height = _node$getBoundingClie.height;\n  return width === 0 && height === 0;\n};\nvar isHidden = function isHidden(node, _ref) {\n  var displayCheck = _ref.displayCheck,\n    getShadowRoot = _ref.getShadowRoot;\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n  var isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n  if (!displayCheck || displayCheck === 'full' || displayCheck === 'legacy-full') {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      var originalNode = node;\n      while (node) {\n        var parentElement = node.parentElement;\n        var rootNode = getRootNode(node);\n        if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nvar isDisabledFromFieldset = function isDisabledFromFieldset(node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    var parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (var i = 0; i < parentNode.children.length; i++) {\n          var child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *') ? true : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\nvar isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable(options, node) {\n  if (node.disabled ||\n  // we must do an inert look up to filter out any elements inside an inert ancestor\n  //  because we're limited in the type of selectors we can use in JSDom (see related\n  //  note related to `candidateSelectors`)\n  isInert(node) || isHiddenInput(node) || isHidden(node, options) ||\n  // For a details element with a summary, the summary element gets the focus\n  isDetailsWithSummary(node) || isDisabledFromFieldset(node)) {\n    return false;\n  }\n  return true;\n};\nvar isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable(options, node) {\n  if (isNonTabbableRadio(node) || getTabIndex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node)) {\n    return false;\n  }\n  return true;\n};\nvar isValidShadowRootTabbable = function isValidShadowRootTabbable(shadowHostNode) {\n  var tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nvar sortByOrder = function sortByOrder(candidates) {\n  var regularTabbables = [];\n  var orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    var isScope = !!item.scopeParent;\n    var element = isScope ? item.scopeParent : item;\n    var candidateTabindex = getSortOrderTabIndex(element, isScope);\n    var elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements\n      });\n    }\n  });\n  return orderedTabbables.sort(sortOrderedTabbables).reduce(function (acc, sortable) {\n    sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content);\n    return acc;\n  }, []).concat(regularTabbables);\n};\nvar tabbable = function tabbable(container, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([container], options.includeContainer, {\n      filter: isNodeMatchingSelectorTabbable.bind(null, options),\n      flatten: false,\n      getShadowRoot: options.getShadowRoot,\n      shadowRootFilter: isValidShadowRootTabbable\n    });\n  } else {\n    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));\n  }\n  return sortByOrder(candidates);\n};\nvar focusable = function focusable(container, options) {\n  options = options || {};\n  var candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively([container], options.includeContainer, {\n      filter: isNodeMatchingSelectorFocusable.bind(null, options),\n      flatten: true,\n      getShadowRoot: options.getShadowRoot\n    });\n  } else {\n    candidates = getCandidates(container, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));\n  }\n  return candidates;\n};\nvar isTabbable = function isTabbable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\nvar focusableCandidateSelector = /* #__PURE__ */candidateSelectors.concat('iframe').join(',');\nvar isFocusable = function isFocusable(node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { focusable, getTabIndex, isFocusable, isTabbable, tabbable };\n//# sourceMappingURL=index.esm.js.map\n","/*!\n* focus-trap 7.6.4\n* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE\n*/\nimport { tabbable, focusable, isTabbable, getTabIndex, isFocusable } from 'tabbable';\n\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return _arrayLikeToArray(r);\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: true,\n    configurable: true,\n    writable: true\n  }) : e[r] = t, e;\n}\nfunction _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), true).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _toConsumableArray(r) {\n  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (undefined !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : undefined;\n  }\n}\n\nvar activeFocusTraps = {\n  activateTrap: function activateTrap(trapStack, trap) {\n    if (trapStack.length > 0) {\n      var activeTrap = trapStack[trapStack.length - 1];\n      if (activeTrap !== trap) {\n        activeTrap._setPausedState(true);\n      }\n    }\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex === -1) {\n      trapStack.push(trap);\n    } else {\n      // move this existing trap to the front of the queue\n      trapStack.splice(trapIndex, 1);\n      trapStack.push(trap);\n    }\n  },\n  deactivateTrap: function deactivateTrap(trapStack, trap) {\n    var trapIndex = trapStack.indexOf(trap);\n    if (trapIndex !== -1) {\n      trapStack.splice(trapIndex, 1);\n    }\n    if (trapStack.length > 0 && !trapStack[trapStack.length - 1]._isManuallyPaused()) {\n      trapStack[trapStack.length - 1]._setPausedState(false);\n    }\n  }\n};\nvar isSelectableInput = function isSelectableInput(node) {\n  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';\n};\nvar isEscapeEvent = function isEscapeEvent(e) {\n  return (e === null || e === undefined ? undefined : e.key) === 'Escape' || (e === null || e === undefined ? undefined : e.key) === 'Esc' || (e === null || e === undefined ? undefined : e.keyCode) === 27;\n};\nvar isTabEvent = function isTabEvent(e) {\n  return (e === null || e === undefined ? undefined : e.key) === 'Tab' || (e === null || e === undefined ? undefined : e.keyCode) === 9;\n};\n\n// checks for TAB by default\nvar isKeyForward = function isKeyForward(e) {\n  return isTabEvent(e) && !e.shiftKey;\n};\n\n// checks for SHIFT+TAB by default\nvar isKeyBackward = function isKeyBackward(e) {\n  return isTabEvent(e) && e.shiftKey;\n};\nvar delay = function delay(fn) {\n  return setTimeout(fn, 0);\n};\n\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\nvar valueOrHandler = function valueOrHandler(value) {\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n  return typeof value === 'function' ? value.apply(undefined, params) : value;\n};\nvar getActualTarget = function getActualTarget(event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function' ? event.composedPath()[0] : event.target;\n};\n\n// NOTE: this must be _outside_ `createFocusTrap()` to make sure all traps in this\n//  current instance use the same stack if `userOptions.trapStack` isn't specified\nvar internalTrapStack = [];\nvar createFocusTrap = function createFocusTrap(elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  var doc = (userOptions === null || userOptions === undefined ? undefined : userOptions.document) || document;\n  var trapStack = (userOptions === null || userOptions === undefined ? undefined : userOptions.trapStack) || internalTrapStack;\n  var config = _objectSpread2({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    isKeyForward: isKeyForward,\n    isKeyBackward: isKeyBackward\n  }, userOptions);\n  var state = {\n    // containers given to createFocusTrap()\n    // @type {Array<HTMLElement>}\n    containers: [],\n    // list of objects identifying tabbable nodes in `containers` in the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   tabbableNodes: Array<HTMLElement>, // empty if none\n    //   focusableNodes: Array<HTMLElement>, // empty if none\n    //   posTabIndexesFound: boolean,\n    //   firstTabbableNode: HTMLElement|undefined,\n    //   lastTabbableNode: HTMLElement|undefined,\n    //   firstDomTabbableNode: HTMLElement|undefined,\n    //   lastDomTabbableNode: HTMLElement|undefined,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    containerGroups: [],\n    // same order/length as `containers` list\n\n    // references to objects in `containerGroups`, but only those that actually have\n    //  tabbable nodes in them\n    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__\n    //  the same length\n    tabbableGroups: [],\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n    manuallyPaused: false,\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined,\n    // the most recent KeyboardEvent for the configured nav key (typically [SHIFT+]TAB), if any\n    recentNavEvent: undefined\n  };\n  var trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  /**\n   * Gets a configuration option value.\n   * @param {Object|undefined} configOverrideOptions If true, and option is defined in this set,\n   *  value will be taken from this object. Otherwise, value will be taken from base configuration.\n   * @param {string} optionName Name of the option whose value is sought.\n   * @param {string|undefined} [configOptionName] Name of option to use __instead of__ `optionName`\n   *  IIF `configOverrideOptions` is not defined. Otherwise, `optionName` is used.\n   */\n  var getOption = function getOption(configOverrideOptions, optionName, configOptionName) {\n    return configOverrideOptions && configOverrideOptions[optionName] !== undefined ? configOverrideOptions[optionName] : config[configOptionName || optionName];\n  };\n\n  /**\n   * Finds the index of the container that contains the element.\n   * @param {HTMLElement} element\n   * @param {Event} [event] If available, and `element` isn't directly found in any container,\n   *  the event's composed path is used to see if includes any known trap containers in the\n   *  case where the element is inside a Shadow DOM.\n   * @returns {number} Index of the container in either `state.containers` or\n   *  `state.containerGroups` (the order/length of these lists are the same); -1\n   *  if the element isn't found.\n   */\n  var findContainerIndex = function findContainerIndex(element, event) {\n    var composedPath = typeof (event === null || event === undefined ? undefined : event.composedPath) === 'function' ? event.composedPath() : undefined;\n    // NOTE: search `containerGroups` because it's possible a group contains no tabbable\n    //  nodes, but still contains focusable nodes (e.g. if they all have `tabindex=-1`)\n    //  and we still need to find the element in there\n    return state.containerGroups.findIndex(function (_ref) {\n      var container = _ref.container,\n        tabbableNodes = _ref.tabbableNodes;\n      return container.contains(element) || (// fall back to explicit tabbable search which will take into consideration any\n      //  web components if the `tabbableOptions.getShadowRoot` option was used for\n      //  the trap, enabling shadow DOM support in tabbable (`Node.contains()` doesn't\n      //  look inside web components even if open)\n      composedPath === null || composedPath === undefined ? undefined : composedPath.includes(container)) || tabbableNodes.find(function (node) {\n        return node === element;\n      });\n    });\n  };\n\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @param {Object} options\n   * @param {boolean} [options.hasFallback] True if the option could be a selector string\n   *  and the option allows for a fallback scenario in the case where the selector is\n   *  valid but does not match a node (i.e. the queried node doesn't exist in the DOM).\n   * @param {Array} [options.params] Params to pass to the option if it's a function.\n   * @returns {undefined | null | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `null` if the option didn't resolve\n   *  to a node but `options.hasFallback=true`, `false` if the option resolved to `false`\n   *  (node explicitly not given); otherwise, the resolved DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node, unless the option is a selector string and `options.hasFallback=true`.\n   */\n  var getNodeForOption = function getNodeForOption(optionName) {\n    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref2$hasFallback = _ref2.hasFallback,\n      hasFallback = _ref2$hasFallback === undefined ? false : _ref2$hasFallback,\n      _ref2$params = _ref2.params,\n      params = _ref2$params === undefined ? [] : _ref2$params;\n    var optionValue = config[optionName];\n    if (typeof optionValue === 'function') {\n      optionValue = optionValue.apply(undefined, _toConsumableArray(params));\n    }\n    if (optionValue === true) {\n      optionValue = undefined; // use default value\n    }\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      }\n      // else, empty string (invalid), null (invalid), 0 (invalid)\n\n      throw new Error(\"`\".concat(optionName, \"` was specified but was not a node, or did not return a node\"));\n    }\n    var node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      try {\n        node = doc.querySelector(optionValue); // resolve to node, or null if fails\n      } catch (err) {\n        throw new Error(\"`\".concat(optionName, \"` appears to be an invalid selector; error=\\\"\").concat(err.message, \"\\\"\"));\n      }\n      if (!node) {\n        if (!hasFallback) {\n          throw new Error(\"`\".concat(optionName, \"` as selector refers to no known node\"));\n        }\n        // else, `node` MUST be `null` because that's what `Document.querySelector()` returns\n        //  if the selector is valid but doesn't match anything\n      }\n    }\n    return node;\n  };\n  var getInitialFocusNode = function getInitialFocusNode() {\n    var node = getNodeForOption('initialFocus', {\n      hasFallback: true\n    });\n\n    // false explicitly indicates we want no initialFocus at all\n    if (node === false) {\n      return false;\n    }\n    if (node === undefined || node && !isFocusable(node, config.tabbableOptions)) {\n      // option not specified nor focusable: use fallback options\n      if (findContainerIndex(doc.activeElement) >= 0) {\n        node = doc.activeElement;\n      } else {\n        var firstTabbableGroup = state.tabbableGroups[0];\n        var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n\n        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    } else if (node === null) {\n      // option is a VALID selector string that doesn't yield a node: use the `fallbackFocus`\n      //  option instead of the default behavior when the option isn't specified at all\n      node = getNodeForOption('fallbackFocus');\n    }\n    if (!node) {\n      throw new Error('Your focus-trap needs to have at least one focusable element');\n    }\n    return node;\n  };\n  var updateTabbableNodes = function updateTabbableNodes() {\n    state.containerGroups = state.containers.map(function (container) {\n      var tabbableNodes = tabbable(container, config.tabbableOptions);\n\n      // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n      //  are a superset of tabbable nodes since nodes with negative `tabindex` attributes\n      //  are focusable but not tabbable\n      var focusableNodes = focusable(container, config.tabbableOptions);\n      var firstTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[0] : undefined;\n      var lastTabbableNode = tabbableNodes.length > 0 ? tabbableNodes[tabbableNodes.length - 1] : undefined;\n      var firstDomTabbableNode = focusableNodes.find(function (node) {\n        return isTabbable(node);\n      });\n      var lastDomTabbableNode = focusableNodes.slice().reverse().find(function (node) {\n        return isTabbable(node);\n      });\n      var posTabIndexesFound = !!tabbableNodes.find(function (node) {\n        return getTabIndex(node) > 0;\n      });\n      return {\n        container: container,\n        tabbableNodes: tabbableNodes,\n        focusableNodes: focusableNodes,\n        /** True if at least one node with positive `tabindex` was found in this container. */\n        posTabIndexesFound: posTabIndexesFound,\n        /** First tabbable node in container, __tabindex__ order; `undefined` if none. */\n        firstTabbableNode: firstTabbableNode,\n        /** Last tabbable node in container, __tabindex__ order; `undefined` if none. */\n        lastTabbableNode: lastTabbableNode,\n        // NOTE: DOM order is NOT NECESSARILY \"document position\" order, but figuring that out\n        //  would require more than just https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n        //  because that API doesn't work with Shadow DOM as well as it should (@see\n        //  https://github.com/whatwg/dom/issues/320) and since this first/last is only needed, so far,\n        //  to address an edge case related to positive tabindex support, this seems like a much easier,\n        //  \"close enough most of the time\" alternative for positive tabindexes which should generally\n        //  be avoided anyway...\n        /** First tabbable node in container, __DOM__ order; `undefined` if none. */\n        firstDomTabbableNode: firstDomTabbableNode,\n        /** Last tabbable node in container, __DOM__ order; `undefined` if none. */\n        lastDomTabbableNode: lastDomTabbableNode,\n        /**\n         * Finds the __tabbable__ node that follows the given node in the specified direction,\n         *  in this container, if any.\n         * @param {HTMLElement} node\n         * @param {boolean} [forward] True if going in forward tab order; false if going\n         *  in reverse.\n         * @returns {HTMLElement|undefined} The next tabbable node, if any.\n         */\n        nextTabbableNode: function nextTabbableNode(node) {\n          var forward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n          var nodeIdx = tabbableNodes.indexOf(node);\n          if (nodeIdx < 0) {\n            // either not tabbable nor focusable, or was focused but not tabbable (negative tabindex):\n            //  since `node` should at least have been focusable, we assume that's the case and mimic\n            //  what browsers do, which is set focus to the next node in __document position order__,\n            //  regardless of positive tabindexes, if any -- and for reasons explained in the NOTE\n            //  above related to `firstDomTabbable` and `lastDomTabbable` properties, we fall back to\n            //  basic DOM order\n            if (forward) {\n              return focusableNodes.slice(focusableNodes.indexOf(node) + 1).find(function (el) {\n                return isTabbable(el);\n              });\n            }\n            return focusableNodes.slice(0, focusableNodes.indexOf(node)).reverse().find(function (el) {\n              return isTabbable(el);\n            });\n          }\n          return tabbableNodes[nodeIdx + (forward ? 1 : -1)];\n        }\n      };\n    });\n    state.tabbableGroups = state.containerGroups.filter(function (group) {\n      return group.tabbableNodes.length > 0;\n    });\n\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n    if (state.tabbableGroups.length <= 0 && !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error('Your focus-trap must have at least one container with at least one tabbable node in it at all times');\n    }\n\n    // NOTE: Positive tabindexes are only properly supported in single-container traps because\n    //  doing it across multiple containers where tabindexes could be all over the place\n    //  would require Tabbable to support multiple containers, would require additional\n    //  specialized Shadow DOM support, and would require Tabbable's multi-container support\n    //  to look at those containers in document position order rather than user-provided\n    //  order (as they are treated in Focus-trap, for legacy reasons). See discussion on\n    //  https://github.com/focus-trap/focus-trap/issues/375 for more details.\n    if (state.containerGroups.find(function (g) {\n      return g.posTabIndexesFound;\n    }) && state.containerGroups.length > 1) {\n      throw new Error(\"At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.\");\n    }\n  };\n\n  /**\n   * Gets the current activeElement. If it's a web-component and has open shadow-root\n   * it will recursively search inside shadow roots for the \"true\" activeElement.\n   *\n   * @param {Document | ShadowRoot} el\n   *\n   * @returns {HTMLElement} The element that currently has the focus\n   **/\n  var _getActiveElement = function getActiveElement(el) {\n    var activeElement = el.activeElement;\n    if (!activeElement) {\n      return;\n    }\n    if (activeElement.shadowRoot && activeElement.shadowRoot.activeElement !== null) {\n      return _getActiveElement(activeElement.shadowRoot);\n    }\n    return activeElement;\n  };\n  var _tryFocus = function tryFocus(node) {\n    if (node === false) {\n      return;\n    }\n    if (node === _getActiveElement(document)) {\n      return;\n    }\n    if (!node || !node.focus) {\n      _tryFocus(getInitialFocusNode());\n      return;\n    }\n    node.focus({\n      preventScroll: !!config.preventScroll\n    });\n    // NOTE: focus() API does not trigger focusIn event so set MRU node manually\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n  var getReturnFocusNode = function getReturnFocusNode(previousActiveElement) {\n    var node = getNodeForOption('setReturnFocus', {\n      params: [previousActiveElement]\n    });\n    return node ? node : node === false ? false : previousActiveElement;\n  };\n\n  /**\n   * Finds the next node (in either direction) where focus should move according to a\n   *  keyboard focus-in event.\n   * @param {Object} params\n   * @param {Node} [params.target] Known target __from which__ to navigate, if any.\n   * @param {KeyboardEvent|FocusEvent} [params.event] Event to use if `target` isn't known (event\n   *  will be used to determine the `target`). Ignored if `target` is specified.\n   * @param {boolean} [params.isBackward] True if focus should move backward.\n   * @returns {Node|undefined} The next node, or `undefined` if a next node couldn't be\n   *  determined given the current state of the trap.\n   */\n  var findNextNavNode = function findNextNavNode(_ref3) {\n    var target = _ref3.target,\n      event = _ref3.event,\n      _ref3$isBackward = _ref3.isBackward,\n      isBackward = _ref3$isBackward === undefined ? false : _ref3$isBackward;\n    target = target || getActualTarget(event);\n    updateTabbableNodes();\n    var destinationNode = null;\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      var containerIndex = findContainerIndex(target, event);\n      var containerGroup = containerIndex >= 0 ? state.containerGroups[containerIndex] : undefined;\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back into...\n        if (isBackward) {\n          // ...the last node in the last group\n          destinationNode = state.tabbableGroups[state.tabbableGroups.length - 1].lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (isBackward) {\n        // REVERSE\n\n        // is the target the first tabbable node in a group?\n        var startOfGroupIndex = state.tabbableGroups.findIndex(function (_ref4) {\n          var firstTabbableNode = _ref4.firstTabbableNode;\n          return target === firstTabbableNode;\n        });\n        if (startOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target, false))) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n          var destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = getTabIndex(target) >= 0 ? destinationGroup.lastTabbableNode : destinationGroup.lastDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target, false);\n        }\n      } else {\n        // FORWARD\n\n        // is the target the last tabbable node in a group?\n        var lastOfGroupIndex = state.tabbableGroups.findIndex(function (_ref5) {\n          var lastTabbableNode = _ref5.lastTabbableNode;\n          return target === lastTabbableNode;\n        });\n        if (lastOfGroupIndex < 0 && (containerGroup.container === target || isFocusable(target, config.tabbableOptions) && !isTabbable(target, config.tabbableOptions) && !containerGroup.nextTabbableNode(target))) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];\n          destinationNode = getTabIndex(target) >= 0 ? _destinationGroup.firstTabbableNode : _destinationGroup.firstDomTabbableNode;\n        } else if (!isTabEvent(event)) {\n          // user must have customized the nav keys so we have to move focus manually _within_\n          //  the active group: do this based on the order determined by tabbable()\n          destinationNode = containerGroup.nextTabbableNode(target);\n        }\n      }\n    } else {\n      // no groups available\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n    return destinationNode;\n  };\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  var checkPointerDown = function checkPointerDown(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target, e) >= 0) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked (and if not focusable, to \"nothing\"); by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node), whether the\n        //  outside click was on a focusable node or not\n        returnFocus: config.returnFocusOnDeactivate\n      });\n      return;\n    }\n\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    }\n\n    // otherwise, prevent the click\n    e.preventDefault();\n  };\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  // NOTE: the focusIn event is NOT cancelable, so if focus escapes, it may cause unexpected\n  //  scrolling if the node that got focused was out of view; there's nothing we can do to\n  //  prevent that from happening by the time we discover that focus escaped\n  var checkFocusIn = function checkFocusIn(event) {\n    var target = getActualTarget(event);\n    var targetContained = findContainerIndex(target, event) >= 0;\n\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      event.stopImmediatePropagation();\n\n      // focus will escape if the MRU node had a positive tab index and user tried to nav forward;\n      //  it will also escape if the MRU node had a 0 tab index and user tried to nav backward\n      //  toward a node with a positive tab index\n      var nextNode; // next node to focus, if we find one\n      var navAcrossContainers = true;\n      if (state.mostRecentlyFocusedNode) {\n        if (getTabIndex(state.mostRecentlyFocusedNode) > 0) {\n          // MRU container index must be >=0 otherwise we wouldn't have it as an MRU node...\n          var mruContainerIdx = findContainerIndex(state.mostRecentlyFocusedNode);\n          // there MAY not be any tabbable nodes in the container if there are at least 2 containers\n          //  and the MRU node is focusable but not tabbable (focus-trap requires at least 1 container\n          //  with at least one tabbable node in order to function, so this could be the other container\n          //  with nothing tabbable in it)\n          var tabbableNodes = state.containerGroups[mruContainerIdx].tabbableNodes;\n          if (tabbableNodes.length > 0) {\n            // MRU tab index MAY not be found if the MRU node is focusable but not tabbable\n            var mruTabIdx = tabbableNodes.findIndex(function (node) {\n              return node === state.mostRecentlyFocusedNode;\n            });\n            if (mruTabIdx >= 0) {\n              if (config.isKeyForward(state.recentNavEvent)) {\n                if (mruTabIdx + 1 < tabbableNodes.length) {\n                  nextNode = tabbableNodes[mruTabIdx + 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              } else {\n                if (mruTabIdx - 1 >= 0) {\n                  nextNode = tabbableNodes[mruTabIdx - 1];\n                  navAcrossContainers = false;\n                }\n                // else, don't wrap within the container as focus should move to next/previous\n                //  container\n              }\n              // else, don't find in container order without considering direction too\n            }\n          }\n          // else, no tabbable nodes in that container (which means we must have at least one other\n          //  container with at least one tabbable node in it, otherwise focus-trap would've thrown\n          //  an error the last time updateTabbableNodes() was run): find next node among all known\n          //  containers\n        } else {\n          // check to see if there's at least one tabbable node with a positive tab index inside\n          //  the trap because focus seems to escape when navigating backward from a tabbable node\n          //  with tabindex=0 when this is the case (instead of wrapping to the tabbable node with\n          //  the greatest positive tab index like it should)\n          if (!state.containerGroups.some(function (g) {\n            return g.tabbableNodes.some(function (n) {\n              return getTabIndex(n) > 0;\n            });\n          })) {\n            // no containers with tabbable nodes with positive tab indexes which means the focus\n            //  escaped for some other reason and we should just execute the fallback to the\n            //  MRU node or initial focus node, if any\n            navAcrossContainers = false;\n          }\n        }\n      } else {\n        // no MRU node means we're likely in some initial condition when the trap has just\n        //  been activated and initial focus hasn't been given yet, in which case we should\n        //  fall through to trying to focus the initial focus node, which is what should\n        //  happen below at this point in the logic\n        navAcrossContainers = false;\n      }\n      if (navAcrossContainers) {\n        nextNode = findNextNavNode({\n          // move FROM the MRU node, not event-related node (which will be the node that is\n          //  outside the trap causing the focus escape we're trying to fix)\n          target: state.mostRecentlyFocusedNode,\n          isBackward: config.isKeyBackward(state.recentNavEvent)\n        });\n      }\n      if (nextNode) {\n        _tryFocus(nextNode);\n      } else {\n        _tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n      }\n    }\n    state.recentNavEvent = undefined; // clear\n  };\n\n  // Hijack key nav events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  var checkKeyNav = function checkKeyNav(event) {\n    var isBackward = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    state.recentNavEvent = event;\n    var destinationNode = findNextNavNode({\n      event: event,\n      isBackward: isBackward\n    });\n    if (destinationNode) {\n      if (isTabEvent(event)) {\n        // since tab natively moves focus, we wouldn't have a destination node unless we\n        //  were on the edge of a container and had to move to the next/previous edge, in\n        //  which case we want to prevent default to keep the browser from moving focus\n        //  to where it normally would\n        event.preventDefault();\n      }\n      _tryFocus(destinationNode);\n    }\n    // else, let the browser take care of [shift+]tab and move the focus\n  };\n  var checkTabKey = function checkTabKey(event) {\n    if (config.isKeyForward(event) || config.isKeyBackward(event)) {\n      checkKeyNav(event, config.isKeyBackward(event));\n    }\n  };\n\n  // we use a different event phase for the Escape key to allow canceling the event and checking for this in escapeDeactivates\n  var checkEscapeKey = function checkEscapeKey(event) {\n    if (isEscapeEvent(event) && valueOrHandler(config.escapeDeactivates, event) !== false) {\n      event.preventDefault();\n      trap.deactivate();\n    }\n  };\n  var checkClick = function checkClick(e) {\n    var target = getActualTarget(e);\n    if (findContainerIndex(target, e) >= 0) {\n      return;\n    }\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  //\n  // EVENT LISTENERS\n  //\n\n  var addListeners = function addListeners() {\n    if (!state.active) {\n      return;\n    }\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trapStack, trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    state.delayInitialFocusTimer = config.delayInitialFocus ? delay(function () {\n      _tryFocus(getInitialFocusNode());\n    }) : _tryFocus(getInitialFocusNode());\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkTabKey, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkEscapeKey);\n    return trap;\n  };\n  var removeListeners = function removeListeners() {\n    if (!state.active) {\n      return;\n    }\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkTabKey, true);\n    doc.removeEventListener('keydown', checkEscapeKey);\n    return trap;\n  };\n\n  //\n  // MUTATION OBSERVER\n  //\n\n  var checkDomRemoval = function checkDomRemoval(mutations) {\n    var isFocusedNodeRemoved = mutations.some(function (mutation) {\n      var removedNodes = Array.from(mutation.removedNodes);\n      return removedNodes.some(function (node) {\n        return node === state.mostRecentlyFocusedNode;\n      });\n    });\n\n    // If the currently focused is removed then browsers will move focus to the\n    // <body> element. If this happens, try to move focus back into the trap.\n    if (isFocusedNodeRemoved) {\n      _tryFocus(getInitialFocusNode());\n    }\n  };\n\n  // Use MutationObserver - if supported - to detect if focused node is removed\n  // from the DOM.\n  var mutationObserver = typeof window !== 'undefined' && 'MutationObserver' in window ? new MutationObserver(checkDomRemoval) : undefined;\n  var updateObservedNodes = function updateObservedNodes() {\n    if (!mutationObserver) {\n      return;\n    }\n    mutationObserver.disconnect();\n    if (state.active && !state.paused) {\n      state.containers.map(function (container) {\n        mutationObserver.observe(container, {\n          subtree: true,\n          childList: true\n        });\n      });\n    }\n  };\n\n  //\n  // TRAP DEFINITION\n  //\n\n  trap = {\n    get active() {\n      return state.active;\n    },\n    get paused() {\n      return state.paused;\n    },\n    activate: function activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n      var onActivate = getOption(activateOptions, 'onActivate');\n      var onPostActivate = getOption(activateOptions, 'onPostActivate');\n      var checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n      onActivate === null || onActivate === undefined || onActivate();\n      var finishActivation = function finishActivation() {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        updateObservedNodes();\n        onPostActivate === null || onPostActivate === undefined || onPostActivate();\n      };\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(finishActivation, finishActivation);\n        return this;\n      }\n      finishActivation();\n      return this;\n    },\n    deactivate: function deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n      var options = _objectSpread2({\n        onDeactivate: config.onDeactivate,\n        onPostDeactivate: config.onPostDeactivate,\n        checkCanReturnFocus: config.checkCanReturnFocus\n      }, deactivateOptions);\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n      state.delayInitialFocusTimer = undefined;\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      updateObservedNodes();\n      activeFocusTraps.deactivateTrap(trapStack, trap);\n      var onDeactivate = getOption(options, 'onDeactivate');\n      var onPostDeactivate = getOption(options, 'onPostDeactivate');\n      var checkCanReturnFocus = getOption(options, 'checkCanReturnFocus');\n      var returnFocus = getOption(options, 'returnFocus', 'returnFocusOnDeactivate');\n      onDeactivate === null || onDeactivate === undefined || onDeactivate();\n      var finishDeactivation = function finishDeactivation() {\n        delay(function () {\n          if (returnFocus) {\n            _tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          onPostDeactivate === null || onPostDeactivate === undefined || onPostDeactivate();\n        });\n      };\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation)).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n      finishDeactivation();\n      return this;\n    },\n    pause: function pause(pauseOptions) {\n      if (!state.active) {\n        return this;\n      }\n      state.manuallyPaused = true;\n      return this._setPausedState(true, pauseOptions);\n    },\n    unpause: function unpause(unpauseOptions) {\n      if (!state.active) {\n        return this;\n      }\n      state.manuallyPaused = false;\n      if (trapStack[trapStack.length - 1] !== this) {\n        return this;\n      }\n      return this._setPausedState(false, unpauseOptions);\n    },\n    updateContainerElements: function updateContainerElements(containerElements) {\n      var elementsAsArray = [].concat(containerElements).filter(Boolean);\n      state.containers = elementsAsArray.map(function (element) {\n        return typeof element === 'string' ? doc.querySelector(element) : element;\n      });\n      if (state.active) {\n        updateTabbableNodes();\n      }\n      updateObservedNodes();\n      return this;\n    }\n  };\n  Object.defineProperties(trap, {\n    _isManuallyPaused: {\n      value: function value() {\n        return state.manuallyPaused;\n      }\n    },\n    _setPausedState: {\n      value: function value(paused, options) {\n        if (state.paused === paused) {\n          return this;\n        }\n        state.paused = paused;\n        if (paused) {\n          var onPause = getOption(options, 'onPause');\n          var onPostPause = getOption(options, 'onPostPause');\n          onPause === null || onPause === undefined || onPause();\n          removeListeners();\n          updateObservedNodes();\n          onPostPause === null || onPostPause === undefined || onPostPause();\n        } else {\n          var onUnpause = getOption(options, 'onUnpause');\n          var onPostUnpause = getOption(options, 'onPostUnpause');\n          onUnpause === null || onUnpause === undefined || onUnpause();\n          updateTabbableNodes();\n          addListeners();\n          updateObservedNodes();\n          onPostUnpause === null || onPostUnpause === undefined || onPostUnpause();\n        }\n        return this;\n      }\n    }\n  });\n\n  // initialize container elements\n  trap.updateContainerElements(elements);\n  return trap;\n};\n\nexport { createFocusTrap };\n//# sourceMappingURL=focus-trap.esm.js.map\n","import { createFocusTrap as e } from \"focus-trap\";\nimport { p as t, b as u } from \"./dom.js\";\nimport { f as o } from \"./runtime.js\";\n/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.0.3 */\nfunction n(a, c) {\n  const { el: s } = a, r = c?.focusTrapEl || s;\n  r && (a.focusTrap = e(r, f(s, c?.focusTrapOptions)));\n}\nfunction f(a, c) {\n  return {\n    clickOutsideDeactivates: !0,\n    fallbackFocus: c?.fallbackFocus || a,\n    setReturnFocus: (r) => (u(r), !1),\n    ...c,\n    // the following options are not overridable\n    document: a.ownerDocument,\n    tabbableOptions: t,\n    trapStack: o\n  };\n}\nfunction d(a, c) {\n  (a.focusTrapDisabledOverride ? !a.focusTrapDisabledOverride() : !a.focusTrapDisabled) && a.focusTrap?.activate(c);\n}\nfunction l(a, c) {\n  a.focusTrap?.deactivate(c);\n}\nexport {\n  d as a,\n  n as b,\n  f as c,\n  l as d\n};\n","import { makeGenericController as l } from \"@arcgis/components-controllers\";\nimport { createFocusTrap as p } from \"focus-trap\";\nimport { c as v } from \"./focusTrapComponent.js\";\n/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.0.3 */\nfunction o(r, { focusTrapOptions: e }, i) {\n  return !e?.extraContainers && !i ? r : [r, ...n(e?.extraContainers), ...n(i)];\n}\nfunction n(r = []) {\n  return Array.isArray(r) ? r : [r];\n}\nconst F = (r) => l((e, i) => {\n  let a, u, c;\n  const d = r.focusTrapOptions;\n  i.onConnected(() => {\n    e[r.triggerProp] && a && s.activate();\n  }), i.onUpdate((t) => {\n    e.hasUpdated && t.has(\"focusTrapDisabled\") && (e.focusTrapDisabled ? s.deactivate() : s.activate());\n  }), i.onDisconnected(() => s.deactivate());\n  const s = {\n    activate: () => {\n      const t = u || e.el;\n      if (t.isConnected) {\n        if (!a) {\n          const f = {\n            ...d,\n            ...e.focusTrapOptions\n          };\n          c ||= o(t, e), a = p(c, v(t, f));\n        }\n        (typeof e.focusTrapDisabledOverride == \"function\" ? !e.focusTrapDisabledOverride() : !e.focusTrapDisabled) && a.activate();\n      }\n    },\n    deactivate: () => a?.deactivate(),\n    overrideFocusTrapEl: (t) => {\n      if (a)\n        throw new Error(\"Focus trap already created\");\n      u = t;\n    },\n    setExtraContainers: (t) => {\n      const f = u || e.el;\n      c = o(f, e, t);\n    },\n    updateContainerElements: () => a?.updateContainerElements(c)\n  };\n  return s;\n});\nexport {\n  F as u\n};\n","import { c as k } from \"../../chunks/runtime.js\";\nimport { keyed as h } from \"lit-html/directives/keyed.js\";\nimport { html as f } from \"lit\";\nimport { createRef as x, ref as u } from \"lit-html/directives/ref.js\";\nimport { LitElement as C, createEvent as n, safeClassMap as s, setAttribute as A } from \"@arcgis/lumina\";\nimport { d as m, r as D, a as F, f as $, c as L, h as H, F as g } from \"../../chunks/floating-ui.js\";\nimport { u as O, h as T, t as B, q as R } from \"../../chunks/dom.js\";\nimport { g as z } from \"../../chunks/guid.js\";\nimport { o as U } from \"../../chunks/openCloseComponent.js\";\nimport { H as S } from \"../../chunks/Heading.js\";\nimport { c as I } from \"../../chunks/loadable.js\";\nimport { c as q } from \"../../chunks/observers.js\";\nimport { F as _ } from \"../../chunks/FloatingArrow.js\";\nimport { g as N } from \"../../chunks/component.js\";\nimport { u as M } from \"../../chunks/useT9n.js\";\nimport { u as K } from \"../../chunks/useFocusTrap.js\";\nimport { i as j } from \"../../chunks/key.js\";\nimport { css as V } from \"@lit/reactive-element/css-tag.js\";\n/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\nv3.0.3 */\nclass X {\n  constructor() {\n    this.registeredElements = /* @__PURE__ */ new Map(), this.registeredElementCount = 0, this.queryPopover = (e) => {\n      const { registeredElements: t } = this, i = e.find((r) => t.has(r));\n      return t.get(i);\n    }, this.togglePopovers = (e) => {\n      const t = e.composedPath(), i = this.queryPopover(t);\n      i && !i.triggerDisabled && (i.open = !i.open), Array.from(this.registeredElements.values()).filter(\n        (r) => r !== i && r.autoClose && r.open && !t.includes(r)\n      ).forEach((r) => r.open = !1);\n    }, this.keyDownHandler = (e) => {\n      e.defaultPrevented || (e.key === \"Escape\" ? this.closeAllPopovers() : j(e.key) && this.togglePopovers(e));\n    }, this.clickHandler = (e) => {\n      O(e) || e.defaultPrevented || this.togglePopovers(e);\n    };\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n  registerElement(e, t) {\n    this.registeredElementCount++, this.registeredElements.set(e, t), this.registeredElementCount === 1 && this.addListeners();\n  }\n  unregisterElement(e) {\n    this.registeredElements.delete(e) && this.registeredElementCount--, this.registeredElementCount === 0 && this.removeListeners();\n  }\n  closeAllPopovers() {\n    Array.from(this.registeredElements.values()).forEach((e) => e.open = !1);\n  }\n  addListeners() {\n    window.addEventListener(\"click\", this.clickHandler), window.addEventListener(\"keydown\", this.keyDownHandler);\n  }\n  removeListeners() {\n    window.removeEventListener(\"click\", this.clickHandler), window.removeEventListener(\"keydown\", this.keyDownHandler);\n  }\n}\nconst o = {\n  positionContainer: \"position-container\",\n  container: \"container\",\n  closeButtonContainer: \"close-button-container\",\n  closeButton: \"close-button\",\n  content: \"content\",\n  hasHeader: \"has-header\",\n  header: \"header\",\n  headerContainer: \"headerContainer\",\n  heading: \"heading\"\n}, v = \"auto\", b = \"aria-controls\", E = \"aria-expanded\", G = V`:host{display:contents;--calcite-floating-ui-z-index: var(--calcite-popover-z-index, var(--calcite-z-index-popup))}.position-container{inline-size:max-content;display:none;inset-block-start:0;left:0;z-index:var(--calcite-floating-ui-z-index)}.position-container .calcite-floating-ui-anim{position:relative;transition:var(--calcite-floating-ui-transition);transition-property:inset,left,opacity;opacity:0;box-shadow:0 0 16px #00000029;z-index:var(--calcite-z-index);border-radius:.25rem}.position-container[data-placement^=bottom] .calcite-floating-ui-anim{inset-block-start:-5px}.position-container[data-placement^=top] .calcite-floating-ui-anim{inset-block-start:5px}.position-container[data-placement^=left] .calcite-floating-ui-anim{left:5px}.position-container[data-placement^=right] .calcite-floating-ui-anim{left:-5px}.position-container[data-placement] .calcite-floating-ui-anim--active{opacity:1;inset-block-start:0;left:0}.calcite-floating-ui-arrow{pointer-events:none;position:absolute;z-index:calc(var(--calcite-z-index) * -1);fill:var(--calcite-color-foreground-1)}.calcite-floating-ui-arrow__stroke{stroke:var(--calcite-color-border-3)}:host([scale=s]) .heading{padding:.5rem .75rem;font-size:var(--calcite-font-size--1);line-height:1.375}:host([scale=m]) .heading{padding:.75rem 1rem;font-size:var(--calcite-font-size-0);line-height:1.375}:host([scale=l]) .heading{padding:1rem 1.25rem;font-size:var(--calcite-font-size-1);line-height:1.375}.position-container .calcite-floating-ui-anim{border-width:1px;border-style:solid;background-color:var(--calcite-popover-background-color, var(--calcite-color-foreground-1));border-color:var(--calcite-popover-border-color, var(--calcite-color-border-3));border-radius:var(--calcite-popover-corner-radius, var(--calcite-corner-radius-round))}.calcite-floating-ui-arrow{fill:var(--calcite-popover-background-color, var(--calcite-color-foreground-1))}.calcite-floating-ui-arrow__stroke{stroke:var(--calcite-popover-border-color, var(--calcite-color-border-3))}.header{display:flex;flex:1 1 auto;align-items:stretch;justify-content:flex-start;border-width:0px;border-bottom-width:1px;border-style:solid;border-block-end-color:var(--calcite-popover-border-color, var(--calcite-color-border-3))}.heading{margin:0;display:block;flex:1 1 auto;align-self:center;white-space:normal;font-weight:var(--calcite-font-weight-medium);word-wrap:break-word;word-break:break-word;color:var(--calcite-popover-text-color, var(--calcite-color-text-1))}.headerContainer{position:relative;display:flex;height:100%;flex-direction:row;flex-wrap:nowrap;border-radius:.25rem;color:var(--calcite-popover-text-color, var(--calcite-color-text-1))}.headerContainer.has-header{flex-direction:column}.content{display:flex;height:100%;width:100%;flex-direction:column;flex-wrap:nowrap;align-self:center;word-wrap:break-word;word-break:break-word}.close-button-container{display:flex;overflow:hidden;flex:0 0 auto;border-start-end-radius:var(--calcite-popover-corner-radius, var(--calcite-corner-radius-round));border-end-end-radius:var(--calcite-popover-corner-radius, var(--calcite-corner-radius-round));--calcite-action-corner-radius-start-end: var(--calcite-popover-corner-radius, var(--calcite-corner-radius-sharp));--calcite-action-corner-radius-end-end: var(--calcite-popover-corner-radius, var(--calcite-corner-radius-sharp))}::slotted(calcite-panel),::slotted(calcite-flow){height:100%}:host([hidden]){display:none}[hidden]{display:none}`, w = new X();\nclass J extends C {\n  constructor() {\n    super(...arguments), this.closeButtonEl = x(), this.focusTrap = K({\n      triggerProp: \"open\",\n      focusTrapOptions: {\n        allowOutsideClick: !0,\n        escapeDeactivates: (e) => (e.defaultPrevented || (this.open = !1, e.preventDefault()), !1)\n      }\n    })(this), this.guid = `calcite-popover-${z()}`, this.hasLoaded = !1, this.mutationObserver = q(\"mutation\", () => this.focusTrap.updateContainerElements()), this.transitionProp = \"opacity\", this.floatingLayout = \"vertical\", this.autoClose = !1, this.closable = !1, this.flipDisabled = !1, this.focusTrapDisabled = !1, this.messages = M(), this.offsetDistance = m, this.offsetSkidding = 0, this.open = !1, this.overlayPositioning = \"absolute\", this.placement = v, this.pointerDisabled = !1, this.scale = \"m\", this.triggerDisabled = !1, this.calcitePopoverBeforeClose = n({ cancelable: !1 }), this.calcitePopoverBeforeOpen = n({ cancelable: !1 }), this.calcitePopoverClose = n({ cancelable: !1 }), this.calcitePopoverOpen = n({ cancelable: !1 });\n  }\n  static {\n    this.properties = { floatingLayout: 16, referenceEl: 16, autoClose: 7, closable: 7, flipDisabled: 7, flipPlacements: 0, focusTrapDisabled: 7, focusTrapOptions: 0, heading: 1, headingLevel: 11, label: 1, messageOverrides: 0, offsetDistance: 11, offsetSkidding: 11, open: 7, overlayPositioning: 3, placement: 3, pointerDisabled: 7, referenceElement: 1, scale: 3, triggerDisabled: 7 };\n  }\n  static {\n    this.styles = G;\n  }\n  // #endregion\n  // #region Public Methods\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed\n   */\n  async reposition(e = !1) {\n    const { referenceEl: t, placement: i, overlayPositioning: r, flipDisabled: l, filteredFlipPlacements: c, offsetDistance: a, offsetSkidding: d, arrowEl: p, floatingEl: P } = this;\n    return D(this, {\n      floatingEl: P,\n      referenceEl: t,\n      overlayPositioning: r,\n      placement: i,\n      flipDisabled: l,\n      flipPlacements: c,\n      offsetDistance: a,\n      offsetSkidding: d,\n      arrowEl: p,\n      type: \"popover\"\n    }, e);\n  }\n  /** Sets focus on the component's first focusable element. */\n  async setFocus() {\n    await I(this), this.requestUpdate(), T(this.el);\n  }\n  /** Updates the element(s) that are used within the focus-trap of the component. */\n  async updateFocusTrapElements() {\n    this.focusTrap.updateContainerElements();\n  }\n  // #endregion\n  // #region Lifecycle\n  connectedCallback() {\n    super.connectedCallback(), this.mutationObserver?.observe(this.el, { childList: !0, subtree: !0 }), this.setFilteredPlacements(), requestAnimationFrame(() => this.setUpReferenceElement(this.hasLoaded));\n  }\n  async load() {\n  }\n  willUpdate(e) {\n    e.has(\"flipPlacements\") && this.flipPlacementsHandler(), e.has(\"open\") && (this.hasUpdated || this.open !== !1) && this.openHandler(), (e.has(\"offsetDistance\") && (this.hasUpdated || this.offsetDistance !== m) || e.has(\"offsetSkidding\") && (this.hasUpdated || this.offsetSkidding !== 0) || e.has(\"overlayPositioning\") && (this.hasUpdated || this.overlayPositioning !== \"absolute\") || e.has(\"placement\") && (this.hasUpdated || this.placement !== v)) && this.reposition(!0), e.has(\"referenceElement\") && this.referenceElementHandler();\n  }\n  loaded() {\n    this.referenceElement && !this.referenceEl && this.setUpReferenceElement(), this.hasLoaded = !0;\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback(), this.mutationObserver?.disconnect(), this.removeReferences(), F(this);\n  }\n  // #endregion\n  // #region Private Methods\n  flipPlacementsHandler() {\n    this.setFilteredPlacements(), this.reposition(!0);\n  }\n  openHandler() {\n    U(this), this.reposition(!0), this.setExpandedAttr();\n  }\n  referenceElementHandler() {\n    this.setUpReferenceElement(), this.reposition(!0);\n  }\n  setFloatingEl(e) {\n    this.floatingEl = e, e && requestAnimationFrame(() => this.setUpReferenceElement());\n  }\n  setTransitionEl(e) {\n    this.transitionEl = e;\n  }\n  setFilteredPlacements() {\n    const { el: e, flipPlacements: t } = this;\n    this.filteredFlipPlacements = t ? $(t, e) : null;\n  }\n  setUpReferenceElement(e = !0) {\n    this.removeReferences(), this.referenceEl = this.getReferenceElement(), L(this);\n    const { el: t, referenceElement: i, referenceEl: r } = this;\n    e && i && !r && console.warn(`${t.tagName}: reference-element id \"${i}\" was not found.`, {\n      el: t\n    }), this.addReferences();\n  }\n  getId() {\n    return this.el.id || this.guid;\n  }\n  setExpandedAttr() {\n    const { referenceEl: e, open: t } = this;\n    e && \"setAttribute\" in e && e.setAttribute(E, B(t));\n  }\n  addReferences() {\n    const { referenceEl: e } = this;\n    if (!e)\n      return;\n    const t = this.getId();\n    \"setAttribute\" in e && e.setAttribute(b, t), w.registerElement(e, this.el), this.setExpandedAttr();\n  }\n  removeReferences() {\n    const { referenceEl: e } = this;\n    e && (\"removeAttribute\" in e && (e.removeAttribute(b), e.removeAttribute(E)), w.unregisterElement(e));\n  }\n  getReferenceElement() {\n    const { referenceElement: e, el: t } = this;\n    return (typeof e == \"string\" ? R(t, { id: e }) : e) || null;\n  }\n  hide() {\n    this.open = !1;\n  }\n  onBeforeOpen() {\n    this.calcitePopoverBeforeOpen.emit();\n  }\n  onOpen() {\n    this.calcitePopoverOpen.emit(), this.focusTrap.activate();\n  }\n  onBeforeClose() {\n    this.calcitePopoverBeforeClose.emit();\n  }\n  onClose() {\n    this.calcitePopoverClose.emit(), H(this), this.focusTrap.deactivate();\n  }\n  storeArrowEl(e) {\n    this.arrowEl = e, this.reposition(!0);\n  }\n  // #endregion\n  // #region Rendering\n  renderCloseButton() {\n    const { messages: e, closable: t } = this;\n    return t ? h(o.closeButtonContainer, f`<div class=${s(o.closeButtonContainer)}><calcite-action appearance=transparent class=${s(o.closeButton)} @click=${this.hide} .scale=${this.scale} .text=${e.close} ${u(this.closeButtonEl)}><calcite-icon icon=x .scale=${N(this.scale)}></calcite-icon></calcite-action></div>`) : null;\n  }\n  renderHeader() {\n    const { heading: e, headingLevel: t } = this, i = e ? S({ class: o.heading, level: t, children: e }) : null;\n    return i ? h(o.header, f`<div class=${s(o.header)}>${i}${this.renderCloseButton()}</div>`) : null;\n  }\n  render() {\n    const { referenceEl: e, heading: t, label: i, open: r, pointerDisabled: l, floatingLayout: c } = this, a = e && r, d = !a, p = l ? null : h(\"floating-arrow\", _({ floatingLayout: c, ref: this.storeArrowEl }));\n    return this.el.inert = d, this.el.ariaLabel = i, this.el.ariaLive = \"polite\", A(this.el, \"id\", this.getId()), this.el.role = \"dialog\", f`<div class=${s(o.positionContainer)} ${u(this.setFloatingEl)}><div class=${s({\n      [o.container]: !0,\n      [g.animation]: !0,\n      [g.animationActive]: a\n    })} ${u(this.setTransitionEl)}>${p}<div class=${s({\n      [o.hasHeader]: !!t,\n      [o.headerContainer]: !0\n    })}>${this.renderHeader()}<div class=${s(o.content)}><slot></slot></div>${t ? null : this.renderCloseButton()}</div></div></div>`;\n  }\n}\nk(\"calcite-popover\", J);\nexport {\n  J as Popover\n};\n"],"names":["h","e","a","l","n","i","m","c","candidateSelectors","candidateSelector","NoElement","matches","getRootNode","element","_element$getRootNode","isInert","node","lookUp","_node$getAttribute","inertAtt","inert","result","isContentEditable","_node$getAttribute2","attValue","getCandidates","el","includeContainer","filter","candidates","getCandidatesIteratively","elements","options","elementsToCheck","assigned","content","nestedCandidates","validCandidate","shadowRoot","validShadowRoot","_nestedCandidates","hasTabIndex","getTabIndex","getSortOrderTabIndex","isScope","tabIndex","sortOrderedTabbables","b","isInput","isHiddenInput","isDetailsWithSummary","r","child","getCheckedRadio","nodes","form","isTabbableRadio","radioScope","queryRadios","name","radioSet","err","checked","isRadio","isNonTabbableRadio","isNodeAttached","_nodeRoot","nodeRoot","nodeRootHost","attached","_nodeRootHost","_nodeRootHost$ownerDo","_node$ownerDocument","_nodeRoot2","_nodeRootHost2","_nodeRootHost2$ownerD","isZeroArea","_node$getBoundingClie","width","height","isHidden","_ref","displayCheck","getShadowRoot","isDirectSummary","nodeUnderDetails","originalNode","parentElement","rootNode","isDisabledFromFieldset","parentNode","isNodeMatchingSelectorFocusable","isNodeMatchingSelectorTabbable","isValidShadowRootTabbable","shadowHostNode","sortByOrder","regularTabbables","orderedTabbables","item","candidateTabindex","acc","sortable","tabbable","container","focusable","isTabbable","focusableCandidateSelector","isFocusable","_arrayLikeToArray","_arrayWithoutHoles","_defineProperty","_toPropertyKey","_iterableToArray","_nonIterableSpread","ownKeys","o","_objectSpread2","_toConsumableArray","_unsupportedIterableToArray","_toPrimitive","t","activeFocusTraps","trapStack","trap","activeTrap","trapIndex","isSelectableInput","isEscapeEvent","isTabEvent","isKeyForward","isKeyBackward","delay","fn","valueOrHandler","value","_len","params","_key","getActualTarget","event","internalTrapStack","createFocusTrap","userOptions","doc","config","state","getOption","configOverrideOptions","optionName","configOptionName","findContainerIndex","composedPath","tabbableNodes","getNodeForOption","_ref2","_ref2$hasFallback","hasFallback","_ref2$params","optionValue","getInitialFocusNode","firstTabbableGroup","firstTabbableNode","updateTabbableNodes","focusableNodes","lastTabbableNode","firstDomTabbableNode","lastDomTabbableNode","posTabIndexesFound","forward","nodeIdx","group","g","_getActiveElement","activeElement","_tryFocus","getReturnFocusNode","previousActiveElement","findNextNavNode","_ref3","target","_ref3$isBackward","isBackward","destinationNode","containerIndex","containerGroup","startOfGroupIndex","_ref4","destinationGroupIndex","destinationGroup","lastOfGroupIndex","_ref5","_destinationGroupIndex","_destinationGroup","checkPointerDown","checkFocusIn","targetContained","nextNode","navAcrossContainers","mruContainerIdx","mruTabIdx","checkKeyNav","checkTabKey","checkEscapeKey","checkClick","addListeners","removeListeners","checkDomRemoval","mutations","isFocusedNodeRemoved","mutation","removedNodes","mutationObserver","updateObservedNodes","activateOptions","onActivate","onPostActivate","checkCanFocusTrap","finishActivation","deactivateOptions","onDeactivate","onPostDeactivate","checkCanReturnFocus","returnFocus","finishDeactivation","pauseOptions","unpauseOptions","containerElements","elementsAsArray","paused","onPause","onPostPause","onUnpause","onPostUnpause","f","u","F","d","s","p","v","X","j","O","E","G","V","w","J","C","x","K","z","q","M","P","D","I","T","U","$","L","B","R","H","N","S","_","A","k"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}