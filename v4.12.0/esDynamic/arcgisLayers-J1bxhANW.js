import{M as I,s as m,cS as g,cT as L,I as P,bM as v}from"./main-DnzmeE4U.js";import{s as O}from"./associatedFeatureServiceUtils-DCapzd9d.js";import{t as p,i as d,a as T}from"./fetchService-Bp_4TwIU.js";import{a as U}from"./lazyLayerLoader-CEoVkyTx.js";const C={FeatureLayer:!0,SceneLayer:!0};async function F(r){const{properties:s,url:e}=r,t={...s,url:e},n=await J(e,s?.customParameters),{Constructor:a,layerId:o,sourceJSON:c,parsedUrl:i,layers:u,tables:l}=n;if(u.length+l.length===0)return o!=null&&(t.layerId=o),c!=null&&(t.sourceJSON=c),new a(t);const y=new(await import("./streamLayerUtils-C6RxjeRB.js").then(f=>f.d)).default({title:i.title});return await N(y,n,t),y}function S(r,s){return r?r.find(({id:e})=>e===s):null}function b(r,s,e,t,n){const a={...n,layerId:s};return r!=null&&(a.url=r),e!=null&&(a.sourceJSON=e),"sublayerTitleMode"in t.prototype&&(a.sublayerTitleMode="service-name"),new t(a)}async function N(r,s,e){const t=s.sublayerConstructorProvider;for(const{id:n,serverUrl:a}of s.layers){const o=S(s.sublayerInfos,n),c=b(a,n,o,(o&&t?.(o))??s.Constructor,e);r.add(c)}if(s.tables.length){const n=await w("FeatureLayer");s.tables.forEach(({id:a,serverUrl:o})=>{const c=b(o,a,S(s.tableInfos,a),n,e);r.tables.add(c)})}}async function J(r,s){let e=I(r);if(e==null&&(e=await M(r,s)),e==null)throw new m("arcgis-layers:url-mismatch","The url '${url}' is not a valid arcgis resource",{url:r});const{serverType:t,sublayer:n}=e;let a;const o={FeatureServer:"FeatureLayer",KnowledgeGraphServer:"KnowledgeGraphLayer",StreamServer:"StreamLayer",VectorTileServer:"VectorTileLayer",VideoServer:"VideoLayer"},c=t==="FeatureServer",i=t==="SceneServer",u={parsedUrl:e,Constructor:null,layerId:c||i?n??void 0:void 0,layers:[],tables:[]};switch(t){case"MapServer":if(n!=null){const{type:l}=await p(r,{customParameters:s});switch(a="FeatureLayer",l){case"Catalog Layer":a="CatalogLayer";break;case"Catalog Dynamic Group Layer":throw new m("arcgis-layers:unsupported",`fromUrl() not supported for "${l}" layers`)}}else a=await x(r,s)?"TileLayer":"MapImageLayer";break;case"ImageServer":{const l=await p(r,{customParameters:s}),{tileInfo:y,cacheType:f}=l;a=y?y?.format?.toUpperCase()!=="LERC"||f&&f.toLowerCase()!=="elevation"?"ImageryTileLayer":"ElevationLayer":"ImageryLayer";break}case"SceneServer":{const l=await p(e.url.path,{customParameters:s});if(a="SceneLayer",l){const y=l?.layers;if(l?.layerType==="Voxel")a="VoxelLayer";else if(y?.length){const f=y[0]?.layerType;f!=null&&v[f]!=null&&(a=v[f])}}break}case"3DTilesServer":throw new m("arcgis-layers:unsupported","fromUrl() not supported for 3DTiles layers");case"FeatureServer":if(a="FeatureLayer",n!=null){const l=await p(r,{customParameters:s});u.sourceJSON=l,a=d(l.type)}break;default:a=o[t]}if(C[a]&&n==null){const l=await V(r,t,s);if(c&&(u.sublayerInfos=l.layerInfos,u.tableInfos=l.tableInfos),l.layers.length+l.tables.length!==1)u.layers=l.layers,u.tables=l.tables,c&&l.layerInfos?.length&&(u.sublayerConstructorProvider=await E(l.layerInfos));else if(c||i){const y=l.layerInfos?.[0]??l.tableInfos?.[0];if(u.layerId=l.layers[0]?.id??l.tables[0]?.id,u.sourceJSON=y,c){const f=y?.type;a=d(f)}}}return u.Constructor=await w(a),u}async function M(r,s){const e=await p(r,{customParameters:s});let t=null,n=null;const a=e.type;if(a==="Feature Layer"||a==="Table"?(t="FeatureServer",n=e.id??null):a==="indexedVector"?t="VectorTileServer":e.hasOwnProperty("mapName")?t="MapServer":e.hasOwnProperty("bandCount")&&e.hasOwnProperty("pixelSizeX")?t="ImageServer":e.hasOwnProperty("maxRecordCount")&&e.hasOwnProperty("allowGeometryUpdates")?t="FeatureServer":e.hasOwnProperty("streamUrls")?t="StreamServer":h(e)?(t="SceneServer",n=e.id):e.hasOwnProperty("layers")&&h(e.layers?.[0])&&(t="SceneServer"),!t)return null;const o=n!=null?g(r):null;return{title:o!=null&&e.name||L(r),serverType:t,sublayer:n,url:{path:o!=null?o.serviceUrl:P(r).path}}}function h(r){return r!=null&&r.hasOwnProperty("store")&&r.hasOwnProperty("id")&&typeof r.id=="number"}async function V(r,s,e){let t,n,a=!1;switch(s){case"FeatureServer":{const i=await T(r,{customParameters:e});a=!!i.layersJSON,t=i.layersJSON||i.serviceJSON;break}case"SceneServer":{const i=await k(r,e);t=i.serviceInfo,n=i.tableServerUrl;break}default:t=await p(r,{customParameters:e})}const o=t?.layers,c=t?.tables;return{layers:o?.map(i=>({id:i.id})).reverse()||[],tables:c?.map(i=>({serverUrl:n,id:i.id})).reverse()||[],layerInfos:a?o:[],tableInfos:a?c:[]}}async function k(r,s){const e=await p(r,{customParameters:s});if(!e.layers?.[0])return{serviceInfo:e};try{const{serverUrl:t}=await O(r),n=await p(t,{customParameters:s}).catch(()=>null);return n&&(e.tables=n.tables),{serviceInfo:e,tableServerUrl:t}}catch{return{serviceInfo:e}}}async function w(r){return(0,U[r])()}async function x(r,s){return(await p(r,{customParameters:s})).tileInfo}async function E(r){if(!r.length)return;const s=new Set,e=[];for(const{type:a}of r)s.has(a)||(s.add(a),e.push(w(d(a))));const t=await Promise.all(e),n=new Map;return Array.from(s).forEach((a,o)=>{n.set(a,t[o])}),a=>n.get(a.type)}export{F as fromUrl};
