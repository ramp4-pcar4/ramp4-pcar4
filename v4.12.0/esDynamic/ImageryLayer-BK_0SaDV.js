import{x as s,z as a,by as Y,K as w,G as v,af as Ye,D as L,B as x,bj as Pe,ai as D,v as Br,aY as Oi,an as F,aj as te,dd as Bi,ap as ze,ae as bt,s as b,bx as Z,hs as Yt,hG as Ui,n as $t,ah as Ur,cz as _i,cA as Hi,l0 as er,f3 as _r,J as Vi,bm as ge,Q as pe,kU as Oe,kT as St,l1 as Rt,bi as $,bJ as re,ao as Ei,ac as _,b7 as S,c8 as tr,I as ki,a4 as Ji,l2 as Zi,kX as Gi,dC as qi,bc as Wi,dr as Qi}from"./main-DnzmeE4U.js";import{f as Ki,y as Xi,b as Yi,j as $i,S as es,d as ts,l as rs}from"./PortalLayer-rRU66wtN.js";import{f as is}from"./Layer-B8q-l4yV.js";import{p as rr,a as ss,m as ns,c as as,f as os,d as ls,$ as us,b as ps,v as cs,e as ir,g as ms,h as ds,i as ys,V as hs,t as Ze,n as gs,j as fs,k as ws}from"./multidimensionalUtils-Cerm72TU.js";import{n as fe,S as Hr,B as Dt,a as lt,c as Is,A as Ms,b as Be,i as ut,d as vs,e as bs,o as sr,u as Vr,t as Er,r as Ss,f as Rs,g as Ds,h as kr,j as nr,_ as As,k as Jr,P as xs}from"./RasterSymbolizer-YAjvxuoS.js";import{s as js}from"./pixelRangeUtils-BteWOAF5.js";import{b as At,v as Zr,j as Gr,f as qr}from"./commonProperties-BLIn8DYU.js";import{y as Wr}from"./Field-Cj6Pz3TI.js";import{Z as Ts}from"./FieldsIndex-Y7EBAYp0.js";import{t as Qr}from"./imageBitmapUtils-D8LZDu4M.js";import{a as ce,s as De,d as Cs,f as Ns,p as Fs,e as Ls,i as Ps}from"./dataUtils-CkgWlGaX.js";import{p as zs}from"./workers-0oosFQiO.js";import{w as xt,a as Kr}from"./ClassBreaksRenderer-D97YzbWp.js";import{u as Os}from"./RendererLegendOptions-f5mIImtQ.js";import{m as Xr,p as Yr,a as $r}from"./colorRamps-KMmVdCPJ.js";import{n as ei,A as ar}from"./UniqueValueRenderer-BmoLL_Ee.js";import{R as Ue}from"./normalizeUtils-b-vZURob.js";import{T as Bs,h as Us}from"./visualVariableUtils-BO-_wo28.js";import{D as _s,J as Hs}from"./utils-C_9ghOVk.js";import"./ColorStop-DoHCvOqO.js";import"./ClassBreaksDefinition-B_vYk3bu.js";import{f as H,s as k,i as J}from"./utils-DuaeuwP5.js";import{s as Vs,b as or}from"./Query-CxQYWcUQ.js";import{p as jt}from"./TimeExtent-gZaEUVeW.js";import{d as lr}from"./FeatureSet-Dxf4LeOj.js";import{a as Es,s as ks}from"./executeForIds-MucOSmLz.js";import{s as Js}from"./executeQueryJSON-BK4r1MU-.js";import{l as Zs}from"./ArcGISService-CdvDPeWS.js";import{p as Gs,t as qs}from"./ScaleRangeLayer-DIxukUBC.js";import{e as Ws,p as Qs}from"./popupUtils-BiEhUPlu.js";import{f as Ks}from"./RefreshableLayer-yYqabqcs.js";import{l as Xs}from"./TemporalLayer-DxgXU1f-.js";import{t as Ys}from"./versionUtils-DDW8eV12.js";import{A as Tt}from"./interfaces-Cwm0pihk.js";let _e=class extends v{constructor(){super(...arguments),this.pixelType="unknown"}};s([a({type:String,json:{write:{isRequired:!0}}})],_e.prototype,"name",void 0),s([a({type:String,json:{write:!0}})],_e.prototype,"description",void 0),s([a({type:Y,json:{type:Y,write:!0,name:"_object_id"}})],_e.prototype,"id",void 0),s([a({type:String,json:{type:fe.jsonValues,read:fe.read,write:{writer:fe.write,isRequired:!0}}})],_e.prototype,"pixelType",void 0),s([a({type:String,json:{write:{isRequired:!0}}})],_e.prototype,"type",void 0),_e=s([w("esri.layers.support.RasterFunctionInfo")],_e);const $s=_e;let Ae=class extends v{constructor(){super(...arguments),this.isDataset=!1,this.isPublic=!1,this.type="RasterFunctionVariable"}};s([a({type:String,json:{write:!0}})],Ae.prototype,"name",void 0),s([a({type:Number,json:{type:Y,write:!0,name:"_object_id"}})],Ae.prototype,"id",void 0),s([a({type:Boolean,json:{write:!0}})],Ae.prototype,"isDataset",void 0),s([a({type:Boolean,json:{write:!0}})],Ae.prototype,"isPublic",void 0),s([a({json:{write:!0}})],Ae.prototype,"value",void 0),s([a({type:String,json:{write:!0}})],Ae.prototype,"type",void 0),Ae=s([w("esri.layers.support.RasterFunctionVariable")],Ae);const en=Ae,Ct={key:"type",base:null,typeMap:{RasterFunctionVariable:en}};let Ge=class extends v{};s([a({types:Ct,json:{types:Ct,name:"MatchVariable"}})],Ge.prototype,"matchVariable",void 0),s([a({types:Ct,json:{types:Ct,name:"UnionDimension"}})],Ge.prototype,"unionDimension",void 0),s([a({type:Number,json:{type:Y,write:!0,name:"_object_id"}})],Ge.prototype,"id",void 0),s([a({type:String,json:{write:!0}})],Ge.prototype,"type",void 0),Ge=s([w("esri.layers.support.RasterFunctionProperties")],Ge);const tn=Ge,ur=new Ye({0:"mosaic",1:"item",2:"item-group"},{useNumericKeys:!0});let E=class extends v{constructor(){super(...arguments),this.description="",this.functionType="mosaic",this.type="RasterFunctionTemplate"}};s([a({type:[String],json:{write:!0}})],E.prototype,"aliases",void 0),s([a({type:Object,json:{write:{isRequired:!0}}})],E.prototype,"arguments",void 0),s([a({type:String,json:{write:{isRequired:!0}}})],E.prototype,"description",void 0),s([a({type:$s,json:{write:{isRequired:!0},name:"function"}})],E.prototype,"functionInfo",void 0),s([a({type:ur.apiValues,json:{type:[0,1,2],read:ur.read,write:{writer:ur.write,isRequired:!0}}})],E.prototype,"functionType",void 0),s([a({type:String,json:{write:!0}})],E.prototype,"group",void 0),s([a({type:String,json:{write:!0}})],E.prototype,"help",void 0),s([a({type:Number,json:{type:Y,write:!0,name:"_object_id"}})],E.prototype,"id",void 0),s([a({type:String,json:{write:{isRequired:!0}}})],E.prototype,"name",void 0),s([a({type:String,json:{write:!0,name:"definition"}})],E.prototype,"queryDefinition",void 0),s([a({type:String,json:{write:!0}})],E.prototype,"tag",void 0),s([a({type:tn,json:{write:!0}})],E.prototype,"properties",void 0),s([a({type:String,json:{write:!0}})],E.prototype,"thumbnail",void 0),s([a({type:String,json:{write:!0}})],E.prototype,"thumbnailEx",void 0),s([a({json:{type:["RasterFunctionTemplate"],write:!0}})],E.prototype,"type",void 0),E=s([w("esri.layers.support.RasterFunctionTemplate")],E);const ti=E;var pr;const Nt=new Set(["raster","raster2","dem","fillraster"]),Ft=new Set(["rasters"]),ri=e=>e?.rasterFunction?G.fromJSON(e):e,cr=e=>e&&e instanceof G?e.toJSON():e,mr=e=>e?.functionName&&!e.declaredClass,ii=e=>mr(e)?new G(e):e,rn=e=>{if(e==null)return null;e=D(e);const r={};for(const n of Object.keys(e))Nt.has(n.toLowerCase())?r[n]=ri(e[n]):Ft.has(n.toLowerCase())&&Array.isArray(e[n])?r[n]=e[n].map(ri):r[n]=e[n];return r},si=e=>e?ti.fromJSON({type:"RasterFunctionTemplate",...e}):void 0,sn={types:{key:"type",base:null,typeMap:{RasterFunctionTemplate:ti}},json:{write:!0,name:"rasterFunctionDefinition",read:si}};let G=pr=class extends v{constructor(e){super(e),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.functionDefinition=null}set functionArguments(e){if(e){const r=Object.keys(e);if(r.some(n=>Nt.has(n.toLowerCase())&&mr(e[n]))||r.some(n=>Ft.has(n.toLowerCase())&&Array.isArray(e[n])&&e[n].some(t=>mr(t)))){e=D(e);for(const n of r)Nt.has(n.toLowerCase())?e[n]=ii(e[n]):Ft.has(n.toLowerCase())&&Array.isArray(e[n])&&(e[n]=e[n].map(t=>ii(t)))}}this._set("functionArguments",e)}readFunctionArguments(e){return rn(e)}writeFunctionArguments(e,r,n){const t={};for(const i of Object.keys(e))Nt.has(i.toLowerCase())?t[i]=cr(e[i]):Ft.has(i.toLowerCase())&&Array.isArray(e[i])?t[i]=e[i].map(cr):t[i]=cr(e[i]);r[n]=t}readFunctionName(e,r){const n=r.rasterFunctionInfos;return r.name||(n?.length&&n[0].name!=="None"?n[0].name:r.rasterFunction||r.rasterFunctionDefinition?.name)}get rasterFunctionDefinition(){return this.functionDefinition?.toJSON()}set rasterFunctionDefinition(e){this.functionDefinition=si(e)}get hasClipFunction(){return this.rasterFunctionDefinition?JSON.stringify(this.rasterFunctionDefinition).includes('"type":"ClipFunction"'):JSON.stringify(this).includes('"rasterFunction":"Clip"')}clone(){return new pr({functionName:this.functionName,functionArguments:D(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,rasterFunctionDefinition:D(this.rasterFunctionDefinition)})}};s([a({json:{type:Object,name:"rasterFunctionArguments"}})],G.prototype,"functionArguments",null),s([L("functionArguments")],G.prototype,"readFunctionArguments",null),s([x("functionArguments")],G.prototype,"writeFunctionArguments",null),s([a({json:{type:String,write:{target:"rasterFunction"}}})],G.prototype,"functionName",void 0),s([L("functionName",["rasterFunction","rasterFunctionInfos","rasterFunctionDefinition"])],G.prototype,"readFunctionName",null),s([Pe({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1,default:"unknown"})],G.prototype,"outputPixelType",void 0),s([a({type:String,json:{read:!0,write:!0}})],G.prototype,"variableName",void 0),s([a()],G.prototype,"rasterFunctionDefinition",null),s([a(sn)],G.prototype,"functionDefinition",void 0),s([a()],G.prototype,"hasClipFunction",null),G=pr=s([w("esri.layers.support.RasterFunction")],G);const j=G,nn={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}},an=new Set(["u1","u2","u4","u8","s8","u16","s16"]),on={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},ln=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function ni(e){return ln.has(e.type)}function dr(e,r){if(!e||!r)return D(e||r);const n=D(e);if(n.functionDefinition&&r.rasterFunctionDefinition){const t=r.rasterFunctionDefinition;(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=void 0),ai(n.functionDefinition.arguments,r),n.rasterFunctionDefinition=n.functionDefinition.toJSON()}else r.functionName?.toLowerCase()!=="none"&&(oi(n.functionArguments).Raster=r);return n}function ai(e,r){for(const n in e)n.toLowerCase()==="raster"&&(e[n].type==="RasterFunctionVariable"?(e[n]=r.rasterFunctionDefinition,e[n].type="RasterFunctionTemplate"):e[n].type==="RasterFunctionTemplate"&&ai(e[n].arguments,r))}function we(e){const r=D(nn[e.functionName+"Function"]),n=e.functionArguments;for(const t in n)t.toLowerCase()==="raster"?(r.arguments[t]=we(n[t]),r.arguments[t].type="RasterFunctionTemplate"):t.toLowerCase()==="colormap"?(r.arguments[t].value=gn(n[t]),r.arguments.ColorSchemeType.value=0):r.arguments[t].value=n[t];return r}function un(e,r){switch(r=r||{},e.type){case"raster-stretch":return mn(e,r);case"class-breaks":return dn(e,r);case"unique-value":return yn(e,r);case"raster-colormap":return hn(e,r);case"vector-field":return pn(e,r);case"raster-shaded-relief":return cn(e,r);case"flow":throw new Error("Unsupported rendering rule.")}}function oi(e){const r=e?.Raster??e?.raster;return r&&r.declaredClass==="esri.layers.support.RasterFunction"?oi(r.functionArguments):e}const pt={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function pn(e,r){const n=new j;n.functionName="VectorFieldRenderer";const{dataType:t,bandNames:i}=r,o=t==="vector-uv";let l,u;if(i&&i.length===2){const h=i.map(g=>g.toLowerCase());l=h.indexOf("magnitude"),u=h.indexOf("direction")}l!==-1&&l!==null||(l=0,u=1);const p=e.rotationType==="arithmetic"?1:2,c=e.flowRepresentation==="flow-from"?0:1,m=e.visualVariables?e.visualVariables.find(h=>h.field==="Magnitude"):new At,d={magnitudeBandID:l,directionBandID:u,isUVComponents:o,referenceSystem:p,massFlowAngleRepresentation:c,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:on[e.style.toLowerCase().replace("-","_")],minimumMagnitude:m.minDataValue,maximumMagnitude:m.maxDataValue,minimumSymbolSize:m.minSize,maximumSymbolSize:m.maxSize};n.functionArguments=d;const f=we(n);return r.convertToRFT?j.fromJSON({rasterFunctionDefinition:f}):n}function cn(e,r){const n=r.convertToRFT;if(r.dataType!=="elevation"&&(r.dataType!=="generic"||r.bandCount!==1||r.pixelType!=="s16"&&r.pixelType!=="s32"&&r.pixelType!=="f32"&&r.pixelType!=="f64"))return new j;const t=new j;t.functionName="Hillshade";const i=e.hillshadeType==="traditional"?0:1,o=e.scalingType==="none"?1:3,l={HillshadeType:i,SlopeType:o,ZFactor:e.zFactor};return i===0&&(l.Azimuth=e.azimuth,l.Altitude=e.altitude),o===3&&(l.PSPower=e.pixelSizePower,l.PSZFactor=e.pixelSizeFactor),t.functionArguments=l,t.variableName="Raster",e.colorRamp&&(t.functionName="ShadedRelief",n?l.ColorRamp=Hr(e.colorRamp):l.Colormap=Dt(e.colorRamp)),n?new j({rasterFunctionDefinition:we(t)}):t}function mn(e,r){const n=r.convertToRFT,t=new j;t.functionName="Stretch";const i=pt[lt.toJSON(e.stretchType)],o="u8",l=e.customStatistics?.map(p=>[p.min,p.max,p.avg??0,p.stddev??1]),u={StretchType:i,Statistics:l,DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(e.outputMin!=null&&(u.Min=e.outputMin),e.outputMax!=null&&(u.Max=e.outputMax),i===pt.standardDeviation?(u.NumberOfStandardDeviations=e.numberOfStandardDeviations,t.outputPixelType=o):i===pt.percentClip?(u.MinPercent=e.minPercent,u.MaxPercent=e.maxPercent,t.outputPixelType=o):i===pt.minMax?t.outputPixelType=o:i===pt.sigmoid&&(u.SigmoidStrengthLevel=e.sigmoidStrengthLevel),t.functionArguments=u,t.variableName="Raster",e.colorRamp){const p=e.colorRamp,c=new j;if(n)c.functionArguments={ColorRamp:Hr(p)};else{const m=Is(p,!0);if(m)c.functionArguments={colorRampName:m};else if(!r.convertColorRampToColormap||p.type!=="algorithmic"&&p.type!=="multipart"){const d=e.colorRamp.toJSON();d.type==="algorithmic"?d.algorithm=d.algorithm||"esriCIELabAlgorithm":d.type==="multipart"&&d.colorRamps?.length&&d.colorRamps.forEach(f=>f.algorithm=f.algorithm||"esriCIELabAlgorithm"),c.functionArguments={colorRamp:d}}else c.functionArguments={Colormap:Dt(p)}}return c.variableName="Raster",c.functionName="Colormap",c.functionArguments.Raster=t,n?new j({rasterFunctionDefinition:we(c)}):c}return n?new j({rasterFunctionDefinition:we(t)}):t}function dn(e,r){const n=[],t=[],i=[],o=[],{pixelType:l,rasterAttributeTable:u}=r,p=u==null?null:u.features,c=li(u);if(c&&p&&Array.isArray(p)&&e.classBreakInfos){e.classBreakInfos.forEach((y,I)=>{const M=y.symbol?.color;let R;M?.a&&y.minValue!=null&&y.maxValue!=null&&p.forEach(N=>{y.minValue!=null&&y.maxValue!=null&&(R=N.attributes[e.field],(R>=y.minValue&&R<y.maxValue||I===e.classBreakInfos.length-1&&R>=y.minValue)&&o.push([N.attributes[c],M.r,M.g,M.b]))})});const h=l?Lt(o,l):o,g=new j;return g.functionName="Colormap",g.functionArguments={},g.functionArguments.Colormap=h,g.variableName="Raster",r.convertToRFT?new j({rasterFunctionDefinition:we(g)}):g}e.classBreakInfos.forEach((h,g)=>{if(h.minValue==null||h.maxValue==null)return;const y=h.symbol&&h.symbol.color;y?.a?(g===0?n.push(h.minValue,h.maxValue+1e-4):n.push(h.minValue+1e-4,h.maxValue+1e-4),t.push(g),o.push([g,y.r,y.g,y.b])):i.push(h.minValue,h.maxValue)});const m=l?Lt(o,l):o,d=new j;d.functionName="Remap",d.functionArguments={InputRanges:n,OutputValues:t,NoDataRanges:i},d.variableName="Raster";const f=new j;return f.functionName="Colormap",f.functionArguments={Colormap:m,Raster:d},r.convertToRFT?new j({rasterFunctionDefinition:we(f)}):f}function Lt(e,r){const n=an.has(r)?js(r):null;return n&&e.push([Math.floor(n[0]-1),0,0,0],[Math.ceil(n[1]+1),0,0,0]),e}function li(e){if(e==null)return;const{fields:r}=e;return r?.find(n=>n?.name&&n.name.toLowerCase()==="value")?.name}function yn(e,r){const n=[],{pixelType:t,rasterAttributeTable:i}=r,o=i==null?null:i.features,l=li(i),u=e.defaultSymbol?.color?.toRgb(),p=e.uniqueValueInfos;if(p)if(o){if(l){const d=new Map;p.forEach(h=>{const g=h.value,y=ui(h);g!=null&&y?.a&&d.set(String(g),y.toRgb())});const f=e.field;f&&o.forEach(({attributes:h})=>{const g=String(h[f]),y=h[l],I=d.get(g);I?n.push([y,...I]):u&&n.push([y,...u])})}}else for(let d=0;d<p.length;d++){const f=p[d],h=ui(f),g=+f.value;if(h?.a){if(isNaN(g))return null;n.push([g,h.r,h.g,h.b])}}const c=t?Lt(n,t):n,m=new j;return m.functionName="Colormap",m.functionArguments={},m.functionArguments.Colormap=c,m.variableName="Raster",r.convertToRFT?new j({rasterFunctionDefinition:we(m)}):m}function ui(e){return e.symbol?.type==="polygon-3d"?e.symbol.symbolLayers?.find(r=>r.type==="fill")?.material?.color:e.symbol?.color}function hn(e,r){const n=e.extractColormap();if(!n||n.length===0)return null;const{pixelType:t}=r,i=t?Lt(n,t):n,o=new j;return o.functionName="Colormap",o.functionArguments={},o.functionArguments.Colormap=i,r.convertToRFT?new j({rasterFunctionDefinition:we(o)}):o}function gn(e){const r=[],n=[];return e.forEach(t=>{r.push(t[0]),n.push(Ms([...t.slice(1),255]))}),{type:"RasterColormap",values:r,colors:n}}var yr;const $e=Br()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),Pt=Br()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});function fn(e){let r;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":r="esriMosaicAttribute";break;case"lockraster":r="esriMosaicLockRaster";break;case"center":r="esriMosaicCenter";break;case"northwest":r="esriMosaicNorthwest";break;case"nadir":r="esriMosaicNadir";break;case"viewpoint":r="esriMosaicViewpoint";break;case"seamline":r="esriMosaicSeamline";break;default:r="esriMosaicNone"}return Pt.fromJSON(r)}let V=yr=class extends v{constructor(e){super(e),this.ascending=!0,this.itemRasterFunction=null,this.lockRasterIds=null,this.method="none",this.multidimensionalDefinition=null,this.objectIds=null,this.operation="first",this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(e,r){return r.ascending!=null?r.ascending:r.sortAscending==null||r.sortAscending}readMethod(e,r){return fn(r.mosaicMethod||r.defaultMosaicMethod)}writeMultidimensionalDefinition(e,r,n){e!=null&&(e=e.filter(({variableName:t,dimensionName:i})=>t&&t!=="*"||i)).length&&(r[n]=e.map(t=>t.toJSON()))}readOperation(e,r){const n=r.mosaicOperation,t=r.mosaicOperator?.toLowerCase(),i=n||(t?$e.toJSON(t):null);return $e.fromJSON(i)||"first"}castSortValue(e){return e==null||typeof e=="string"||typeof e=="number"?e:`${e}`}clone(){return new yr({ascending:this.ascending,itemRasterFunction:D(this.itemRasterFunction),lockRasterIds:D(this.lockRasterIds),method:this.method,multidimensionalDefinition:D(this.multidimensionalDefinition),objectIds:D(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:D(this.viewpoint),where:this.where})}};s([a({type:Boolean,json:{write:!0}})],V.prototype,"ascending",void 0),s([L("ascending",["ascending","sortAscending"])],V.prototype,"readAscending",null),s([a({type:j,json:{name:"itemRenderingRule",write:!0}})],V.prototype,"itemRasterFunction",void 0),s([a({type:[Y],json:{write:{overridePolicy(){return{enabled:this.method==="lock-raster"}}}}})],V.prototype,"lockRasterIds",void 0),s([a({type:Pt.apiValues,json:{type:Pt.jsonValues,write:{target:"mosaicMethod",writer:Pt.write,isRequired:!0}}})],V.prototype,"method",void 0),s([L("method",["mosaicMethod","defaultMosaicMethod"])],V.prototype,"readMethod",null),s([a({type:[rr],json:{write:!0}})],V.prototype,"multidimensionalDefinition",void 0),s([x("multidimensionalDefinition")],V.prototype,"writeMultidimensionalDefinition",null),s([a({type:[Y],json:{name:"fids",write:!0}})],V.prototype,"objectIds",void 0),s([a({type:$e.apiValues,json:{type:$e.jsonValues,read:{reader:$e.read},write:{target:"mosaicOperation",writer:$e.write}}})],V.prototype,"operation",void 0),s([L("operation",["mosaicOperation","mosaicOperator"])],V.prototype,"readOperation",null),s([a({type:String,json:{write:{overridePolicy(){return{enabled:this.method==="attribute"}}}}})],V.prototype,"sortField",void 0),s([a({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:this.method==="attribute",allowNull:!0}}}}})],V.prototype,"sortValue",void 0),s([Oi("sortValue")],V.prototype,"castSortValue",null),s([a({type:F,json:{write:!0}})],V.prototype,"viewpoint",void 0),s([a({type:String,json:{write:!0}})],V.prototype,"where",void 0),V=yr=s([w("esri.layers.support.MosaicRule")],V);const ie=V;let B=class extends v{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(e,r,n){this.layer.version<10.3||(r[n]=e)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(e,r,n){this.format&&this.format.toLowerCase().includes("jpg")&&e!=null&&(r[n]=e)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(e,r,n){this.format==="lerc"&&e!=null&&(r[n]=e)}get format(){return this.layer.renderer?.type==="vector-field"?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}get pixelType(){const{layer:e}=this;return e.pixelType!==e.serviceRasterInfo.pixelType?e.pixelType:void 0}writeLercVersion(e,r,n){this.format==="lerc"&&this.layer.version>=10.5&&(r[n]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("rasterFunction"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("pixelType"),e.commitProperty("definitionExpression"),e.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let r=e.mosaicRule;const n=e.definitionExpression;return r?n&&n!==r.where&&(r=r.clone(),r.where=n):n&&(r=new ie({where:n})),r}get rasterFunction(){const e=this.layer;let{rasterFunction:r}=e;const n=e.pixelFilter,t=!e.format||e.format.includes("jpg")||e.format.includes("png");r=this._addResampleRasterFunction(r);const i=e.multidimensionalSubset?.areaOfInterest;return i&&(r=wn(r,i)),t&&!n&&e.renderer?.type!=="vector-field"&&(r=this.combineRendererWithRenderingRule(r)),r}combineRendererWithRenderingRule(e){const r=this.layer,{rasterInfo:n,renderer:t}=r;return e=e||r.rasterFunction,!t||!ni(t)?e:dr(un(t,{rasterAttributeTable:n.attributeTable,pixelType:n.pixelType,dataType:n.dataType,bandNames:n.bandInfos.map(({name:i})=>i),convertColorRampToColormap:r.version<10.6,convertToRFT:!!e?.rasterFunctionDefinition,bandCount:n.bandCount}),e)}_addResampleRasterFunction(e){if(this.layer.renderer?.type!=="vector-field"||e?.functionName==="Resample")return e;const r=this.layer.serviceDataType==="esriImageServiceDataTypeVector-UV"?7:10,n=this.layer.serviceRasterInfo.pixelSize;let t=new j({functionName:"Resample",functionArguments:{ResamplingType:r,InputCellSize:n}});return t=e?.rasterFunctionDefinition?new j({rasterFunctionDefinition:we(t)}):t,dr(t,e)}};function wn(e,r){const n=new j({functionName:"Clip",functionArguments:{ClippingGeometry:r.toJSON(),ClippingType:1}});return dr(n,e)}s([a()],B.prototype,"layer",void 0),s([a({json:{write:!0}})],B.prototype,"adjustAspectRatio",null),s([x("adjustAspectRatio")],B.prototype,"writeAdjustAspectRatio",null),s([a({json:{write:!0}})],B.prototype,"bandIds",null),s([a({json:{write:!0}})],B.prototype,"compression",void 0),s([a({json:{write:!0}})],B.prototype,"compressionQuality",null),s([x("compressionQuality")],B.prototype,"writeCompressionQuality",null),s([a({json:{write:!0}})],B.prototype,"compressionTolerance",null),s([x("compressionTolerance")],B.prototype,"writeCompressionTolerance",null),s([a({json:{write:!0}})],B.prototype,"format",null),s([a({type:String,json:{read:{reader:Be.read},write:{writer:Be.write}}})],B.prototype,"interpolation",null),s([a({json:{write:!0}})],B.prototype,"noData",null),s([a({type:String,json:{read:{reader:ut.read},write:{writer:ut.write}}})],B.prototype,"noDataInterpretation",null),s([a({type:fe.apiValues,json:{read:fe.read,write:fe.write}})],B.prototype,"pixelType",null),s([a({json:{write:!0}})],B.prototype,"lercVersion",void 0),s([x("lercVersion")],B.prototype,"writeLercVersion",null),s([a({type:Number})],B.prototype,"version",null),s([a({json:{write:!0}})],B.prototype,"mosaicRule",null),s([a({json:{write:!0,name:"renderingRule"}})],B.prototype,"rasterFunction",null),B=s([w("esri.layers.support.ExportImageServiceParameters")],B);var hr;const In={base:Bi,key:"type",typeMap:{extent:ze,polygon:bt}};let qe=hr=class extends v{constructor(e){super(e),this.areaOfInterest=null,this.subsetDefinitions=null}get dimensions(){const{subsetDefinitions:e}=this;if(e==null||e.length===0)return[];const r=new Map;e.forEach(t=>{if(!t.dimensionName)return;let i,o;if(Array.isArray(t.values[0])){const l=t.values;i=l[0][0],o=l[t.values.length-1][1]}else{const l=t.values;i=l[0],o=l[t.values.length-1]}if(r.has(t.dimensionName)){const l=r.get(t.dimensionName);l[0]=Math.min(i,l[0]),l[1]=Math.max(o,l[1])}else r.set(t.dimensionName,[i,o])});const n=[];for(const t of r)n.push({name:t[0],extent:t[1]});return n}get variables(){const{subsetDefinitions:e}=this;if(e==null||e.length===0)return[];const r=new Set;return e.forEach(n=>{n.variableName&&r.add(n.variableName)}),[...r]}clone(){const e=this.subsetDefinitions?.map(n=>n.clone()),r=this.areaOfInterest?this.areaOfInterest.clone():this.areaOfInterest;return new hr({areaOfInterest:r,subsetDefinitions:e})}};s([a({types:In,json:{read:te,write:!0}})],qe.prototype,"areaOfInterest",void 0),s([a({readOnly:!0})],qe.prototype,"dimensions",null),s([a({readOnly:!0})],qe.prototype,"variables",null),s([a({type:[rr],json:{write:!0}})],qe.prototype,"subsetDefinitions",void 0),qe=hr=s([w("esri.layers.support.MultidimensionalSubset")],qe);const pi=qe;let ci=class{constructor(){this._workerThread=null,this._destroyed=!1}async initialize(){const e=await zs("RasterWorker");this._destroyed?e.close():this._workerThread=e}destroy(){this._destroyed=!0,this._workerThread&&(this._workerThread.close(),this._workerThread=null)}async convertVectorFieldData(e,r){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");const n=await this._workerThread.invoke("convertVectorFieldData",{pixelBlock:e.pixelBlock.toJSON(),type:e.dataType},r);return n?new ce(n):null}computeStatisticsHistograms(e,r){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");return this._workerThread.invoke("computeStatisticsHistograms",{pixelBlock:e.pixelBlock.toJSON()},r)}async decode(e,r){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");const n=await this._workerThread.invoke("decode",e,r);return n?new ce(n):null}async symbolize(e,r){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");const n={extent:e.extent?.toJSON(),pixelBlock:e.pixelBlock?.toJSON(),simpleStretchParams:e.simpleStretchParams,bandIds:e.bandIds},t=await this._workerThread.invoke("symbolize",n,r);return t?new ce(t):null}async updateSymbolizer(e,r){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");const n=e?.rendererJSON?.histograms;await Promise.all(this._workerThread.broadcast("updateSymbolizer",{symbolizerJSON:e.toJSON(),histograms:n},r))}async updateRasterFunction(e,r){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");await Promise.all(this._workerThread.broadcast("updateRasterFunction",{rasterFunctionJSON:e.toJSON()},r))}async process(e,r){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");const n=await this._workerThread.invoke("process",{extent:e.extent?.toJSON(),primaryPixelSizes:e.primaryPixelSizes?.map(t=>t!=null?t.toJSON():null),primaryPixelBlocks:e.primaryPixelBlocks.map(t=>t!=null?t.toJSON():null),primaryRasterIds:e.primaryRasterIds},r);return n?new ce(n):null}async stretch(e,r){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");if(!e?.pixelBlock)return null;const n={srcPixelBlock:e.pixelBlock.toJSON(),stretchParams:e.stretchParams},t=await this._workerThread.invoke("stretch",n,r);return t?new ce(t):null}async split(e,r){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");if(!e?.pixelBlock)return null;const n={srcPixelBlock:e.pixelBlock.toJSON(),tileSize:e.tileSize,maximumPyramidLevel:e.maximumPyramidLevel,useBilinear:e.useBilinear},t=await this._workerThread.invoke("split",n,r);return t&&t.forEach((i,o)=>{t.set(o,i?ce.fromJSON(i):null)}),t}async clipTile(e,r){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");if(!e?.pixelBlock)return null;const n={...e,pixelBlock:e.pixelBlock.toJSON()},t=await this._workerThread.invoke("clipTile",n,r);return t?ce.fromJSON(t):null}async estimateStatisticsHistograms(e,r){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");if(!e?.pixelBlock)return null;const n={srcPixelBlock:e.pixelBlock.toJSON()};return await this._workerThread.invoke("estimateStatisticsHistograms",n,r)}async mosaicAndTransform(e,r){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");if(!e?.srcPixelBlocks?.length)return{pixelBlock:null};const n={...e,srcPixelBlocks:e.srcPixelBlocks.map(i=>i!=null?i.toJSON():null)},t=await this._workerThread.invoke("mosaicAndTransform",n,r);return{pixelBlock:t.pixelBlock?new ce(t.pixelBlock):null,localNorthDirections:t.localNorthDirections}}async createFlowMesh(e,r){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");const n={buffer:e.flowData.data.buffer,maskBuffer:e.flowData.mask.buffer,width:e.flowData.width,height:e.flowData.height},{meshType:t,simulationSettings:i}=e,o=await this._workerThread.invoke("createFlowMesh",{meshType:t,flowData:n,simulationSettings:i},{...r,transferList:[n.buffer,n.maskBuffer]});return{vertexData:new Float32Array(o.vertexBuffer),indexData:new Uint32Array(o.indexBuffer)}}getProjectionOffsetGrid(e,r){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");const n=e.datumTransformation!=null?e.datumTransformation.steps.map(o=>({wkid:o.wkid,wkt:o.wkt,isInverse:o.isInverse})):null,t=e.rasterTransform!=null?e.rasterTransform.toJSON():null,i={projectedExtent:e.projectedExtent.toJSON(),srcBufferExtent:e.srcBufferExtent.toJSON(),pixelSize:e.pixelSize,hasWrapAround:e.hasWrapAround,spacing:e.spacing,datumTransformationSteps:n,rasterTransform:t,isAdaptive:e.isAdaptive,includeGCSGrid:e.includeGCSGrid};return this._workerThread.invoke("getProjectionOffsetGrid",i,r)}};var gr;const zt=new Ye({flow_from:"flow-from",flow_to:"flow-to"});let q=gr=class extends Zr(v){constructor(e){super(e),this.density=.8,this.color=new Z([255,255,255,1]),this.maxPathLength=200,this.trailWidth=1.5,this.flowSpeed=10,this.trailLength=100,this.smoothing=0,this.flowRepresentation="flow-from",this.type="flow",this.authoringInfo=null,this.legendOptions=null,this.trailCap="butt",this.background="none"}clone(){const{density:e,maxPathLength:r,trailWidth:n,flowSpeed:t,trailLength:i,smoothing:o,flowRepresentation:l,trailCap:u,background:p}=this,c=this.color.clone(),m=(this.visualVariables||[]).map(h=>h.clone()),d=this.authoringInfo?.clone(),f=this.legendOptions?.clone();return new gr({density:e,color:c,maxPathLength:r,trailWidth:n,flowSpeed:t,trailLength:i,trailCap:u,background:p,smoothing:o,flowRepresentation:l,visualVariables:m,authoringInfo:d,legendOptions:f})}getSymbol(e,r){}async getSymbolAsync(e,r){}getSymbols(){return[]}};s([a({type:Number,json:{write:!0}})],q.prototype,"density",void 0),s([a({type:Z,json:{write:{allowNull:!0}}})],q.prototype,"color",void 0),s([a({type:Number,cast:Yt,json:{write:!0}})],q.prototype,"maxPathLength",void 0),s([a({type:Number,cast:Yt,json:{write:!0}})],q.prototype,"trailWidth",void 0),s([a({type:Number,json:{write:!0}})],q.prototype,"flowSpeed",void 0),s([a({type:Number,json:{write:!0}})],q.prototype,"trailLength",void 0),s([a({type:Number,cast:Yt,json:{write:!1}})],q.prototype,"smoothing",void 0),s([a({type:zt.apiValues,json:{type:zt.jsonValues,read:{reader:zt.read},write:{writer:zt.write}}})],q.prototype,"flowRepresentation",void 0),s([Pe({flowRenderer:"flow"})],q.prototype,"type",void 0),s([a({type:Gr,json:{write:!0}})],q.prototype,"authoringInfo",void 0),s([a({type:Os,json:{write:!0}})],q.prototype,"legendOptions",void 0),s([a({type:String,json:{write:!0}})],q.prototype,"trailCap",void 0),s([a({type:String,json:{write:!0}})],q.prototype,"background",void 0),q=gr=s([w("esri.renderers.FlowRenderer")],q);const mi=q;let et=class extends v{constructor(){super(...arguments),this.value=null,this.label=null,this.color=null}};s([a({type:Number,json:{write:{isRequired:!0}}})],et.prototype,"value",void 0),s([a({type:String,json:{write:!0}})],et.prototype,"label",void 0),s([a({type:Z,json:{type:[Y],write:{isRequired:!0}}})],et.prototype,"color",void 0),et=s([w("esri.renderers.support.ColormapInfo")],et);const di=et;var ct;let mt=ct=class extends v{constructor(e){super(e),this.colormapInfos=null,this.type="raster-colormap"}static createFromColormap(e,r){if(!e)return null;const n=e[0].length===5,t=[...e].sort((i,o)=>i[0]-o[0]).map(i=>di.fromJSON({value:i[0],color:n?i.slice(1,5):i.slice(1,4).concat([255]),label:r?r[i[0]]??"":i[0]}));return new ct({colormapInfos:t})}static createFromColorramp(e){const r=Dt(e);return ct.createFromColormap(r)}clone(){return new ct({colormapInfos:this.colormapInfos.map(e=>e.toJSON())})}extractColormap(){return this.colormapInfos.map(({value:e,color:r})=>[e,r.r,r.g,r.b,r.a>1?r.a:255*r.a&255]).sort((e,r)=>e[0]-r[0])}};s([a({type:[di],json:{write:{isRequired:!0}}})],mt.prototype,"colormapInfos",void 0),s([Pe({rasterColormap:"raster-colormap"}),a({json:{write:{isRequired:!0}}})],mt.prototype,"type",void 0),mt=ct=s([w("esri.renderers.RasterColormapRenderer")],mt);const fr=mt;var wr;let se=wr=class extends v{constructor(e){super(e),this.altitude=45,this.azimuth=315,this.colorRamp=null,this.hillshadeType="traditional",this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.scalingType="none",this.type="raster-shaded-relief",this.zFactor=1}readColorRamp(e){return Yr(e)}clone(){return new wr({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,scalingType:this.scalingType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,colorRamp:D(this.colorRamp)})}};s([a({type:Number,json:{write:{isRequired:!0}}})],se.prototype,"altitude",void 0),s([a({type:Number,json:{write:{isRequired:!0}}})],se.prototype,"azimuth",void 0),s([a({types:Xr,json:{write:!0}})],se.prototype,"colorRamp",void 0),s([L("colorRamp")],se.prototype,"readColorRamp",null),s([a({type:["traditional","multi-directional"],json:{write:{isRequired:!0}}})],se.prototype,"hillshadeType",void 0),s([a({type:Number,json:{write:!0}})],se.prototype,"pixelSizePower",void 0),s([a({type:Number,json:{write:!0}})],se.prototype,"pixelSizeFactor",void 0),s([a({type:["none","adjusted"],json:{write:{isRequired:!0}}})],se.prototype,"scalingType",void 0),s([Pe({rasterShadedRelief:"raster-shaded-relief"}),a({json:{write:{isRequired:!0}}})],se.prototype,"type",void 0),s([a({type:Number,json:{write:{isRequired:!0}}})],se.prototype,"zFactor",void 0),se=wr=s([w("esri.renderers.RasterShadedReliefRenderer")],se);const yi=se;var Ir;let O=Ir=class extends v{constructor(e){super(e),this.colorRamp=null,this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.maxPercent=null,this.minPercent=null,this.numberOfStandardDeviations=null,this.outputMax=null,this.outputMin=null,this.sigmoidStrengthLevel=null,this.histograms=null,this.useGamma=!1,this.stretchType="none",this.type="raster-stretch"}readColorRamp(e){if(e)return Yr(e)}get statistics(){return this._get("statistics")}set statistics(e){Ui($t.getLogger(this),"statistics",{replacement:"customStatistics",version:"4.31",warnOnce:!0}),this._set("statistics",e)}get customStatistics(){const e=this.statistics;return e&&Array.isArray(e[0])?e.map(r=>({min:r[0],max:r[1],avg:r[2],stddev:r[3]})):e}set customStatistics(e){this._set("statistics",e?.map(r=>[r.min,r.max,r.avg??0,r.stddev??1]))}readCustomStatistics(e){return e?.map(r=>({min:r[0],max:r[1],avg:r[2],stddev:r[3]}))}writeCustomStatistics(e,r,n){e?.length&&(r[n]=e.map(t=>[t.min,t.max,t.avg??0,t.stddev??1]))}readStretchType(e,r){let n=r.stretchType;return typeof n=="number"&&(n=vs[n]),lt.read(n)}clone(){const e=new Ir({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,gamma:D(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,colorRamp:D(this.colorRamp),histograms:D(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment});return e._set("statistics",D(this.statistics)),e}};s([a({types:Xr,json:{write:!0}})],O.prototype,"colorRamp",void 0),s([L("colorRamp")],O.prototype,"readColorRamp",null),s([a({type:Boolean,json:{write:!0}})],O.prototype,"computeGamma",void 0),s([a({type:Boolean,json:{write:{target:"dra"},read:{source:"dra"}}})],O.prototype,"dynamicRangeAdjustment",void 0),s([a({type:[Number],json:{write:!0}})],O.prototype,"gamma",void 0),s([a({type:Number,json:{write:!0}})],O.prototype,"maxPercent",void 0),s([a({type:Number,json:{write:!0}})],O.prototype,"minPercent",void 0),s([a({type:Number,json:{write:!0}})],O.prototype,"numberOfStandardDeviations",void 0),s([a({type:Number,json:{read:{source:"max"},write:{target:"max"}}})],O.prototype,"outputMax",void 0),s([a({type:Number,json:{read:{source:"min"},write:{target:"min"}}})],O.prototype,"outputMin",void 0),s([a({type:Number,json:{write:!0}})],O.prototype,"sigmoidStrengthLevel",void 0),s([a({})],O.prototype,"statistics",null),s([a()],O.prototype,"histograms",void 0),s([a({json:{type:[[Number]],name:"statistics",write:!0}})],O.prototype,"customStatistics",null),s([L("customStatistics")],O.prototype,"readCustomStatistics",null),s([x("customStatistics")],O.prototype,"writeCustomStatistics",null),s([a({type:Boolean,json:{write:!0}})],O.prototype,"useGamma",void 0),s([a({type:lt.apiValues,json:{type:lt.jsonValues,write:lt.write}})],O.prototype,"stretchType",void 0),s([L("stretchType",["stretchType"])],O.prototype,"readStretchType",null),s([Pe({rasterStretch:"raster-stretch"})],O.prototype,"type",void 0),O=Ir=s([w("esri.renderers.RasterStretchRenderer")],O);const Mr=O;var vr;const hi=new Set(["esriMetersPerSecond","esriKilometersPerHour","esriKnots","esriFeetPerSecond","esriMilesPerHour"]),Ot=new Ye({beaufort_ft:"beaufort-ft",beaufort_km:"beaufort-km",beaufort_kn:"beaufort-kn",beaufort_m:"beaufort-m",beaufort_mi:"beaufort-mi",classified_arrow:"classified-arrow",ocean_current_kn:"ocean-current-kn",ocean_current_m:"ocean-current-m",simple_scalar:"simple-scalar",single_arrow:"single-arrow",wind_speed:"wind-barb"}),Bt=new Ye({flow_from:"flow-from",flow_to:"flow-to"});let W=vr=class extends Zr(v){constructor(e){super(e),this.attributeField="Magnitude",this.flowRepresentation="flow-from",this.rotationType="arithmetic",this.style="single-arrow",this.symbolTileSize=50,this.type="vector-field"}readInputUnit(e,r){return hi.has(e)?De.fromJSON(e):null}readOutputUnit(e,r){return hi.has(e)?De.fromJSON(e):null}get styleRenderer(){const e=this.style,r=this.attributeField,n=this._createStyleRenderer(e);return n.field=r,n}get sizeVariables(){const e=[];if(this.visualVariables)for(const r of this.visualVariables)r.type==="size"&&e.push(r);if(e.length===0){const r=new At({field:"Magnitude",minSize:.2*this.symbolTileSize,maxSize:.8*this.symbolTileSize});this.visualVariables?this.visualVariables.push(r):this._set("visualVariables",[r]),e.push(r)}return e}get rotationVariables(){const e=[];if(this.visualVariables)for(const r of this.visualVariables)r.type==="rotation"&&e.push(r);if(e.length===0){const r=new qr({field:"Direction",rotationType:this.rotationType});this.visualVariables?this.visualVariables.push(r):this._set("visualVariables",[r]),e.push(r)}return e}clone(){return new vr({attributeField:this.attributeField,flowRepresentation:this.flowRepresentation,rotationType:this.rotationType,symbolTileSize:this.symbolTileSize,style:this.style,visualVariables:D(this.visualVariables),inputUnit:this.inputUnit,outputUnit:this.outputUnit})}async getGraphicsFromPixelData(e,r=!1,n=[]){const t=new Array,i=Cs(this.inputUnit,this.outputUnit),o=this.rotationVariables[0]?.rotationType||this.rotationType,l=r?Ns(e.pixelBlock,"vector-uv",o,i):Fs(e.pixelBlock,"vector-magdir",i);if(l==null)return t;const u=e.extent,p=l.mask!=null&&l.mask.length>0;let c=0;const m=(u.xmax-u.xmin)/l.width,d=(u.ymax-u.ymin)/l.height;for(let f=0;f<l.height;f++)for(let h=0;h<l.width;h++,c++){let g=new F({x:u.xmin+h*m+m/2,y:u.ymax-f*d-d/2,spatialReference:u.spatialReference});g=(await Ue(g))[0];const y=n.some(I=>I.intersects(g));if((!p||l.mask[c])&&!y){const I={Magnitude:l.pixels[0][c],Direction:l.pixels[1][c]},M=new Ur({geometry:new F({x:g.x,y:g.y,spatialReference:u.spatialReference}),attributes:I});M.symbol=this._getVisualVariablesAppliedSymbol(M),t.push(M)}}return t}getSymbol(e,r){}async getSymbolAsync(e,r){}getSymbols(){return[]}getClassBreakInfos(){return this.styleRenderer?.classBreakInfos}getDefaultSymbol(){return this.styleRenderer?.defaultSymbol}_getDefaultSymbol(e){return new _i({path:"M14,32 14,18 9,23 16,3 22,23 17,18 17,32 z",outline:new Hi({width:0}),size:20,color:e||new Z([0,92,230])})}_getVisualVariablesAppliedSymbol(e){if(!e)return;const r=this.styleRenderer?.getSymbol(e)?.clone(),n=this.sizeVariables,t=this.rotationVariables;if(n&&n.length&&this.sizeVariables.forEach(i=>_s(r,Bs([i],e))),t&&t.length){const i=this.flowRepresentation==="flow-to"==(this.style==="ocean-current-kn"||this.style==="ocean-current-m")?0:180;e.attributes.Direction=e.attributes.Direction+i,this.rotationVariables.forEach(o=>Hs(r,Us(o,e),o.axis))}return r}_createStyleRenderer(e){let r={defaultSymbol:this._getDefaultSymbol(),classBreakInfos:[]};switch(e){case"single-arrow":r=this._createSingleArrowRenderer();break;case"beaufort-kn":r=this._createBeaufortKnotsRenderer();break;case"beaufort-m":r=this._createBeaufortMeterRenderer();break;case"beaufort-ft":r=this._createBeaufortFeetRenderer();break;case"beaufort-mi":r=this._createBeaufortMilesRenderer();break;case"beaufort-km":r=this._createBeaufortKilometersRenderer();break;case"ocean-current-m":r=this._createCurrentMeterRenderer();break;case"ocean-current-kn":r=this._createCurrentKnotsRenderer();break;case"simple-scalar":r=this._createSimpleScalarRenderer();break;case"wind-barb":r=this._createWindBarbsRenderer();break;case"classified-arrow":r=this._createClassifiedArrowRenderer()}return new xt(r)}_createSingleArrowRenderer(){return{defaultSymbol:this._getDefaultSymbol()}}_createBeaufortKnotsRenderer(){const e=[0,1,3,6,10,16,21,27,33,40,47,55,63],r=[[40,146,199],[89,162,186],[129,179,171],[160,194,155],[191,212,138],[218,230,119],[250,250,100],[252,213,83],[252,179,102],[250,141,52],[247,110,42],[240,71,29]];return{defaultSymbol:this._getDefaultSymbol(new Z([214,47,39])),classBreakInfos:this._getClassBreaks(e,r)}}_createBeaufortMeterRenderer(){const e=[0,.2,1.8,3.3,5.4,8.5,11,14.1,17.2,20.8,24.4,28.6,32.7],r=[[69,117,181],[101,137,184],[132,158,186],[162,180,189],[192,204,190],[222,227,191],[255,255,191],[255,220,161],[250,185,132],[245,152,105],[237,117,81],[232,21,21]];return{defaultSymbol:this._getDefaultSymbol(new Z([214,47,39])),classBreakInfos:this._getClassBreaks(e,r)}}_createBeaufortFeetRenderer(){const e=this._getDefaultSymbol(new Z([214,47,39]));let r=[0,.2,1.8,3.3,5.4,8.5,11,14.1,17.2,20.8,24.4,28.6,32.7];const n=[[69,117,181],[101,137,184],[132,158,186],[162,180,189],[192,204,190],[222,227,191],[255,255,191],[255,220,161],[250,185,132],[245,152,105],[237,117,81],[232,21,21]],t=3.28084;return r=r.map(i=>i*t),{defaultSymbol:e,classBreakInfos:this._getClassBreaks(r,n)}}_createBeaufortMilesRenderer(){const e=this._getDefaultSymbol(new Z([214,47,39]));let r=[0,.2,1.8,3.3,5.4,8.5,11,14.1,17.2,20.8,24.4,28.6,32.7];const n=[[69,117,181],[101,137,184],[132,158,186],[162,180,189],[192,204,190],[222,227,191],[255,255,191],[255,220,161],[250,185,132],[245,152,105],[237,117,81],[232,21,21]],t=2.23694;return r=r.map(i=>i*t),{defaultSymbol:e,classBreakInfos:this._getClassBreaks(r,n)}}_createBeaufortKilometersRenderer(){const e=this._getDefaultSymbol(new Z([214,47,39]));let r=[0,.2,1.8,3.3,5.4,8.5,11,14.1,17.2,20.8,24.4,28.6,32.7];const n=[[69,117,181],[101,137,184],[132,158,186],[162,180,189],[192,204,190],[222,227,191],[255,255,191],[255,220,161],[250,185,132],[245,152,105],[237,117,81],[232,21,21]],t=3.6;return r=r.map(i=>i*t),{defaultSymbol:e,classBreakInfos:this._getClassBreaks(r,n)}}_createCurrentMeterRenderer(){const e=[0,.5,1,1.5,2],r=[[78,26,153],[179,27,26],[202,128,26],[177,177,177]];return{defaultSymbol:this._getDefaultSymbol(new Z([177,177,177])),classBreakInfos:this._getClassBreaks(e,r)}}_createCurrentKnotsRenderer(){const e=[0,.25,.5,1,1.5,2,2.5,3,3.5,4],r=[[0,0,0],[0,37,100],[78,26,153],[151,0,100],[179,27,26],[177,78,26],[202,128,26],[177,179,52],[177,177,177]];return{defaultSymbol:this._getDefaultSymbol(new Z([177,177,177])),classBreakInfos:this._getClassBreaks(e,r)}}_createClassifiedArrowRenderer(){const e=this._getDefaultSymbol(new Z([56,168,0]));let r=[0,1e-6,3.5,7,10.5,14];if(this.sizeVariables?.length){const t=this.sizeVariables[0].minDataValue,i=this.sizeVariables[0].maxDataValue;if(t&&i){const o=(i-t)/5;r=Array.from(Array(6).keys()).map(l=>t+o*l)}}const n=[[56,168,0],[139,309,0],[255,255,0],[255,128,0],[255,0,0]];return{defaultSymbol:e,classBreakInfos:this._getClassBreaks(r,n)}}_createSimpleScalarRenderer(){return{defaultSymbol:er.fromJSON({imageData:"iVBORw0KGgoAAAANSUhEUgAAACsAAAArCAQAAABLVLlLAAAABGdBTUEAAYagMeiWXwAAAAJiS0dEAACqjSMyAAAACXBIWXMAAABIAAAASABGyWs+AAAC3ElEQVRIx9XXvW4cVRQH8N982btpsIREJECyiCXsxX4DKh6AliqGKCBBE2SlwlHgAbBD/AKmyEYUeQ1KahPZSZQvBCkQLTHZ7KGY8Xodz4w3a1NwbzVzz/znfJ//zbStVC5q3icKak9GAs2QIdDx3PtW/S011NW3p+M5Eomh11ipTIKe6+4LQzHaQ+G+63pIZNJJQXMpljwTwj1brpgx5w1zZlyx5Z4QnllEIm2xeeSUHBf0hV0bejo1Uh09G3aFvgXk7cCJFBc9EdaRVuHJJaOdKyTV2TVhYLMduNR0Q9gxL5GaaTDw8GzejrDRBpxWoGsySRW0dttKuattwNkIlFw2YXgzOdYq4Ox49PlM+JrKd5OusjTWhBuVxUfMX/KXXZ3WEmkuqa67wspR4BTbwtKr/5u4fFgStse/T7EifFPnnYl9zPq4vmUOPrRndgoHjDti1gOPqlyXoifcRNGQzUd31lDyfHmob1Gp35vSr+P6vilcQ5Egtyd8YF/ySg9NhPM+9M/IOaHwp5+PSZayXTvCogEUwlatC3J8LLwYtcWB8EuDXQVuCkV5/B4eNHb7wGBs87LBDS+xjdVSn09wq1G8dFM+9tSUhIGneLvUdniKxKpTYljCpu3j7rVWlHj/P23v4NPGUEyeCQnexe9lJjzEQqMjJs+EzNAX6B98dBZVRmroJx95x/A/6gln18EyfCUsl+qdXb/tjvfbw+mwforpUOBz4XLVoBwAn3aWnfeH246NyBXhrq7TTN5lNSP9RkU+puUJm3W2Tsdq0nZWM07srk7MwQrZSRysjjGWBLRJNsNbfj2JMR4AbxpU1XLAb9Mxfpsq5EjMuuiR8L0JiHOOBX3hiUvOmavN0nMueSzcceFk0BK4pMqLo7vDD1Z0qrtDx7Itt4Xwm9UqbMmk8S0Dtuzb2pvOU99Z1nLTOfleNmvfZfP2pYZmPfajwosKdDBNpacNpVGGsWX9CyDI8Xq/Sj6QAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDE0LTExLTEwVDAzOjE3OjU4LTA1OjAwF+tHyQAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxNC0xMS0xMFQwMzoxNzo1OC0wNTowMGa2/3UAAAAASUVORK5CYII=",height:20,width:20,type:"esriPMS",angle:0})}}_createWindBarbsRenderer(){const e=Array.from(Array(31).keys()).map(i=>5*i),r=[{range:"0-5",path:"M20 20 M5 20 A15 15 0 1 0 35 20 A15 15 0 1 0 5 20 M20 20 M10 20 A10 10 0 1 0 30 20 A10 10 0 1 0 10 20",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTIwIDIwIE01IDIwIEExNSAxNSAwIDEgMCAzNSAyMCBBMTUgMTUgMCAxIDAgNSAyMCBNMjAgMjAgTTEwIDIwIEExMCAxMCAwIDEgMCAzMCAyMCBBMTAgMTAgMCAxIDAgMTAgMjAiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"5-10",path:"M25 0 L25 40 M25 35 L17.5 37.5",imageData:"PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNyA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTTI1IDM1IEwxNy41IDM3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"10-15",path:"M25 0 L25 40 L10 45 L25 40",imageData:"PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNyA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTDEwIDQ1IEwyNSA0MCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"15-20",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L17.5 37.5",imageData:"PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjEyIDAgMTUgNDUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxNy41IDM3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"20-25",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L10 40",imageData:"PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNiA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTDEwIDQ1IEwyNSA0MCBNMjUgMzUgTDEwIDQwIiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+"},{range:"25-30",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L17.5 32.5",imageData:"PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNiA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTDEwIDQ1IEwyNSA0MCBNMjUgMzUgTDEwIDQwIEwyNSAzNSBNMjUgMzAgTDE3LjUgMzIuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"30-35",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"35-40",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L17.5 27.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxNy41IDI3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"40-45",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"45-50",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L17.5 22.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxNy41IDIyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"50-55",path:"M25 0 L25 40 L10 40 L25 35",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"55-60",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L17.5 32.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxNy41IDMyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"60-65",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"65-70",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L17.5 27.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxNy41IDI3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"70-75",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"75-80",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L17.5 22.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxNy41IDIyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"80-85",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"85-90",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25 L25 20 M25 15 L17.5 17.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSBMMjUgMjAgTTI1IDE1IEwxNy41IDE3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"90-95",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25 L25 20 M25 15 L10 20",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSBMMjUgMjAgTTI1IDE1IEwxMCAyMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"95-100",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25 L25 20 M25 15 L10 20 L25 15 M25 10 L17.5 12.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSBMMjUgMjAgTTI1IDE1IEwxMCAyMCBMMjUgMTUgTTI1IDEwIEwxNy41IDEyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"100-105",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"105-110",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L17.5 27.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDE3LjUgMjcuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"110-115",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+"},{range:"115-120",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L17.5 22.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDE3LjUgMjIuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"120-125",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+"},{range:"125-130",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L17.5 17.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDE3LjUgMTcuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"130-135",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+"},{range:"135-140",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20 M25 15 M25 10 L17.5 12.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIE0yNSAxNSBNMjUgMTAgTDE3LjUgMTIuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"140-145",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20 M25 15 M25 10 L17.5 12.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIE0yNSAxNSBNMjUgMTAgTDEwIDE1IiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+"},{range:"145-150",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20 M25 15 M25 10 L17.5 12.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIE0yNSAxNSBNMjUgMTAgTDEwIDE1IE0yNSAxMCBNMjUgNSBMMTcuNSA3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="}],n=er.fromJSON({imageData:"iVBORw0KGgoAAAANSUhEUgAAACgAAAApCAQAAADtq6NDAAAABGdBTUEAALGPC/xhBQAAAAFzUkdCAK7OHOkAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAJiS0dEAP+Hj8y/AAAACXBIWXMAAA7DAAAOwwHHb6hkAAAEY0lEQVRIx5XXWWxWRRQH8N+d+31tUdGAVjGglYJABFEBY91jfDAg7piYaFTccA++uMQEFRcSXlATtxiXqMQt4G4iisYl0ai4sIQYtVFZ1KIFKdTS0l4f7vRCS5fPebozc+bM/2z/Mzcx0AgSiUxXnKfIdMn875FIhX53U2n/B/s+kKM4UINTjTBZImixxnrv+9a2iL6zEoUBXcoudrWj/OtHm3wt02lfU9Qao9OnHvIhgmww84MEl1qnxfNmGrqHxAizLdPpC6chGcAxKGGcL+30gOERf1BSpUqVslQSV8d5ReZFe8VQ9avufJn31cWwlJV7iafKStGOE/1qvfH9qUxxu8ydUdmuSKbGO8YUdT2inKLG69pM70tliktl5qIkCAJGmusDG7Vqsc0WjZa4UBlBiA5YZIcjYzB7qDtH5kaUJFLs7RGZTZ42W4PRRmtwvbdt1+wGiaS4drEtDttdZYIDNVuAclR3vA3+dI3qHqmVSy7U6Tv1MScCPvPR7nIpFlsdCy3FdTLPGhK92e2CUITjMJ9ocwKxnsZqc3O3JwMma3d6UVLnyVxB4aXemZqvPqLdpJhW3KVVbY4yYImPo6M5Urv50fj+0z/FG9YaEiENs8UtMfXUaTeTePNHlhXfA1UU+2lyD1Il3Gtt9+adfpNG7dNlpg2U/T3KYLZ2dUWFdTgp3/rQ4sK973qnInV5TIf40x3dhvrJPBiqyWUo4wAtLqhQYS71qK+QKOFRywmGK/kpikzV6WMKhh58vGWs4TIJNjiEYLIuP8Tt4/zmLyqk+AyrJSbF+Qq1DgqRUPMxyl+9q3IQhX/rMCJ6tEunriDs1oSyQZKlr9AkhT2ZIARbJfaJS1vtVbHB+Rgi0RK/y1q1BWsEEyLoz40xtGKcARPVWB1BTPO7f4LNtpkUl1aoMbViLyZo0GRjPD3BxnxjqXeLYlvhqYrzMMG3HoyJXa3JjfnGlbYYFlP7Jh3qKsKY4hQ7TY0nG+xwRL61n63mxHtqNHosigyMLmClNwvuecFnOZB88nNBDzNkzhxEZaKMBVoKapggMzvHHXBEpNSSFAvtcFRsVn0bW8LlMmcXs+c0Kne3gRR32+zg4uXwjC6zit6Wt4a8LXVfcp/MtQXHn2ynGbuCmb8GvvFeJLEE82ReU9/n6+dkq2x3buG9Wn94smcgAw631RPR7BTH+kbmHReZoEpOdEe7zWqZl40s0JWs9Hmv7hjBHqPDwsjGKVJnWWqjbdZp1KhJi0aPmxYZsIRhlttgeF+Jlke41QcOQKoqilSb6HJzSvNG3G/UoWnxwsmt+sVaYwd63dRbqdnMyCPVeyRPvpYgdavM22oGKoMUVRbJfOWMwidJ8Zzb1UvmWK/VVUXzHaTjjrVYh1897HT7xxYEVUaa5SWb/WO+YUWa9SrwvigzM8YlzlYv2GSdVCYxxlBtVnnFq5olwp5/BEk/OLsf5LUmG2+inRJdVvjZ97ZH9/zP34ug1O91pf4p+D+JYBpvrKxfbwAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxNC0xMS0xMFQwMzoxMjowOS0wNTowMB9ViV0AAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTQtMTEtMTBUMDM6MTI6MDktMDU6MDBuCDHhAAAAAElFTkSuQmCC",height:20,width:20,type:"esriPMS",angle:0}),t=e.map((i,o)=>{let l;if(o!==e.length-1)if(o===0)l={minValue:i,maxValue:e[o+1],symbol:n};else{const u=er.fromJSON({type:"esriPMS",imageData:r[o].imageData,contentType:"image/svg+xml",height:32,width:32,angle:0});l={minValue:i,maxValue:e[o+1],symbol:u}}return new Kr(l)});return{defaultSymbol:n,classBreakInfos:t}}_getClassBreaks(e,r){return r.map((n,t)=>new Kr({minValue:e[t],maxValue:e[t+1],symbol:this._getDefaultSymbol(new Z(n))}))}};s([a({type:["Magnitude"],json:{write:!0}})],W.prototype,"attributeField",void 0),s([a({type:Bt.apiValues,json:{type:Bt.jsonValues,read:{reader:Bt.read},write:{writer:Bt.write}}})],W.prototype,"flowRepresentation",void 0),s([a({type:["geographic","arithmetic"],json:{write:!0}})],W.prototype,"rotationType",void 0),s([a({type:Ot.apiValues,json:{type:Ot.jsonValues,read:{reader:Ot.read},write:{writer:Ot.write}}})],W.prototype,"style",void 0),s([a({json:{write:!0}})],W.prototype,"symbolTileSize",void 0),s([a({type:De.apiValues,json:{type:De.jsonValues,write:{writer:De.write}}})],W.prototype,"inputUnit",void 0),s([L("inputUnit")],W.prototype,"readInputUnit",null),s([a({type:De.apiValues,json:{type:De.jsonValues,read:{reader:De.read},write:{writer:De.write}}})],W.prototype,"outputUnit",void 0),s([L("outputUnit")],W.prototype,"readOutputUnit",null),s([Pe({vectorField:"vector-field"})],W.prototype,"type",void 0),s([a({type:xt})],W.prototype,"styleRenderer",null),s([a({type:At})],W.prototype,"sizeVariables",null),s([a({type:qr})],W.prototype,"rotationVariables",null),W=vr=s([w("esri.renderers.VectorFieldRenderer")],W);const br=W,Mn=.25,vn=$r.fromJSON({type:"multipart",colorRamps:[{fromColor:[0,0,255],toColor:[0,255,255]},{fromColor:[0,255,255],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,0,0]}]}),gi=$r.fromJSON(bs[0]),fi=new Set(["scientific","standard-time","vector-uv","vector-magdir","vector-u","vector-v","vector-magnitude","vector-direction"]);function wi(e){return e.presetRenderers?.find(({method:r,value:n})=>r==="raster-function-template"?n===e.rasterFunctionName:r==="variable"&&n===e.variableName)}function Ii(e,r){const{attributeTable:n,colormap:t}=e;if(sr(e)){const i=Nn(e);if(i!=null)return i}if(r?.rasterFunctionColorRamp){const i=Mi(e,r);return i.colorRamp=r.rasterFunctionColorRamp,i}if(t!=null){const i=Tn(e);if(i!=null)return i}if(n!=null){const i=xn(e);if(i!=null)return i}return Mi(e,r)}function bn(e,r=!1){const n=["raster-stretch"];return Vr(e,r)&&n.push("raster-colormap"),Er(e)&&n.push("unique-value"),Ss(e,r)&&n.push("class-breaks"),Rs(e)&&n.push("raster-shaded-relief"),sr(e)&&n.push("vector-field"),Ds(e)&&n.push("flow"),n}function Sn(e){return e.datasetFormat==="Function"&&e.rasterFunction.functionName==="Colormap"?e.rasterFunction.colorRamp:void 0}function Rn(e,r,n){const t=["nearest","bilinear","cubic","majority"],i=n?.toLowerCase().replace("bicubic","cubic"),o=t.find(l=>l===i);return r==="Map"?o??"bilinear":e.dataType==="standard-time"?o??"nearest":e.dataType==="thematic"||e.attributeTable||e.colormap?o==="nearest"||o==="majority"?o:"nearest":o??"bilinear"}function Mi(e,r){e=vi(e,r?.variableName);const{bandCount:n}=e;let{bandIds:t,stretchType:i}=r||{};t?.some(d=>d>=n)&&(t=null);let o=e.statistics,l=e.histograms;n>1?(t=t?.length?t:Sr(e),o=o==null?null:t?.map(d=>o[d]),l=l==null?null:t?.map(d=>l[d])):t=[0],i==null&&(i=An(e)),r?.includeStatisticsInStretch&&(i==="percent-clip"||i==="histogram-equalization")&&e.statistics?.length&&(i="min-max");let u=!1;switch(i){case"none":u=!1;break;case"percent-clip":u=!l?.length;break;default:u=!o?.length}const{dataType:p}=e,c=t?.length===1&&fi.has(p)?vn:null,m=new Mr({stretchType:i,dynamicRangeAdjustment:u,colorRamp:c,outputMin:0,outputMax:255,gamma:t?.length===1?[1]:[1,1,1],useGamma:!1});return i==="percent-clip"?m.maxPercent=m.minPercent=Mn:i==="standard-deviation"&&(m.numberOfStandardDeviations=2),u||e.multidimensionalInfo==null&&!r?.includeStatisticsInStretch||(i==="percent-clip"?m.histograms=l:i!=="min-max"&&i!=="standard-deviation"||(m.statistics=o)),m}function vi(e,r){const{multidimensionalInfo:n}=e;if(!r||!n)return e;const t=n.variables.find(i=>i.name===r);if(!t)return e;if(e=e.clone(),t){const{statistics:i,histograms:o}=t;i?.length&&(e.statistics=i.map(l=>({min:l.min,max:l.max,avg:l.avg,stddev:l.stddev}))),o?.length&&(e.histograms=o)}return e}function Sr(e){const r=e.bandCount;if(r===1)return null;if(r===2)return[0];const{bandInfos:n}=e;let t;if(n.length===r){const{red:i,green:o,blue:l,nir:u}=Dn(n);i!=null&&o!=null&&l!=null?t=[i,o,l]:u!=null&&i!=null&&o!=null&&(t=[u,i,o])}return!t&&r>=3&&(t=[0,1,2]),t}function Dn(e){const r={};for(let n=0;n<e.length;n++){const t=e[n],i=t.name.toLowerCase();if(i==="red")r.red=n;else if(i==="green")r.green=n;else if(i==="blue")r.blue=n;else if(i==="nearinfrared"||i==="nearinfrared_1"||i==="nir")r.nir=n;else if(t.maxWavelength&&t.minWavelength){const o=t.minWavelength,l=t.maxWavelength;r.blue==null&&o>=410&&o<=480&&l>=480&&l<=540?r.blue=n:r.green==null&&o>=490&&o<=560&&l>=560&&l<=610?r.green=n:r.red==null&&o>=595&&o<=670&&l>=660&&l<=730?r.red=n:r.nir==null&&o>=700&&o<=860&&l>=800&&l<=950&&(r.nir=n)}}return r}function An(e){let r="percent-clip";const{pixelType:n,dataType:t,histograms:i,statistics:o,multidimensionalInfo:l}=e,u=fi.has(t)||t==="generic"&&l!=null;return n!=="u8"||t!=="processed"&&i!=null&&o!=null?n==="u8"||t==="elevation"||u?r="min-max":i!=null?r="percent-clip":o!=null&&(r="min-max"):r="none",r}function xn(e,r,n,t){if(!Er(e,r))return null;const{attributeTable:i,statistics:o}=e,l=bi(i,r),u=dt(i,"red"),p=dt(i,"green"),c=dt(i,"blue"),m=new Gr,d=[],f=new Set,h=!!(u&&p&&c);if(i!=null)i.features.forEach(g=>{const y=g.attributes[l.name];if(!f.has(g.attributes[l.name])&&y!=null){f.add(y);const I=h&&(u.type==="single"||u.type==="double")&&(p.type==="single"||p.type==="double")&&(c.type==="single"||c.type==="double")&&!i.features.some(R=>R.attributes[u.name]>1||R.attributes[p.name]>1||R.attributes[c.name]>1),M=I?255:1;d.push(new ei({value:g.attributes[l.name],label:g.attributes[l.name]+"",symbol:new _r({style:"solid",outline:null,color:new Z(h?[g.attributes[u.name]*M,g.attributes[p.name]*M,g.attributes[c.name]*M,1]:[0,0,0,0])})}))}});else if(o?.[0])for(let g=o[0].min;g<=o[0].max;g++)d.push(new ei({value:g,label:g.toString(),symbol:new _r({style:"solid",outline:null,color:new Z([0,0,0,0])})}));if(d.sort((g,y)=>g.value&&typeof g.value.valueOf()=="string"?0:g.value>y.value?1:-1),!h){const g=Dt(gi,{numColors:d.length});d.forEach((y,I)=>y.symbol.color=new Z(g[I].slice(1,4))),m.colorRamp=gi}return new ar({field:l.name,uniqueValueInfos:d,authoringInfo:m})}function bi(e,r,n){let t;return e!=null?(t=r?e.fields.find(i=>r.toLowerCase()===i.name.toLowerCase()):jn(e.fields),t||(n||(t=e.fields.find(i=>i.type==="string")),t||(t=dt(e,"value")))):t=new Wr({name:"value"}),t}function jn(e){let r;for(let n=0;n<e.length;n++){const t=e[n].name.toLowerCase();if(e[n].type==="string"){if(t.startsWith("class")){r=e[n];break}r==null&&(t.endsWith("name")||t.endsWith("type"))&&(r=e[n])}}return r}function dt(e,r){return e==null?null:e.fields.find(n=>n.name.toLowerCase()===r)}function Tn(e){if(!Vr(e))return null;let r;const{attributeTable:n,colormap:t}=e;if(n!=null){const i=dt(n,"value"),o=bi(n,null,!0);o.type==="string"&&(r={},n.features.forEach(l=>{const u=l.attributes;r[u[i.name]]=o?u[o.name]:u[i.name]}))}return fr.createFromColormap(t,r)}const Cn=new Map([["m/s","meter-per-second"],["km/h","kilometer-per-hour"],["knots","knots"],["ft/s","feet-per-second"],["mph","mile-per-hour"]]);function Nn(e){if(!sr(e))return null;let r;if(e.statistics!=null&&e.statistics.length&&(e.dataType==="vector-magdir"||e.dataType==="vector-uv")){const{minMagnitude:i,maxMagnitude:o}=Fn(e.dataType,e.statistics);r=[new At({field:"Magnitude",minSize:10,maxSize:40,minDataValue:i,maxDataValue:o})]}const n=e.multidimensionalInfo!=null?Cn.get(e.multidimensionalInfo.variables[0].unit):void 0,t=new br({visualVariables:r,inputUnit:n,rotationType:"geographic"});return t.visualVariables=[...t.sizeVariables,...t.rotationVariables],t}function Si(e){return{color:e.symbolLayers[0].material?.color,type:"esriSFS",style:"esriSFSSolid"}}function Ri(e){if(e.type==="uniqueValue"){const r=e.uniqueValueInfos;return r?.[0].symbol?.symbolLayers?.length&&(e.uniqueValueInfos=r?.map(n=>({value:n.value,label:n.label,symbol:n.symbol?Si(n.symbol):null}))),e}if(e.type==="classBreaks"){const r=e.classBreakInfos;return r[0].symbol?.symbolLayers?.length&&(e.classBreakInfos=r.map(n=>({classMinValue:n.classMinValue,classMaxValue:n.classMaxValue,label:n.label,symbol:n.symbol?Si(n.symbol):null}))),e}return e}function Fn(e,r){let n,t;if(e==="vector-magdir")n=r[0].min,t=r[0].max;else{const i=r[0].min,o=r[0].max,l=r[1].min,u=r[1].max;n=0,t=Math.max(Math.abs(i),Math.abs(l),Math.abs(o),Math.abs(u))}return{minMagnitude:n,maxMagnitude:t}}const yt={key:"type",base:null,typeMap:{"unique-value":ar,"class-breaks":xt,"raster-colormap":fr,"raster-stretch":Mr,"vector-field":br,"raster-shaded-relief":yi,flow:mi}},ht={...yt,typeMap:{...yt.typeMap}};delete ht.typeMap["vector-field"],delete ht.typeMap.flow;const Ln={uniqueValue:ar,classBreaks:xt,rasterStretch:Mr,rasterColormap:fr,vectorField:br,rasterShadedRelief:yi,flowRenderer:mi};function Pn(e){return e&&Ln[e.type]||null}function Di(e,r){if(!e)return null;if(e.type==="classBreaks"&&e.classificationMethod){const t=e.authoringInfo||{classificationMethod:""};t.classificationMethod=e.classificationMethod,e.authoringInfo=t}e.type==="vectorField"&&e.visualVariables&&!Array.isArray(e.visualVariables)&&(e.visualVariables=[e.visualVariables]);const n=Pn(e);if(n){const t=new n;return t.read(e,r),t}return r?.messages&&e&&r.messages.push(new Vi("renderer:unsupported","Renderers of type '"+(e.type||"unknown")+"' are not supported",{definition:e,context:r})),null}let He=class extends ge.ClonableMixin(v){constructor(){super(...arguments),this.fromGeometry=null,this.toGeometry=null,this.objectIds=null,this.where=null,this.maxCount=null}};s([a({type:F,json:{read:!0}})],He.prototype,"fromGeometry",void 0),s([a({type:F,json:{read:!0,write:!0}})],He.prototype,"toGeometry",void 0),s([a({json:{write:!0}})],He.prototype,"objectIds",void 0),s([a({type:String,json:{write:!0}})],He.prototype,"where",void 0),s([a({type:Number,json:{write:!0}})],He.prototype,"maxCount",void 0),He=s([w("esri.rest.support.FindImagesParameters")],He);const zn=He,Ai=e=>{let r=class extends e{constructor(){super(...arguments),this.make=null,this.model=null,this.focalLength=null,this.pixelSize=null,this.rows=null,this.cols=null}};return s([a({json:{write:!0}})],r.prototype,"make",void 0),s([a({json:{write:!0}})],r.prototype,"model",void 0),s([a({json:{write:!0}})],r.prototype,"focalLength",void 0),s([a({json:{write:!0}})],r.prototype,"pixelSize",void 0),s([a({json:{write:!0}})],r.prototype,"rows",void 0),s([a({json:{write:!0}})],r.prototype,"cols",void 0),r=s([w("esri.rest.support.CameraInfoMixin")],r),r};let me=class extends Ai(v){constructor(){super(...arguments),this.id=null,this.referenceUri=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.perspectiveCenter=null,this.orientation=null}writeAcquisitionDate(e,r){r.acquisitionDate=e?.getTime()}};s([a({json:{write:!0}})],me.prototype,"id",void 0),s([a({json:{name:"uri",write:!0}})],me.prototype,"referenceUri",void 0),s([a({type:Date,json:{write:!0}})],me.prototype,"acquisitionDate",void 0),s([x("acquisitionDate")],me.prototype,"writeAcquisitionDate",null),s([a({json:{write:!0}})],me.prototype,"cameraID",void 0),s([a({type:F,json:{write:!0}})],me.prototype,"center",void 0),s([a({type:F,json:{write:!0}})],me.prototype,"perspectiveCenter",void 0),s([a({json:{write:!0}})],me.prototype,"orientation",void 0),me=s([w("esri.rest.support.ImageInspectionInfo")],me);const On=me;let Ut=class extends v{constructor(){super(...arguments),this.images=null}};s([a({type:[On],json:{write:!0}})],Ut.prototype,"images",void 0),Ut=s([w("esri.rest.support.FindImagesResult")],Ut);const Bn=Ut;var Rr;let We=Rr=class extends v{constructor(e){super(e),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new Rr(D({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};s([a({type:[String],json:{name:"angleName",write:!0}})],We.prototype,"angleNames",void 0),s([a({type:F,json:{write:!0}})],We.prototype,"point",void 0),s([a({type:pe,json:{write:!0}})],We.prototype,"spatialReference",void 0),s([a({type:Y,json:{write:!0}})],We.prototype,"rasterId",void 0),We=Rr=s([w("esri.rest.support.ImageAngleParameters")],We);const Un=We;let tt=class extends v{constructor(e){super(e),this.north=null,this.up=null,this.spatialReference=null}};s([a({type:Number,json:{write:!0}})],tt.prototype,"north",void 0),s([a({type:Number,json:{write:!0}})],tt.prototype,"up",void 0),s([a({type:pe,json:{write:!0}})],tt.prototype,"spatialReference",void 0),tt=s([w("esri.rest.support.ImageAngleResult")],tt);const _n=tt,oe=new Ye({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let Ve=class extends v{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};s([a({type:Number,json:{read:!0,write:!0}})],Ve.prototype,"value",void 0),s([a({type:String,json:{read:!0,write:!0}})],Ve.prototype,"displayValue",void 0),s([a({type:Number,json:{read:!0,write:!0}})],Ve.prototype,"uncertainty",void 0),Ve=s([w("esri.rest.support.imageMeasureUtils.BaseImageMeasureResultValue")],Ve);let rt=class extends Ve{constructor(){super(...arguments),this.unit=null}};s([a({type:String,json:{read:Oe.read,write:Oe.write}})],rt.prototype,"unit",void 0),rt=s([w("esri.rest.support.imageMeasureUtils.ImageMeasureResultLengthValue")],rt);let _t=class extends Ve{constructor(){super(...arguments),this.unit=null}};s([a({type:String,json:{read:St.read,write:St.write}})],_t.prototype,"unit",void 0),_t=s([w("esri.rest.support.imageMeasureUtils.ImageMeasureResultAreaValue")],_t);let gt=class extends Ve{constructor(){super(...arguments),this.unit=null}};s([a({type:String,json:{read:Rt.read,write:Rt.write}})],gt.prototype,"unit",void 0),gt=s([w("esri.rest.support.imageMeasureUtils.ImageMeasureResultAngleValue")],gt);let Ee=class extends v{constructor(e){super(e),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};s([a()],Ee.prototype,"type",void 0),s([a({type:oe.apiValues,json:{read:oe.read,write:oe.write}})],Ee.prototype,"measureOperation",void 0),s([a({type:ie,json:{write:!0}})],Ee.prototype,"mosaicRule",void 0),s([a({type:F,json:{write:!0}})],Ee.prototype,"pixelSize",void 0),s([a({json:{write:!0}})],Ee.prototype,"raster",void 0),Ee=s([w("esri.rest.support.BaseImageMeasureParameters")],Ee);const Ht=Ee;var Dr;let xe=Dr=class extends Ht{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(e,r,n){e!=null&&(r.geometryType=re(e),r[n]=e.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new Dr(D({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([a({types:$,json:{name:"fromGeometry",read:!0,write:!0}})],xe.prototype,"geometry",void 0),s([x("geometry")],xe.prototype,"writeGeometry",null),s([a({type:oe.apiValues,json:{write:oe.write}})],xe.prototype,"measureOperation",null),s([a({json:{read:!0}})],xe.prototype,"is3D",void 0),s([a({type:String,json:{read:Oe.read,write:Oe.write}})],xe.prototype,"linearUnit",void 0),s([a({type:String,json:{read:St.read,write:St.write}})],xe.prototype,"areaUnit",void 0),xe=Dr=s([w("esri.rest.support.ImageAreaParameters")],xe);const Hn=xe;let ft=class extends v{constructor(e){super(e),this.name=null,this.sensorName=null}};s([a({type:String,json:{read:!0,write:!0}})],ft.prototype,"name",void 0),s([a({type:String,json:{read:!0,write:!0}})],ft.prototype,"sensorName",void 0),ft=s([w("esri.rest.support.BaseImageMeasureResult")],ft);const Vt=ft;let wt=class extends Vt{constructor(){super(...arguments),this.area=null,this.perimeter=null}};s([a({type:_t,json:{read:!0,write:!0}})],wt.prototype,"area",void 0),s([a({type:rt,json:{read:!0,write:!0}})],wt.prototype,"perimeter",void 0),wt=s([w("esri.rest.support.ImageAreaResult")],wt);const Vn=wt;let Et=class extends ge.ClonableMixin(v){constructor(){super(...arguments),this.outSpatialReference=null}};s([a({type:pe,json:{name:"outSR",write:!0}})],Et.prototype,"outSpatialReference",void 0),Et=s([w("esri.rest.support.ImageBoundaryParameters")],Et);const En=Et;let it=class extends v{constructor(){super(...arguments),this.area=null,this.geometry=null}readGeometry(e,r){return e==null?null:e.rings?bt.fromJSON(e):ze.fromJSON(e)}};s([a({type:Number,json:{write:!0}})],it.prototype,"area",void 0),s([a({types:$,json:{name:"shape",write:!0}})],it.prototype,"geometry",void 0),s([L("geometry")],it.prototype,"readGeometry",null),it=s([w("esri.rest.support.ImageBoundaryResult")],it);const kn=it;var Ar;let Ie=Ar=class extends Ht{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(e,r,n){e!=null&&(r.geometryType=re(e),r[n]=e.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new Ar(D({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([a({type:F,json:{read:!0,write:!0}})],Ie.prototype,"fromGeometry",void 0),s([x("fromGeometry")],Ie.prototype,"writeFromGeometry",null),s([a({type:F,json:{read:!0,write:!0}})],Ie.prototype,"toGeometry",void 0),s([a({type:oe.apiValues,json:{write:oe.write}})],Ie.prototype,"measureOperation",null),s([a({json:{read:!0}})],Ie.prototype,"is3D",void 0),s([a({type:String,json:{read:Oe.read,write:Oe.write}})],Ie.prototype,"linearUnit",void 0),s([a({type:String,json:{read:Rt.read,write:Rt.write}})],Ie.prototype,"angularUnit",void 0),Ie=Ar=s([w("esri.rest.support.ImageDistanceParameters")],Ie);const Jn=Ie;let st=class extends Vt{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};s([a({type:rt,json:{read:!0,write:!0}})],st.prototype,"distance",void 0),s([a({type:gt,json:{read:!0,write:!0}})],st.prototype,"azimuthAngle",void 0),s([a({type:gt,json:{read:!0,write:!0}})],st.prototype,"elevationAngle",void 0),st=s([w("esri.rest.support.ImageDistanceResult")],st);const Zn=st;let je=class extends ge.ClonableMixin(v){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(e,r,n){e!=null&&(r.geometryType=re(e),r[n]=JSON.stringify(e.toJSON()))}};s([a({types:$,json:{read:te,write:!0}})],je.prototype,"geometry",void 0),s([x("geometry")],je.prototype,"writeGeometry",null),s([a({json:{write:!0}})],je.prototype,"objectIds",void 0),s([Pe(Vs,{ignoreUnknown:!1,name:"spatialRel"})],je.prototype,"spatialRelationship",void 0),s([a({type:jt,json:{name:"time",write:!0}})],je.prototype,"timeExtent",void 0),s([a({type:String,json:{write:!0}})],je.prototype,"where",void 0),je=s([w("esri.rest.support.ImageGPSInfoParameters")],je);const Gn=je;let kt=class extends Ai(v){constructor(){super(...arguments),this.id=null}};s([a({json:{write:!0}})],kt.prototype,"id",void 0),kt=s([w("esri.rest.support.CameraInfo")],kt);const qn=kt;let de=class extends v{constructor(){super(...arguments),this.id=null,this.name=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.gps=null,this.orientation=null}writeAcquisitionDate(e,r){r.acquisitionDate=e?.getTime()}};s([a({json:{write:!0}})],de.prototype,"id",void 0),s([a({json:{write:!0}})],de.prototype,"name",void 0),s([a({type:Date,json:{write:!0}})],de.prototype,"acquisitionDate",void 0),s([x("acquisitionDate")],de.prototype,"writeAcquisitionDate",null),s([a({json:{write:!0}})],de.prototype,"cameraID",void 0),s([a({type:F,json:{write:!0}})],de.prototype,"center",void 0),s([a({json:{write:!0}})],de.prototype,"gps",void 0),s([a({json:{write:!0}})],de.prototype,"orientation",void 0),de=s([w("esri.rest.support.ImageGPSInfo")],de);const Wn=de;let It=class extends v{constructor(){super(...arguments),this.images=null,this.cameras=null}};s([a({type:[Wn],json:{write:!0}})],It.prototype,"images",void 0),s([a({type:[qn],json:{write:!0}})],It.prototype,"cameras",void 0),It=s([w("esri.rest.support.ImageGPSInfoResult")],It);const Qn=It;var xr;let Te=xr=class extends Ht{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(e,r,n){e!=null&&(r.geometryType=re(e),r[n]=e.toJSON())}get measureOperation(){return this.operationType}clone(){return new xr(D({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([a({type:F,json:{read:!0}})],Te.prototype,"fromGeometry",void 0),s([x("fromGeometry")],Te.prototype,"writeFromGeometry",null),s([a({type:F,json:{read:!0,write:!0}})],Te.prototype,"toGeometry",void 0),s([a({type:oe.apiValues,json:{write:oe.write}})],Te.prototype,"measureOperation",null),s([a({json:{read:!0}})],Te.prototype,"operationType",void 0),s([a({type:String,json:{read:Oe.read,write:Oe.write}})],Te.prototype,"linearUnit",void 0),Te=xr=s([w("esri.rest.support.ImageHeightParameters")],Te);const Kn=Te;let Jt=class extends Vt{constructor(){super(...arguments),this.height=null}};s([a({type:rt,json:{read:!0,write:!0}})],Jt.prototype,"height",void 0),Jt=s([w("esri.rest.support.ImageHeightResult")],Jt);const Xn=Jt;var jr;let Me=jr=class extends v{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.rasterFunction=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(e,r,n){e!=null&&(r.geometryType=re(e),r[n]=e.toJSON())}clone(){return new jr(D({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};s([a({types:$,json:{read:te}})],Me.prototype,"geometry",void 0),s([x("geometry")],Me.prototype,"writeGeometry",null),s([a({type:ie,json:{write:!0}})],Me.prototype,"mosaicRule",void 0),s([a({type:j,json:{write:!0,name:"renderingRule"}})],Me.prototype,"rasterFunction",void 0),s([a({type:F,json:{write:!0}})],Me.prototype,"pixelSize",void 0),s([a({json:{write:!0}})],Me.prototype,"raster",void 0),s([a({type:jt,json:{read:{source:"time"},write:{target:"time"}}})],Me.prototype,"timeExtent",void 0),Me=jr=s([w("esri.rest.support.ImageHistogramParameters")],Me);const xi=Me;var Tr;let U=Tr=class extends v{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(e,r,n){e!=null&&(r.geometryType=re(e),r[n]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let r=e;r?.mosaicMethod&&(r=ie.fromJSON({...r.toJSON(),mosaicMethod:r.mosaicMethod,mosaicOperation:r.mosaicOperation})),this._set("mosaicRule",r)}writeMosaicRule(e,r,n){e!=null&&(r[n]=JSON.stringify(e.toJSON()))}set rasterFunction(e){let r=e;r?.rasterFunction&&(r=j.fromJSON({...r.toJSON(),rasterFunction:r.rasterFunction,rasterFunctionArguments:r.rasterFunctionArguments})),this._set("rasterFunction",r)}writeRasterFunction(e,r,n){e!=null&&(r[n]=JSON.stringify(e.toJSON())),e.rasterFunctionDefinition&&(r[n]=JSON.stringify(e.rasterFunctionDefinition))}writeRasterFunctions(e,r,n){e!=null&&(r[n]=JSON.stringify(e.map(t=>t.rasterFunctionDefinition||t.toJSON())))}writePixelSize(e,r,n){e!=null&&(r[n]=JSON.stringify(e))}writeTimeExtent(e,r,n){if(e!=null){const t=e.start!=null?e.start.getTime():null,i=e.end!=null?e.end.getTime():null;r[n]=t!=null?i!=null?`${t},${i}`:`${t}`:null}}clone(){return new Tr(D({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};s([a({types:$,json:{write:!0}})],U.prototype,"geometry",void 0),s([x("geometry")],U.prototype,"writeGeometry",null),s([a({type:ie,json:{write:!0}})],U.prototype,"mosaicRule",null),s([x("mosaicRule")],U.prototype,"writeMosaicRule",null),s([a({type:j,json:{write:!0,name:"renderingRule"}})],U.prototype,"rasterFunction",null),s([x("rasterFunction")],U.prototype,"writeRasterFunction",null),s([a({type:[j],json:{write:!0,name:"renderingRules"}})],U.prototype,"rasterFunctions",void 0),s([x("rasterFunctions")],U.prototype,"writeRasterFunctions",null),s([a({type:F,json:{write:!0}})],U.prototype,"pixelSize",void 0),s([x("pixelSize")],U.prototype,"writePixelSize",null),s([a({type:Boolean,json:{write:!0}})],U.prototype,"returnGeometry",void 0),s([a({type:Boolean,json:{write:!0}})],U.prototype,"returnCatalogItems",void 0),s([a({type:Boolean,json:{write:!0}})],U.prototype,"returnPixelValues",void 0),s([a({type:Number,json:{write:!0}})],U.prototype,"maxItemCount",void 0),s([a({type:jt,json:{write:{target:"time"}}})],U.prototype,"timeExtent",void 0),s([x("timeExtent")],U.prototype,"writeTimeExtent",null),s([a({json:{write:!0}})],U.prototype,"raster",void 0),s([a({json:{write:!0}})],U.prototype,"viewId",void 0),s([a({type:Boolean,json:{write:!0}})],U.prototype,"processAsMultidimensional",void 0),U=Tr=s([w("esri.rest.support.ImageIdentifyParameters")],U);const ji=U;let ye=class extends v{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};s([a({json:{write:!0}})],ye.prototype,"catalogItemVisibilities",void 0),s([a({type:lr,json:{write:!0}})],ye.prototype,"catalogItems",void 0),s([a({type:F,json:{write:!0}})],ye.prototype,"location",void 0),s([a({json:{write:!0}})],ye.prototype,"name",void 0),s([a({json:{write:!0}})],ye.prototype,"objectId",void 0),s([a({json:{write:!0}})],ye.prototype,"processedValues",void 0),s([a({json:{write:!0}})],ye.prototype,"properties",void 0),s([a({json:{write:!0}})],ye.prototype,"value",void 0),ye=s([w("esri.rest.support.ImageIdentifyResult")],ye);const Yn=ye;var Cr;let nt=Cr=class extends v{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(e,r,n){r.geometries={geometryType:"esriGeometryPoint",geometries:e.map(t=>t.toJSON())}}clone(){return new Cr({geometries:this.geometries?.map(e=>e.clone())??[],rasterId:this.rasterId})}};s([a({type:[F],json:{write:!0}})],nt.prototype,"geometries",void 0),s([x("geometries")],nt.prototype,"writeGeometry",null),s([a({type:Y,json:{write:!0}})],nt.prototype,"rasterId",void 0),nt=Cr=s([w("esri.rest.support.ImagePixelLocationParameters")],nt);const $n=nt;let Zt=class extends v{constructor(){super(...arguments),this.geometries=null}};s([a({json:{write:!0}})],Zt.prototype,"geometries",void 0),Zt=s([w("esri.rest.support.ImagePixelLocationResult")],Zt);const ea=Zt;var Nr;let Qe=Nr=class extends Ht{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(e,r,n){e!=null&&(r.geometryType=re(e),r[n]=e.toJSON())}get measureOperation(){const{is3D:e,geometry:r}=this;return r.type==="point"?e?"point-3D":"point":e?"centroid-3D":"centroid"}clone(){return new Nr(D({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([a({types:$,json:{name:"fromGeometry",read:te}})],Qe.prototype,"geometry",void 0),s([x("geometry")],Qe.prototype,"writeGeometry",null),s([a({type:oe.apiValues,json:{read:oe.read,write:oe.write}})],Qe.prototype,"measureOperation",null),s([a({json:{read:!0}})],Qe.prototype,"is3D",void 0),Qe=Nr=s([w("esri.rest.support.ImagePointParameters")],Qe);const ta=Qe;let Gt=class extends Vt{constructor(){super(...arguments),this.point=null}};s([a({type:F,json:{name:"point.value",read:!0,write:!0}})],Gt.prototype,"point",void 0),Gt=s([w("esri.rest.support.ImagePointResult")],Gt);const ra=Gt;var Fr;let Q=Fr=class extends v{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.raster=void 0,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(e,r,n){e!=null&&(r.geometryType=re(e),r[n]=e.toJSON())}set locations(e){if(e?.length){const r=new Ei({spatialReference:e[0].spatialReference,points:e.map(({x:n,y:t})=>[n,t])});this._set("locations",e),this.geometry=r}}clone(){return new Fr(D({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};s([a({types:$,json:{read:te}})],Q.prototype,"geometry",void 0),s([x("geometry")],Q.prototype,"writeGeometry",null),s([a({type:[F]})],Q.prototype,"locations",null),s([a({type:String,json:{type:Be.jsonValues,read:Be.read,write:Be.write}})],Q.prototype,"interpolation",void 0),s([a({type:ie,json:{write:!0}})],Q.prototype,"mosaicRule",void 0),s([a({type:[String],json:{write:!0}})],Q.prototype,"outFields",void 0),s([a({type:F,json:{write:!0}})],Q.prototype,"pixelSize",void 0),s([a({type:String,json:{write:!0}})],Q.prototype,"raster",void 0),s([a({type:Boolean,json:{write:!0}})],Q.prototype,"returnFirstValueOnly",void 0),s([a({type:Number,json:{write:!0}})],Q.prototype,"sampleDistance",void 0),s([a({type:Number,json:{write:!0}})],Q.prototype,"sampleCount",void 0),s([a({type:Number,json:{write:!0}})],Q.prototype,"sliceId",void 0),s([a({type:jt,json:{read:{source:"time"},write:{target:"time"}}})],Q.prototype,"timeExtent",void 0),Q=Fr=s([w("esri.rest.support.ImageSampleParameters")],Q);const ia=Q;let Ce=class extends v{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};s([a({json:{write:!0}})],Ce.prototype,"attributes",void 0),s([a({type:F,json:{write:!0}})],Ce.prototype,"location",void 0),s([a({json:{write:!0}})],Ce.prototype,"locationId",void 0),s([a({json:{write:!0}})],Ce.prototype,"rasterId",void 0),s([a({json:{write:!0}})],Ce.prototype,"resolution",void 0),s([a({json:{write:!0}})],Ce.prototype,"pixelValue",void 0),Ce=s([w("esri.rest.support.ImageSample")],Ce);const sa=Ce;let qt=class extends v{constructor(){super(...arguments),this.samples=[]}};s([a({type:[sa],json:{write:!0}})],qt.prototype,"samples",void 0),qt=s([w("esri.rest.support.ImageSampleResult")],qt);const na=qt;let Ke=class extends ge.ClonableMixin(v){constructor(){super(...arguments),this.geometries=[],this.rasterIds=null,this.outSpatialReference=null}writeGeometries(e,r,n){r.geometries=e?.length?{geometryType:re(e[0]),geometries:e.map(t=>({...t.toJSON(),spatialReference:void 0}))}:null}};s([a({types:[$]})],Ke.prototype,"geometries",void 0),s([x("geometries")],Ke.prototype,"writeGeometries",null),s([a({type:[Y],json:{write:!0}})],Ke.prototype,"rasterIds",void 0),s([a({type:pe,json:{name:"outSR",write:!0}})],Ke.prototype,"outSpatialReference",void 0),Ke=s([w("esri.rest.support.ImageToMapMultirayParameters")],Ke);const aa=Ke;let Ne=class extends ge.ClonableMixin(v){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(e,r,n){e!=null&&(r.geometryType=re(e),r[n]={...e.toJSON(),spatialReference:void 0})}};s([a({types:$,json:{read:te,write:!0}})],Ne.prototype,"geometry",void 0),s([x("geometry")],Ne.prototype,"writeGeometry",null),s([a({json:{write:!0}})],Ne.prototype,"rasterId",void 0),s([a({type:pe,json:{name:"outSR",write:!0}})],Ne.prototype,"outSpatialReference",void 0),s([a({json:{name:"options.DOff",write:!0}})],Ne.prototype,"depthOffset",void 0),s([a({json:{name:"options.Adjust",write:!0}})],Ne.prototype,"adjust",void 0),Ne=s([w("esri.rest.support.ImageToMapParameters")],Ne);const oa=Ne;let Mt=class extends ge.ClonableMixin(v){constructor(){super(...arguments),this.referenceUri=null,this.rasterId=null}};s([a({type:String,json:{name:"uri",write:!0}})],Mt.prototype,"referenceUri",void 0),s([a({type:Number,json:{write:!0}})],Mt.prototype,"rasterId",void 0),Mt=s([w("esri.rest.support.ImageUrlParameters")],Mt);const la=Mt;let Wt=class extends v{constructor(){super(...arguments),this.url=null}};s([a({json:{name:"imageURL",write:!0}})],Wt.prototype,"url",void 0),Wt=s([w("esri.rest.support.ImageUrlResult")],Wt);const ua=Wt,Lr=new Ye({0:"constant",1:"plane",2:"minimum",3:"maximum",4:"average"},{useNumericKeys:!0});let Fe=class extends ge.ClonableMixin(v){constructor(){super(...arguments),this.geometries=[],this.mosaicRule=null,this.pixelSize=null,this.constantZ=null,this.baseType="plane"}writeGeometries(e,r,n){e?.length&&(r.geometryType=re(e[0]),r.geometries=e.map(t=>t.toJSON()))}};s([a({types:[$]})],Fe.prototype,"geometries",void 0),s([x("geometries")],Fe.prototype,"writeGeometries",null),s([a({type:ie,json:{write:!0}})],Fe.prototype,"mosaicRule",void 0),s([a({type:F,json:{write:!0}})],Fe.prototype,"pixelSize",void 0),s([a({json:{write:!0}})],Fe.prototype,"constantZ",void 0),s([a({type:Lr.apiValues,json:{read:Lr.read,write:Lr.write}})],Fe.prototype,"baseType",void 0),Fe=s([w("esri.rest.support.ImageVolumeParameters")],Fe);const pa=Fe;let he=class extends v{constructor(){super(...arguments),this.area=null,this.cut=null,this.fill=null,this.maxZ=null,this.minZ=null,this.meanZ=null,this.cutCellCount=null,this.fillCellCount=null}};s([a({json:{write:!0}})],he.prototype,"area",void 0),s([a({json:{write:!0}})],he.prototype,"cut",void 0),s([a({json:{write:!0}})],he.prototype,"fill",void 0),s([a({json:{name:"maxz",write:!0}})],he.prototype,"maxZ",void 0),s([a({json:{name:"minz",write:!0}})],he.prototype,"minZ",void 0),s([a({json:{name:"meanz",write:!0}})],he.prototype,"meanZ",void 0),s([a({json:{write:!0}})],he.prototype,"cutCellCount",void 0),s([a({json:{write:!0}})],he.prototype,"fillCellCount",void 0),he=s([w("esri.rest.support.ImageVolume")],he);const ca=he;let Qt=class extends v{constructor(){super(...arguments),this.volumes=[]}};s([a({type:[ca],json:{write:!0}})],Qt.prototype,"volumes",void 0),Qt=s([w("esri.rest.support.ImageVolumeResult")],Qt);const ma=Qt;let Xe=class extends ge.ClonableMixin(v){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.visibleOnly=!1}writeGeometry(e,r,n){e!=null&&(r.geometryType=re(e),r[n]=JSON.stringify(e))}};s([a({types:$,json:{read:te,write:!0}})],Xe.prototype,"geometry",void 0),s([x("geometry")],Xe.prototype,"writeGeometry",null),s([a({json:{write:!0}})],Xe.prototype,"rasterId",void 0),s([a({json:{name:"options.VisibleOnly",write:!0}})],Xe.prototype,"visibleOnly",void 0),Xe=s([w("esri.rest.support.MapToImageParameters")],Xe);const da=Xe;let ke=class extends v{constructor(){super(...arguments),this.geometry=null,this.length=null,this.area=null,this.center=null}readCenter(e,r){return e.spatialReference||(e={...e,spatialReference:r.Shape.spatialReference}),F.fromJSON(e)}};s([a({types:$,json:{name:"Shape",read:te,write:!0}})],ke.prototype,"geometry",void 0),s([a({json:{name:"Length",write:!0}})],ke.prototype,"length",void 0),s([a({json:{name:"Area",write:!0}})],ke.prototype,"area",void 0),s([a({type:F,json:{name:"Center",write:!0}})],ke.prototype,"center",void 0),s([L("center")],ke.prototype,"readCenter",null),ke=s([w("esri.rest.support.MeasureAreaFromImageResult")],ke);const ya=ke;var Pr;let at=Pr=class extends v{constructor(){super(...arguments),this.geometry=null,this.rasterId=void 0}writeGeometry(e,r,n){e!=null&&(r.geometryType=re(e),r[n]={...e.toJSON(),spatialReference:void 0})}clone(){const e=D({geometry:this.geometry,rasterId:this.rasterId});return new Pr(e)}};s([a({types:$,json:{name:"fromGeometry",read:te,write:!0}})],at.prototype,"geometry",void 0),s([x("geometry")],at.prototype,"writeGeometry",null),s([a({json:{write:!0}})],at.prototype,"rasterId",void 0),at=Pr=s([w("esri.rest.support.MeasureFromImageParameters")],at);const ha=at;let vt=class extends v{constructor(){super(...arguments),this.geometry=null,this.length=null}};s([a({types:$,json:{name:"Shape",read:te,write:!0}})],vt.prototype,"geometry",void 0),s([a({json:{name:"Length",write:!0}})],vt.prototype,"length",void 0),vt=s([w("esri.rest.support.MeasureLengthFromImageResult")],vt);const ga=vt;function zr(e){const r=e?.time;if(r&&(r.start!=null||r.end!=null)){const n=[];r.start!=null&&n.push(r.start),r.end==null||n.includes(r.end)||n.push(r.end),e.time=n.join(",")}}async function Ti(e,r,n){r=_(xi,r);const t=H(e),i=r.geometry?[r.geometry]:[],o=await Ue(i),l=r.toJSON();zr(l);const u=o?.[0];u!=null&&(l.geometry=ve(u));const p=k({...t.query,f:"json",...l});return J(p,n)}async function fa(e,r,n){const t=(r=_(pa,r)).toJSON();t.geometries=JSON.stringify(t.geometries);const i=H(e),o=k({...i.query,f:"json",...t}),l=J(o,n),{data:u}=await S(`${i.path}/calculateVolume`,l);return ma.fromJSON({volumes:u.results})}async function wa(e,r,n){const t=(r=_(Un,r)).toJSON();t.angleName!=null&&(t.angleName=t.angleName.join(",")),r?.point?.spatialReference?.imageCoordinateSystem&&(t.point.spatialReference=Xt(r.point.spatialReference)),r?.spatialReference?.imageCoordinateSystem&&(t.spatialReference=ot(r.spatialReference));const i=H(e),o=k({...i.query,f:"json",...t}),l=J(o,n),{data:u}=await S(`${i.path}/computeAngles`,l);return u.spatialReference=u.spatialReference?u.spatialReference.geodataXform!=null?new pe({wkid:0,imageCoordinateSystem:u.spatialReference}):pe.fromJSON(u.spatialReference):null,u.north==="NaN"&&(u.north=null),u.up==="NaN"&&(u.up=null),new _n(u)}async function Ia(e,r,n){const t=(r=_($n,r)).toJSON(),{geometries:i}=r;if(i)for(let c=0;c<i.length;c++)i[c].spatialReference?.imageCoordinateSystem&&(t.geometries.geometries[c].spatialReference=Xt(i[c].spatialReference));const o=H(e),l=k({...o.query,f:"json",...t}),u=J(l,n),{data:p}=await S(`${o.path}/computePixelLocation`,u);return ea.fromJSON(p)}async function Ma(e,r,n){const t=await Ti(e,r,n),i=H(e),{data:o}=await S(`${i.path}/computeStatisticsHistograms`,t),{statistics:l}=o;return l?.length&&l.forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:l,histograms:o.histograms}}async function va(e,r,n){const t=await Ti(e,r,n),i=H(e),{data:o}=await S(`${i.path}/computeHistograms`,t);return{histograms:o.histograms}}async function ba(e,r,n){const t=(r=_(ia,r)).toJSON();zr(t),t.outFields?.length&&(t.outFields=t.outFields.join(","));const i=await Ue(r.geometry),o=i?.[0];o!=null&&(t.geometry=ve(o));const l=H(e),u=k({...l.query,f:"json",...t}),p=J(u,n),{data:c}=await S(`${l.path}/getSamples`,p),m=c.samples.map(d=>{const f=d.value==="NaN"||d.value===""?null:d.value.split(" ").map(h=>Number(h));return{...d,pixelValue:f}});return na.fromJSON({samples:m})}async function Ci(e,r,n){r=_(ji,r);const t=H(e),i=r.geometry?[r.geometry]:[];return Ue(i).then(o=>{const l=r.toJSON(),u=o?.[0];u!=null&&(l.geometry=JSON.stringify(ve(u)));const p=k({...t.query,f:"json",...l}),c=J(p,n);return S(t.path+"/identify",c)}).then(o=>Yn.fromJSON(o.data))}async function Sa(e,r,n){r=_(Kn,r);const t=await Kt(e,r,[r.fromGeometry,r.toGeometry],n);return Xn.fromJSON(t)}async function Ra(e,r,n){r=_(Hn,r);const t=await Kt(e,r,[r.geometry],n);return Vn.fromJSON(t)}async function Da(e,r,n){r=_(ta,r);const t=await Kt(e,r,[r.geometry],n);return ra.fromJSON(t)}async function Aa(e,r,n){r=_(Jn,r);const t=await Kt(e,r,[r.fromGeometry,r.toGeometry],n);return Zn.fromJSON(t)}async function Kt(e,r,n,t){const i=H(e),o=await Ue(n),l=r.toJSON();o[0]!=null&&(l.fromGeometry=JSON.stringify(ve(o[0]))),o[1]!=null&&(l.toGeometry=JSON.stringify(ve(o[1])));const u=k({...i.query,f:"json",...l}),p=J(u,t),{data:c}=await S(i.path+"/measure",p);return c}async function xa(e,r,n){const t=await Ni(e,r,n);return ga.fromJSON(t)}async function ja(e,r,n){const t=await Ni(e,r,n);return ya.fromJSON(t)}async function Ni(e,r,n){r=_(ha,r);const t=H(e),i=r.toJSON(),o=k({...t.query,f:"json",...i}),l=J(o,n),{data:u}=await S(t.path+"/measureFromImage",l);return u}function ve(e){const r=e.toJSON();return e.spatialReference?.imageCoordinateSystem&&(r.spatialReference=Xt(e.spatialReference)),r}function Xt(e){const{imageCoordinateSystem:r}=e;if(r){const{id:n,referenceServiceName:t}=r;return n!=null?t?{icsid:n,icsns:t}:{icsid:n}:{ics:r}}return e.toJSON()}function ot(e,r){if(!e.imageCoordinateSystem)return tr(e);const n=Xt(e),{icsid:t,icsns:i}=n;return t==null||i!=null&&!r?.toLowerCase().includes("/"+i.toLowerCase()+"/")?JSON.stringify(n):`0:${t}`}async function Ta(e,r,n){r=_(En,r);const t=H(e),i=r.toJSON();r.outSpatialReference&&(i.outSR=ot(r.outSpatialReference));const o=k({...t.query,f:"json",...i}),l=J(o,n),{data:u}=await S(t.path+"/queryBoundary",l);return kn.fromJSON(u)}async function Ca(e,r,n){const t=(r=_(Gn,r)).toJSON();zr(t),t.objectIds?.length&&(t.objectIds=t.objectIds.join(",")),t.geometry||t.objectIds||t.time||t.where||(t.where="1=1");const i=await Ue(r.geometry),o=i?.[0];o!=null&&(t.geometry=ve(o));const l=o?.spatialReference??r.geometry?.spatialReference;l&&(t.inSR=ot(l));const u=H(e),p=k({...u.query,f:"json",...t}),c=J(p,n),{data:m}=await S(`${u.path}/queryGPSInfo`,c);return Qn.fromJSON(m)}async function Na(e,r,n){const t=(r=_(oa,r)).toJSON();r.geometry.spatialReference.imageCoordinateSystem&&(t.geometry=ve(r.geometry)),r.depthOffset&&r.adjust||delete t.options;const i=H(e),o=k({...i.query,f:"json",...t}),l=J(o,n),{data:u}=await S(`${i.path}/imageToMap`,l);return te(u)}async function Fa(e,r,n){const t=(r=_(aa,r)).toJSON();r.rasterIds?.length&&(t.rasterIds=r.rasterIds.join(","));const i=H(e),o=k({...i.query,f:"json",...t}),l=J(o,n),{data:u}=await S(`${i.path}/imageToMapMultiray`,l);return te(u)}async function La(e,r,n){const t=(r=_(da,r)).toJSON(),i=await Ue(r.geometry),o=i?.[0];o!=null&&(t.geometry=ve(o)),r.visibleOnly||delete t.options;const l=o?.spatialReference??r.geometry?.spatialReference;l&&(t.inSR=ot(l));const u=H(e),p=k({...u.query,f:"json",...t}),c=J(p,n),{data:m}=await S(`${u.path}/mapToImage`,c);return te(m)}async function Pa(e,r,n){const t=(r=_(la,r)).toJSON(),i=H(e),o=k({...i.query,f:"json",...t}),l=J(o,n),{data:u}=await S(`${i.path}/getImageUrl`,l);return ua.fromJSON(u)}async function za(e,r,n){const t=(r=_(zn,r)).toJSON(),i=await Ue([r.fromGeometry,r.toGeometry]);i[0]!=null&&(t.fromGeometry=ve(i[0]),i[0].spatialReference&&(t.inSR=ot(i[0].spatialReference))),i[1]!=null&&(t.toGeometry=ve(i[1])),r.objectIds?.length&&(t.objectIds=t.objectIds.join(","));const o=H(e),l=k({...o.query,f:"json",...t}),u=J(l,n),{data:p}=await S(`${o.path}/find`,u);return Bn.fromJSON(p)}async function Fi(e,r,n){const t=H(e),{rasterFunction:i,sourceJSON:o}=r||{},l=i?JSON.stringify(i.rasterFunctionDefinition||i):null,u=k({...t.query,renderingRule:l,f:"json"}),p=J(u,n);e=t.path;const c=o||await S(e,p).then(X=>X.data),m=c.hasRasterAttributeTable?S(`${e}/rasterAttributeTable`,p):null,d=c.hasColormap?S(`${e}/colormap`,p):null,f=c.hasHistograms?S(`${e}/histograms`,p):null,h=c.currentVersion>=10.3?S(`${e}/keyProperties`,p):null,g=c.hasMultidimensions?S(`${e}/multidimensionalInfo`,p):null,y=await Promise.allSettled([m,d,f,h,g]);let I=null;if(c.minValues&&c.minValues.length===c.bandCount){I=[];for(let X=0;X<c.minValues.length;X++)I.push({min:c.minValues[X],max:c.maxValues[X],avg:c.meanValues[X],stddev:c.stdvValues[X]})}const M=ze.fromJSON(c.extent),R=Math.ceil(M.width/c.pixelSizeX-.1),N=Math.ceil(M.height/c.pixelSizeY-.1),P=pe.fromJSON(c.spatialReference||c.extent.spatialReference),T=y[0].status==="fulfilled"?y[0].value?.data:null,C=T?.features?.length?lr.fromJSON(T):null,z=y[1].status==="fulfilled"?y[1].value?.data.colormap:null,K=z?.length?z:null,Le=y[2].status==="fulfilled"?y[2].value?.data.histograms:null,be=Le?.[0]?.counts?.length?Le:null,le=y[3].status==="fulfilled"?y[3].value?.data??{}:{},ee=y[4].status==="fulfilled"?y[4].value?.data.multidimensionalInfo:null,ue=ee?.variables?.length?ee:null;ue&&ue.variables.forEach(X=>{X.statistics?.length&&X.statistics.forEach(Re=>{Re.avg=Re.mean,Re.stddev=Re.standardDeviation}),X.dimensions?.forEach(Re=>{Re.name!=="StdTime"||Re.recurring||Re.unit||(Re.unit="ISO8601")})});const{defaultVariable:Se,serviceDataType:ae}=c;Se&&Se!==le.DefaultVariable&&(le.DefaultVariable=Se),ae?.includes("esriImageServiceDataTypeVector")&&!ae.includes(le.DataType)&&(le.DataType=ae.replace("esriImageServiceDataType",""));let A=c.noDataValue;c.noDataValues?.length&&c.noDataValues.some(X=>X!==A)&&(A=c.noDataValues);const zi=c.transposeInfo?new kr({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new F({x:c.extent.xmin,y:c.extent.ymax,spatialReference:P}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(R,N))/Math.LN2-8)),transposeInfo:c.transposeInfo}):void 0;return new nr({width:R,height:N,bandCount:c.bandCount,extent:ze.fromJSON(c.extent),spatialReference:P,pixelSize:new F({x:c.pixelSizeX,y:c.pixelSizeY,spatialReference:P}),pixelType:c.pixelType.toLowerCase(),statistics:I,attributeTable:C,colormap:K,histograms:be,keyProperties:le,noDataValue:A,multidimensionalInfo:ue,storageInfo:zi})}function Or(e,r,n){return Fi(e,{sourceJSON:r},n)}function Oa(e,r,n){return Fi(e,{rasterFunction:r},n)}function Li(e,r){e.attributeTable||(r.hasRasterAttributeTable=!1),e.histograms||(r.hasHistograms=!1),e.colormap||(r.hasColormap=!1),e.multidimensionalInfo||(r.hasMultidimensions=!1)}async function Ba(e,r,n){const t=H(e),i=k({...t?.query,f:"json"}),o=J(i,n),l=`${t?.path}/${r}/info`,u=S(`${l}`,o),p=S(`${l}/keyProperties`,o),c=await Promise.allSettled([u,p]),m=c[0].status==="fulfilled"?c[0].value.data:null,d=c[1].status==="fulfilled"?c[1].value.data:null;let f=null;m.statistics?.length&&(f=m.statistics.map(P=>({min:P[0],max:P[1],avg:P[2],stddev:P[3]})));const h=ze.fromJSON(m.extent),g=Math.ceil(h.width/m.pixelSizeX-.1),y=Math.ceil(h.height/m.pixelSizeY-.1),I=h.spatialReference,M=new F({x:m.pixelSizeX,y:m.pixelSizeY,spatialReference:I}),R=m.histograms?.length?m.histograms:null,N=new kr({origin:m.origin,blockWidth:m.blockWidth,blockHeight:m.blockHeight,firstPyramidLevel:m.firstPyramidLevel,maximumPyramidLevel:m.maxPyramidLevel});return new nr({width:g,height:y,bandCount:m.bandCount,extent:h,spatialReference:I,pixelSize:M,pixelType:m.pixelType.toLowerCase(),statistics:f,histograms:R,keyProperties:d,storageInfo:N})}const Ua=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),_a=Zi(Gi,{min:0,max:255});function Ha(e){const r=JSON.stringify(e),n=r.includes('"rasterFunctionDefinition":{'),t=n?r.match(/"type":"(.*?FunctionArguments")/gi):r.match(/"rasterFunction":"(.*?")/gi),i=t?.map(o=>n?o.slice(8,-18):o.slice(18,-1));return i?i.join("/"):null}const Va=e=>{let r=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new B({layer:this}))}readServiceSupportsMosaicRule(t,i){return this._isMosaicRuleSupported(i)}get _rasterFunctionNamesIndex(){const t=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.length<1||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.forEach(i=>{t.set(i.name.toLowerCase().replaceAll(/ /gi,"_"),i.name)}),t}readBandIds(t,i){if(Array.isArray(t)&&t.length>0&&t.every(o=>typeof o=="number"))return t}readCapabilities(t,i){return this._readCapabilities(i)}writeCompressionQuality(t,i,o){t!=null&&this.format!=="lerc"&&(i[o]=t)}writeCompressionTolerance(t,i,o){this.format==="lerc"&&t!=null&&(i[o]=t)}readDefaultMosaicRule(t,i){return this._serviceSupportsMosaicRule?ie.fromJSON(i):null}get fieldsIndex(){return this.fields?new Ts(this.fields):null}set format(t){t&&Ua.has(t.toLowerCase())&&this._set("format",t.toLowerCase())}readFormat(t,i){return i.serviceDataType==="esriImageServiceDataTypeVector-UV"||i.serviceDataType==="esriImageServiceDataTypeVector-MagDir"||this.pixelFilter!=null?"lerc":"jpgpng"}readMinScale(t,i){return i.minLOD!=null&&i.maxLOD!=null?t:0}readMaxScale(t,i){return i.minLOD!=null&&i.maxLOD!=null?t:0}set mosaicRule(t){let i=t;i?.mosaicMethod&&(i=ie.fromJSON({...i.toJSON(),mosaicMethod:i.mosaicMethod,mosaicOperation:i.mosaicOperation})),this._set("mosaicRule",i)}readMosaicRule(t,i){const o=t||i.mosaicRule;return o?ie.fromJSON(o):this._isMosaicRuleSupported(i)?ie.fromJSON(i):null}writeMosaicRule(t,i,o){const{mosaicRule:l}=this;this._isValidCustomizedMosaicRule(l)&&(i[o]=l.toJSON())}writeNoData(t,i,o){t!=null&&typeof t=="number"&&(i[o]=_a(t))}readObjectIdField(t,i){return t||(t=i.fields.find(o=>o.type==="esriFieldTypeOID"||o.type==="oid")?.name),t}get parsedUrl(){return ki(this.url)}readSourceType(t,i){return this._isMosaicDataset(i)?"mosaic-dataset":"raster-dataset"}get renderer(){const{activePresetRendererName:t,presetRenderers:i}=this;return t?i?.find(({name:o})=>o===t)?.renderer.clone():this.internalRenderer}set renderer(t){this.activePresetRendererName=null,this.internalRenderer=t}set internalRenderer(t){this.loaded&&(t=this._configRenderer(t)),this._set("internalRenderer",t)}readRenderer(t,i,o){const l=i?.layerDefinition?.drawingInfo?.renderer,u=Di(l,o);return u==null?null:(u.type==="vector-field"&&i.symbolTileSize&&!l.symbolTileSize&&(u.symbolTileSize=i.symbolTileSize),ni(u)||$t.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),u)}writeRenderer(t,i,o){i.layerDefinition=i.layerDefinition||{},i.layerDefinition.drawingInfo=i.layerDefinition.drawingInfo||{},i.layerDefinition.drawingInfo.renderer=t.toJSON(),t.type==="vector-field"&&(i.symbolTileSize=t.symbolTileSize)}get rasterFields(){const t=this.fields?.map(l=>l.clone())??[];t.push(ss()),this.sourceType==="mosaic-dataset"&&this.fields?.length&&t.push(ns()),this.version>=10.4&&this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.some(({name:l})=>l.toLowerCase()==="none")&&t.push(as()),this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.filter(({name:l})=>l.toLowerCase()!=="none").forEach(({name:l})=>t.push(os(l)));const{rasterInfo:i}=this;if(this._isVectorDataSet()){const l=i?.multidimensionalInfo?.variables[0].unit?.trim(),u=ls(l),p=us();t.push(u,p)}if(i?.multidimensionalInfo&&this.sourceType==="raster-dataset"){const l=ps(i.multidimensionalInfo);t.push(...l)}const o=i?.attributeTable;if(o!=null){const l=cs(o);t.push(...l)}return t}set rasterFunction(t){let i=t;i?.rasterFunction&&(i=j.fromJSON({...i.toJSON(),rasterFunction:i.rasterFunction,rasterFunctionArguments:i.rasterFunctionArguments})),this._set("rasterFunction",i)}readRasterFunction(t,i){const o=i.rasterFunctionInfos;return i.renderingRule||o?.length&&o[0].name!=="None"?this._isRFTJson(i.renderingRule)?j.fromJSON({rasterFunctionDefinition:i.renderingRule}):j.fromJSON(i.renderingRule||{rasterFunctionInfos:i.rasterFunctionInfos}):null}readSpatialReference(t,i){const o=t||i.extent.spatialReference;return o?pe.fromJSON(o):null}writePixelType(t,i,o){this.serviceRasterInfo!=null&&this.pixelType===this.serviceRasterInfo.pixelType||(i[o]=fe.toJSON(t))}readVersion(t,i){let o=i.currentVersion;return o||(o=i.hasOwnProperty("fields")||i.hasOwnProperty("timeInfo")?10:9.3),o}applyFilter(t){let i=t;return this.pixelFilter&&(i=this._clonePixelData(t),this.pixelFilter(i)),i}async applyRenderer(t,i){let o=t;const{renderer:l,symbolizer:u,pixelFilter:p,bandIds:c}=this;if(!this._isPicture()&&l&&u&&!p){const m=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(l.toJSON()),d=this._rasterJobHandler.instance;if(d){m&&(u.bind(),await d.updateSymbolizer(u,i),this._cachedRendererJson=l.toJSON());const f=await d.symbolize({bandIds:c,...t},i);o={extent:t.extent,pixelBlock:f}}else o={extent:t.extent,pixelBlock:u.symbolize({bandIds:c,...t})}}return o}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async calculateVolume(t,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsCalculateVolume)throw new b("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return t=D(t),this.mosaicRule&&t.mosaicRule==null&&(t.mosaicRule=this.mosaicRule),fa(this.url,t,this._getRequestOptions(i))}async computeAngles(t,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsComputeAngles)throw new b("imagery-layer:compute-angles","this operation is not supported on the input image service");return wa(this.url,t,this._getRequestOptions(i))}async computePixelSpaceLocations(t,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsComputePixelLocation)throw new b("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return Ia(this.url,t,this._getRequestOptions(i))}async computeHistograms(t,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsComputeHistograms)throw new b("imagery-layer:compute-histograms","this operation is not supported on the input image service");return t=D(t),this._applyMosaicAndRenderingRules(t),va(this.url,t,this._getRequestOptions(i))}async computeStatisticsHistograms(t,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsComputeStatisticsHistograms)throw new b("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return t=D(t),this._applyMosaicAndRenderingRules(t),Ma(this.url,t,this._getRequestOptions(i))}async measureHeight(t,i){const o=await this._fetchCapabilities(i?.signal);if(!(t.operationType==="base-and-top"?o.mensuration.supportsHeightFromBaseAndTop:t.operationType==="base-and-top-shadow"?o.mensuration.supportsHeightFromBaseAndTopShadow:o.mensuration.supportsHeightFromTopAndTopShadow))throw new b("imagery-layer:measure-height","this operation is not supported on the input image service");return t=D(t),this._applyMosaicRule(t),Sa(this.url,t,this._getRequestOptions(i))}async measureAreaAndPerimeter(t,i){const o=await this._fetchCapabilities(i?.signal);if(!(o.mensuration.supportsAreaAndPerimeter&&(!t.is3D||o.mensuration.supports3D)))throw new b("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return t=D(t),this._applyMosaicRule(t),Ra(this.url,t,this._getRequestOptions(i))}async measureDistanceAndAngle(t,i){const o=await this._fetchCapabilities(i?.signal);if(!(o.mensuration.supportsDistanceAndAngle&&(!t.is3D||o.mensuration.supports3D)))throw new b("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return t=D(t),this._applyMosaicRule(t),Aa(this.url,t,this._getRequestOptions(i))}async measurePointOrCentroid(t,i){const o=await this._fetchCapabilities(i?.signal);if(!(o.mensuration.supportsPointOrCentroid&&(!t.is3D||o.mensuration.supports3D)))throw new b("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return t=D(t),this._applyMosaicRule(t),Da(this.url,t,this._getRequestOptions(i))}async measureLengthFromImage(t,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsMeasureFromImage)throw new b("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if(t.geometry.type!=="polyline")throw new b("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return xa(this.url,t,this._getRequestOptions(i))}async measureAreaFromImage(t,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsMeasureFromImage)throw new b("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if(t.geometry.type!=="polygon")throw new b("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return ja(this.url,t,this._getRequestOptions(i))}getField(t){const{fieldsIndex:i}=this;return i?.get(t)}getFieldDomain(t,i){const o=this.getField(t);return o?o.domain:null}async fetchImage(t,i,o,l={}){if(t==null||i==null||o==null)throw new b("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const d=await this._generateRasterInfo(this.rasterFunction,{signal:l.signal});d&&(this.rasterInfo=d)}const u=this.getExportImageServiceParameters(t,i,o,l.timeExtent);if(u==null){if(l.requestAsImageElement&&this._canRequestImageElement(this.format)){const M=document.createElement("canvas");return M.width=i,M.height=o,l.returnImageBitmap?{imageBitmap:await Qr(M,`${n(this.parsedUrl)}/exportImage`,l.signal)}:{imageOrCanvasElement:M}}const{bandIds:d,rasterInfo:f}=this,h=(d?.length||f.bandCount)??0,g=i*o,y=f.pixelType,I=[];for(let M=0;M<h;M++)I.push(ce.createEmptyBand(y,g));return{pixelData:{pixelBlock:new ce({width:i,height:o,pixels:I,mask:new Uint8Array(g),pixelType:y}),extent:t}}}const p=!!l.requestAsImageElement&&!this.pixelFilter,c=p&&!!l.returnImageBitmap,m={imageServiceParameters:u,imageProps:{extent:t,width:i,height:o,format:this.format},requestAsImageElement:p,returnImageBitmap:c,signal:l.signal};return this._requestArrayBuffer(m)}fetchKeyProperties(t){return S(n(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?t?.rasterFunction:null})}).then(i=>i.data)}fetchRasterAttributeTable(t){return this.version<10.1?Promise.reject(new b("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):S(n(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?t?.rasterFunction:null})}).then(i=>lr.fromJSON(i.data))}getCatalogItemRasterInfo(t,i){const o={...i,query:this._getQueryParams()};return Ba(n(this.parsedUrl),t,o)}async getCatalogItemICSInfo(t,i){const{data:o}=await S(n(this.parsedUrl)+"/"+t+"/info/ics",{query:this._getQueryParams(),...i}),l=o?.ics;if(!l)return;let u=null;try{u=(await S(n(this.parsedUrl)+"/"+t+"/info",{query:this._getQueryParams(),...i})).data.extent}catch{}if(!u?.spatialReference)return{ics:l,icsToPixelTransform:null,icsExtent:null,northDirection:null};const p=this.version>=10.7?S(n(this.parsedUrl)+"/"+t+"/info/icstopixel",{query:this._getQueryParams(),...i}).then(A=>A.data).catch(()=>({})):{},c=u.spatialReference,m={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[u]}),inSR:tr(c),outSR:"0:"+t},d=S(n(this.parsedUrl)+"/project",{query:this._getQueryParams(m),...i}).then(A=>A.data).catch(()=>({})),f=5,h=(u.xmin+u.xmax)/2,g=(u.ymax-u.ymin)/(f+1),y=u.ymin+g,I=[];for(let A=0;A<f;A++)I.push({x:h,y:y+g*A});const M={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:I}),inSR:tr(c),outSR:"0:"+t},R=S(n(this.parsedUrl)+"/project",{query:this._getQueryParams(M),...i}).then(A=>A.data).catch(()=>({})),N=await Promise.all([p,d,R]);let P=N[0].ipxf;if(P==null){const A=l.geodataXform?.xf_0;A?.name?.toLowerCase()==="topup"&&A?.coefficients?.length===6&&(P={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:A.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const T=ze.fromJSON(N[1]?.geometries?.[0]);T&&(T.spatialReference=new pe({wkid:0,imageCoordinateSystem:l}));const C=N[2].geometries?N[2].geometries.filter(A=>A?.x!=null&&A.y!=null&&A.x!=="NaN"&&A.y!=="NaN"):[],z=C.length;if(z<3)return{ics:l,icsToPixelTransform:P,icsExtent:T,northDirection:null};let K=0,Le=0,be=0,le=0;for(let A=0;A<z;A++)K+=C[A].x,Le+=C[A].y,be+=C[A].x*C[A].x,le+=C[A].x*C[A].y;const ee=(z*le-K*Le)/(z*be-K*K);let ue=0;const Se=C[f-1].x>C[0].x,ae=C[f-1].y>C[0].y;return ee===1/0?ue=ae?90:270:ee===0?ue=Se?0:180:ee>0?ue=Se?180*Math.atan(ee)/Math.PI:180*Math.atan(ee)/Math.PI+180:ee<0&&(ue=ae?180+180*Math.atan(ee)/Math.PI:360+180*Math.atan(ee)/Math.PI),{ics:l,icsToPixelTransform:P,icsExtent:T,northDirection:ue}}async generateRasterInfo(t,i){t=_(j,t);const o={...i,query:this._getQueryParams()};if(!t||t.functionName?.toLowerCase()==="none"||this._isVectorFieldResampleFunction(t))return this.serviceRasterInfo??Or(n(this.parsedUrl),this.sourceJSON,o);const l=Ha(t);if(!l)throw new b("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[l])return this._functionRasterInfos[l];const u=Oa(n(this.parsedUrl),t,o);this._functionRasterInfos[l]=u;try{return await u}catch(p){throw this._functionRasterInfos[l]=null,p}}getExportImageServiceParameters(t,i,o,l){t=t.clone().shiftCentralMeridian();const u=ot(t.spatialReference,n(this.parsedUrl)),p=this.exportImageServiceParameters.toJSON(),{bandIds:c,noData:m}=p;let{renderingRule:d}=p;const f=this.rasterFunction?.rasterFunctionDefinition,h=this.renderer?.type,g=!h||h==="raster-stretch"||h==="raster-colormap"||h==="unique-value"||h==="class-breaks"||h==="raster-shaded-relief";if(c?.length&&this._hasRasterFunction(this.rasterFunction)&&!f&&g){const M={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:c}};if(d.rasterFunction==="Stretch")M.rasterFunctionArguments.Raster=d.rasterFunctionArguments.Raster,d.rasterFunctionArguments.Raster=M;else if(d.rasterFunction==="Colormap"){const R=d.rasterFunctionArguments.Raster;R?.rasterFunction==="Stretch"?(M.rasterFunctionArguments.Raster=R.rasterFunctionArguments.Raster,R.rasterFunctionArguments.Raster=M):(M.rasterFunctionArguments.Raster=R,d.rasterFunctionArguments.Raster=M)}else M.rasterFunctionArguments.Raster=d,d=M;p.bandIds=void 0}else p.bandIds=c?.join(",");Array.isArray(m)&&m.length>0&&(p.noData=m.join(","));const y=this._processMultidimensionalIntersection(null,l,this.exportImageServiceParameters.mosaicRule);if(y.isOutSide)return null;p.mosaicRule=y.mosaicRule!=null?JSON.stringify(y.mosaicRule):null,l=y.timeExtent,p.renderingRule=this._getRenderingRuleString(j.fromJSON(d));const I={};if(l!=null){const{start:M,end:R}=l.toJSON();M&&R&&M===R?I.time=""+M:M==null&&R==null||(I.time=`${M??"null"},${R??"null"}`)}return{bbox:t.xmin+","+t.ymin+","+t.xmax+","+t.ymax,bboxSR:u,imageSR:u,size:i+","+o,...p,...I}}async getSamples(t,i){if(!(await this._fetchCapabilities(i?.signal))?.operations.supportsGetSamples)throw new b("imagery-layer:get-samples","getSamples operation is not supported on the input image service");t=D(t);const{raster:o}=this;return o&&t.raster==null&&(t.raster=o),ba(this.url,t,this._getRequestOptions(i))}async identify(t,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsIdentify)throw new b("imagery-layer:identify","identify operation is not supported on the input image service");t=D(t),this.version<10.91&&t.geometry?.type==="extent"&&(t.geometry=bt.fromExtent(t.geometry));const o=this._processMultidimensionalIntersection(t.geometry,t.timeExtent,t.mosaicRule||this.mosaicRule);if(o.isOutSide)throw new b("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");t.timeExtent=o.timeExtent,t.mosaicRule=o.mosaicRule;const{raster:l,rasterFunction:u}=this;return u&&t.rasterFunction==null&&(t.rasterFunction=u),l&&t.raster==null&&(t.raster=l),Ci(this.url,t,this._getRequestOptions(i))}async imageToMap(t,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsImageToMap)throw new b("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return Na(n(this.parsedUrl),t,this._getRequestOptions(i))}async imageToMapMultiray(t,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsImageToMapMultiray)throw new b("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return Fa(n(this.parsedUrl),t,this._getRequestOptions(i))}async mapToImage(t,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsMapToImage)throw new b("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return La(n(this.parsedUrl),t,this._getRequestOptions(i))}async findImages(t,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsFindImages)throw new b("imagery-layer:find-images","findImages operation is not supported on the input image service");return za(n(this.parsedUrl),t,this._getRequestOptions(i))}async getImageUrl(t,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsGetImageUrl)throw new b("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return Pa(n(this.parsedUrl),t,this._getRequestOptions(i))}createQuery(){return new or({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}async queryBoundary(t,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsQueryBoundary)throw new b("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return t=t??{outSpatialReference:this.spatialReference},Ta(n(this.parsedUrl),t,this._getRequestOptions(i))}async queryRasters(t,i){return{query:t,requestOptions:i}=await this._prepareForQuery(t,i),Js(this.url,t,i)}async queryObjectIds(t,i){return{query:t,requestOptions:i}=await this._prepareForQuery(t,i),Es(this.url,t,i)}async queryGPSInfo(t,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsQueryGPSInfo)throw new b("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return t=t??{where:"1=1"},Ca(n(this.parsedUrl),t,this._getRequestOptions(i))}async queryRasterCount(t,i){return{query:t,requestOptions:i}=await this._prepareForQuery(t,i),ks(this.url,t,i)}async queryVisibleRasters(t,i){if(!t)throw new b("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:o,returnDomainValues:l,returnTopmostRaster:u,showNoDataRecords:p}=i||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let c=!1,m=null,d=null;const f=Ze.servicePixelValue.toLowerCase(),h=this._rasterFunctionNamesIndex;if(t.outFields!=null&&(c=t.outFields.some(T=>!T.toLowerCase().startsWith(f)),this.version>=10.4)){const T=t.outFields.filter(z=>z.toLowerCase().startsWith(f)&&z.length>f.length).map(z=>{const K=z.slice(f.length+1);return[this._updateRenderingRulesFunctionName(K,h),K]});m=T.map(z=>new j({functionName:z[0]})),d=T.map(z=>z[1]);const{rasterFunction:C}=this;m.length===0?C?.functionName?(m.push(C),d.push(C.functionName)):m=null:C?.functionName&&!m.some(z=>z.functionName===C.functionName)&&(m.push(C),d.push(C.functionName))}const g=t.outSpatialReference==null||t.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:y}=this;let I=t.timeExtent||this.timeExtent;if(y){const{isOutside:T,intersection:C}=ir(y,{geometry:t.geometry,timeExtent:t.timeExtent,multidimensionalDefinition:this.exportImageServiceParameters.mosaicRule?.multidimensionalDefinition});if(T)throw new b("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");C?.timeExtent!=null&&(I=C.timeExtent)}const M=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,I);let R=t.geometry;this.version<10.91&&R?.type==="extent"&&(R=bt.fromExtent(R));const N=this._getQueryParams({geometry:R,timeExtent:I,mosaicRule:M,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:m,pixelSize:o,returnCatalogItems:c,returnGeometry:g,raster:this.raster,maxItemCount:u?1:null});delete N.f;const P=new ji(N);try{await this._generateRasterInfo(this.rasterFunction);const T=await Ci(this.url,P,{signal:i?.signal,query:{...this.customParameters}}),C=t.outFields,z=T.value!=null&&T.value.toLowerCase().includes("nodata"),K=c&&!g&&T?.catalogItems?.features.length&&(p||!z),Le=this.multidimensionalInfo&&this.sourceType==="raster-dataset"?ms({rasterInfo:this.rasterInfo,multidimensionalDefinition:M?.multidimensionalDefinition,timeExtent:I,multidimensionalSubset:this.multidimensionalSubset}):null;if(!K)return this._processVisibleRastersResponse(T,{returnDomainValues:l,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:C,effectiveMultidimensionalDefinition:Le});const be=this.objectIdField||"ObjectId",le=T.catalogItems?.features??[],ee=le.map(ae=>ae.attributes?.[be]),ue=new or({objectIds:ee,returnGeometry:!0,outSpatialReference:t.outSpatialReference,outFields:[be]}),Se=await this.queryRasters(ue);return Se?.features?.length&&Se.features.forEach(ae=>{le.forEach(A=>{A.attributes[be]===ae.attributes[be]&&ae.geometry&&(A.geometry=ae.geometry.clone(),t.outSpatialReference!=null&&(A.geometry.spatialReference=t.outSpatialReference))})}),this._processVisibleRastersResponse(T,{returnDomainValues:l,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:C,effectiveMultidimensionalDefinition:Le})}catch{throw new b("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(t,i){const o=S(n(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:t}),signal:i}).then(p=>p.data?.statistics),l=S(n(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:t}),signal:i}).then(p=>p.data?.histograms),u=await Promise.all([o,l]);return u[0]&&u[0].forEach(p=>{p.avg=p.mean,p.stddev=p.standardDeviation}),{statistics:u[0]||null,histograms:u[1]||null}}async createFlowMesh(t,i){const o=this._rasterJobHandler.instance;return o?o.createFlowMesh(t,i):Ls(t.meshType,t.simulationSettings,t.flowData,i.signal!=null?i.signal:new AbortController().signal)}getMultidimensionalSubsetVariables(t){const i=t??this.serviceRasterInfo.multidimensionalInfo;return ds(this.multidimensionalSubset,i)}async _fetchService(t){await this._fetchServiceInfo(t),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const i=this.sourceJSON,o=this.serviceRasterInfo!=null?Promise.resolve(this.serviceRasterInfo):Or(n(this.parsedUrl),i,{signal:t,query:this._getQueryParams()}).then(p=>(this._set("serviceRasterInfo",p),this._set("multidimensionalInfo",p.multidimensionalInfo),Li(p,i),p)),l=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:t}):null,u=this._getRasterFunctionInfos();return Promise.all([o,l,u]).then(p=>{p[1]?this._set("rasterInfo",p[1]):this._set("rasterInfo",p[0]),p[2]&&this._set("rasterFunctionInfos",p[2]),this.internalRenderer&&!this._isSupportedRenderer(this.internalRenderer)&&(this._set("internalRenderer",null),$t.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("internalRenderer",this._configRenderer(this.renderer)),this.addHandles([Ji(()=>this.rasterFunction,m=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(m).then(d=>{d&&(this.rasterInfo=d)})})]);const{serviceRasterInfo:c}=this;c.multidimensionalInfo!=null&&this._updateMultidimensionalDefinition(c)})}_combineMosaicRuleWithTimeExtent(t,i){const o=this.timeInfo,{multidimensionalInfo:l}=this.serviceRasterInfo;if(t==null||l==null||i==null||o?.startField==null)return t;const{startField:u}=o,p=l.variables.some(y=>y.dimensions.some(I=>I.name===u))?u:"StdTime";if(t=t.clone(),this.sourceType==="mosaic-dataset")return t.multidimensionalDefinition=t.multidimensionalDefinition?.filter(y=>y.dimensionName!==p),this._cleanupMultidimensionalDefinition(t);t.multidimensionalDefinition=t.multidimensionalDefinition||[];const c=t.multidimensionalDefinition.filter(y=>y.dimensionName===p),m=i.start!=null?i.start.getTime():null,d=i.end!=null?i.end.getTime():null,f=m==null||d==null||m===d,h=f?[m||d]:[[m,d]],g=this.version>=10.8;if(c.length)c.forEach(y=>{y.dimensionName===p&&(g?(y.dimensionName=null,y.isSlice=!1,y.values=[]):(y.isSlice=f,y.values=h))});else if(!g){const y=t.multidimensionalDefinition.filter(I=>I.variableName!=null&&I.dimensionName==null);y.length?y.forEach(I=>{I.dimensionName=p,I.isSlice=f,I.values=h}):t.multidimensionalDefinition.push(new rr({variableName:"",dimensionName:p,isSlice:f,values:h}))}return this._cleanupMultidimensionalDefinition(t)}_cleanupMultidimensionalDefinition(t){return t==null?null:(t.multidimensionalDefinition&&(t.multidimensionalDefinition=t.multidimensionalDefinition.filter(i=>!(!i.variableName&&!i.dimensionName)),t.multidimensionalDefinition.length===0&&(t.multidimensionalDefinition=null)),this.sourceType!=="mosaic-dataset"&&t.multidimensionalDefinition==null?null:t)}async _prepareForQuery(t,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsQuery)throw new b("imagery-layer:query-rasters","query operation is not supported on the input image service");return t=t!=null?_(or,t):this.createQuery(),i=this._getRequestOptions(i),this.raster&&(i.query={...i.query,raster:this.raster}),{query:t,requestOptions:i}}async _initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const t=new ci;this._rasterJobHandler.connectionPromise=t.initialize().then(()=>{this._rasterJobHandler.instance=t},()=>{}),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(t){const{rasterInfo:i,rasterFunction:o}=this;return t.type==="unique-value"&&this._hasRasterFunction(o)&&i?.bandCount===1&&["u8","s8"].includes(i.pixelType)||i!=null&&t!=null&&bn(i).includes(t.type)}async _fetchCapabilities(t){return this.capabilities||await this._fetchServiceInfo(t),this.capabilities}async _fetchServiceInfo(t){let i=this.sourceJSON;if(!i){const{data:o,ssl:l}=await S(n(this.parsedUrl),{query:this._getQueryParams(),signal:t});i=o,this.sourceJSON=i,l&&(this.url=this.url.replace(/^http:/i,"https:"))}if(i.capabilities?.toLowerCase().split(",").map(o=>o.trim()).indexOf("tilesonly")>-1)throw new b("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(i,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(t){return t.serviceSourceType?t.serviceSourceType==="esriImageServiceSourceTypeMosaicDataset":t.fields?.length>0}_isMosaicRuleSupported(t){if(!t)return!1;const i=this._isMosaicDataset(t),o=t.currentVersion>=10.71&&t.hasMultidimensions&&!(t.fields?.length>1);return i||o}_isVectorFieldResampleFunction(t){if(t==null)return!1;const{functionName:i,functionArguments:o}=t,l=i?.toLowerCase()==="resample",u=o?.ResampleType||o?.resampleType;return l&&(u===7||u===10)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(t){const i=this._isPicture(),{rasterInfo:o}=this;if(!i&&!this.pixelFilter||this._isVectorDataSet()){const l=this.mosaicRule?.multidimensionalDefinition?.[0].variableName,u=wi({variableName:l,rasterFunctionName:this.rasterFunction?.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&o.bandCount>=3){const c=u?.bandIds??Sr(o);!c||o.bandCount===3&&c[0]===0&&c[1]===1&&c[2]===2||(this.bandIds=c)}t||(t=u?.renderer??Ii(o,{bandIds:this.bandIds,variableName:this.rasterFunction?null:l}));const p=Ri(t.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=p,this.symbolizer.rasterInfo=o):this.symbolizer=new As({rendererJSON:p,rasterInfo:o}),this.symbolizer.bind().success||(this.symbolizer=null)}return t}_clonePixelData(t){return t==null?t:{extent:t.extent&&t.extent.clone(),pixelBlock:t.pixelBlock!=null?t.pixelBlock.clone():null}}_getQueryParams(t){t?.renderingRule!=null&&typeof t.renderingRule!="string"&&(t.renderingRule=this._getRenderingRuleString(t.renderingRule));const{raster:i,viewId:o}=this;return{raster:i,viewId:o,f:"json",...t,...this.customParameters}}_getRequestOptions(t){return{...t,query:{...t?.query,...this.customParameters}}}_decodePixelBlock(t,i,o){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:t,options:i}):Jr(t,i,o)}async _getRasterFunctionInfos(t){const i=this.sourceJSON.rasterFunctionInfos;return this.loaded?i:i&&this.version>=10.3?i.length===1&&i[0].name.toLowerCase()==="none"?i:(await S(n(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:t})).data?.rasterFunctionInfos:null}_canRequestImageElement(t){return!this.pixelFilter&&(!t||t.includes("png"))}async _requestArrayBuffer(t){const{imageProps:i,requestAsImageElement:o,returnImageBitmap:l,signal:u}=t;if(o&&this._canRequestImageElement(i.format)){const g=`${n(this.parsedUrl)}/exportImage`,{data:y}=await S(g,{responseType:l?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...t.imageServiceParameters}),signal:u});return y instanceof Blob?{imageBitmap:await Qr(y,g,u),params:i}:{imageOrCanvasElement:y,params:i}}const p=this._initJobHandler(),c=S(n(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...t.imageServiceParameters}),signal:u}),m=(await Promise.all([c,p]))[0].data,d=i.format||"jpgpng";let f=d;if(f!=="bsq"&&f!=="bip"&&(f=xs(m)),!f)throw new b("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(m)));const h={signal:u};return{pixelData:{pixelBlock:await(d==="gif"||d==="bmp"||d.includes("png")&&(f==="png"||f==="jpg")?Jr(m,{useCanvas:!0,...i},h):this._decodePixelBlock(m,{width:i.width,height:i.height,planes:null,pixelType:null,noDataValue:null,format:d},h)),extent:i.extent},params:i}}_generateRasterInfo(t,i){return this.generateRasterInfo(t,i).catch(()=>null)}_isValidCustomizedMosaicRule(t){return t&&JSON.stringify(t.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())}_updateMultidimensionalDefinition(t){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let i=ys(t,{multidimensionalSubset:this.multidimensionalSubset});if(i!=null&&i.length>0){this.mosaicRule=this.mosaicRule||new ie;const o=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&this.rasterFunction.functionName?.toLowerCase()!=="none"&&i.forEach(l=>l.variableName=""),i=i.filter(({variableName:l,dimensionName:u})=>l&&l!=="*"||u),!o?.length&&i.length&&(this.mosaicRule.multidimensionalDefinition=i)}}_processVisibleRastersResponse(t,i){i=i||{};const o=t.value,{templateRRFunctionNames:l,showNoDataRecords:u,returnDomainValues:p,templateFields:c}=i,m=t.processedValues;let d=t.catalogItems?.features,f=t.properties?.Values?.map(N=>N.replaceAll(/ /gi,", "))||[];const h=this.objectIdField||"ObjectId",g=typeof o=="string"&&o.toLowerCase().includes("nodata"),y=[];if(o&&!d&&!g){const N={};N[h]=0,f=[o],d=[new Ur({geometry:this.fullExtent,attributes:N})],this.multidimensionalInfo&&this.sourceType==="raster-dataset"&&hs(this.rasterFields,N,i.effectiveMultidimensionalDefinition)}if(!d)return[];this._updateResponseFieldNames(d,c),g&&!u&&(d=[]);const{itemPixelValue:I,servicePixelValue:M}=Ze,R=this.rasterFields.some(N=>N.name===I);for(let N=0;N<d.length;N++){const P=d[N];if(o!=null){const T=f[N],C=this.rasterFunction&&m&&m.length>0&&l&&l.length>0&&l.includes(this.rasterFunction.functionName)?m[l.indexOf(this.rasterFunction.functionName)]:o;if(T.toLowerCase()==="nodata"&&!u)continue;R&&(P.attributes[I]=T),P.attributes[M]=C,this._updateFeatureWithMagDirValues(P,T);const z=this.fields&&this.fields.length>0;let K=this.rasterFunction&&this.serviceRasterInfo.attributeTable!=null?z?T:o:C;this.rasterFunction||(K=z?T:o),this._updateFeatureWithRasterAttributeTableValues(P,K)}if(P.sourceLayer=P.layer=this,p&&this._updateFeatureWithDomainValues(P),l&&m&&l.length===m.length)for(let T=0;T<l.length;T++){const C=`${Ze.servicePixelValue}.${l[T]}`;P.attributes[C]=m[T]}y.push(d[N])}return y}_processMultidimensionalIntersection(t,i,o){const{multidimensionalSubset:l}=this;if(!l)return{isOutSide:!1,timeExtent:i,mosaicRule:o=this._combineMosaicRuleWithTimeExtent(o,i)};if(l){const{isOutside:u,intersection:p}=ir(l,{geometry:t,timeExtent:i});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null};p?.timeExtent!=null&&(i=p.timeExtent)}if(o=this._combineMosaicRuleWithTimeExtent(o,i),o?.multidimensionalDefinition){const{isOutside:u}=ir(l,{multidimensionalDefinition:o.multidimensionalDefinition});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:i,mosaicRule:o}}_updateFeatureWithRasterAttributeTableValues(t,i){const o=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(o==null)return;const{features:l,fields:u}=o,p=u.map(m=>m.name).find(m=>m.toLowerCase()==="value");if(!p)return;const c=l.filter(m=>m.attributes[p]===(i!=null?parseInt(i,10):null));c&&c[0]&&u.forEach(m=>{const d=gs+m.name;t.attributes[d]=c[0].attributes[m.name]})}_updateFeatureWithMagDirValues(t,i){if(!this._isVectorDataSet())return;const o=i.split(/,\s*/).map(m=>parseFloat(m)),l=o.map(m=>[m]),u=o.map(m=>({minValue:m,maxValue:m,noDataValue:null})),p=new ce({height:1,width:1,pixelType:"f32",pixels:l,statistics:u});this.pixelFilter!=null&&this.pixelFilter({pixelBlock:p,extent:new ze(0,0,0,0,this.spatialReference)});const c=this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"?[p.pixels[0][0],p.pixels[1][0]]:Ps([p.pixels[0][0],p.pixels[1][0]]);t.attributes[Ze.magnitude]=c[0],t.attributes[Ze.direction]=c[1]}_updateFeatureWithDomainValues(t){(this.fields&&this.fields.filter(o=>o.domain&&o.domain.type==="coded-value"))?.forEach(o=>{const l=t.attributes[o.name];if(l!=null){const u=o.domain.codedValues.find(p=>p.code===l);u&&(t.attributes[o.name]=u.name)}})}_updateResponseFieldNames(t,i){if(!i||i.length<1)return;const o=this.fieldsIndex;o!=null&&t.forEach(l=>{if(l?.attributes)for(const u of i){const p=o.get(u)?.name;p&&p!==u&&(l.attributes[u]=l.attributes[p],delete l.attributes[p])}})}_getRenderingRuleString(t){if(t){let i=t.toJSON();return i=i.rasterFunctionDefinition??i,(i.thumbnail||i.thumbnailEx)&&(i.thumbnail=i.thumbnailEx=null),JSON.stringify(i)}return null}_hasRasterFunction(t){return t?.functionName!=null&&t.functionName.toLowerCase()!=="none"}_updateRenderingRulesFunctionName(t,i){if(!t||t.length<1)return;if(t==="Raw")return t.replace("Raw","None");const o=t.toLowerCase().replaceAll(/ /gi,"_");return i.has(o)?i.get(o):t}_isRFTJson(t){return t?.name&&t.arguments&&t.function&&t.hasOwnProperty("functionType")}_isVectorDataSet(){return this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"}_applyMosaicAndRenderingRules(t){const{raster:i,mosaicRule:o,rasterFunction:l}=this;l&&t.rasterFunction==null&&(t.rasterFunction=l),o&&t.mosaicRule==null&&(t.mosaicRule=o),i&&t.raster==null&&(t.raster=i)}_applyMosaicRule(t){const{raster:i,mosaicRule:o}=this;o&&t.mosaicRule==null&&(t.mosaicRule=o),i&&t.raster==null&&(t.raster=i)}_readCapabilities(t){const i=t.capabilities?t.capabilities.toLowerCase().split(",").map(R=>R.trim()):["image","catalog"],{currentVersion:o,advancedQueryCapabilities:l,maxRecordCount:u}=t,p=i.includes("image"),c=t.serviceDataType==="esriImageServiceDataTypeElevation",m=!(!t.spatialReference&&!t.extent?.spatialReference),d=i.includes("edit"),f=i.includes("mensuration")&&m,h=t.mensurationCapabilities==null?[]:t.mensurationCapabilities.toLowerCase().split(",").map(R=>R.trim()),g=f&&h.includes("basic"),y=this._isMosaicDataset(t)&&i.includes("catalog"),I=i.includes("download"),M=o>=10.7&&c||o>=11.4&&(c||f&&h.includes("3d"));return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:p,supportsExportImage:p,supportsIdentify:p,supportsImageToMap:o>=11.2&&y,supportsImageToMapMultiray:o>=11.2&&y,supportsMapToImage:o>=11.2&&y,supportsFindImages:o>=11.2&&y,supportsGetImageUrl:o>=11.3&&I,supportsMeasure:f,supportsMeasureFromImage:o>=11.2,supportsDownload:I,supportsQuery:y&&t.fields&&t.fields.length>0,supportsGetSamples:o>=10.2&&p,supportsProject:o>=10.3&&p,supportsComputeStatisticsHistograms:o>=10.4&&p,supportsQueryBoundary:o>=10.6&&p,supportsCalculateVolume:M,supportsComputePixelLocation:o>=10.7&&y,supportsComputeAngles:o>=10.91,supportsQueryGPSInfo:o>=11.2&&y,supportsAdd:d,supportsDelete:d,supportsEditing:d,supportsUpdate:d,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryBins:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:u,maxRecordCountFactor:void 0,supportsStatistics:!!l?.supportsStatistics,supportsOrderBy:!!l?.supportsOrderBy,supportsDistinct:!!l?.supportsDistinct,supportsPagination:!!l?.supportsPagination,supportsStandardizedQueriesOnly:!!l?.useStandardizedQueries,supportsPercentileStatistics:!!l?.supportsPercentileStatistics,supportsCentroid:!!l?.supportsReturningGeometryCentroid,supportsCurrentUser:!1,supportsDistance:!!l?.supportsQueryWithDistance,supportsExtent:!!l?.supportsReturningQueryExtent,supportsGeometryProperties:!!l?.supportsReturningGeometryProperties,supportsHavingClause:!!l?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsReturnMesh:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!l?.supportsDefaultSR,supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0,supportsTrueCurve:!1},mensuration:{supportsDistanceAndAngle:g,supportsAreaAndPerimeter:g,supportsPointOrCentroid:g,supportsHeightFromBaseAndTop:f&&h.includes("base-top height"),supportsHeightFromBaseAndTopShadow:f&&h.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:f&&h.includes("top-top shadow height"),supports3D:f&&h.includes("3d")}}}};function n(t){return t?.path??""}return s([a({clonable:!1})],r.prototype,"_functionRasterInfos",void 0),s([a({clonable:!1})],r.prototype,"_rasterJobHandler",void 0),s([a({clonable:!1})],r.prototype,"_cachedRendererJson",void 0),s([a({readOnly:!0})],r.prototype,"_serviceSupportsMosaicRule",void 0),s([L("_serviceSupportsMosaicRule",["currentVersion","fields"])],r.prototype,"readServiceSupportsMosaicRule",null),s([a({readOnly:!0})],r.prototype,"_rasterFunctionNamesIndex",null),s([a()],r.prototype,"adjustAspectRatio",void 0),s([a({type:[Y],json:{write:!0}})],r.prototype,"bandIds",void 0),s([L("bandIds")],r.prototype,"readBandIds",null),s([a({readOnly:!0,json:{read:!1}})],r.prototype,"capabilities",void 0),s([L("service","capabilities",["capabilities","currentVersion","serviceDataType"])],r.prototype,"readCapabilities",null),s([a({type:Number})],r.prototype,"compressionQuality",void 0),s([x("compressionQuality")],r.prototype,"writeCompressionQuality",null),s([a({type:Number})],r.prototype,"compressionTolerance",void 0),s([x("compressionTolerance")],r.prototype,"writeCompressionTolerance",null),s([a({json:{read:{source:"copyrightText"}}})],r.prototype,"copyright",void 0),s([a({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],r.prototype,"defaultMosaicRule",void 0),s([L("defaultMosaicRule",["defaultMosaicMethod"])],r.prototype,"readDefaultMosaicRule",null),s([a({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],r.prototype,"definitionExpression",void 0),s([a({readOnly:!0,constructOnly:!0})],r.prototype,"exportImageServiceParameters",void 0),s([a()],r.prototype,"rasterInfo",void 0),s([a({readOnly:!0,type:[Wr]})],r.prototype,"fields",void 0),s([a({readOnly:!0})],r.prototype,"fieldsIndex",null),s([a({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],r.prototype,"format",null),s([L("service","format",["serviceDataType"])],r.prototype,"readFormat",null),s([a({type:ze})],r.prototype,"fullExtent",void 0),s([a({readOnly:!0})],r.prototype,"hasMultidimensions",void 0),s([a({json:{read:{source:"maxImageHeight"}}})],r.prototype,"imageMaxHeight",void 0),s([a({json:{read:{source:"maxImageWidth"}}})],r.prototype,"imageMaxWidth",void 0),s([a({type:String,json:{type:Be.jsonValues,read:Be.read,write:Be.write}})],r.prototype,"interpolation",void 0),s([a()],r.prototype,"minScale",void 0),s([L("service","minScale")],r.prototype,"readMinScale",null),s([a()],r.prototype,"maxScale",void 0),s([L("service","maxScale")],r.prototype,"readMaxScale",null),s([a({type:ie})],r.prototype,"mosaicRule",null),s([L("mosaicRule",["mosaicRule","defaultMosaicMethod"])],r.prototype,"readMosaicRule",null),s([x("mosaicRule")],r.prototype,"writeMosaicRule",null),s([a()],r.prototype,"multidimensionalInfo",void 0),s([a({type:pi,json:{write:!0}})],r.prototype,"multidimensionalSubset",void 0),s([a({json:{type:Y}})],r.prototype,"noData",void 0),s([x("noData")],r.prototype,"writeNoData",null),s([a({type:String,json:{type:ut.jsonValues,read:ut.read,write:ut.write}})],r.prototype,"noDataInterpretation",void 0),s([a({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],r.prototype,"objectIdField",void 0),s([L("objectIdField")],r.prototype,"readObjectIdField",null),s([a({readOnly:!0})],r.prototype,"geometryType",void 0),s([a({})],r.prototype,"typeIdField",void 0),s([a({})],r.prototype,"types",void 0),s([a({readOnly:!0})],r.prototype,"parsedUrl",null),s([a({type:Function})],r.prototype,"pixelFilter",void 0),s([a()],r.prototype,"raster",void 0),s([a({readOnly:!0})],r.prototype,"sourceType",void 0),s([L("sourceType",["serviceSourceType","fields"])],r.prototype,"readSourceType",null),s([a()],r.prototype,"viewId",void 0),s([a()],r.prototype,"renderer",null),s([a({types:yt,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:ht,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:t=>({enabled:t&&t.type!=="vector-field"&&t.type!=="flow"})}}}}})],r.prototype,"internalRenderer",null),s([L("internalRenderer")],r.prototype,"readRenderer",null),s([x("internalRenderer")],r.prototype,"writeRenderer",null),s([a({clonable:!1})],r.prototype,"symbolizer",void 0),s([a(Ki)],r.prototype,"opacity",void 0),s([a({readOnly:!0})],r.prototype,"rasterFields",null),s([a({constructOnly:!0})],r.prototype,"rasterFunctionInfos",void 0),s([a({type:j,json:{name:"renderingRule"}})],r.prototype,"rasterFunction",null),s([L("rasterFunction",["renderingRule","rasterFunctionInfos"])],r.prototype,"readRasterFunction",null),s([a({readOnly:!0})],r.prototype,"serviceDataType",void 0),s([a({readOnly:!0,type:pe})],r.prototype,"spatialReference",void 0),s([L("spatialReference",["spatialReference","extent"])],r.prototype,"readSpatialReference",null),s([a({type:fe.apiValues,json:{read:fe.read,type:fe.jsonValues}})],r.prototype,"pixelType",void 0),s([x("pixelType")],r.prototype,"writePixelType",null),s([a({constructOnly:!0,type:nr})],r.prototype,"serviceRasterInfo",void 0),s([a()],r.prototype,"sourceJSON",void 0),s([a(Xi)],r.prototype,"url",void 0),s([a({readOnly:!0})],r.prototype,"version",void 0),s([L("version",["currentVersion","fields","timeInfo"])],r.prototype,"readVersion",null),r=s([w("esri.layers.mixins.ArcGISImageService")],r),r};let Je=class extends ge.ClonableMixin(v){constructor(e){super(e),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};s([a({type:String,json:{write:{isRequired:!0}}})],Je.prototype,"name",void 0),s([a({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),Pe({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],Je.prototype,"method",void 0),s([a({type:String,json:{write:{isRequired:!0}}})],Je.prototype,"value",void 0),s([a({type:[Y],json:{write:{isRequired:!0}}})],Je.prototype,"bandIds",void 0),s([a({types:yt,json:{write:!0,origins:{"web-scene":{types:ht,write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="flow"})}}}}})],Je.prototype,"renderer",void 0),Je=s([w("esri.renderers.support.RasterPresetRenderer")],Je);const Ea=Je,Pi=e=>{let r=class extends e{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return s([a({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],r.prototype,"activePresetRendererName",void 0),s([a({type:[Ea],json:{name:"layerDefinition.presetRenderers",write:!0}})],r.prototype,"presetRenderers",void 0),r=s([w("esri.layers.mixins.RasterPresetRendererMixin")],r),r};let ne=class extends Gs(Xs(qs(Yi($i(Pi(Va(Ks(Ws(Zs(es(ge.ClonableMixin(is)))))))))))){constructor(...e){super(...e),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=qi(async(r,n,t)=>{const{save:i,saveAs:o}=await import("./imageryUtils-BCPb5mXs.js");switch(r){case Tt.SAVE:return i(this,n);case Tt.SAVE_AS:return o(this,t,n)}})}normalizeCtorArgs(e,r){return typeof e=="string"?{url:e,...r}:e}load(e){const r=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(Wi).then(()=>this._fetchService(r))),Promise.resolve(this)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(e){this._set("legendEnabled",e)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(e){this._set("listMode",e)}writeOperationalLayerType(e,r,n){const t=this.renderer?.type==="vector-field";r[n]=t?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){return!(!this.raster||!this.url?.toLowerCase().includes("/rasterrendering/imageserver"))}createPopupTemplate(e){const{rasterFields:r}=this,n=new Set,t=Ze.itemPixelValue.toLowerCase(),i=this.sourceType==="raster-dataset",o=ws.toLowerCase(),l=`${Ze.servicePixelValue.toLowerCase()}.`;for(const c of r){const m=c.name.toLowerCase();m===t||m.startsWith(l)||i&&m.startsWith(o)||n.add(c.name)}const u=Qs({fields:r,title:this.title},{...e,visibleFieldNames:n}),{rasterInfo:p}=this;return u?.fieldInfos&&p&&fs(u.fieldInfos,p),u}queryFeatures(e,r){return this.queryRasters(e,r).then(n=>{if(n?.features)for(const t of n.features)t.layer=t.sourceLayer=this;return n})}queryFeatureCount(e,r){return this.queryRasterCount(e,r)}redraw(){this.emit("redraw")}async save(e){return this._debouncedSaveOperations(Tt.SAVE,e)}async saveAs(e,r){return this._debouncedSaveOperations(Tt.SAVE_AS,r,e)}serviceSupportsSpatialReference(e){return Ys(this,e)}write(e,r){if(!this._isPreviewLayer)return super.write(e,r);if(r?.messages){const n=`${r.origin}/${r.layerContainerType||"operational-layers"}`;r.messages.push(new b("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${n}'`,{layer:this}))}return null}};s([a(ts)],ne.prototype,"legendEnabled",null),s([a({type:["show","hide"]})],ne.prototype,"listMode",null),s([a({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],ne.prototype,"isReference",void 0),s([a({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],ne.prototype,"operationalLayerType",void 0),s([x("web-map","operationalLayerType")],ne.prototype,"writeOperationalLayerType",null),s([a(rs)],ne.prototype,"popupEnabled",void 0),s([a({type:Qi,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],ne.prototype,"popupTemplate",void 0),s([a({readOnly:!0})],ne.prototype,"defaultPopupTemplate",null),s([a({readOnly:!0,json:{read:!1}})],ne.prototype,"type",void 0),s([a({readOnly:!0})],ne.prototype,"_isPreviewLayer",null),ne=s([w("esri.layers.ImageryLayer")],ne);const ka=ne,Ja=Object.freeze(Object.defineProperty({__proto__:null,default:ka},Symbol.toStringTag,{value:"Module"}));export{Sn as E,Ja as I,wi as L,Sr as U,vi as W,Di as a,Li as b,pi as c,Ri as e,Or as f,xi as g,yt as l,Pi as o,ht as p,Ii as q,ci as t,j as w,Rn as z};
