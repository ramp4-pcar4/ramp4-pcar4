import{e as St}from"./deduplicate-DZCyc4JG.js";import{H as L}from"./InterleavedLayout-DcHoXu73.js";import{e as c}from"./VertexAttribute-DFC3a3eR.js";import{t as H}from"./glUtil-n1JOrdV3.js";import{a9 as T,Y,c4 as At,aV as st,gY as Et}from"./main-DnzmeE4U.js";import{p as Tt,o as k,s as at,P as q,K as wt,_ as it,c as rt,A as ct,u as vt}from"./vec32-BuqRmYBM.js";import{s as G}from"./Normals-BP6u0Eou.js";const lt=L().vec3f(c.POSITION).u16(c.COMPONENTINDEX).freeze(),Rt=L().vec2u8(c.SIDENESS).freeze();H(Rt);const J=L().vec3f(c.POSITION0).vec3f(c.POSITION1).vec2i16(c.NORMALCOMPRESSED).u16(c.COMPONENTINDEX).u8(c.VARIANTOFFSET,{glNormalized:!0}).u8(c.VARIANTSTROKE).u8(c.VARIANTEXTENSION,{glNormalized:!0}).freeze(),j=L().vec3f(c.POSITION0).vec3f(c.POSITION1).vec2i16(c.NORMALCOMPRESSED).vec2i16(c.NORMAL2COMPRESSED).u16(c.COMPONENTINDEX).u8(c.VARIANTOFFSET,{glNormalized:!0}).u8(c.VARIANTSTROKE).u8(c.VARIANTEXTENSION,{glNormalized:!0}).freeze();c.POSITION0,c.POSITION1,c.COMPONENTINDEX,c.VARIANTOFFSET,c.VARIANTSTROKE,c.VARIANTEXTENSION,c.NORMALCOMPRESSED,c.NORMAL2COMPRESSED,c.SIDENESS;class yt{constructor(){this.position0=T(),this.position1=T(),this.faceNormal0=T(),this.faceNormal1=T(),this.componentIndex=0,this.cosAngle=0}}const z=-1;function ft(t,n,s){const a=t.vertices.position,r=t.vertices.componentIndex,f=N.position0,h=N.position1,I=N.faceNormal0,S=N.faceNormal1,{edges:i,normals:p}=Dt(t),m=i.length/4,A=n.allocate(m);let V=0;const _=m,w=s?.allocate(_);let b=0,e=0,o=0;X.length=0;for(let g=0;g<m;++g){const R=4*g;a.getVec(i.data[R],f),a.getVec(i.data[R+1],h);const C=X.pushNew();C.index=4*g,C.length=Tt(f,h)}X.sort((g,R)=>R.length-g.length);const u=new Array,l=new Array;X.forAll(({length:g,index:R})=>{const C=i.data[R],Ot=i.data[R+1],et=i.data[R+2],nt=i.data[R+3],ot=nt===z;if(a.getVec(C,f),a.getVec(Ot,h),ot){const E=3*et;k(I,p.data[E],p.data[E+1],p.data[E+2]),at(S,I),N.componentIndex=r.get(C),N.cosAngle=q(I,S)}else{let E=3*et;if(k(I,p.data[E],p.data[E+1],p.data[E+2]),E=3*nt,k(S,p.data[E],p.data[E+1],p.data[E+2]),N.componentIndex=r.get(C),N.cosAngle=q(I,S),Mt(N,xt))return;N.cosAngle<-.9999&&at(S,I)}e+=g,o++,ot||Pt(N,Bt)?(n.write(A,V++,N),u.push(g)):Vt(N,pt)&&(w&&s&&s.write(w,b++,N),l.push(g))});const O=new Float32Array(u.reverse()),v=new Float32Array(l.reverse()),y=w&&s?{instancesData:w.slice(0,b),lodInfo:{lengths:v}}:void 0;return{regular:{instancesData:A.slice(0,V),lodInfo:{lengths:O}},silhouette:y,averageEdgeLength:e/o}}function Pt(t,n){return t.cosAngle<n}function Mt(t,n){return t.cosAngle>n}function Vt(t,n){const s=At(t.cosAngle);return wt(ut,t.position1,t.position0),s*(q(it(Lt,t.faceNormal0,t.faceNormal1),ut)>0?-1:1)>n}function Dt(t){const n=t.faces.length/3,s=t.faces,a=t.neighbors,r=t.vertices.position;d.length=Q.length=0;for(let f=0;f<n;f++){const h=3*f,I=a[h],S=a[h+1],i=a[h+2],p=s[h],m=s[h+1],A=s[h+2];r.getVec(p,D),r.getVec(m,W),r.getVec(A,U),rt(W,W,D),rt(U,U,D),it(D,W,U),ct(D,D),Q.pushArray(D),(I===z||p<m)&&(d.push(p),d.push(m),d.push(f),d.push(I)),(S===z||m<A)&&(d.push(m),d.push(A),d.push(f),d.push(S)),(i===z||A<p)&&(d.push(A),d.push(p),d.push(f),d.push(i))}return{edges:d,normals:Q}}class Ct{constructor(){this.index=0,this.length=0}}const X=new Y({allocator:t=>t||new Ct,deallocator:null}),d=new Y({deallocator:null}),Q=new Y({deallocator:null}),N=new yt,Lt=T(),ut=T(),D=T(),W=T(),U=T(),pt=st(4),xt=Math.cos(pt),Ft=st(35),Bt=Math.cos(Ft);function gt(t,n,s){const a=n/3,r=new Uint32Array(s+1),f=new Uint32Array(s+1),h=(e,o)=>{e<o?r[e+1]++:f[o+1]++};for(let e=0;e<a;e++){const o=t[3*e],u=t[3*e+1],l=t[3*e+2];h(o,u),h(u,l),h(l,o)}let I=0,S=0;for(let e=0;e<s;e++){const o=r[e+1],u=f[e+1];r[e+1]=I,f[e+1]=S,I+=o,S+=u}const i=new Uint32Array(6*a),p=r[s],m=(e,o,u)=>{if(e<o){const l=r[e+1]++;i[2*l]=o,i[2*l+1]=u}else{const l=f[o+1]++;i[2*p+2*l]=e,i[2*p+2*l+1]=u}};for(let e=0;e<a;e++){const o=t[3*e],u=t[3*e+1],l=t[3*e+2];m(o,u,e),m(u,l,e),m(l,o,e)}const A=(e,o)=>{const u=2*e,l=o-e;for(let O=1;O<l;O++){const v=i[u+2*O],y=i[u+2*O+1];let g=O-1;for(;g>=0&&i[u+2*g]>v;g--)i[u+2*g+2]=i[u+2*g],i[u+2*g+3]=i[u+2*g+1];i[u+2*g+2]=v,i[u+2*g+3]=y}};for(let e=0;e<s;e++)A(r[e],r[e+1]),A(p+f[e],p+f[e+1]);const V=new Int32Array(3*a),_=(e,o)=>e===t[3*o]?0:e===t[3*o+1]?1:e===t[3*o+2]?2:-1,w=(e,o)=>{const u=_(e,o);V[3*o+u]=-1},b=(e,o,u,l)=>{const O=_(e,o);V[3*o+O]=l;const v=_(u,l);V[3*l+v]=o};for(let e=0;e<s;e++){let o=r[e];const u=r[e+1];let l=f[e];const O=f[e+1];for(;o<u&&l<O;){const v=i[2*o],y=i[2*p+2*l];v===y?(b(e,i[2*o+1],y,i[2*p+2*l+1]),o++,l++):v<y?(w(e,i[2*o+1]),o++):(w(y,i[2*p+2*l+1]),l++)}for(;o<u;)w(e,i[2*o+1]),o++;for(;l<O;)w(i[2*p+2*l],i[2*p+2*l+1]),l++}return V}const Z=.7;let ht=class{updateSettings(t){this.settings=t,this._edgeHashFunction=t.reducedPrecision?bt:_t}write(t,n,s){K.seed=this._edgeHashFunction(s);const a=K.getIntRange(0,255),r=K.getIntRange(0,this.settings.variants-1),f=K.getFloat(),h=255*(.5*zt(-(1-Math.min(f/Z,1))+Math.max(0,f-Z)/(1-Z),1.2)+.5);t.position0.setVec(n,s.position0),t.position1.setVec(n,s.position1),t.componentIndex.set(n,s.componentIndex),t.variantOffset.set(n,a),t.variantStroke.set(n,r),t.variantExtension.set(n,h)}};const P=new Float32Array(6),M=new Uint32Array(P.buffer),x=new Uint32Array(1);function _t(t){return P[0]=t.position0[0],P[1]=t.position0[1],P[2]=t.position0[2],P[3]=t.position1[0],P[4]=t.position1[1],P[5]=t.position1[2],x[0]=31*(31*(31*(31*(31*(166811+M[0])+M[1])+M[2])+M[3])+M[4])+M[5],x[0]}function bt(t){const n=P;n[0]=F(t.position0[0]),n[1]=F(t.position0[1]),n[2]=F(t.position0[2]),n[3]=F(t.position1[0]),n[4]=F(t.position1[1]),n[5]=F(t.position1[2]),x[0]=5381;for(let s=0;s<M.length;s++)x[0]=31*x[0]+M[s];return x[0]}const dt=1e4;function F(t){return Math.round(t*dt)/dt}function zt(t,n){return Math.abs(t)**n*Math.sign(t)}class ${constructor(){this._commonWriter=new ht}updateSettings(n){this._commonWriter.updateSettings(n)}allocate(n){return J.createBuffer(n)}write(n,s,a){this._commonWriter.write(n,s,a),vt(B,a.faceNormal0,a.faceNormal1),ct(B,B);const{typedBuffer:r,typedBufferStride:f}=n.normalCompressed;G(r,s,B[0],B[1],B[2],f)}}$.Layout=J,$.glLayout=H(J,1);class tt{constructor(){this._commonWriter=new ht}updateSettings(n){this._commonWriter.updateSettings(n)}allocate(n){return j.createBuffer(n)}write(n,s,a){this._commonWriter.write(n,s,a);{const{typedBuffer:r,typedBufferStride:f}=n.normalCompressed;G(r,s,a.faceNormal0[0],a.faceNormal0[1],a.faceNormal0[2],f)}{const{typedBuffer:r,typedBufferStride:f}=n.normal2Compressed;G(r,s,a.faceNormal1[0],a.faceNormal1[1],a.faceNormal1[2],f)}}}tt.Layout=j,tt.glLayout=H(j,1);const B=T(),K=new Et;function Xt(t){const n=Nt(t.data,t.skipDeduplicate,t.indices,t.indicesLength);return mt.updateSettings(t.writerSettings),It.updateSettings(t.writerSettings),ft(n,mt,It)}function Nt(t,n,s,a){if(n){const h=gt(s,a,t.count);return new Wt(s,a,h,t)}const r=St(t.buffer,t.stride/4,{originalIndices:s,originalIndicesLength:a}),f=gt(r.indices,a,r.uniqueCount);return{faces:r.indices,facesLength:r.indices.length,neighbors:f,vertices:lt.createView(r.buffer)}}class Wt{constructor(n,s,a,r){this.faces=n,this.facesLength=s,this.neighbors=a,this.vertices=r}}const mt=new $,It=new tt,Ut=L().vec3f(c.POSITION0).vec3f(c.POSITION1),Kt=L().vec3f(c.POSITION0).vec3f(c.POSITION1).u16(c.COMPONENTINDEX);export{lt as E,Ut as d,Xt as f,Kt as m,ft as p,Nt as u};
