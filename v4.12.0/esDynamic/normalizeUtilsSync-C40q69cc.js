import{ca as X,bQ as z,G,ab as J,as as N,av as Q,cb as R,at as j,au as S,cc as q,cd as B}from"./main-DnzmeE4U.js";import{r as T,s as D,i as p}from"./normalizeUtils-b-vZURob.js";function E(s){return w(s,!0)}function F(s){return w(s,!1)}function w(s,i){if(s==null)return null;const n=s.spatialReference,t=z(n),e=G.isSerializable(s)?s.toJSON():s;if(!t)return e;const h=J(n)?102100:4326,u=T[h].maxX,_=T[h].minX;if(N(e))return L(e,u,_);if(Q(e))return e.points=e.points.map(o=>L(o,u,_)),e;if(R(e))return H(e,t);if(j(e)||S(e)){const o=q(W,e),r={xmin:o[0],ymin:o[1],xmax:o[2],ymax:o[3]},x=p(r.xmin,_)*(2*u),m=x===0?e:D(e,x);return r.xmin+=x,r.xmax+=x,r.xmax>u?M(m,u,i):r.xmin<_?M(m,_,i):m}return e}function H(s,i){if(!i)return s;const n=V(s,i).map(t=>t.extent);return n.length<2?n[0]||s:n.length>2?(s.xmin=i.valid[0],s.xmax=i.valid[1],s):{rings:n.map(t=>[[t.xmin,t.ymin],[t.xmin,t.ymax],[t.xmax,t.ymax],[t.xmax,t.ymin],[t.xmin,t.ymin]])}}function L(s,i,n){if(Array.isArray(s)){const t=s[0];if(t>i){const e=p(t,i);s[0]=t+e*(-2*i)}else if(t<n){const e=p(t,n);s[0]=t+e*(-2*n)}}else{const t=s.x;if(t>i){const e=p(t,i);s.x+=e*(-2*i)}else if(t<n){const e=p(t,n);s.x+=e*(-2*n)}}return s}function V(s,i){const n=[],{ymin:t,ymax:e,xmin:h,xmax:u}=s,_=s.xmax-s.xmin,[o,r]=i.valid,{x,frameId:m}=b(s.xmin,i),{x:l,frameId:c}=b(s.xmax,i),A=x===l&&_>0;if(_>2*r){const g={xmin:h<u?x:l,ymin:t,xmax:r,ymax:e},O={xmin:o,ymin:t,xmax:h<u?l:x,ymax:e},C={xmin:0,ymin:t,xmax:r,ymax:e},P={xmin:o,ymin:t,xmax:0,ymax:e},f=[],y=[];v(g,C)&&f.push(m),v(g,P)&&y.push(m),v(O,C)&&f.push(c),v(O,P)&&y.push(c);for(let d=m+1;d<c;d++)f.push(d),y.push(d);n.push(new a(g,[m]),new a(O,[c]),new a(C,f),new a(P,y))}else x>l||A?n.push(new a({xmin:x,ymin:t,xmax:r,ymax:e},[m]),new a({xmin:o,ymin:t,xmax:l,ymax:e},[c])):n.push(new a({xmin:x,ymin:t,xmax:l,ymax:e},[m]));return n}function b(s,i){const[n,t]=i.valid,e=2*t;let h,u=0;return s>t?(h=Math.ceil(Math.abs(s-t)/e),s-=h*e,u=h):s<n&&(h=Math.ceil(Math.abs(s-n)/e),s+=h*e,u=-h),{x:s,frameId:u}}function v(s,i){const{xmin:n,ymin:t,xmax:e,ymax:h}=i;return I(s,n,t)&&I(s,n,h)&&I(s,e,h)&&I(s,e,t)}function I(s,i,n){return i>=s.xmin&&i<=s.xmax&&n>=s.ymin&&n<=s.ymax}function M(s,i,n=!0){const t=!S(s);if(t&&B(s),n)return new $().cut(s,i);const e=t?s.rings:s.paths,h=t?4:2,u=e.length,_=-2*i;for(let o=0;o<u;o++){const r=e[o];if(r&&r.length>=h){const x=[];for(const m of r)x.push([m[0]+_,m[1]]);e.push(x)}}return t?s.rings=e:s.paths=e,s}class a{constructor(i,n){this.extent=i,this.frameIds=n}}const W=X();class ${constructor(){this._linesIn=[],this._linesOut=[]}cut(i,n){let t;if(this._xCut=n,i.rings)this._closed=!0,t=i.rings,this._minPts=4;else{if(!i.paths)return null;this._closed=!1,t=i.paths,this._minPts=2}for(const h of t){if(!h||h.length<this._minPts)continue;let u=!0;for(const _ of h)u?(this.moveTo(_),u=!1):this.lineTo(_);this._closed&&this.close()}this._pushLineIn(),this._pushLineOut(),t=[];for(const h of this._linesIn)h&&h.length>=this._minPts&&t.push(h);const e=-2*this._xCut;for(const h of this._linesOut)if(h&&h.length>=this._minPts){for(const u of h)u[0]+=e;t.push(h)}return this._closed?i.rings=t:i.paths=t,i}moveTo(i){this._pushLineIn(),this._pushLineOut(),this._prevSide=this._side(i[0]),this._moveTo(i[0],i[1],this._prevSide),this._prevPt=i,this._firstPt=i}lineTo(i){const n=this._side(i[0]);if(n*this._prevSide==-1){const t=this._intersect(this._prevPt,i);this._lineTo(this._xCut,t,0),this._prevSide=0,this._lineTo(i[0],i[1],n)}else this._lineTo(i[0],i[1],n);this._prevSide=n,this._prevPt=i}close(){const i=this._firstPt,n=this._prevPt;i[0]===n[0]&&i[1]===n[1]||this.lineTo(i),this._checkClosingPt(this._lineIn),this._checkClosingPt(this._lineOut)}_moveTo(i,n,t){this._closed?(this._lineIn.push([t<=0?i:this._xCut,n]),this._lineOut.push([t>=0?i:this._xCut,n])):(t<=0&&this._lineIn.push([i,n]),t>=0&&this._lineOut.push([i,n]))}_lineTo(i,n,t){this._closed?(k(this._lineIn,t<=0?i:this._xCut,n),k(this._lineOut,t>=0?i:this._xCut,n)):t<0?(this._prevSide===0&&this._pushLineOut(),this._lineIn.push([i,n])):t>0?(this._prevSide===0&&this._pushLineIn(),this._lineOut.push([i,n])):this._prevSide<0?(this._lineIn.push([i,n]),this._lineOut.push([i,n])):this._prevSide>0&&(this._lineOut.push([i,n]),this._lineIn.push([i,n]))}_checkClosingPt(i){const n=i.length;n>3&&i[0][0]===this._xCut&&i[n-2][0]===this._xCut&&i[1][0]===this._xCut&&(i[0][1]=i[n-2][1],i.pop())}_side(i){return i<this._xCut?-1:i>this._xCut?1:0}_intersect(i,n){const t=(this._xCut-i[0])/(n[0]-i[0]);return i[1]+t*(n[1]-i[1])}_pushLineIn(){this._lineIn&&this._lineIn.length>=this._minPts&&this._linesIn.push(this._lineIn),this._lineIn=[]}_pushLineOut(){this._lineOut&&this._lineOut.length>=this._minPts&&this._linesOut.push(this._lineOut),this._lineOut=[]}}function k(s,i,n){const t=s.length;t>1&&s[t-1][0]===i&&s[t-2][0]===i?s[t-1][1]=n:s.push([i,n])}export{F as a,E as p};
