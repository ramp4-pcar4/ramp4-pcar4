import{n as i,s as l}from"./main-DnzmeE4U.js";import{B as m,H as p,D as d,C as f}from"./quantizationUtils-Cndke4AR.js";function g(a,r,e,s,t){if(a==null)return null;const o=a.references("geometry")&&t?y(r,s,t):r,n=a.repurposeFeature(o);try{return a.evaluate({...e,$feature:n},a.services)}catch(c){return i.getLogger("esri.views.2d.support.arcadeOnDemand").warn("Feature arcade evaluation failed:",c),null}}const u=new Map;function y(a,r,e){const{transform:s,hasZ:t,hasM:o}=e;u.has(r)||u.set(r,v(r));const n=u.get(r)(a.geometry,s,t,o);return{...a,geometry:n}}function v(a){const r={};switch(a){case"esriGeometryPoint":return(e,s,t,o)=>f(s,r,e,t,o);case"esriGeometryPolygon":return(e,s,t,o)=>d(s,r,e,t,o);case"esriGeometryPolyline":return(e,s,t,o)=>p(s,r,e,t,o);case"esriGeometryMultipoint":return(e,s,t,o)=>m(s,r,e,t,o);default:return i.getLogger("esri.views.2d.support.arcadeOnDemand").error(new l("mapview-arcade",`Unable to handle geometryType: ${a}`)),e=>e}}export{g as default};
