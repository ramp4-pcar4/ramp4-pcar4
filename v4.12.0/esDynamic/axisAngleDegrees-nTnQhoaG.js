import{aR as c,aS as q,aT as v,aU as w,aV as y}from"./main-DnzmeE4U.js";import{j as z}from"./mat4-BFStKTjU.js";import{v as e,b as m,x as A}from"./quat-D8L_R4I0.js";import{e as p}from"./quatf64-C16JxGFv.js";import{s as R,_ as S,A as T,B as U}from"./vec32-BuqRmYBM.js";function o(a=B){return[a[0],a[1],a[2],a[3]]}function t(a,r,n=o()){return R(n,a),n[3]=r,n}function V(a,r,n){return S(n,a,r),T(n,n),n[3]=-U(a,r),n}function _(a,r=o()){const n=z(s,a);return x(r,c(e(r,n))),r}function j(a,r,n=o()){return m(s,a,f(a)),m(b,r,f(r)),A(s,b,s),x(n,c(e(n,s)))}function C(a,r,n,i=o()){return t(q,a,u),t(v,r,d),t(w,n,k),j(u,d,u),j(u,k,i),i}function D(a){return a}function $(a){return a[3]}function f(a){return y(a[3])}function x(a,r){return a[3]=r,a}const B=[0,0,1,0],s=p(),b=p();o();const u=o(),d=o(),k=o();export{B,C as d,o as j,_ as k,t as q,V as v,D as w,$ as y,f as z};
