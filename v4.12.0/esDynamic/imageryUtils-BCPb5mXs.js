import{P as c,$ as o}from"./utils-DawrlST4.js";import{l as p,a as u,u as g,E as i}from"./portalItemUtils-DsrxEt4W.js";const y="Image Service",v="imagery-layer-save",f="imagery-layer-save-as",d="imagery-tile-layer-save",T="imagery-tile-layer-save-as",l="WCS",w="wcs-layer-save",I="wcs-layer-save-as";function n(e){if(e.type==="imagery"||e.type==="wcs")return{isValid:!0};const{raster:t}=e,a=t?.datasetFormat==="Function"?t.primaryRasters?.rasters[0]:t;return{isValid:a?.datasetFormat==="RasterTileServer"&&(a.tileType==="Raster"||a.tileType==="Map"),errorMessage:"imagery tile layer should be created from a tiled image service."}}function m(e){const t=e.layerJSON;return Promise.resolve(t&&Object.keys(t).length?t:null)}async function x(e,t){const{parsedUrl:a,title:r,fullExtent:s}=e;t.url=a.path,t.title||=r;try{t.extent=await p(s)}catch{t.extent=void 0}u(t,i.METADATA),g(t,i.TILED_IMAGERY,e.type==="imagery-tile")}async function P(e,t){const a=e.type==="imagery"?v:e.type==="imagery-tile"?d:w,r=e.type==="wcs"?l:y;return c({layer:e,itemType:r,validateLayer:n,createItemData:m,errorNamePrefix:a},t)}async function h(e,t,a){const r=e.type==="imagery"?f:e.type==="imagery-tile"?T:I,s=e.type==="wcs"?l:y;return o({layer:e,itemType:s,validateLayer:n,createItemData:m,errorNamePrefix:r,newItem:t,setItemProperties:x},a)}export{P as save,h as saveAs};
