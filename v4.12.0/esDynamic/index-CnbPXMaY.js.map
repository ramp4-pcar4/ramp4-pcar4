{"version":3,"file":"index-CnbPXMaY.js","sources":["../../src/fixtures/swipe/swipe.vue","../../src/fixtures/swipe/index.ts"],"sourcesContent":["<template>\n    <div class=\"swipe-container\">\n        <div class=\"verticalLine\" :style=\"{ left: linePosition, height: lineHeight, bottom: lineBottom }\"></div>\n        <input\n            v-model=\"sliderPosition\"\n            :id=\"'layerSlider' + iApi.$element._uid\"\n            class=\"layerSliderElement\"\n            type=\"range\"\n            ref=\"slider\"\n            min=\"0\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"90\"\n            :aria-valuenow=\"sliderPosition\"\n            :aria-label=\"$t('map.layerSwipe.label')\"\n            max=\"90\"\n            step=\"0.5\"\n            :content=\"$t('map.layerSwipe.drag')\"\n            v-tippy=\"{ followCursor: true, trigger: 'mouseenter' }\"\n            :style=\"{ 'z-index': 10 }\"\n        />\n        <arcgis-swipe\n            direction=\"horizontal\"\n            :swipe-position=\"swipeComponentPosition\"\n            :view=\"view\"\n            auto-destroy-disable\n            ref=\"swipeComponent\"\n        ></arcgis-swipe>\n    </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { FixtureInstance, GlobalEvents } from '@/api';\nimport { computed, inject, onBeforeMount, onBeforeUnmount, onMounted, ref, useTemplateRef } from 'vue';\nimport { usePanelStore } from '@/stores/panel';\nimport type { InstanceAPI, LayerInstance } from '@/api';\nimport type { EsriMapView } from '@/geo/esri';\nimport type { BasemapChange } from '@/geo/api';\n\nconst iApi = inject('iApi') as InstanceAPI;\n\nconst panelStore = usePanelStore();\nconst slider = useTemplateRef('slider');\nconst sliderPosition = ref<number>(45);\nconst clientHeight = ref<number>(0);\nconst refreshCounter = ref(0);\nconst swipeComponentPosition = ref<number>(50);\nconst view = ref<EsriMapView>();\nconst swipeComponent = ref<HTMLArcgisSwipeElement | null | undefined>();\n\nconst linePosition = computed(() => {\n    const thumbWidth = 30 + refreshCounter.value - refreshCounter.value;\n    const sliderWidth = slider.value?.getBoundingClientRect()\n        ? slider.value?.getBoundingClientRect().right - slider.value?.getBoundingClientRect().left\n        : 0;\n    const inputToPercentage = +sliderPosition.value / 90; // Percentage of the slider that the slider thumb has surpassed\n    const sliderOffset = (sliderWidth - thumbWidth) * inputToPercentage; // Number of pixels within slider that slider thumb has surpassed\n    const pos = (slider.value?.getBoundingClientRect().x ?? 0) + sliderOffset + (thumbWidth - 5.25) / 2; // Left position of the vertical line\n\n    // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n    swipeComponentPosition.value = (pos / iApi.$rootEl.clientWidth) * 100 + 0.2;\n\n    return `${pos}px`;\n});\n\nconst lineHeight = computed(() => {\n    return `${clientHeight.value}px`;\n});\n\nconst lineBottom = computed(() => {\n    return `${-clientHeight.value / 2 - 18}px`;\n});\n\ndefineProps({\n    fixture: {\n        type: FixtureInstance,\n        required: true\n    },\n    message: String\n});\n\nonBeforeMount(() => {\n    clientHeight.value = iApi.$rootEl?.clientHeight ?? 1200;\n});\n\nconst resizeHandler = () => {\n    clientHeight.value = iApi.$rootEl?.clientHeight ?? clientHeight.value;\n    refreshCounter.value++; // used to force update on window resize\n    setTimeout(() => {\n        refreshCounter.value++; // window minimizing/maximizing requires a second, delayed update\n    }, 50);\n};\n\nconst sliderFocus = () => {\n    panelStore.setOpacity(0.1);\n    slider.value!.style.background = '';\n};\n\nconst sliderBlur = () => {\n    panelStore.setOpacity(1);\n    slider.value!.style.background = 'inherit';\n};\n\nonMounted(async () => {\n    // Used to detect if device has touch capabilities and no mouse. If not, then we make the slider track invisible\n    const isTouch = 'ontouchstart' in document.documentElement || !window.matchMedia('(pointer:fine)').matches;\n    if (!isTouch) {\n        slider.value!.style.background = 'inherit';\n    }\n    window.addEventListener('resize', resizeHandler);\n    slider.value?.addEventListener('focus', sliderFocus);\n    slider.value?.addEventListener('blur', sliderBlur);\n    slider.value?.addEventListener('mouseover', sliderFocus);\n    slider.value?.addEventListener('mouseleave', sliderBlur);\n    slider.value?.addEventListener('touchstart', sliderFocus);\n    slider.value?.addEventListener('touchend', sliderBlur);\n    // TODO: make tooltip follow touch location\n\n    setTimeout(() => {\n        refreshCounter.value++;\n    }, 50);\n\n    await initializeSwipe();\n\n    // Upon a basemap schema change, geo.map.esriView gets set to a new MapView, meaning that the one used by the\n    // swipe component wouldn't exist. So, we must reinitialize the swipe component\n    iApi.event.on(GlobalEvents.MAP_BASEMAPCHANGE, async (payload: BasemapChange) => {\n        if (payload.schemaChanged) {\n            // Remove all layers\n            swipeComponent.value?.trailingLayers.forEach(layer => {\n                swipeComponent.value?.trailingLayers.remove(layer);\n            });\n            swipeComponent.value?.leadingLayers.forEach(layer => {\n                swipeComponent.value?.leadingLayers.remove(layer);\n            });\n\n            await initializeSwipe();\n        }\n    });\n\n    // When a layer is reloaded, remove it and add it back to the swipe component. Note that timing\n    // will not be considered. Layers will be re-added based on what reloads fastest\n    iApi.event.on(GlobalEvents.LAYER_RELOAD_END, (reloadedLayer: LayerInstance) => {\n        swipeComponent.value?.trailingLayers.forEach(layer => {\n            if (layer.id === reloadedLayer.id) {\n                swipeComponent.value?.trailingLayers.remove(layer);\n                swipeComponent.value?.trailingLayers.add(reloadedLayer.esriLayer!);\n            }\n        });\n\n        swipeComponent.value?.leadingLayers.forEach(layer => {\n            if (layer.id === reloadedLayer.id) {\n                swipeComponent.value?.leadingLayers.remove(layer);\n                swipeComponent.value?.leadingLayers.add(reloadedLayer.esriLayer!);\n            }\n        });\n    });\n\n    // When a layer is removed, remove it from the swipe component\n    iApi.event.on(GlobalEvents.LAYER_REMOVE, (removedLayer: LayerInstance) => {\n        swipeComponent.value?.trailingLayers.forEach(layer => {\n            if (layer.id === removedLayer.id) {\n                swipeComponent.value?.trailingLayers.remove(layer);\n            }\n        });\n\n        swipeComponent.value?.leadingLayers.forEach(layer => {\n            if (layer.id === removedLayer.id) {\n                swipeComponent.value?.leadingLayers.remove(layer);\n            }\n        });\n    });\n});\n\nconst initializeSwipe = async (): Promise<void> => {\n    await iApi.geo.map.viewPromise;\n    view.value = iApi.geo.map.esriView;\n\n    const trailing = ['Nature', 'WFSLayer'];\n    const leading = ['Water', 'GeoMet'];\n\n    trailing.forEach(layerId => {\n        iApi.geo.layer.awaitLayer(layerId, true).then((layerInstance: LayerInstance) => {\n            if (layerInstance.esriLayer) {\n                swipeComponent.value?.trailingLayers.add(layerInstance.esriLayer);\n            } else {\n                console.warn(`Invalid layer instance: ${layerId}`);\n            }\n        });\n    });\n\n    leading.forEach(layerId => {\n        iApi.geo.layer.awaitLayer(layerId, true).then((layerInstance: LayerInstance) => {\n            if (layerInstance.esriLayer) {\n                swipeComponent.value?.leadingLayers.add(layerInstance.esriLayer);\n            } else {\n                console.warn(`Invalid layer instance: ${layerId}`);\n            }\n        });\n    });\n};\n\nonBeforeUnmount(() => {\n    window.removeEventListener('resize', resizeHandler);\n    slider.value?.removeEventListener('focus', () => sliderFocus);\n    slider.value?.removeEventListener('blur', () => sliderBlur);\n    slider.value?.removeEventListener('mouseover', sliderFocus);\n    slider.value?.removeEventListener('mouseleave', sliderBlur);\n    slider.value?.removeEventListener('touchstart', sliderFocus);\n    slider.value?.removeEventListener('touchend', sliderBlur);\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.swipe-container {\n    display: flex;\n    justify-content: center;\n    position: absolute;\n    width: 100%;\n    bottom: 50%;\n    z-index: 0;\n}\n\n.layerSliderElement {\n    height: 5px;\n    width: 90%;\n    -webkit-appearance: none;\n    appearance: none;\n}\n\n.layerSliderElement:focus {\n    border: none;\n    outline: none;\n}\n\n.layerSliderElement::-webkit-slider-thumb {\n    width: 30px;\n    height: 25px;\n    -webkit-appearance: none;\n    appearance: none;\n    background: black;\n    cursor: col-resize;\n}\n\n.layerSliderElement::-moz-range-thumb {\n    width: 30px;\n    height: 25px;\n    -webkit-appearance: none;\n    appearance: none;\n    background: black;\n    cursor: col-resize;\n}\n\n.verticalLine {\n    display: flex;\n    align-items: center;\n    position: absolute;\n    padding-right: 5px;\n    z-index: -15;\n    background-color: black;\n}\n</style>\n","import SwipeV from './swipe.vue'; // import on-map component\nimport { FixtureInstance } from '@/api';\n\nclass SwipeFixture extends FixtureInstance {\n    async added(): Promise<void> {\n        const { el, destroy } = this.mount(SwipeV, {\n            app: this.$element,\n            props: { message: 'This is a swipe.', fixture: this }\n        });\n\n        if (el.childNodes[0]) this.$vApp.$el.appendChild(el.childNodes[0]);\n\n        this.removed = (): void => {\n            destroy();\n        };\n    }\n}\n\nexport default SwipeFixture;\n"],"names":["iApi","inject","panelStore","usePanelStore","slider","useTemplateRef","sliderPosition","ref","clientHeight","refreshCounter","swipeComponentPosition","view","swipeComponent","linePosition","computed","thumbWidth","sliderWidth","inputToPercentage","sliderOffset","pos","lineHeight","lineBottom","onBeforeMount","resizeHandler","sliderFocus","sliderBlur","onMounted","initializeSwipe","GlobalEvents","payload","layer","reloadedLayer","removedLayer","trailing","leading","layerId","layerInstance","onBeforeUnmount","SwipeFixture","FixtureInstance","el","destroy","SwipeV"],"mappings":"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"}