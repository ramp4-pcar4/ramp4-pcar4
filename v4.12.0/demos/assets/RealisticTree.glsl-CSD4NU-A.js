import{aZ as W,ab as b,aW as C,j1 as S}from"./main-D6UWMbWJ.js";import{y as z,i as J}from"./memoryEstimations-bvdrNroi.js";import{n as A}from"./mat4-mplESjCB.js";import{e as H,o as N}from"./mat4f64-Dk4dwAN8.js";import{u as D,E as R,g as $,r as X,s as x,A as Q}from"./vec32-DvB22h0L.js";import{z as Z}from"./vec42-CKs01hkn.js";import{n as k}from"./vec4f64-o2zAXfmz.js";import{b as g,S as q,v as G}from"./sphere-MYAntte_.js";import{l as B}from"./ViewingMode-HRfKv6NR.js";import{p as F,o as T,i as f}from"./HUDVisibility.glsl-C6snQe9Y.js";import"./boundedPlane-DFud_aWw.js";import{bd as K,aA as M}from"./VerticalOffset.glsl-D5YuYROR.js";import{e as Y}from"./VertexAttribute-Cq4MnHjR.js";import"./glsl-BH37Aalp.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./BindType-BBwFZqyN.js";import"./ShaderBuilder-B-d5zQ91.js";import{i as tt,m as et,v as rt,J as st,_ as it}from"./DefaultMaterial-Bw-awx1D.js";import"./ShaderOutput-DnYY5J1_.js";import"./mat3f64-q3fE-ZOt.js";import"./mat3-CruJiiUv.js";import"./NormalAttribute.glsl-eKv2y2ed.js";import"./renderState-fiZ8Gckm.js";class nt{constructor(t,e,r){this.object=t,this.geometryId=e,this.triangleNr=r}}class at extends nt{constructor(t,e,r,s){super(t,e,r),this.center=s!=null?W(s):null}}class ot{constructor(t){this.layerUid=t}}let lt=class extends ot{constructor(t,e){super(t),this.graphicUid=e}};function j(n){return n?.dist!=null}class ht extends lt{constructor(t,e,r,s,i){super(t,e),this.layerUid=t,this.graphicUid=e,this.triangleNr=r,this.baseBoundingSphere=s,this.numLodLevels=i}}const I=1e-5;class ut{constructor(t){this.options=new F,this._results=new ct,this.transform=new K,this.tolerance=I,this.verticalOffset=null,this._ray=g(),this._rayEnd=b(),this._rayBeginTransformed=b(),this._rayEndTransformed=b(),this.viewingMode=t??B.Global}get results(){return this._results}get ray(){return this._ray}get rayBegin(){return this._ray.origin}get rayEnd(){return this._rayEnd}reset(t,e,r){this.resetWithRay(q(t,e,this._ray),r)}resetWithRay(t,e){this.camera=e,t!==this._ray&&G(t,this._ray),this.options.verticalOffset!==0?this.viewingMode===B.Local?this._ray.origin[2]-=this.options.verticalOffset:this.verticalOffset=this.options.verticalOffset:this.verticalOffset=null,D(this._rayEnd,this._ray.origin,this._ray.direction),this._results.init(this._ray)}intersect(t=null,e,r,s,i){this.point=e,this.filterPredicate=s,this.tolerance=r??I;const a=M(this.verticalOffset);if(t&&t.length>0){const o=i?l=>{i(l)&&this.intersectObject(l)}:l=>{this.intersectObject(l)};for(const l of t){const h=l.getSpatialQueryAccelerator?.();h!=null?(a!=null?h.forEachAlongRayWithVerticalOffset(this._ray.origin,this._ray.direction,o,a):h.forEachAlongRay(this._ray.origin,this._ray.direction,o),this.options.selectionMode&&this.options.hud&&h.forEachDegenerateObject(o)):l.objects.forAll(u=>o(u))}}this.sortResults()}intersectObject(t){const e=t.geometries;if(!e)return;const r=t.effectiveTransformation,s=M(this.verticalOffset);for(const i of e){if(!i.visible)continue;const{material:a,id:o}=i;if(!a.visible)continue;this.transform.setAndInvalidateLazyTransforms(r,i.transformation),R(this._rayBeginTransformed,this.rayBegin,this.transform.inverse),R(this._rayEndTransformed,this.rayEnd,this.transform.inverse);const l=this.transform.transform;s!=null&&(s.objectTransform=this.transform),a.intersect(i,this.transform.transform,this,this._rayBeginTransformed,this._rayEndTransformed,(h,u,d,y,p,L)=>{if(h>=0){if(this.filterPredicate!=null&&!this.filterPredicate(this._ray.origin,this._rayEnd,h))return;const c=y?this._results.hud:this._results,v=y?m=>{const V=new at(t,o,d,L);m.set(f.HUD,V,h,u,N,p)}:m=>m.set(f.OBJECT,{object:t,geometryId:o,triangleNr:d},h,u,l,p);if((c.min.drapedLayerOrder==null||p>=c.min.drapedLayerOrder)&&(c.min.dist==null||h<c.min.dist)&&v(c.min),this.options.store!==T.MIN&&(c.max.drapedLayerOrder==null||p<c.max.drapedLayerOrder)&&(c.max.dist==null||h>c.max.dist)&&v(c.max),this.options.store===T.ALL)if(y){const m=new w(this._ray);v(m),this._results.hud.all.push(m)}else{const m=new _(this._ray);v(m),this._results.all.push(m)}}})}}sortResults(t=this._results.all){t.sort((e,r)=>e.dist!==r.dist?(e.dist??0)-(r.dist??0):e.drapedLayerOrder!==r.drapedLayerOrder?U(e.drapedLayerOrder,r.drapedLayerOrder):U(e.drapedLayerGraphicOrder,r.drapedLayerGraphicOrder))}}function U(n,t){return(t??-Number.MAX_VALUE)-(n??-Number.MAX_VALUE)}function Pt(n){return new ut(n)}class ct{constructor(){this.min=new _(g()),this.max=new _(g()),this.hud={min:new w(g()),max:new w(g()),all:new Array},this.ground=new _(g()),this.all=[]}init(t){this.min.init(t),this.max.init(t),this.ground.init(t),this.all.length=0,this.hud.min.init(t),this.hud.max.init(t),this.hud.all.length=0}}class _{get ray(){return this._ray}get distanceInRenderSpace(){return this.dist!=null?($(E,this.ray.direction,this.dist),X(E)):null}withinDistance(t){return!!j(this)&&this.distanceInRenderSpace<=t}getIntersectionPoint(t){return!!j(this)&&($(E,this.ray.direction,this.dist),D(t,this.ray.origin,E),!0)}getTransformedNormal(t){return x(O,this.normal),O[3]=0,Z(O,O,this.transformation),x(t,O),Q(t,t)}constructor(t){this.intersector=f.OBJECT,this.normal=b(),this.transformation=H(),this._ray=g(),this.init(t)}init(t){this.dist=null,this.target=null,this.drapedLayerOrder=null,this.drapedLayerGraphicOrder=null,this.intersector=f.OBJECT,G(t,this._ray)}set(t,e,r,s,i,a,o){this.intersector=t,this.dist=r,x(this.normal,s??C),A(this.transformation,i??N),this.target=e,this.drapedLayerOrder=a,this.drapedLayerGraphicOrder=o}copy(t){G(t.ray,this._ray),this.intersector=t.intersector,this.dist=t.dist,this.target=t.target,this.drapedLayerOrder=t.drapedLayerOrder,this.drapedLayerGraphicOrder=t.drapedLayerGraphicOrder,x(this.normal,t.normal),A(this.transformation,t.transformation)}}class w extends _{constructor(){super(...arguments),this.intersector=f.HUD}}function dt(n){return new _(n)}const E=b(),O=k();class mt{constructor(t,e,r,s){this.material=t,this.bufferWriter=t.createBufferWriter(),this.vertexBufferLayout=this.bufferWriter.vertexBufferLayout,this.buffer=e,this.elementCount=r,this.boundingInfo=s}get numTriangles(){return this.elementCount/3}get numVertices(){return this.elementCount}computeUsedMemory(){return this.buffer.byteLength+z}getRenderGeometry(){return this}intersect(t,e,r,s,i,a,o,l){const h=this.bufferWriter,u=this.buffer;h.intersect(u,t,r,s,(d,y,p,L,c)=>P(d,y,p,c,t,e,a,o,i,l))}}class Vt{constructor(t){this.engineGeometry=t}get material(){return this.engineGeometry.material}get numVertices(){return this.engineGeometry.attributes.get(Y.POSITION).indices.length}get numTriangles(){return this.engineGeometry.indexCount/3}get boundingInfo(){return this.engineGeometry.boundingInfo}computeUsedMemory(){return Array.from(this.engineGeometry.attributes.values()).reduce((t,e)=>t+J(e.data,e.indices),0)}getRenderGeometry(){const t=this.material,e=this.engineGeometry,r=e.attributes,s=e.boundingInfo,i=t.createBufferWriter(),a=i.vertexBufferLayout,o=i.elementCount(r),l=a.createBuffer(o);return i.write(null,null,r,null,l,0),new mt(t,l.buffer,o,s)}intersect(t,e,r,s,i,a,o,l){const h=this.engineGeometry;this.material.intersect(h,t.transform.transform,t,r,s,(u,d,y,p,L)=>P(u,d,y,L,t,e,a,o,i,l))}}function P(n,t,e,r,s,i,a,o,l,h){if(n<0||i&&!i(s.rayBegin,s.rayEnd,n))return;const u=new ht(a.layerUid,a.graphicUid(l),e,o,h);if((s.results.min.drapedLayerOrder==null||r>=s.results.min.drapedLayerOrder)&&(s.results.min.dist==null||n<s.results.min.dist)&&s.results.min.set(f.LOD,u,n,t,s.transform.transform,r),s.options.store!==T.MIN&&(s.results.max.drapedLayerOrder==null||r>=s.results.max.drapedLayerOrder)&&(s.results.max.dist==null||n>s.results.max.dist)&&s.results.max.set(f.LOD,u,n,t,s.transform.transform,r),s.options.store===T.ALL){const d=dt(s.results.min.ray);d.set(f.LOD,u,n,t,s.transform.transform,r),s.results.all.push(d)}}class Wt{constructor(t,e=null){this.geometry=t,this.textures=e}get material(){return this.geometry.material}get numTriangles(){return this.geometry.numTriangles}}class Ct{constructor(t,e,r){this.components=t,this.minScreenSpaceRadius=e,this.pivotOffset=r;const s=S(this.components.map(i=>i.geometry));this.numVertices=s.reduce((i,a)=>i+a.numVertices,0)}}class zt{constructor(t){this.levels=t,this.levels.sort((e,r)=>e.minScreenSpaceRadius===r.minScreenSpaceRadius?e.numVertices-r.numVertices:e.minScreenSpaceRadius-r.minScreenSpaceRadius)}getMaterials(){const t=[];return this.levels.forEach(e=>e.components.forEach(r=>t.push(r.geometry.material))),S(t)}getTextures(){const t=new Array;return this.levels.forEach(e=>e.components.forEach(r=>{r.textures!=null&&t.push(...r.textures)})),S(t)}getGeometries(){const t=new Array;return this.levels.forEach(e=>e.components.forEach(r=>{t.push(r.geometry)})),S(t)}getEngineGeometries(){return this.getGeometries().map(t=>t.engineGeometry).filter(t=>t!=null)}computeUsedMemory(){const t=this.getGeometries(),e=this.getTextures(),r=t.reduce((s,i)=>s+i.computeUsedMemory(),0);return e.reduce((s,i)=>s+i.memoryEstimate,0)+r}}const Jt=Object.freeze(Object.defineProperty({__proto__:null,build:tt},Symbol.toStringTag,{value:"Module"})),Ht=Object.freeze(Object.defineProperty({__proto__:null,build:et,getRadius:rt},Symbol.toStringTag,{value:"Module"})),Xt=Object.freeze(Object.defineProperty({__proto__:null,build:st},Symbol.toStringTag,{value:"Module"})),Qt=Object.freeze(Object.defineProperty({__proto__:null,build:it},Symbol.toStringTag,{value:"Module"}));export{Xt as D,Qt as R,Jt as S,Pt as T,Vt as a,Ht as b,Ct as f,zt as h,Wt as l,mt as m};
