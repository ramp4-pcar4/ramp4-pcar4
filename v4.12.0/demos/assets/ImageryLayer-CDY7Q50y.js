const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./imageryUtils-BbIUMzr_.js","./utils-B3G-U6Iv.js","./main-D6UWMbWJ.js","./preload-helper-ExcqyqRp.js","./main-DCJluy1C.css","./multiOriginJSONSupportUtils-C0wm8_Yw.js","./PortalItem-BUPtFYt9.js","./jsonContext-BPKshDab.js","./portalItemUtils-HRSUZPvT.js","./projection-F5U3p10J.js"])))=>i.map(i=>d[i]);
import{_ as Ar}from"./preload-helper-ExcqyqRp.js";import{v as s,x as a,bA as X,J as I,D as M,ah as at,B as P,z as x,bl as $e,ak as D,q as Wi,a_ as xr,ap as F,al as se,dg as jr,ar as He,ag as Ut,s as v,bz as W,hv as Xt,hJ as Tr,n as ni,aj as Qi,cB as Cr,cC as Nr,l3 as Yt,f6 as zi,H as Fr,bo as ve,O as he,kX as Ee,kW as _t,l4 as Ht,bk as Y,bL as ne,aq as Lr,ae as _,b9 as S,ca as ai,I as Pr,a6 as zr,l5 as Or,k_ as Br,dF as Ur,be as _r,du as Hr}from"./main-D6UWMbWJ.js";import{f as Vr,y as Er,b as $r,j as kr,S as Jr,d as Zr,l as Gr}from"./PortalLayer-DmW8MNcX.js";import{f as qr}from"./Layer-CrpAg4i7.js";import{p as Ai,a as Wr,m as Qr,c as Kr,f as Xr,d as Yr,$ as es,b as ts,v as is,e as ei,g as rs,h as ss,i as ns,V as as,t as Ke,n as os,j as ls,k as us}from"./multidimensionalUtils-CGUpBdUO.js";import{n as we,S as Ki,B as kt,a as gt,c as ps,A as cs,b as Ve,i as ft,d as ms,e as ds,o as xi,u as Xi,t as Yi,r as ys,f as hs,g as gs,h as er,j as ji,_ as fs,k as Oi,P as ws}from"./RasterSymbolizer-BWMmEZwI.js";import{s as Is}from"./pixelRangeUtils-Esmjpmyq.js";import{b as Jt,v as tr,j as ir,f as rr}from"./commonProperties-CuupewPf.js";import{y as sr}from"./Field-BRKBBmM6.js";import{Z as Ms}from"./FieldsIndex-C0Zyp4KO.js";import{t as Bi}from"./imageBitmapUtils-sJ46j29y.js";import{a as ye,s as Fe,d as vs,f as bs,p as Ss,e as Rs,i as Ds}from"./dataUtils-DkTHh3Ap.js";import{p as As}from"./workers-DADVStUK.js";import{w as Zt,a as Ui}from"./ClassBreaksRenderer-pGw2-UUE.js";import{u as xs}from"./RendererLegendOptions-CGuARK8S.js";import{m as nr,p as ar,a as or}from"./colorRamps-BUZNTJmj.js";import{n as _i,A as Ti}from"./UniqueValueRenderer-Brw1oZd3.js";import{R as ke}from"./normalizeUtils-DSf_eBlh.js";import{T as js,h as Ts}from"./visualVariableUtils-DqFvxVwV.js";import{D as Cs,J as Ns}from"./utils-D87Sd27W.js";import"./ColorStop-B1JrXuif.js";import"./ClassBreaksDefinition-Pel3RCn0.js";import{f as V,s as $,i as k}from"./utils-BIJX9DmY.js";import{s as Fs,b as ti}from"./Query-VeA4-Qk_.js";import{p as Gt}from"./TimeExtent-CVFHym4n.js";import{d as Ci}from"./FeatureSet-EjAFZH0Q.js";import{a as Ls,s as Ps}from"./executeForIds-76jhi0-9.js";import{s as zs}from"./executeQueryJSON-v3kF640L.js";import{l as Os}from"./ArcGISService-CG2T0gNf.js";import{p as Bs,t as Us}from"./ScaleRangeLayer-CANL8iBb.js";import{e as _s,p as Hs}from"./popupUtils-BcVk1Duw.js";import{f as Vs}from"./RefreshableLayer-8bJwugyS.js";import{l as Es}from"./TemporalLayer-CIwGUnIS.js";import{t as $s}from"./versionUtils-Dcurp1dm.js";import{A as Mt}from"./interfaces-CL2NbQte.js";let Pe=class extends M{constructor(){super(...arguments),this.pixelType="unknown"}};s([a({type:String,json:{write:{isRequired:!0}}})],Pe.prototype,"name",void 0),s([a({type:String,json:{write:!0}})],Pe.prototype,"description",void 0),s([a({type:X,json:{type:X,write:!0,name:"_object_id"}})],Pe.prototype,"id",void 0),s([a({type:String,json:{type:we.jsonValues,read:we.read,write:{writer:we.write,isRequired:!0}}})],Pe.prototype,"pixelType",void 0),s([a({type:String,json:{write:{isRequired:!0}}})],Pe.prototype,"type",void 0),Pe=s([I("esri.layers.support.RasterFunctionInfo")],Pe);const ks=Pe;let De=class extends M{constructor(){super(...arguments),this.isDataset=!1,this.isPublic=!1,this.type="RasterFunctionVariable"}};s([a({type:String,json:{write:!0}})],De.prototype,"name",void 0),s([a({type:Number,json:{type:X,write:!0,name:"_object_id"}})],De.prototype,"id",void 0),s([a({type:Boolean,json:{write:!0}})],De.prototype,"isDataset",void 0),s([a({type:Boolean,json:{write:!0}})],De.prototype,"isPublic",void 0),s([a({json:{write:!0}})],De.prototype,"value",void 0),s([a({type:String,json:{write:!0}})],De.prototype,"type",void 0),De=s([I("esri.layers.support.RasterFunctionVariable")],De);const Js=De,vt={key:"type",base:null,typeMap:{RasterFunctionVariable:Js}};let Je=class extends M{};s([a({types:vt,json:{types:vt,name:"MatchVariable"}})],Je.prototype,"matchVariable",void 0),s([a({types:vt,json:{types:vt,name:"UnionDimension"}})],Je.prototype,"unionDimension",void 0),s([a({type:Number,json:{type:X,write:!0,name:"_object_id"}})],Je.prototype,"id",void 0),s([a({type:String,json:{write:!0}})],Je.prototype,"type",void 0),Je=s([I("esri.layers.support.RasterFunctionProperties")],Je);const Zs=Je,ii=new at({0:"mosaic",1:"item",2:"item-group"},{useNumericKeys:!0});let E=class extends M{constructor(){super(...arguments),this.description="",this.functionType="mosaic",this.type="RasterFunctionTemplate"}};s([a({type:[String],json:{write:!0}})],E.prototype,"aliases",void 0),s([a({type:Object,json:{write:{isRequired:!0}}})],E.prototype,"arguments",void 0),s([a({type:String,json:{write:{isRequired:!0}}})],E.prototype,"description",void 0),s([a({type:ks,json:{write:{isRequired:!0},name:"function"}})],E.prototype,"functionInfo",void 0),s([a({type:ii.apiValues,json:{type:[0,1,2],read:ii.read,write:{writer:ii.write,isRequired:!0}}})],E.prototype,"functionType",void 0),s([a({type:String,json:{write:!0}})],E.prototype,"group",void 0),s([a({type:String,json:{write:!0}})],E.prototype,"help",void 0),s([a({type:Number,json:{type:X,write:!0,name:"_object_id"}})],E.prototype,"id",void 0),s([a({type:String,json:{write:{isRequired:!0}}})],E.prototype,"name",void 0),s([a({type:String,json:{write:!0,name:"definition"}})],E.prototype,"queryDefinition",void 0),s([a({type:String,json:{write:!0}})],E.prototype,"tag",void 0),s([a({type:Zs,json:{write:!0}})],E.prototype,"properties",void 0),s([a({type:String,json:{write:!0}})],E.prototype,"thumbnail",void 0),s([a({type:String,json:{write:!0}})],E.prototype,"thumbnailEx",void 0),s([a({json:{type:["RasterFunctionTemplate"],write:!0}})],E.prototype,"type",void 0),E=s([I("esri.layers.support.RasterFunctionTemplate")],E);const lr=E;var oi;const Dt=new Set(["raster","raster2","dem","fillraster"]),At=new Set(["rasters"]),Hi=i=>i?.rasterFunction?q.fromJSON(i):i,ri=i=>i&&i instanceof q?i.toJSON():i,li=i=>i?.functionName&&!i.declaredClass,Vi=i=>li(i)?new q(i):i,Gs=i=>{if(i==null)return null;i=D(i);const t={};for(const n of Object.keys(i))Dt.has(n.toLowerCase())?t[n]=Hi(i[n]):At.has(n.toLowerCase())&&Array.isArray(i[n])?t[n]=i[n].map(Hi):t[n]=i[n];return t},ur=i=>i?lr.fromJSON({type:"RasterFunctionTemplate",...i}):void 0,qs={types:{key:"type",base:null,typeMap:{RasterFunctionTemplate:lr}},json:{write:!0,name:"rasterFunctionDefinition",read:ur}};let q=oi=class extends M{constructor(i){super(i),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.functionDefinition=null}set functionArguments(i){if(i){const t=Object.keys(i);if(t.some(n=>Dt.has(n.toLowerCase())&&li(i[n]))||t.some(n=>At.has(n.toLowerCase())&&Array.isArray(i[n])&&i[n].some(e=>li(e)))){i=D(i);for(const n of t)Dt.has(n.toLowerCase())?i[n]=Vi(i[n]):At.has(n.toLowerCase())&&Array.isArray(i[n])&&(i[n]=i[n].map(e=>Vi(e)))}}this._set("functionArguments",i)}readFunctionArguments(i){return Gs(i)}writeFunctionArguments(i,t,n){const e={};for(const r of Object.keys(i))Dt.has(r.toLowerCase())?e[r]=ri(i[r]):At.has(r.toLowerCase())&&Array.isArray(i[r])?e[r]=i[r].map(ri):e[r]=ri(i[r]);t[n]=e}readFunctionName(i,t){const n=t.rasterFunctionInfos;return t.name||(n?.length&&n[0].name!=="None"?n[0].name:t.rasterFunction||t.rasterFunctionDefinition?.name)}get rasterFunctionDefinition(){return this.functionDefinition?.toJSON()}set rasterFunctionDefinition(i){this.functionDefinition=ur(i)}get hasClipFunction(){return this.rasterFunctionDefinition?JSON.stringify(this.rasterFunctionDefinition).includes('"type":"ClipFunction"'):JSON.stringify(this).includes('"rasterFunction":"Clip"')}clone(){return new oi({functionName:this.functionName,functionArguments:D(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,rasterFunctionDefinition:D(this.rasterFunctionDefinition)})}};s([a({json:{type:Object,name:"rasterFunctionArguments"}})],q.prototype,"functionArguments",null),s([P("functionArguments")],q.prototype,"readFunctionArguments",null),s([x("functionArguments")],q.prototype,"writeFunctionArguments",null),s([a({json:{type:String,write:{target:"rasterFunction"}}})],q.prototype,"functionName",void 0),s([P("functionName",["rasterFunction","rasterFunctionInfos","rasterFunctionDefinition"])],q.prototype,"readFunctionName",null),s([$e({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1,default:"unknown"})],q.prototype,"outputPixelType",void 0),s([a({type:String,json:{read:!0,write:!0}})],q.prototype,"variableName",void 0),s([a()],q.prototype,"rasterFunctionDefinition",null),s([a(qs)],q.prototype,"functionDefinition",void 0),s([a()],q.prototype,"hasClipFunction",null),q=oi=s([I("esri.layers.support.RasterFunction")],q);const j=q,Ws={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}},Qs=new Set(["u1","u2","u4","u8","s8","u16","s16"]),Ks={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},Xs=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function pr(i){return Xs.has(i.type)}function ui(i,t){if(!i||!t)return D(i||t);const n=D(i);if(n.functionDefinition&&t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=void 0),cr(n.functionDefinition.arguments,t),n.rasterFunctionDefinition=n.functionDefinition.toJSON()}else t.functionName?.toLowerCase()!=="none"&&(mr(n.functionArguments).Raster=t);return n}function cr(i,t){for(const n in i)n.toLowerCase()==="raster"&&(i[n].type==="RasterFunctionVariable"?(i[n]=t.rasterFunctionDefinition,i[n].type="RasterFunctionTemplate"):i[n].type==="RasterFunctionTemplate"&&cr(i[n].arguments,t))}function Ie(i){const t=D(Ws[i.functionName+"Function"]),n=i.functionArguments;for(const e in n)e.toLowerCase()==="raster"?(t.arguments[e]=Ie(n[e]),t.arguments[e].type="RasterFunctionTemplate"):e.toLowerCase()==="colormap"?(t.arguments[e].value=on(n[e]),t.arguments.ColorSchemeType.value=0):t.arguments[e].value=n[e];return t}function Ys(i,t){switch(t=t||{},i.type){case"raster-stretch":return rn(i,t);case"class-breaks":return sn(i,t);case"unique-value":return nn(i,t);case"raster-colormap":return an(i,t);case"vector-field":return en(i,t);case"raster-shaded-relief":return tn(i,t);case"flow":throw new Error("Unsupported rendering rule.")}}function mr(i){const t=i?.Raster??i?.raster;return t&&t.declaredClass==="esri.layers.support.RasterFunction"?mr(t.functionArguments):i}const lt={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function en(i,t){const n=new j;n.functionName="VectorFieldRenderer";const{dataType:e,bandNames:r}=t,o=e==="vector-uv";let l,u;if(r&&r.length===2){const f=r.map(h=>h.toLowerCase());l=f.indexOf("magnitude"),u=f.indexOf("direction")}l!==-1&&l!==null||(l=0,u=1);const p=i.rotationType==="arithmetic"?1:2,c=i.flowRepresentation==="flow-from"?0:1,m=i.visualVariables?i.visualVariables.find(f=>f.field==="Magnitude"):new Jt,d={magnitudeBandID:l,directionBandID:u,isUVComponents:o,referenceSystem:p,massFlowAngleRepresentation:c,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:Ks[i.style.toLowerCase().replace("-","_")],minimumMagnitude:m.minDataValue,maximumMagnitude:m.maxDataValue,minimumSymbolSize:m.minSize,maximumSymbolSize:m.maxSize};n.functionArguments=d;const g=Ie(n);return t.convertToRFT?j.fromJSON({rasterFunctionDefinition:g}):n}function tn(i,t){const n=t.convertToRFT;if(t.dataType!=="elevation"&&(t.dataType!=="generic"||t.bandCount!==1||t.pixelType!=="s16"&&t.pixelType!=="s32"&&t.pixelType!=="f32"&&t.pixelType!=="f64"))return new j;const e=new j;e.functionName="Hillshade";const r=i.hillshadeType==="traditional"?0:1,o=i.scalingType==="none"?1:3,l={HillshadeType:r,SlopeType:o,ZFactor:i.zFactor};return r===0&&(l.Azimuth=i.azimuth,l.Altitude=i.altitude),o===3&&(l.PSPower=i.pixelSizePower,l.PSZFactor=i.pixelSizeFactor),e.functionArguments=l,e.variableName="Raster",i.colorRamp&&(e.functionName="ShadedRelief",n?l.ColorRamp=Ki(i.colorRamp):l.Colormap=kt(i.colorRamp)),n?new j({rasterFunctionDefinition:Ie(e)}):e}function rn(i,t){const n=t.convertToRFT,e=new j;e.functionName="Stretch";const r=lt[gt.toJSON(i.stretchType)],o="u8",l=i.customStatistics?.map(p=>[p.min,p.max,p.avg??0,p.stddev??1]),u={StretchType:r,Statistics:l,DRA:i.dynamicRangeAdjustment,UseGamma:i.useGamma,Gamma:i.gamma,ComputeGamma:i.computeGamma};if(i.outputMin!=null&&(u.Min=i.outputMin),i.outputMax!=null&&(u.Max=i.outputMax),r===lt.standardDeviation?(u.NumberOfStandardDeviations=i.numberOfStandardDeviations,e.outputPixelType=o):r===lt.percentClip?(u.MinPercent=i.minPercent,u.MaxPercent=i.maxPercent,e.outputPixelType=o):r===lt.minMax?e.outputPixelType=o:r===lt.sigmoid&&(u.SigmoidStrengthLevel=i.sigmoidStrengthLevel),e.functionArguments=u,e.variableName="Raster",i.colorRamp){const p=i.colorRamp,c=new j;if(n)c.functionArguments={ColorRamp:Ki(p)};else{const m=ps(p,!0);if(m)c.functionArguments={colorRampName:m};else if(!t.convertColorRampToColormap||p.type!=="algorithmic"&&p.type!=="multipart"){const d=i.colorRamp.toJSON();d.type==="algorithmic"?d.algorithm=d.algorithm||"esriCIELabAlgorithm":d.type==="multipart"&&d.colorRamps?.length&&d.colorRamps.forEach(g=>g.algorithm=g.algorithm||"esriCIELabAlgorithm"),c.functionArguments={colorRamp:d}}else c.functionArguments={Colormap:kt(p)}}return c.variableName="Raster",c.functionName="Colormap",c.functionArguments.Raster=e,n?new j({rasterFunctionDefinition:Ie(c)}):c}return n?new j({rasterFunctionDefinition:Ie(e)}):e}function sn(i,t){const n=[],e=[],r=[],o=[],{pixelType:u,rasterAttributeTable:p}=t,c=p==null?null:p.features,m=dr(p);if(m&&c&&Array.isArray(c)&&i.classBreakInfos){i.classBreakInfos.forEach((w,b)=>{const R=w.symbol?.color;let N;R?.a&&w.minValue!=null&&w.maxValue!=null&&c.forEach(L=>{w.minValue!=null&&w.maxValue!=null&&(N=L.attributes[i.field],(N>=w.minValue&&N<w.maxValue||b===i.classBreakInfos.length-1&&N>=w.minValue)&&o.push([L.attributes[m],R.r,R.g,R.b]))})});const h=u?Vt(o,u):o,y=new j;return y.functionName="Colormap",y.functionArguments={},y.functionArguments.Colormap=h,y.variableName="Raster",t.convertToRFT?new j({rasterFunctionDefinition:Ie(y)}):y}i.classBreakInfos.forEach((h,y)=>{if(h.minValue==null||h.maxValue==null)return;const w=h.symbol&&h.symbol.color;w?.a?(y===0?n.push(h.minValue,h.maxValue+1e-4):n.push(h.minValue+1e-4,h.maxValue+1e-4),e.push(y),o.push([y,w.r,w.g,w.b])):r.push(h.minValue,h.maxValue)});const d=u?Vt(o,u):o,g=new j;g.functionName="Remap",g.functionArguments={InputRanges:n,OutputValues:e,NoDataRanges:r},g.variableName="Raster";const f=new j;return f.functionName="Colormap",f.functionArguments={Colormap:d,Raster:g},t.convertToRFT?new j({rasterFunctionDefinition:Ie(f)}):f}function Vt(i,t){const n=Qs.has(t)?Is(t):null;return n&&i.push([Math.floor(n[0]-1),0,0,0],[Math.ceil(n[1]+1),0,0,0]),i}function dr(i){if(i==null)return;const{fields:t}=i;return t?.find(e=>e?.name&&e.name.toLowerCase()==="value")?.name}function nn(i,t){const n=[],{pixelType:e,rasterAttributeTable:r}=t,o=r==null?null:r.features,l=dr(r),u=i.defaultSymbol?.color?.toRgb(),p=i.uniqueValueInfos;if(p)if(o){if(l){const d=new Map;p.forEach(f=>{const h=f.value,y=Ei(f);h!=null&&y?.a&&d.set(String(h),y.toRgb())});const g=i.field;g&&o.forEach(({attributes:f})=>{const h=String(f[g]),y=f[l],w=d.get(h);w?n.push([y,...w]):u&&n.push([y,...u])})}}else for(let d=0;d<p.length;d++){const g=p[d],f=Ei(g),h=+g.value;if(f?.a){if(isNaN(h))return null;n.push([h,f.r,f.g,f.b])}}const c=e?Vt(n,e):n,m=new j;return m.functionName="Colormap",m.functionArguments={},m.functionArguments.Colormap=c,m.variableName="Raster",t.convertToRFT?new j({rasterFunctionDefinition:Ie(m)}):m}function Ei(i){return i.symbol?.type==="polygon-3d"?i.symbol.symbolLayers?.find(t=>t.type==="fill")?.material?.color:i.symbol?.color}function an(i,t){const n=i.extractColormap();if(!n||n.length===0)return null;const{pixelType:e}=t,r=e?Vt(n,e):n,o=new j;return o.functionName="Colormap",o.functionArguments={},o.functionArguments.Colormap=r,t.convertToRFT?new j({rasterFunctionDefinition:Ie(o)}):o}function on(i){const t=[],n=[];return i.forEach(e=>{t.push(e[0]),n.push(cs([...e.slice(1),255]))}),{type:"RasterColormap",values:t,colors:n}}var pi;const st=Wi()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),xt=Wi()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});function ln(i){let t;switch(i?i.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;default:t="esriMosaicNone"}return xt.fromJSON(t)}let H=pi=class extends M{constructor(i){super(i),this.ascending=!0,this.itemRasterFunction=null,this.lockRasterIds=null,this.method="none",this.multidimensionalDefinition=null,this.objectIds=null,this.operation="first",this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(i,t){return t.ascending!=null?t.ascending:t.sortAscending==null||t.sortAscending}readMethod(i,t){return ln(t.mosaicMethod||t.defaultMosaicMethod)}writeMultidimensionalDefinition(i,t,n){i!=null&&(i=i.filter(({variableName:e,dimensionName:r})=>e&&e!=="*"||r)).length&&(t[n]=i.map(e=>e.toJSON()))}readOperation(i,t){const n=t.mosaicOperation,e=t.mosaicOperator?.toLowerCase(),r=n||(e?st.toJSON(e):null);return st.fromJSON(r)||"first"}castSortValue(i){return i==null||typeof i=="string"||typeof i=="number"?i:`${i}`}clone(){return new pi({ascending:this.ascending,itemRasterFunction:D(this.itemRasterFunction),lockRasterIds:D(this.lockRasterIds),method:this.method,multidimensionalDefinition:D(this.multidimensionalDefinition),objectIds:D(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:D(this.viewpoint),where:this.where})}};s([a({type:Boolean,json:{write:!0}})],H.prototype,"ascending",void 0),s([P("ascending",["ascending","sortAscending"])],H.prototype,"readAscending",null),s([a({type:j,json:{name:"itemRenderingRule",write:!0}})],H.prototype,"itemRasterFunction",void 0),s([a({type:[X],json:{write:{overridePolicy(){return{enabled:this.method==="lock-raster"}}}}})],H.prototype,"lockRasterIds",void 0),s([a({type:xt.apiValues,json:{type:xt.jsonValues,write:{target:"mosaicMethod",writer:xt.write,isRequired:!0}}})],H.prototype,"method",void 0),s([P("method",["mosaicMethod","defaultMosaicMethod"])],H.prototype,"readMethod",null),s([a({type:[Ai],json:{write:!0}})],H.prototype,"multidimensionalDefinition",void 0),s([x("multidimensionalDefinition")],H.prototype,"writeMultidimensionalDefinition",null),s([a({type:[X],json:{name:"fids",write:!0}})],H.prototype,"objectIds",void 0),s([a({type:st.apiValues,json:{type:st.jsonValues,read:{reader:st.read},write:{target:"mosaicOperation",writer:st.write}}})],H.prototype,"operation",void 0),s([P("operation",["mosaicOperation","mosaicOperator"])],H.prototype,"readOperation",null),s([a({type:String,json:{write:{overridePolicy(){return{enabled:this.method==="attribute"}}}}})],H.prototype,"sortField",void 0),s([a({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:this.method==="attribute",allowNull:!0}}}}})],H.prototype,"sortValue",void 0),s([xr("sortValue")],H.prototype,"castSortValue",null),s([a({type:F,json:{write:!0}})],H.prototype,"viewpoint",void 0),s([a({type:String,json:{write:!0}})],H.prototype,"where",void 0),H=pi=s([I("esri.layers.support.MosaicRule")],H);const re=H;let B=class extends M{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(t,n,e){this.layer.version<10.3||(n[e]=t)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(t,n,e){this.format&&this.format.toLowerCase().includes("jpg")&&t!=null&&(n[e]=t)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(t,n,e){this.format==="lerc"&&t!=null&&(n[e]=t)}get format(){return this.layer.renderer?.type==="vector-field"?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}get pixelType(){const{layer:t}=this;return t.pixelType!==t.serviceRasterInfo.pixelType?t.pixelType:void 0}writeLercVersion(t,n,e){this.format==="lerc"&&this.layer.version>=10.5&&(n[e]=t)}get version(){const t=this.layer;return t.commitProperty("bandIds"),t.commitProperty("format"),t.commitProperty("compressionQuality"),t.commitProperty("compressionTolerance"),t.commitProperty("interpolation"),t.commitProperty("noData"),t.commitProperty("noDataInterpretation"),t.commitProperty("mosaicRule"),t.commitProperty("rasterFunction"),t.commitProperty("adjustAspectRatio"),t.commitProperty("pixelFilter"),t.commitProperty("pixelType"),t.commitProperty("definitionExpression"),t.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(t){this._set("version",t)}get mosaicRule(){const t=this.layer;let n=t.mosaicRule;const e=t.definitionExpression;return n?e&&e!==n.where&&(n=n.clone(),n.where=e):e&&(n=new re({where:e})),n}get rasterFunction(){const t=this.layer;let{rasterFunction:n}=t;const e=t.pixelFilter,r=!t.format||t.format.includes("jpg")||t.format.includes("png");n=this._addResampleRasterFunction(n);const o=t.multidimensionalSubset?.areaOfInterest;return o&&(n=un(n,o)),r&&!e&&t.renderer?.type!=="vector-field"&&(n=this.combineRendererWithRenderingRule(n)),n}combineRendererWithRenderingRule(t){const n=this.layer,{rasterInfo:e,renderer:r}=n;return t=t||n.rasterFunction,!r||!pr(r)?t:ui(Ys(r,{rasterAttributeTable:e.attributeTable,pixelType:e.pixelType,dataType:e.dataType,bandNames:e.bandInfos.map(({name:o})=>o),convertColorRampToColormap:n.version<10.6,convertToRFT:!!t?.rasterFunctionDefinition,bandCount:e.bandCount}),t)}_addResampleRasterFunction(t){if(this.layer.renderer?.type!=="vector-field"||t?.functionName==="Resample")return t;const n=this.layer.serviceDataType==="esriImageServiceDataTypeVector-UV"?7:10,e=this.layer.serviceRasterInfo.pixelSize;let r=new j({functionName:"Resample",functionArguments:{ResamplingType:n,InputCellSize:e}});return r=t?.rasterFunctionDefinition?new j({rasterFunctionDefinition:Ie(r)}):r,ui(r,t)}};function un(i,t){const n=new j({functionName:"Clip",functionArguments:{ClippingGeometry:t.toJSON(),ClippingType:1}});return ui(n,i)}s([a()],B.prototype,"layer",void 0),s([a({json:{write:!0}})],B.prototype,"adjustAspectRatio",null),s([x("adjustAspectRatio")],B.prototype,"writeAdjustAspectRatio",null),s([a({json:{write:!0}})],B.prototype,"bandIds",null),s([a({json:{write:!0}})],B.prototype,"compression",void 0),s([a({json:{write:!0}})],B.prototype,"compressionQuality",null),s([x("compressionQuality")],B.prototype,"writeCompressionQuality",null),s([a({json:{write:!0}})],B.prototype,"compressionTolerance",null),s([x("compressionTolerance")],B.prototype,"writeCompressionTolerance",null),s([a({json:{write:!0}})],B.prototype,"format",null),s([a({type:String,json:{read:{reader:Ve.read},write:{writer:Ve.write}}})],B.prototype,"interpolation",null),s([a({json:{write:!0}})],B.prototype,"noData",null),s([a({type:String,json:{read:{reader:ft.read},write:{writer:ft.write}}})],B.prototype,"noDataInterpretation",null),s([a({type:we.apiValues,json:{read:we.read,write:we.write}})],B.prototype,"pixelType",null),s([a({json:{write:!0}})],B.prototype,"lercVersion",void 0),s([x("lercVersion")],B.prototype,"writeLercVersion",null),s([a({type:Number})],B.prototype,"version",null),s([a({json:{write:!0}})],B.prototype,"mosaicRule",null),s([a({json:{write:!0,name:"renderingRule"}})],B.prototype,"rasterFunction",null),B=s([I("esri.layers.support.ExportImageServiceParameters")],B);var ci;const pn={base:jr,key:"type",typeMap:{extent:He,polygon:Ut}};let Ze=ci=class extends M{constructor(i){super(i),this.areaOfInterest=null,this.subsetDefinitions=null}get dimensions(){const{subsetDefinitions:i}=this;if(i==null||i.length===0)return[];const t=new Map;i.forEach(e=>{if(!e.dimensionName)return;let r,o;if(Array.isArray(e.values[0])){const l=e.values;r=l[0][0],o=l[e.values.length-1][1]}else{const l=e.values;r=l[0],o=l[e.values.length-1]}if(t.has(e.dimensionName)){const l=t.get(e.dimensionName);l[0]=Math.min(r,l[0]),l[1]=Math.max(o,l[1])}else t.set(e.dimensionName,[r,o])});const n=[];for(const e of t)n.push({name:e[0],extent:e[1]});return n}get variables(){const{subsetDefinitions:i}=this;if(i==null||i.length===0)return[];const t=new Set;return i.forEach(n=>{n.variableName&&t.add(n.variableName)}),[...t]}clone(){const i=this.subsetDefinitions?.map(n=>n.clone()),t=this.areaOfInterest?this.areaOfInterest.clone():this.areaOfInterest;return new ci({areaOfInterest:t,subsetDefinitions:i})}};s([a({types:pn,json:{read:se,write:!0}})],Ze.prototype,"areaOfInterest",void 0),s([a({readOnly:!0})],Ze.prototype,"dimensions",null),s([a({readOnly:!0})],Ze.prototype,"variables",null),s([a({type:[Ai],json:{write:!0}})],Ze.prototype,"subsetDefinitions",void 0),Ze=ci=s([I("esri.layers.support.MultidimensionalSubset")],Ze);const cn=Ze;let mn=class{constructor(){this._workerThread=null,this._destroyed=!1}async initialize(){const t=await As("RasterWorker");this._destroyed?t.close():this._workerThread=t}destroy(){this._destroyed=!0,this._workerThread&&(this._workerThread.close(),this._workerThread=null)}async convertVectorFieldData(t,n){if(!this._workerThread)throw new v("raster-jobhandler:no-connection","no available worker connection");const e=await this._workerThread.invoke("convertVectorFieldData",{pixelBlock:t.pixelBlock.toJSON(),type:t.dataType},n);return e?new ye(e):null}computeStatisticsHistograms(t,n){if(!this._workerThread)throw new v("raster-jobhandler:no-connection","no available worker connection");return this._workerThread.invoke("computeStatisticsHistograms",{pixelBlock:t.pixelBlock.toJSON()},n)}async decode(t,n){if(!this._workerThread)throw new v("raster-jobhandler:no-connection","no available worker connection");const e=await this._workerThread.invoke("decode",t,n);return e?new ye(e):null}async symbolize(t,n){if(!this._workerThread)throw new v("raster-jobhandler:no-connection","no available worker connection");const e={extent:t.extent?.toJSON(),pixelBlock:t.pixelBlock?.toJSON(),simpleStretchParams:t.simpleStretchParams,bandIds:t.bandIds},r=await this._workerThread.invoke("symbolize",e,n);return r?new ye(r):null}async updateSymbolizer(t,n){if(!this._workerThread)throw new v("raster-jobhandler:no-connection","no available worker connection");const e=t?.rendererJSON?.histograms;await Promise.all(this._workerThread.broadcast("updateSymbolizer",{symbolizerJSON:t.toJSON(),histograms:e},n))}async updateRasterFunction(t,n){if(!this._workerThread)throw new v("raster-jobhandler:no-connection","no available worker connection");await Promise.all(this._workerThread.broadcast("updateRasterFunction",{rasterFunctionJSON:t.toJSON()},n))}async process(t,n){if(!this._workerThread)throw new v("raster-jobhandler:no-connection","no available worker connection");const e=await this._workerThread.invoke("process",{extent:t.extent?.toJSON(),primaryPixelSizes:t.primaryPixelSizes?.map(r=>r!=null?r.toJSON():null),primaryPixelBlocks:t.primaryPixelBlocks.map(r=>r!=null?r.toJSON():null),primaryRasterIds:t.primaryRasterIds},n);return e?new ye(e):null}async stretch(t,n){if(!this._workerThread)throw new v("raster-jobhandler:no-connection","no available worker connection");if(!t?.pixelBlock)return null;const e={srcPixelBlock:t.pixelBlock.toJSON(),stretchParams:t.stretchParams},r=await this._workerThread.invoke("stretch",e,n);return r?new ye(r):null}async split(t,n){if(!this._workerThread)throw new v("raster-jobhandler:no-connection","no available worker connection");if(!t?.pixelBlock)return null;const e={srcPixelBlock:t.pixelBlock.toJSON(),tileSize:t.tileSize,maximumPyramidLevel:t.maximumPyramidLevel,useBilinear:t.useBilinear},r=await this._workerThread.invoke("split",e,n);return r&&r.forEach((o,l)=>{r.set(l,o?ye.fromJSON(o):null)}),r}async clipTile(t,n){if(!this._workerThread)throw new v("raster-jobhandler:no-connection","no available worker connection");if(!t?.pixelBlock)return null;const e={...t,pixelBlock:t.pixelBlock.toJSON()},r=await this._workerThread.invoke("clipTile",e,n);return r?ye.fromJSON(r):null}async estimateStatisticsHistograms(t,n){if(!this._workerThread)throw new v("raster-jobhandler:no-connection","no available worker connection");if(!t?.pixelBlock)return null;const e={srcPixelBlock:t.pixelBlock.toJSON()};return await this._workerThread.invoke("estimateStatisticsHistograms",e,n)}async mosaicAndTransform(t,n){if(!this._workerThread)throw new v("raster-jobhandler:no-connection","no available worker connection");if(!t?.srcPixelBlocks?.length)return{pixelBlock:null};const e={...t,srcPixelBlocks:t.srcPixelBlocks.map(o=>o!=null?o.toJSON():null)},r=await this._workerThread.invoke("mosaicAndTransform",e,n);return{pixelBlock:r.pixelBlock?new ye(r.pixelBlock):null,localNorthDirections:r.localNorthDirections}}async createFlowMesh(t,n){if(!this._workerThread)throw new v("raster-jobhandler:no-connection","no available worker connection");const e={buffer:t.flowData.data.buffer,maskBuffer:t.flowData.mask.buffer,width:t.flowData.width,height:t.flowData.height},{meshType:r,simulationSettings:o}=t,l=await this._workerThread.invoke("createFlowMesh",{meshType:r,flowData:e,simulationSettings:o},{...n,transferList:[e.buffer,e.maskBuffer]});return{vertexData:new Float32Array(l.vertexBuffer),indexData:new Uint32Array(l.indexBuffer)}}getProjectionOffsetGrid(t,n){if(!this._workerThread)throw new v("raster-jobhandler:no-connection","no available worker connection");const e=t.datumTransformation!=null?t.datumTransformation.steps.map(l=>({wkid:l.wkid,wkt:l.wkt,isInverse:l.isInverse})):null,r=t.rasterTransform!=null?t.rasterTransform.toJSON():null,o={projectedExtent:t.projectedExtent.toJSON(),srcBufferExtent:t.srcBufferExtent.toJSON(),pixelSize:t.pixelSize,hasWrapAround:t.hasWrapAround,spacing:t.spacing,datumTransformationSteps:e,rasterTransform:r,isAdaptive:t.isAdaptive,includeGCSGrid:t.includeGCSGrid};return this._workerThread.invoke("getProjectionOffsetGrid",o,n)}};var mi;const bt=new at({flow_from:"flow-from",flow_to:"flow-to"});let J=mi=class extends tr(M){constructor(i){super(i),this.density=.8,this.color=new W([255,255,255,1]),this.maxPathLength=200,this.trailWidth=1.5,this.flowSpeed=10,this.trailLength=100,this.smoothing=0,this.flowRepresentation="flow-from",this.type="flow",this.authoringInfo=null,this.legendOptions=null,this.trailCap="butt",this.background="none"}clone(){const{density:i,maxPathLength:t,trailWidth:n,flowSpeed:e,trailLength:r,smoothing:o,flowRepresentation:l,trailCap:u,background:p}=this,c=this.color.clone(),m=(this.visualVariables||[]).map(f=>f.clone()),d=this.authoringInfo?.clone(),g=this.legendOptions?.clone();return new mi({density:i,color:c,maxPathLength:t,trailWidth:n,flowSpeed:e,trailLength:r,trailCap:u,background:p,smoothing:o,flowRepresentation:l,visualVariables:m,authoringInfo:d,legendOptions:g})}getSymbol(i,t){}async getSymbolAsync(i,t){}getSymbols(){return[]}};s([a({type:Number,json:{write:!0}})],J.prototype,"density",void 0),s([a({type:W,json:{write:{allowNull:!0}}})],J.prototype,"color",void 0),s([a({type:Number,cast:Xt,json:{write:!0}})],J.prototype,"maxPathLength",void 0),s([a({type:Number,cast:Xt,json:{write:!0}})],J.prototype,"trailWidth",void 0),s([a({type:Number,json:{write:!0}})],J.prototype,"flowSpeed",void 0),s([a({type:Number,json:{write:!0}})],J.prototype,"trailLength",void 0),s([a({type:Number,cast:Xt,json:{write:!1}})],J.prototype,"smoothing",void 0),s([a({type:bt.apiValues,json:{type:bt.jsonValues,read:{reader:bt.read},write:{writer:bt.write}}})],J.prototype,"flowRepresentation",void 0),s([$e({flowRenderer:"flow"})],J.prototype,"type",void 0),s([a({type:ir,json:{write:!0}})],J.prototype,"authoringInfo",void 0),s([a({type:xs,json:{write:!0}})],J.prototype,"legendOptions",void 0),s([a({type:String,json:{write:!0}})],J.prototype,"trailCap",void 0),s([a({type:String,json:{write:!0}})],J.prototype,"background",void 0),J=mi=s([I("esri.renderers.FlowRenderer")],J);const yr=J;let Xe=class extends M{constructor(){super(...arguments),this.value=null,this.label=null,this.color=null}};s([a({type:Number,json:{write:{isRequired:!0}}})],Xe.prototype,"value",void 0),s([a({type:String,json:{write:!0}})],Xe.prototype,"label",void 0),s([a({type:W,json:{type:[X],write:{isRequired:!0}}})],Xe.prototype,"color",void 0),Xe=s([I("esri.renderers.support.ColormapInfo")],Xe);const hr=Xe;var ut;let pt=ut=class extends M{constructor(i){super(i),this.colormapInfos=null,this.type="raster-colormap"}static createFromColormap(i,t){if(!i)return null;const n=i[0].length===5,e=[...i].sort((r,o)=>r[0]-o[0]).map(r=>hr.fromJSON({value:r[0],color:n?r.slice(1,5):r.slice(1,4).concat([255]),label:t?t[r[0]]??"":r[0]}));return new ut({colormapInfos:e})}static createFromColorramp(i){const t=kt(i);return ut.createFromColormap(t)}clone(){return new ut({colormapInfos:this.colormapInfos.map(i=>i.toJSON())})}extractColormap(){return this.colormapInfos.map(({value:i,color:t})=>[i,t.r,t.g,t.b,t.a>1?t.a:255*t.a&255]).sort((i,t)=>i[0]-t[0])}};s([a({type:[hr],json:{write:{isRequired:!0}}})],pt.prototype,"colormapInfos",void 0),s([$e({rasterColormap:"raster-colormap"}),a({json:{write:{isRequired:!0}}})],pt.prototype,"type",void 0),pt=ut=s([I("esri.renderers.RasterColormapRenderer")],pt);const Ni=pt;var di;let te=di=class extends M{constructor(i){super(i),this.altitude=45,this.azimuth=315,this.colorRamp=null,this.hillshadeType="traditional",this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.scalingType="none",this.type="raster-shaded-relief",this.zFactor=1}readColorRamp(i){return ar(i)}clone(){return new di({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,scalingType:this.scalingType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,colorRamp:D(this.colorRamp)})}};s([a({type:Number,json:{write:{isRequired:!0}}})],te.prototype,"altitude",void 0),s([a({type:Number,json:{write:{isRequired:!0}}})],te.prototype,"azimuth",void 0),s([a({types:nr,json:{write:!0}})],te.prototype,"colorRamp",void 0),s([P("colorRamp")],te.prototype,"readColorRamp",null),s([a({type:["traditional","multi-directional"],json:{write:{isRequired:!0}}})],te.prototype,"hillshadeType",void 0),s([a({type:Number,json:{write:!0}})],te.prototype,"pixelSizePower",void 0),s([a({type:Number,json:{write:!0}})],te.prototype,"pixelSizeFactor",void 0),s([a({type:["none","adjusted"],json:{write:{isRequired:!0}}})],te.prototype,"scalingType",void 0),s([$e({rasterShadedRelief:"raster-shaded-relief"}),a({json:{write:{isRequired:!0}}})],te.prototype,"type",void 0),s([a({type:Number,json:{write:{isRequired:!0}}})],te.prototype,"zFactor",void 0),te=di=s([I("esri.renderers.RasterShadedReliefRenderer")],te);const gr=te;var yi;let O=yi=class extends M{constructor(i){super(i),this.colorRamp=null,this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.maxPercent=null,this.minPercent=null,this.numberOfStandardDeviations=null,this.outputMax=null,this.outputMin=null,this.sigmoidStrengthLevel=null,this.histograms=null,this.useGamma=!1,this.stretchType="none",this.type="raster-stretch"}readColorRamp(i){if(i)return ar(i)}get statistics(){return this._get("statistics")}set statistics(i){Tr(ni.getLogger(this),"statistics",{replacement:"customStatistics",version:"4.31",warnOnce:!0}),this._set("statistics",i)}get customStatistics(){const i=this.statistics;return i&&Array.isArray(i[0])?i.map(t=>({min:t[0],max:t[1],avg:t[2],stddev:t[3]})):i}set customStatistics(i){this._set("statistics",i?.map(t=>[t.min,t.max,t.avg??0,t.stddev??1]))}readCustomStatistics(i){return i?.map(t=>({min:t[0],max:t[1],avg:t[2],stddev:t[3]}))}writeCustomStatistics(i,t,n){i?.length&&(t[n]=i.map(e=>[e.min,e.max,e.avg??0,e.stddev??1]))}readStretchType(i,t){let n=t.stretchType;return typeof n=="number"&&(n=ms[n]),gt.read(n)}clone(){const i=new yi({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,gamma:D(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,colorRamp:D(this.colorRamp),histograms:D(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment});return i._set("statistics",D(this.statistics)),i}};s([a({types:nr,json:{write:!0}})],O.prototype,"colorRamp",void 0),s([P("colorRamp")],O.prototype,"readColorRamp",null),s([a({type:Boolean,json:{write:!0}})],O.prototype,"computeGamma",void 0),s([a({type:Boolean,json:{write:{target:"dra"},read:{source:"dra"}}})],O.prototype,"dynamicRangeAdjustment",void 0),s([a({type:[Number],json:{write:!0}})],O.prototype,"gamma",void 0),s([a({type:Number,json:{write:!0}})],O.prototype,"maxPercent",void 0),s([a({type:Number,json:{write:!0}})],O.prototype,"minPercent",void 0),s([a({type:Number,json:{write:!0}})],O.prototype,"numberOfStandardDeviations",void 0),s([a({type:Number,json:{read:{source:"max"},write:{target:"max"}}})],O.prototype,"outputMax",void 0),s([a({type:Number,json:{read:{source:"min"},write:{target:"min"}}})],O.prototype,"outputMin",void 0),s([a({type:Number,json:{write:!0}})],O.prototype,"sigmoidStrengthLevel",void 0),s([a({})],O.prototype,"statistics",null),s([a()],O.prototype,"histograms",void 0),s([a({json:{type:[[Number]],name:"statistics",write:!0}})],O.prototype,"customStatistics",null),s([P("customStatistics")],O.prototype,"readCustomStatistics",null),s([x("customStatistics")],O.prototype,"writeCustomStatistics",null),s([a({type:Boolean,json:{write:!0}})],O.prototype,"useGamma",void 0),s([a({type:gt.apiValues,json:{type:gt.jsonValues,write:gt.write}})],O.prototype,"stretchType",void 0),s([P("stretchType",["stretchType"])],O.prototype,"readStretchType",null),s([$e({rasterStretch:"raster-stretch"})],O.prototype,"type",void 0),O=yi=s([I("esri.renderers.RasterStretchRenderer")],O);const Fi=O;var hi;const $i=new Set(["esriMetersPerSecond","esriKilometersPerHour","esriKnots","esriFeetPerSecond","esriMilesPerHour"]),St=new at({beaufort_ft:"beaufort-ft",beaufort_km:"beaufort-km",beaufort_kn:"beaufort-kn",beaufort_m:"beaufort-m",beaufort_mi:"beaufort-mi",classified_arrow:"classified-arrow",ocean_current_kn:"ocean-current-kn",ocean_current_m:"ocean-current-m",simple_scalar:"simple-scalar",single_arrow:"single-arrow",wind_speed:"wind-barb"}),Rt=new at({flow_from:"flow-from",flow_to:"flow-to"});let Z=hi=class extends tr(M){constructor(i){super(i),this.attributeField="Magnitude",this.flowRepresentation="flow-from",this.rotationType="arithmetic",this.style="single-arrow",this.symbolTileSize=50,this.type="vector-field"}readInputUnit(i,t){return $i.has(i)?Fe.fromJSON(i):null}readOutputUnit(i,t){return $i.has(i)?Fe.fromJSON(i):null}get styleRenderer(){const i=this.style,t=this.attributeField,n=this._createStyleRenderer(i);return n.field=t,n}get sizeVariables(){const i=[];if(this.visualVariables)for(const t of this.visualVariables)t.type==="size"&&i.push(t);if(i.length===0){const t=new Jt({field:"Magnitude",minSize:.2*this.symbolTileSize,maxSize:.8*this.symbolTileSize});this.visualVariables?this.visualVariables.push(t):this._set("visualVariables",[t]),i.push(t)}return i}get rotationVariables(){const i=[];if(this.visualVariables)for(const t of this.visualVariables)t.type==="rotation"&&i.push(t);if(i.length===0){const t=new rr({field:"Direction",rotationType:this.rotationType});this.visualVariables?this.visualVariables.push(t):this._set("visualVariables",[t]),i.push(t)}return i}clone(){return new hi({attributeField:this.attributeField,flowRepresentation:this.flowRepresentation,rotationType:this.rotationType,symbolTileSize:this.symbolTileSize,style:this.style,visualVariables:D(this.visualVariables),inputUnit:this.inputUnit,outputUnit:this.outputUnit})}async getGraphicsFromPixelData(i,t=!1,n=[]){const e=new Array,r=vs(this.inputUnit,this.outputUnit),o=this.rotationVariables[0]?.rotationType||this.rotationType,l=t?bs(i.pixelBlock,"vector-uv",o,r):Ss(i.pixelBlock,"vector-magdir",r);if(l==null)return e;const u=i.extent,p=l.mask!=null&&l.mask.length>0;let c=0;const m=(u.xmax-u.xmin)/l.width,d=(u.ymax-u.ymin)/l.height;for(let g=0;g<l.height;g++)for(let f=0;f<l.width;f++,c++){let h=new F({x:u.xmin+f*m+m/2,y:u.ymax-g*d-d/2,spatialReference:u.spatialReference});h=(await ke(h))[0];const y=n.some(w=>w.intersects(h));if((!p||l.mask[c])&&!y){const w={Magnitude:l.pixels[0][c],Direction:l.pixels[1][c]},b=new Qi({geometry:new F({x:h.x,y:h.y,spatialReference:u.spatialReference}),attributes:w});b.symbol=this._getVisualVariablesAppliedSymbol(b),e.push(b)}}return e}getSymbol(i,t){}async getSymbolAsync(i,t){}getSymbols(){return[]}getClassBreakInfos(){return this.styleRenderer?.classBreakInfos}getDefaultSymbol(){return this.styleRenderer?.defaultSymbol}_getDefaultSymbol(i){return new Cr({path:"M14,32 14,18 9,23 16,3 22,23 17,18 17,32 z",outline:new Nr({width:0}),size:20,color:i||new W([0,92,230])})}_getVisualVariablesAppliedSymbol(i){if(!i)return;const t=this.styleRenderer?.getSymbol(i)?.clone(),n=this.sizeVariables,e=this.rotationVariables;if(n&&n.length&&this.sizeVariables.forEach(r=>Cs(t,js([r],i))),e&&e.length){const r=this.flowRepresentation==="flow-to"==(this.style==="ocean-current-kn"||this.style==="ocean-current-m")?0:180;i.attributes.Direction=i.attributes.Direction+r,this.rotationVariables.forEach(o=>Ns(t,Ts(o,i),o.axis))}return t}_createStyleRenderer(i){let t={defaultSymbol:this._getDefaultSymbol(),classBreakInfos:[]};switch(i){case"single-arrow":t=this._createSingleArrowRenderer();break;case"beaufort-kn":t=this._createBeaufortKnotsRenderer();break;case"beaufort-m":t=this._createBeaufortMeterRenderer();break;case"beaufort-ft":t=this._createBeaufortFeetRenderer();break;case"beaufort-mi":t=this._createBeaufortMilesRenderer();break;case"beaufort-km":t=this._createBeaufortKilometersRenderer();break;case"ocean-current-m":t=this._createCurrentMeterRenderer();break;case"ocean-current-kn":t=this._createCurrentKnotsRenderer();break;case"simple-scalar":t=this._createSimpleScalarRenderer();break;case"wind-barb":t=this._createWindBarbsRenderer();break;case"classified-arrow":t=this._createClassifiedArrowRenderer()}return new Zt(t)}_createSingleArrowRenderer(){return{defaultSymbol:this._getDefaultSymbol()}}_createBeaufortKnotsRenderer(){const i=[0,1,3,6,10,16,21,27,33,40,47,55,63],t=[[40,146,199],[89,162,186],[129,179,171],[160,194,155],[191,212,138],[218,230,119],[250,250,100],[252,213,83],[252,179,102],[250,141,52],[247,110,42],[240,71,29]];return{defaultSymbol:this._getDefaultSymbol(new W([214,47,39])),classBreakInfos:this._getClassBreaks(i,t)}}_createBeaufortMeterRenderer(){const i=[0,.2,1.8,3.3,5.4,8.5,11,14.1,17.2,20.8,24.4,28.6,32.7],t=[[69,117,181],[101,137,184],[132,158,186],[162,180,189],[192,204,190],[222,227,191],[255,255,191],[255,220,161],[250,185,132],[245,152,105],[237,117,81],[232,21,21]];return{defaultSymbol:this._getDefaultSymbol(new W([214,47,39])),classBreakInfos:this._getClassBreaks(i,t)}}_createBeaufortFeetRenderer(){const i=this._getDefaultSymbol(new W([214,47,39]));let t=[0,.2,1.8,3.3,5.4,8.5,11,14.1,17.2,20.8,24.4,28.6,32.7];const n=[[69,117,181],[101,137,184],[132,158,186],[162,180,189],[192,204,190],[222,227,191],[255,255,191],[255,220,161],[250,185,132],[245,152,105],[237,117,81],[232,21,21]],e=3.28084;return t=t.map(r=>r*e),{defaultSymbol:i,classBreakInfos:this._getClassBreaks(t,n)}}_createBeaufortMilesRenderer(){const i=this._getDefaultSymbol(new W([214,47,39]));let t=[0,.2,1.8,3.3,5.4,8.5,11,14.1,17.2,20.8,24.4,28.6,32.7];const n=[[69,117,181],[101,137,184],[132,158,186],[162,180,189],[192,204,190],[222,227,191],[255,255,191],[255,220,161],[250,185,132],[245,152,105],[237,117,81],[232,21,21]],e=2.23694;return t=t.map(r=>r*e),{defaultSymbol:i,classBreakInfos:this._getClassBreaks(t,n)}}_createBeaufortKilometersRenderer(){const i=this._getDefaultSymbol(new W([214,47,39]));let t=[0,.2,1.8,3.3,5.4,8.5,11,14.1,17.2,20.8,24.4,28.6,32.7];const n=[[69,117,181],[101,137,184],[132,158,186],[162,180,189],[192,204,190],[222,227,191],[255,255,191],[255,220,161],[250,185,132],[245,152,105],[237,117,81],[232,21,21]],e=3.6;return t=t.map(r=>r*e),{defaultSymbol:i,classBreakInfos:this._getClassBreaks(t,n)}}_createCurrentMeterRenderer(){const i=[0,.5,1,1.5,2],t=[[78,26,153],[179,27,26],[202,128,26],[177,177,177]];return{defaultSymbol:this._getDefaultSymbol(new W([177,177,177])),classBreakInfos:this._getClassBreaks(i,t)}}_createCurrentKnotsRenderer(){const i=[0,.25,.5,1,1.5,2,2.5,3,3.5,4],t=[[0,0,0],[0,37,100],[78,26,153],[151,0,100],[179,27,26],[177,78,26],[202,128,26],[177,179,52],[177,177,177]];return{defaultSymbol:this._getDefaultSymbol(new W([177,177,177])),classBreakInfos:this._getClassBreaks(i,t)}}_createClassifiedArrowRenderer(){const i=this._getDefaultSymbol(new W([56,168,0]));let t=[0,1e-6,3.5,7,10.5,14];if(this.sizeVariables?.length){const e=this.sizeVariables[0].minDataValue,r=this.sizeVariables[0].maxDataValue;if(e&&r){const o=(r-e)/5;t=Array.from(Array(6).keys()).map(l=>e+o*l)}}const n=[[56,168,0],[139,309,0],[255,255,0],[255,128,0],[255,0,0]];return{defaultSymbol:i,classBreakInfos:this._getClassBreaks(t,n)}}_createSimpleScalarRenderer(){return{defaultSymbol:Yt.fromJSON({imageData:"iVBORw0KGgoAAAANSUhEUgAAACsAAAArCAQAAABLVLlLAAAABGdBTUEAAYagMeiWXwAAAAJiS0dEAACqjSMyAAAACXBIWXMAAABIAAAASABGyWs+AAAC3ElEQVRIx9XXvW4cVRQH8N982btpsIREJECyiCXsxX4DKh6AliqGKCBBE2SlwlHgAbBD/AKmyEYUeQ1KahPZSZQvBCkQLTHZ7KGY8Xodz4w3a1NwbzVzz/znfJ//zbStVC5q3icKak9GAs2QIdDx3PtW/S011NW3p+M5Eomh11ipTIKe6+4LQzHaQ+G+63pIZNJJQXMpljwTwj1brpgx5w1zZlyx5Z4QnllEIm2xeeSUHBf0hV0bejo1Uh09G3aFvgXk7cCJFBc9EdaRVuHJJaOdKyTV2TVhYLMduNR0Q9gxL5GaaTDw8GzejrDRBpxWoGsySRW0dttKuattwNkIlFw2YXgzOdYq4Ox49PlM+JrKd5OusjTWhBuVxUfMX/KXXZ3WEmkuqa67wspR4BTbwtKr/5u4fFgStse/T7EifFPnnYl9zPq4vmUOPrRndgoHjDti1gOPqlyXoifcRNGQzUd31lDyfHmob1Gp35vSr+P6vilcQ5Egtyd8YF/ySg9NhPM+9M/IOaHwp5+PSZayXTvCogEUwlatC3J8LLwYtcWB8EuDXQVuCkV5/B4eNHb7wGBs87LBDS+xjdVSn09wq1G8dFM+9tSUhIGneLvUdniKxKpTYljCpu3j7rVWlHj/P23v4NPGUEyeCQnexe9lJjzEQqMjJs+EzNAX6B98dBZVRmroJx95x/A/6gln18EyfCUsl+qdXb/tjvfbw+mwforpUOBz4XLVoBwAn3aWnfeH246NyBXhrq7TTN5lNSP9RkU+puUJm3W2Tsdq0nZWM07srk7MwQrZSRysjjGWBLRJNsNbfj2JMR4AbxpU1XLAb9Mxfpsq5EjMuuiR8L0JiHOOBX3hiUvOmavN0nMueSzcceFk0BK4pMqLo7vDD1Z0qrtDx7Itt4Xwm9UqbMmk8S0Dtuzb2pvOU99Z1nLTOfleNmvfZfP2pYZmPfajwosKdDBNpacNpVGGsWX9CyDI8Xq/Sj6QAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDE0LTExLTEwVDAzOjE3OjU4LTA1OjAwF+tHyQAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxNC0xMS0xMFQwMzoxNzo1OC0wNTowMGa2/3UAAAAASUVORK5CYII=",height:20,width:20,type:"esriPMS",angle:0})}}_createWindBarbsRenderer(){const i=Array.from(Array(31).keys()).map(r=>5*r),t=[{range:"0-5",path:"M20 20 M5 20 A15 15 0 1 0 35 20 A15 15 0 1 0 5 20 M20 20 M10 20 A10 10 0 1 0 30 20 A10 10 0 1 0 10 20",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTIwIDIwIE01IDIwIEExNSAxNSAwIDEgMCAzNSAyMCBBMTUgMTUgMCAxIDAgNSAyMCBNMjAgMjAgTTEwIDIwIEExMCAxMCAwIDEgMCAzMCAyMCBBMTAgMTAgMCAxIDAgMTAgMjAiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"5-10",path:"M25 0 L25 40 M25 35 L17.5 37.5",imageData:"PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNyA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTTI1IDM1IEwxNy41IDM3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"10-15",path:"M25 0 L25 40 L10 45 L25 40",imageData:"PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNyA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTDEwIDQ1IEwyNSA0MCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"15-20",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L17.5 37.5",imageData:"PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjEyIDAgMTUgNDUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxNy41IDM3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"20-25",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L10 40",imageData:"PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNiA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTDEwIDQ1IEwyNSA0MCBNMjUgMzUgTDEwIDQwIiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+"},{range:"25-30",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L17.5 32.5",imageData:"PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNiA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTDEwIDQ1IEwyNSA0MCBNMjUgMzUgTDEwIDQwIEwyNSAzNSBNMjUgMzAgTDE3LjUgMzIuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"30-35",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"35-40",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L17.5 27.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxNy41IDI3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"40-45",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"45-50",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L17.5 22.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxNy41IDIyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"50-55",path:"M25 0 L25 40 L10 40 L25 35",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"55-60",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L17.5 32.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxNy41IDMyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"60-65",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"65-70",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L17.5 27.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxNy41IDI3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"70-75",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"75-80",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L17.5 22.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxNy41IDIyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"80-85",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"85-90",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25 L25 20 M25 15 L17.5 17.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSBMMjUgMjAgTTI1IDE1IEwxNy41IDE3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"90-95",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25 L25 20 M25 15 L10 20",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSBMMjUgMjAgTTI1IDE1IEwxMCAyMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"95-100",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25 L25 20 M25 15 L10 20 L25 15 M25 10 L17.5 12.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSBMMjUgMjAgTTI1IDE1IEwxMCAyMCBMMjUgMTUgTTI1IDEwIEwxNy41IDEyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"100-105",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"105-110",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L17.5 27.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDE3LjUgMjcuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"110-115",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+"},{range:"115-120",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L17.5 22.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDE3LjUgMjIuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"120-125",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+"},{range:"125-130",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L17.5 17.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDE3LjUgMTcuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"130-135",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+"},{range:"135-140",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20 M25 15 M25 10 L17.5 12.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIE0yNSAxNSBNMjUgMTAgTDE3LjUgMTIuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"140-145",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20 M25 15 M25 10 L17.5 12.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIE0yNSAxNSBNMjUgMTAgTDEwIDE1IiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+"},{range:"145-150",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20 M25 15 M25 10 L17.5 12.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIE0yNSAxNSBNMjUgMTAgTDEwIDE1IE0yNSAxMCBNMjUgNSBMMTcuNSA3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="}],n=Yt.fromJSON({imageData:"iVBORw0KGgoAAAANSUhEUgAAACgAAAApCAQAAADtq6NDAAAABGdBTUEAALGPC/xhBQAAAAFzUkdCAK7OHOkAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAJiS0dEAP+Hj8y/AAAACXBIWXMAAA7DAAAOwwHHb6hkAAAEY0lEQVRIx5XXWWxWRRQH8N+d+31tUdGAVjGglYJABFEBY91jfDAg7piYaFTccA++uMQEFRcSXlATtxiXqMQt4G4iisYl0ai4sIQYtVFZ1KIFKdTS0l4f7vRCS5fPebozc+bM/2z/Mzcx0AgSiUxXnKfIdMn875FIhX53U2n/B/s+kKM4UINTjTBZImixxnrv+9a2iL6zEoUBXcoudrWj/OtHm3wt02lfU9Qao9OnHvIhgmww84MEl1qnxfNmGrqHxAizLdPpC6chGcAxKGGcL+30gOERf1BSpUqVslQSV8d5ReZFe8VQ9avufJn31cWwlJV7iafKStGOE/1qvfH9qUxxu8ydUdmuSKbGO8YUdT2inKLG69pM70tliktl5qIkCAJGmusDG7Vqsc0WjZa4UBlBiA5YZIcjYzB7qDtH5kaUJFLs7RGZTZ42W4PRRmtwvbdt1+wGiaS4drEtDttdZYIDNVuAclR3vA3+dI3qHqmVSy7U6Tv1MScCPvPR7nIpFlsdCy3FdTLPGhK92e2CUITjMJ9ocwKxnsZqc3O3JwMma3d6UVLnyVxB4aXemZqvPqLdpJhW3KVVbY4yYImPo6M5Urv50fj+0z/FG9YaEiENs8UtMfXUaTeTePNHlhXfA1UU+2lyD1Il3Gtt9+adfpNG7dNlpg2U/T3KYLZ2dUWFdTgp3/rQ4sK973qnInV5TIf40x3dhvrJPBiqyWUo4wAtLqhQYS71qK+QKOFRywmGK/kpikzV6WMKhh58vGWs4TIJNjiEYLIuP8Tt4/zmLyqk+AyrJSbF+Qq1DgqRUPMxyl+9q3IQhX/rMCJ6tEunriDs1oSyQZKlr9AkhT2ZIARbJfaJS1vtVbHB+Rgi0RK/y1q1BWsEEyLoz40xtGKcARPVWB1BTPO7f4LNtpkUl1aoMbViLyZo0GRjPD3BxnxjqXeLYlvhqYrzMMG3HoyJXa3JjfnGlbYYFlP7Jh3qKsKY4hQ7TY0nG+xwRL61n63mxHtqNHosigyMLmClNwvuecFnOZB88nNBDzNkzhxEZaKMBVoKapggMzvHHXBEpNSSFAvtcFRsVn0bW8LlMmcXs+c0Kne3gRR32+zg4uXwjC6zit6Wt4a8LXVfcp/MtQXHn2ynGbuCmb8GvvFeJLEE82ReU9/n6+dkq2x3buG9Wn94smcgAw631RPR7BTH+kbmHReZoEpOdEe7zWqZl40s0JWs9Hmv7hjBHqPDwsjGKVJnWWqjbdZp1KhJi0aPmxYZsIRhlttgeF+Jlke41QcOQKoqilSb6HJzSvNG3G/UoWnxwsmt+sVaYwd63dRbqdnMyCPVeyRPvpYgdavM22oGKoMUVRbJfOWMwidJ8Zzb1UvmWK/VVUXzHaTjjrVYh1897HT7xxYEVUaa5SWb/WO+YUWa9SrwvigzM8YlzlYv2GSdVCYxxlBtVnnFq5olwp5/BEk/OLsf5LUmG2+inRJdVvjZ97ZH9/zP34ug1O91pf4p+D+JYBpvrKxfbwAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxNC0xMS0xMFQwMzoxMjowOS0wNTowMB9ViV0AAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTQtMTEtMTBUMDM6MTI6MDktMDU6MDBuCDHhAAAAAElFTkSuQmCC",height:20,width:20,type:"esriPMS",angle:0}),e=i.map((r,o)=>{let l;if(o!==i.length-1)if(o===0)l={minValue:r,maxValue:i[o+1],symbol:n};else{const u=Yt.fromJSON({type:"esriPMS",imageData:t[o].imageData,contentType:"image/svg+xml",height:32,width:32,angle:0});l={minValue:r,maxValue:i[o+1],symbol:u}}return new Ui(l)});return{defaultSymbol:n,classBreakInfos:e}}_getClassBreaks(i,t){return t.map((n,e)=>new Ui({minValue:i[e],maxValue:i[e+1],symbol:this._getDefaultSymbol(new W(n))}))}};s([a({type:["Magnitude"],json:{write:!0}})],Z.prototype,"attributeField",void 0),s([a({type:Rt.apiValues,json:{type:Rt.jsonValues,read:{reader:Rt.read},write:{writer:Rt.write}}})],Z.prototype,"flowRepresentation",void 0),s([a({type:["geographic","arithmetic"],json:{write:!0}})],Z.prototype,"rotationType",void 0),s([a({type:St.apiValues,json:{type:St.jsonValues,read:{reader:St.read},write:{writer:St.write}}})],Z.prototype,"style",void 0),s([a({json:{write:!0}})],Z.prototype,"symbolTileSize",void 0),s([a({type:Fe.apiValues,json:{type:Fe.jsonValues,write:{writer:Fe.write}}})],Z.prototype,"inputUnit",void 0),s([P("inputUnit")],Z.prototype,"readInputUnit",null),s([a({type:Fe.apiValues,json:{type:Fe.jsonValues,read:{reader:Fe.read},write:{writer:Fe.write}}})],Z.prototype,"outputUnit",void 0),s([P("outputUnit")],Z.prototype,"readOutputUnit",null),s([$e({vectorField:"vector-field"})],Z.prototype,"type",void 0),s([a({type:Zt})],Z.prototype,"styleRenderer",null),s([a({type:Jt})],Z.prototype,"sizeVariables",null),s([a({type:rr})],Z.prototype,"rotationVariables",null),Z=hi=s([I("esri.renderers.VectorFieldRenderer")],Z);const Li=Z,dn=.25,yn=or.fromJSON({type:"multipart",colorRamps:[{fromColor:[0,0,255],toColor:[0,255,255]},{fromColor:[0,255,255],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,0,0]}]}),ki=or.fromJSON(ds[0]),fr=new Set(["scientific","standard-time","vector-uv","vector-magdir","vector-u","vector-v","vector-magnitude","vector-direction"]);function hn(i){return i.presetRenderers?.find(({method:t,value:n})=>t==="raster-function-template"?n===i.rasterFunctionName:t==="variable"&&n===i.variableName)}function gn(i,t){const{attributeTable:n,colormap:e}=i;if(xi(i)){const r=Dn(i);if(r!=null)return r}if(t?.rasterFunctionColorRamp){const r=Ji(i,t);return r.colorRamp=t.rasterFunctionColorRamp,r}if(e!=null){const r=Sn(i);if(r!=null)return r}if(n!=null){const r=vn(i);if(r!=null)return r}return Ji(i,t)}function fn(i,t=!1){const n=["raster-stretch"];return Xi(i,t)&&n.push("raster-colormap"),Yi(i)&&n.push("unique-value"),ys(i,t)&&n.push("class-breaks"),hs(i)&&n.push("raster-shaded-relief"),xi(i)&&n.push("vector-field"),gs(i)&&n.push("flow"),n}function Fo(i){return i.datasetFormat==="Function"&&i.rasterFunction.functionName==="Colormap"?i.rasterFunction.colorRamp:void 0}function Lo(i,t,n){const e=["nearest","bilinear","cubic","majority"],r=n?.toLowerCase().replace("bicubic","cubic"),o=e.find(l=>l===r);return t==="Map"?o??"bilinear":i.dataType==="standard-time"?o??"nearest":i.dataType==="thematic"||i.attributeTable||i.colormap?o==="nearest"||o==="majority"?o:"nearest":o??"bilinear"}function Ji(i,t){i=wn(i,t?.variableName);const{bandCount:n}=i;let{bandIds:e,stretchType:r}=t||{};e?.some(d=>d>=n)&&(e=null);let o=i.statistics,l=i.histograms;n>1?(e=e?.length?e:wr(i),o=o==null?null:e?.map(d=>o[d]),l=l==null?null:e?.map(d=>l[d])):e=[0],r==null&&(r=Mn(i)),t?.includeStatisticsInStretch&&(r==="percent-clip"||r==="histogram-equalization")&&i.statistics?.length&&(r="min-max");let u=!1;switch(r){case"none":u=!1;break;case"percent-clip":u=!l?.length;break;default:u=!o?.length}const{dataType:p}=i,c=e?.length===1&&fr.has(p)?yn:null,m=new Fi({stretchType:r,dynamicRangeAdjustment:u,colorRamp:c,outputMin:0,outputMax:255,gamma:e?.length===1?[1]:[1,1,1],useGamma:!1});return r==="percent-clip"?m.maxPercent=m.minPercent=dn:r==="standard-deviation"&&(m.numberOfStandardDeviations=2),u||i.multidimensionalInfo==null&&!t?.includeStatisticsInStretch||(r==="percent-clip"?m.histograms=l:r!=="min-max"&&r!=="standard-deviation"||(m.statistics=o)),m}function wn(i,t){const{multidimensionalInfo:n}=i;if(!t||!n)return i;const e=n.variables.find(r=>r.name===t);if(!e)return i;if(i=i.clone(),e){const{statistics:r,histograms:o}=e;r?.length&&(i.statistics=r.map(l=>({min:l.min,max:l.max,avg:l.avg,stddev:l.stddev}))),o?.length&&(i.histograms=o)}return i}function wr(i){const t=i.bandCount;if(t===1)return null;if(t===2)return[0];const{bandInfos:n}=i;let e;if(n.length===t){const{red:r,green:o,blue:l,nir:u}=In(n);r!=null&&o!=null&&l!=null?e=[r,o,l]:u!=null&&r!=null&&o!=null&&(e=[u,r,o])}return!e&&t>=3&&(e=[0,1,2]),e}function In(i){const t={};for(let n=0;n<i.length;n++){const e=i[n],r=e.name.toLowerCase();if(r==="red")t.red=n;else if(r==="green")t.green=n;else if(r==="blue")t.blue=n;else if(r==="nearinfrared"||r==="nearinfrared_1"||r==="nir")t.nir=n;else if(e.maxWavelength&&e.minWavelength){const o=e.minWavelength,l=e.maxWavelength;t.blue==null&&o>=410&&o<=480&&l>=480&&l<=540?t.blue=n:t.green==null&&o>=490&&o<=560&&l>=560&&l<=610?t.green=n:t.red==null&&o>=595&&o<=670&&l>=660&&l<=730?t.red=n:t.nir==null&&o>=700&&o<=860&&l>=800&&l<=950&&(t.nir=n)}}return t}function Mn(i){let t="percent-clip";const{pixelType:n,dataType:e,histograms:r,statistics:o,multidimensionalInfo:l}=i,u=fr.has(e)||e==="generic"&&l!=null;return n!=="u8"||e!=="processed"&&r!=null&&o!=null?n==="u8"||e==="elevation"||u?t="min-max":r!=null?t="percent-clip":o!=null&&(t="min-max"):t="none",t}function vn(i,t,n,e){if(!Yi(i,t))return null;const{attributeTable:r,statistics:o}=i,l=Ir(r,t),u=wt(r,"red"),p=wt(r,"green"),c=wt(r,"blue"),m=new ir,d=[],g=new Set,f=!!(u&&p&&c);if(r!=null)r.features.forEach(h=>{const y=h.attributes[l.name];if(!g.has(h.attributes[l.name])&&y!=null){g.add(y);const w=f&&(u.type==="single"||u.type==="double")&&(p.type==="single"||p.type==="double")&&(c.type==="single"||c.type==="double")&&!r.features.some(R=>R.attributes[u.name]>1||R.attributes[p.name]>1||R.attributes[c.name]>1),b=w?255:1;d.push(new _i({value:h.attributes[l.name],label:h.attributes[l.name]+"",symbol:new zi({style:"solid",outline:null,color:new W(f?[h.attributes[u.name]*b,h.attributes[p.name]*b,h.attributes[c.name]*b,1]:[0,0,0,0])})}))}});else if(o?.[0])for(let h=o[0].min;h<=o[0].max;h++)d.push(new _i({value:h,label:h.toString(),symbol:new zi({style:"solid",outline:null,color:new W([0,0,0,0])})}));if(d.sort((h,y)=>h.value&&typeof h.value.valueOf()=="string"?0:h.value>y.value?1:-1),!f){const h=kt(ki,{numColors:d.length});d.forEach((y,w)=>y.symbol.color=new W(h[w].slice(1,4))),m.colorRamp=ki}return new Ti({field:l.name,uniqueValueInfos:d,authoringInfo:m})}function Ir(i,t,n){let e;return i!=null?(e=t?i.fields.find(r=>t.toLowerCase()===r.name.toLowerCase()):bn(i.fields),e||(n||(e=i.fields.find(r=>r.type==="string")),e||(e=wt(i,"value")))):e=new sr({name:"value"}),e}function bn(i){let t;for(let n=0;n<i.length;n++){const e=i[n].name.toLowerCase();if(i[n].type==="string"){if(e.startsWith("class")){t=i[n];break}t==null&&(e.endsWith("name")||e.endsWith("type"))&&(t=i[n])}}return t}function wt(i,t){return i==null?null:i.fields.find(n=>n.name.toLowerCase()===t)}function Sn(i){if(!Xi(i))return null;let t;const{attributeTable:n,colormap:e}=i;if(n!=null){const r=wt(n,"value"),o=Ir(n,null,!0);o.type==="string"&&(t={},n.features.forEach(l=>{const u=l.attributes;t[u[r.name]]=o?u[o.name]:u[r.name]}))}return Ni.createFromColormap(e,t)}const Rn=new Map([["m/s","meter-per-second"],["km/h","kilometer-per-hour"],["knots","knots"],["ft/s","feet-per-second"],["mph","mile-per-hour"]]);function Dn(i){if(!xi(i))return null;let t;if(i.statistics!=null&&i.statistics.length&&(i.dataType==="vector-magdir"||i.dataType==="vector-uv")){const{minMagnitude:r,maxMagnitude:o}=xn(i.dataType,i.statistics);t=[new Jt({field:"Magnitude",minSize:10,maxSize:40,minDataValue:r,maxDataValue:o})]}const n=i.multidimensionalInfo!=null?Rn.get(i.multidimensionalInfo.variables[0].unit):void 0,e=new Li({visualVariables:t,inputUnit:n,rotationType:"geographic"});return e.visualVariables=[...e.sizeVariables,...e.rotationVariables],e}function Zi(i){return{color:i.symbolLayers[0].material?.color,type:"esriSFS",style:"esriSFSSolid"}}function An(i){if(i.type==="uniqueValue"){const t=i.uniqueValueInfos;return t?.[0].symbol?.symbolLayers?.length&&(i.uniqueValueInfos=t?.map(e=>({value:e.value,label:e.label,symbol:e.symbol?Zi(e.symbol):null}))),i}if(i.type==="classBreaks"){const t=i.classBreakInfos;return t[0].symbol?.symbolLayers?.length&&(i.classBreakInfos=t.map(e=>({classMinValue:e.classMinValue,classMaxValue:e.classMaxValue,label:e.label,symbol:e.symbol?Zi(e.symbol):null}))),i}return i}function xn(i,t){let n,e;if(i==="vector-magdir")n=t[0].min,e=t[0].max;else{const r=t[0].min,o=t[0].max,l=t[1].min,u=t[1].max;n=0,e=Math.max(Math.abs(r),Math.abs(l),Math.abs(o),Math.abs(u))}return{minMagnitude:n,maxMagnitude:e}}const Et={key:"type",base:null,typeMap:{"unique-value":Ti,"class-breaks":Zt,"raster-colormap":Ni,"raster-stretch":Fi,"vector-field":Li,"raster-shaded-relief":gr,flow:yr}},$t={...Et,typeMap:{...Et.typeMap}};delete $t.typeMap["vector-field"],delete $t.typeMap.flow;const jn={uniqueValue:Ti,classBreaks:Zt,rasterStretch:Fi,rasterColormap:Ni,vectorField:Li,rasterShadedRelief:gr,flowRenderer:yr};function Tn(i){return i&&jn[i.type]||null}function Cn(i,t){if(!i)return null;if(i.type==="classBreaks"&&i.classificationMethod){const e=i.authoringInfo||{classificationMethod:""};e.classificationMethod=i.classificationMethod,i.authoringInfo=e}i.type==="vectorField"&&i.visualVariables&&!Array.isArray(i.visualVariables)&&(i.visualVariables=[i.visualVariables]);const n=Tn(i);if(n){const e=new n;return e.read(i,t),e}return t?.messages&&i&&t.messages.push(new Fr("renderer:unsupported","Renderers of type '"+(i.type||"unknown")+"' are not supported",{definition:i,context:t})),null}let ze=class extends ve.ClonableMixin(M){constructor(){super(...arguments),this.fromGeometry=null,this.toGeometry=null,this.objectIds=null,this.where=null,this.maxCount=null}};s([a({type:F,json:{read:!0}})],ze.prototype,"fromGeometry",void 0),s([a({type:F,json:{read:!0,write:!0}})],ze.prototype,"toGeometry",void 0),s([a({json:{write:!0}})],ze.prototype,"objectIds",void 0),s([a({type:String,json:{write:!0}})],ze.prototype,"where",void 0),s([a({type:Number,json:{write:!0}})],ze.prototype,"maxCount",void 0),ze=s([I("esri.rest.support.FindImagesParameters")],ze);const Nn=ze,Mr=i=>{let t=class extends i{constructor(){super(...arguments),this.make=null,this.model=null,this.focalLength=null,this.pixelSize=null,this.rows=null,this.cols=null}};return s([a({json:{write:!0}})],t.prototype,"make",void 0),s([a({json:{write:!0}})],t.prototype,"model",void 0),s([a({json:{write:!0}})],t.prototype,"focalLength",void 0),s([a({json:{write:!0}})],t.prototype,"pixelSize",void 0),s([a({json:{write:!0}})],t.prototype,"rows",void 0),s([a({json:{write:!0}})],t.prototype,"cols",void 0),t=s([I("esri.rest.support.CameraInfoMixin")],t),t};let pe=class extends Mr(M){constructor(){super(...arguments),this.id=null,this.referenceUri=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.perspectiveCenter=null,this.orientation=null}writeAcquisitionDate(t,n){n.acquisitionDate=t?.getTime()}};s([a({json:{write:!0}})],pe.prototype,"id",void 0),s([a({json:{name:"uri",write:!0}})],pe.prototype,"referenceUri",void 0),s([a({type:Date,json:{write:!0}})],pe.prototype,"acquisitionDate",void 0),s([x("acquisitionDate")],pe.prototype,"writeAcquisitionDate",null),s([a({json:{write:!0}})],pe.prototype,"cameraID",void 0),s([a({type:F,json:{write:!0}})],pe.prototype,"center",void 0),s([a({type:F,json:{write:!0}})],pe.prototype,"perspectiveCenter",void 0),s([a({json:{write:!0}})],pe.prototype,"orientation",void 0),pe=s([I("esri.rest.support.ImageInspectionInfo")],pe);const Fn=pe;let jt=class extends M{constructor(){super(...arguments),this.images=null}};s([a({type:[Fn],json:{write:!0}})],jt.prototype,"images",void 0),jt=s([I("esri.rest.support.FindImagesResult")],jt);const Ln=jt;var gi;let Ge=gi=class extends M{constructor(i){super(i),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new gi(D({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};s([a({type:[String],json:{name:"angleName",write:!0}})],Ge.prototype,"angleNames",void 0),s([a({type:F,json:{write:!0}})],Ge.prototype,"point",void 0),s([a({type:he,json:{write:!0}})],Ge.prototype,"spatialReference",void 0),s([a({type:X,json:{write:!0}})],Ge.prototype,"rasterId",void 0),Ge=gi=s([I("esri.rest.support.ImageAngleParameters")],Ge);const Pn=Ge;let Ye=class extends M{constructor(t){super(t),this.north=null,this.up=null,this.spatialReference=null}};s([a({type:Number,json:{write:!0}})],Ye.prototype,"north",void 0),s([a({type:Number,json:{write:!0}})],Ye.prototype,"up",void 0),s([a({type:he,json:{write:!0}})],Ye.prototype,"spatialReference",void 0),Ye=s([I("esri.rest.support.ImageAngleResult")],Ye);const zn=Ye,oe=new at({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let _e=class extends M{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};s([a({type:Number,json:{read:!0,write:!0}})],_e.prototype,"value",void 0),s([a({type:String,json:{read:!0,write:!0}})],_e.prototype,"displayValue",void 0),s([a({type:Number,json:{read:!0,write:!0}})],_e.prototype,"uncertainty",void 0),_e=s([I("esri.rest.support.imageMeasureUtils.BaseImageMeasureResultValue")],_e);let nt=class extends _e{constructor(){super(...arguments),this.unit=null}};s([a({type:String,json:{read:Ee.read,write:Ee.write}})],nt.prototype,"unit",void 0),nt=s([I("esri.rest.support.imageMeasureUtils.ImageMeasureResultLengthValue")],nt);let Tt=class extends _e{constructor(){super(...arguments),this.unit=null}};s([a({type:String,json:{read:_t.read,write:_t.write}})],Tt.prototype,"unit",void 0),Tt=s([I("esri.rest.support.imageMeasureUtils.ImageMeasureResultAreaValue")],Tt);let It=class extends _e{constructor(){super(...arguments),this.unit=null}};s([a({type:String,json:{read:Ht.read,write:Ht.write}})],It.prototype,"unit",void 0),It=s([I("esri.rest.support.imageMeasureUtils.ImageMeasureResultAngleValue")],It);let Oe=class extends M{constructor(t){super(t),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};s([a()],Oe.prototype,"type",void 0),s([a({type:oe.apiValues,json:{read:oe.read,write:oe.write}})],Oe.prototype,"measureOperation",void 0),s([a({type:re,json:{write:!0}})],Oe.prototype,"mosaicRule",void 0),s([a({type:F,json:{write:!0}})],Oe.prototype,"pixelSize",void 0),s([a({json:{write:!0}})],Oe.prototype,"raster",void 0),Oe=s([I("esri.rest.support.BaseImageMeasureParameters")],Oe);const qt=Oe;var fi;let Ae=fi=class extends qt{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(i,t,n){i!=null&&(t.geometryType=ne(i),t[n]=i.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new fi(D({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([a({types:Y,json:{name:"fromGeometry",read:!0,write:!0}})],Ae.prototype,"geometry",void 0),s([x("geometry")],Ae.prototype,"writeGeometry",null),s([a({type:oe.apiValues,json:{write:oe.write}})],Ae.prototype,"measureOperation",null),s([a({json:{read:!0}})],Ae.prototype,"is3D",void 0),s([a({type:String,json:{read:Ee.read,write:Ee.write}})],Ae.prototype,"linearUnit",void 0),s([a({type:String,json:{read:_t.read,write:_t.write}})],Ae.prototype,"areaUnit",void 0),Ae=fi=s([I("esri.rest.support.ImageAreaParameters")],Ae);const On=Ae;let ct=class extends M{constructor(t){super(t),this.name=null,this.sensorName=null}};s([a({type:String,json:{read:!0,write:!0}})],ct.prototype,"name",void 0),s([a({type:String,json:{read:!0,write:!0}})],ct.prototype,"sensorName",void 0),ct=s([I("esri.rest.support.BaseImageMeasureResult")],ct);const Wt=ct;let mt=class extends Wt{constructor(){super(...arguments),this.area=null,this.perimeter=null}};s([a({type:Tt,json:{read:!0,write:!0}})],mt.prototype,"area",void 0),s([a({type:nt,json:{read:!0,write:!0}})],mt.prototype,"perimeter",void 0),mt=s([I("esri.rest.support.ImageAreaResult")],mt);const Bn=mt;let Ct=class extends ve.ClonableMixin(M){constructor(){super(...arguments),this.outSpatialReference=null}};s([a({type:he,json:{name:"outSR",write:!0}})],Ct.prototype,"outSpatialReference",void 0),Ct=s([I("esri.rest.support.ImageBoundaryParameters")],Ct);const Un=Ct;let et=class extends M{constructor(){super(...arguments),this.area=null,this.geometry=null}readGeometry(t,n){return t==null?null:t.rings?Ut.fromJSON(t):He.fromJSON(t)}};s([a({type:Number,json:{write:!0}})],et.prototype,"area",void 0),s([a({types:Y,json:{name:"shape",write:!0}})],et.prototype,"geometry",void 0),s([P("geometry")],et.prototype,"readGeometry",null),et=s([I("esri.rest.support.ImageBoundaryResult")],et);const _n=et;var wi;let ge=wi=class extends qt{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(i,t,n){i!=null&&(t.geometryType=ne(i),t[n]=i.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new wi(D({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([a({type:F,json:{read:!0,write:!0}})],ge.prototype,"fromGeometry",void 0),s([x("fromGeometry")],ge.prototype,"writeFromGeometry",null),s([a({type:F,json:{read:!0,write:!0}})],ge.prototype,"toGeometry",void 0),s([a({type:oe.apiValues,json:{write:oe.write}})],ge.prototype,"measureOperation",null),s([a({json:{read:!0}})],ge.prototype,"is3D",void 0),s([a({type:String,json:{read:Ee.read,write:Ee.write}})],ge.prototype,"linearUnit",void 0),s([a({type:String,json:{read:Ht.read,write:Ht.write}})],ge.prototype,"angularUnit",void 0),ge=wi=s([I("esri.rest.support.ImageDistanceParameters")],ge);const Hn=ge;let tt=class extends Wt{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};s([a({type:nt,json:{read:!0,write:!0}})],tt.prototype,"distance",void 0),s([a({type:It,json:{read:!0,write:!0}})],tt.prototype,"azimuthAngle",void 0),s([a({type:It,json:{read:!0,write:!0}})],tt.prototype,"elevationAngle",void 0),tt=s([I("esri.rest.support.ImageDistanceResult")],tt);const Vn=tt;let xe=class extends ve.ClonableMixin(M){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(t,n,e){t!=null&&(n.geometryType=ne(t),n[e]=JSON.stringify(t.toJSON()))}};s([a({types:Y,json:{read:se,write:!0}})],xe.prototype,"geometry",void 0),s([x("geometry")],xe.prototype,"writeGeometry",null),s([a({json:{write:!0}})],xe.prototype,"objectIds",void 0),s([$e(Fs,{ignoreUnknown:!1,name:"spatialRel"})],xe.prototype,"spatialRelationship",void 0),s([a({type:Gt,json:{name:"time",write:!0}})],xe.prototype,"timeExtent",void 0),s([a({type:String,json:{write:!0}})],xe.prototype,"where",void 0),xe=s([I("esri.rest.support.ImageGPSInfoParameters")],xe);const En=xe;let Nt=class extends Mr(M){constructor(){super(...arguments),this.id=null}};s([a({json:{write:!0}})],Nt.prototype,"id",void 0),Nt=s([I("esri.rest.support.CameraInfo")],Nt);const $n=Nt;let ce=class extends M{constructor(){super(...arguments),this.id=null,this.name=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.gps=null,this.orientation=null}writeAcquisitionDate(t,n){n.acquisitionDate=t?.getTime()}};s([a({json:{write:!0}})],ce.prototype,"id",void 0),s([a({json:{write:!0}})],ce.prototype,"name",void 0),s([a({type:Date,json:{write:!0}})],ce.prototype,"acquisitionDate",void 0),s([x("acquisitionDate")],ce.prototype,"writeAcquisitionDate",null),s([a({json:{write:!0}})],ce.prototype,"cameraID",void 0),s([a({type:F,json:{write:!0}})],ce.prototype,"center",void 0),s([a({json:{write:!0}})],ce.prototype,"gps",void 0),s([a({json:{write:!0}})],ce.prototype,"orientation",void 0),ce=s([I("esri.rest.support.ImageGPSInfo")],ce);const kn=ce;let dt=class extends M{constructor(){super(...arguments),this.images=null,this.cameras=null}};s([a({type:[kn],json:{write:!0}})],dt.prototype,"images",void 0),s([a({type:[$n],json:{write:!0}})],dt.prototype,"cameras",void 0),dt=s([I("esri.rest.support.ImageGPSInfoResult")],dt);const Jn=dt;var Ii;let je=Ii=class extends qt{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(i,t,n){i!=null&&(t.geometryType=ne(i),t[n]=i.toJSON())}get measureOperation(){return this.operationType}clone(){return new Ii(D({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([a({type:F,json:{read:!0}})],je.prototype,"fromGeometry",void 0),s([x("fromGeometry")],je.prototype,"writeFromGeometry",null),s([a({type:F,json:{read:!0,write:!0}})],je.prototype,"toGeometry",void 0),s([a({type:oe.apiValues,json:{write:oe.write}})],je.prototype,"measureOperation",null),s([a({json:{read:!0}})],je.prototype,"operationType",void 0),s([a({type:String,json:{read:Ee.read,write:Ee.write}})],je.prototype,"linearUnit",void 0),je=Ii=s([I("esri.rest.support.ImageHeightParameters")],je);const Zn=je;let Ft=class extends Wt{constructor(){super(...arguments),this.height=null}};s([a({type:nt,json:{read:!0,write:!0}})],Ft.prototype,"height",void 0),Ft=s([I("esri.rest.support.ImageHeightResult")],Ft);const Gn=Ft;var Mi;let fe=Mi=class extends M{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.rasterFunction=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(i,t,n){i!=null&&(t.geometryType=ne(i),t[n]=i.toJSON())}clone(){return new Mi(D({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};s([a({types:Y,json:{read:se}})],fe.prototype,"geometry",void 0),s([x("geometry")],fe.prototype,"writeGeometry",null),s([a({type:re,json:{write:!0}})],fe.prototype,"mosaicRule",void 0),s([a({type:j,json:{write:!0,name:"renderingRule"}})],fe.prototype,"rasterFunction",void 0),s([a({type:F,json:{write:!0}})],fe.prototype,"pixelSize",void 0),s([a({json:{write:!0}})],fe.prototype,"raster",void 0),s([a({type:Gt,json:{read:{source:"time"},write:{target:"time"}}})],fe.prototype,"timeExtent",void 0),fe=Mi=s([I("esri.rest.support.ImageHistogramParameters")],fe);const qn=fe;var vi;let U=vi=class extends M{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(i,t,n){i!=null&&(t.geometryType=ne(i),t[n]=JSON.stringify(i.toJSON()))}set mosaicRule(i){let t=i;t?.mosaicMethod&&(t=re.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(i,t,n){i!=null&&(t[n]=JSON.stringify(i.toJSON()))}set rasterFunction(i){let t=i;t?.rasterFunction&&(t=j.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}writeRasterFunction(i,t,n){i!=null&&(t[n]=JSON.stringify(i.toJSON())),i.rasterFunctionDefinition&&(t[n]=JSON.stringify(i.rasterFunctionDefinition))}writeRasterFunctions(i,t,n){i!=null&&(t[n]=JSON.stringify(i.map(e=>e.rasterFunctionDefinition||e.toJSON())))}writePixelSize(i,t,n){i!=null&&(t[n]=JSON.stringify(i))}writeTimeExtent(i,t,n){if(i!=null){const e=i.start!=null?i.start.getTime():null,r=i.end!=null?i.end.getTime():null;t[n]=e!=null?r!=null?`${e},${r}`:`${e}`:null}}clone(){return new vi(D({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};s([a({types:Y,json:{write:!0}})],U.prototype,"geometry",void 0),s([x("geometry")],U.prototype,"writeGeometry",null),s([a({type:re,json:{write:!0}})],U.prototype,"mosaicRule",null),s([x("mosaicRule")],U.prototype,"writeMosaicRule",null),s([a({type:j,json:{write:!0,name:"renderingRule"}})],U.prototype,"rasterFunction",null),s([x("rasterFunction")],U.prototype,"writeRasterFunction",null),s([a({type:[j],json:{write:!0,name:"renderingRules"}})],U.prototype,"rasterFunctions",void 0),s([x("rasterFunctions")],U.prototype,"writeRasterFunctions",null),s([a({type:F,json:{write:!0}})],U.prototype,"pixelSize",void 0),s([x("pixelSize")],U.prototype,"writePixelSize",null),s([a({type:Boolean,json:{write:!0}})],U.prototype,"returnGeometry",void 0),s([a({type:Boolean,json:{write:!0}})],U.prototype,"returnCatalogItems",void 0),s([a({type:Boolean,json:{write:!0}})],U.prototype,"returnPixelValues",void 0),s([a({type:Number,json:{write:!0}})],U.prototype,"maxItemCount",void 0),s([a({type:Gt,json:{write:{target:"time"}}})],U.prototype,"timeExtent",void 0),s([x("timeExtent")],U.prototype,"writeTimeExtent",null),s([a({json:{write:!0}})],U.prototype,"raster",void 0),s([a({json:{write:!0}})],U.prototype,"viewId",void 0),s([a({type:Boolean,json:{write:!0}})],U.prototype,"processAsMultidimensional",void 0),U=vi=s([I("esri.rest.support.ImageIdentifyParameters")],U);const vr=U;let me=class extends M{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};s([a({json:{write:!0}})],me.prototype,"catalogItemVisibilities",void 0),s([a({type:Ci,json:{write:!0}})],me.prototype,"catalogItems",void 0),s([a({type:F,json:{write:!0}})],me.prototype,"location",void 0),s([a({json:{write:!0}})],me.prototype,"name",void 0),s([a({json:{write:!0}})],me.prototype,"objectId",void 0),s([a({json:{write:!0}})],me.prototype,"processedValues",void 0),s([a({json:{write:!0}})],me.prototype,"properties",void 0),s([a({json:{write:!0}})],me.prototype,"value",void 0),me=s([I("esri.rest.support.ImageIdentifyResult")],me);const Wn=me;var bi;let it=bi=class extends M{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(i,t,n){t.geometries={geometryType:"esriGeometryPoint",geometries:i.map(e=>e.toJSON())}}clone(){return new bi({geometries:this.geometries?.map(i=>i.clone())??[],rasterId:this.rasterId})}};s([a({type:[F],json:{write:!0}})],it.prototype,"geometries",void 0),s([x("geometries")],it.prototype,"writeGeometry",null),s([a({type:X,json:{write:!0}})],it.prototype,"rasterId",void 0),it=bi=s([I("esri.rest.support.ImagePixelLocationParameters")],it);const Qn=it;let Lt=class extends M{constructor(){super(...arguments),this.geometries=null}};s([a({json:{write:!0}})],Lt.prototype,"geometries",void 0),Lt=s([I("esri.rest.support.ImagePixelLocationResult")],Lt);const Kn=Lt;var Si;let qe=Si=class extends qt{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(i,t,n){i!=null&&(t.geometryType=ne(i),t[n]=i.toJSON())}get measureOperation(){const{is3D:i,geometry:t}=this;return t.type==="point"?i?"point-3D":"point":i?"centroid-3D":"centroid"}clone(){return new Si(D({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([a({types:Y,json:{name:"fromGeometry",read:se}})],qe.prototype,"geometry",void 0),s([x("geometry")],qe.prototype,"writeGeometry",null),s([a({type:oe.apiValues,json:{read:oe.read,write:oe.write}})],qe.prototype,"measureOperation",null),s([a({json:{read:!0}})],qe.prototype,"is3D",void 0),qe=Si=s([I("esri.rest.support.ImagePointParameters")],qe);const Xn=qe;let Pt=class extends Wt{constructor(){super(...arguments),this.point=null}};s([a({type:F,json:{name:"point.value",read:!0,write:!0}})],Pt.prototype,"point",void 0),Pt=s([I("esri.rest.support.ImagePointResult")],Pt);const Yn=Pt;var Ri;let G=Ri=class extends M{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.raster=void 0,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(i,t,n){i!=null&&(t.geometryType=ne(i),t[n]=i.toJSON())}set locations(i){if(i?.length){const t=new Lr({spatialReference:i[0].spatialReference,points:i.map(({x:n,y:e})=>[n,e])});this._set("locations",i),this.geometry=t}}clone(){return new Ri(D({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};s([a({types:Y,json:{read:se}})],G.prototype,"geometry",void 0),s([x("geometry")],G.prototype,"writeGeometry",null),s([a({type:[F]})],G.prototype,"locations",null),s([a({type:String,json:{type:Ve.jsonValues,read:Ve.read,write:Ve.write}})],G.prototype,"interpolation",void 0),s([a({type:re,json:{write:!0}})],G.prototype,"mosaicRule",void 0),s([a({type:[String],json:{write:!0}})],G.prototype,"outFields",void 0),s([a({type:F,json:{write:!0}})],G.prototype,"pixelSize",void 0),s([a({type:String,json:{write:!0}})],G.prototype,"raster",void 0),s([a({type:Boolean,json:{write:!0}})],G.prototype,"returnFirstValueOnly",void 0),s([a({type:Number,json:{write:!0}})],G.prototype,"sampleDistance",void 0),s([a({type:Number,json:{write:!0}})],G.prototype,"sampleCount",void 0),s([a({type:Number,json:{write:!0}})],G.prototype,"sliceId",void 0),s([a({type:Gt,json:{read:{source:"time"},write:{target:"time"}}})],G.prototype,"timeExtent",void 0),G=Ri=s([I("esri.rest.support.ImageSampleParameters")],G);const ea=G;let Te=class extends M{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};s([a({json:{write:!0}})],Te.prototype,"attributes",void 0),s([a({type:F,json:{write:!0}})],Te.prototype,"location",void 0),s([a({json:{write:!0}})],Te.prototype,"locationId",void 0),s([a({json:{write:!0}})],Te.prototype,"rasterId",void 0),s([a({json:{write:!0}})],Te.prototype,"resolution",void 0),s([a({json:{write:!0}})],Te.prototype,"pixelValue",void 0),Te=s([I("esri.rest.support.ImageSample")],Te);const ta=Te;let zt=class extends M{constructor(){super(...arguments),this.samples=[]}};s([a({type:[ta],json:{write:!0}})],zt.prototype,"samples",void 0),zt=s([I("esri.rest.support.ImageSampleResult")],zt);const ia=zt;let We=class extends ve.ClonableMixin(M){constructor(){super(...arguments),this.geometries=[],this.rasterIds=null,this.outSpatialReference=null}writeGeometries(t,n,e){n.geometries=t?.length?{geometryType:ne(t[0]),geometries:t.map(r=>({...r.toJSON(),spatialReference:void 0}))}:null}};s([a({types:[Y]})],We.prototype,"geometries",void 0),s([x("geometries")],We.prototype,"writeGeometries",null),s([a({type:[X],json:{write:!0}})],We.prototype,"rasterIds",void 0),s([a({type:he,json:{name:"outSR",write:!0}})],We.prototype,"outSpatialReference",void 0),We=s([I("esri.rest.support.ImageToMapMultirayParameters")],We);const ra=We;let Ce=class extends ve.ClonableMixin(M){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(t,n,e){t!=null&&(n.geometryType=ne(t),n[e]={...t.toJSON(),spatialReference:void 0})}};s([a({types:Y,json:{read:se,write:!0}})],Ce.prototype,"geometry",void 0),s([x("geometry")],Ce.prototype,"writeGeometry",null),s([a({json:{write:!0}})],Ce.prototype,"rasterId",void 0),s([a({type:he,json:{name:"outSR",write:!0}})],Ce.prototype,"outSpatialReference",void 0),s([a({json:{name:"options.DOff",write:!0}})],Ce.prototype,"depthOffset",void 0),s([a({json:{name:"options.Adjust",write:!0}})],Ce.prototype,"adjust",void 0),Ce=s([I("esri.rest.support.ImageToMapParameters")],Ce);const sa=Ce;let yt=class extends ve.ClonableMixin(M){constructor(){super(...arguments),this.referenceUri=null,this.rasterId=null}};s([a({type:String,json:{name:"uri",write:!0}})],yt.prototype,"referenceUri",void 0),s([a({type:Number,json:{write:!0}})],yt.prototype,"rasterId",void 0),yt=s([I("esri.rest.support.ImageUrlParameters")],yt);const na=yt;let Ot=class extends M{constructor(){super(...arguments),this.url=null}};s([a({json:{name:"imageURL",write:!0}})],Ot.prototype,"url",void 0),Ot=s([I("esri.rest.support.ImageUrlResult")],Ot);const aa=Ot,si=new at({0:"constant",1:"plane",2:"minimum",3:"maximum",4:"average"},{useNumericKeys:!0});let Ne=class extends ve.ClonableMixin(M){constructor(){super(...arguments),this.geometries=[],this.mosaicRule=null,this.pixelSize=null,this.constantZ=null,this.baseType="plane"}writeGeometries(i,t,n){i?.length&&(t.geometryType=ne(i[0]),t.geometries=i.map(e=>e.toJSON()))}};s([a({types:[Y]})],Ne.prototype,"geometries",void 0),s([x("geometries")],Ne.prototype,"writeGeometries",null),s([a({type:re,json:{write:!0}})],Ne.prototype,"mosaicRule",void 0),s([a({type:F,json:{write:!0}})],Ne.prototype,"pixelSize",void 0),s([a({json:{write:!0}})],Ne.prototype,"constantZ",void 0),s([a({type:si.apiValues,json:{read:si.read,write:si.write}})],Ne.prototype,"baseType",void 0),Ne=s([I("esri.rest.support.ImageVolumeParameters")],Ne);const oa=Ne;let de=class extends M{constructor(){super(...arguments),this.area=null,this.cut=null,this.fill=null,this.maxZ=null,this.minZ=null,this.meanZ=null,this.cutCellCount=null,this.fillCellCount=null}};s([a({json:{write:!0}})],de.prototype,"area",void 0),s([a({json:{write:!0}})],de.prototype,"cut",void 0),s([a({json:{write:!0}})],de.prototype,"fill",void 0),s([a({json:{name:"maxz",write:!0}})],de.prototype,"maxZ",void 0),s([a({json:{name:"minz",write:!0}})],de.prototype,"minZ",void 0),s([a({json:{name:"meanz",write:!0}})],de.prototype,"meanZ",void 0),s([a({json:{write:!0}})],de.prototype,"cutCellCount",void 0),s([a({json:{write:!0}})],de.prototype,"fillCellCount",void 0),de=s([I("esri.rest.support.ImageVolume")],de);const la=de;let Bt=class extends M{constructor(){super(...arguments),this.volumes=[]}};s([a({type:[la],json:{write:!0}})],Bt.prototype,"volumes",void 0),Bt=s([I("esri.rest.support.ImageVolumeResult")],Bt);const ua=Bt;let Qe=class extends ve.ClonableMixin(M){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.visibleOnly=!1}writeGeometry(i,t,n){i!=null&&(t.geometryType=ne(i),t[n]=JSON.stringify(i))}};s([a({types:Y,json:{read:se,write:!0}})],Qe.prototype,"geometry",void 0),s([x("geometry")],Qe.prototype,"writeGeometry",null),s([a({json:{write:!0}})],Qe.prototype,"rasterId",void 0),s([a({json:{name:"options.VisibleOnly",write:!0}})],Qe.prototype,"visibleOnly",void 0),Qe=s([I("esri.rest.support.MapToImageParameters")],Qe);const pa=Qe;let Be=class extends M{constructor(){super(...arguments),this.geometry=null,this.length=null,this.area=null,this.center=null}readCenter(t,n){return t.spatialReference||(t={...t,spatialReference:n.Shape.spatialReference}),F.fromJSON(t)}};s([a({types:Y,json:{name:"Shape",read:se,write:!0}})],Be.prototype,"geometry",void 0),s([a({json:{name:"Length",write:!0}})],Be.prototype,"length",void 0),s([a({json:{name:"Area",write:!0}})],Be.prototype,"area",void 0),s([a({type:F,json:{name:"Center",write:!0}})],Be.prototype,"center",void 0),s([P("center")],Be.prototype,"readCenter",null),Be=s([I("esri.rest.support.MeasureAreaFromImageResult")],Be);const ca=Be;var Di;let rt=Di=class extends M{constructor(){super(...arguments),this.geometry=null,this.rasterId=void 0}writeGeometry(i,t,n){i!=null&&(t.geometryType=ne(i),t[n]={...i.toJSON(),spatialReference:void 0})}clone(){const i=D({geometry:this.geometry,rasterId:this.rasterId});return new Di(i)}};s([a({types:Y,json:{name:"fromGeometry",read:se,write:!0}})],rt.prototype,"geometry",void 0),s([x("geometry")],rt.prototype,"writeGeometry",null),s([a({json:{write:!0}})],rt.prototype,"rasterId",void 0),rt=Di=s([I("esri.rest.support.MeasureFromImageParameters")],rt);const ma=rt;let ht=class extends M{constructor(){super(...arguments),this.geometry=null,this.length=null}};s([a({types:Y,json:{name:"Shape",read:se,write:!0}})],ht.prototype,"geometry",void 0),s([a({json:{name:"Length",write:!0}})],ht.prototype,"length",void 0),ht=s([I("esri.rest.support.MeasureLengthFromImageResult")],ht);const da=ht;function Pi(i){const t=i?.time;if(t&&(t.start!=null||t.end!=null)){const n=[];t.start!=null&&n.push(t.start),t.end==null||n.includes(t.end)||n.push(t.end),i.time=n.join(",")}}async function br(i,t,n){t=_(qn,t);const e=V(i),r=t.geometry?[t.geometry]:[],o=await ke(r),l=t.toJSON();Pi(l);const u=o?.[0];u!=null&&(l.geometry=Me(u));const p=$({...e.query,f:"json",...l});return k(p,n)}async function ya(i,t,n){const e=(t=_(oa,t)).toJSON();e.geometries=JSON.stringify(e.geometries);const r=V(i),o=$({...r.query,f:"json",...e}),l=k(o,n),{data:u}=await S(`${r.path}/calculateVolume`,l);return ua.fromJSON({volumes:u.results})}async function ha(i,t,n){const e=(t=_(Pn,t)).toJSON();e.angleName!=null&&(e.angleName=e.angleName.join(",")),t?.point?.spatialReference?.imageCoordinateSystem&&(e.point.spatialReference=Kt(t.point.spatialReference)),t?.spatialReference?.imageCoordinateSystem&&(e.spatialReference=ot(t.spatialReference));const r=V(i),o=$({...r.query,f:"json",...e}),l=k(o,n),{data:u}=await S(`${r.path}/computeAngles`,l);return u.spatialReference=u.spatialReference?u.spatialReference.geodataXform!=null?new he({wkid:0,imageCoordinateSystem:u.spatialReference}):he.fromJSON(u.spatialReference):null,u.north==="NaN"&&(u.north=null),u.up==="NaN"&&(u.up=null),new zn(u)}async function ga(i,t,n){const e=(t=_(Qn,t)).toJSON(),{geometries:r}=t;if(r)for(let c=0;c<r.length;c++)r[c].spatialReference?.imageCoordinateSystem&&(e.geometries.geometries[c].spatialReference=Kt(r[c].spatialReference));const o=V(i),l=$({...o.query,f:"json",...e}),u=k(l,n),{data:p}=await S(`${o.path}/computePixelLocation`,u);return Kn.fromJSON(p)}async function fa(i,t,n){const e=await br(i,t,n),r=V(i),{data:o}=await S(`${r.path}/computeStatisticsHistograms`,e),{statistics:l}=o;return l?.length&&l.forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:l,histograms:o.histograms}}async function wa(i,t,n){const e=await br(i,t,n),r=V(i),{data:o}=await S(`${r.path}/computeHistograms`,e);return{histograms:o.histograms}}async function Ia(i,t,n){const e=(t=_(ea,t)).toJSON();Pi(e),e.outFields?.length&&(e.outFields=e.outFields.join(","));const r=await ke(t.geometry),o=r?.[0];o!=null&&(e.geometry=Me(o));const l=V(i),u=$({...l.query,f:"json",...e}),p=k(u,n),{data:c}=await S(`${l.path}/getSamples`,p),m=c.samples.map(d=>{const g=d.value==="NaN"||d.value===""?null:d.value.split(" ").map(f=>Number(f));return{...d,pixelValue:g}});return ia.fromJSON({samples:m})}async function Gi(i,t,n){t=_(vr,t);const e=V(i),r=t.geometry?[t.geometry]:[];return ke(r).then(o=>{const l=t.toJSON(),u=o?.[0];u!=null&&(l.geometry=JSON.stringify(Me(u)));const p=$({...e.query,f:"json",...l}),c=k(p,n);return S(e.path+"/identify",c)}).then(o=>Wn.fromJSON(o.data))}async function Ma(i,t,n){t=_(Zn,t);const e=await Qt(i,t,[t.fromGeometry,t.toGeometry],n);return Gn.fromJSON(e)}async function va(i,t,n){t=_(On,t);const e=await Qt(i,t,[t.geometry],n);return Bn.fromJSON(e)}async function ba(i,t,n){t=_(Xn,t);const e=await Qt(i,t,[t.geometry],n);return Yn.fromJSON(e)}async function Sa(i,t,n){t=_(Hn,t);const e=await Qt(i,t,[t.fromGeometry,t.toGeometry],n);return Vn.fromJSON(e)}async function Qt(i,t,n,e){const r=V(i),o=await ke(n),l=t.toJSON();o[0]!=null&&(l.fromGeometry=JSON.stringify(Me(o[0]))),o[1]!=null&&(l.toGeometry=JSON.stringify(Me(o[1])));const u=$({...r.query,f:"json",...l}),p=k(u,e),{data:c}=await S(r.path+"/measure",p);return c}async function Ra(i,t,n){const e=await Sr(i,t,n);return da.fromJSON(e)}async function Da(i,t,n){const e=await Sr(i,t,n);return ca.fromJSON(e)}async function Sr(i,t,n){t=_(ma,t);const e=V(i),r=t.toJSON(),o=$({...e.query,f:"json",...r}),l=k(o,n),{data:u}=await S(e.path+"/measureFromImage",l);return u}function Me(i){const t=i.toJSON();return i.spatialReference?.imageCoordinateSystem&&(t.spatialReference=Kt(i.spatialReference)),t}function Kt(i){const{imageCoordinateSystem:t}=i;if(t){const{id:n,referenceServiceName:e}=t;return n!=null?e?{icsid:n,icsns:e}:{icsid:n}:{ics:t}}return i.toJSON()}function ot(i,t){if(!i.imageCoordinateSystem)return ai(i);const n=Kt(i),{icsid:e,icsns:r}=n;return e==null||r!=null&&!t?.toLowerCase().includes("/"+r.toLowerCase()+"/")?JSON.stringify(n):`0:${e}`}async function Aa(i,t,n){t=_(Un,t);const e=V(i),r=t.toJSON();t.outSpatialReference&&(r.outSR=ot(t.outSpatialReference));const o=$({...e.query,f:"json",...r}),l=k(o,n),{data:u}=await S(e.path+"/queryBoundary",l);return _n.fromJSON(u)}async function xa(i,t,n){const e=(t=_(En,t)).toJSON();Pi(e),e.objectIds?.length&&(e.objectIds=e.objectIds.join(",")),e.geometry||e.objectIds||e.time||e.where||(e.where="1=1");const r=await ke(t.geometry),o=r?.[0];o!=null&&(e.geometry=Me(o));const l=o?.spatialReference??t.geometry?.spatialReference;l&&(e.inSR=ot(l));const u=V(i),p=$({...u.query,f:"json",...e}),c=k(p,n),{data:m}=await S(`${u.path}/queryGPSInfo`,c);return Jn.fromJSON(m)}async function ja(i,t,n){const e=(t=_(sa,t)).toJSON();t.geometry.spatialReference.imageCoordinateSystem&&(e.geometry=Me(t.geometry)),t.depthOffset&&t.adjust||delete e.options;const r=V(i),o=$({...r.query,f:"json",...e}),l=k(o,n),{data:u}=await S(`${r.path}/imageToMap`,l);return se(u)}async function Ta(i,t,n){const e=(t=_(ra,t)).toJSON();t.rasterIds?.length&&(e.rasterIds=t.rasterIds.join(","));const r=V(i),o=$({...r.query,f:"json",...e}),l=k(o,n),{data:u}=await S(`${r.path}/imageToMapMultiray`,l);return se(u)}async function Ca(i,t,n){const e=(t=_(pa,t)).toJSON(),r=await ke(t.geometry),o=r?.[0];o!=null&&(e.geometry=Me(o)),t.visibleOnly||delete e.options;const l=o?.spatialReference??t.geometry?.spatialReference;l&&(e.inSR=ot(l));const u=V(i),p=$({...u.query,f:"json",...e}),c=k(p,n),{data:m}=await S(`${u.path}/mapToImage`,c);return se(m)}async function Na(i,t,n){const e=(t=_(na,t)).toJSON(),r=V(i),o=$({...r.query,f:"json",...e}),l=k(o,n),{data:u}=await S(`${r.path}/getImageUrl`,l);return aa.fromJSON(u)}async function Fa(i,t,n){const e=(t=_(Nn,t)).toJSON(),r=await ke([t.fromGeometry,t.toGeometry]);r[0]!=null&&(e.fromGeometry=Me(r[0]),r[0].spatialReference&&(e.inSR=ot(r[0].spatialReference))),r[1]!=null&&(e.toGeometry=Me(r[1])),t.objectIds?.length&&(e.objectIds=e.objectIds.join(","));const o=V(i),l=$({...o.query,f:"json",...e}),u=k(l,n),{data:p}=await S(`${o.path}/find`,u);return Ln.fromJSON(p)}async function Rr(i,t,n){const e=V(i),{rasterFunction:r,sourceJSON:o}=t||{},l=r?JSON.stringify(r.rasterFunctionDefinition||r):null,u=$({...e.query,renderingRule:l,f:"json"}),p=k(u,n);i=e.path;const c=o||await S(i,p).then(K=>K.data),m=c.hasRasterAttributeTable?S(`${i}/rasterAttributeTable`,p):null,d=c.hasColormap?S(`${i}/colormap`,p):null,g=c.hasHistograms?S(`${i}/histograms`,p):null,f=c.currentVersion>=10.3?S(`${i}/keyProperties`,p):null,h=c.hasMultidimensions?S(`${i}/multidimensionalInfo`,p):null,y=await Promise.allSettled([m,d,g,f,h]);let w=null;if(c.minValues&&c.minValues.length===c.bandCount){w=[];for(let K=0;K<c.minValues.length;K++)w.push({min:c.minValues[K],max:c.maxValues[K],avg:c.meanValues[K],stddev:c.stdvValues[K]})}const b=He.fromJSON(c.extent),R=Math.ceil(b.width/c.pixelSizeX-.1),N=Math.ceil(b.height/c.pixelSizeY-.1),L=he.fromJSON(c.spatialReference||c.extent.spatialReference),T=y[0].status==="fulfilled"?y[0].value?.data:null,C=T?.features?.length?Ci.fromJSON(T):null,z=y[1].status==="fulfilled"?y[1].value?.data.colormap:null,Q=z?.length?z:null,Le=y[2].status==="fulfilled"?y[2].value?.data.histograms:null,be=Le?.[0]?.counts?.length?Le:null,le=y[3].status==="fulfilled"?y[3].value?.data??{}:{},ee=y[4].status==="fulfilled"?y[4].value?.data.multidimensionalInfo:null,ue=ee?.variables?.length?ee:null;ue&&ue.variables.forEach(K=>{K.statistics?.length&&K.statistics.forEach(Re=>{Re.avg=Re.mean,Re.stddev=Re.standardDeviation}),K.dimensions?.forEach(Re=>{Re.name!=="StdTime"||Re.recurring||Re.unit||(Re.unit="ISO8601")})});const{defaultVariable:Se,serviceDataType:ae}=c;Se&&Se!==le.DefaultVariable&&(le.DefaultVariable=Se),ae?.includes("esriImageServiceDataTypeVector")&&!ae.includes(le.DataType)&&(le.DataType=ae.replace("esriImageServiceDataType",""));let A=c.noDataValue;c.noDataValues?.length&&c.noDataValues.some(K=>K!==A)&&(A=c.noDataValues);const Dr=c.transposeInfo?new er({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new F({x:c.extent.xmin,y:c.extent.ymax,spatialReference:L}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(R,N))/Math.LN2-8)),transposeInfo:c.transposeInfo}):void 0;return new ji({width:R,height:N,bandCount:c.bandCount,extent:He.fromJSON(c.extent),spatialReference:L,pixelSize:new F({x:c.pixelSizeX,y:c.pixelSizeY,spatialReference:L}),pixelType:c.pixelType.toLowerCase(),statistics:w,attributeTable:C,colormap:Q,histograms:be,keyProperties:le,noDataValue:A,multidimensionalInfo:ue,storageInfo:Dr})}function qi(i,t,n){return Rr(i,{sourceJSON:t},n)}function La(i,t,n){return Rr(i,{rasterFunction:t},n)}function Pa(i,t){i.attributeTable||(t.hasRasterAttributeTable=!1),i.histograms||(t.hasHistograms=!1),i.colormap||(t.hasColormap=!1),i.multidimensionalInfo||(t.hasMultidimensions=!1)}async function za(i,t,n){const e=V(i),r=$({...e?.query,f:"json"}),o=k(r,n),l=`${e?.path}/${t}/info`,u=S(`${l}`,o),p=S(`${l}/keyProperties`,o),c=await Promise.allSettled([u,p]),m=c[0].status==="fulfilled"?c[0].value.data:null,d=c[1].status==="fulfilled"?c[1].value.data:null;let g=null;m.statistics?.length&&(g=m.statistics.map(L=>({min:L[0],max:L[1],avg:L[2],stddev:L[3]})));const f=He.fromJSON(m.extent),h=Math.ceil(f.width/m.pixelSizeX-.1),y=Math.ceil(f.height/m.pixelSizeY-.1),w=f.spatialReference,b=new F({x:m.pixelSizeX,y:m.pixelSizeY,spatialReference:w}),R=m.histograms?.length?m.histograms:null,N=new er({origin:m.origin,blockWidth:m.blockWidth,blockHeight:m.blockHeight,firstPyramidLevel:m.firstPyramidLevel,maximumPyramidLevel:m.maxPyramidLevel});return new ji({width:h,height:y,bandCount:m.bandCount,extent:f,spatialReference:w,pixelSize:b,pixelType:m.pixelType.toLowerCase(),statistics:g,histograms:R,keyProperties:d,storageInfo:N})}const Oa=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Ba=Or(Br,{min:0,max:255});function Ua(i){const t=JSON.stringify(i),n=t.includes('"rasterFunctionDefinition":{'),e=n?t.match(/"type":"(.*?FunctionArguments")/gi):t.match(/"rasterFunction":"(.*?")/gi),r=e?.map(o=>n?o.slice(8,-18):o.slice(18,-1));return r?r.join("/"):null}const _a=i=>{let t=class extends i{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new B({layer:this}))}readServiceSupportsMosaicRule(e,r){return this._isMosaicRuleSupported(r)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.length<1||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.forEach(r=>{e.set(r.name.toLowerCase().replaceAll(/ /gi,"_"),r.name)}),e}readBandIds(e,r){if(Array.isArray(e)&&e.length>0&&e.every(o=>typeof o=="number"))return e}readCapabilities(e,r){return this._readCapabilities(r)}writeCompressionQuality(e,r,o){e!=null&&this.format!=="lerc"&&(r[o]=e)}writeCompressionTolerance(e,r,o){this.format==="lerc"&&e!=null&&(r[o]=e)}readDefaultMosaicRule(e,r){return this._serviceSupportsMosaicRule?re.fromJSON(r):null}get fieldsIndex(){return this.fields?new Ms(this.fields):null}set format(e){e&&Oa.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,r){return r.serviceDataType==="esriImageServiceDataTypeVector-UV"||r.serviceDataType==="esriImageServiceDataTypeVector-MagDir"||this.pixelFilter!=null?"lerc":"jpgpng"}readMinScale(e,r){return r.minLOD!=null&&r.maxLOD!=null?e:0}readMaxScale(e,r){return r.minLOD!=null&&r.maxLOD!=null?e:0}set mosaicRule(e){let r=e;r?.mosaicMethod&&(r=re.fromJSON({...r.toJSON(),mosaicMethod:r.mosaicMethod,mosaicOperation:r.mosaicOperation})),this._set("mosaicRule",r)}readMosaicRule(e,r){const o=e||r.mosaicRule;return o?re.fromJSON(o):this._isMosaicRuleSupported(r)?re.fromJSON(r):null}writeMosaicRule(e,r,o){const{mosaicRule:l}=this;this._isValidCustomizedMosaicRule(l)&&(r[o]=l.toJSON())}writeNoData(e,r,o){e!=null&&typeof e=="number"&&(r[o]=Ba(e))}readObjectIdField(e,r){return e||(e=r.fields.find(l=>l.type==="esriFieldTypeOID"||l.type==="oid")?.name),e}get parsedUrl(){return Pr(this.url)}readSourceType(e,r){return this._isMosaicDataset(r)?"mosaic-dataset":"raster-dataset"}get renderer(){const{activePresetRendererName:e,presetRenderers:r}=this;return e?r?.find(({name:l})=>l===e)?.renderer.clone():this.internalRenderer}set renderer(e){this.activePresetRendererName=null,this.internalRenderer=e}set internalRenderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("internalRenderer",e)}readRenderer(e,r,o){const l=r?.layerDefinition?.drawingInfo?.renderer,u=Cn(l,o);return u==null?null:(u.type==="vector-field"&&r.symbolTileSize&&!l.symbolTileSize&&(u.symbolTileSize=r.symbolTileSize),pr(u)||ni.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),u)}writeRenderer(e,r,o){r.layerDefinition=r.layerDefinition||{},r.layerDefinition.drawingInfo=r.layerDefinition.drawingInfo||{},r.layerDefinition.drawingInfo.renderer=e.toJSON(),e.type==="vector-field"&&(r.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.fields?.map(l=>l.clone())??[];e.push(Wr()),this.sourceType==="mosaic-dataset"&&this.fields?.length&&e.push(Qr()),this.version>=10.4&&this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.some(({name:l})=>l.toLowerCase()==="none")&&e.push(Kr()),this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.filter(({name:l})=>l.toLowerCase()!=="none").forEach(({name:l})=>e.push(Xr(l)));const{rasterInfo:r}=this;if(this._isVectorDataSet()){const l=r?.multidimensionalInfo?.variables[0].unit?.trim(),u=Yr(l),p=es();e.push(u,p)}if(r?.multidimensionalInfo&&this.sourceType==="raster-dataset"){const l=ts(r.multidimensionalInfo);e.push(...l)}const o=r?.attributeTable;if(o!=null){const l=is(o);e.push(...l)}return e}set rasterFunction(e){let r=e;r?.rasterFunction&&(r=j.fromJSON({...r.toJSON(),rasterFunction:r.rasterFunction,rasterFunctionArguments:r.rasterFunctionArguments})),this._set("rasterFunction",r)}readRasterFunction(e,r){const o=r.rasterFunctionInfos;return r.renderingRule||o?.length&&o[0].name!=="None"?this._isRFTJson(r.renderingRule)?j.fromJSON({rasterFunctionDefinition:r.renderingRule}):j.fromJSON(r.renderingRule||{rasterFunctionInfos:r.rasterFunctionInfos}):null}readSpatialReference(e,r){const o=e||r.extent.spatialReference;return o?he.fromJSON(o):null}writePixelType(e,r,o){this.serviceRasterInfo!=null&&this.pixelType===this.serviceRasterInfo.pixelType||(r[o]=we.toJSON(e))}readVersion(e,r){let o=r.currentVersion;return o||(o=r.hasOwnProperty("fields")||r.hasOwnProperty("timeInfo")?10:9.3),o}applyFilter(e){let r=e;return this.pixelFilter&&(r=this._clonePixelData(e),this.pixelFilter(r)),r}async applyRenderer(e,r){let o=e;const{renderer:l,symbolizer:u,pixelFilter:p,bandIds:c}=this;if(!this._isPicture()&&l&&u&&!p){const m=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(l.toJSON()),d=this._rasterJobHandler.instance;if(d){m&&(u.bind(),await d.updateSymbolizer(u,r),this._cachedRendererJson=l.toJSON());const g=await d.symbolize({bandIds:c,...e},r);o={extent:e.extent,pixelBlock:g}}else o={extent:e.extent,pixelBlock:u.symbolize({bandIds:c,...e})}}return o}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async calculateVolume(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsCalculateVolume)throw new v("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=D(e),this.mosaicRule&&e.mosaicRule==null&&(e.mosaicRule=this.mosaicRule),ya(this.url,e,this._getRequestOptions(r))}async computeAngles(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsComputeAngles)throw new v("imagery-layer:compute-angles","this operation is not supported on the input image service");return ha(this.url,e,this._getRequestOptions(r))}async computePixelSpaceLocations(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsComputePixelLocation)throw new v("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return ga(this.url,e,this._getRequestOptions(r))}async computeHistograms(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsComputeHistograms)throw new v("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=D(e),this._applyMosaicAndRenderingRules(e),wa(this.url,e,this._getRequestOptions(r))}async computeStatisticsHistograms(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsComputeStatisticsHistograms)throw new v("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=D(e),this._applyMosaicAndRenderingRules(e),fa(this.url,e,this._getRequestOptions(r))}async measureHeight(e,r){const o=await this._fetchCapabilities(r?.signal);if(!(e.operationType==="base-and-top"?o.mensuration.supportsHeightFromBaseAndTop:e.operationType==="base-and-top-shadow"?o.mensuration.supportsHeightFromBaseAndTopShadow:o.mensuration.supportsHeightFromTopAndTopShadow))throw new v("imagery-layer:measure-height","this operation is not supported on the input image service");return e=D(e),this._applyMosaicRule(e),Ma(this.url,e,this._getRequestOptions(r))}async measureAreaAndPerimeter(e,r){const o=await this._fetchCapabilities(r?.signal);if(!(o.mensuration.supportsAreaAndPerimeter&&(!e.is3D||o.mensuration.supports3D)))throw new v("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=D(e),this._applyMosaicRule(e),va(this.url,e,this._getRequestOptions(r))}async measureDistanceAndAngle(e,r){const o=await this._fetchCapabilities(r?.signal);if(!(o.mensuration.supportsDistanceAndAngle&&(!e.is3D||o.mensuration.supports3D)))throw new v("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=D(e),this._applyMosaicRule(e),Sa(this.url,e,this._getRequestOptions(r))}async measurePointOrCentroid(e,r){const o=await this._fetchCapabilities(r?.signal);if(!(o.mensuration.supportsPointOrCentroid&&(!e.is3D||o.mensuration.supports3D)))throw new v("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=D(e),this._applyMosaicRule(e),ba(this.url,e,this._getRequestOptions(r))}async measureLengthFromImage(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsMeasureFromImage)throw new v("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if(e.geometry.type!=="polyline")throw new v("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return Ra(this.url,e,this._getRequestOptions(r))}async measureAreaFromImage(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsMeasureFromImage)throw new v("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if(e.geometry.type!=="polygon")throw new v("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return Da(this.url,e,this._getRequestOptions(r))}getField(e){const{fieldsIndex:r}=this;return r?.get(e)}getFieldDomain(e,r){const o=this.getField(e);return o?o.domain:null}async fetchImage(e,r,o,l={}){if(e==null||r==null||o==null)throw new v("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const d=await this._generateRasterInfo(this.rasterFunction,{signal:l.signal});d&&(this.rasterInfo=d)}const u=this.getExportImageServiceParameters(e,r,o,l.timeExtent);if(u==null){if(l.requestAsImageElement&&this._canRequestImageElement(this.format)){const b=document.createElement("canvas");return b.width=r,b.height=o,l.returnImageBitmap?{imageBitmap:await Bi(b,`${n(this.parsedUrl)}/exportImage`,l.signal)}:{imageOrCanvasElement:b}}const{bandIds:d,rasterInfo:g}=this,f=(d?.length||g.bandCount)??0,h=r*o,y=g.pixelType,w=[];for(let b=0;b<f;b++)w.push(ye.createEmptyBand(y,h));return{pixelData:{pixelBlock:new ye({width:r,height:o,pixels:w,mask:new Uint8Array(h),pixelType:y}),extent:e}}}const p=!!l.requestAsImageElement&&!this.pixelFilter,c=p&&!!l.returnImageBitmap,m={imageServiceParameters:u,imageProps:{extent:e,width:r,height:o,format:this.format},requestAsImageElement:p,returnImageBitmap:c,signal:l.signal};return this._requestArrayBuffer(m)}fetchKeyProperties(e){return S(n(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then(r=>r.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new v("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):S(n(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then(r=>Ci.fromJSON(r.data))}getCatalogItemRasterInfo(e,r){const o={...r,query:this._getQueryParams()};return za(n(this.parsedUrl),e,o)}async getCatalogItemICSInfo(e,r){const{data:o}=await S(n(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...r}),l=o?.ics;if(!l)return;let u=null;try{u=(await S(n(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...r})).data.extent}catch{}if(!u?.spatialReference)return{ics:l,icsToPixelTransform:null,icsExtent:null,northDirection:null};const p=this.version>=10.7?S(n(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...r}).then(A=>A.data).catch(()=>({})):{},c=u.spatialReference,m={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[u]}),inSR:ai(c),outSR:"0:"+e},d=S(n(this.parsedUrl)+"/project",{query:this._getQueryParams(m),...r}).then(A=>A.data).catch(()=>({})),g=5,f=(u.xmin+u.xmax)/2,h=(u.ymax-u.ymin)/(g+1),y=u.ymin+h,w=[];for(let A=0;A<g;A++)w.push({x:f,y:y+h*A});const b={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:w}),inSR:ai(c),outSR:"0:"+e},R=S(n(this.parsedUrl)+"/project",{query:this._getQueryParams(b),...r}).then(A=>A.data).catch(()=>({})),N=await Promise.all([p,d,R]);let L=N[0].ipxf;if(L==null){const A=l.geodataXform?.xf_0;A?.name?.toLowerCase()==="topup"&&A?.coefficients?.length===6&&(L={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:A.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const T=He.fromJSON(N[1]?.geometries?.[0]);T&&(T.spatialReference=new he({wkid:0,imageCoordinateSystem:l}));const C=N[2].geometries?N[2].geometries.filter(A=>A?.x!=null&&A.y!=null&&A.x!=="NaN"&&A.y!=="NaN"):[],z=C.length;if(z<3)return{ics:l,icsToPixelTransform:L,icsExtent:T,northDirection:null};let Q=0,Le=0,be=0,le=0;for(let A=0;A<z;A++)Q+=C[A].x,Le+=C[A].y,be+=C[A].x*C[A].x,le+=C[A].x*C[A].y;const ee=(z*le-Q*Le)/(z*be-Q*Q);let ue=0;const Se=C[g-1].x>C[0].x,ae=C[g-1].y>C[0].y;return ee===1/0?ue=ae?90:270:ee===0?ue=Se?0:180:ee>0?ue=Se?180*Math.atan(ee)/Math.PI:180*Math.atan(ee)/Math.PI+180:ee<0&&(ue=ae?180+180*Math.atan(ee)/Math.PI:360+180*Math.atan(ee)/Math.PI),{ics:l,icsToPixelTransform:L,icsExtent:T,northDirection:ue}}async generateRasterInfo(e,r){e=_(j,e);const o={...r,query:this._getQueryParams()};if(!e||e.functionName?.toLowerCase()==="none"||this._isVectorFieldResampleFunction(e))return this.serviceRasterInfo??qi(n(this.parsedUrl),this.sourceJSON,o);const l=Ua(e);if(!l)throw new v("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[l])return this._functionRasterInfos[l];const u=La(n(this.parsedUrl),e,o);this._functionRasterInfos[l]=u;try{return await u}catch(p){throw this._functionRasterInfos[l]=null,p}}getExportImageServiceParameters(e,r,o,l){e=e.clone().shiftCentralMeridian();const u=ot(e.spatialReference,n(this.parsedUrl)),p=this.exportImageServiceParameters.toJSON(),{bandIds:c,noData:m}=p;let{renderingRule:d}=p;const g=this.rasterFunction?.rasterFunctionDefinition,f=this.renderer?.type,h=!f||f==="raster-stretch"||f==="raster-colormap"||f==="unique-value"||f==="class-breaks"||f==="raster-shaded-relief";if(c?.length&&this._hasRasterFunction(this.rasterFunction)&&!g&&h){const b={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:c}};if(d.rasterFunction==="Stretch")b.rasterFunctionArguments.Raster=d.rasterFunctionArguments.Raster,d.rasterFunctionArguments.Raster=b;else if(d.rasterFunction==="Colormap"){const R=d.rasterFunctionArguments.Raster;R?.rasterFunction==="Stretch"?(b.rasterFunctionArguments.Raster=R.rasterFunctionArguments.Raster,R.rasterFunctionArguments.Raster=b):(b.rasterFunctionArguments.Raster=R,d.rasterFunctionArguments.Raster=b)}else b.rasterFunctionArguments.Raster=d,d=b;p.bandIds=void 0}else p.bandIds=c?.join(",");Array.isArray(m)&&m.length>0&&(p.noData=m.join(","));const y=this._processMultidimensionalIntersection(null,l,this.exportImageServiceParameters.mosaicRule);if(y.isOutSide)return null;p.mosaicRule=y.mosaicRule!=null?JSON.stringify(y.mosaicRule):null,l=y.timeExtent,p.renderingRule=this._getRenderingRuleString(j.fromJSON(d));const w={};if(l!=null){const{start:b,end:R}=l.toJSON();b&&R&&b===R?w.time=""+b:b==null&&R==null||(w.time=`${b??"null"},${R??"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:u,imageSR:u,size:r+","+o,...p,...w}}async getSamples(e,r){if(!(await this._fetchCapabilities(r?.signal))?.operations.supportsGetSamples)throw new v("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=D(e);const{raster:l}=this;return l&&e.raster==null&&(e.raster=l),Ia(this.url,e,this._getRequestOptions(r))}async identify(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsIdentify)throw new v("imagery-layer:identify","identify operation is not supported on the input image service");e=D(e),this.version<10.91&&e.geometry?.type==="extent"&&(e.geometry=Ut.fromExtent(e.geometry));const o=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(o.isOutSide)throw new v("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=o.timeExtent,e.mosaicRule=o.mosaicRule;const{raster:l,rasterFunction:u}=this;return u&&e.rasterFunction==null&&(e.rasterFunction=u),l&&e.raster==null&&(e.raster=l),Gi(this.url,e,this._getRequestOptions(r))}async imageToMap(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsImageToMap)throw new v("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return ja(n(this.parsedUrl),e,this._getRequestOptions(r))}async imageToMapMultiray(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsImageToMapMultiray)throw new v("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return Ta(n(this.parsedUrl),e,this._getRequestOptions(r))}async mapToImage(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsMapToImage)throw new v("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return Ca(n(this.parsedUrl),e,this._getRequestOptions(r))}async findImages(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsFindImages)throw new v("imagery-layer:find-images","findImages operation is not supported on the input image service");return Fa(n(this.parsedUrl),e,this._getRequestOptions(r))}async getImageUrl(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsGetImageUrl)throw new v("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return Na(n(this.parsedUrl),e,this._getRequestOptions(r))}createQuery(){return new ti({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}async queryBoundary(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsQueryBoundary)throw new v("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return e=e??{outSpatialReference:this.spatialReference},Aa(n(this.parsedUrl),e,this._getRequestOptions(r))}async queryRasters(e,r){return{query:e,requestOptions:r}=await this._prepareForQuery(e,r),zs(this.url,e,r)}async queryObjectIds(e,r){return{query:e,requestOptions:r}=await this._prepareForQuery(e,r),Ls(this.url,e,r)}async queryGPSInfo(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsQueryGPSInfo)throw new v("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return e=e??{where:"1=1"},xa(n(this.parsedUrl),e,this._getRequestOptions(r))}async queryRasterCount(e,r){return{query:e,requestOptions:r}=await this._prepareForQuery(e,r),Ps(this.url,e,r)}async queryVisibleRasters(e,r){if(!e)throw new v("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:o,returnDomainValues:l,returnTopmostRaster:u,showNoDataRecords:p}=r||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let c=!1,m=null,d=null;const g=Ke.servicePixelValue.toLowerCase(),f=this._rasterFunctionNamesIndex;if(e.outFields!=null&&(c=e.outFields.some(T=>!T.toLowerCase().startsWith(g)),this.version>=10.4)){const T=e.outFields.filter(z=>z.toLowerCase().startsWith(g)&&z.length>g.length).map(z=>{const Q=z.slice(g.length+1);return[this._updateRenderingRulesFunctionName(Q,f),Q]});m=T.map(z=>new j({functionName:z[0]})),d=T.map(z=>z[1]);const{rasterFunction:C}=this;m.length===0?C?.functionName?(m.push(C),d.push(C.functionName)):m=null:C?.functionName&&!m.some(z=>z.functionName===C.functionName)&&(m.push(C),d.push(C.functionName))}const h=e.outSpatialReference==null||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:y}=this;let w=e.timeExtent||this.timeExtent;if(y){const{isOutside:T,intersection:C}=ei(y,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:this.exportImageServiceParameters.mosaicRule?.multidimensionalDefinition});if(T)throw new v("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");C?.timeExtent!=null&&(w=C.timeExtent)}const b=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,w);let R=e.geometry;this.version<10.91&&R?.type==="extent"&&(R=Ut.fromExtent(R));const N=this._getQueryParams({geometry:R,timeExtent:w,mosaicRule:b,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:m,pixelSize:o,returnCatalogItems:c,returnGeometry:h,raster:this.raster,maxItemCount:u?1:null});delete N.f;const L=new vr(N);try{await this._generateRasterInfo(this.rasterFunction);const T=await Gi(this.url,L,{signal:r?.signal,query:{...this.customParameters}}),C=e.outFields,z=T.value!=null&&T.value.toLowerCase().includes("nodata"),Q=c&&!h&&T?.catalogItems?.features.length&&(p||!z),Le=this.multidimensionalInfo&&this.sourceType==="raster-dataset"?rs({rasterInfo:this.rasterInfo,multidimensionalDefinition:b?.multidimensionalDefinition,timeExtent:w,multidimensionalSubset:this.multidimensionalSubset}):null;if(!Q)return this._processVisibleRastersResponse(T,{returnDomainValues:l,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:C,effectiveMultidimensionalDefinition:Le});const be=this.objectIdField||"ObjectId",le=T.catalogItems?.features??[],ee=le.map(ae=>ae.attributes?.[be]),ue=new ti({objectIds:ee,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[be]}),Se=await this.queryRasters(ue);return Se?.features?.length&&Se.features.forEach(ae=>{le.forEach(A=>{A.attributes[be]===ae.attributes[be]&&ae.geometry&&(A.geometry=ae.geometry.clone(),e.outSpatialReference!=null&&(A.geometry.spatialReference=e.outSpatialReference))})}),this._processVisibleRastersResponse(T,{returnDomainValues:l,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:C,effectiveMultidimensionalDefinition:Le})}catch{throw new v("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,r){const o=S(n(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:r}).then(p=>p.data?.statistics),l=S(n(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:r}).then(p=>p.data?.histograms),u=await Promise.all([o,l]);return u[0]&&u[0].forEach(p=>{p.avg=p.mean,p.stddev=p.standardDeviation}),{statistics:u[0]||null,histograms:u[1]||null}}async createFlowMesh(e,r){const o=this._rasterJobHandler.instance;return o?o.createFlowMesh(e,r):Rs(e.meshType,e.simulationSettings,e.flowData,r.signal!=null?r.signal:new AbortController().signal)}getMultidimensionalSubsetVariables(e){const r=e??this.serviceRasterInfo.multidimensionalInfo;return ss(this.multidimensionalSubset,r)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const r=this.sourceJSON,o=this.serviceRasterInfo!=null?Promise.resolve(this.serviceRasterInfo):qi(n(this.parsedUrl),r,{signal:e,query:this._getQueryParams()}).then(p=>(this._set("serviceRasterInfo",p),this._set("multidimensionalInfo",p.multidimensionalInfo),Pa(p,r),p)),l=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,u=this._getRasterFunctionInfos();return Promise.all([o,l,u]).then(p=>{p[1]?this._set("rasterInfo",p[1]):this._set("rasterInfo",p[0]),p[2]&&this._set("rasterFunctionInfos",p[2]),this.internalRenderer&&!this._isSupportedRenderer(this.internalRenderer)&&(this._set("internalRenderer",null),ni.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("internalRenderer",this._configRenderer(this.renderer)),this.addHandles([zr(()=>this.rasterFunction,m=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(m).then(d=>{d&&(this.rasterInfo=d)})})]);const{serviceRasterInfo:c}=this;c.multidimensionalInfo!=null&&this._updateMultidimensionalDefinition(c)})}_combineMosaicRuleWithTimeExtent(e,r){const o=this.timeInfo,{multidimensionalInfo:l}=this.serviceRasterInfo;if(e==null||l==null||r==null||o?.startField==null)return e;const{startField:u}=o,p=l.variables.some(y=>y.dimensions.some(w=>w.name===u))?u:"StdTime";if(e=e.clone(),this.sourceType==="mosaic-dataset")return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter(y=>y.dimensionName!==p),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const c=e.multidimensionalDefinition.filter(y=>y.dimensionName===p),m=r.start!=null?r.start.getTime():null,d=r.end!=null?r.end.getTime():null,g=m==null||d==null||m===d,f=g?[m||d]:[[m,d]],h=this.version>=10.8;if(c.length)c.forEach(y=>{y.dimensionName===p&&(h?(y.dimensionName=null,y.isSlice=!1,y.values=[]):(y.isSlice=g,y.values=f))});else if(!h){const y=e.multidimensionalDefinition.filter(w=>w.variableName!=null&&w.dimensionName==null);y.length?y.forEach(w=>{w.dimensionName=p,w.isSlice=g,w.values=f}):e.multidimensionalDefinition.push(new Ai({variableName:"",dimensionName:p,isSlice:g,values:f}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return e==null?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(r=>!(!r.variableName&&!r.dimensionName)),e.multidimensionalDefinition.length===0&&(e.multidimensionalDefinition=null)),this.sourceType!=="mosaic-dataset"&&e.multidimensionalDefinition==null?null:e)}async _prepareForQuery(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsQuery)throw new v("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=e!=null?_(ti,e):this.createQuery(),r=this._getRequestOptions(r),this.raster&&(r.query={...r.query,raster:this.raster}),{query:e,requestOptions:r}}async _initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const e=new mn;this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e},()=>{}),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:r,rasterFunction:o}=this;return e.type==="unique-value"&&this._hasRasterFunction(o)&&r?.bandCount===1&&["u8","s8"].includes(r.pixelType)||r!=null&&e!=null&&fn(r).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){let r=this.sourceJSON;if(!r){const{data:o,ssl:l}=await S(n(this.parsedUrl),{query:this._getQueryParams(),signal:e});r=o,this.sourceJSON=r,l&&(this.url=this.url.replace(/^http:/i,"https:"))}if(r.capabilities?.toLowerCase().split(",").map(o=>o.trim()).indexOf("tilesonly")>-1)throw new v("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){return e.serviceSourceType?e.serviceSourceType==="esriImageServiceSourceTypeMosaicDataset":e.fields?.length>0}_isMosaicRuleSupported(e){if(!e)return!1;const r=this._isMosaicDataset(e),o=e.currentVersion>=10.71&&e.hasMultidimensions&&!(e.fields?.length>1);return r||o}_isVectorFieldResampleFunction(e){if(e==null)return!1;const{functionName:r,functionArguments:o}=e,l=r?.toLowerCase()==="resample",u=o?.ResampleType||o?.resampleType;return l&&(u===7||u===10)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){const r=this._isPicture(),{rasterInfo:o}=this;if(!r&&!this.pixelFilter||this._isVectorDataSet()){const l=this.mosaicRule?.multidimensionalDefinition?.[0].variableName,u=hn({variableName:l,rasterFunctionName:this.rasterFunction?.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&o.bandCount>=3){const c=u?.bandIds??wr(o);!c||o.bandCount===3&&c[0]===0&&c[1]===1&&c[2]===2||(this.bandIds=c)}e||(e=u?.renderer??gn(o,{bandIds:this.bandIds,variableName:this.rasterFunction?null:l}));const p=An(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=p,this.symbolizer.rasterInfo=o):this.symbolizer=new fs({rendererJSON:p,rasterInfo:o}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return e==null?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock!=null?e.pixelBlock.clone():null}}_getQueryParams(e){e?.renderingRule!=null&&typeof e.renderingRule!="string"&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:r,viewId:o}=this;return{raster:r,viewId:o,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e?.query,...this.customParameters}}}_decodePixelBlock(e,r,o){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:r}):Oi(e,r,o)}async _getRasterFunctionInfos(e){const r=this.sourceJSON.rasterFunctionInfos;return this.loaded?r:r&&this.version>=10.3?r.length===1&&r[0].name.toLowerCase()==="none"?r:(await S(n(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data?.rasterFunctionInfos:null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:r,requestAsImageElement:o,returnImageBitmap:l,signal:u}=e;if(o&&this._canRequestImageElement(r.format)){const y=`${n(this.parsedUrl)}/exportImage`,{data:w}=await S(y,{responseType:l?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:u});return w instanceof Blob?{imageBitmap:await Bi(w,y,u),params:r}:{imageOrCanvasElement:w,params:r}}const p=this._initJobHandler(),c=S(n(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:u}),m=(await Promise.all([c,p]))[0].data,d=r.format||"jpgpng";let g=d;if(g!=="bsq"&&g!=="bip"&&(g=ws(m)),!g)throw new v("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(m)));const f={signal:u};return{pixelData:{pixelBlock:await(d==="gif"||d==="bmp"||d.includes("png")&&(g==="png"||g==="jpg")?Oi(m,{useCanvas:!0,...r},f):this._decodePixelBlock(m,{width:r.width,height:r.height,planes:null,pixelType:null,noDataValue:null,format:d},f)),extent:r.extent},params:r}}_generateRasterInfo(e,r){return this.generateRasterInfo(e,r).catch(()=>null)}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let r=ns(e,{multidimensionalSubset:this.multidimensionalSubset});if(r!=null&&r.length>0){this.mosaicRule=this.mosaicRule||new re;const o=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&this.rasterFunction.functionName?.toLowerCase()!=="none"&&r.forEach(l=>l.variableName=""),r=r.filter(({variableName:l,dimensionName:u})=>l&&l!=="*"||u),!o?.length&&r.length&&(this.mosaicRule.multidimensionalDefinition=r)}}_processVisibleRastersResponse(e,r){r=r||{};const o=e.value,{templateRRFunctionNames:l,showNoDataRecords:u,returnDomainValues:p,templateFields:c}=r,m=e.processedValues;let d=e.catalogItems?.features,g=e.properties?.Values?.map(N=>N.replaceAll(/ /gi,", "))||[];const f=this.objectIdField||"ObjectId",h=typeof o=="string"&&o.toLowerCase().includes("nodata"),y=[];if(o&&!d&&!h){const N={};N[f]=0,g=[o],d=[new Qi({geometry:this.fullExtent,attributes:N})],this.multidimensionalInfo&&this.sourceType==="raster-dataset"&&as(this.rasterFields,N,r.effectiveMultidimensionalDefinition)}if(!d)return[];this._updateResponseFieldNames(d,c),h&&!u&&(d=[]);const{itemPixelValue:w,servicePixelValue:b}=Ke,R=this.rasterFields.some(N=>N.name===w);for(let N=0;N<d.length;N++){const L=d[N];if(o!=null){const T=g[N],C=this.rasterFunction&&m&&m.length>0&&l&&l.length>0&&l.includes(this.rasterFunction.functionName)?m[l.indexOf(this.rasterFunction.functionName)]:o;if(T.toLowerCase()==="nodata"&&!u)continue;R&&(L.attributes[w]=T),L.attributes[b]=C,this._updateFeatureWithMagDirValues(L,T);const z=this.fields&&this.fields.length>0;let Q=this.rasterFunction&&this.serviceRasterInfo.attributeTable!=null?z?T:o:C;this.rasterFunction||(Q=z?T:o),this._updateFeatureWithRasterAttributeTableValues(L,Q)}if(L.sourceLayer=L.layer=this,p&&this._updateFeatureWithDomainValues(L),l&&m&&l.length===m.length)for(let T=0;T<l.length;T++){const C=`${Ke.servicePixelValue}.${l[T]}`;L.attributes[C]=m[T]}y.push(d[N])}return y}_processMultidimensionalIntersection(e,r,o){const{multidimensionalSubset:l}=this;if(!l)return{isOutSide:!1,timeExtent:r,mosaicRule:o=this._combineMosaicRuleWithTimeExtent(o,r)};if(l){const{isOutside:u,intersection:p}=ei(l,{geometry:e,timeExtent:r});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null};p?.timeExtent!=null&&(r=p.timeExtent)}if(o=this._combineMosaicRuleWithTimeExtent(o,r),o?.multidimensionalDefinition){const{isOutside:u}=ei(l,{multidimensionalDefinition:o.multidimensionalDefinition});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:r,mosaicRule:o}}_updateFeatureWithRasterAttributeTableValues(e,r){const o=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(o==null)return;const{features:l,fields:u}=o,p=u.map(m=>m.name).find(m=>m.toLowerCase()==="value");if(!p)return;const c=l.filter(m=>m.attributes[p]===(r!=null?parseInt(r,10):null));c&&c[0]&&u.forEach(m=>{const d=os+m.name;e.attributes[d]=c[0].attributes[m.name]})}_updateFeatureWithMagDirValues(e,r){if(!this._isVectorDataSet())return;const o=r.split(/,\s*/).map(m=>parseFloat(m)),l=o.map(m=>[m]),u=o.map(m=>({minValue:m,maxValue:m,noDataValue:null})),p=new ye({height:1,width:1,pixelType:"f32",pixels:l,statistics:u});this.pixelFilter!=null&&this.pixelFilter({pixelBlock:p,extent:new He(0,0,0,0,this.spatialReference)});const c=this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"?[p.pixels[0][0],p.pixels[1][0]]:Ds([p.pixels[0][0],p.pixels[1][0]]);e.attributes[Ke.magnitude]=c[0],e.attributes[Ke.direction]=c[1]}_updateFeatureWithDomainValues(e){const r=this.fields&&this.fields.filter(o=>o.domain&&o.domain.type==="coded-value");r?.forEach(o=>{const l=e.attributes[o.name];if(l!=null){const u=o.domain.codedValues.find(p=>p.code===l);u&&(e.attributes[o.name]=u.name)}})}_updateResponseFieldNames(e,r){if(!r||r.length<1)return;const o=this.fieldsIndex;o!=null&&e.forEach(l=>{if(l?.attributes)for(const u of r){const p=o.get(u)?.name;p&&p!==u&&(l.attributes[u]=l.attributes[p],delete l.attributes[p])}})}_getRenderingRuleString(e){if(e){let r=e.toJSON();return r=r.rasterFunctionDefinition??r,(r.thumbnail||r.thumbnailEx)&&(r.thumbnail=r.thumbnailEx=null),JSON.stringify(r)}return null}_hasRasterFunction(e){return e?.functionName!=null&&e.functionName.toLowerCase()!=="none"}_updateRenderingRulesFunctionName(e,r){if(!e||e.length<1)return;if(e==="Raw")return e.replace("Raw","None");const o=e.toLowerCase().replaceAll(/ /gi,"_");return r.has(o)?r.get(o):e}_isRFTJson(e){return e?.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"}_applyMosaicAndRenderingRules(e){const{raster:r,mosaicRule:o,rasterFunction:l}=this;l&&e.rasterFunction==null&&(e.rasterFunction=l),o&&e.mosaicRule==null&&(e.mosaicRule=o),r&&e.raster==null&&(e.raster=r)}_applyMosaicRule(e){const{raster:r,mosaicRule:o}=this;o&&e.mosaicRule==null&&(e.mosaicRule=o),r&&e.raster==null&&(e.raster=r)}_readCapabilities(e){const r=e.capabilities?e.capabilities.toLowerCase().split(",").map(R=>R.trim()):["image","catalog"],{currentVersion:o,advancedQueryCapabilities:l,maxRecordCount:u}=e,p=r.includes("image"),c=e.serviceDataType==="esriImageServiceDataTypeElevation",m=!(!e.spatialReference&&!e.extent?.spatialReference),d=r.includes("edit"),g=r.includes("mensuration")&&m,f=e.mensurationCapabilities==null?[]:e.mensurationCapabilities.toLowerCase().split(",").map(R=>R.trim()),h=g&&f.includes("basic"),y=this._isMosaicDataset(e)&&r.includes("catalog"),w=r.includes("download"),b=o>=10.7&&c||o>=11.4&&(c||g&&f.includes("3d"));return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:p,supportsExportImage:p,supportsIdentify:p,supportsImageToMap:o>=11.2&&y,supportsImageToMapMultiray:o>=11.2&&y,supportsMapToImage:o>=11.2&&y,supportsFindImages:o>=11.2&&y,supportsGetImageUrl:o>=11.3&&w,supportsMeasure:g,supportsMeasureFromImage:o>=11.2,supportsDownload:w,supportsQuery:y&&e.fields&&e.fields.length>0,supportsGetSamples:o>=10.2&&p,supportsProject:o>=10.3&&p,supportsComputeStatisticsHistograms:o>=10.4&&p,supportsQueryBoundary:o>=10.6&&p,supportsCalculateVolume:b,supportsComputePixelLocation:o>=10.7&&y,supportsComputeAngles:o>=10.91,supportsQueryGPSInfo:o>=11.2&&y,supportsAdd:d,supportsDelete:d,supportsEditing:d,supportsUpdate:d,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryBins:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:u,maxRecordCountFactor:void 0,supportsStatistics:!!l?.supportsStatistics,supportsOrderBy:!!l?.supportsOrderBy,supportsDistinct:!!l?.supportsDistinct,supportsPagination:!!l?.supportsPagination,supportsStandardizedQueriesOnly:!!l?.useStandardizedQueries,supportsPercentileStatistics:!!l?.supportsPercentileStatistics,supportsCentroid:!!l?.supportsReturningGeometryCentroid,supportsCurrentUser:!1,supportsDistance:!!l?.supportsQueryWithDistance,supportsExtent:!!l?.supportsReturningQueryExtent,supportsGeometryProperties:!!l?.supportsReturningGeometryProperties,supportsHavingClause:!!l?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsReturnMesh:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!l?.supportsDefaultSR,supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0,supportsTrueCurve:!1},mensuration:{supportsDistanceAndAngle:h,supportsAreaAndPerimeter:h,supportsPointOrCentroid:h,supportsHeightFromBaseAndTop:g&&f.includes("base-top height"),supportsHeightFromBaseAndTopShadow:g&&f.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:g&&f.includes("top-top shadow height"),supports3D:g&&f.includes("3d")}}}};function n(e){return e?.path??""}return s([a({clonable:!1})],t.prototype,"_functionRasterInfos",void 0),s([a({clonable:!1})],t.prototype,"_rasterJobHandler",void 0),s([a({clonable:!1})],t.prototype,"_cachedRendererJson",void 0),s([a({readOnly:!0})],t.prototype,"_serviceSupportsMosaicRule",void 0),s([P("_serviceSupportsMosaicRule",["currentVersion","fields"])],t.prototype,"readServiceSupportsMosaicRule",null),s([a({readOnly:!0})],t.prototype,"_rasterFunctionNamesIndex",null),s([a()],t.prototype,"adjustAspectRatio",void 0),s([a({type:[X],json:{write:!0}})],t.prototype,"bandIds",void 0),s([P("bandIds")],t.prototype,"readBandIds",null),s([a({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),s([P("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),s([a({type:Number})],t.prototype,"compressionQuality",void 0),s([x("compressionQuality")],t.prototype,"writeCompressionQuality",null),s([a({type:Number})],t.prototype,"compressionTolerance",void 0),s([x("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),s([a({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),s([a({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],t.prototype,"defaultMosaicRule",void 0),s([P("defaultMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultMosaicRule",null),s([a({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],t.prototype,"definitionExpression",void 0),s([a({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),s([a()],t.prototype,"rasterInfo",void 0),s([a({readOnly:!0,type:[sr]})],t.prototype,"fields",void 0),s([a({readOnly:!0})],t.prototype,"fieldsIndex",null),s([a({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],t.prototype,"format",null),s([P("service","format",["serviceDataType"])],t.prototype,"readFormat",null),s([a({type:He})],t.prototype,"fullExtent",void 0),s([a({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),s([a({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),s([a({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),s([a({type:String,json:{type:Ve.jsonValues,read:Ve.read,write:Ve.write}})],t.prototype,"interpolation",void 0),s([a()],t.prototype,"minScale",void 0),s([P("service","minScale")],t.prototype,"readMinScale",null),s([a()],t.prototype,"maxScale",void 0),s([P("service","maxScale")],t.prototype,"readMaxScale",null),s([a({type:re})],t.prototype,"mosaicRule",null),s([P("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),s([x("mosaicRule")],t.prototype,"writeMosaicRule",null),s([a()],t.prototype,"multidimensionalInfo",void 0),s([a({type:cn,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),s([a({json:{type:X}})],t.prototype,"noData",void 0),s([x("noData")],t.prototype,"writeNoData",null),s([a({type:String,json:{type:ft.jsonValues,read:ft.read,write:ft.write}})],t.prototype,"noDataInterpretation",void 0),s([a({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),s([P("objectIdField")],t.prototype,"readObjectIdField",null),s([a({readOnly:!0})],t.prototype,"geometryType",void 0),s([a({})],t.prototype,"typeIdField",void 0),s([a({})],t.prototype,"types",void 0),s([a({readOnly:!0})],t.prototype,"parsedUrl",null),s([a({type:Function})],t.prototype,"pixelFilter",void 0),s([a()],t.prototype,"raster",void 0),s([a({readOnly:!0})],t.prototype,"sourceType",void 0),s([P("sourceType",["serviceSourceType","fields"])],t.prototype,"readSourceType",null),s([a()],t.prototype,"viewId",void 0),s([a()],t.prototype,"renderer",null),s([a({types:Et,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:$t,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="flow"})}}}}})],t.prototype,"internalRenderer",null),s([P("internalRenderer")],t.prototype,"readRenderer",null),s([x("internalRenderer")],t.prototype,"writeRenderer",null),s([a({clonable:!1})],t.prototype,"symbolizer",void 0),s([a(Vr)],t.prototype,"opacity",void 0),s([a({readOnly:!0})],t.prototype,"rasterFields",null),s([a({constructOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),s([a({type:j,json:{name:"renderingRule"}})],t.prototype,"rasterFunction",null),s([P("rasterFunction",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRasterFunction",null),s([a({readOnly:!0})],t.prototype,"serviceDataType",void 0),s([a({readOnly:!0,type:he})],t.prototype,"spatialReference",void 0),s([P("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),s([a({type:we.apiValues,json:{read:we.read,type:we.jsonValues}})],t.prototype,"pixelType",void 0),s([x("pixelType")],t.prototype,"writePixelType",null),s([a({constructOnly:!0,type:ji})],t.prototype,"serviceRasterInfo",void 0),s([a()],t.prototype,"sourceJSON",void 0),s([a(Er)],t.prototype,"url",void 0),s([a({readOnly:!0})],t.prototype,"version",void 0),s([P("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=s([I("esri.layers.mixins.ArcGISImageService")],t),t};let Ue=class extends ve.ClonableMixin(M){constructor(i){super(i),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};s([a({type:String,json:{write:{isRequired:!0}}})],Ue.prototype,"name",void 0),s([a({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),$e({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],Ue.prototype,"method",void 0),s([a({type:String,json:{write:{isRequired:!0}}})],Ue.prototype,"value",void 0),s([a({type:[X],json:{write:{isRequired:!0}}})],Ue.prototype,"bandIds",void 0),s([a({types:Et,json:{write:!0,origins:{"web-scene":{types:$t,write:{overridePolicy:i=>({enabled:i&&i.type!=="vector-field"&&i.type!=="flow"})}}}}})],Ue.prototype,"renderer",void 0),Ue=s([I("esri.renderers.support.RasterPresetRenderer")],Ue);const Ha=Ue,Va=i=>{let t=class extends i{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return s([a({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],t.prototype,"activePresetRendererName",void 0),s([a({type:[Ha],json:{name:"layerDefinition.presetRenderers",write:!0}})],t.prototype,"presetRenderers",void 0),t=s([I("esri.layers.mixins.RasterPresetRendererMixin")],t),t};let ie=class extends Bs(Es(Us($r(kr(Va(_a(Vs(_s(Os(Jr(ve.ClonableMixin(qr)))))))))))){constructor(...i){super(...i),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=Ur(async(t,n,e)=>{const{save:r,saveAs:o}=await Ar(()=>import("./imageryUtils-BbIUMzr_.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9]),import.meta.url);switch(t){case Mt.SAVE:return r(this,n);case Mt.SAVE_AS:return o(this,e,n)}})}normalizeCtorArgs(i,t){return typeof i=="string"?{url:i,...t}:i}load(i){const t=i!=null?i.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},i).catch(_r).then(()=>this._fetchService(t))),Promise.resolve(this)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(i){this._set("legendEnabled",i)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(i){this._set("listMode",i)}writeOperationalLayerType(i,t,n){const e=this.renderer?.type==="vector-field";t[n]=e?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){return!(!this.raster||!this.url?.toLowerCase().includes("/rasterrendering/imageserver"))}createPopupTemplate(i){const{rasterFields:t}=this,n=new Set,e=Ke.itemPixelValue.toLowerCase(),r=this.sourceType==="raster-dataset",o=us.toLowerCase(),l=`${Ke.servicePixelValue.toLowerCase()}.`;for(const c of t){const m=c.name.toLowerCase();m===e||m.startsWith(l)||r&&m.startsWith(o)||n.add(c.name)}const u=Hs({fields:t,title:this.title},{...i,visibleFieldNames:n}),{rasterInfo:p}=this;return u?.fieldInfos&&p&&ls(u.fieldInfos,p),u}queryFeatures(i,t){return this.queryRasters(i,t).then(n=>{if(n?.features)for(const e of n.features)e.layer=e.sourceLayer=this;return n})}queryFeatureCount(i,t){return this.queryRasterCount(i,t)}redraw(){this.emit("redraw")}async save(i){return this._debouncedSaveOperations(Mt.SAVE,i)}async saveAs(i,t){return this._debouncedSaveOperations(Mt.SAVE_AS,t,i)}serviceSupportsSpatialReference(i){return $s(this,i)}write(i,t){if(!this._isPreviewLayer)return super.write(i,t);if(t?.messages){const n=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new v("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${n}'`,{layer:this}))}return null}};s([a(Zr)],ie.prototype,"legendEnabled",null),s([a({type:["show","hide"]})],ie.prototype,"listMode",null),s([a({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],ie.prototype,"isReference",void 0),s([a({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],ie.prototype,"operationalLayerType",void 0),s([x("web-map","operationalLayerType")],ie.prototype,"writeOperationalLayerType",null),s([a(Gr)],ie.prototype,"popupEnabled",void 0),s([a({type:Hr,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],ie.prototype,"popupTemplate",void 0),s([a({readOnly:!0})],ie.prototype,"defaultPopupTemplate",null),s([a({readOnly:!0,json:{read:!1}})],ie.prototype,"type",void 0),s([a({readOnly:!0})],ie.prototype,"_isPreviewLayer",null),ie=s([I("esri.layers.ImageryLayer")],ie);const Ea=ie,ul=Object.freeze(Object.defineProperty({__proto__:null,default:Ea},Symbol.toStringTag,{value:"Module"}));export{Fo as E,ul as I,hn as L,wr as U,wn as W,Cn as a,Pa as b,cn as c,An as e,qi as f,qn as g,Et as l,Va as o,$t as p,gn as q,mn as t,j as w,Lo as z};
