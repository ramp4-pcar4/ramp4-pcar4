import{P as n,$ as c}from"./utils-B3G-U6Iv.js";import{l as p,a as u,u as g,E as s}from"./portalItemUtils-HRSUZPvT.js";import"./main-D6UWMbWJ.js";import"./preload-helper-ExcqyqRp.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./PortalItem-BUPtFYt9.js";import"./jsonContext-BPKshDab.js";import"./projection-F5U3p10J.js";const y="Image Service",v="imagery-layer-save",f="imagery-layer-save-as",d="imagery-tile-layer-save",I="imagery-tile-layer-save-as",l="WCS",T="wcs-layer-save",w="wcs-layer-save-as";function m(e){if(e.type==="imagery"||e.type==="wcs")return{isValid:!0};const{raster:r}=e,a=r?.datasetFormat==="Function"?r.primaryRasters?.rasters[0]:r;return{isValid:a?.datasetFormat==="RasterTileServer"&&(a.tileType==="Raster"||a.tileType==="Map"),errorMessage:"imagery tile layer should be created from a tiled image service."}}function o(e){const r=e.layerJSON;return Promise.resolve(r&&Object.keys(r).length?r:null)}async function x(e,r){const{parsedUrl:a,title:t,fullExtent:i}=e;r.url=a.path,r.title||=t;try{r.extent=await p(i)}catch{r.extent=void 0}u(r,s.METADATA),g(r,s.TILED_IMAGERY,e.type==="imagery-tile")}async function F(e,r){const a=e.type==="imagery"?v:e.type==="imagery-tile"?d:T,t=e.type==="wcs"?l:y;return n({layer:e,itemType:t,validateLayer:m,createItemData:o,errorNamePrefix:a},r)}async function L(e,r,a){const t=e.type==="imagery"?f:e.type==="imagery-tile"?I:w,i=e.type==="wcs"?l:y;return c({layer:e,itemType:i,validateLayer:m,createItemData:o,errorNamePrefix:t,newItem:r,setItemProperties:x},a)}export{F as save,L as saveAs};
