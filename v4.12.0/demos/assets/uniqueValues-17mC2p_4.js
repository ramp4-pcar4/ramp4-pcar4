const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./geometryEngineAsync-BykSpx7q.js","./workers-DADVStUK.js","./main-D6UWMbWJ.js","./preload-helper-ExcqyqRp.js","./main-DCJluy1C.css","./Queue-Bp8J9hIN.js","./intl-D8pxRaLS.js"])))=>i.map(i=>d[i]);
import{s as d,b9 as mt,v as w,x as S,J as M,D as je,bl as pt,o as ct,U as V,bR as dt,ci as yt,aN as C,aC as ft,c4 as ht,dK as gt,c3 as wt,hc as Se,jC as Ue,n as Ft,c5 as St,aB as vt,jD as B,bi as xt,aD as Ze,aj as qe}from"./main-D6UWMbWJ.js";import{j as Le,N as le,F as de,a as q,d as Vt,c as qt,m as ge,q as We,C as ue,$ as me,P as He,b as ke,e as Lt,n as zt,T as _t,M as Tt}from"./utils-DCOYQBKX.js";import{j as Ke,M as P,$ as N,k as bt,U as A,f as k}from"./utils-Dn8cinQn.js";import{p as Et}from"./workers-DADVStUK.js";import{fromJSON as $t}from"./jsonUtils-DWiHYlpG.js";import{f as Ct}from"./utils-BIJX9DmY.js";import{f as Nt}from"./executeQuery-CKwZldfg.js";import{m as Q,b as Mt,a as It}from"./Query-VeA4-Qk_.js";import{_ as Ot}from"./preload-helper-ExcqyqRp.js";import{s as At}from"./quantizationUtils-B28qRRbX.js";import{i as ze}from"./fieldType-B-0DY-YK.js";import{summaryStatistics as R,uniqueValues as _e,histogram as pe,classBreaks as Te,heatmapStatistics as kt}from"./statsWorker-wN4JxDDO.js";import Pt from"./AttributeBinsQuery-B_ioTUX4.js";import{a as Bt,b as Qt,m as Rt,c as Dt}from"./FixedIntervalBinParameters-BlWGCCUi.js";import{y as Gt,p as Jt,a as jt}from"./Field-BRKBBmM6.js";import{f as Ut}from"./MapView-EqsuvpWT.js";import{d as Xe}from"./FeatureSet-EjAFZH0Q.js";import"./TimeExtent-CVFHym4n.js";import"./heatmapUtils-D0UuwfRb.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./ClassBreaksDefinition-Pel3RCn0.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-mplESjCB.js";import"./intl-D8pxRaLS.js";import"./timeZoneUtils-BNp2mfEj.js";import"./Queue-Bp8J9hIN.js";import"./typeUtils-CRsQk0MY.js";import"./ClassBreaksRenderer-pGw2-UUE.js";import"./commonProperties-CuupewPf.js";import"./colorRamps-BUZNTJmj.js";import"./ColorStop-B1JrXuif.js";import"./visualVariableUtils-DqFvxVwV.js";import"./lengthUtils-B1iOgQDj.js";import"./RendererLegendOptions-CGuARK8S.js";import"./LRUCache-CnC3D6GO.js";import"./MemCache-DvK30feT.js";import"./Version-DeyywoNs.js";import"./FieldsIndex-C0Zyp4KO.js";import"./utils-BRg6PM3S.js";import"./defaultCIMValues-DII_GG3u.js";import"./enums-BJSSbDkD.js";import"./SimpleRenderer-UH-a1rCN.js";import"./UniqueValueRenderer-Brw1oZd3.js";import"./diffUtils-BMpoATJS.js";import"./styleUtils-CtFhGPW_.js";import"./executeQueryJSON-v3kF640L.js";import"./query-DxXLOB5M.js";import"./normalizeUtils-DSf_eBlh.js";import"./utils-C6WKisvz.js";import"./pbfQueryUtils-DtHUkqBT.js";import"./pbf-D-eAs-zM.js";import"./memoryEstimations-bvdrNroi.js";import"./OptimizedGeometry-7XEw-Hai.js";import"./OptimizedFeatureSet-7J4kTonF.js";import"./queryZScale-61KJd7Y4.js";import"./projection-F5U3p10J.js";import"./queryUtils-DKCAtZJ_.js";import"./json-Wa8cmqdu.js";import"./NormalizationBinParametersMixin-sp74efLi.js";import"./globalCss-geu-g-r4.js";import"./signal-_szBxGG7.js";import"./CollectionFlattener-_i2fTLMi.js";import"./TileInfo-vOJ-d3SA.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-HPYy2V_L.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-CLyw9aof.js";import"./Map-CTJWvBgV.js";import"./Basemap-WwZupoib.js";import"./loadAll-v7n2jQTN.js";import"./PortalItem-BUPtFYt9.js";import"./Layer-CrpAg4i7.js";import"./GraphicsCollection-B4inrSzy.js";import"./HeightModelInfo-B3hkwDlh.js";import"./ReactiveMap-DNJTwYV-.js";import"./IViewEvents-Bci6PjlS.js";import"./HighlightDefaults-DUnhEm8s.js";import"./a11yUtils-m_nLVpnt.js";import"./heightModelInfoUtils-CUA_JpH_.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./mat2d-D9DBP-jx.js";import"./mat2df32-orApM5a3.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-BTF2H21O.js";import"./vec32-DvB22h0L.js";import"./unitBezier-B1N-tmtC.js";import"./Tile-BuigKQZ6.js";import"./quickselect-QQC62dOK.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-pu6CNJho.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-CmEe6Gfn.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-KAN9tKsU.js";function Zt(e,t){if(!e.view)throw new d(`${t}:missing-parameters`,"'view' parameter is required for binning");if(e.sqlExpression)throw new d(`${t}:invalid-parameters`,"'sqlExpression' parameter is not supported for binning");if(e.view.type==="3d")throw new d(`${t}:invalid-parameters`,"3d view is not supported for binning")}let te=class U{constructor(){this.connection=null}async open(t){this.connection=await Et("statsWorker",{strategy:"distributed",signal:t})}destroy(){this.connection?.close()}static getInstance(){return U.instance||(U.instance=new U),U.instance}async summaryStatistics(t,a){if(!this.connection)throw new d("worker-client:summary-statistics","connection is required");return this.connection.invoke("summaryStatistics",{attribute:t,features:a})}async uniqueValues(t,a){if(!this.connection)throw new d("worker-client:unique-values","connection is required");return this.connection.invoke("uniqueValues",{attribute:t,features:a})}async classBreaks(t,a){if(!this.connection)throw new d("worker-client:class-breaks","connection is required");return this.connection.invoke("classBreaks",{attribute:t,features:a})}async histogram(t,a){if(!this.connection)throw new d("worker-client:histogram","connection is required");return this.connection.invoke("histogram",{attribute:t,features:a})}async heatmapStatistics(t,a){if(!this.connection)throw new d("worker-client:heatmap-statistics","connection is required");return this.connection.invoke("heatmapStatistics",{attribute:t,features:a})}};async function Wt(e,t,a,i){const r=Ct(e),{source:n,checkValueRange:o}=t,{classificationDefinition:s}=a,l={...a.toJSON(),f:"json"};let u=null;if(u=s?.type==="class-breaks-definition"?s.classificationField:s?.attributeField,n){const y={source:n?.toJSON()};l.layer=JSON.stringify(y)}l.classificationDef&&(l.classificationDef=JSON.stringify(l.classificationDef));let m={query:l};i&&(m={...i,...m});const p={url:r.path,field:u,checkValueRange:o},c=r.path+"/generateRenderer";return mt(c,m).then(y=>Ht(p,y))}function Ht(e,t){const{field:a,checkValueRange:i,url:r}=e,n=t?.data;if(!n)return;if(!i){const u=Pe(n);return Promise.resolve(u)}const o=new Q({statisticType:"min",onStatisticField:a}),s=new Q({statisticType:"max",onStatisticField:a}),l=new Mt({outStatistics:[o,s]});return Nt(r,l).then(u=>{const m=u.features[0].attributes;let p=null,c=null;for(const y in m)y.toLowerCase().indexOf("min")===0?p=m[y]:c=m[y];return Pe(n,p,c)})}function Pe(e,t,a){if(e.type==="classBreaks"){const r=$t(e);return{classBreaks:r.classBreakInfos.map((n,o)=>(o===0&&t!=null&&(n.minValue=t),o===r.classBreakInfos.length-1&&a!=null&&(n.maxValue=a),{minValue:n.minValue,maxValue:n.maxValue,label:n.label})),normalizationTotal:r.normalizationTotal}}const{uniqueValueInfos:i}=e;return{uniqueValues:i?.map((r,n)=>(n===0&&t!=null&&(r.value=t),n===i.length-1&&a!=null&&(r.value=a),{count:r.count,value:r.value,label:r.label}))??[]}}let Z=class extends je{constructor(e){super(e),this.classificationDefinition=null,this.where=null}};w([S({json:{name:"classificationDef",write:!0}})],Z.prototype,"classificationDefinition",void 0),w([S({type:String,json:{write:!0}})],Z.prototype,"where",void 0),Z=w([M("esri.rest.support.GenerateRendererParameters")],Z);const ve=Z;let I=class extends je{constructor(t){super(t),this.type="unique-value-definition",this.attributeField=null,this.attributeField2=null,this.attributeField3=null,this.fieldDelimiter=null}get uniqueValueFields(){const t=[];return this.attributeField&&t.push(this.attributeField),this.attributeField2&&t.push(this.attributeField2),this.attributeField3&&t.push(this.attributeField3),t}};w([pt({uniqueValueDef:"unique-value-definition"})],I.prototype,"type",void 0),w([S()],I.prototype,"attributeField",void 0),w([S()],I.prototype,"attributeField2",void 0),w([S()],I.prototype,"attributeField3",void 0),w([S({json:{write:!0}})],I.prototype,"fieldDelimiter",void 0),w([S({json:{write:!0}})],I.prototype,"uniqueValueFields",null),I=w([M("esri.rest.support.UniqueValueDefinition")],I);const Kt=I,Ye="no_dominant_category";function Xt(e){return{expression:Yt(e,{returnFieldName:!0,defaultValue:`'${Ye}'`})}}function Yt(e,t){const{returnFieldName:a,defaultValue:i,layer:r}=t,n=[];if(a&&i){const o=e.map(s=>`${s} <= 0`).join(" AND ");n.push(`WHEN ${o} THEN ${i}`)}for(const o of e){const s=e.reduce((m,p)=>(o!==p&&m.push(`${o} > ${p}`),m),[]).join(" AND "),l=r&&Ke(r,o),u=a&&`'${o}'`?`'${o}'`:l?P(o):o;n.push(`WHEN ${s} THEN ${u}`)}return`CASE ${n.join(" ")} ELSE ${i||"0"} END`}function ea(e){return e&&e.map(t=>`$feature["${t}"];`).join(`
`)+`
`||""}function ta(e,t=!1){const a=e.map(r=>`"${r}"`);return`
  var fieldNames = [ ${a.join(", ")} ];
  var numFields = ${a.length};
  var maxValueField = null;
  var maxValue = -Infinity;
  var value, i, totalValue = null;

  for(i = 0; i < numFields; i++) {
    value = $feature[fieldNames[i]];

    if(value > 0) {
      if(value > maxValue) {
        maxValue = value;
        maxValueField = fieldNames[i];
      }
      else if (value == maxValue) {
        maxValueField = null;
      }
    }
    ${t?`
  if(value != null && value >= 0) {
    if (totalValue == null) { totalValue = 0; }
    totalValue = totalValue + value;
  }
  `:""}
  }
  `}function be(e){const t=ta(e);return`
  ${ea(e)}
  ${t}
  return maxValueField;
  `}let b=class extends ct{constructor(t){super(t),this.adapterName="layer-adapter"}};w([S({readOnly:!0})],b.prototype,"adapterName",void 0),w([S({constructOnly:!0})],b.prototype,"layer",void 0),w([S()],b.prototype,"geometryType",void 0),w([S()],b.prototype,"objectIdField",void 0),w([S()],b.prototype,"supportsSQLExpression",void 0),w([S()],b.prototype,"hasQueryEngine",void 0),w([S()],b.prototype,"minScale",void 0),w([S()],b.prototype,"maxScale",void 0),w([S()],b.prototype,"fullExtent",void 0),b=w([M("esri.smartMapping.support.adapters.LayerAdapter")],b);const Ee=b,aa=/_value$/i,ra=Math.LOG10E,ia={SECOND:1e3,MINUTE:6e4,HOUR:36e5},Y=10;function ee(e){return e.map(t=>t.toJSON())}function Be(e,t){const a=[],i=e.layer,r="featureReduction"in i?i.featureReduction:null,n=r?.type==="binning",o=r!=null&&"fields"in r?r.fields?.map(s=>s.name?.toLowerCase()).filter(Boolean):[];if(!n||!t)return a;for(const s of t)o.includes(s.toLowerCase())||a.push(s);return a}function ce(e,t,a){const i=[];if(t)for(const r of t){const n=e.getField(r);n&&a&&"availableFields"in a&&!a.availableFields?.includes(n.name)&&i.push(n.name)}return i}function $e(e,t){const a=e&&e.features;if(a?.length===0)return{avg:null,count:0,max:null,median:null,min:null,nullcount:0,stddev:null,sum:null,variance:null};const i=a?.[0]?.attributes,r={};for(const n in i)r[n.replace(aa,"").toLowerCase()]=i[n];return r.totalcount!=null&&r.totalcount>=r.count&&(r.nullcount=r.totalcount-r.count),delete r.totalcount,r.min===r.max&&r.min!=null&&r.stddev==null&&(r.stddev=r.variance=0),t&&(["min","max","avg","stddev","sum","variance"].forEach(n=>{r[n]!=null&&(r[n]=Math.ceil(r[n]))}),r.min===r.max&&r.min!=null&&(r.avg=r.min,r.stddev=r.variance=0)),r}function na(e){const t=[],a=e.classBreaks,i=a[0].minValue,r=a[a.length-1].maxValue;a.forEach(o=>{t.push([o.minValue,o.maxValue])});const n={field:e.field,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,layer:e.layer};return{min:i,max:r,intervals:t,sqlExpr:D(n),excludeZerosExpr:e.where,normTotal:e.normalizationTotal}}function D(e){const{field:t,normalizationType:a,normalizationField:i,normalizationTotal:r,layer:n}=e,o=Ke(n,t);let s=t;return a==="percent-of-total"?s=`((${o?P(t):t} / ${r}) * 100)`:a==="log"?s=`(log(${t}) * ${ra})`:a==="field"?s=`(${o?P(t):t} / ${i})`:a==="natural-log"?s=`(log(${o?P(t):t}))`:a==="square-root"&&(s=`(power(${o?P(t):t}, 0.5))`),s}function et(e,t){let a;if(t=t.toLowerCase(),e){for(const i in e)if(i.toLowerCase()!==t){a=e[i];break}}return a}function W(e,t){let a;if(t=t.toLowerCase(),e){for(const i in e)if(i.toLowerCase()===t){a=e[i];break}}return a}function tt(e,t,a,i,r){const n={},o="countOFExpr";e&&e.features&&e.features.forEach(l=>{const u=l.attributes,m=et(u,o),p=W(u,o);m!=null&&p!=null&&m!==0&&(n[m]=p)});const s=[];return Le(t,a,i).forEach((l,u)=>{const m=(u+1).toString();s.push({minValue:l[0],maxValue:l[1],count:n.hasOwnProperty(m)?n[m]:0})}),{bins:s,minValue:t,maxValue:a,normalizationTotal:r}}async function Ce(e,t){const a=e&&e.features,{field:i,field2:r,field3:n,fieldDelimiter:o,layer:s,view:l,signal:u,labels:m}=t,p=`countOF${(!i||!r)&&i||"Expr"}`,c={};let y=!1;for(const h of a){const g=h.attributes,v=W(g,p);let F=i?W(g,i):et(g,p),x=r?W(g,r):null,L=n?W(g,n):null;F===null&&v===0&&(y=!0),(F==null||typeof F=="string"&&F.trim()==="")&&(F=null),r&&(x==null||typeof x=="string"&&x.trim()==="")&&(x=null),n&&(L==null||typeof L=="string"&&L.trim()==="")&&(L=null);let z=F;r&&(z=`${ge(z)}${o}${ge(x)}`,n&&(z=`${z}${o}${ge(L)}`)),c[z]==null?c[z]={count:v,data:z}:c[z].count=c[z].count+v}if(i&&y){const h=i+" is NULL";try{const g=await s.queryFeatureCount({whereClause:h,view:l,signal:u});return c.null.count=c.null.count+g,we(c,m)}catch{return V(u),we(c,m)}}return we(c,m)}function we(e,t){if(t)for(const a in e)e[a].label=t[a];return{count:e}}async function Fe(e,t,a){const i=e?a.getField(e):null,r=i?a.getFieldDomain(i.name):null;if(r)return r;const{uniqueValueInfos:n}=await a.uniqueValues({field:e,sqlWhere:t.sqlWhere,features:t.features,useFeaturesInView:t.useFeaturesInView,view:t.view,signal:t.signal}),o=n.map(s=>new Jt({code:s.value}));return new jt({codedValues:o})}async function ye(e,t){if(!e.returnAllCodedValues)return[];const{field:a,field2:i,field3:r}=e;if(a&&!i){const o=a?t.getField(a):null,s=o?t.getFieldDomain(o.name):null;return s?[s]:[]}const n=[];return a&&(n.push(Fe(a,e,t)),i&&(n.push(Fe(i,e,t)),r&&n.push(Fe(r,e,t)))),Promise.all(n)}function sa(e,t){return bt(e,new Date(0),t,"milliseconds").sqlExpression}function oa(e,t){return`EXTRACT(${t} FROM ${e}) * ${ia[t]}`}function la(e){return e?P(["HOUR","MINUTE","SECOND"].map(t=>`(${oa(e,t)})`).join(" + ")):null}function E(e){return{viewingMode:e.type==="2d"?"map":e.viewingMode,scale:e.scale,spatialReference:e.spatialReference?.toJSON()}}function Ne(e,t){const a=new Set(e.map(r=>r.value)),i=t.filter(r=>!a.has(r));for(const r of i)e.push({value:r,count:0});e.sort((r,n)=>t.indexOf(r.value)-t.indexOf(n.value));for(const r of e)r.value===Ye&&(r.value=null);return{predominantCategoryInfos:e}}function Qe(e){const t="featureReduction"in e?e.featureReduction:null;return((t!=null&&"fields"in t?t.fields:null)??[]).map(a=>{const i=ua(a,e.fieldsIndex);return i?new Gt({type:i,name:a.name,alias:a.alias}):null}).filter(dt)}function ua(e,t){switch(e.statisticType){case"avg":case"avg_angle":return"double";case"count":return"integer";case"min":case"max":case"sum":return e.onStatisticField?t.get(e.onStatisticField)?.type??null:e.onStatisticExpression?e.onStatisticExpression.returnType==="string"?null:"double":null;case"mode":return e.onStatisticField?t.get(e.onStatisticField)?.type??null:e.onStatisticExpression?e.onStatisticExpression.returnType==="string"?"string":"double":null;default:return null}}function at(e,t){return N(t)?sa(e,t?.name):C(t)?la(t?.name):null}function Me(e,t,a){const{field:i,normalizationType:r,normalizationField:n,normalizationTotal:o,minValue:s,maxValue:l,filter:u}=t,m=e.supportsSQLExpression?at(e,a)||t.sqlExpression:null,p=D({field:i,normalizationType:r,normalizationField:n,normalizationTotal:o,layer:e}),c=m||p,y=c?le(c,s,l):null,h=de({field:i,normalizationField:n,normalizationType:r}),g=q(t.sqlWhere,h),v=q(g,y),F=Vt({normalizationField:n,normalizationType:r,sqlExpression:m,supportsSQLExpression:e.supportsSQLExpression,minValue:s,maxValue:l}),x=yt(e.getField(i??void 0)),{include:L,exclude:z}=t.outStatisticTypes||{},fe=qt.filter(T=>(!L||L.includes(T))&&(!z||!z.includes(T))&&(T==="nullcount"?F:!x||T==="count")),O=e.createQuery();return O.where=q(O.where,v),O.sqlFormat=m?"standard":null,O.outStatistics=fe.map(T=>{const G=new Q;let J=null,j=null,Ae=`${T}_value`;if(T==="variance")J="var",j=c;else if(T==="nullcount"){const he=e.objectIdField;J="count",j=he&&e.getField(he)?he:"1",Ae="totalcount_value"}else T==="median"?(J="percentile-continuous",j=c,G.statisticParameters={value:.5}):(J=T,j=c);return G.statisticType=J,G.onStatisticField=j,G.outStatisticFieldName=Ae,G}),$(O,u),O}function $(e,t){t&&(e.geometry=t.geometry,e.spatialRelationship=t.spatialRelationship)}function rt(e,t){const{field:a,field2:i,field3:r,sqlExpression:n}=t,o=!(!a||!i),s=e.createQuery();return s.where=q(s.where,t.sqlWhere),s.sqlFormat=n?"standard":null,s.outStatistics=[ma(o?null:a,o?"1":n)].filter(Boolean),s.groupByFieldsForStatistics=[a||n,i,r].filter(Boolean),$(s,t.filter),s}function ma(e,t){const a="countOF"+(e||"Expr"),i=new Q;return i.statisticType="count",i.onStatisticField=t?"1":e,i.outStatisticFieldName=a,i}function re(e,t,a,i=Y,r,n,o){const{min:s,max:l,normTotal:u,excludeZerosExpr:m}=t,p=t.intervals||Le(s,l,i),c=t.sqlExpr||a;return pa(e,p,c,m,r,n,o).then(y=>({bins:y.map((h,g)=>({minValue:p[g][0],maxValue:p[g][1],count:h.status==="fulfilled"?h.value:0})),minValue:s,maxValue:l,normalizationTotal:u}))}function pa(e,t,a,i,r,n,o){const s=[],l=t.length;for(let u=0;u<l;u++){const m=q(i,q(a+" >= "+t[u][0],t[u][1]!==null?a+(u===l-1?" <= ":" < ")+t[u][1]:""));s.push(m)}return Promise.allSettled(s.map(u=>e.queryFeatureCount({whereClause:u,view:r,filter:n,signal:o})))}const it="countOFExpr",ca="lowerBoundary",da="upperBoundary";function nt(e,t,a){const i=e.valueExpression||e.sqlExpression,r=e.signal;if(!i){const{field:n,normalizationType:o,normalizationField:s}=e,l=n?t.getField(n):null,u=N(l)||C(l);return{sqlExpression:u?at(t,l):D({field:n,normalizationType:o,normalizationField:s,normalizationTotal:a,layer:t}),sqlWhere:u?null:e.sqlWhere||de({field:n,normalizationType:o,normalizationField:s}),filter:e.filter,signal:r}}return{valueExpression:e.valueExpression,sqlExpression:e.sqlExpression,sqlWhere:e.sqlWhere,filter:e.filter,signal:r}}async function xe(e,t,a){const{field:i,normalizationType:r,normalizationField:n,signal:o}=e,s=de({field:i,normalizationType:r,normalizationField:n}),l=new ve({classificationDefinition:We({field:i,normalizationType:r,normalizationField:n,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,definedInterval:e.definedInterval,breakCount:e.numBins||Y}),where:q(s,a)});return t.generateRenderer(l,o).then(u=>{const{normalizationTotal:m,classBreaks:p}=u;return na({field:i,normalizationType:r,normalizationField:n,normalizationTotal:m,classBreaks:p,where:s,layer:t})})}async function ya(e,t,a,i,r){const{field:n,sqlExpression:o,normalizationField:s,classificationMethod:l,normalizationType:u}=e,m=n?t.getField(n):null,p=C(m),c=wt(m)||p,y=e.numBins||Y;if(c){if(u||l)throw new d(`${t.adapterName}:not-supported`,"NormalizationType and classificationMethod are not supported for date-only and time-only fields");const h=(i-a)/y/1e3,g=h/86400;return new Bt({field:n,expression:o,interval:{unit:p?"seconds":"days",value:Math.ceil(p?h:g)},start:a,end:i})}if(l==="defined-interval")return new Qt({field:n,expression:o,normalizationField:s,normalizationTotal:r,normalizationType:u,interval:e.definedInterval??Math.ceil((i-a)/y),start:u?null:a,end:u?null:i,normalizationMinValue:u?a:null,normalizationMaxValue:u?i:null});if(l==="manual")throw new d(`${t.adapterName}:not-supported`,"Layer does not support manual classificationMethod");if(l==="natural-breaks"||l==="quantile"||l==="standard-deviation"){const h=D({field:n,normalizationField:s,normalizationTotal:r,normalizationType:u,layer:t}),g=e.minValue!==null&&e.maxValue!==null?le(h,e.minValue,e.maxValue):void 0,v=await xe(e,t,g);if(!v.intervals)throw new d(`${t.adapterName}:invalid`,"Invalid intervals returned from generate renderer");const F=[a,...v.intervals.map(x=>x[1])];return new Rt({field:u?null:n,expression:u?h:o,boundaries:F})}return new Dt({field:n,normalizationField:s,normalizationTotal:r,normalizationType:u,expression:o,numBins:y,start:u?null:a,end:u?null:i,normalizationMinValue:u?a:null,normalizationMaxValue:u?i:null})}function st(e,t,a,i){return a!=null&&i!=null?Promise.resolve({min:a,max:i}):t.summaryStatistics({...e,outStatisticTypes:{include:["min","max"]}}).then(r=>({min:r.min,max:r.max}))}async function ot(e,t,a,i){const{field:r,minValue:n,maxValue:o,filter:s,view:l}=e,u=r?t.getField(r):null,m=ft(u)||ht(u),p=nt(e,t,a),{min:c,max:y}=await st(p,t,n,o);if(c==null||y==null)return{query:null,min:c,max:y};const h=new Q({statisticType:"count",outStatisticFieldName:it,onStatisticField:"1"}),g=q(i,p.sqlWhere),v="lowerBoundary",F="upperBoundary",x=new Pt({binParameters:await ya(e,t,c,y,a),outStatistics:[h],binOrder:e.sortOrder,where:g,lowerBoundaryAlias:v,upperBoundaryAlias:F,outTimeZone:l?.timeZone&&m?gt(l.timeZone):null});return $(x,s),{query:x,min:c,max:y}}function Re(e,t=!1){return typeof e!="string"?e:(t?new Date(`1970-01-01T${e}Z`):new Date(e)).getTime()}function lt(e,t,a){const i=C(t);return{...a,bins:e.features.map(r=>({minValue:Re(r.attributes[ca],i),maxValue:Re(r.attributes[da],i),count:r.attributes[it]}))}}function De(e,t,a){const{valueExpression:i,view:r}=e,{featuresJSON:n,graphics:o,fieldInfos:s}=t,l={field:e.field,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:a,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return i&&r&&(n||o)&&(l.viewInfoParams=E(r),l.timeZone=r.timeZone,l.fieldInfos=s),l}const fa=5;let ae=null,H=class extends Ee{constructor(){super(...arguments),this._hasLocalSource=!1,this.adapterName="in-memory-layer-adapter"}destroy(){this.workerClient?.destroy()}async _waitForLayerViewUpdate(e){if(!e)throw new d(`${this.adapterName}:insufficient-data", "layerView is required to fetch the features`);const t=new AbortController,a=Se(()=>!e.updating,t.signal);await Ue(a,5e3,t).catch(i=>{throw Ft.getLogger(this).warn("LayerView is taking too long to update. Aborting fetch from layerView."),i})}async _fetchFeatureSetFromMemory(e,t,a){const i=this.layer;if(this._hasLocalSource&&"queryFeatures"in i)return i.queryFeatures(e);if(!t)throw new d(`${this.adapterName}:insufficient-data`,"view is required to fetch the features from layerView");const r=await t.whenLayerView(this.layer);return await this._waitForLayerViewUpdate(r),r.queryFeatures(e,{signal:a})}async _fetchFeaturesFromMemory(e,t,a,i){const r=this.layer,n=i==="json";if(this._hasLocalSource&&"queryFeatures"in r){const s=await r.queryFeatures(t);return n?ee(s.features):s.features}if(await this._waitForLayerViewUpdate(e),n&&"queryFeaturesJSON"in e&&e.queryFeaturesJSON){const{features:s}=await e.queryFeaturesJSON(t,{signal:a});return s}if(!("queryFeatures"in e))throw new d(`${this.adapterName}:not-supported`,"'queryFeatures' is not supported on the layerView");const o=await e.queryFeatures(t,{signal:a});return n?ee(o.features):o.features}_fetchFeaturesForStats(e,t){return A({field:e.field,field2:e.field2,field3:e.field3,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then(a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,filter:e.filter,requiredFields:a,signal:e.signal},t))}async _summaryStatsFromClientQuery(e,t){const{view:a,signal:i}=e,r=Me(this,e,t),n=await this._fetchFeatureSetFromMemory(r,a,i),o=$e(n,N(t)||C(t));return ue(o,e.outStatisticTypes)}async _getNormalizationTotalFromMemory(e,t,a){const{featuresJSON:i,graphics:r,layerView:n,query:o}=t,s={include:["sum"]},l=(!i&&!r&&n&&"querySummaryStatistics"in n?await n.querySummaryStatistics(o,{field:e},{signal:a}):i?await this.workerClient.summaryStatistics({field:e,outStatisticTypes:s},i):await R({attribute:{field:e,outStatisticTypes:s},features:r??[]})).sum;if(l==null)throw new d(`${this.adapterName}:invalid`,"invalid normalizationTotal");return l}async _summaryStatsFromMemory(e,t){const{view:a,field:i,valueExpression:r,normalizationType:n,signal:o}=e,s={field:i,valueExpression:r,normalizationType:n,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes},{featuresJSON:l,graphics:u,layerView:m,query:p,fieldInfos:c}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"querySummaryStatistics"});return r&&a&&(l||u)&&(s.fieldType=t?.type?ze.toJSON(t.type):null,s.viewInfoParams=E(a),s.timeZone=a.timeZone,s.fieldInfos=c),n==="percent-of-total"&&e.normalizationTotal==null&&(s.normalizationTotal=await this._getNormalizationTotalFromMemory(i,{featuresJSON:l,graphics:u,layerView:m,query:p},o)),!l&&!u&&m&&"querySummaryStatistics"in m?m.querySummaryStatistics(p,s,{signal:o}):l?this.workerClient.summaryStatistics(s,l):R({attribute:s,features:u})}async _getFilteredFeatures(e,t){let a=[];if(t?.spatialRelationship==="intersects"){const{intersect:i}=await Ot(()=>import("./geometryEngineAsync-BykSpx7q.js"),__vite__mapDeps([0,1,2,3,4,5,6]),import.meta.url),r=t.geometry!=null?t.geometry:null;for(const n of e){const o=n.geometry!=null?n.geometry:null;o&&r&&await i(o,r)&&a.push(n)}}else a=e;return e.length&&"declaredClass"in e[0]&&e[0].declaredClass==="esri.Graphic"?{graphics:a}:{featuresJSON:a}}async _processStatsFromMemoryParams(e){const{features:t,filter:a}=e;if(t?.length)return this._getFilteredFeatures(t,a);const{view:i,field:r,field2:n,field3:o,normalizationField:s,valueExpression:l,layerViewFunc:u,signal:m}=e;let p=e.returnGeometry;if(p==null&&l){if(!ae){const{arcadeUtils:x}=await St();ae=x}const F=ae.hasGeometryOperations(l);F&&await ae.enableGeometryOperations(),p=F}let c=null,y=null,h=null,g=null,v=null;if(i)try{const F=this.layer.type==="subtype-sublayer"?this.layer.parent:this.layer;c=await i.whenLayerView(F),y=u!=null&&u in c&&typeof c[u]=="function"}catch{y=!1}if(y)try{await this._waitForLayerViewUpdate(c);const F=await A({field:r,field2:n,field3:o,normalizationField:s,valueExpression:l});ce(this,F,c).length?y=!1:(h=this.layer.createQuery(),h.outFields=F,h.returnGeometry=!1,$(h,a)),c.suspended&&(y=!1)}catch{y=!1}return y||(g=await this._fetchFeaturesForStats({field:r,field2:n,field3:o,valueExpression:l,normalizationField:s,returnGeometry:p,filter:a,view:i,signal:m},"json"),v=(await A({valueExpression:l})).map(F=>this.getField(F)?.toJSON()).filter(Boolean)),{layerView:c,query:h,featuresJSON:g,fieldInfos:v}}async _uvFromClientQuery(e,t){const{view:a,signal:i}=e,r=rt(this,e),n=await this._fetchFeatureSetFromMemory(r,a,i),o=await Ce(n,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:k,view:e.view,signal:e.signal});return me(o,t,e.returnAllCodedValues,k)}async _uvFromMemory(e,t){const{view:a,field:i,valueExpression:r,returnAllCodedValues:n,signal:o}=e,{featuresJSON:s,graphics:l,layerView:u,query:m,fieldInfos:p}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryUniqueValues"}),c={field:i,field2:e.field2,field3:e.field3,fieldDelimiter:k,valueExpression:r,domains:t,returnAllCodedValues:n};return r&&a&&(s||l)&&(c.viewInfoParams=E(a),c.timeZone=a.timeZone,c.fieldInfos=p),!s&&!l&&u&&"queryUniqueValues"in u?u.queryUniqueValues(m,c,{signal:o}):s?this.workerClient.uniqueValues(c,s):_e({attribute:c,features:l})}_histogramForField(e){let t=null;return t=e.minValue!=null&&e.maxValue!=null?Promise.resolve({min:e.minValue,max:e.maxValue}):this.summaryStatistics({...e,outStatisticTypes:{include:["min","max","count"]}}).then(a=>{if(!a.count)throw new d(`${this.adapterName}:insufficient-data`,"Either the layer has no features or none of the features have data for the field");return{min:a.min,max:a.max}}),t.then(a=>re(this,{min:a.min,max:a.max},e.field,e.numBins??void 0,e.view,e.filter,e.signal))}async _histogramFromQueryAttributeBinsFromMemory(e){const{field:t,normalizationType:a,signal:i}=e,r=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAttributeBins"}),{featuresJSON:n,graphics:o,layerView:s,query:l}=r,u=a==="percent-of-total"?e.normalizationTotal??await this._getNormalizationTotalFromMemory(t,r,i):void 0;if(!s||!("queryAttributeBins"in s)||n||o){const h=De(e,r,u);return n?this.workerClient.histogram(h,n):pe({attribute:h,features:o})}const{query:m,min:p,max:c}=await ot(e,this,u,l?.where);if(!m)return{bins:[],minValue:p,maxValue:c,normalizationTotal:u};const y=await s.queryAttributeBins(m,{signal:i});return lt(y,t?this.getField(t):null,{minValue:p,maxValue:c,normalizationTotal:u})}async _histogramFromMemory(e){const{field:t,signal:a}=e,i=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryHistogram"}),{featuresJSON:r,graphics:n,layerView:o,query:s}=i,l=e.normalizationType==="percent-of-total"?e.normalizationTotal??await this._getNormalizationTotalFromMemory(t,i,a):void 0,u=De(e,i,l);return!r&&!n&&o&&"queryHistogram"in o?o.queryHistogram(s,u,{signal:a}):r?this.workerClient.histogram(u,r):pe({attribute:u,features:n})}_classBreaksFromInterpolation(e){const{minValue:t,maxValue:a}=e,i=e.numClasses||fa,r=[],n=(a-t)/i;for(let l=0;l<i;l++){const u=t+l*n;r.push({minValue:u,maxValue:u+n})}r[i-1].maxValue=a;const o={classBreaks:r,normalizationTotal:e.normalizationTotal},s=He(o,e.classificationMethod);return Promise.resolve(s)}async _classBreaksFromMemory(e){const{view:t,field:a,valueExpression:i,signal:r}=e,{featuresJSON:n,graphics:o,layerView:s,query:l,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryClassBreaks"}),m={field:a,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return i&&t&&(n||o)&&(m.viewInfoParams=E(t),m.timeZone=t.timeZone,m.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(m.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:n,graphics:o,layerView:s,query:l},r)),!n&&!o&&s&&"queryClassBreaks"in s?s.queryClassBreaks(l,m,{signal:r}):n?this.workerClient.classBreaks(m,n):Te({attribute:m,features:o})}async _heatmapStatsFromMemory(e){const{view:t,field:a,radius:i,signal:r}=e;vt(t,"InMemoryLayerAdapter: must have a view");try{const u=await t.whenLayerView(this.layer);if("queryHeatmapStatistics"in u&&!u.updating&&!e.filter)return await u.queryHeatmapStatistics({field:e.field,radius:e.radius})}catch{V(r)}const{featuresJSON:n,graphics:o}=await this._processStatsFromMemoryParams({...e,returnGeometry:!0}),s=new It({extent:t.extent,tolerance:t.type==="2d"?t.state.resolution:t.pixelSizeAt?.(t.center)}),l={field:a,radius:i,transform:At(s),spatialReference:t.spatialReference?.toJSON(),size:t.size};return n?.length||o?.length?n?this.workerClient.heatmapStatistics(l,n):kt({attribute:l,features:o}):{min:null,max:null}}getField(e=""){return this.layer.getField(e)}getFieldUsageInfo(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!0,supportsStatistics:!0}:null}getFieldDomain(e,t){return this.layer.getFieldDomain(e,t)}createQuery(){return this.layer.createQuery()}async summaryStatistics(e){const{field:t,valueExpression:a,sqlExpression:i,features:r,view:n}=e,o=t?this.getField(t):null,s=!!a,l=n?.type==="3d";if(!a&&i&&!this.supportsSQLExpression)throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return s||r||l?this._summaryStatsFromMemory(e,o):this._summaryStatsFromClientQuery(e,o)}async uniqueValues(e){const{valueExpression:t,sqlExpression:a,features:i,view:r}=e,n=await ye(e,this),o=!!t,s=r?.type==="3d";if(!t&&a&&!this.supportsSQLExpression)throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return o||i||s?this._uvFromMemory(e,n):this._uvFromClientQuery(e,n)}async histogram(e){const{features:t,valueExpression:a,normalizationType:i,sqlExpression:r}=e,n=t||!!a;if(!a&&r&&!this.supportsSQLExpression)throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return n||i?this._histogramFromMemory(e):this._histogramForField(e)}async classBreaks(e){return e.analyzeData!==!1?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)}async queryFeatureCount(e){const{whereClause:t,view:a,signal:i}=e;if(!a)throw new d(`${this.adapterName}:insufficient-data`,"view is required to fetch the features from layerView");const r=this.layer.createQuery();r.where=q(r.where,t);const n=await a.whenLayerView(this.layer);return await Se(()=>!n.updating,i),n.queryFeatureCount(r,{signal:i})}async generateRenderer(e,t){throw new d(`${this.adapterName}:not-supported`,"Layer does not support generateRenderer operation")}async predominantCategories(e){const{fields:t,view:a,signal:i,filter:r}=e,n=be(t),o=await this._uvFromMemory({valueExpression:n,view:a,signal:i,filter:r});return Ne(o.uniqueValueInfos,t)}async heatmapStatistics(e){return this._heatmapStatsFromMemory(e)}async getSampleFeatures(e,t){const{view:a,sampleSize:i,requiredFields:r,returnGeometry:n,filter:o,signal:s}=e,l=this.layer.createQuery(),u=1;if(l.outSpatialReference=a?.spatialReference,l.returnGeometry=!!n,l.outFields=r,$(l,o),!a)throw new d(`${this.adapterName}:not-supported`,"view is required to get sample features for Layer");const m=await a.whenLayerView(this.layer);if(ce(this,r,m).length)throw new d(`${this.adapterName}:not-supported`,"Required fields need to be passed in the outFields for Layer");const p=await this._fetchFeaturesFromMemory(m,l,s,t),c=i!=null&&i>0&&i<=p.length?i:p.length;return B(p,c,u)}load(e){const t=this.layer.load(e).then(async a=>{this.geometryType=a.geometryType,this.objectIdField=a.objectIdField,this.supportsSQLExpression=a.type==="stream"||!!a.capabilities?.query?.supportsSqlExpression,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent="fullExtent"in a?a.fullExtent:a.parent?.fullExtent,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.workerClient=te.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};w([S({readOnly:!0})],H.prototype,"adapterName",void 0),w([S({constructOnly:!0})],H.prototype,"layer",void 0),H=w([M("esri.smartMapping.support.adapters.InMemoryLayerAdapter")],H);const Ie=H,Ge=5,Je=2e4,ha=4e5;let K=class extends Ie{constructor(){super(...arguments),this.adapterName="feature-layer-adapter"}_isStatsSupportedOnService(){const e=this.layer;if(!e.capabilities?.query?.supportsStatistics||this.geometryType==="multipatch"&&!xt(e.url)&&e.version<10.5)throw new d(`${this.adapterName}:not-supported`,"Layer does not support statistics query");return Promise.resolve()}_fetchFeaturesFromService(e,t){return this.layer.queryFeatures(e,{signal:t}).then(a=>a.features)}_fetchFeaturesJSONFromService(e,t){return this._fetchFeaturesFromService(e,t).then(ee)}_summaryStatsFromGenRend(e){const t=e.normalizationType,a=e.normalizationField;return this.classBreaks({field:e.field,numClasses:Ge,classificationMethod:"standard-deviation",standardDeviationInterval:.25,normalizationType:t,normalizationField:t==="field"?a:void 0,minValue:e.minValue,maxValue:e.maxValue,filter:e.filter,signal:e.signal}).then(i=>{let r,n,o;if(i.classBreakInfos?.some(l=>(l.hasAvg&&(r=l),!!r)),r){const l=r.maxValue-r.minValue;n=r.minValue+l/2,o=4*l}const s={min:i.minValue,max:i.maxValue,avg:n,stddev:o};return ue(s,e.outStatisticTypes)})}async _summaryStatsFromServiceQuery(e,t){await this._isStatsSupportedOnService(),e.normalizationType==="percent-of-total"&&(e.normalizationTotal=await this._getNormalizationTotal(e.field,e.normalizationType,e.filter));const a=N(t)||C(t),i=Me(this,e,t),r=await this.layer.queryFeatures(i,{signal:e.signal}),n=$e(r,a);return ue(n,e.outStatisticTypes)}_uvFromGenRenderer(e,t){const a=e.field??void 0,i=new Kt({attributeField:a}),r=new ve({classificationDefinition:i});return this.generateRenderer(r,e.signal).then(n=>{const o={},s=this.getField(a);return n.uniqueValues.forEach(l=>{let u=l.value;u!=null&&u!==""&&(typeof u!="string"||u.trim()!==""&&u.toLowerCase()!=="<null>")||(u=null),o[u]==null?o[u]={count:l.count,data:Ze(s)&&u?Number(u):u}:o[u].count=o[u].count+l.count}),{count:o}}).then(n=>me(n,[t],e.returnAllCodedValues))}async _uvFromServiceQuery(e,t){return this._isStatsSupportedOnService().then(()=>this.layer.queryFeatures(rt(this,e),{signal:e.signal})).then(a=>Ce(a,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:k,view:e.view,signal:e.signal})).then(a=>me(a,t,e.returnAllCodedValues,k))}_getNormalizationTotal(e,t,a,i){return e&&t==="percent-of-total"?this.summaryStatistics({field:e,outStatisticTypes:{include:["sum"]},filter:a,signal:i}).then(r=>r.sum):Promise.resolve(null)}_histogramForExpr(e){return this._getNormalizationTotal(e.field,e.normalizationType,e.filter,e.signal).then(t=>{const a=nt(e,this,t);return st(a,this,e.minValue,e.maxValue).then(i=>{const r=i.min,n=i.max;if(r==null||n==null)return{bins:[],minValue:r,maxValue:n,normalizationTotal:t};const o=e.numBins||Y,s=Le(r,n,o),l=ga(a.sqlExpression,s,e.minValue!=null&&e.maxValue!=null),u=new Q({statisticType:"count",outStatisticFieldName:"countOFExpr",onStatisticField:"1"}),m=this.layer.createQuery();return m.where=q(m.where,a.sqlWhere),m.sqlFormat="standard",m.outStatistics=[u],m.groupByFieldsForStatistics=[l],m.orderByFields=[l],$(m,e.filter),this._isStatsSupportedOnService().then(()=>this.layer.queryFeatures(m,{signal:a.signal})).then(p=>tt(p,r,n,o,t))})})}async _histogramFromQueryAttributeBins(e){const{field:t,normalizationType:a,filter:i,signal:r}=e,n=await this._getNormalizationTotal(t,a,i,r),o=this.layer.createQuery(),{query:s,min:l,max:u}=await ot(e,this,n,o?.where);if(!s)return{bins:[],minValue:l,maxValue:u,normalizationTotal:n};const m=await this.layer.queryAttributeBins(s,{signal:r});return lt(m,t?this.getField(t):null,{minValue:l,maxValue:u,normalizationTotal:n})}_classBreaksFromGenRend(e){const{field:t,normalizationType:a,normalizationField:i,normalizationTotal:r,signal:n}=e,o=de({field:t,normalizationType:a,normalizationField:i}),s=D({field:t,normalizationType:a,normalizationField:i,normalizationTotal:r,layer:this}),l=le(s,e.minValue,e.maxValue),u=We({field:t,normalizationType:a,normalizationField:i,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,breakCount:e.numClasses||Ge}),m=new ve({classificationDefinition:u});return m.where=q(o,l),this.generateRenderer(m,n).then(p=>He(p,e.classificationMethod))}async summaryStatistics(e){const{field:t,normalizationType:a,valueExpression:i,sqlExpression:r,view:n,features:o,useFeaturesInView:s}=e,l=t?this.getField(t):null,u=N(l)||C(l),m=i&&!(r&&this.supportsSQLExpression),p=this._hasLocalSource||o||s,c=n&&n.type==="3d";if(p||m)return m||o||s||c?this._summaryStatsFromMemory(e,l):this._summaryStatsFromClientQuery(e,l);if(!this.supportsSQLExpression&&(u||r||a==="natural-log"||a==="square-root"))throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return(a&&!this.supportsSQLExpression?this._summaryStatsFromGenRend(e):this._summaryStatsFromServiceQuery(e,l)).catch(()=>(V(e.signal),this._summaryStatsFromMemory(e,l)))}async uniqueValues(e){const{valueExpression:t,sqlExpression:a,features:i,useFeaturesInView:r,signal:n}=e,o=t&&!(a&&this.supportsSQLExpression),s=this._hasLocalSource||i||r||o,l=e.view,u=l&&l.type==="3d",m=await ye(e,this);return s?o||i||r||u?this._uvFromMemory(e,m):this._uvFromClientQuery(e,m):this._uvFromServiceQuery(e,m).catch(p=>(V(n),!e.field||e.field2||e.field3||e.filter?p:this._uvFromGenRenderer(e,m[0]))).catch(()=>(V(n),u?this._uvFromMemory(e,m):this._uvFromClientQuery(e,m)))}async histogram(e){const{field:t,normalizationType:a,normalizationField:i,classificationMethod:r,view:n,filter:o,signal:s}=e,l=t?this.getField(t):null,u=N(l)||C(l),m=e.valueExpression||e.sqlExpression,p=e.valueExpression&&!(e.sqlExpression&&this.supportsSQLExpression),c=this._hasLocalSource||e.features||e.useFeaturesInView||p,y=this.supportsSQLExpression,h=!r||r==="equal-interval",g=e.minValue,v=e.maxValue,F=g!=null&&v!=null,x=e.numBins||Y;if(c)return this._histogramFromMemory(e);if(this.layer.capabilities?.operations?.supportsQueryBins&&e.useQueryAttributeBins)try{return await this._histogramFromQueryAttributeBins(e)}catch{return V(s),this._histogramFromQueryAttributeBinsFromMemory(e)}if((m||y)&&h){if(!y&&(m||a==="natural-log"||a==="square-root"))throw new d(`${this.adapterName}:not-supported`,"Layer does not support standardized SQL expression for queries");return this._histogramForExpr(e)}if(u&&h)throw new d(`${this.adapterName}:not-supported`,"Normalization and date field are not allowed when layer does not support standardized SQL expression for queries");return a||!h?xe(e,this).then(L=>{if(!F)return re(this,L,t,x,n,o,s);if(g>L.max||v<L.min)throw new d(`${this.adapterName}:insufficient-data`,"Range defined by 'minValue' and 'maxValue' does not intersect available data range of the field");if(h)return re(this,{min:g,max:v,sqlExpr:L.sqlExpr,excludeZerosExpr:L.excludeZerosExpr},t,x,n,o,s);{const z={field:t,normalizationType:a,normalizationField:i,normalizationTotal:L.normTotal,layer:this},fe=D(z),O=le(fe,g,v);return xe(e,this,O).then(T=>re(this,T,t,x,n,o,s))}}):this._histogramForField(e)}async classBreaks(e){const t=e.analyzeData!==!1,a=this._hasLocalSource||e.features||e.useFeaturesInView||e.valueExpression||e.filter;return t&&a?this._classBreaksFromMemory(e):(t?this._classBreaksFromGenRend(e):this._classBreaksFromInterpolation(e)).catch(()=>(V(e.signal),this._classBreaksFromMemory(e)))}async queryFeatureCount(e){if(this._hasLocalSource)throw new d(`${this.adapterName}:not-supported`,"Layer does not support count query");const t=this.layer,a=t.createQuery();return a.where=q(a.where,e.whereClause),$(a,e.filter),t.queryFeatureCount(a,{signal:e.signal})}async generateRenderer(e,t){const a=this.layer;if(this._hasLocalSource||a.version<10.1)throw new d(`${this.adapterName}:not-supported`,"Layer does not support generateRenderer operation (requires ArcGIS Server version 10.1+)");const i=a.createQuery();return e.where=q(e.where,i.where),Wt(a.parsedUrl?.path??"",{source:a.dynamicDataSource??void 0,gdbVersion:a.gdbVersion??void 0},e,{signal:t})}async predominantCategories(e){if(!this._hasLocalSource&&!this.supportsSQLExpression)throw new d(`${this.adapterName}:not-supported`,"Layer does not support advanced SQL expressions and standardized queries");const{fields:t,view:a,signal:i,filter:r}=e,n=be(t),o=Xt(t),s=a&&this._hasLocalSource?await this._uvFromMemory({valueExpression:n,view:a,signal:i,filter:r}):await this._uvFromServiceQuery({sqlExpression:o.expression,valueExpression:n,signal:i,filter:r});return Ne(s.uniqueValueInfos,t)}async getSampleFeatures(e,t){const{view:a,requiredFields:i,returnGeometry:r,filter:n,signal:o}=e,s=e.sampleSize;if(s==null||s===0)return[];const l=this.layer.createQuery(),u=1,m=t==="json";l.outSpatialReference=a?.spatialReference,l.returnGeometry=!!r,l.outFields=i,$(l,n);let p=[],c=!1;if(a)try{const y=await a.whenLayerView(this.layer);if(c=!ce(this,i,y).length,c){if(s>=1&&!e.filter&&"getSampleFeatures"in y){await this._waitForLayerViewUpdate(y);const h=await y.getSampleFeatures({minFeatureCount:s,sampleSize:s});if(h!=null)return m?h:h.map(g=>qe.fromJSON(g))}if(p=await this._fetchFeaturesFromMemory(y,l,o,t),p.length>=s&&s>0)return B(p,s,u)}}catch{V(o)}try{if(this._hasLocalSource)return c?p:m?await this._fetchFeaturesJSONFromService(l,o):await this._fetchFeaturesFromService(l,o);const y=await this.queryFeatureCount({view:a,filter:n,signal:o}),h=this.layer.capabilities.query.maxRecordCount;let g=s===-1?y:s;if(g=h&&g>h?h:g,y<=p.length||p.length>=h)return p;if(l.maxAllowableOffset=e.resolution||(a?a.extent.width/a.width/a.scale:Ut(this.layer.spatialReference))*ha,y<=g)return m?await this._fetchFeaturesJSONFromService(l,o):await this._fetchFeaturesFromService(l,o);if(y<=Je){const v=this.layer.createQuery();$(v,n);const F=await this.layer.queryObjectIds();return l.objectIds=B(F,g,u),m?await this._fetchFeaturesJSONFromService(l,o):await this._fetchFeaturesFromService(l,o)}return this.layer.capabilities?.query?.supportsPagination&&(l.num=Math.min(g,Je)),m?await this._fetchFeaturesJSONFromService(l,o):await this._fetchFeaturesFromService(l,o)}catch{return V(o),p}}load(e){const t=this.layer.load(e).then(async a=>{this.geometryType=a.geometryType,this.objectIdField=a.objectIdField,this.supportsSQLExpression=a.capabilities?.query?.supportsSqlExpression,this._hasLocalSource=!a.url&&!!a.source,this.hasQueryEngine=this._hasLocalSource,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent=a.fullExtent,this.workerClient=te.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};function ga(e,t,a){const i=[],r=t.length;return t.forEach((n,o)=>{const[s,l]=n;let u=null;u=o!==0||a?o!==r-1||a?q(`${e} >= ${s}`,`${e} ${o===r-1?" <= ":" < "} ${l}`):`${e} >= ${s}`:`${e} < ${l}`,i.push("WHEN ("+u+") THEN "+(o+1))}),["CASE",i.join(" "),"ELSE 0","END"].join(" ")}w([S({readOnly:!0})],K.prototype,"adapterName",void 0),w([S({constructOnly:!0})],K.prototype,"layer",void 0),K=w([M("esri.smartMapping.support.adapters.FeatureLayerAdapter")],K);const _=K;let ie=class extends _{constructor(){super(...arguments),this.adapterName="csv-layer-adapter"}async _createGenerateRendererResult(t,a,i,r,n){const o=t?.features;if(!o?.length)throw new d("csv-layer-adapter:insufficient-data","No features are available to calculate statistics");const l=ee(o);let u=null;if(r==="percent-of-total"&&(u=(await this.workerClient.summaryStatistics({field:a},l)).sum,u==null))throw new d("csv-layer-adapter:invalid","invalid normalizationTotal");if(n?.type==="class-breaks-definition"){const p=(await ke({field:a,normalizationType:r,normalizationField:i,normalizationTotal:u},l)).filter(c=>Number.isFinite(c));return Lt({definition:n,values:p,normalizationTotal:u})}const m=(await ke({field:a},l)).filter(p=>p!=null&&typeof p=="string"&&p.trim()!=="");return zt(m)}generateRenderer(t,a){const i=t.classificationDefinition;let r=null,n=null,o=null;i?.type==="class-breaks-definition"?(r=i.classificationField,n=i.normalizationField,o=i.normalizationType):r=i?.attributeField;const s=this.layer;return A({field:r,normalizationField:n}).then(l=>{const u=s.createQuery();return u.returnGeometry=!1,u.outFields=l,u.where=q(u.where,t.where),s.queryFeatures(u,{signal:a}).then(m=>this._createGenerateRendererResult(m,r,n,o,i))})}load(t){const a=this.layer.load(t).then(async i=>{this.geometryType=i.geometryType,this.objectIdField=i.objectIdField,this.supportsSQLExpression=!0,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.workerClient=te.getInstance(),await this.workerClient.open(t.signal)});return this.addResolvingPromise(a),Promise.resolve(this)}};w([S({readOnly:!0})],ie.prototype,"adapterName",void 0),ie=w([M("esri.smartMapping.support.adapters.CSVLayerAdapter")],ie);const wa=ie;let ne=class extends _{constructor(){super(...arguments),this.adapterName="feature-layer-binning-adapter"}async _getNormalizationTotalFromMemory(e,t,a){const{featuresJSON:i,graphics:r,layerView:n,query:o}=t,s={include:["sum"]},l=(!i&&!r&&n&&"queryAggregateSummaryStatistics"in n?await n.queryAggregateSummaryStatistics(o,{field:e,outStatisticTypes:s},{signal:a}):i?await this.workerClient.summaryStatistics({field:e},i):await R({attribute:{field:e,outStatisticTypes:s},features:r})).sum;if(l==null)throw new d(`${this.adapterName}:invalid`,"invalid normalizationTotal");return l}async _processStatsFromMemoryParams(e){const{features:t,filter:a}=e;if(t?.length)return this._getFilteredFeatures(t,a);const{view:i,field:r,field2:n,field3:o,normalizationField:s,valueExpression:l,returnGeometry:u,layerViewFunc:m,signal:p}=e;let c=null,y=null,h=null,g=null,v=null;if(i)try{if(c=await i.whenLayerView(this.layer),y=m!=null&&m in c&&typeof c[m]=="function",y){await this._waitForLayerViewUpdate(c);const F=await A({field:r,field2:n,field3:o,normalizationField:s,valueExpression:l});Be(this,F).length?y=!1:(h="createAggregateQuery"in c?c.createAggregateQuery():null,h?(h.outFields=F,h.returnGeometry=!1,$(h,a)):y=!1),c.suspended&&(y=!1)}}catch{y=!1}if(!y&&(v=Qe(this.layer).map(F=>F.toJSON()),g=await this._fetchFeaturesForStats({field:r,field2:n,field3:o,valueExpression:l,normalizationField:s,returnGeometry:u,filter:a,view:i,signal:p},"json"),!g?.length))throw new d(`${this.adapterName}:insufficient-data`,"No features are available to calculate statistics");return{layerView:c,query:h,featuresJSON:g,fieldInfos:v}}async _summaryStatsFromMemory(e,t){const{view:a,field:i,valueExpression:r,normalizationType:n,signal:o}=e,s={field:i,valueExpression:r,normalizationType:n,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes},{featuresJSON:l,graphics:u,layerView:m,query:p,fieldInfos:c}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateSummaryStatistics"});return r&&a&&(l||u)&&(s.fieldType=t?.type?ze.toJSON(t.type):null,s.viewInfoParams=E(a),s.timeZone=a.timeZone,s.fieldInfos=c),n==="percent-of-total"&&e.normalizationTotal==null&&(s.normalizationTotal=await this._getNormalizationTotalFromMemory(i,{featuresJSON:l,graphics:u,layerView:m,query:p},o)),!l&&!u&&m&&"queryAggregateSummaryStatistics"in m?m.queryAggregateSummaryStatistics(p,s,{signal:o}):l?this.workerClient.summaryStatistics(s,l):R({attribute:s,features:u})}async _uvFromMemory(e,t){const{view:a,field:i,valueExpression:r,returnAllCodedValues:n,signal:o}=e,{featuresJSON:s,graphics:l,layerView:u,query:m,fieldInfos:p}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateUniqueValues"}),c={field:i,field2:e.field2,field3:e.field3,fieldDelimiter:k,valueExpression:r,domains:t,returnAllCodedValues:n};return r&&a&&(s||l)&&(c.viewInfoParams=E(a),c.timeZone=a.timeZone,c.fieldInfos=p),!s&&!l&&u&&"queryAggregateUniqueValues"in u?u.queryAggregateUniqueValues(m,c,{signal:o}):s?this.workerClient.uniqueValues(c,s):_e({attribute:c,features:l})}async _histogramFromMemory(e){const{view:t,field:a,valueExpression:i,signal:r}=e,{featuresJSON:n,graphics:o,layerView:s,query:l,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateHistogram"}),m={field:a,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return i&&t&&(n||o)&&(m.viewInfoParams=E(t),m.timeZone=t.timeZone,m.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(m.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:n,graphics:o,layerView:s,query:l},r)),!n&&!o&&s&&"queryAggregateHistogram"in s?s.queryAggregateHistogram(l,m,{signal:r}):n?this.workerClient.histogram(m,n):pe({attribute:m,features:o})}async _classBreaksFromMemory(e){const{view:t,field:a,valueExpression:i,signal:r}=e,{featuresJSON:n,graphics:o,layerView:s,query:l,fieldInfos:u}=await this._processStatsFromMemoryParams({...e,layerViewFunc:"queryAggregateClassBreaks"}),m={field:a,valueExpression:i,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return i&&t&&(n||o)&&(m.viewInfoParams=E(t),m.timeZone=t.timeZone,m.fieldInfos=u),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(m.normalizationTotal=await this._getNormalizationTotalFromMemory(a,{featuresJSON:n,graphics:o,layerView:s,query:l},r)),!n&&!o&&s&&"queryAggregateClassBreaks"in s?s.queryAggregateClassBreaks(l,m,{signal:r}):n?this.workerClient.classBreaks(m,n):Te({attribute:m,features:o})}getField(e=""){return Qe(this.layer)?.find(a=>a.name.toLowerCase()===e?.toLowerCase())}getFieldUsageInfo(e){return this.getField(e)?{supportsLabelingInfo:!0,supportsRenderer:!0,supportsPopupTemplate:!0,supportsLayerQuery:!1,supportsStatistics:!0}:null}getFieldDomain(e,t){return null}async summaryStatistics(e){const{field:t}=e,a=t?this.getField(t):null,i=N(a)||C(a),r=e.sqlExpression&&!e.valueExpression&&!t;if(i||r)throw new d(`${this.adapterName}:not-supported`,"Date field and sqlExpression are not supported");return this._summaryStatsFromMemory(e,a)}async uniqueValues(e){const t=await ye(e,this);return this._uvFromMemory(e,t)}async histogram(e){const{field:t}=e,a=t?this.getField(t):null,i=N(a)||C(a),r=e.sqlExpression&&!e.valueExpression&&!t;if(i||r)throw new d(`${this.adapterName}:not-supported`,"Date field and sqlExpression are not supported");return this._histogramFromMemory(e)}async classBreaks(e){return(e.analyzeData!==!1?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)).catch(()=>(V(e.signal),this._classBreaksFromMemory(e)))}async queryFeatureCount(e){const t=await e.view?.whenLayerView(this.layer);if(!t||!("queryAggregateCount"in t)||!t.queryAggregateCount)throw new d(`${this.adapterName}:not-supported`,"LayerView is not supported.");await this._waitForLayerViewUpdate(t);const a=t.createAggregateQuery();return a.where=q(a.where,e.whereClause),$(a,e.filter),t.queryAggregateCount(a,{signal:e.signal})}generateRenderer(e,t){throw new d(`${this.adapterName}:not-supported`,"'generateRenderer' is not supported.")}heatmapStatistics(e){throw new d(`${this.adapterName}:not-supported`,"'heatmapStatistics' is not supported.")}async predominantCategories(e){const{fields:t,view:a,signal:i}=e,r=be(t),n=await this._uvFromMemory({valueExpression:r,view:a,signal:i});return Ne(n.uniqueValueInfos,t)}async getSampleFeatures(e,t){const{view:a,sampleSize:i,requiredFields:r,returnGeometry:n,filter:o,signal:s}=e;if(!a)throw new d(`${this.adapterName}:not-supported`,"'view' is required to get sample features for binning.");if(a.type==="3d")throw new d(`${this.adapterName}:not-supported`,"3d 'view' is not supported to get sample features for binning.");const l=await a.whenLayerView(this.layer);if(!("queryAggregateJSON"in l&&l.queryAggregateJSON&&"queryAggregates"in l&&l.queryAggregates))throw new d(`${this.adapterName}:not-supported`,"LayerView is not supported.");if(await this._waitForLayerViewUpdate(l),Be(this,r).length)throw new d(`${this.adapterName}:insufficient-data`,"Layer does not have required fields");const u=1,m=t==="json",p=l.createAggregateQuery();p.outSpatialReference=a?.spatialReference,p.returnGeometry=!!n,p.outFields=r,$(p,o);const{features:c}=m?await l.queryAggregateJSON(p,{signal:s}):await l.queryAggregates(p,{signal:s});return c.length&&i!=null&&i>0&&i<=c.length?B(c,i,u):c}load(e){const t=this.layer.load(e).then(async a=>{this.geometryType="polygon",this.objectIdField=null,this.supportsSQLExpression=!1,this._hasLocalSource=!1,this.hasQueryEngine=!0,this.minScale=a.minScale,this.maxScale=a.maxScale,this.fullExtent=a.fullExtent;const i="featureReduction"in a?a.featureReduction:null;if(i?.type!=="binning"&&i?.type!=="cluster")throw new d(`${this.adapterName}:invalid-parameters`,`Feature reduction type ${i?.type} is not supported`);this.workerClient=te.getInstance(),await this.workerClient.open(e.signal)});return this.addResolvingPromise(t),Promise.resolve(this)}};w([S({readOnly:!0})],ne.prototype,"adapterName",void 0),ne=w([M("esri.smartMapping.support.adapters.FeatureLayerBinningAdapter")],ne);const Fa=ne;let X=class extends Ee{constructor(e){super(e),this._featureLayerAdapter=null,this.workerClient=null,this.adapterName="scene-layer-adapter"}destroy(){this.workerClient?.destroy()}_hasCachedStatistics(e){return this.layer.hasCachedStatistics(e)}_updateQuery(e,t=[],a=[]){if(!e||!a.length)return e;const i=this.layer.objectIdField,r=e.clone(),n=t.filter(s=>{const l=this.layer.getField(s);return!a.includes(l.name)}),o=n.some(s=>this.layer.getField(s).name===i);return r.outFields=o?n:[...n,i],r}async _fetchFeaturesFromMemory(e,t,a){if(!e)throw new d("scene-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const i=await e.whenLayerView(this.layer),r=new AbortController,n=r.signal,o=Se(()=>!i.updating,n);await Ue(o,5e3,r);const s=ce(this,a,i);V(n);const l=this._updateQuery(t,a??[],s),u=await i.queryFeatures(l,{signal:n});V(n);const m=u.features;return s.length?i.whenGraphicAttributes(m,s):m}async _fetchFeaturesJSONFromMemory(e,t,a){return this._fetchFeaturesFromMemory(e,t,a).then(ee)}_fetchFeaturesForStats(e,t){return A({field:e.field,normalizationField:e.normalizationField,valueExpression:e.valueExpression}).then(a=>this.getSampleFeatures({sampleSize:-1,view:e.view,returnGeometry:e.returnGeometry,requiredFields:a,signal:e.signal},t))}async _processStatsFromMemoryParams(e){const t=e.features;if(t?.length)return t.length&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic"?{graphics:t}:{featuresJSON:t};const{view:a,field:i,normalizationField:r,valueExpression:n,signal:o}=e,s=await this._fetchFeaturesForStats({field:i,valueExpression:n,normalizationField:r,view:a,signal:o},null);if(!s?.length)throw new d("scene-layer-adapter:insufficient-data","No features are available to calculate statistics");return{graphics:s}}_getCachedStatistics(e,t){const a=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.minValue||e.maxValue?Promise.reject(new d("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression', 'sqlWhere', 'minValue' or 'maxValue' is specified")):a.queryCachedStatistics(t?.name,{signal:e.signal}).then(i=>{const r=i.stats,{min:n,max:o,totalValuesCount:s}=r;let{avg:l,stddev:u,sum:m,variance:p,count:c}=r;return n===0&&o===0||(l=l===0?null:l,m=m===0?null:m,u=u===0?null:u,p=p===0?null:p,c=c===0?null:c),c==null&&(m!=null&&l!=null?c=Math.round(m/l):s!=null&&(c=s)),{avg:l,count:c,max:o,min:n,stddev:u,sum:m,variance:p}})}async _getNormalizationTotal(e,t,a){const i={include:["sum"]},r=(t?await this.workerClient.summaryStatistics({field:e,outStatisticTypes:i},t):await R({attribute:{field:e,outStatisticTypes:i},features:a})).sum;if(r==null)throw new d("scene-layer-adapter:invalid","invalid normalizationTotal");return r}async _getSummaryStatisticsFromMemory(e,t){const{view:a,field:i,normalizationField:r,valueExpression:n}=e,{featuresJSON:o,graphics:s}=await this._processStatsFromMemoryParams(e),l={field:i,valueExpression:n,normalizationType:e.normalizationType,normalizationField:r,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,outStatisticTypes:e.outStatisticTypes};return e.valueExpression&&a&&o&&(l.fieldType=t?.type?ze.toJSON(t.type):null,l.viewInfoParams=E(a),l.timeZone=a.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(l.normalizationTotal=await this._getNormalizationTotal(i,o,s)),o?this.workerClient.summaryStatistics(l,o):R({attribute:l,features:s})}_getCachedStatisticsForUniqueValues(e,t){const a=this.layer,i=t?.name,r=t&&e.field?this.getFieldDomain(e.field):null;return e.valueExpression||e.sqlExpression||e.sqlWhere?Promise.reject(new d("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression', 'sqlExpression' or 'sqlWhere' is specified")):a.queryCachedStatistics(i,{signal:e.signal}).then(n=>{const o=n.stats;if(!o.mostFrequentValues)throw new Error;const s=n.labels?.labels,l={},u=[],m="countOF"+i;o.mostFrequentValues.forEach(c=>{const y=new qe({attributes:{}});y.attributes[i]=t&&t.name!==a.objectIdField&&(Ze(t)||N(t))?Number(c.value):c.value,y.attributes[m]=c.count,u.push(y)}),s&&s.forEach(c=>{l[c.value]=c.label});const p=new Xe({features:u});return Ce(p,{layer:this,field:e.field,labels:l,view:e.view,signal:e.signal})}).then(n=>me(n,[r],e.returnAllCodedValues))}async _getUniqueValuesFromMemory(e,t){const{view:a,field:i,field2:r,field3:n,valueExpression:o,returnAllCodedValues:s}=e,l={field:i,field2:r,field3:n,fieldDelimiter:k,valueExpression:o,domains:t,returnAllCodedValues:s},{featuresJSON:u,graphics:m}=await this._processStatsFromMemoryParams(e);return e.valueExpression&&a&&u&&(l.viewInfoParams=E(a),l.timeZone=a.timeZone),u?this.workerClient.uniqueValues(l,u):_e({attribute:l,features:m})}_getCachedStatisticsForHistogram(e,t){const a=this.layer;return e.valueExpression||e.sqlExpression||e.sqlWhere||e.normalizationType?Promise.reject(new d("scene-layer-adapter:not-supported","This Layer does not support calculating statistics when 'valueExpression' or 'sqlExpression' or 'sqlWhere' or 'normalizationType' is specified")):a.queryCachedStatistics(t&&t.name,{signal:e.signal}).then(i=>{const r=i.stats,{minValue:n,maxValue:o}=e,s=n??r.min,l=o??r.max,u=e.numBins||10,m=Sa(r.histogram,s,l,u);return tt(m,s,l,u)})}async _getClassBreaksFromMemory(e){const{view:t,field:a,normalizationField:i,valueExpression:r}=e,{featuresJSON:n,graphics:o}=await this._processStatsFromMemoryParams(e),s={field:a,valueExpression:r,normalizationType:e.normalizationType,normalizationField:i,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numClasses:e.numClasses};return e.valueExpression&&t&&n&&(s.viewInfoParams=E(t),s.timeZone=t.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(s.normalizationTotal=await this._getNormalizationTotal(a,n,o)),n?this.workerClient.classBreaks(s,n):Te({attribute:s,features:o})}async _getHistogramFromMemory(e){const{view:t,field:a}=e,{featuresJSON:i,graphics:r}=await this._processStatsFromMemoryParams(e),n={field:a,valueExpression:e.valueExpression,normalizationType:e.normalizationType,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,minValue:e.minValue,maxValue:e.maxValue,standardDeviationInterval:e.standardDeviationInterval,classificationMethod:e.classificationMethod,numBins:e.numBins};return e.valueExpression&&t&&i&&(n.viewInfoParams=E(t),n.timeZone=t.timeZone),e.normalizationType==="percent-of-total"&&e.normalizationTotal==null&&(n.normalizationTotal=await this._getNormalizationTotal(a,i,r)),i?this.workerClient.histogram(n,i):pe({attribute:n,features:r})}getField(e){return this.layer.getField(e??"")}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this.layer.getFieldUsageInfo(t.name);return{supportsLabelingInfo:a.supportsLabelingInfo,supportsPopupTemplate:a.supportsPopupTemplate,supportsRenderer:a.supportsRenderer,supportsLayerQuery:a.supportsLayerQuery,supportsStatistics:!0}}getFieldDomain(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.getFieldDomain(e,t):null}createQuery(){return this.layer.createQuery()}summaryStatistics(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.summaryStatistics(e);if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");return this._hasCachedStatistics(t?.name)?this._getCachedStatistics(e,t).catch(()=>(V(e.signal),this._getSummaryStatisticsFromMemory(e,t))):this._getSummaryStatisticsFromMemory(e,t)}async uniqueValues(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.uniqueValues(e);if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");const t=await ye(e,this),{field:a,field2:i}=e,r=a&&i,n=this.getField(a);return!r&&n&&this._hasCachedStatistics(n.name)?this._getCachedStatisticsForUniqueValues(e,n).catch(()=>(V(e.signal),this._getUniqueValuesFromMemory(e,t))):this._getUniqueValuesFromMemory(e,t)}histogram(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.histogram(e);if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");return t&&this._hasCachedStatistics(t.name)?this._getCachedStatisticsForHistogram(e,t).catch(()=>(V(e.signal),this._getHistogramFromMemory(e))):this._getHistogramFromMemory(e)}classBreaks(e){const t=this.getField(e.field);if(this._featureLayerAdapter)return this._featureLayerAdapter.classBreaks(e);if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");return this._hasCachedStatistics(t?.name)?Promise.reject(new d("scene-layer-adapter:not-supported","Cached stats not supported")):this._getClassBreaksFromMemory(e)}queryFeatureCount(e){return this._featureLayerAdapter?this._featureLayerAdapter.queryFeatureCount(e):Promise.reject(new d("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support count query"))}generateRenderer(e,t){return this._featureLayerAdapter?this._featureLayerAdapter.generateRenderer(e,t):Promise.reject(new d("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support generateRenderer operation"))}heatmapStatistics(e){return this._featureLayerAdapter?this._featureLayerAdapter.heatmapStatistics(e):Promise.reject(new d("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support heatmapStatistics operation"))}async predominantCategories(e){if(this._featureLayerAdapter)return this._featureLayerAdapter.predominantCategories(e);throw new d("scene-layer-adapter:not-supported","SceneLayer without associated FeatureLayer does not support predominantCategories")}async getSampleFeatures(e,t){if(e.filter)throw new d("scene-layer-adapter:not-supported","filter is not supported");const{view:a,sampleSize:i,requiredFields:r,returnGeometry:n,signal:o}=e,s=1,l=t==="json",u=this.createQuery();u.outFields=r,u.returnGeometry=!!n,u.where=null,u.num=i;let m=[];try{if(m=l?await this._fetchFeaturesJSONFromMemory(a,u,r):await this._fetchFeaturesFromMemory(a,u,r),m.length&&i!=null&&i>0&&i<=m.length)return B(m,i,s)}catch{V(o)}let p=null;if(this._featureLayerAdapter){const c={...e};delete c.view,p=await this._featureLayerAdapter.getSampleFeatures(c,t)}return p?.length?p:B(m,m.length,s)}load(e){const t=this.layer.load(e).then(async a=>{this.workerClient=te.getInstance(),await this.workerClient.open(e.signal);const i=a.associatedLayer;if(this.geometryType=a.geometryType,i!=null)return this._featureLayerAdapter=new _({layer:i}),this._featureLayerAdapter.load(e).then(()=>{this.objectIdField=this._featureLayerAdapter.objectIdField,this.supportsSQLExpression=this._featureLayerAdapter.supportsSQLExpression,this.minScale=this._featureLayerAdapter.minScale,this.maxScale=this._featureLayerAdapter.maxScale,this.fullExtent=this._featureLayerAdapter.fullExtent});this.objectIdField=a.objectIdField,this.supportsSQLExpression=!1,this.hasQueryEngine=!1,this.fullExtent=a.fullExtent});return this.addResolvingPromise(t),Promise.resolve(this)}};function Sa(e,t=e.minimum,a=e.maximum,i){const r=[];for(let u=0;u<i;u++)r[u]=0;const n=e.counts.length,o=e.minimum,s=e.maximum;for(let u=0;u<n;u++){const m=(u+.5)/n,p=((1-m)*o+m*s-t)/(a-t)*i;p>=0&&p<=i&&(r[p===i?i-1:Math.floor(p)]+=e.counts[u])}const l=[];return r.forEach((u,m)=>{const p=new qe({attributes:{}});p.attributes.EXPR_1=m+1,p.attributes.countOFExpr=u,l.push(p)}),new Xe({features:l})}w([S({readOnly:!0})],X.prototype,"adapterName",void 0),w([S({constructOnly:!0})],X.prototype,"layer",void 0),X=w([M("esri.smartMapping.support.adapters.SceneLayerAdapter")],X);const ut=X;let se=class extends ut{constructor(e){super(e),this.adapterName="point-cloud-layer-adapter"}getField(e){return this.layer.fieldsIndex.get(e??"")}getFieldUsageInfo(e){const t=this.getField(e);if(!t)return null;const a=this._hasCachedStatistics(t.name);return{supportsLabelingInfo:a,supportsPopupTemplate:a,supportsRenderer:a,supportsLayerQuery:!1,supportsStatistics:a}}getFieldDomain(){return null}load(e){const t=this.layer.load(e).then(()=>{this.geometryType="point",this.objectIdField=null,this.supportsSQLExpression=!1,this.hasQueryEngine=!1});return this.addResolvingPromise(t),Promise.resolve(this)}};w([S({readOnly:!0})],se.prototype,"adapterName",void 0),se=w([M("esri.smartMapping.support.adapters.PointCloudLayerAdapter")],se);const va=se;let oe=class extends Ie{constructor(){super(...arguments),this.adapterName="stream-layer-adapter"}async _summaryStatsFromClientQuery(e,t){const{signal:a,view:i}=e,r=Me(this,e,t);r.outStatistics=r.outStatistics?.filter(s=>s.outStatisticFieldName!=="totalcount_value");const n=await this._fetchFeatureSetFromMemory(r,i,a),o=$e(n,N(t)||C(t));return ue(o,e.outStatisticTypes)}};w([S({readOnly:!0})],oe.prototype,"adapterName",void 0),oe=w([M("esri.smartMapping.support.adapters.StreamLayerAdapter")],oe);const xa=oe;var f;(function(e){e[e.CatalogLayer=0]="CatalogLayer",e[e.CatalogFootprintLayer=1]="CatalogFootprintLayer",e[e.CSVLayer=2]="CSVLayer",e[e.FeatureLayer=3]="FeatureLayer",e[e.GeoJSONLayer=4]="GeoJSONLayer",e[e.KnowledgeGraphSublayer=5]="KnowledgeGraphSublayer",e[e.OGCFeatureLayer=6]="OGCFeatureLayer",e[e.OrientedImageryLayer=7]="OrientedImageryLayer",e[e.ParquetLayer=8]="ParquetLayer",e[e.PointCloudLayer=9]="PointCloudLayer",e[e.SceneLayer=10]="SceneLayer",e[e.StreamLayer=11]="StreamLayer",e[e.SubtypeGroupLayer=12]="SubtypeGroupLayer",e[e.SubtypeSublayer=13]="SubtypeSublayer",e[e.WFSLayer=14]="WFSLayer"})(f||(f={}));const Ve={[f.CatalogLayer]:{adapter:_,type:"catalog",label:"CatalogLayer"},[f.CatalogFootprintLayer]:{adapter:_,type:"catalog-footprint",label:"CatalogFootprintLayer"},[f.CSVLayer]:{adapter:wa,type:"csv",label:"CSVLayer"},[f.FeatureLayer]:{adapter:_,type:"feature",label:"FeatureLayer"},[f.GeoJSONLayer]:{adapter:_,type:"geojson",label:"GeoJSONLayer"},[f.KnowledgeGraphSublayer]:{adapter:_,type:"knowledge-graph-sublayer",label:"KnowledgeGraphSublayer"},[f.OGCFeatureLayer]:{adapter:Ie,type:"ogc-feature",label:"OGCFeatureLayer"},[f.OrientedImageryLayer]:{adapter:_,type:"oriented-imagery",label:"OrientedImageryLayer"},[f.ParquetLayer]:{adapter:_,type:"parquet",label:"ParquetLayer"},[f.PointCloudLayer]:{adapter:va,type:"point-cloud",label:"PointCloudLayer"},[f.SceneLayer]:{adapter:ut,type:"scene",label:"SceneLayer"},[f.StreamLayer]:{adapter:xa,type:"stream",label:"StreamLayer"},[f.SubtypeGroupLayer]:{adapter:_,type:"subtype-group",label:"SubtypeGroupLayer"},[f.SubtypeSublayer]:{adapter:_,type:"subtype-sublayer",label:"SubtypeSublayer"},[f.WFSLayer]:{adapter:_,type:"wfs",label:"WFSLayer"}},Oe=[f.CatalogLayer,f.CatalogFootprintLayer,f.CSVLayer,f.FeatureLayer,f.GeoJSONLayer,f.KnowledgeGraphSublayer,f.OGCFeatureLayer,f.OrientedImageryLayer,f.ParquetLayer,f.PointCloudLayer,f.SceneLayer,f.StreamLayer,f.SubtypeGroupLayer,f.SubtypeSublayer,f.WFSLayer];f.CatalogFootprintLayer,f.CSVLayer,f.FeatureLayer,f.GeoJSONLayer,f.KnowledgeGraphSublayer,f.OGCFeatureLayer,f.OrientedImageryLayer,f.ParquetLayer,f.SceneLayer,f.StreamLayer,f.SubtypeGroupLayer,f.SubtypeSublayer,f.WFSLayer;const Va=[f.CSVLayer,f.FeatureLayer,f.GeoJSONLayer,f.OGCFeatureLayer,f.KnowledgeGraphSublayer,f.OrientedImageryLayer,f.ParquetLayer,f.StreamLayer,f.WFSLayer];function qa(e){return e.map(t=>Ve[t].label)}function La(e,t=Oe,a){if(e instanceof Ee)return e;const i=za(e,t);return i?a?new Fa({layer:e}):new i({layer:e}):null}function za(e,t=Oe){let a=null;return t.some(i=>{const r=e.type===Ve[i].type;return r&&(a=Ve[i].adapter),r}),a}async function _a(e){if(!e?.layer||!e.field&&!e.valueExpression)throw new d("unique-values:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");const t=e.valueExpression||e.sqlExpression,a=t&&!e.sqlExpression;if(t){if(a){if(!e.view)throw new d("unique-values:missing-parameters","View is required when 'valueExpression' is specified")}else if(!e.valueExpression)throw new d("unique-values:missing-parameters","'valueExpression' parameters are required")}e.forBinning&&Zt(e,"unique-values");const{layer:i,...r}=e,n=e.forBinning?Va:Oe,o=La(i,n,e.forBinning);if(!o)throw new d("unique-values:invalid-parameters","'layer' must be one of these types: "+qa(n).join(", "));const s={layerAdapter:o,...r},l=s.signal!=null?{signal:s.signal}:null;await o.load(l);const u=await A({field:s.field,field2:s.field2,field3:s.field3,valueExpression:s.valueExpression}),m=_t(o,u,"unique-values:invalid-parameters");if(m)throw m;s.filter&&!s.filter.spatialRelationship&&(s.filter.spatialRelationship="intersects");const p=Tt(s.filter,"summary-statistics:invalid-parameters");if(p)throw p;return s}async function Vi(e){const{layerAdapter:t,...a}=await _a(e);return t.uniqueValues(a)}export{Vi as default};
