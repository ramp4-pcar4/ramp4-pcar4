import"./main-D6UWMbWJ.js";import{c as P}from"./Texture-pu6CNJho.js";import{H as p,V as T}from"./enums-Dk3osxpS.js";let Ue=class{constructor(t){this._readFile=t}resolveIncludes(t){return this._resolve(t)}_resolve(t,r=new Map){if(r.has(t))return r.get(t);const e=this._read(t);if(!e)throw new Error(`cannot find shader file ${t}`);const i=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm;let a=i.exec(e);const n=[];for(;a!=null;)n.push({path:a[1],start:a.index,length:a[0].length}),a=i.exec(e);let l=0,s="";return n.forEach(f=>{s+=e.slice(l,f.start),s+=r.has(f.path)?"":this._resolve(f.path,r),l=f.start+f.length}),s+=e.slice(l),r.set(t,s),s}_read(t){return this._readFile(t)}};const J=["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uint","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"],Y=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"],b=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"],ee=["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT","textureSize","texelFetch"];var _=999,A=9999,w=0,D=1,k=2,F=3,j=4,M=5,te=6,re=7,oe=8,R=9,ne=10,V=11,ae=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function ie(){var o,t,r,e=0,i=0,a=_,n=[],l=[],s=1,f=0,c=0,h=!1,d=!1,u="";return function(m){return l=[],m!==null?N(m.replace?m.replace(/\r\n/g,`
`):m):X()};function g(m){m.length&&l.push({type:ae[a],data:m,position:c,line:s,column:f})}function N(m){var v;for(e=0,r=(u+=m).length;o=u[e],e<r;){switch(v=e,a){case w:e=q();break;case D:e=H();break;case k:e=C();break;case F:e=z();break;case j:e=Q();break;case V:e=K();break;case M:e=W();break;case A:e=Z();break;case R:e=$();break;case _:e=G()}v!==e&&(u[v]===`
`?(f=0,++s):++f)}return i+=e,u=u.slice(e),l}function X(m){return n.length&&g(n.join("")),a=ne,g("(eof)"),l}function G(){return n=n.length?[]:n,t==="/"&&o==="*"?(c=i+e-1,a=w,t=o,e+1):t==="/"&&o==="/"?(c=i+e-1,a=D,t=o,e+1):o==="#"?(a=k,c=i+e,e):/\s/.test(o)?(a=R,c=i+e,e):(h=/\d/.test(o),d=/[^\w_]/.test(o),c=i+e,a=h?j:d?F:A,e)}function $(){return/[^\s]/g.test(o)?(g(n.join("")),a=_,e):(n.push(o),t=o,e+1)}function C(){return o!=="\r"&&o!==`
`||t==="\\"?(n.push(o),t=o,e+1):(g(n.join("")),a=_,e)}function H(){return C()}function q(){return o==="/"&&t==="*"?(n.push(o),g(n.join("")),a=_,e+1):(n.push(o),t=o,e+1)}function z(){if(t==="."&&/\d/.test(o))return a=M,e;if(t==="/"&&o==="*")return a=w,e;if(t==="/"&&o==="/")return a=D,e;if(o==="."&&n.length){for(;U(n););return a=M,e}if(o===";"||o===")"||o==="("){if(n.length)for(;U(n););return g(o),a=_,e+1}var m=n.length===2&&o!=="=";if(/[\w_\d\s]/.test(o)||m){for(;U(n););return a=_,e}return n.push(o),t=o,e+1}function U(m){for(var v,y,L=0;;){if(v=b.indexOf(m.slice(0,m.length+L).join("")),y=b[v],v===-1){if(L--+m.length>0)continue;y=m.slice(0,1).join("")}return g(y),c+=y.length,(n=n.slice(y.length)).length}}function K(){return/[^a-fA-F0-9]/.test(o)?(g(n.join("")),a=_,e):(n.push(o),t=o,e+1)}function Q(){return o==="."||/[eE]/.test(o)?(n.push(o),a=M,t=o,e+1):o==="x"&&n.length===1&&n[0]==="0"?(a=V,n.push(o),t=o,e+1):/[^\d]/.test(o)?(g(n.join("")),a=_,e):(n.push(o),t=o,e+1)}function W(){return o==="f"&&(n.push(o),t=o,e+=1),/[eE]/.test(o)||o==="-"&&/[eE]/.test(t)?(n.push(o),t=o,e+1):/[^\d]/.test(o)?(g(n.join("")),a=_,e):(n.push(o),t=o,e+1)}function Z(){if(/[^\d\w_]/.test(o)){var m=n.join("");return a=Y.indexOf(m)>-1?oe:ee.indexOf(m)>-1?re:te,g(n.join("")),a=_,e}return n.push(o),t=o,e+1}}function se(o){var t=ie(),r=[];return r=(r=r.concat(t(o))).concat(t(null))}function le(o){return se(o)}function ce(o){return o.map(t=>t.type!=="eof"?t.data:"").join("")}const E=new Set(["GL_OES_standard_derivatives","GL_EXT_frag_depth","GL_EXT_draw_buffers","GL_EXT_shader_texture_lod"]);function fe(o,t="100",r="300 es"){const e=/^\s*#version\s+([0-9]+(\s+[a-zA-Z]+)?)\s*/;for(const i of o)if(i.type==="preprocessor"){const a=e.exec(i.data);if(a){const n=a[1].replaceAll(/\s{2,}/g," ");if(n===r)return n;if(n===t)return i.data="#version "+r,t;throw new Error("unknown glsl version: "+n)}}return o.splice(0,0,{type:"preprocessor",data:"#version "+r},{type:"whitespace",data:`
`}),null}function me(o,t){for(let r=t-1;r>=0;r--){const e=o[r];if(e.type!=="whitespace"&&e.type!=="block-comment"){if(e.type!=="keyword")break;if(e.data==="attribute"||e.data==="in")return!0}}return!1}function S(o,t,r,e){e=e||r;for(const i of o)if(i.type==="ident"&&i.data===r)return e in t?t[e]++:t[e]=0,S(o,t,e+"_"+t[e],e);return r}function I(o,t,r="afterVersion"){function e(s,f){for(let c=f;c<s.length;c++){const h=s[c];if(h.type==="operator"&&h.data===";")return c}return null}function i(s){let f=-1,c=0,h=-1;for(let d=0;d<s.length;d++){const u=s[d];if(u.type==="preprocessor"&&(/#(if|ifdef|ifndef)\s+.+/.test(u.data)?++c:/#endif\s*.*/.test(u.data)&&--c),r!=="afterVersion"&&r!=="afterPrecision"||u.type==="preprocessor"&&u.data.startsWith("#version")&&(h=Math.max(h,d)),r==="afterPrecision"&&u.type==="keyword"&&u.data==="precision"){const g=e(s,d);if(g===null)throw new Error("precision statement not followed by any semicolons!");h=Math.max(h,g)}f<h&&c===0&&(f=d)}return f+1}const a={data:`
`,type:"whitespace"},n=s=>s<o.length&&/[^\r\n]$/.test(o[s].data);let l=i(o);n(l-1)&&o.splice(l++,0,a);for(const s of t)o.splice(l++,0,s);n(l-1)&&n(l)&&o.splice(l,0,a)}function he(o,t,r,e="lowp"){I(o,[{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:e},{type:"whitespace",data:" "},{type:"keyword",data:r},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function ge(o,t,r,e,i="lowp"){I(o,[{type:"keyword",data:"layout"},{type:"operator",data:"("},{type:"keyword",data:"location"},{type:"whitespace",data:" "},{type:"operator",data:"="},{type:"whitespace",data:" "},{type:"integer",data:e.toString()},{type:"operator",data:")"},{type:"whitespace",data:" "},{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:i},{type:"whitespace",data:" "},{type:"keyword",data:r},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function ue(o,t){let r,e,i=-1;for(let a=t;a<o.length;a++){const n=o[a];if(n.type==="operator"&&(n.data==="["&&(r=a),n.data==="]")){e=a;break}n.type==="integer"&&(i=parseInt(n.data,10))}return r&&e&&o.splice(r,e-r+1),i}function O(o,t){if(o.startsWith("#version 300"))return o;const r=le(o);if(fe(r,"100","300 es")==="300 es")return o;let e=null,i=null;const a={},n={};for(let l=0;l<r.length;++l){const s=r[l];switch(s.type){case"keyword":t===p.VERTEX_SHADER&&s.data==="attribute"?s.data="in":s.data==="varying"&&(s.data=t===p.VERTEX_SHADER?"out":"in");break;case"builtin":if(/^texture(2D|Cube)(Proj)?(Lod|Grad)?(EXT)?$/.test(s.data.trim())&&(s.data=s.data.replaceAll(/(2D|Cube|EXT)/g,"")),t===p.FRAGMENT_SHADER&&s.data==="gl_FragColor"&&(e||(e=S(r,a,"fragColor"),he(r,e,"vec4")),s.data=e),t===p.FRAGMENT_SHADER&&s.data==="gl_FragData"){const f=ue(r,l+1),c=S(r,a,"fragData");ge(r,c,"vec4",f,"mediump"),s.data=c}else t===p.FRAGMENT_SHADER&&s.data==="gl_FragDepthEXT"&&(i||(i=S(r,a,"gl_FragDepth")),s.data=i);break;case"ident":if(J.includes(s.data)){if(t===p.VERTEX_SHADER&&me(r,l))throw new Error("attribute in vertex shader uses a name that is a reserved word in glsl 300 es");s.data in n||(n[s.data]=S(r,a,s.data)),s.data=n[s.data]}}}for(let l=r.length-1;l>=0;--l){const s=r[l];if(s.type==="preprocessor"){const f=s.data.match(/#extension\s+(.*):/);if(f?.[1]&&E.has(f[1].trim())){const d=r[l+1];r.splice(l,d&&d.type==="whitespace"?2:1)}const c=s.data.match(/#ifdef\s+(.*)/);c?.[1]&&E.has(c[1].trim())&&(s.data="#if 1");const h=s.data.match(/#ifndef\s+(.*)/);h?.[1]&&E.has(h[1].trim())&&(s.data="#if 0")}}return de(o,ce(r))}function de(o,t){return t}const _e=4294967295;class pe{constructor(t,r,e,i,a=new Map,n=[]){this._context=t,this._locations=i,this._uniformBlockBindings=a,this._transformFeedbackVaryings=n,this._refCount=1,this._compiled=!1,this._linesOfCode=0,this._nameToUniformLocation=new Map,this._nameToUniform1=new Map,this._nameToUniform1v=new Map,this._nameToUniform2=new Map,this._nameToUniform3=new Map,this._nameToUniform4=new Map,this._nameToUniformMatrix3=new Map,this._nameToUniformMatrix4=new Map,t||console.error("RenderingContext isn't initialized!"),r.length===0&&console.error("Shaders source should not be empty!"),r=O(r,p.VERTEX_SHADER),e=O(e,p.FRAGMENT_SHADER),this._vShader=B(this._context,p.VERTEX_SHADER,r),this._fShader=B(this._context,p.FRAGMENT_SHADER,e),ve.enabled&&(this._linesOfCode=r.match(/\n/g).length+e.match(/\n/g).length+2,this._context.instanceCounter.increment(T.LinesOfCode,this._vShader,this._linesOfCode)),this._vShader&&this._fShader||console.error("Error loading shaders!"),this._context.instanceCounter.increment(T.Shader,this),P()&&(this.vertexShader=r,this.fragmentShader=e),this.usedMemory=r.length+e.length;const l=this._context.gl,s=l.createProgram();l.attachShader(s,this._vShader),l.attachShader(s,this._fShader),this._locations.forEach((f,c)=>l.bindAttribLocation(s,f,c)),this._transformFeedbackVaryings?.length&&l.transformFeedbackVaryings(s,this._transformFeedbackVaryings,l.SEPARATE_ATTRIBS),l.linkProgram(s),P()&&!l.getProgramParameter(s,l.LINK_STATUS)&&console.error(`Could not link shader
validated: ${l.getProgramParameter(s,l.VALIDATE_STATUS)}, gl error ${l.getError()}, vertex: ${l.getShaderParameter(this._vShader,l.COMPILE_STATUS)}, fragment: ${l.getShaderParameter(this._fShader,l.COMPILE_STATUS)}, info log: ${l.getProgramInfoLog(s)}, vertex source: ${this.vertexShader}, fragment source: ${this.fragmentShader}`);for(const[f,c]of this._uniformBlockBindings){const h=l.getUniformBlockIndex(s,f);h<_e&&l.uniformBlockBinding(s,h,c)}this._glName=s,this._context.instanceCounter.increment(T.Program,this)}get glName(){return this._glName}get hasGLName(){return this._glName!=null}get hasTransformFeedbackVaryings(){return!!this._transformFeedbackVaryings?.length}get compiled(){if(this._compiled)return!0;const t=this._context.gl.getExtension("KHR_parallel_shader_compile");return t==null||this.glName==null?(this._compiled=!0,!0):(this._compiled=!!this._context.gl.getProgramParameter(this.glName,t.COMPLETION_STATUS_KHR),this._compiled)}dispose(){if(--this._refCount>0)return;const t=this._context.gl,r=this._context.instanceCounter;this._nameToUniformLocation.forEach(e=>e&&r.decrement(T.Uniform,e)),this._nameToUniformLocation.clear(),this._vShader&&(this._linesOfCode>0&&(r.decrement(T.LinesOfCode,this._vShader,this._linesOfCode),this._linesOfCode=0),t.deleteShader(this._vShader),this._vShader=null,r.decrement(T.Shader,this)),this._fShader&&(t.deleteShader(this._fShader),this._fShader=null),this._glName&&(t.deleteProgram(this._glName),this._glName=null,r.decrement(T.Program,this))}ref(){++this._refCount}_getUniformLocation(t){const r=this._nameToUniformLocation.get(t);if(r!==void 0)return r;if(this.glName){const e=this._context.gl.getUniformLocation(this.glName,t);return this._nameToUniformLocation.set(t,e),e&&this._context.instanceCounter.increment(T.Uniform,e),e}return null}hasUniform(t){return this._getUniformLocation(t)!=null}setUniform1i(t,r){const e=this._nameToUniform1.get(t);e!==void 0&&r===e||(this._context.gl.uniform1i(this._getUniformLocation(t),r),this._nameToUniform1.set(t,r))}setUniform1iv(t,r){x(this._nameToUniform1v,t,r)&&this._context.gl.uniform1iv(this._getUniformLocation(t),r)}setUniform2iv(t,r){x(this._nameToUniform2,t,r)&&this._context.gl.uniform2iv(this._getUniformLocation(t),r)}setUniform3iv(t,r){x(this._nameToUniform3,t,r)&&this._context.gl.uniform3iv(this._getUniformLocation(t),r)}setUniform4iv(t,r){x(this._nameToUniform4,t,r)&&this._context.gl.uniform4iv(this._getUniformLocation(t),r)}setUniform1f(t,r){const e=this._nameToUniform1.get(t);e!==void 0&&r===e||(this._context.gl.uniform1f(this._getUniformLocation(t),r),this._nameToUniform1.set(t,r))}setUniform1fv(t,r){x(this._nameToUniform1v,t,r)&&this._context.gl.uniform1fv(this._getUniformLocation(t),r)}setUniform2f(t,r,e){const i=this._nameToUniform2.get(t);i===void 0?(this._context.gl.uniform2f(this._getUniformLocation(t),r,e),this._nameToUniform2.set(t,[r,e])):r===i[0]&&e===i[1]||(this._context.gl.uniform2f(this._getUniformLocation(t),r,e),i[0]=r,i[1]=e)}setUniform2fv(t,r){x(this._nameToUniform2,t,r)&&this._context.gl.uniform2fv(this._getUniformLocation(t),r)}setUniform3f(t,r,e,i){const a=this._nameToUniform3.get(t);a===void 0?(this._context.gl.uniform3f(this._getUniformLocation(t),r,e,i),this._nameToUniform3.set(t,[r,e,i])):r===a[0]&&e===a[1]&&i===a[2]||(this._context.gl.uniform3f(this._getUniformLocation(t),r,e,i),a[0]=r,a[1]=e,a[2]=i)}setUniform3fv(t,r){const e=this._getUniformLocation(t);e!=null&&x(this._nameToUniform3,t,r)&&this._context.gl.uniform3fv(e,r)}setUniform4f(t,r,e,i,a){const n=this._nameToUniform4.get(t);n===void 0?(this._context.gl.uniform4f(this._getUniformLocation(t),r,e,i,a),this._nameToUniform4.set(t,[r,e,i,a])):n!==void 0&&r===n[0]&&e===n[1]&&i===n[2]&&a===n[3]||(this._context.gl.uniform4f(this._getUniformLocation(t),r,e,i,a),n[0]=r,n[1]=e,n[2]=i,n[3]=a)}setUniform4fv(t,r){const e=this._getUniformLocation(t);e!=null&&x(this._nameToUniform4,t,r)&&this._context.gl.uniform4fv(e,r)}setUniformMatrix3fv(t,r,e=!1){const i=this._getUniformLocation(t);i!=null&&x(this._nameToUniformMatrix3,t,r)&&this._context.gl.uniformMatrix3fv(i,e,r)}setUniformMatrix4fv(t,r,e=!1){const i=this._getUniformLocation(t);i!=null&&x(this._nameToUniformMatrix4,t,r)&&this._context.gl.uniformMatrix4fv(i,e,r)}stop(){}}function B(o,t,r){const e=o.gl,i=e.createShader(t);return e.shaderSource(i,r),e.compileShader(i),P()&&!e.getShaderParameter(i,e.COMPILE_STATUS)&&(console.error("Compile error in ".concat(t===p.VERTEX_SHADER?"vertex":"fragment"," shader")),console.error(e.getShaderInfoLog(i)),console.error(xe(r))),i}function xe(o){let t=2;return o.replaceAll(`
`,()=>`
`+Te(t++)+":")}function Te(o){return o>=1e3?o.toString():("  "+o).slice(-3)}function x(o,t,r){const e=o.get(t);if(!e)return o.set(t,Array.from(r)),!0;const i=r.length;if(e.length!==i)return o.set(t,Array.from(r)),!0;for(let a=0;a<i;++a){const n=r[a];if(e[a]!==n){for(e[a]=n;a<i;++a)e[a]=r[a];return!0}}return!1}const ve={enabled:!1};function De(o,t,r=""){return new pe(o,r+t.shaders.vertexShader,r+t.shaders.fragmentShader,t.attributes)}export{De as a,Ue as e,pe as r};
