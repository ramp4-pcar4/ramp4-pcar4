import{ah as T,v as h,x as d,aj as S,B as z,z as G,bk as F,O as v,J as N,D as j,al as P,ak as q,av as x}from"./main-D6UWMbWJ.js";import{y as J}from"./Field-BRKBBmM6.js";var R;const w=new T({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh","":null});let c=R=class extends j{constructor(n){super(n),this.displayFieldName=null,this.exceededTransferLimit=!1,this.features=[],this.fields=null,this.geometryType=null,this.hasM=!1,this.hasZ=!1,this.queryGeometry=null,this.spatialReference=null}readFeatures(n,l){return this.readFeaturesWithClass(n,l,S)}writeGeometryType(n,l,o,e){if(n)return void w.write(n,l,o,e);const{features:s}=this;if(s){for(const r of s)if(r?.geometry!=null)return void w.write(r.geometry.type,l,o,e)}}readQueryGeometry(n,l){if(!n)return null;const o=!!n.spatialReference,e=P(n);return e&&!o&&l.spatialReference&&(e.spatialReference=v.fromJSON(l.spatialReference)),e}writeSpatialReference(n,l){if(n)return void(l.spatialReference=n.toJSON());const{features:o}=this;if(o){for(const e of o)if(e&&e.geometry!=null&&e.geometry.spatialReference)return void(l.spatialReference=e.geometry.spatialReference.toJSON())}}clone(){return new R(this.cloneProperties())}cloneProperties(){return q({displayFieldName:this.displayFieldName,exceededTransferLimit:this.exceededTransferLimit,features:this.features,fields:this.fields,geometryType:this.geometryType,hasM:this.hasM,hasZ:this.hasZ,queryGeometry:this.queryGeometry,spatialReference:this.spatialReference,transform:this.transform})}toJSON(n){const l=this.write();if(l.features&&Array.isArray(n)&&n.length>0)for(let o=0;o<l.features.length;o++){const e=l.features[o];if(e.geometry){const s=n?.[o];e.geometry=s?.toJSON()||e.geometry}}return l}quantize(n){const{scale:[l,o],translate:[e,s]}=n,r=t=>Math.round((t-e)/l),a=t=>Math.round((s-t)/o),f=this.features,m=this._getQuantizationFunction(this.geometryType,r,a);for(let t=0,y=f.length;t<y;t++)m?.(f[t].geometry)||(f.splice(t,1),t--,y--);return this.transform=n,this}unquantize(){const{geometryType:n,features:l,transform:o}=this;if(!o)return this;const{translate:[e,s],scale:[r,a]}=o,f=p=>p*r+e,m=p=>s-p*a;let t=null,y=null;if(this.hasZ&&o?.scale?.[2]!=null){const{translate:[,,p],scale:[,,g]}=o;t=u=>u*g+p}if(this.hasM&&o?.scale?.[3]!=null){const{translate:[,,,p],scale:[,,,g]}=o;y=u=>u==null?u:u*g+p}const i=this._getHydrationFunction(n,f,m,t,y);for(const{geometry:p}of l)p!=null&&i&&i(p);return this.transform=null,this}readFeaturesWithClass(n,l,o){const e=v.fromJSON(l.spatialReference),s=[];for(let r=0;r<n.length;r++){const a=n[r],f=o.fromJSON(a),m=a.geometry?.spatialReference;f.geometry==null||m||(f.geometry.spatialReference=e);const t=a.aggregateGeometries,y=f.aggregateGeometries;if(t&&y!=null)for(const i in y){const p=y[i],g=t[i],u=g?.spatialReference;p==null||u||(p.spatialReference=e)}s.push(f)}return s}_quantizePoints(n,l,o){let e,s;const r=[];for(let a=0,f=n.length;a<f;a++){const m=n[a];if(a>0){const t=l(m[0]),y=o(m[1]);t===e&&y===s||(r.push([t-e,y-s]),e=t,s=y)}else e=l(m[0]),s=o(m[1]),r.push([e,s])}return r.length>0?r:null}_getQuantizationFunction(n,l,o){return n==="point"?e=>(e.x=l(e.x),e.y=o(e.y),e):n==="polyline"||n==="polygon"?e=>{const s=x(e)?e.rings:e.paths,r=[];for(let a=0,f=s.length;a<f;a++){const m=s[a],t=this._quantizePoints(m,l,o);t&&r.push(t)}return r.length>0?(x(e)?e.rings=r:e.paths=r,e):null}:n==="multipoint"?e=>{const s=this._quantizePoints(e.points,l,o);return s&&s.length>0?(e.points=s,e):null}:n==="extent"?e=>e:null}_getHydrationFunction(n,l,o,e,s){return n==="point"?r=>{r.x=l(r.x),r.y=o(r.y),e&&(r.z=e(r.z))}:n==="polyline"||n==="polygon"?r=>{const a=x(r)?r.rings:r.paths;let f,m;for(let t=0,y=a.length;t<y;t++){const i=a[t];for(let p=0,g=i.length;p<g;p++){const u=i[p];p>0?(f+=u[0],m+=u[1]):(f=u[0],m=u[1]),u[0]=l(f),u[1]=o(m)}}if(e&&s)for(let t=0,y=a.length;t<y;t++){const i=a[t];for(let p=0,g=i.length;p<g;p++){const u=i[p];u[2]=e(u[2]),u[3]=s(u[3])}}else if(e)for(let t=0,y=a.length;t<y;t++){const i=a[t];for(let p=0,g=i.length;p<g;p++){const u=i[p];u[2]=e(u[2])}}else if(s)for(let t=0,y=a.length;t<y;t++){const i=a[t];for(let p=0,g=i.length;p<g;p++){const u=i[p];u[2]=s(u[2])}}}:n==="extent"?r=>{r.xmin=l(r.xmin),r.ymin=o(r.ymin),r.xmax=l(r.xmax),r.ymax=o(r.ymax),e&&r.zmax!=null&&r.zmin!=null&&(r.zmax=e(r.zmax),r.zmin=e(r.zmin)),s&&r.mmax!=null&&r.mmin!=null&&(r.mmax=s(r.mmax),r.mmin=s(r.mmin))}:n==="multipoint"?r=>{const a=r.points;let f,m;for(let t=0,y=a.length;t<y;t++){const i=a[t];t>0?(f+=i[0],m+=i[1]):(f=i[0],m=i[1]),i[0]=l(f),i[1]=o(m)}if(e&&s)for(let t=0,y=a.length;t<y;t++){const i=a[t];i[2]=e(i[2]),i[3]=s(i[3])}else if(e)for(let t=0,y=a.length;t<y;t++){const i=a[t];i[2]=e(i[2])}else if(s)for(let t=0,y=a.length;t<y;t++){const i=a[t];i[2]=s(i[2])}}:null}};h([d({type:String,json:{write:!0}})],c.prototype,"displayFieldName",void 0),h([d({type:Boolean,json:{write:{overridePolicy:n=>({enabled:n})}}})],c.prototype,"exceededTransferLimit",void 0),h([d({type:[S],json:{write:!0}})],c.prototype,"features",void 0),h([z("features")],c.prototype,"readFeatures",null),h([d({type:[J],json:{write:!0}})],c.prototype,"fields",void 0),h([d({type:["point","multipoint","polyline","polygon","extent","mesh"],json:{read:{reader:w.read}}})],c.prototype,"geometryType",void 0),h([G("geometryType")],c.prototype,"writeGeometryType",null),h([d({type:Boolean,json:{write:{overridePolicy:n=>({enabled:n})}}})],c.prototype,"hasM",void 0),h([d({type:Boolean,json:{write:{overridePolicy:n=>({enabled:n})}}})],c.prototype,"hasZ",void 0),h([d({types:F,json:{write:!0}})],c.prototype,"queryGeometry",void 0),h([z("queryGeometry")],c.prototype,"readQueryGeometry",null),h([d({type:v,json:{write:!0}})],c.prototype,"spatialReference",void 0),h([G("spatialReference")],c.prototype,"writeSpatialReference",null),h([d({json:{write:!0}})],c.prototype,"transform",void 0),c=R=h([N("esri.rest.support.FeatureSet")],c),c.prototype.toJSON.isDefaultToJSON=!0;const _=c;export{_ as d};
