import{s as d,bs as Z,bE as x,aL as ee,Q as se,hH as D,di as F,hI as I,bm as w,b9 as f,U as l,bi as te,O as oe,eH as re,be as ne,eG as ae,n as ie}from"./main-D6UWMbWJ.js";import{r as ce}from"./uuid-Cl5lrJ4c.js";import{m as le,b as ue,a as k,i as U,N as pe}from"./External-BppZvwwX.js";import{F as de,m as me,s as fe,u as ge,k as he}from"./FeatureType-C2TbZEgA.js";import{N as we}from"./MeshTransform-CchhgBFB.js";import{i as ye,n as be}from"./meshFeatureAttributes-BfzDFHuo.js";const y="upload-assets",b=()=>new Error;class $e extends d{constructor(){super(`${y}:unsupported`,"Layer does not support asset uploads.",b())}}let Pe=class extends d{constructor(){super(`${y}:no-glb-support`,"Layer does not support glb.",b())}},Te=class extends d{constructor(){super(`${y}:no-supported-source`,"No supported external source found",b())}};class ve extends d{constructor(){super(`${y}:not-base-64`,"Expected gltf data in base64 format after conversion.",b())}}let Ae=class extends d{constructor(){super(`${y}:unable-to-prepare-options`,"Unable to prepare uploadAsset request options.",b())}},xe=class extends d{constructor(e,t){super(`${y}:bad-response`,`Bad response. Uploaded ${e} items and received ${t} results.`,b())}};class Fe extends d{constructor(e,t){super(`${y}-layer:upload-failed`,`Failed to upload mesh file ${e}. Error code: ${t?.code??"-1"}. Error message: ${t?.messages??"unknown"}`,b())}}let O=class extends d{constructor(e){super(`${y}-layer:unsupported-format`,`The service allowed us to upload an asset of FormatID ${e}, but it does not list it in its supported formats.`,b())}},Me=class extends d{constructor(){super(`${y}:convert3D-failed`,"convert3D failed.")}},$s=class extends d{constructor(){super("invalid-input:no-model","No supported model found")}},Ts=class extends d{constructor(){super("invalid-input:multiple-models","Multiple supported models found")}};function Ne(s){const e=1/Z(s,1);return e!==1?new we({scale:[e,e,e]}):void 0}const M={upload:{createFromFiles:.8,loadMesh:.2},uploadAssetBlobs:{prepareAssetItems:.9,uploadAssetItems:.1},uploadConvertibleSource:{uploadEditSource:.5,serviceAssetsToGlb:.5},uploadLocalMesh:{meshToAssetBlob:.5,uploadAssetBlobs:.5}};function $(s,e=o=>{},t){return new je(s,e,t)}let je=class{constructor(e,t=r=>{},o){if(this.onProgress=t,this.taskName=o,this._progressMap=new Map,this._startTime=void 0,this._timingsMap=new Map,typeof e=="number"){this._weights={};for(let r=0;r<e;r++){const n=r,a=1/e;this._weights[n]=a,this._progressMap.set(n,0)}}else this._weights=e;this.emitProgress()}emitProgress(){let e=0;for(const[t,o]of this._progressMap.entries())e+=o*this._weights[t];if(e===1&&x("enable-feature:esri-3dofl-upload-timings")){const t=Math.round(performance.now()-(this._startTime??0))/1e3;console.log(`${this.taskName} done in ${t} sec`);for(const[o,r]of this._timingsMap){const n=Math.round(r.end-r.start)/1e3,a=Math.round(n/t*100);console.log(this.taskName??"Task",{stepKey:o,stepTime:n,relativeTime:a})}}this.onProgress(e)}setProgress(e,t){if(this._progressMap.set(e,t),x("enable-feature:esri-3dofl-upload-timings")){const o=performance.now();this._startTime??=o;const r=ee(this._timingsMap,e,()=>({start:o,end:0}));t===1&&(r.end=o)}this.emitProgress()}simulate(e,t){return R(o=>this.setProgress(e,o),t)}makeOnProgress(e){return t=>this.setProgress(e,t)}};function R(s=t=>{},e=ke){const t=performance.now();s(0);const o=setInterval(()=>{const r=performance.now()-t,n=1-Math.exp(-r/e);s(n)},Ie);return se(()=>{clearInterval(o),s(1)})}function Ee(s,e=Se){return D(I(s*C/e))}function _e(s,e=De){return D(I(s*C/e))}const Se=10,De=10,C=8e-6,Ie=F(50),ke=F(1e3),q=1e6,S=20*q,Ue=2e9,Oe=3;async function Re({data:s,name:e,description:t},o,r){let n=null;try{const a=w(o,"uploads"),i=w(a,"info"),{data:u}=await f(i,{query:{f:"json"},responseType:"json"});l(r);const g=te(o),h=u.maxUploadFileSize*q,m=g?Ue:h,c=g?Math.min(S,h):S;if(s.size>m)throw new Error("Data too large");const G=w(a,"register"),{data:N}=await f(G,{query:{f:"json",itemName:Ce(e),description:t},responseType:"json",method:"post"});if(l(r),!N.success)throw new Error("Registration failed");const{itemID:J}=N.item;n=w(a,J);const Q=w(n,"uploadPart"),j=Math.ceil(s.size/c),P=new Array;for(let p=0;p<j;++p)P.push(s.slice(p*c,Math.min((p+1)*c,s.size)));const T=P.slice().reverse(),E=new Array,K=$(j,r?.onProgress,"uploadItem"),V=async()=>{for(;T.length!==0;){const p=P.length-T.length,v=T.pop(),A=new FormData,X=K.simulate(p,Ee(v.size));try{A.append("f","json"),A.append("file",v),A.append("partId",`${p}`);const{data:Y}=await f(Q,{timeout:0,body:A,responseType:"json",method:"post"});if(l(r),!Y.success)throw new Error("Part upload failed")}finally{X.remove()}}};for(let p=0;p<Oe&&T.length!==0;++p)E.push(V());await Promise.all(E);const W=w(n,"commit"),{data:_}=await f(W,{query:{f:"json",parts:P.map((p,v)=>v).join(",")},responseType:"json",method:"post"});if(l(r),!_.success)throw new Error("Commit failed");return _.item}catch(a){if(n!=null){const i=w(n,"delete");await f(i,{query:{f:"json"},responseType:"json",method:"post"})}throw a}}function Ce(s){return s.replaceAll("/","_").replaceAll("\\","_")}async function qe(s,e,t){const o=s.length;if(!o)return t?.onProgress?.(1),[];const r=$(o,t?.onProgress,"uploadAssets");return Promise.all(s.map((n,a)=>Be(n,e,{...t,onProgress:r.makeOnProgress(a)})))}async function Be(s,{layer:e,ongoingUploads:t},o){const r=t.get(s);if(r)return r;if(!ns(e))throw new $e;if(Le(s,e))return o?.onProgress?.(1),s;const n=ze(s,e,o);t.set(s,n);try{await n}finally{t.delete(s)}return s}function Le(s,e){const{parsedUrl:t}=e;return t!=null&&s.metadata.externalSources.some(o=>le(o,t))}async function ze(s,e,t){const{metadata:o}=s,{displaySource:r}=o,n=B(r?.source,e,{checkForConversionRequired:x("enable-feature:georeferenced-uploads")}),a=n!=null?He(n,e,t):o.externalSources.length>0?Ge(s,e,t):Je(s,e,t),i=await a;return l(t),s.addExternalSources([i]),s}async function He(s,e,t){return{source:await L(s,e,t),original:!0,unitConversionDisabled:!0}}async function Ge(s,e,t){const o=H(e),{externalSources:r}=s.metadata,n=Ke(r,e);if(!n)throw new Te;const a=$(M.uploadConvertibleSource,t?.onProgress,"uploadConvertibleSource"),i=await L(n,e,{onProgress:a.makeOnProgress("uploadEditSource")});s.addExternalSources([{source:i,original:!0}]);const u=n.reduce((h,{asset:m})=>m instanceof File?h+m.size:h,0),g=a.simulate("serviceAssetsToGlb",_e(u));try{const{source:h,transform:m,origin:c}=await ss(i,e,o);return s.transform=m,c&&(s.metadata.georeferenced=!0,t?.useAssetOrigin&&(s.vertexSpace.origin=[c.x,c.y,c.z??0],s.spatialReference=c.spatialReference)),{source:h,unitConversionDisabled:!0}}finally{g.remove()}}async function Je(s,e,t){const o=$(M.uploadLocalMesh,t?.onProgress,"uploadLocalMesh"),r=Qe(s,e,{...t,onProgress:o.makeOnProgress("meshToAssetBlob")});return{source:await z([r],e,{...t,onProgress:o.makeOnProgress("uploadAssetBlobs")}),extent:s.extent.clone(),original:!0}}async function Qe(s,e,t){const o=H(e),r=await s.load(t),n=await r.toBinaryGLTF({origin:r.origin,signal:t?.signal,ignoreLocalTransform:!0,unitConversionDisabled:!0});return l(t),{blob:new Blob([n],{type:"model/gltf-binary"}),assetName:`${ce()}.glb`,assetType:o}}function Ke(s,e){for(const t of s){const o=B(t.source,e);if(o)return o}return null}function B(s,{infoFor3D:e},t={}){if(!s)return null;const{supportedFormats:o,editFormats:r}=e,n=pe(s),a=new Array,i=de(e),u=me(e);let g=!1;for(const h of n){const m=Ve(h,o);if(!m)return null;const{assetType:c}=m;if(t.checkForConversionRequired&&(c===i||c===u))return null;r.includes(c)&&(g=!0),a.push(m)}return g?a:null}function Ve(s,e){const t=ue(s,e);return t?{asset:s,assetType:t}:null}async function L(s,e,t){return z(s.map(o=>We(o,t)),e,t)}async function z(s,e,t){const o=$(M.uploadAssetBlobs,t?.onProgress,"uploadAssetBlobs"),r=await Ye(s,e,{...t,onProgress:o.makeOnProgress("prepareAssetItems")});l(t);const n=r.map(({item:i})=>i),{uploadResults:a}=await Ze(n,e,{...t,onProgress:o.makeOnProgress("uploadAssetItems")});return l(t),s.map((i,u)=>es(r[u],a[u],e))}async function We(s,e){const{asset:t,assetType:o}=s;if(t instanceof File)return{blob:t,assetName:t.name,assetType:o};const r=await t.toBlob(e);return l(e),{blob:r,assetName:t.assetName,assetType:o}}async function Xe(s,e,t){const{blob:o,assetType:r,assetName:n}=s;let a=null;try{const i=await Re({data:o,name:n},e.url,t);l(t),a={assetType:r,assetUploadId:i.itemID}}catch(i){ne(i),as().warnOnce(`Service ${e.url} does not support the REST Uploads API.`)}if(!a){const i=await ae(o);if(l(t),!i.isBase64)throw new ve;a={assetType:r,assetData:i.data}}if(!a)throw new Ae;return{item:a,assetName:n}}function Ye(s,e,t){const o=$(s.length,t?.onProgress,"prepareAssetItems");return Promise.all(s.map(async(r,n)=>{const a=Xe(await r,e,{...t,onProgress:o.makeOnProgress(n)});return l(t),a}))}async function Ze(s,e,t){const o=R(t?.onProgress);try{const r=await f(w(e.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(s)},method:"post",responseType:"json"});if(l(t),r.data.uploadResults.length!==s.length)throw new xe(s.length,r.data.uploadResults.length);return r.data}finally{o.remove()}}function es(s,e,t){const{success:o}=e;if(!o){const{error:g}=e;throw new Fe(s.assetName,g)}const{assetHash:r}=e,{assetName:n,item:{assetType:a}}=s,{infoFor3D:{supportedFormats:i}}=t,u=fe(a,i);if(!u)throw new O(a);return new k(n,u,[new U(`${t.parsedUrl.path}/assets/${r}`,r)])}async function ss(s,e,t){const o=s.map(({assetName:n,parts:a})=>({assetName:n,assetHash:a[0].partHash}));let r;try{const n=w(e.parsedUrl.path,"convert3D"),a=e.capabilities?.operations.supportsAsyncConvert3D;r=(await(a?rs:os)(n,{query:{f:"json",assets:JSON.stringify(o),transportType:"esriTransportTypeUrl",targetFormat:t,async:a},responseType:"json",timeout:0})).data}catch{throw new Me}return ts(e,r)}function ts(s,e){const t={source:e.assets.map(o=>{const r=ge(o.contentType,s.infoFor3D.supportedFormats);if(!r)throw new O(r);return new k(o.assetName,o.contentType,[new U(o.assetURL,o.assetHash)])}),origin:void 0,transform:void 0};if(x("enable-feature:georeferenced-uploads")&&e.transform){if(t.transform=ye(e.transform),e.spatialReference){const o=oe.fromJSON(e.spatialReference);t.origin=be(e.transform,o)}}else t.transform=Ne(s.spatialReference);return t}function os(s,e){return f(s,e)}async function rs(s,e){const t=(await f(s,e)).data.statusUrl;for(;;){const o=(await f(t,{query:{f:"json"},responseType:"json"})).data;switch(o.status){case"Completed":return f(o.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(o.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}await re(is)}}function ns(s){return!!s.infoFor3D&&!!s.url}function H({infoFor3D:s}){const e=he(s);if(!e)throw new Pe;return e}function as(){return ie.getLogger("esri.layers.graphics.sources.support.uploadAssets")}const is=F(1e3),xs=Object.freeze(Object.defineProperty({__proto__:null,uploadAssets:qe},Symbol.toStringTag,{value:"Module"}));export{$s as i,Ts as m,Ne as t,xs as u};
