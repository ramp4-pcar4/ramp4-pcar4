import"./index-B8m1QqH5.js";import"./index-Dsw0xHWV.js";import"./index-BaHSXQSf.js";import"./index-CUpY7mOl.js";import"./index-BpWojg0l.js";import"./index-B2R0-Hjc.js";import{S as m}from"./jsxFactory-HPYy2V_L.js";import{cN as x,cO as g,cU as b,cL as n,cM as s}from"./main-D6UWMbWJ.js";import{a as y,s as v}from"./dom-31sk8mer.js";import{r as f}from"./loadable-gcxx8e1i.js";import{B as w,G}from"./ExpandToggle-5vKMqDSS.js";import{b as k}from"./observers-DFHTnWgF.js";import{s as O}from"./useT9n-BQVknhIP.js";import"./guid-ejniuQmw.js";import"./keyed-Dl-8XVqE.js";import"./ref-DwVaJuBu.js";import"./interactive-C_4tCeN_.js";import"./component-B-AXDmr-.js";import"./floating-ui-qvGEVxmA.js";import"./debounce-DbkufipY.js";import"./openCloseComponent-BkUCaXBK.js";import"./static-DnJyBfOT.js";import"./FloatingArrow-BcvQyJmZ.js";import"./key-CZcQa38B.js";import"./array-BbE1dLa5.js";import"./intl-D8pxRaLS.js";import"./uuid-Cl5lrJ4c.js";import"./preload-helper-ExcqyqRp.js";/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
v3.0.3 */const r={actionGroupEnd:"action-group--end",container:"container"},$={expandTooltip:"expand-tooltip"},L=x`:host{box-sizing:border-box;background-color:var(--calcite-color-foreground-1);color:var(--calcite-color-text-2);font-size:var(--calcite-font-size--1)}:host *{box-sizing:border-box}:host{display:block}@keyframes in{0%{opacity:0}to{opacity:1}}:host{animation:in var(--calcite-internal-animation-timing-slow) ease-in-out;border-radius:var(--calcite-action-pad-corner-radius, .125rem);background:transparent}:host([expanded][layout=vertical]) .container{max-inline-size:var(--calcite-action-pad-expanded-max-width, auto)}:host([layout=vertical]) ::slotted(calcite-action-group:not(:last-of-type)){border-block-end-width:1px}.container{display:inline-flex;flex-direction:column;overflow:hidden;--tw-shadow: 0 6px 20px -4px rgba(0, 0, 0, .1), 0 4px 12px -2px rgba(0, 0, 0, .08);--tw-shadow-colored: 0 6px 20px -4px var(--tw-shadow-color), 0 4px 12px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000),var(--tw-ring-shadow, 0 0 #0000),var(--tw-shadow);gap:var(--calcite-action-pad-items-space, 0);border-radius:calc(var(--calcite-action-pad-corner-radius, .125rem) * 2);background-color:var(--calcite-action-background-color, var(--calcite-color-foreground-1))}.action-group--bottom{flex-grow:1;justify-content:flex-end;padding-block-end:0px}:host([layout=horizontal]) .container{flex-direction:row}:host([layout=horizontal]) .container .action-group--bottom{padding:0}:host([layout=horizontal]) .container ::slotted(calcite-action-group:not(:last-of-type)){border-inline-end-width:1px}:host([hidden]){display:none}[hidden]{display:none}`;class T extends g{constructor(){super(),this.mutationObserver=k("mutation",()=>this.updateGroups()),this.toggleExpand=()=>{this.expanded=!this.expanded,this.calciteActionPadToggle.emit()},this.expandDisabled=!1,this.expanded=!1,this.layout="vertical",this.messages=O(),this.overlayPositioning="absolute",this.scale="m",this.calciteActionPadToggle=b({cancelable:!1}),this.listen("calciteActionMenuOpen",this.actionMenuOpenHandler)}static{this.properties={expandTooltip:16,actionsEndGroupLabel:1,expandDisabled:7,expanded:7,layout:3,messageOverrides:0,overlayPositioning:3,position:3,scale:3}}static{this.shadowRootOptions={mode:"open",delegatesFocus:!0}}static{this.styles=L}async setFocus(){await f(this),y(this.el)}connectedCallback(){super.connectedCallback(),this.mutationObserver?.observe(this.el,{childList:!0,subtree:!0})}async load(){}willUpdate(t){t.has("expanded")&&this.hasUpdated&&w({el:this.el,expanded:this.expanded}),t.has("layout")&&(this.hasUpdated||this.layout!=="vertical")&&this.updateGroups()}loaded(){}disconnectedCallback(){super.disconnectedCallback(),this.mutationObserver?.disconnect()}actionMenuOpenHandler(t){if(t.target.menuOpen){const a=t.composedPath();this.actionGroups?.forEach(o=>{a.includes(o)||(o.menuOpen=!1)})}}updateGroups(){const t=Array.from(this.el.querySelectorAll("calcite-action-group"));this.actionGroups=t,this.setGroupLayout(t)}setGroupLayout(t){t.forEach(a=>a.layout=this.layout)}handleDefaultSlotChange(){this.updateGroups()}handleTooltipSlotChange(t){const a=v(t).filter(o=>o?.matches("calcite-tooltip"));this.expandTooltip=a[0]}renderBottomActionGroup(){const{expanded:t,expandDisabled:a,messages:o,el:l,position:c,toggleExpand:p,scale:e,layout:d,actionsEndGroupLabel:h,overlayPositioning:u}=this,i=a?null:G({collapseLabel:o.collapseLabel,collapseText:o.collapse,el:l,expandLabel:o.expandLabel,expandText:o.expand,expanded:t,position:c,scale:e,toggle:p,tooltip:this.expandTooltip});return i?n`<calcite-action-group class=${s(r.actionGroupEnd)} .label=${h} .layout=${d} .overlayPositioning=${u} .scale=${e}><slot name=${$.expandTooltip} @slotchange=${this.handleTooltipSlotChange}></slot>${i}</calcite-action-group>`:null}render(){return n`<div class=${s(r.container)}><slot @slotchange=${this.handleDefaultSlotChange}></slot>${this.renderBottomActionGroup()}</div>`}}m("calcite-action-pad",T);export{T as ActionPad};
