import{v as W,x as J,a_ as Vt,J as Dt,D as Rt,s as Lt,ak as Et,n as Z,ah as jt,bE as nt,U as Nt,g$ as vt,bS as Gt,ar as qt,aX as Ot}from"./main-D6UWMbWJ.js";import{s as pt}from"./pixelRangeUtils-Esmjpmyq.js";let Ut=class{constructor(e=null,n=null,r=null){this.minValue=e,this.maxValue=n,this.noDataValue=r}};var K;let G=K=class extends Rt{static createEmptyBand(t,e){return new(K.getPixelArrayConstructor(t))(e)}static combineBandMasks(t){if(t.length<2)return t[0];const e=t[0].length,n=new Uint8Array(e).fill(255);for(let r=0;r<t.length;r++){const a=t[r];for(let i=0;i<e;i++)a[i]||(n[i]=0)}return n}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){return this.pixels?.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new Lt("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new Ut)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map(n=>Wt(n,this.mask));const t=this.mask;let e=0;if(t!=null)for(let n=0;n<t.length;n++)t[n]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||t==="f64"||t==="f32"||!this.pixels)return;const[e,n]=pt(t),r=this.pixels,a=this.width*this.height,i=r.length;let l,c,h;const o=[];for(let s=0;s<i;s++){h=K.createEmptyBand(t,a),l=r[s];for(let f=0;f<a;f++)c=l[f],h[f]=c>n?n:c<e?e:c;o.push(h)}this.pixels=o,this.pixelType=t}extractBands(t){const{pixels:e,statistics:n}=this;if(t==null||t.length===0||!e||e.length===0)return this;const r=e.length,a=t.some(f=>f>=e.length),i=r===t.length&&!t.some((f,p)=>f!==p);if(a||i)return this;const l=this.bandMasks?.length===r?t.map(f=>this.bandMasks[f]):void 0;let{mask:c,validPixelCount:h}=this;const{width:o,height:s}=this;return l?.length&&(c=K.combineBandMasks(l),h=c.filter(f=>!!f).length),new K({pixelType:this.pixelType,width:o,height:s,mask:c,bandMasks:l,validPixelCount:h,maskIsAlpha:this.maskIsAlpha,pixels:t.map(f=>e[f]),statistics:n&&t.map(f=>n[f])})}clone(){const t=new K({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;this.mask!=null&&(t.mask=new Uint8Array(this.mask)),this.bandMasks&&(t.bandMasks=this.bandMasks.map(r=>new Uint8Array(r)));const n=K.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const r=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=r?this.pixels[e].slice():new n(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=Et(this.statistics[e]);return t.premultiplyAlpha=this.premultiplyAlpha,t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:n,premultiplyAlpha:r,pixels:a}=this;if(!t||!a?.length)return void Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let i,l,c,h;i=l=c=a[0],a.length>=3?(l=a[1],c=a[2]):a.length===2&&(l=a[1]);const o=new Uint32Array(t),s=this.width*this.height;if(i.length===s)if(e!=null&&e.length===s)if(n)for(h=0;h<s;h++){const f=e[h];if(f){const p=f/255;o[h]=r?f<<24|c[h]*p<<16|l[h]*p<<8|i[h]*p:f<<24|c[h]<<16|l[h]<<8|i[h]}}else for(h=0;h<s;h++)e[h]&&(o[h]=255<<24|c[h]<<16|l[h]<<8|i[h]);else for(h=0;h<s;h++)o[h]=255<<24|c[h]<<16|l[h]<<8|i[h];else Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:n,statistics:r}=this;if(!t||!e?.length)return void Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const a=this.pixelType;let i=1,l=0,c=1;if(r&&r.length>0){for(const m of r)if(m.minValue!=null&&(l=Math.min(l,m.minValue)),m.maxValue!=null&&m.minValue!=null){const g=m.maxValue-m.minValue;c=Math.max(c,g)}i=255/c}else{let m=255;a==="s8"?(l=-128,m=127):a==="u16"?m=65535:a==="s16"?(l=-32768,m=32767):a==="u32"?m=4294967295:a==="s32"?(l=-2147483648,m=2147483647):a==="f32"?(l=-34e38,m=34e38):a==="f64"&&(l=-Number.MAX_VALUE,m=Number.MAX_VALUE),i=255/(m-l)}const h=new Uint32Array(t),o=this.width*this.height;let s,f,p,u,d;if(s=f=p=e[0],s.length!==o)return Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(f=e[1],e.length>=3&&(p=e[2]),n!=null&&n.length===o)for(u=0;u<o;u++)n[u]&&(h[u]=255<<24|(p[u]-l)*i<<16|(f[u]-l)*i<<8|(s[u]-l)*i);else for(u=0;u<o;u++)h[u]=255<<24|(p[u]-l)*i<<16|(f[u]-l)*i<<8|(s[u]-l)*i;else if(n!=null&&n.length===o)for(u=0;u<o;u++)d=(s[u]-l)*i,n[u]&&(h[u]=255<<24|d<<16|d<<8|d);else for(u=0;u<o;u++)d=(s[u]-l)*i,h[u]=255<<24|d<<16|d<<8|d}_fillFrom32Bit(t){const{pixels:e,mask:n}=this;if(!t||!e?.length)return Z.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let r,a,i,l;r=a=i=e[0],e.length>=3?(a=e[1],i=e[2]):e.length===2&&(a=e[1]);const c=this.width*this.height;if(r.length!==c)return Z.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let h=0;if(n!=null&&n.length===c)for(l=0;l<c;l++)t[h++]=r[l],t[h++]=a[l],t[h++]=i[l],t[h++]=1&n[l];else for(l=0;l<c;l++)t[h++]=r[l],t[h++]=a[l],t[h++]=i[l],t[h++]=1}};function Wt(t,e){let n=1/0,r=-1/0;const a=t.length;let i,l=0;if(e!=null)for(i=0;i<a;i++)e[i]&&(l=t[i],n=l<n?l:n,r=l>r?l:r);else for(i=0;i<a;i++)l=t[i],n=l<n?l:n,r=l>r?l:r;return new Ut(n,r)}W([J({json:{write:!0}})],G.prototype,"width",void 0),W([J({json:{write:!0}})],G.prototype,"height",void 0),W([J({json:{write:!0}})],G.prototype,"pixelType",void 0),W([Vt("pixelType")],G.prototype,"castPixelType",null),W([J({json:{write:!0}})],G.prototype,"validPixelCount",void 0),W([J({json:{write:!0}})],G.prototype,"mask",void 0),W([J({json:{write:!0}})],G.prototype,"maskIsAlpha",void 0),W([J({json:{write:!0}})],G.prototype,"pixels",void 0),W([J()],G.prototype,"premultiplyAlpha",void 0),W([J({json:{write:!0}})],G.prototype,"statistics",void 0),W([J({json:{write:!0}})],G.prototype,"depthCount",void 0),W([J({json:{write:!0}})],G.prototype,"noDataValues",void 0),W([J({json:{write:!0}})],G.prototype,"bandMasks",void 0),G=K=W([Dt("esri.layers.support.PixelBlock")],G);const V=G;var gt,xt;(function(t){t[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll"})(gt||(gt={})),function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(xt||(xt={}));const ge=6;function R(t){return t!=null&&t.declaredClass==="esri.layers.support.PixelBlock"&&t.pixels&&t.pixels.length>0}function xe(t){if(!t?.length||t.some(s=>!R(s)))return null;if(t.length===1)return t[0]?.clone()??null;const e=t,{width:n,height:r,pixelType:a}=e[0];if(e.some(s=>s.width!==n||s.height!==r))return null;const i=e.map(({mask:s})=>s).filter(s=>s!=null);let l=null;i.length&&(l=new Uint8Array(n*r),l.set(i[0]),i.length>1&&Tt(i.slice(1),l));const c=[];e.forEach(({pixels:s})=>c.push(...s));const h=e.map(({statistics:s})=>s).filter(s=>s?.length),o=[];return h.forEach(s=>o.push(...s)),new V({pixelType:a,width:n,height:r,mask:l,pixels:c,statistics:o.length?o:null})}function we(t){if(!t)return;const e=t.colormap;if(!e||e.length===0)return;const n=e.sort((f,p)=>f[0]-p[0]);let r=0;n[0][0]<0&&(r=n[0][0]);const a=Math.max(256,n[n.length-1][0]-r+1),i=new Uint8Array(4*a),l=[];let c,h=0,o=0;const s=n[0].length===5;if(a>65536)return n.forEach(f=>{l[f[0]-r]=s?f.slice(1):f.slice(1).concat([255])}),{indexed2DColormap:l,offset:r,alphaSpecified:s};if(t.fillUnspecified)for(c=n[o],h=c[0]-r;h<a;h++)i[4*h]=c[1],i[4*h+1]=c[2],i[4*h+2]=c[3],i[4*h+3]=s?c[4]:255,h===c[0]-r&&(c=o===n.length-1?c:n[++o]);else for(h=0;h<n.length;h++)c=n[h],o=4*(c[0]-r),i[o]=c[1],i[o+1]=c[2],i[o+2]=c[3],i[o+3]=s?c[4]:255;return{indexedColormap:i,offset:r,alphaSpecified:s}}function ye(t,e){if(!R(t)||!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),r=n.pixels;let a=n.mask;const i=n.width*n.height;if(r.length!==1)return t;const{indexedColormap:l,indexed2DColormap:c,offset:h,alphaSpecified:o}=e;let s=0;const f=r[0],p=new Uint8Array(f.length),u=new Uint8Array(f.length),d=new Uint8Array(f.length);let m,g=0;if(l){const y=l.length-1;if(a!=null)for(s=0;s<i;s++)a[s]&&(g=4*(f[s]-h),g<h||g>y?a[s]=0:(p[s]=l[g],u[s]=l[g+1],d[s]=l[g+2],a[s]=l[g+3]));else{for(a=new Uint8Array(i),s=0;s<i;s++)g=4*(f[s]-h),g<h||g>y?a[s]=0:(p[s]=l[g],u[s]=l[g+1],d[s]=l[g+2],a[s]=l[g+3]);n.mask=a}}else if(c)if(a!=null)for(s=0;s<i;s++)a[s]&&(m=c[f[s]],p[s]=m[0],u[s]=m[1],d[s]=m[2],a[s]=m[3]);else{for(a=new Uint8Array(i),s=0;s<i;s++)m=c[f[s]],p[s]=m[0],u[s]=m[1],d[s]=m[2],a[s]=m[3];n.mask=a}return n.pixels=[p,u,d],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=o,n}function ke(t,e){if(!R(t))return null;const{pixels:n,mask:r}=t,a=n.length;let i=e.lut;const{offset:l}=e;i&&i[0].length===1&&(i=n.map(()=>i));const c=[],h=e.outputPixelType||"u8";for(let s=0;s<a;s++){const f=Pt(n[s],r,i[s],l||0,h);c.push(f)}const o=new V({width:t.width,height:t.height,pixels:c,mask:r,pixelType:h});return o.updateStatistics(),o}function Pt(t,e,n,r,a){const i=t.length,l=V.createEmptyBand(a,i);if(e)for(let c=0;c<i;c++)e[c]&&(l[c]=n[t[c]-r]);else for(let c=0;c<i;c++)l[c]=n[t[c]-r];return l}function Me(t,e){if(!R(t))return null;const n=t.clone(),{pixels:r}=n,a=n.width*n.height,i=e.length,l=Math.floor(i/2),c=e[Math.floor(l)],h=r[0];let o,s,f,p,u,d,m=!1;const g=new Uint8Array(a),y=new Uint8Array(a),M=new Uint8Array(a);let k=n.mask;const A=e[0].mappedColor.length===4;for(k||(k=new Uint8Array(a),k.fill(A?255:1),n.mask=k),u=0;u<a;u++)if(k[u]){for(o=h[u],m=!1,d=l,s=c,f=0,p=i-1;p-f>1;){if(o===s.value){m=!0;break}o>s.value?f=d:p=d,d=Math.floor((f+p)/2),s=e[Math.floor(d)]}m||(o===e[f].value?(s=e[f],m=!0):o===e[p].value?(s=e[p],m=!0):o<e[f].value?(m=!1,s=null):o>e[f].value&&(o<e[p].value?(s=e[f],m=!0):p===i-1?(m=!1,s=null):(s=e[p],m=!0))),m?(g[u]=s.mappedColor[0],y[u]=s.mappedColor[1],M[u]=s.mappedColor[2],k[u]=s.mappedColor[3]):g[u]=y[u]=M[u]=k[u]=0}return n.pixels=[g,y,M],n.mask=k,n.pixelType="u8",n.maskIsAlpha=A,n}function Ae(t,e){if(!R(t))return null;const{width:n,height:r}=t,{inputRanges:a,outputValues:i,outputPixelType:l,noDataRanges:c,allowUnmatched:h,isLastInputRangeInclusive:o}=e,s=t.pixels[0],f=V.createEmptyBand(l,s.length),p=t.mask,u=new Uint8Array(n*r);p?u.set(p):u.fill(255);const d=t.pixelType.startsWith("f")?1e-6:0,m=a.map(A=>A-d);m[0]=a[0],m[m.length-1]=a[a.length-1]+(o?1e-6:0);const g=a.length/2,[y,M]=pt(l);for(let A=0;A<r;A++)for(let x=0;x<n;x++){const w=A*n+x;if(u[w]){const U=s[w];let b=!1;for(let T=g-1;T>=0;T--)if(U===m[2*T]||U>m[2*T]&&U<m[2*T+1]){f[w]=i[T],b=!0;break}b||(h?f[w]=U>M?M:U<y?y:U:u[w]=0)}}const k=c?.length;if(k)for(let A=0;A<r;A++)for(let x=0;x<n;x++){const w=A*n+x;if(!p||p[w]){const U=s[w];for(let b=0;b<k;b+=2)if(U>=c[b]&&U<=c[b+1]){f[w]=0,u[w]=0;break}}}return new V({width:n,height:r,pixelType:l,pixels:[f],mask:u})}function wt(t,e,n,r){const a=n!=null&&n.length>=2?new Set(n):null,i=n?.length===1?n[0]:null,l=!!e?.length;for(let c=0;c<t.length;c++)if(r[c]){const h=t[c];if(l){let o=!1;for(let s=0;s<e.length;s+=2)if(h>=e[s]&&h<=e[s+1]){o=!0;break}o||(r[c]=0)}r[c]&&(h===i||a?.has(h))&&(r[c]=0)}}function yt(t,e){const n=t[0].length;for(let r=0;r<n;r++)if(e[r]){let a=!1;for(let i=0;i<t.length;i++)if(t[i][r]){a=!0;break}a||(e[r]=0)}}function Tt(t,e){const n=t[0].length;for(let r=0;r<n;r++)if(e[r]){let a=!1;for(let i=0;i<t.length;i++)if(t[i][r]===0){a=!0;break}a&&(e[r]=0)}}function be(t,e){if(!R(t))return null;const{width:n,height:r,pixels:a}=t,i=n*r,l=new Uint8Array(i);t.mask?l.set(t.mask):l.fill(255);const c=a.length,{includedRanges:h,noDataValues:o,outputPixelType:s,matchAll:f,lookups:p}=e;if(p){const u=[];for(let d=0;d<c;d++){const m=p[d],g=Pt(a[d],l,m.lut,m.offset||0,"u8");u.push(g)}u.length===1?l.set(u[0]):f?yt(u,l):Tt(u,l)}else if(f){const u=[];for(let d=0;d<c;d++){const m=new Uint8Array(i);m.set(l),wt(a[d],h?.slice(2*d,2*d+2),o?.[d],m),u.push(m)}u.length===1?l.set(u[0]):yt(u,l)}else for(let u=0;u<c;u++)wt(a[u],h?.slice(2*u,2*u+2),o?.[u],l);return new V({width:n,height:r,pixelType:s,pixels:a,mask:l})}function ve(t){const{srcPixelType:e,inputRanges:n,outputValues:r,allowUnmatched:a,noDataRanges:i,isLastInputRangeInclusive:l,outputPixelType:c}=t;if(e!=="u8"&&e!=="s8"&&e!=="u16"&&e!=="s16")return null;const h=e.includes("16")?65536:256,o=e.includes("s")?-h/2:0,s=V.createEmptyBand(c,h),f=new Uint8Array(h);a&&f.fill(255);const[p,u]=pt(c);if(n?.length&&r?.length){const m=n.map(g=>g-1e-6);m[0]=n[0],l&&(m[m.length-1]=n[n.length-1]);for(let g=0;g<m.length;g++){const y=r[g]>u?u:r[g]<p?p:r[g],M=Math.ceil(m[2*g]-o),k=Math.floor(m[2*g+1]-o);for(let A=M;A<=k;A++)s[A]=y,f[A]=255}}if(i?.length)for(let d=0;d<i.length;d++){const m=Math.ceil(i[2*d]-o),g=Math.floor(i[2*d+1]-o);for(let y=m;y<=g;y++)f[y]=0}return{lut:s,offset:o,mask:f}}function Ue(t,e,n){if(t!=="u8"&&t!=="s8"&&t!=="u16"&&t!=="s16")return null;const r=t.includes("16")?65536:256,a=t.includes("s")?-r/2:0,i=new Uint8Array(r);if(e)for(let l=0;l<e.length;l++){const c=Math.ceil(e[2*l]-a),h=Math.floor(e[2*l+1]-a);for(let o=c;o<=h;o++)i[o]=255}else i.fill(255);if(n)for(let l=0;l<n.length;l++)i[n[l]-a]=0;return{lut:i,offset:a}}function zt(t,e,n,r,a,i,l,c){return{xmin:a<=n*t?0:a<n*t+t?a-n*t:t,ymin:i<=r*e?0:i<r*e+e?i-r*e:e,xmax:a+l<=n*t?0:a+l<n*t+t?a+l-n*t:t,ymax:i+c<=r*e?0:i+c<r*e+e?i+c-r*e:e}}function Pe(t,e){if(!t||t.length===0)return null;const n=t.find(d=>d.pixelBlock);if(n?.pixelBlock==null)return null;const r=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,a=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,i=.01*Math.min(r,a),l=t.sort((d,m)=>Math.abs(d.extent.ymax-m.extent.ymax)>i?m.extent.ymax-d.extent.ymax:Math.abs(d.extent.xmin-m.extent.xmin)>i?d.extent.xmin-m.extent.xmin:0),c=Math.min.apply(null,l.map(d=>d.extent.xmin)),h=Math.min.apply(null,l.map(d=>d.extent.ymin)),o=Math.max.apply(null,l.map(d=>d.extent.xmax)),s=Math.max.apply(null,l.map(d=>d.extent.ymax)),f={x:Math.round((e.xmin-c)/r),y:Math.round((s-e.ymax)/a)},p={width:Math.round((o-c)/r),height:Math.round((s-h)/a)},u={width:Math.round((e.xmax-e.xmin)/r),height:Math.round((e.ymax-e.ymin)/a)};return Math.round(p.width/n.pixelBlock.width)*Math.round(p.height/n.pixelBlock.height)!==l.length||f.x<0||f.y<0||p.width<u.width||p.height<u.height?null:{extent:e,pixelBlock:Jt(l.map(d=>d.pixelBlock),p,{clipOffset:f,clipSize:u})}}function ct(t,e,n,r,a,i){const{width:l,height:c}=n.block,{x:h,y:o}=n.offset,{width:s,height:f}=n.mosaic,p=zt(l,c,r,a,h,o,s,f);let u=0,d=0;if(i){const m=i.hasGCSSShiftTransform?360:i.halfWorldWidth??0,g=l*i.resolutionX,y=i.startX+r*g;y<m&&y+g>m?d=i.rightPadding:y>=m&&(u=i.leftMargin-i.rightPadding,d=0)}if(p.xmax-=d,typeof e!="number")for(let m=p.ymin;m<p.ymax;m++){const g=(a*c+m-o)*s+(r*l-h)+u,y=m*l;for(let M=p.xmin;M<p.xmax;M++)t[g+M]=e[y+M]}else for(let m=p.ymin;m<p.ymax;m++){const g=(a*c+m-o)*s+(r*l-h)+u;for(let y=p.xmin;y<p.xmax;y++)t[g+y]=e}}function Jt(t,e,n={}){const{clipOffset:r,clipSize:a,alignmentInfo:i,blockWidths:l}=n;if(l)return Xt(t,e,{blockWidths:l});const c=t.find(P=>R(P));if(c==null)return null;const h=a?a.width:e.width,o=a?a.height:e.height,s=c.width,f=c.height,p=e.width/s,u=e.height/f,d={offset:r||{x:0,y:0},mosaic:a||e,block:{width:s,height:f}},m=c.pixelType,g=V.getPixelArrayConstructor(m),y=c.pixels.length,M=[];let k,A;for(let P=0;P<y;P++){A=new g(h*o);for(let I=0;I<u;I++)for(let v=0;v<p;v++){const B=t[I*p+v];R(B)&&(k=B.pixels[P],ct(A,k,d,v,I,i))}M.push(A)}const x=t.some(P=>P==null||P.mask!=null&&P.mask.length>0),w=t.some(P=>P?.bandMasks&&P.bandMasks.length>1),U=x?new Uint8Array(h*o):void 0,b=w?[]:void 0;if(U){for(let P=0;P<u;P++)for(let I=0;I<p;I++){const v=t[P*p+I],B=v!=null?v.mask:null;ct(U,B??(v?255:0),d,I,P,i)}if(b)for(let P=0;P<y;P++){const I=new Uint8Array(h*o);for(let v=0;v<u;v++)for(let B=0;B<p;B++){const _=t[v*p+B],S=_?.bandMasks?.[P]??_?.mask;ct(I,S??(_?255:0),d,B,v,i)}b.push(I)}}const T=new V({width:h,height:o,pixels:M,pixelType:m,bandMasks:b,mask:U});return T.updateStatistics(),T}function Xt(t,e,n){const r=t.find(g=>g!=null);if(r==null)return null;const a=t.some(g=>g==null||!!g.mask),{width:i,height:l}=e,c=a?new Uint8Array(i*l):null,{blockWidths:h}=n,o=[],s=r.getPlaneCount(),f=V.getPixelArrayConstructor(r.pixelType);if(a)for(let g=0,y=0;g<t.length;y+=h[g],g++){const M=t[g];if(!R(M))continue;const k=M.mask;for(let A=0;A<l;A++)for(let x=0;x<h[g];x++)c[A*i+x+y]=k==null?255:k[A*M.width+x]}const p=t.some(g=>g?.bandMasks&&g.bandMasks.length>1),u=p?[]:void 0,d=i*l;for(let g=0;g<s;g++){const y=new f(d),M=p?new Uint8Array(d):void 0;for(let k=0,A=0;k<t.length;A+=h[k],k++){const x=t[k];if(!R(x))continue;const w=x.pixels[g];if(w!=null){for(let U=0;U<l;U++)for(let b=0;b<h[k];b++)y[U*i+b+A]=w[U*x.width+b];if(M){const U=x.bandMasks?.[g]??x.mask;for(let b=0;b<l;b++)for(let T=0;T<h[k];T++)M[b*i+T+A]=U?U[b*x.width+T]:255}}}o.push(y),u&&M&&u.push(M)}const m=new V({width:i,height:l,mask:c,bandMasks:u,pixels:o,pixelType:r.pixelType});return m.updateStatistics(),m}function Te(t,e,n){if(!R(t))return null;const{width:r,height:a}=t,i=e.x,l=e.y,c=n.width+i,h=n.height+l;if(i<0||l<0||c>r||h>a||i===0&&l===0&&c===r&&h===a)return t;t.mask||(t.mask=new Uint8Array(r*a));const o=t.mask;for(let s=0;s<a;s++){const f=s*r;for(let p=0;p<r;p++)o[f+p]=s<l||s>=h||p<i||p>=c?0:1}return t.updateStatistics(),t}function Ht(t){if(!R(t))return null;const e=t.clone(),{width:n,height:r,pixels:a}=t,i=a[0],l=e.pixels[0],c=t.mask;for(let h=2;h<r-1;h++){const o=new Map;for(let f=h-2;f<h+2;f++)for(let p=0;p<4;p++){const u=f*n+p;lt(o,i[u],c?c[u]:1)}l[h*n]=kt(o),l[h*n+1]=l[h*n+2]=l[h*n];let s=3;for(;s<n-1;s++){let f=(h-2)*n+s+1;lt(o,i[f],c?c[f]:1),f=(h-1)*n+s+1,lt(o,i[f],c?c[f]:1),f=h*n+s+1,lt(o,i[f],c?c[f]:1),f=(h+1)*n+s+1,lt(o,i[f],c?c[f]:1),f=(h-2)*n+s-3,rt(o,i[f],c?c[f]:1),f=(h-1)*n+s-3,rt(o,i[f],c?c[f]:1),f=h*n+s-3,rt(o,i[f],c?c[f]:1),f=(h+1)*n+s-3,rt(o,i[f],c?c[f]:1),l[h*n+s]=kt(o)}l[h*n+s+1]=l[h*n+s]}for(let h=0;h<n;h++)l[h]=l[n+h]=l[2*n+h],l[(r-1)*n+h]=l[(r-2)*n+h];return e.updateStatistics(),e}function kt(t){if(t.size===0)return 0;let e=0,n=-1,r=0;const a=t.keys();let i=a.next();for(;!i.done;)r=t.get(i.value),r>e&&(n=i.value,e=r),i=a.next();return n}function rt(t,e,n){if(n===0)return;const r=t.get(e);r===1?t.delete(e):t.set(e,r-1)}function lt(t,e,n){n!==0&&t.set(e,t.has(e)?t.get(e)+1:1)}function It(t,e,n){let{x:r,y:a}=e;const{width:i,height:l}=n;if(r===0&&a===0&&l===t.height&&i===t.width)return t;const{width:c,height:h}=t,o=Math.max(0,a),s=Math.max(0,r),f=Math.min(r+i,c),p=Math.min(a+l,h);if(f<0||p<0||!R(t))return null;r=Math.max(0,-r),a=Math.max(0,-a);const{pixels:u}=t,d=i*l,m=u.length,g=[];for(let A=0;A<m;A++){const x=u[A],w=V.createEmptyBand(t.pixelType,d);for(let U=o;U<p;U++){const b=U*c;let T=(U+a-o)*i+r;for(let P=s;P<f;P++)w[T++]=x[b+P]}g.push(w)}const y=new Uint8Array(d),M=t.mask;for(let A=o;A<p;A++){const x=A*c;let w=(A+a-o)*i+r;for(let U=s;U<f;U++)y[w++]=M?M[x+U]:1}const k=new V({width:n.width,height:n.height,pixelType:t.pixelType,pixels:g,mask:y});return k.updateStatistics(),k}function $t(t,e=!0){if(!R(t))return null;const{pixels:n,width:r,height:a,mask:i,pixelType:l}=t,c=[],h=Math.round(r/2),o=Math.round(a/2),s=a-1,f=r-1;for(let u=0;u<n.length;u++){const d=n[u],m=V.createEmptyBand(l,h*o);let g=0;for(let y=0;y<a;y+=2)for(let M=0;M<r;M+=2){const k=d[y*r+M];if(e){const A=M===f?k:d[y*r+M+1],x=y===s?k:d[y*r+M+r],w=M===f?x:y===s?A:d[y*r+M+r+1];m[g++]=(k+A+x+w)/4}else m[g++]=k}c.push(m)}let p=null;if(i!=null){p=new Uint8Array(h*o);let u=0;for(let d=0;d<a;d+=2)for(let m=0;m<r;m+=2){const g=i[d*r+m];if(e){const y=m===f?g:i[d*r+m+1],M=d===s?g:i[d*r+m+r],k=m===f?M:d===s?y:i[d*r+m+r+1];p[u++]=g*y*M*k?1:0}else p[u++]=g}}return new V({width:h,height:o,pixelType:l,pixels:c,mask:p})}function Ie(t,e,n=0,r=!0){if(!R(t))return null;const{width:a,height:i}=e;let{width:l,height:c}=t;const h=new Map,o={x:0,y:0},s=1+n;let f=t;for(let p=0;p<s;p++){const u=Math.ceil(l/a),d=Math.ceil(c/i);for(let m=0;m<d;m++){o.y=m*i;for(let g=0;g<u;g++){o.x=g*a;const y=It(f,o,e);h.set(`${p}/${m}/${g}`,y)}}p<s-1&&(f=$t(f,r)),l=Math.round(l/2),c=Math.round(c/2)}return h}function $e(t){const{pixelBlock:e,tileSize:n,level:r,row:a,col:i,useBilinear:l}=t;if(!R(e))return null;const{width:c,height:h}=n,o=2**r,s=o*c,f=o*h;let p=It(e,{y:a*f,x:i*s},{width:s,height:f});if(!p)return null;for(let u=r;u>0;u--)p=$t(p,l);return p}function Bt(t,e,n,r,a=0){const{width:i,height:l}=t,{width:c,height:h}=e,o=r.cols,s=r.rows,f=Math.ceil(c/o-.1/o),p=Math.ceil(h/s-.1/s);let u,d,m,g,y,M,k;const A=f*o,x=A*p*s,w=new Float32Array(x),U=new Float32Array(x),b=new Uint32Array(x),T=new Uint32Array(x);let P,I,v=0;for(let B=0;B<p;B++)for(let _=0;_<f;_++){u=12*(B*f+_),d=n[u],m=n[u+1],g=n[u+2],y=n[u+3],M=n[u+4],k=n[u+5];for(let S=0;S<s;S++){v=(B*s+S)*A+_*o,I=(S+.5)/s;for(let $=0;$<S;$++)P=($+.5)/o,w[v+$]=(d*P+m*I+g)*i+a,U[v+$]=(y*P+M*I+k)*l+a,b[v+$]=Math.floor(w[v+$]),T[v+$]=Math.floor(U[v+$])}u+=6,d=n[u],m=n[u+1],g=n[u+2],y=n[u+3],M=n[u+4],k=n[u+5];for(let S=0;S<s;S++){v=(B*s+S)*A+_*o,I=(S+.5)/s;for(let $=S;$<o;$++)P=($+.5)/o,w[v+$]=(d*P+m*I+g)*i+a,U[v+$]=(y*P+M*I+k)*l+a,b[v+$]=Math.floor(w[v+$]),T[v+$]=Math.floor(U[v+$])}}return{offsets_x:w,offsets_y:U,offsets_xi:b,offsets_yi:T,gridWidth:A}}function Be(t,e){const{coefficients:n,spacing:r}=e,{offsets_x:a,offsets_y:i,gridWidth:l}=Bt(t,t,n,{rows:r[0],cols:r[1]}),{width:c,height:h}=t,o=new Float32Array(c*h),s=180/Math.PI;for(let f=0;f<h;f++)for(let p=0;p<c;p++){const u=f*l+p,d=f===0?u:u-l,m=f===h-1?u:u+l,g=a[d]-a[m],y=i[m]-i[d];if(isNaN(g)||isNaN(y))o[f*c+p]=90;else{let M=Math.atan2(y,g)*s;M=(360+M)%360,o[f*c+p]=M}}return o}function Se(t,e,n,r,a="nearest"){if(!R(t))return null;a==="majority"&&(t=Ht(t));const{pixels:i,mask:l,bandMasks:c,pixelType:h}=t,o=t.width,s=t.height,f=V.getPixelArrayConstructor(h),p=i.length,{width:u,height:d}=e;let m=!1;for(let v=0;v<n.length;v+=3)n[v]===-1&&n[v+1]===-1&&n[v+2]===-1&&(m=!0);const{offsets_x:g,offsets_y:y,offsets_xi:M,offsets_yi:k,gridWidth:A}=Bt({width:o,height:s},e,n,r,a==="majority"?.5:0);let x;const w=(v,B,_,S)=>{const $=v instanceof Float32Array||v instanceof Float64Array?0:.5;for(let F=0;F<d;F++){x=F*A;for(let C=0;C<u;C++){if(g[x]<0||y[x]<0)v[F*u+C]=0;else if(S)v[F*u+C]=B[M[x]+k[x]*o];else{const j=Math.floor(g[x]),O=Math.floor(y[x]),L=Math.ceil(g[x]),q=Math.ceil(y[x]),z=g[x]-j,H=y[x]-O;if(!_||_[j+O*o]&&_[L+O*o]&&_[j+q*o]&&_[L+q*o]){const et=(1-z)*B[j+O*o]+z*B[L+O*o],Q=(1-z)*B[j+q*o]+z*B[L+q*o];v[F*u+C]=(1-H)*et+H*Q+$}else v[F*u+C]=B[M[x]+k[x]*o]}x++}}},U=[];let b;const T=c?.length===p,P=[];for(let v=0;v<p;v++){if(T){const B=new Uint8Array(u*d);w(B,c[v],c[v],!0),P.push(B)}b=new f(u*d),w(b,i[v],T?c[v]:l,a==="nearest"||a==="majority"),U.push(b)}const I=new V({width:u,height:d,pixelType:h,pixels:U,bandMasks:T?P:void 0});if(l!=null)I.mask=new Uint8Array(u*d),w(I.mask,l,l,!0);else if(m){I.mask=new Uint8Array(u*d);for(let v=0;v<u*d;v++)I.mask[v]=g[v]<0||y[v]<0?0:1}return I.updateStatistics(),I}const tt=new Map;tt.set("meter-per-second",1),tt.set("kilometer-per-hour",.277778),tt.set("knots",.514444),tt.set("feet-per-second",.3048),tt.set("mile-per-hour",.44704);const ut=180/Math.PI,dt=5,at=new jt({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function mt(t,e){return tt.get(t)/tt.get(e)||1}function St(t){return(450-t)%360}function Ft(t,e="geographic"){const[n,r]=t,a=Math.sqrt(n*n+r*r);let i=Math.atan2(r,n)*ut;return i=(360+i)%360,e==="geographic"&&(i=St(i)),[a,i]}function Kt(t,e="geographic"){let n=t[1];e==="geographic"&&(n=St(n)),n%=360;const r=t[0];return[r*Math.cos(n/ut),r*Math.sin(n/ut)]}function Fe(t,e,n,r="geographic"){if(!R(t)||n==null)return t;const a=e==="vector-magdir"?t.clone():Mt(t,e),i=a.pixels[1];for(let l=0;l<i.length;l++)i[l]=r==="geographic"?(i[l]+n[l]+270)%360:(i[l]+360-n[l])%360;return e==="vector-magdir"?a:Mt(a,"vector-magdir")}function Mt(t,e,n="geographic",r=1){if(!R(t))return t;const{pixels:a,width:i,height:l}=t,c=i*l,h=a[0],o=a[1],s=t.pixelType.startsWith("f")?t.pixelType:"f32",f=V.createEmptyBand(s,c),p=V.createEmptyBand(s,c);let u=0;for(let m=0;m<l;m++)for(let g=0;g<i;g++)e==="vector-uv"?([f[u],p[u]]=Ft([h[u],o[u]],n),f[u]*=r):([f[u],p[u]]=Kt([h[u],o[u]],n),f[u]*=r,p[u]*=r),u++;const d=new V({pixelType:s,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[f,p]});return d.updateStatistics(),d}function Ce(t,e,n=1){if(n===1||!R(t))return t;const r=t.clone(),{pixels:a,width:i,height:l}=r,c=a[0];a[1];let h=0;for(let o=0;o<l;o++)for(let s=0;s<i;s++)c[h]*=n,h++;return r.updateStatistics(),r}function _e(t,e,n,r,a){if(a==null||!a.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/r),height:Math.round(n/r),resolution:t.width/e};const i=a.xmin,l=a.ymax,c=(t.xmax-t.xmin)/e*r,h=(t.ymax-t.ymin)/n*r,o=(c+h)/2;return t.xmin=i+Math.floor((t.xmin-i)/c)*c,t.xmax=i+Math.ceil((t.xmax-i)/c)*c,t.ymin=l+Math.floor((t.ymin-l)/h)*h,t.ymax=l+Math.ceil((t.ymax-l)/h)*h,{extent:t,width:Math.round(t.width/c),height:Math.round(t.height/h),resolution:o}}const Qt=Ct(0,0,0);function Ct(t=0,e=0,n=Math.PI,r=!0){r&&(n=(2*Math.PI-n)%(2*Math.PI));const a=r?-1:1,i=13*a,l=-7*a,c=-2*a,h=-16*a,o=21.75,[s,f]=N(0,e+i,n,o),[p,u]=N(t-5.5,e+l,n,o),[d,m]=N(t+5.5,e+l,n,o),[g,y]=N(t-1.5,e+c,n,o),[M,k]=N(t+1.5,e+c,n,o),[A,x]=N(t-1.5,e+h,n,o),[w,U]=N(t+1.5,e+h,n,o);return[s,f,p,u,g,y,M,k,d,m,A,x,w,U]}function Yt(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const r=10,a=n?-1:1,i=5*a,l=20*a,c=25*a,h=45,o=0,s=0,f=2,p=0,u=f*a,d=n?1:-1,m=r/2*d;let[g,y]=[o+m,s-l],[M,k]=[g+f*d,y],[A,x]=[M-p*d,k+u],[w,U]=[o-m,s-c],[b,T]=[w+p*d,U-u],P=Math.ceil(t/dt),I=Math.floor(P/10);P-=8*I;const v=[],B=[];for(let z=0;z<P/2;z++,I--){I<=0&&P%2==1&&z===(P-1)/2&&(w=o,b=w+p*d,U=(U+y)/2,T=U-u);const[H,et]=N(w,U,e,h);if(I>0){const[Q,it]=N(M,U,e,h),[st,D]=N(g,y,e,h);v.push(Q),v.push(it),v.push(H),v.push(et),v.push(st),v.push(D)}else{const[Q,it]=N(M,k,e,h),[st,D]=N(A,x,e,h),[E,ht]=N(b,T,e,h);B.push(H),B.push(et),B.push(E),B.push(ht),B.push(st),B.push(D),B.push(Q),B.push(it)}U+=i,y+=i,k+=i,x+=i,T+=i}const[_,S]=N(o+m,s+l,e,h),$=(r/2+f)*d,[F,C]=N(o+$,s+l,e,h),[j,O]=N(o+m,s-c,e,h),[L,q]=N(o+$,s-c,e,h);return{pennants:v,barbs:B,shaft:[_,S,F,C,j,O,L,q]}}function N(t,e,n,r=1){const a=Math.sqrt(t*t+e*e)/r,i=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[a,(2*Math.PI+i-n)%(2*Math.PI)]}const ot=[0,1,3,6,10,16,21,27,33,40,47,55,63],Zt=[0,.5,1,1.5,2],te=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function Y(t,e,n,r){const a=mt(r||"knots",n);let i;for(i=1;i<e.length;i++)if(i===e.length-1){if(t<e[i]*a)break}else if(t<=e[i]*a)break;return Math.min(i-1,e.length-2)}function ee(t,e,n,r,a){let i=0;switch(e){case"beaufort_kn":i=Y(t,ot,"knots",n);break;case"beaufort_km":i=Y(t,ot,"kilometer-per-hour",n);break;case"beaufort_ft":i=Y(t,ot,"feet-per-second",n);break;case"beaufort_m":i=Y(t,ot,"meter-per-second",n);break;case"classified_arrow":i=Y(t,a??[],r,n);break;case"ocean_current_m":i=Y(t,Zt,"meter-per-second",n);break;case"ocean_current_kn":i=Y(t,te,"knots",n)}return i}function ne(t,e){const{style:n,inputUnit:r,outputUnit:a,breakValues:i}=e,l=at.fromJSON(r),c=at.fromJSON(a),h=7*6,o=15;let s=0,f=0;const{width:p,height:u,mask:d}=t,m=t.pixels[0],g=t.pixels[1],y=d!=null?d.filter(x=>x>0).length:p*u,M=new Float32Array(y*h),k=new Uint32Array(o*y),A=e.invertDirection?Ct(0,0,0,!1):Qt;for(let x=0;x<u;x++)for(let w=0;w<p;w++){const U=x*p+w;if(!d||d[x*p+w]){const b=(g[U]+360)%360/180*Math.PI,T=ee(m[U],n,l,c,i);for(let I=0;I<A.length;I+=2)M[s++]=(w+.5)/p,M[s++]=(x+.5)/u,M[s++]=A[I],M[s++]=A[I+1]+b,M[s++]=T,M[s++]=m[U];const P=7*(s/h-1);k[f++]=P,k[f++]=P+1,k[f++]=P+2,k[f++]=P+0,k[f++]=P+4,k[f++]=P+3,k[f++]=P+0,k[f++]=P+2,k[f++]=P+3,k[f++]=P+2,k[f++]=P+5,k[f++]=P+3,k[f++]=P+5,k[f++]=P+6,k[f++]=P+3}}return{vertexData:M,indexData:k}}const ft=[];function ie(t,e){if(ft.length===0)for(let u=0;u<30;u++)ft.push(Yt(5*u,0,!e.invertDirection));const n=mt(at.fromJSON(e.inputUnit),"knots"),{width:r,height:a,mask:i}=t,l=t.pixels[0],c=t.pixels[1],h=6,o=[],s=[];let f=0,p=0;for(let u=0;u<a;u++)for(let d=0;d<r;d++){const m=u*r+d,g=l[m]*n;if((!i||i[u*r+d])&&g>=dt){const y=(c[m]+360)%360/180*Math.PI,{pennants:M,barbs:k,shaft:A}=ft[Math.min(Math.floor(g/5),29)];if(M.length+k.length===0)continue;let x=o.length/h;const w=(d+.5)/r,U=(u+.5)/a;for(let b=0;b<M.length;b+=2)o[f++]=w,o[f++]=U,o[f++]=M[b],o[f++]=M[b+1]+y,o[f++]=0,o[f++]=g;for(let b=0;b<k.length;b+=2)o[f++]=w,o[f++]=U,o[f++]=k[b],o[f++]=k[b+1]+y,o[f++]=0,o[f++]=g;for(let b=0;b<A.length;b+=2)o[f++]=w,o[f++]=U,o[f++]=A[b],o[f++]=A[b+1]+y,o[f++]=0,o[f++]=g;for(let b=0;b<M.length/6;b++)s[p++]=x,s[p++]=x+1,s[p++]=x+2,x+=3;for(let b=0;b<k.length/8;b++)s[p++]=x,s[p++]=x+1,s[p++]=x+2,s[p++]=x+1,s[p++]=x+2,s[p++]=x+3,x+=4;s[p++]=x+0,s[p++]=x+1,s[p++]=x+2,s[p++]=x+1,s[p++]=x+3,s[p++]=x+2,x+=4}}return{vertexData:new Float32Array(o),indexData:new Uint32Array(s)}}function se(t,e){let r=0,a=0;const{width:i,height:l,mask:c}=t,h=t.pixels[0],o=[],s=[],f=mt(at.fromJSON(e.inputUnit),"knots"),p=e.style==="wind_speed"?dt:Number.MAX_VALUE;for(let u=0;u<l;u++)for(let d=0;d<i;d++){const m=h[u*i+d]*f;if((!c||c[u*i+d])&&m<p){for(let y=0;y<4;y++)o[r++]=(d+.5)/i,o[r++]=(u+.5)/l,o[r++]=y<2?-.5:.5,o[r++]=y%2==0?-.5:.5,o[r++]=0,o[r++]=m;const g=4*(r/24-1);s[a++]=g,s[a++]=g+1,s[a++]=g+2,s[a++]=g+1,s[a++]=g+2,s[a++]=g+3}}return{vertexData:new Float32Array(o),indexData:new Uint32Array(s)}}function Ve(t,e){return e.style==="simple_scalar"?se(t,e):e.style==="wind_speed"?ie(t,e):ne(t,e)}function De(t,e,n,r=[0,0],a=.5){const{width:i,height:l,mask:c}=t,[h,o]=t.pixels,[s,f]=r,p=Math.round((i-s)/n),u=Math.round((l-f)/n),d=p*u,m=new Float32Array(d),g=new Float32Array(d),y=new Uint8Array(d);for(let k=0;k<u;k++)for(let A=0;A<p;A++){let x=0;const w=k*p+A,U=Math.max(0,k*n+f),b=Math.max(0,A*n+s),T=Math.min(l,U+n),P=Math.min(i,b+n);for(let I=U;I<T;I++)for(let v=b;v<P;v++){const B=I*i+v;if(!c||c[B]){x++;const _=[h[B],o[B]],[S,$]=_;m[w]+=S,g[w]+=$}}if(x>=(T-U)*(P-b)*(1-a)){y[w]=1;const[I,v]=Ft([m[w]/x,g[w]/x]);m[w]=I,g[w]=v}else y[w]=0,m[w]=0,g[w]=0}const M=new V({width:p,height:u,pixels:[m,g],mask:y});return M.updateStatistics(),M}const X=()=>Z.getLogger("esri.views.2d.engine.flow.dataUtils"),le=10;async function Re(t,e,n,r){const a=performance.now(),i=re(e,n),l=performance.now(),c=ae(e,i,n.width,n.height),h=performance.now(),o=ce(c),s=performance.now(),f=t==="Streamlines"?fe(o,le):ue(o),p=performance.now();return nt("esri-2d-profiler")&&(X().info("I.1","_createFlowFieldFromData (ms)",Math.round(l-a)),X().info("I.2","_getStreamlines (ms)",Math.round(h-l)),X().info("I.3","createAnimatedLinesData (ms)",Math.round(s-h)),X().info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(p-s)),X().info("I.5","createFlowMesh (ms)",Math.round(p-a)),X().info("I.6","Mesh size (bytes)",f.vertexData.buffer.byteLength+f.indexData.buffer.byteLength)),await Promise.resolve(),Nt(r),f}function re(t,e){const n=he(e.data,e.width,e.height,t.smoothing);return t.interpolate?(r,a)=>{const i=Math.floor(r),l=Math.floor(a);if(i<0||i>=e.width)return[0,0];if(l<0||l>=e.height)return[0,0];const c=r-i,h=a-l,o=i,s=l,f=i<e.width-1?i+1:i,p=l<e.height-1?l+1:l,u=n[2*(s*e.width+o)],d=n[2*(s*e.width+f)],m=n[2*(p*e.width+o)],g=n[2*(p*e.width+f)],y=n[2*(s*e.width+o)+1],M=n[2*(s*e.width+f)+1];return[(u*(1-h)+m*h)*(1-c)+(d*(1-h)+g*h)*c,(y*(1-h)+n[2*(p*e.width+o)+1]*h)*(1-c)+(M*(1-h)+n[2*(p*e.width+f)+1]*h)*c]}:(r,a)=>{const i=Math.round(r),l=Math.round(a);return i<0||i>=e.width||l<0||l>=e.height?[0,0]:[n[2*(l*e.width+i)],n[2*(l*e.width+i)+1]]}}function oe(t,e,n,r,a,i,l,c,h){const o=[];let s=n,f=r,p=0,[u,d]=e(s,f);u*=t.velocityScale,d*=t.velocityScale;const m=Math.sqrt(u*u+d*d);let g,y;o.push({x:s,y:f,t:p,speed:m});for(let M=0;M<t.verticesPerLine;M++){let[k,A]=e(s,f);k*=t.velocityScale,A*=t.velocityScale;const x=Math.sqrt(k*k+A*A);if(x<t.minSpeedThreshold)return o;const w=k/x,U=A/x;if(s+=w*t.segmentLength,f+=U*t.segmentLength,p+=t.segmentLength/x,Math.acos(w*g+U*y)>t.maxTurnAngle)return o;if(t.collisions){const b=Math.round(s*h),T=Math.round(f*h);if(b<0||b>l-1||T<0||T>c-1)return o;const P=i[T*l+b];if(P!==-1&&P!==a)return o;i[T*l+b]=a}o.push({x:s,y:f,t:p,speed:x}),g=w,y=U}return o}function ae(t,e,n,r){const a=[],i=new vt,l=1/Math.max(t.lineCollisionWidth,1),c=Math.round(n*l),h=Math.round(r*l),o=new Int32Array(c*h);for(let f=0;f<o.length;f++)o[f]=-1;const s=[];for(let f=0;f<r;f+=t.lineSpacing)for(let p=0;p<n;p+=t.lineSpacing)s.push({x:p,y:f,sort:i.getFloat()});s.sort((f,p)=>f.sort-p.sort);for(const{x:f,y:p}of s)if(i.getFloat()<t.density){const u=oe(t,e,f,p,a.length,o,c,h,l);if(u.length<2)continue;a.push(u)}return a}function he(t,e,n,r){if(r===0)return t;const a=Math.round(3*r),i=new Array(2*a+1);let l=0;for(let o=-a;o<=a;o++){const s=Math.exp(-o*o/(r*r));i[o+a]=s,l+=s}for(let o=-a;o<=a;o++)i[o+a]/=l;const c=new Float32Array(t.length);for(let o=0;o<n;o++)for(let s=0;s<e;s++){let f=0,p=0;for(let u=-a;u<=a;u++){if(s+u<0||s+u>=e)continue;const d=i[u+a];f+=d*t[2*(o*e+(s+u))],p+=d*t[2*(o*e+(s+u))+1]}c[2*(o*e+s)]=f,c[2*(o*e+s)+1]=p}const h=new Float32Array(t.length);for(let o=0;o<e;o++)for(let s=0;s<n;s++){let f=0,p=0;for(let u=-a;u<=a;u++){if(s+u<0||s+u>=n)continue;const d=i[u+a];f+=d*c[2*((s+u)*e+o)],p+=d*c[2*((s+u)*e+o)+1]}h[2*(s*e+o)]=f,h[2*(s*e+o)+1]=p}return h}function ce(t,e){const n=new vt,r=t.reduce((h,o)=>h+o.length,0),a=new Float32Array(4*r),i=new Array(t.length);let l=0,c=0;for(const h of t){const o=l;for(const s of h)a[4*l]=s.x,a[4*l+1]=s.y,a[4*l+2]=s.t,a[4*l+3]=s.speed,l++;i[c++]={startVertex:o,numberOfVertices:h.length,totalTime:h[h.length-1].t,timeSeed:n.getFloat()}}return{lineVertices:a,lineDescriptors:i}}function fe(t,e){const{lineVertices:r,lineDescriptors:a}=t;let i=0,l=0;for(const u of a)i+=2*u.numberOfVertices,l+=6*(u.numberOfVertices-1);const c=new Float32Array(i*9),h=new Uint32Array(l);let o=0,s=0;function f(){h[s++]=o-2,h[s++]=o,h[s++]=o-1,h[s++]=o,h[s++]=o+1,h[s++]=o-1}function p(u,d,m,g,y,M,k,A){const x=o*9;let w=0;c[x+w++]=u,c[x+w++]=d,c[x+w++]=1,c[x+w++]=m,c[x+w++]=M,c[x+w++]=k,c[x+w++]=g/2,c[x+w++]=y/2,c[x+w++]=A,o++,c[x+w++]=u,c[x+w++]=d,c[x+w++]=-1,c[x+w++]=m,c[x+w++]=M,c[x+w++]=k,c[x+w++]=-g/2,c[x+w++]=-y/2,c[x+w++]=A,o++}for(const u of a){const{totalTime:d,timeSeed:m}=u;let g=null,y=null,M=null,k=null,A=null,x=null;for(let w=0;w<u.numberOfVertices;w++){const U=r[4*(u.startVertex+w)],b=r[4*(u.startVertex+w)+1],T=r[4*(u.startVertex+w)+2],P=r[4*(u.startVertex+w)+3];let I=null,v=null,B=null,_=null;if(w>0){I=U-g,v=b-y;const S=Math.sqrt(I*I+v*v);if(I/=S,v/=S,w>1){let $=I+A,F=v+x;const C=Math.sqrt($*$+F*F);$/=C,F/=C;const j=Math.min(1/($*I+F*v),e);$*=j,F*=j,B=-F,_=$}else B=-v,_=I;B!==null&&_!==null&&(p(g,y,M,B,_,d,m,P),f())}g=U,y=b,M=T,A=I,x=v,k=P}p(g,y,M,-x,A,d,m,k)}return{vertexData:c,indexData:h}}function ue(t){const{lineVertices:a,lineDescriptors:i}=t;let l=0,c=0;for(const S of i){const $=S.numberOfVertices-1;l+=4*$*2,c+=6*$*2}const h=new Float32Array(l*16),o=new Uint32Array(c);let s,f,p,u,d,m,g,y,M,k,A,x,w,U,b=0,T=0;function P(){o[T++]=b-8,o[T++]=b-7,o[T++]=b-6,o[T++]=b-7,o[T++]=b-5,o[T++]=b-6,o[T++]=b-4,o[T++]=b-3,o[T++]=b-2,o[T++]=b-3,o[T++]=b-1,o[T++]=b-2}function I(S,$,F,C,j,O,L,q,z,H,et,Q,it,st){const D=b*16;let E=0;for(const ht of[1,2])for(const _t of[1,2,3,4])h[D+E++]=S,h[D+E++]=$,h[D+E++]=F,h[D+E++]=C,h[D+E++]=L,h[D+E++]=q,h[D+E++]=z,h[D+E++]=H,h[D+E++]=ht,h[D+E++]=_t,h[D+E++]=it,h[D+E++]=st,h[D+E++]=j/2,h[D+E++]=O/2,h[D+E++]=et/2,h[D+E++]=Q/2,b++}function v(S,$){let F=M+A,C=k+x;const j=Math.sqrt(F*F+C*C);F/=j,C/=j;const O=M*F+k*C;F/=O,C/=O;let L=A+w,q=x+U;const z=Math.sqrt(L*L+q*q);L/=z,q/=z;const H=A*L+x*q;L/=H,q/=H,I(s,f,p,u,-C,F,d,m,g,y,-q,L,S,$),P()}function B(S,$,F,C,j,O){if(M=A,k=x,A=w,x=U,M==null&&k==null&&(M=A,k=x),d!=null&&m!=null){w=S-d,U=$-m;const L=Math.sqrt(w*w+U*U);w/=L,U/=L}M!=null&&k!=null&&v(j,O),s=d,f=m,p=g,u=y,d=S,m=$,g=F,y=C}function _(S,$){M=A,k=x,A=w,x=U,M==null&&k==null&&(M=A,k=x),M!=null&&k!=null&&v(S,$)}for(const S of i){s=null,f=null,p=null,u=null,d=null,m=null,g=null,y=null,M=null,k=null,A=null,x=null,w=null,U=null;const{totalTime:$,timeSeed:F}=S;for(let C=0;C<S.numberOfVertices;C++)B(a[4*(S.startVertex+C)],a[4*(S.startVertex+C)+1],a[4*(S.startVertex+C)+2],a[4*(S.startVertex+C)+3],$,F);_($,F)}return{vertexData:h,indexData:o}}function At(t,e){const n=e.pixels,{width:r,height:a}=e,i=new Float32Array(r*a*2),l=e.mask||new Uint8Array(r*a*2);if(e.mask||l.fill(255),t==="vector-uv")for(let c=0;c<r*a;c++)i[2*c]=n[0][c],i[2*c+1]=-n[1][c];else if(t==="vector-magdir")for(let c=0;c<r*a;c++){const h=n[0][c],o=Ot(n[1][c]),s=Math.cos(o-Math.PI/2),f=Math.sin(o-Math.PI/2);i[2*c]=s*h,i[2*c+1]=f*h}return{data:i,mask:l,width:r,height:a}}async function Le(t,e,n,r,a,i){const l=performance.now(),c=Gt(e.spatialReference);if(!c){const A=await bt(t,e,n,r,a,i);return nt("esri-2d-profiler")&&X().info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-l)),nt("esri-2d-profiler")&&X().info("I.9","Number of parts",1),A}const[h,o]=c.valid,s=o-h,f=Math.ceil(e.width/s),p=e.width/f,u=Math.round(n/f);let d=e.xmin;const m=[],g=performance.now();for(let A=0;A<f;A++){const x=new qt({xmin:d,xmax:d+p,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});m.push(bt(t,x,u,r,a,i)),d+=p}const y=await Promise.all(m);nt("esri-2d-profiler")&&X().info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-g)),nt("esri-2d-profiler")&&X().info("I.9","Number of parts",y.length);const M={data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r};let k=0;for(const A of y){for(let x=0;x<A.height;x++)for(let w=0;w<A.width;w++)k+w>=n||(M.data[2*(x*n+k+w)]=A.data[2*(x*A.width+w)],M.data[2*(x*n+k+w)+1]=A.data[2*(x*A.width+w)+1],M.mask[x*n+k+w]=A.mask[x*A.width+w]);k+=A.width}return nt("esri-2d-profiler")&&X().info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-l)),M}async function bt(t,e,n,r,a,i){const l={requestProjectedLocalDirections:!0,signal:i};if(a!=null&&(l.timeExtent=a),t.type==="imagery"){await t.load({signal:i});const o=t.rasterInfo.dataType,s=await t.fetchImage(e,n,r,l);return s?.pixelData?.pixelBlock==null?{data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r}:At(o,s.pixelData.pixelBlock)}await t.load({signal:i});const c=t.serviceRasterInfo.dataType,h=await t.fetchPixels(e,n,r,l);return h?.pixelBlock==null?{data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r}:At(c,h.pixelBlock)}export{Se as D,$e as E,Pe as M,It as P,Be as R,De as S,Te as T,Ve as U,Ie as W,se as _,V as a,ke as b,we as c,mt as d,Re as e,Mt as f,Le as g,ye as h,Ft as i,xt as j,ge as k,Ut as l,_e as m,gt as n,R as o,Ce as p,be as q,xe as r,at as s,Pt as t,Me as u,Ae as v,Ue as w,Jt as x,ve as y,Fe as z};
