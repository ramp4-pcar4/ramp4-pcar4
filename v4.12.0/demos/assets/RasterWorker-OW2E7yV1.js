const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./index-BNk7091c.js","./preload-helper-ExcqyqRp.js","./dynamic-import-helper-BheWnx7M.js","./main-D6UWMbWJ.js","./main-DCJluy1C.css","./draw-store-BaFsNOTl.js","./GraphicsLayer-dZfMZHiC.js","./GraphicsCollection-B4inrSzy.js","./Layer-CrpAg4i7.js","./TimeExtent-CVFHym4n.js","./ScaleRangeLayer-CANL8iBb.js","./layerContainerType-C5CzMsLd.js","./jsonUtils-BVTTU8XA.js","./parser-BOplPg1_.js","./mat4f32-DcsiF_Rp.js","./mat4-mplESjCB.js","./common-DQOJ18NT.js","./ElevationInfo-DLPjeENV.js","./lengthUtils-B1iOgQDj.js","./intl-D8pxRaLS.js","./SketchViewModel-BQEEJoEu.js","./UpdatingHandles-CLyw9aof.js","./projection-F5U3p10J.js","./globalCss-geu-g-r4.js","./Queue-Bp8J9hIN.js","./signal-_szBxGG7.js","./Version-DeyywoNs.js","./quantityUtils-B7WFJP6j.js","./vec2-maR1OrZI.js","./vec2f64-DohEyf3f.js","./vec32-DvB22h0L.js","./projectVectorToVector-2U_T6yxL.js","./projectPointToVector-CP3mj71q.js","./geodesicUtils-CINGW30v.js","./Query-VeA4-Qk_.js","./Field-BRKBBmM6.js","./fieldType-B-0DY-YK.js","./vec42-CKs01hkn.js","./vec4f64-o2zAXfmz.js","./plane-DXyNbfXV.js","./mat3f64-q3fE-ZOt.js","./mat4f64-Dk4dwAN8.js","./quatf64-aQ5IuZRd.js","./sphere-MYAntte_.js","./mat3-CruJiiUv.js","./jsxFactory-HPYy2V_L.js","./uuid-Cl5lrJ4c.js","./layerViewUtils-eEg1cHt4.js","./widget-GoJNk-6R.js","./diffUtils-BMpoATJS.js","./ViewingMode-HRfKv6NR.js","./meshVertexSpaceUtils-DurlDegv.js","./MeshLocalVertexSpace-DKI2cxe_.js","./hydratedFeatures-CzW8xS0g.js","./Scheduler-BTF2H21O.js","./geometryEngineBase-8g0RzW7z.js","./_commonjsHelpers-DCkdB7M8.js","./hydrated-C5WzuFt9.js","./mat2d-D9DBP-jx.js","./quat-DOvbuK1U.js","./drapedUtils-gb-eeqgf.js","./utils-BQBvadb7.js","./substitute-CUVC4DC3.js"])))=>i.map(i=>d[i]);
import{ap as ne,ar as Rt,bs as ts,v as c,x as h,J as $,D as We,a_ as $s,ah as Z,bl as H,ak as J,bk as Hs,al as qs,B as Ct,z as Lt,l6 as Vt,s as Wt}from"./main-D6UWMbWJ.js";import{s as Xs}from"./projection-F5U3p10J.js";import{a as b,o as Ks,c as Fs,l as ue,r as Ys,b as Je,j as Ns,n as Rs,w as Zs,k as st,q as Qs,y as tn,t as en,v as sn,f as nn,W as rn,E as on,x as an,D as un,R as ln,z as cn,e as pn}from"./dataUtils-DkTHh3Ap.js";import{j as mn,l as hn,m as kt,C as fn,w as ks,B as pe,p as Cs,q as Ss,s as dn,v as Zt,x as gn,y as re,z as Is,D as _s,E as yn,F as xn,G as wn,H as le,I as vn,M as bn,J as An,K as Tn,k as Pn,_ as $n,L as Fn}from"./RasterSymbolizer-BWMmEZwI.js";import{U as es}from"./colorUtils-B_grc-3o.js";import{i as Nn,u as Bs,s as St,o as L,l as ce}from"./pixelRangeUtils-Esmjpmyq.js";import{_ as Rn}from"./preload-helper-ExcqyqRp.js";import{V as kn,Z as Cn,w as Sn,j as In,a as _n}from"./rasterProjectionHelper-Cc7dG1NZ.js";import{m as Bn,p as js}from"./colorRamps-BUZNTJmj.js";import{y as nt}from"./Field-BRKBBmM6.js";function jn(i,t){if(i.spatialReference.equals(t))return i;const e=ts(i.spatialReference),s=ts(t);if(e===s)return i;const n=e/s;return{x:i.x*n,y:i.y*n}}async function Qi(i,t,e){if(e.type==="extent")return On(i,t,e);const{width:s,height:n}=i,r=new Uint8Array(s*n),{contains:a,intersects:o}=await Rn(async()=>{const{contains:u,intersects:l}=await import("./index-BNk7091c.js").then(p=>p.V);return{contains:u,intersects:l}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62]),import.meta.url);return o(t,e)?e.type==="polyline"?Gn(i,t,e):a(e,t)?i:Mn(i,t,e):new b({pixelType:i.pixelType,width:s,height:n,mask:r,maskIsAlpha:!1,pixels:[...i.pixels]})}function Mn(i,t,e){if(!i)return i;const{width:s,height:n}=i,r=t.width/s,a=t.height/n,{xmin:o,ymax:u}=t;let l;if(e.type==="extent"){const g=(e.xmin-o)/r,w=(e.xmax-o)/r,v=(u-e.ymax)/a,P=(u-e.ymin)/a;l=[[[g,v],[g,P],[w,P],[w,v],[g,v]]]}else l=e.rings.map(g=>g.map(([w,v])=>[(w-o)/r,(u-v)/a]));const p=document.createElement("canvas");p.width=s,p.height=n;const m=p.getContext("2d");m.fillStyle="#f00",m.beginPath(),l.forEach(g=>{m.moveTo(g[0][0],g[0][1]);for(let w=0;w<g.length;w++)m.lineTo(g[w][0],g[w][1]);m.closePath()}),m.fill();const f=m.getImageData(0,0,s,n).data,d=i.mask,y=s*n,x=new Uint8Array(y);for(let g=0;g<y;g++)d&&!d[g]||(x[g]=f[4*g+3]>127?255:0);return new b({pixelType:i.pixelType,width:s,height:n,mask:x,maskIsAlpha:!1,pixels:[...i.pixels]})}function On(i,t,e){const{width:s,height:n}=i,r=new Uint8Array(s*n),a=t.width/s,o=t.height/n;if(e.width/a<.5||e.height/o<.5)return new b({pixelType:i.pixelType,width:s,height:n,mask:r,pixels:[...i.pixels]});const{xmin:u,xmax:l,ymin:p,ymax:m}=t,{xmin:f,xmax:d,ymin:y,ymax:x}=e,g=Math.max(u,f),w=Math.min(l,d),v=Math.max(p,y),P=Math.min(m,x),A=.5*a,F=.5*o;if(w-g<A||P-v<F||w<u+A||g>l-A||v>m-F||P<p+F)return new b({pixelType:i.pixelType,width:s,height:n,mask:r,pixels:[...i.pixels]});const T=Math.max(0,(g-u)/a),N=Math.min(s,Math.max(0,(w-u)/a)),R=Math.max(0,(m-P)/o),C=Math.min(n,Math.max(0,(m-v)/o)),S=Math.round(T),_=Math.round(N)-1,G=Math.round(R),Q=Math.round(C)-1;if(S===_&&T%1>.5&&N%1<.5||G===Q&&R%1>.5&&C%1<.5)return new b({pixelType:i.pixelType,width:s,height:n,mask:r,pixels:[...i.pixels]});if(S===0&&G===0&&_===s&&Q===n)return i;const Ze=i.mask;for(let ie=G;ie<=Q;ie++)for(let ae=S;ae<=_;ae++){const Qe=ie*s+ae;r[Qe]=Ze?Ze[Qe]:255}return new b({pixelType:i.pixelType,width:s,height:n,mask:r,pixels:[...i.pixels]})}function Gn(i,t,e){const{width:s,height:n}=i,r=new Uint8Array(s*n),a=t.width/s,o=t.height/n,{xmin:u,ymax:l}=t,{paths:p}=e,m=i.mask;for(let f=0;f<p.length;f++){const d=p[f];for(let y=0;y<d.length-1;y++){const[x,g]=d[y],[w,v]=d[y+1];let P=Math.floor((l-g)/o),A=Math.floor((l-v)/o);if(A<P){const T=P;P=A,A=T}P=Math.max(0,P),A=Math.min(n-1,A);const F=(w-x)/(v-g);for(let T=P;T<=A;T++){const N=T===P?Math.max(g,v):(n+1-T)*o,R=T===A?Math.min(g,v):N-o;let C=Math.floor(v===g?(x-u)/a:(F*(N-g)+x-u)/a),S=Math.floor(v===g?(w-u)/a:(F*(R-g)+x-u)/a);if(S<C){const G=C;C=S,S=G}const _=T*s;C=Math.max(0,C),S=Math.min(s-1,S);for(let G=_+C;G<=_+S;G++)r[G]=m?m[G]:255}}}return new b({pixelType:i.pixelType,width:s,height:n,mask:r,pixels:[...i.pixels]})}function zn(i,t){const{extent:e}=Dn(i,t,new ne({x:i.pixelSize.x,y:i.pixelSize.y,spatialReference:i.spatialReference})),{extent:s}=i.extent;if(e.xmax=Math.min(e.xmax,s.xmax),e.ymax=Math.min(e.ymax,s.ymax),e.xmin<e.xmax&&e.ymin<e.ymax){const{x:n,y:r}=i.pixelSize,a=Math.round(e.width/n),o=Math.round(e.height/r);i.extent=e,i.width=a,i.height=o}}function Dn(i,t,e,s=!0){const{spatialReference:n}=i,{x:r,y:a}=jn(e,n);let o,u,l;const p=t.type==="extent"?t:t.extent;let{xmin:m,xmax:f,ymax:d,ymin:y}=p;const{xmin:x,ymax:g}=i.extent;return s?(m=x+(m>x?r*Math.round((m-x)/r):0),d=g-(d<g?a*Math.round((g-d)/a):0),f=x+(f>x?r*Math.round((f-x)/r):0),y=g-(y<g?a*Math.round((g-y)/a):0),o=new Rt({xmin:m,ymax:d,xmax:f,ymin:y,spatialReference:n}),u=Math.round(o.width/r),l=Math.round(o.height/a)):(u=Math.floor((f-m)/r+.8),l=Math.floor((d-y)/a+.8),m=x+(m>x?r*Math.floor((m-x)/r+.1):0),d=g-(d<g?a*Math.floor((g-d)/a+.1):0),f=m+u*r,y=d-l*a,o=new Rt({xmin:m,ymax:d,xmax:f,ymin:y,spatialReference:n})),{extent:o,width:u,height:l}}let Qt=class extends We{constructor(){super(...arguments),this.raster=void 0}};c([h({json:{write:!0}})],Qt.prototype,"raster",void 0),Qt=c([$("esri.layers.support.rasterFunctions.BaseFunctionArguments")],Qt);const z=Qt;var me;let It=me=class extends z{constructor(){super(...arguments),this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new me({raster:this.raster,raster2:this.raster2,operation:this.operation})}};c([h({json:{write:!0}})],It.prototype,"operation",void 0),c([h({json:{write:!0}})],It.prototype,"raster2",void 0),c([h({readOnly:!0})],It.prototype,"rasters",null),It=me=c([$("esri.layers.support.rasterFunctions.ArithmeticFunctionArguments")],It);const En=It,Un=new Set(["slope","aspect","curvature","hillshade","shadedrelief","statistics"]);let D=class extends We{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.rawSourceRasterInfos=null,this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const e=[t],{parameters:s}=t;let n=s.rasters||s.raster&&[s.raster];for(;n?.length;){e.unshift(...n);const u=[];for(let l=0;l<n.length;l++){const{parameters:p}=n[l],m=p.rasters||p.raster&&[p.raster];m?.length&&u.push(...m)}n=u}for(let u=e.length-1;u>=0;u--)e[u].isNoopProcess&&e.splice(u,1);let r=!1;for(let u=0;u<e.length;u++){const l=e[u];l.id=e.length-u-1;const{rasters:p}=l.parameters;r=r||p!=null&&p.length>1}const a=e.some(({name:u})=>Un.has(u.toLowerCase())),{rawSourceRasterInfos:o}=this;return{functions:e,hasBranches:r,hasFocalFunction:a,isSourceSingleBand:o?.[0]?.bandCount===1}}bind(t,e=!1,s=-1){this.id=s+1;const n=this._getRasterValues();let r=!0;for(let a=0;a<n.length;a++){const o=n[a];if(o!=null&&this._isRasterFunctionValue(o)){const u=o.bind(t,e,this.id+a);if(!u.success)return this._bindingResult=u,u;r=r&&u.supportsGPU}}return!this.rasterInfo||e?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.success&&this._patchRasterInfo(),this._bindingResult.supportsGPU=r&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const e=this._getRasterValues(),s=e.length===0?t.pixelBlocks??t.primaryPixelBlocks:e.map(n=>this._readRasterValue(n,t));return this._processPixels({...t,pixelBlocks:s})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let e;if(t.length>1){const r=t.map(o=>o.processInputBandIds()[0]);this.rawInputBandIds=r,this.isInputBandIdsSwizzled=this.rawInputBandIds.some((o,u)=>o!==u);const a=t.filter(o=>o.functionName==="ExtractBand");return a.length&&a.forEach((o,u)=>{o.isInputBandIdsSwizzled=!0,o.swizzledBandSelection=[u,u,u]}),this.rawInputBandIds}const s=t[0];if(s){if(e=s.processInputBandIds(),s.isInputBandIdsSwizzled)return this.rawInputBandIds=e,e}else{e=[];const{bandCount:r}=this.sourceRasterInfos[0];for(let a=0;a<r;a++)e.push(a)}const n=this._getInputBandIds(e);return this.isInputBandIdsSwizzled=n.some((r,a)=>r!==a),this.rawInputBandIds=n,this.rawInputBandIds}getPrimaryRasters(){const t=[],e=[];return this._getPrimaryRasters(this,t,e),{rasters:t,rasterIds:e}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:e,rasters:s}=this.functionArguments;return s&&Array.isArray(s)&&s.length?(t.rasters=s.map(n=>this._isRasterFunctionValue(n)?n.getWebGLProcessorDefinition():typeof n=="number"?{name:"Constant",parameters:{value:n},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:n},pixelType:"f32",id:-1,isNoopProcess:!1}),t.rasters.some(n=>n!=null)||(t.rasters=null)):this._isRasterFunctionValue(e)&&(t.raster=e.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getClippingGeometries(){const t=[];this.functionName==="Clip"&&t.push(this.functionArguments);const{raster:e,rasters:s}=this.functionArguments;if(s&&Array.isArray(s)&&s.length)s.forEach(n=>{if(this._isRasterFunctionValue(n)){const r=n.getClippingGeometries();t.push(...r)}});else if(this._isRasterFunctionValue(e)){const n=e.getClippingGeometries();t.push(...n)}return t}_getOutputPixelType(t){return this.outputPixelType==="unknown"?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_removeStatsHistColormapVAT(t){t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.multidimensionalInfo?.variables.forEach(e=>{e.statistics=void 0,e.histograms=void 0})}_getRasterValues(){const{rasterArgumentNames:t}=this;return t[0]==="rasters"?this.functionArguments.rasters??[]:t.flatMap(e=>this.functionArguments[e])}_getSourceRasterInfos(t){const e=this._getRasterValues(),{rasterInfos:s,rasterIds:n}=t;if(e.length===0)return s;const r=e.map(o=>o&&typeof o=="object"&&"bind"in o&&o.rasterInfo?o.rasterInfo:typeof o=="string"&&n.includes(o)?s[n.indexOf(o)]:typeof o!="number"?s[0]:void 0),a=r.find(o=>o)??s[0];return r.forEach((o,u)=>{o===void 0&&(r[u]=a)}),r}_getPrimaryRasterId(t){return t?.rasterId}_getPrimaryRasters(t,e=[],s=[]){for(let n=0;n<t.sourceRasters.length;n++){const r=t.sourceRasters[n];if(typeof r!="number")if("bind"in r)this._getPrimaryRasters(r,e,s);else{const a=r,o=this._getPrimaryRasterId(a);if(o==null)continue;s.includes(o)||(this.mainPrimaryRasterId===o?(e.unshift(a),s.unshift(o)):(e.push(a),s.push(o)))}}}_isRasterFunctionValue(t){return t!=null&&typeof t=="object"&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,e){const{primaryPixelBlocks:s}=e;if(t==null||t==="$$"){const n=s[0];return n==null?null:n.clone()}if(typeof t=="string"){const n=e.primaryRasterIds.indexOf(t);return n===-1?null:s[n]}if(typeof t=="number"){const n=s[0];if(n==null)return null;const{width:r,height:a,pixelType:o}=n,u=new Float32Array(r*a);u.fill(t);const l=this.sourceRasterInfos[0].bandCount,p=new Array(l).fill(u);return new b({width:r,height:a,pixelType:o,pixels:p})}return t.process(e)}_patchRasterInfo(){const{rasterInfo:t}=this;if(!t?.keyProperties)return;const{bandCount:e,keyProperties:s,statistics:n,histograms:r}=t,a=s.BandProperties;a&&a.length!==e&&(t.keyProperties={...s,BandProperties:void 0}),n&&n.length!==e&&(t.statistics=n.length>e?n.slice(0,e):null),r&&r.length!==e&&(t.histograms=r.length>e?r.slice(0,e):null),s.BAND_COUNT&&Number(s.BAND_COUNT)!==e&&(t.keyProperties={...s,BAND_COUNT:typeof s.BAND_COUNT=="string"?String(e):e})}};c([h({json:{write:!0}})],D.prototype,"functionName",void 0),c([h({json:{write:!0}})],D.prototype,"functionArguments",void 0),c([h()],D.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}}),$s(i=>i?.toLowerCase())],D.prototype,"outputPixelType",void 0),c([h({json:{write:!0}})],D.prototype,"mainPrimaryRasterId",void 0),c([h()],D.prototype,"sourceRasters",void 0),c([h({type:[mn],json:{write:!0}})],D.prototype,"sourceRasterInfos",void 0),c([h({json:{write:!0}})],D.prototype,"rasterInfo",void 0),c([h({json:{write:!0}})],D.prototype,"readingBufferSize",void 0),c([h({json:{write:!0}})],D.prototype,"id",void 0),c([h()],D.prototype,"isNoopProcess",void 0),c([h()],D.prototype,"supportsGPU",null),c([h()],D.prototype,"rawInputBandIds",void 0),c([h()],D.prototype,"rawSourceRasterInfos",void 0),c([h()],D.prototype,"isInputBandIdsSwizzled",void 0),c([h()],D.prototype,"swizzledBandSelection",void 0),c([h()],D.prototype,"isBranch",void 0),c([h({readOnly:!0})],D.prototype,"flatWebGLFunctionChain",null),c([h()],D.prototype,"_bindingResult",void 0),D=c([$("esri.layers.support.rasterFunctions.BaseRasterFunction")],D);const O=D,I={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},Vn={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65},W={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},K={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},Ln={majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75},Ms={setNull:50,conditional:78},ss={...Vn,...W,...K,...Ln,...Ms},Os=new Map([[K.acos,{domain:[0,Math.PI],isInteger:!1}],[K.asin,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[K.atan,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[K.cos,{domain:[-1,1],isInteger:!1}],[K.sin,{domain:[-1,1],isInteger:!1}],[W.booleanAnd,{domain:[0,1],isInteger:!0}],[W.booleanNot,{domain:[0,1],isInteger:!0}],[W.booleanOr,{domain:[0,1],isInteger:!0}],[W.booleanXOr,{domain:[0,1],isInteger:!0}],[W.equalTo,{domain:[0,1],isInteger:!0}],[W.notEqual,{domain:[0,1],isInteger:!0}],[W.greaterThan,{domain:[0,1],isInteger:!0}],[W.greaterThanEqual,{domain:[0,1],isInteger:!0}],[W.lessThan,{domain:[0,1],isInteger:!0}],[W.lessThanEqual,{domain:[0,1],isInteger:!0}],[W.isNull,{domain:[0,1],isInteger:!0}]]);function ns(i){return Os.get(i)}const rs=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function Wn(i,t=!1){const e=i.map(o=>o.mask),s=e.filter(o=>o!=null),n=i[0].pixels[0].length;if(s.length===0||t&&s.length!==e.length)return new Uint8Array(n).fill(255);const r=s[0],a=new Uint8Array(r);if(s.length===1)return a;if(!t){for(let o=1;o<s.length;o++){const u=s[o];for(let l=0;l<a.length;l++)a[l]&&(a[l]=u[l]?255:0)}return a}for(let o=1;o<s.length;o++){const u=s[o];for(let l=0;l<a.length;l++)a[l]===0&&(a[l]=u[l]?255:0)}return a}function Jn(i,t,e){const[s,n]=i,r=s.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)t&&!t[o]||(a[o]=s[o]+n[o]);return a}function Hn(i,t,e){const[s]=i,n=s.length,r=b.createEmptyBand("f32",n);return r.set(s),r}function qn(i,t,e){const[s]=i,n=s.length,r=b.createEmptyBand(e,n);for(let a=0;a<n;a++)t&&!t[a]||(r[a]=s[a]*s[a]);return r}function Xn(i,t,e){const[s,n]=i,r=s.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)t&&!t[o]||(a[o]=s[o]-n[o]);return a}function Kn(i,t,e){const[s,n]=i,r=s.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)t&&!t[o]||(a[o]=s[o]*n[o]);return a}function Yn(i,t,e){const[s]=i,n=s.length,r=b.createEmptyBand(e,n);for(let a=0;a<n;a++)t&&!t[a]||(r[a]=Math.sign(s[a])*Math.floor(Math.abs(s[a])));return r}function Gs(i,t,e){const[s,n]=i,r=s.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)t&&!t[o]||(a[o]=s[o]/n[o]);return a}function Zn(i,t,e){return Gs(i,t,"f32")}function Qn(i,t,e){const[s,n]=i,r=s.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)t&&!t[o]||(a[o]=Math.floor(s[o]/n[o]));return a}function tr(i,t,e,s){const n=i[0],r=n.length,a=b.createEmptyBand(e,r);if(s===K.atanh){for(let u=0;u<r;u++)if(t[u]){const l=n[u];Math.abs(l)>=1?t[u]=0:a[u]=Math.atanh(l)}return a}const o=s===K.asin?Math.asin:Math.acos;for(let u=0;u<r;u++)if(t[u]){const l=n[u];Math.abs(l)>1?t[u]=0:a[u]=o(l)}return a}function er(i,t,e,s){const[n]=i,r=n.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)t&&!t[o]||(a[o]=s(n[o]));return a}function sr(i,t,e,s){const[n,r]=i,a=n.length,o=b.createEmptyBand(e,a);for(let u=0;u<a;u++)t&&!t[u]||(o[u]=s(n[u],r[u]));return o}function nr(i,t,e){const[s,n]=i,r=s.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)t&&!t[o]||(a[o]=s[o]&n[o]);return a}function rr(i,t,e){const[s,n]=i,r=s.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)t&&!t[o]||(a[o]=s[o]<<n[o]);return a}function or(i,t,e){const[s]=i,n=s.length,r=b.createEmptyBand(e,n);for(let a=0;a<n;a++)t&&!t[a]||(r[a]=~s[a]);return r}function ir(i,t,e){const[s,n]=i,r=s.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)t&&!t[o]||(a[o]=s[o]|n[o]);return a}function ar(i,t,e){const[s,n]=i,r=s.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)t&&!t[o]||(a[o]=s[o]>>n[o]);return a}function ur(i,t,e){const[s,n]=i,r=s.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)t&&!t[o]||(a[o]=s[o]^n[o]);return a}function lr(i,t,e){const[s,n]=i,r=s.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)t&&!t[o]||(a[o]=s[o]&&n[o]?1:0);return a}function cr(i,t,e){const[s]=i,n=s.length,r=b.createEmptyBand(e,n);for(let a=0;a<n;a++)t&&!t[a]||(r[a]=s[a]?0:1);return r}function pr(i,t,e){const[s,n]=i,r=s.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)t&&!t[o]||(a[o]=s[o]||n[o]?1:0);return a}function mr(i,t,e){const[s,n]=i,r=s.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)t&&!t[o]||(a[o]=(s[o]?1:0)^(n[o]?1:0));return a}function hr(i,t,e){const[s,n]=i,r=s.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)t&&!t[o]||(a[o]=s[o]===n[o]?1:0);return a}function He(i,t,e,s){const[n]=i,r=n.length,a=b.createEmptyBand(e,r),o=s===Math.E;for(let u=0;u<r;u++)t&&!t[u]||(a[u]=o?Math.exp(n[u]):s**n[u]);return a}function fr(i,t,e){return He(i,t,e,10)}function dr(i,t,e){return He(i,t,e,2)}function gr(i,t,e){return He(i,t,e,Math.E)}function qe(i,t,e,s){const[n]=i,r=n.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)t&&!t[o]||(n[o]<=0?t[o]=0:a[o]=s(n[o]));return a}function yr(i,t,e){return qe(i,t,e,Math.log10)}function xr(i,t,e){return qe(i,t,e,Math.log2)}function wr(i,t,e){return qe(i,t,e,Math.log)}function vr(i,t,e){const[s,n]=i,r=s.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)t&&!t[o]||(a[o]=s[o]>n[o]?1:0);return a}function br(i,t,e){const[s,n]=i,r=s.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)t&&!t[o]||(a[o]=s[o]>=n[o]?1:0);return a}function Ar(i,t,e){const[s,n]=i,r=s.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)t&&!t[o]||(a[o]=s[o]<n[o]?1:0);return a}function Tr(i,t,e){const[s,n]=i,r=s.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)t&&!t[o]||(a[o]=s[o]<=n[o]?1:0);return a}function Pr(i,t,e){const[s]=i,n=s.length,r=b.createEmptyBand(e,n);if(!t)return r;for(let a=0;a<n;a++)r[a]=t[a]?0:1;return r}function $r(i,t,e){const[s,n]=i,r=s.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)t&&!t[o]||(a[o]=s[o]%n[o]);return a}function Fr(i,t,e){const[s]=i,n=s.length,r=b.createEmptyBand(e,n);for(let a=0;a<n;a++)t&&!t[a]||(r[a]=-s[a]);return r}function Nr(i,t,e){const[s,n]=i,r=s.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)t&&!t[o]||(a[o]=s[o]===n[o]?0:1);return a}function Rr(i,t,e){const[s,n]=i,r=s.length,a=b.createEmptyBand(e,r),o=new Uint8Array(r);for(let u=0;u<r;u++)t!=null&&!t[u]||s[u]!==0||(a[u]=n[u],o[u]=255);return{band:a,mask:o}}function os(i,t,e){const[s,n,r]=i,a=s.length,o=b.createEmptyBand(e,a);for(let u=0;u<a;u++)t&&!t[u]||(o[u]=s[u]?n[u]:r[u]);return o}function is(i,t,e){const s=i.length;if(s<2)return i[0];const[n]=i,r=n.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)if(!t||t[o]){let u=n[o];for(let l=1;l<s;l++){const p=i[l][o];u<p&&(u=p)}a[o]=u}return a}function as(i,t,e){const s=i.length;if(s<2)return i[0];const[n]=i,r=n.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)if(!t||t[o]){let u=n[o];for(let l=1;l<s;l++){const p=i[l][o];u>p&&(u=p)}a[o]=u}return a}function us(i,t,e){const s=i.length;if(s<2)return i[0];const[n]=i,r=n.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)if(!t||t[o]){let u=n[o],l=u;for(let p=1;p<s;p++){const m=i[p][o];l<m?l=m:u>m&&(u=m)}a[o]=l-u}return a}function ls(i,t,e){const s=i.length;if(s<2)return i[0];const[n]=i,r=n.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)if(!t||t[o]){let u=0;for(let l=0;l<s;l++)u+=i[l][o];a[o]=u/s}return a}function cs(i,t,e){const s=i.length;if(s<2)return i[0];const[n]=i,r=n.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)if(!t||t[o])for(let u=0;u<s;u++){const l=i[u];a[o]+=l[o]}return a}function ps(i,t,e){const s=i.length;if(s<2)return i[0];const[n]=i,r=n.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)if(!t||t[o]){const u=new Float32Array(s);let l=0;for(let m=0;m<s;m++){const f=i[m];l+=f[o],u[m]=f[o]}l/=s;let p=0;for(let m=0;m<s;m++)p+=(u[m]-l)**2;a[o]=Math.sqrt(p/s)}return a}function ms(i,t,e){const s=i.length;if(s<2)return i[0];const n=Math.floor(s/2),[r]=i,a=r.length,o=b.createEmptyBand(e,a),u=new Float32Array(s),l=s%2==1;for(let p=0;p<a;p++)if(!t||t[p]){for(let m=0;m<s;m++)u[m]=i[m][p];u.sort(),o[p]=l?u[n]:(u[n]+u[n-1])/2}return o}function zs(i,t,e){const[s,n]=i;if(n==null)return s;const r=s.length,a=b.createEmptyBand(e,r);for(let o=0;o<r;o++)t&&!t[o]||(a[o]=s[o]<n[o]?s[o]:n[o]);return a}function hs(i,t,e){const s=i.length;if(s<=2)return zs(i,t,e);const n=i[0].length,r=b.createEmptyBand(e,n),a=new Map;for(let o=0;o<n;o++)if(!t||t[o]){a.clear();for(let m=0;m<s;m++){const f=i[m][o];a.set(f,a.has(f)?a.get(f)+1:1)}let u=0,l=0;const p=[];for(const m of a.keys())u=a.get(m),u>l?(l=u,p.length=0,p.push(m)):u===l&&p.push(m);p.length>1&&p.sort((m,f)=>m-f),r[o]=p[0]}return r}function fs(i,t,e){const s=i.length;if(s<=2)return zs(i,t,e);const n=i[0].length,r=b.createEmptyBand(e,n),a=new Map;for(let o=0;o<n;o++)if(!t||t[o]){a.clear();for(let m=0;m<s;m++){const f=i[m][o];a.set(f,a.has(f)?a.get(f)+1:1)}let u=0,l=i.length;const p=[];for(const m of a.keys())u=a.get(m),u<l?(l=u,p.length=0,p.push(m)):u===l&&p.push(m);p.length>1&&p.sort((m,f)=>m-f),r[o]=p[0]}return r}function ds(i,t,e){const s=i.length;if(s<2)return i[0];const[n]=i,r=n.length,a=b.createEmptyBand(e,r),o=new Set;for(let u=0;u<r;u++)if(!t||t[u]){let l;o.clear();for(let p=0;p<s;p++)l=i[p][u],o.add(l);a[u]=o.size}return a}const E=new Map,oe=new Map,k=new Map,M=new Map;function kr(){E.size||(E.set(4,Math.sqrt),E.set(6,Math.acos),E.set(7,Math.asin),E.set(8,Math.atan),E.set(9,Math.atanh),E.set(10,Math.abs),E.set(21,Math.cos),E.set(22,Math.cosh),E.set(48,Math.floor),E.set(49,Math.ceil),E.set(51,Math.sin),E.set(52,Math.sinh),E.set(56,Math.tan),E.set(57,Math.tanh),E.set(59,Math.acosh),E.set(60,Math.asinh),E.set(65,Math.floor),oe.set(5,Math.pow),oe.set(61,Math.atan2),k.set(1,Jn),k.set(2,Xn),k.set(3,Kn),k.set(11,nr),k.set(12,rr),k.set(13,or),k.set(14,ir),k.set(15,ar),k.set(16,ur),k.set(17,lr),k.set(18,cr),k.set(19,pr),k.set(20,mr),k.set(23,Gs),k.set(24,hr),k.set(25,gr),k.set(26,fr),k.set(27,dr),k.set(28,vr),k.set(29,br),k.set(30,Yn),k.set(31,Pr),k.set(32,Hn),k.set(33,Ar),k.set(34,Tr),k.set(35,wr),k.set(36,yr),k.set(37,xr),k.set(44,$r),k.set(45,Fr),k.set(46,Nr),k.set(53,qn),k.set(64,Zn),k.set(65,Qn),k.set(76,os),k.set(78,os),M.set(38,hs),M.set(39,is),M.set(40,ls),M.set(41,ms),M.set(42,as),M.set(43,fs),M.set(47,us),M.set(54,ps),M.set(55,cs),M.set(58,ds),M.set(66,hs),M.set(67,is),M.set(68,ls),M.set(69,ms),M.set(70,as),M.set(71,fs),M.set(72,us),M.set(73,ps),M.set(74,cs),M.set(75,ds))}function Ds(i,t,e={}){kr();let s=Wn(i,t>=66&&t<=75);const{outputPixelType:n="f32"}=e,r=!M.has(t)||e.processAsMultiband,a=r?i[0].pixels.length:1,o=[];for(let l=0;l<a;l++){const p=M.has(t)&&!r?i.flatMap(d=>d.pixels):i.map(d=>d.pixels[l]);let m,f=!0;if(t===Ms.setNull){const d=Rr(p,s,n);m=d.band,s=d.mask,f=!1}else k.has(t)?m=k.get(t)(p,s,"f64"):E.has(t)?m=t===K.asin||t===K.acos||t===K.atanh?tr(p,s,"f64",t):er(p,s,"f64",E.get(t)):oe.has(t)?m=sr(p,s,"f64",oe.get(t)):M.has(t)?m=M.get(t)(p,s,"f64"):(m=p[0],f=!1);if(f&&t!==W.isNull&&!Os.has(t)){const d=b.createEmptyBand(n,m.length);s||(s=new Uint8Array(m.length).fill(255)),Nn(m,s),Bs(m,s,n,d),m=d}o.push(m)}const u=i[0];return new b({width:u.width,height:u.height,pixelType:n,mask:t===W.isNull?null:s,pixels:o})}function Cr(i,t,e){return Ds(i,t=[null,1,2,3,23,5,44][t]??1,{outputPixelType:e})}let _t=class extends O{constructor(){super(...arguments),this.functionName="Arithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{operation:t}=this.functionArguments;if(t<1||t>6)return{success:!1,supportsGPU:!1,error:"unsupported operation"};const e=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:e.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e?.[0]==null||e?.[1]==null?null:Cr(e,this.functionArguments.operation,this.outputPixelType)}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=["","plus","minus","times","divide","power","mod"][t],s=this.outputPixelType??"f32";let[n,r]=St(s);const a=L(s);return a&&(n-=1e-4,r+=1e-4),{imageCount:2,operationName:e,domainRange:[n,r],isOutputRounded:a}}};c([h({json:{write:!0,name:"rasterFunction"}})],_t.prototype,"functionName",void 0),c([h({type:En,json:{write:!0,name:"rasterFunctionArguments"}})],_t.prototype,"functionArguments",void 0),c([h()],_t.prototype,"rasterArgumentNames",void 0),_t=c([$("esri.layers.support.rasterFunctions.ArithmeticFunction")],_t);const Sr=_t;var he;let fe=he=class extends z{clone(){return new he({raster:this.raster})}};fe=he=c([$("esri.layers.support.rasterFunctions.AspectFunctionArguments")],fe);const Ir=fe;let lt=class extends O{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.isGCS=t.spatialReference?.isGeographic??!1,this.outputPixelType=this._getOutputPixelType("f32");const e=t.clone();return e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),e.statistics=[{min:-1,max:360,avg:180,stddev:30}],e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{extent:s,primaryPixelSizes:n}=t,r=n?.[0],a=r??(s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1});return hn(e,{resolution:a})}};c([h({json:{write:!0,name:"rasterFunction"}})],lt.prototype,"functionName",void 0),c([h({type:Ir,json:{write:!0,name:"rasterFunctionArguments"}})],lt.prototype,"functionArguments",void 0),c([h()],lt.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],lt.prototype,"isGCS",void 0),lt=c([$("esri.layers.support.rasterFunctions.AspectFunction")],lt);const _r=lt,Br=new Set(["+","-","*","/","(",")"]);function jr(i,t){(i=i.replaceAll(" ","")).startsWith("-")&&(i="0"+i),i.startsWith("+")&&(i=i.slice(1));const e=i.split(""),s=[],n=[];let r="";for(let a=0;a<e.length;a++){const o=e[a];Br.has(o)?(r.length&&n.push(gs(r,t)),s.push(o),r=""):r=r.concat(o)}return r.length&&n.push(gs(r,t)),{ops:s,nums:n}}function gs(i,t){return i.toLowerCase().startsWith("b")?t[parseInt(i.slice(1),10)-1]:parseFloat(i)}function Mr(i,t,e,s){if(typeof e=="number"&&typeof s=="number")return e+s;let n,r,a;typeof e=="number"?(a=s,n=a.length,r=new Float32Array(n),r.fill(e)):(n=e.length,r=e,s.constructor===Number?(a=new Float32Array(n),a.fill(s)):a=s);const o=new Float32Array(n);switch(t){case"+":for(let u=0;u<n;u++)(i==null||i[u])&&(o[u]=r[u]+a[u]);break;case"-":for(let u=0;u<n;u++)(i==null||i[u])&&(o[u]=r[u]-a[u]);break;case"*":for(let u=0;u<n;u++)(i==null||i[u])&&(o[u]=r[u]*a[u]);break;case"/":for(let u=0;u<n;u++)(i==null||i[u])&&a[u]&&(o[u]=r[u]/a[u]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return o}function Or(i,t){i.splice(t,1);let e=0,s=0;do{e=0,s=0;for(let n=0;n<i.length;n++)if(i[n]==="(")e=n;else if(i[n]===")"){s=n;break}s===e+1&&i.splice(e,2)}while(s===e+1);return i}function Gr(i){if(i.length===1)return{opIndex:0,numIndex:0};let t=0,e=0;for(let a=0;a<i.length;a++)if(i[a]==="(")t=a;else if(i[a]===")"){e=a;break}const s=e===0?i:i.slice(t+1,e);let n=-1;for(let a=0;a<s.length;a++)if(s[a]==="*"||s[a]==="/"){n=a;break}if(n>-1)e>0&&(n+=t+1);else{for(let a=0;a<s.length;a++)if(s[a]==="+"||s[a]==="-"){n=a;break}e>0&&(n+=t+1)}let r=0;for(let a=0;a<n;a++)i[a]==="("&&r++;return{opIndex:n,numIndex:n-r}}function zr(i,t,e){let s,{ops:n,nums:r}=jr(e,t);if(n.length===0){const a=r.length===1?r[0]:t[0];if(a instanceof Float32Array)return[a];const o=new Float32Array(t[0].length);return typeof a=="number"?o.fill(a):o.set(a),[o]}for(;n.length>0;){const{numIndex:a,opIndex:o}=Gr(n);if(s=Mr(i,n[o],r[a],r[a+1]),n.length===1)break;n=Or(n,o),r.splice(a,2,s)}return[s]}const Dr=new Z({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function Er(i,t){if(!Ks(i))return i;const{equation:e,method:s}=t,n=t.bandIndexes.map(f=>f-1),{pixels:r,mask:a}=i;let o;switch(s){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":o=ys(a,r[n[0]],r[n[1]]);break;case"ndwi":o=ys(a,r[n[1]],r[n[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":o=Vr(a,r[n[0]],r[n[1]]);break;case"ci-g":case"ci-re":o=Lr(a,r[n[0]],r[n[1]]);break;case"savi":o=Wr(a,r[n[0]],r[n[1]],n[2]+1);break;case"tsavi":o=Jr(a,r[n[0]],r[n[1]],n[2]+1,n[3]+1,n[4]+1);break;case"msavi":o=Hr(a,r[n[0]],r[n[1]]);break;case"gemi":o=qr(a,r[n[0]],r[n[1]]);break;case"pvi":o=Xr(a,r[n[0]],r[n[1]],n[2]+1,n[3]+1);break;case"gvitm":o=Kr(a,[r[n[0]],r[n[1]],r[n[2]],r[n[3]],r[n[4]],r[n[5]]]);break;case"sultan":o=Yr(a,[r[n[0]],r[n[1]],r[n[2]],r[n[3]],r[n[4]]]);break;case"vari":o=Zr(a,[r[n[0]],r[n[1]],r[n[2]]]);break;case"mtvi2":o=Qr(a,[r[n[0]],r[n[1]],r[n[2]]]);break;case"rtvi-core":o=to(a,[r[n[0]],r[n[1]],r[n[2]]]);break;case"evi":o=eo(a,[r[n[0]],r[n[1]],r[n[2]]]);break;case"wndwi":o=so(a,[r[n[0]],r[n[1]],r[n[2]]],n[3]?n[3]+1:.5);break;case"bai":o=no(a,r[n[0]],r[n[1]]);break;case"custom":o=zr(a,r,e);break;default:return i}const{outputPixelType:u="f32"}=t,l=u!=null&&L(u);let p;a?(p=new Uint8Array(i.width*i.height),p.set(a)):l&&(p=new Uint8Array(i.width*i.height).fill(255)),l&&(o=o.map(f=>{const d=b.createEmptyBand(u,f.length);return Bs(f,p,u,d),d}));const m=new b({width:i.width,height:i.height,pixelType:u,pixels:o,mask:p});return m.updateStatistics(),m}function Ur(i,t,e,s){const{mask:n,pixels:r,width:a,height:o}=i,u=r[e],l=r[t],p=l.length,m=s?new Uint8Array(p):new Float32Array(p),f=s?100:1,d=s?100.5:0;for(let x=0;x<p;x++)if(n==null||n[x]){const g=u[x],w=l[x],v=g+w;v&&(m[x]=(g-w)/v*f+d)}const y=new b({width:a,height:o,mask:n,pixelType:s?"u8":"f32",pixels:[m]});return y.updateStatistics(),y}function U(i){const t=new Float32Array(9);return t[3*i[0]]=1,t[3*i[1]+1]=1,t[3*i[2]+2]=1,t}function ys(i,t,e){const s=e.length,n=new Float32Array(s);for(let r=0;r<s;r++)if(i==null||i[r]){const a=t[r],o=e[r],u=a+o;u&&(n[r]=(a-o)/u)}return[n]}function Vr(i,t,e){const s=e.length,n=new Float32Array(s);for(let r=0;r<s;r++)if(i==null||i[r]){const a=t[r],o=e[r];o&&(n[r]=a/o)}return[n]}function Lr(i,t,e){const s=t.length,n=new Float32Array(s);for(let r=0;r<s;r++)if(i==null||i[r]){const a=t[r],o=e[r];o&&(n[r]=a/o-1)}return[n]}function Wr(i,t,e,s){const n=e.length,r=new Float32Array(n);for(let a=0;a<n;a++)if(i==null||i[a]){const o=e[a],u=t[a],l=u+o+s;l&&(r[a]=(u-o)/l*(1+s))}return[r]}function Jr(i,t,e,s,n,r){const a=e.length,o=new Float32Array(a),u=-n*s+r*(1+s*s);for(let l=0;l<a;l++)if(i==null||i[l]){const p=e[l],m=t[l],f=n*m+p+u;f&&(o[l]=s*(m-s*p-n)/f)}return[o]}function Hr(i,t,e){const s=e.length,n=new Float32Array(s);for(let r=0;r<s;r++)if(i==null||i[r]){const a=e[r],o=t[r],u=2*o+1;n[r]=.5*(u-Math.sqrt(u*u-8*(o-a)))}return[n]}function qr(i,t,e){const s=e.length,n=new Float32Array(s);for(let r=0;r<s;r++)if(i==null||i[r]){const a=e[r],o=t[r];if(a!==1&&o+a+.5!==0){const u=(2*(o*o-a*a)+1.5*o+.5*a)/(o+a+.5);n[r]=u*(1-.25*u)-(a-.125)/(1-a)}}return[n]}function Xr(i,t,e,s,n){const r=e.length,a=new Float32Array(r),o=1/Math.sqrt(1+s*s);for(let u=0;u<r;u++)if(i==null||i[u]){const l=e[u],p=t[u];a[u]=(p-s*l-n)*o}return[a]}function Kr(i,t){const[e,s,n,r,a,o]=t,u=e.length,l=new Float32Array(u);for(let p=0;p<u;p++)(i==null||i[p])&&(l[p]=-.2848*e[p]-.2435*s[p]-.5436*n[p]+.7243*r[p]+.084*a[p]-.18*o[p]);return[l]}function Yr(i,t){const[e,s,n,r,a]=t,o=e.length,u=new Float32Array(o),l=new Float32Array(o),p=new Float32Array(o);for(let m=0;m<o;m++)(i==null||i[m])&&(u[m]=a[m]?r[m]/a[m]*100:0,l[m]=e[m]?r[m]/e[m]*100:0,p[m]=n[m]?s[m]/n[m]*(r[m]/n[m])*100:0);return[u,l,p]}function Zr(i,t){const[e,s,n]=t,r=e.length,a=new Float32Array(r);for(let o=0;o<r;o++)if(i==null||i[o])for(o=0;o<r;o++){const u=e[o],l=s[o],p=l+u-n[o];p&&(a[o]=(l-u)/p)}return[a]}function Qr(i,t){const[e,s,n]=t,r=e.length,a=new Float32Array(r);for(let o=0;o<r;o++)if(i==null||i[o])for(o=0;o<r;o++){const u=e[o],l=s[o],p=n[o],m=Math.sqrt((2*u+1)**2-(6*u-5*Math.sqrt(l))-.5);if(m){const f=1.5*(1.2*(u-p)-2.5*(l-p));a[o]=f/m}}return[a]}function to(i,t){const[e,s,n]=t,r=e.length,a=new Float32Array(r);for(let o=0;o<r;o++)if(i==null||i[o])for(o=0;o<r;o++){const u=e[o],l=s[o],p=n[o];a[o]=100*(u-l)-10*(u-p)}return[a]}function eo(i,t){const[e,s,n]=t,r=e.length,a=new Float32Array(r);for(let o=0;o<r;o++)if(i==null||i[o])for(o=0;o<r;o++){const u=e[o],l=s[o],p=u+6*l-7.5*n[o]+1;p&&(a[o]=2.5*(u-l)/p)}return[a]}function so(i,t,e=.5){const[s,n,r]=t,a=n.length,o=new Float32Array(a);for(let u=0;u<a;u++)if(i==null||i[u])for(u=0;u<a;u++){const l=s[u],p=n[u],m=r[u],f=l+e*p+(1-e)*m;f&&(o[u]=(l-e*p-(1-e)*m)/f)}return[o]}function no(i,t,e){const s=e.length,n=new Float32Array(s);for(let r=0;r<s;r++)if(i==null||i[r])for(r=0;r<s;r++){const a=(.1-t[r])**2+(.06-e[r])**2;a&&(n[r]=1/a)}return[n]}var de;let Jt=de=class extends z{constructor(){super(...arguments),this.method="custom"}clone(){return new de({method:this.method,bandIndexes:this.bandIndexes,raster:J(this.raster)})}};c([h({json:{type:String,write:!0}})],Jt.prototype,"bandIndexes",void 0),c([H(Dr)],Jt.prototype,"method",void 0),Jt=de=c([$("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],Jt);const ro=Jt,oo=new Set(["vari","mtvi2","rtvi-core","evi"]);let Bt=class extends O{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0];if(t.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const e=t.clone();return e.pixelType=this.outputPixelType,e.bandCount=this.functionArguments.method==="sultan"?3:1,this._removeStatsHistColormapVAT(e),e.keyProperties={...e.keyProperties,BandProperties:void 0},this.rasterInfo=e,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return e;const{method:s,bandIndexes:n}=this.functionArguments,r=n.split(" ").map(a=>parseFloat(a));return Er(e,{method:s,bandIndexes:r,equation:n,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map(o=>parseFloat(o)-1);t.length===2&&t.push(0);const e=this.isInputBandIdsSwizzled?[0,1,2]:t;let s,n;const r=new Float32Array(3),{method:a}=this.functionArguments;switch(a){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":s=U([e[0],e[1],0]),n="ndxi";break;case"ndwi":s=U([e[1],e[0],0]),n="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":s=U([e[0],e[1],0]),n="sr";break;case"ci-g":case"ci-re":s=U([e[0],e[1],0]),n="ci";break;case"savi":s=U([e[0],e[1],0]),n="savi",r[0]=t[2]+1;break;case"tsavi":s=U([e[0],e[1],0]),n="tsavi",r[0]=t[2]+1,r[1]=t[3]+1,r[2]=t[4]+1;break;case"msavi":s=U([e[0],e[1],0]),n="msavi";break;case"gemi":s=U([e[0],e[1],0]),n="gemi";break;case"pvi":s=U([e[0],e[1],0]),n="tsavi",r[0]=t[2]+1,r[1]=t[3]+1;break;case"vari":s=U([e[0],e[1],e[2]]),n="vari";break;case"mtvi2":s=U([e[0],e[1],e[2]]),n="mtvi";break;case"rtvi-core":s=U([e[0],e[1],e[2]]),n="rtvicore";break;case"evi":s=U([e[0],e[1],e[2]]),n="evi";break;case"wndwi":s=U([e[0],e[1],0]),n="wndwi",r[0]=t[3]?t[3]+1:.5;break;case"bai":s=U([e[1],e[0],0]),n="bai";break;default:s=U([0,1,2]),n="custom"}return{bandIndexMat3:s,indexType:n,adjustments:r,isOutputRounded:L(this.outputPixelType)}}_getInputBandIds(t){if(this.functionArguments.method==="custom")return t;const e=this.functionArguments.bandIndexes.split(" ").map(o=>parseFloat(o)-1),s=t.length,n=e.map(o=>o>=s?s-1:o),r=oo.has(this.functionArguments.method)?3:2,a=n.slice(0,r).map(o=>t[o]);return a.length===2&&a.push(0),a}};c([h({json:{write:!0,name:"rasterFunction"}})],Bt.prototype,"functionName",void 0),c([h({type:ro,json:{write:!0,name:"rasterFunctionArguments"}})],Bt.prototype,"functionArguments",void 0),c([h()],Bt.prototype,"rasterArgumentNames",void 0),Bt=c([$("esri.layers.support.rasterFunctions.BandArithmeticFunction")],Bt);const io=Bt;var ge;const xs=new Z({1:"outside",2:"inside"},{useNumericKeys:!0});let Ht=ge=class extends z{constructor(){super(...arguments),this.clippingType="outside"}clone(){return new ge({clippingGeometry:this.clippingGeometry.clone(),clippingType:this.clippingType})}};c([h({types:Hs,json:{read:qs,write:!0}})],Ht.prototype,"clippingGeometry",void 0),c([h({json:{read:xs.read,write:xs.write}})],Ht.prototype,"clippingType",void 0),Ht=ge=c([$("esri.layers.support.rasterFunctions.ClipFunctionArguments")],Ht);const ao=Ht;let ct=class extends O{constructor(){super(...arguments),this.functionName="Clip",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(t.pixelType),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{functionArguments:e}=this,{clippingGeometry:s,clippingType:n}=e;if(!s)return{success:!1,supportsGPU:!1,error:"missing clipping geometry"};if(n==="outside")try{const{spatialReference:r}=t,a=s.type==="extent"?kn(s,r):Cn(s,r).extent;a&&zn(t,a)}catch{}return{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}_getWebGLParameters(){const{clippingGeometry:t,clippingType:e}=this.functionArguments;return{clippingGeometry:t.toJSON(),clippingType:e}}};c([h({json:{write:!0,name:"rasterFunction"}})],ct.prototype,"functionName",void 0),c([h({type:ao,json:{write:!0,name:"rasterFunctionArguments"}})],ct.prototype,"functionArguments",void 0),c([h()],ct.prototype,"rasterArgumentNames",void 0),c([h()],ct.prototype,"isNoopProcess",void 0),ct=c([$("esri.layers.support.rasterFunctions.ClipFunction")],ct);const uo=ct;var ye;let Y=ye=class extends z{castColormapName(i){if(!i)return null;const t=i.toLowerCase();return fn.includes(t)?t:null}readColorRamp(i){return js(i)}readColorRampName(i,t){if(!i)return null;const e=kt.jsonValues.find(s=>s.toLowerCase()===i.toLowerCase());return e?kt.fromJSON(e):null}clone(){return new ye({colormap:J(this.colormap),colormapName:this.colormapName,colorRamp:this.colorRamp?.clone(),colorRampName:this.colorRampName})}};c([h({type:[[Number]],json:{write:!0}})],Y.prototype,"colormap",void 0),c([h({type:String,json:{write:!0}})],Y.prototype,"colormapName",void 0),c([$s("colormapName")],Y.prototype,"castColormapName",null),c([h({types:Bn,json:{write:!0}})],Y.prototype,"colorRamp",void 0),c([Ct("colorRamp")],Y.prototype,"readColorRamp",null),c([h({type:kt.apiValues,json:{type:kt.jsonValues,write:kt.write}})],Y.prototype,"colorRampName",void 0),c([Ct("colorRampName")],Y.prototype,"readColorRampName",null),Y=ye=c([$("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],Y);const lo=Y,co=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],po=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function Xe(i,t){const e=[],s=[];for(let r=0;r<i.length-1;r++)e.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:i[r].slice(1),toColor:i[r+1].slice(1)}),s.push(i[r+1][0]-i[r][0]);const n=i[i.length-1][0];return ks({type:"multipart",colorRamps:e},{numColors:n,weights:t=t??s})}function mo(){return Xe([[0,0,191,191],[51,0,0,255],[102,255,0,255],[153,255,0,127],[204,191,63,127],[256,20,20,20]])}function ho(){const i=Xe([[0,255,255,255],[70,0,255,0],[80,205,173,193],[100,150,150,150],[110,120,51,100],[130,120,100,200],[140,28,3,144],[160,6,0,55],[180,10,25,30],[201,6,7,27]]);for(let t=i.length;t<256;t++)i.push([6,27,7]);return i}function fo(){return ks({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]})}function go(){const i=[];for(let t=0;t<256;t++){const e=[];for(let s=0;s<3;s++)e.push(Math.round(255*Math.random()));i.push(e)}return i}function yo(){return Xe([[0,38,41,54],[69,79,82,90],[131,156,156,156],[256,253,253,241]],[.268,.238,.495])}function xo(i){let t;switch(i){case"elevation":t=mo();break;case"gray":t=fo();break;case"hillshade":t=yo();break;case"ndvi":t=co;break;case"ndvi2":t=ho();break;case"ndvi3":t=po;break;case"random":t=go()}return t?(t=t.map((e,s)=>[s,...e]),t):null}let tt=class extends O{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:e,colormapName:s,colorRamp:n,colorRampName:r}=this.functionArguments;if(!e?.length)if(n)this.colorRamp=n,e=pe(n,{interpolateAlpha:!0});else if(r){const u=Cs(r);u&&(e=pe(u),this.colorRamp=js(u))}else s&&(e=xo(s));if(!e?.length)return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};const a=this._getOutputPixelType(t.pixelType);this.outputPixelType=a.startsWith("f")?"s32":a;const o=t.clone();return o.pixelType=this.outputPixelType,o.colormap=e,o.bandCount=1,this.rasterInfo=o,{success:!0,supportsGPU:!0}}_processPixels(t){let e=t.pixelBlocks?.[0];return!e||L(e.pixelType)||(e=e.clone(),e.clamp(this.outputPixelType)),e}};c([h({json:{write:!0,name:"rasterFunction"}})],tt.prototype,"functionName",void 0),c([h({type:lo,json:{write:!0,name:"rasterFunctionArguments"}})],tt.prototype,"functionArguments",void 0),c([h()],tt.prototype,"rasterArgumentNames",void 0),c([h()],tt.prototype,"isNoopProcess",void 0),c([h({json:{write:!0}})],tt.prototype,"indexedColormap",void 0),c([h()],tt.prototype,"colorRamp",void 0),tt=c([$("esri.layers.support.rasterFunctions.ColormapFunction")],tt);const wo=tt;var xe;let we=xe=class extends z{clone(){return new xe({raster:this.raster})}};we=xe=c([$("esri.layers.support.rasterFunctions.ColormapToRGBFunctionArguments")],we);const vo=we;let pt=class extends O{constructor(){super(...arguments),this.functionName="ColormapToRGB",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||!t.colormap?.length)return{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: source data must be single band with a colormap"};const e=t.clone();e.pixelType=this.outputPixelType=this._getOutputPixelType("u8"),this._removeStatsHistColormapVAT(e),e.bandCount=3,e.statistics=[{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20}],this.rasterInfo=e;const s=[...t.colormap].sort((a,o)=>a[0]-o[0]),{indexedColormap:n,offset:r}=Fs({colormap:s});return n?(this.lookup={indexedColormap:n,offset:r},{success:!0,supportsGPU:Ss(n)}):{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: the colormap is not supported"}}_processPixels(t){let e=t.pixelBlocks?.[0];if(!e||!this.lookup)return e;e=e.clone();const s=e.pixels[0],n=e.mask??new Uint8Array(s.length).fill(255),r=new Uint8Array(s.length),a=new Uint8Array(s.length),o=new Uint8Array(s.length),{indexedColormap:u,offset:l}=this.lookup,p=u.length;for(let m=0;m<s.length;m++)if(n[m]){let f=4*(s[m]-l);f<0||f>p-4?n[m]=0:(r[m]=u[f++],a[m]=u[f++],o[m]=u[f++])}return e.pixels=[r,a,o],e.statistics=[new ue(0,255),new ue(0,255),new ue(0,255)],e.pixelType=this.outputPixelType,e}_getWebGLParameters(){return this.lookup}};c([h({json:{write:!0,name:"rasterFunction"}})],pt.prototype,"functionName",void 0),c([h({type:vo,json:{write:!0,name:"rasterFunctionArguments"}})],pt.prototype,"functionArguments",void 0),c([h()],pt.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],pt.prototype,"lookup",void 0),pt=c([$("esri.layers.support.rasterFunctions.ColormapToRGBFunction")],pt);const bo=pt;var ve;let qt=ve=class extends z{constructor(){super(...arguments),this.rasters=[]}writeRasters(i,t){t.rasters=i.map(e=>typeof e=="number"||typeof e=="string"?e:e.toJSON())}clone(){return new ve({rasters:J(this.rasters)})}};c([h({json:{write:!0}})],qt.prototype,"rasters",void 0),c([Lt("rasters")],qt.prototype,"writeRasters",null),qt=ve=c([$("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],qt);const Ao=qt;let jt=class extends O{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();if(s.attributeTable=null,s.colormap=null,s.pixelType=this.outputPixelType,s.bandCount=t.map(({bandCount:r})=>r).reduce((r,a)=>r+a),t.every(({statistics:r})=>r!=null&&r.length)){const r=[];t.forEach(({statistics:a})=>a!=null&&r.push(...a)),s.statistics=r}if(t.every(({histograms:r})=>r!=null&&r.length)){const r=[];t.forEach(({histograms:a})=>a!=null&&r.push(...a)),s.histograms=r}s.multidimensionalInfo&&s.multidimensionalInfo.variables.forEach(r=>{const a=t.map(l=>l.multidimensionalInfo?.variables.find(({name:p})=>p===r.name)),o=a.map(l=>l?.statistics?.length?l.statistics:null),u=a.map(l=>l?.histograms?.length?l.histograms:null);r.statistics=o.every(l=>l!=null)?o.flat():null,r.histograms=u.every(l=>l!=null)?u.flat():null}),s.bandCount>1&&(s.colormap=null,s.attributeTable=null);const n=t.every(r=>r.keyProperties.BandProperties?.length)?t.flatMap(r=>r.keyProperties.BandProperties):void 0;return s.keyProperties={...s.keyProperties,BandProperties:n},this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e?e?.[0]==null?null:Ys(e):null}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};c([h({json:{write:!0,name:"rasterFunction"}})],jt.prototype,"functionName",void 0),c([h({type:Ao,json:{write:!0,name:"rasterFunctionArguments"}})],jt.prototype,"functionArguments",void 0),c([h()],jt.prototype,"rasterArgumentNames",void 0),jt=c([$("esri.layers.support.rasterFunctions.CompositeBandFunction")],jt);const To=jt,Po=new Z({0:"difference",1:"relative-difference",2:"categorical",3:"euclidean-distance",4:"angle-difference",5:"band-with-most-change"},{useNumericKeys:!0}),$o=new Z({0:"all",1:"changed",2:"unchanged"},{useNumericKeys:!0});function Fo(i,t,e,s){const[n,r]=i,a=L(e)&&!L(n.pixelType)&&!L(r.pixelType),o=[n.mask,r.mask].filter(y=>y),u=b.combineBandMasks(o),l=i.map(y=>y.pixels[0]),{width:p,height:m}=n,f=b.createEmptyBand(e,p*m);switch(t){case"difference":case"relative-difference":No({bands:l,mask:u,outBand:f,isRoundingNeeded:a,isRelative:t==="relative-difference"});break;case"categorical":Ro({bands:l,mask:u,outBand:f,...s});break;case"euclidean-distance":ko({pixels:i.map(y=>y.pixels),mask:u,outBand:f});break;case"angle-difference":Co({pixels:i.map(y=>y.pixels),mask:u,outBand:f});break;case"band-with-most-change":So({pixels:i.map(y=>y.pixels),mask:u,outBand:f})}const d=new b({width:p,height:m,pixels:[f],pixelType:e,mask:u});return d.updateStatistics(),d}function No(i){const{bands:[t,e],mask:s,isRelative:n,isRoundingNeeded:r,outBand:a}=i,o=t.length;for(let u=0;u<o;u++)if(!s||s[u]){let l=t[u]-e[u];if(n){const p=Math.max(Math.abs(t[u])-Math.abs(e[u]));l=p>0?l/p:0}a[u]=r?Math.round(l):l}}function Ro(i){const{bands:[t,e],categoryIndexLookups:[s,n],classNames:[r,a],mask:o,keepMethod:u,outBand:l}=i,p=t.length,m=r.length,f=a.length,d=m*f,y=d+1,x=d+2;for(let g=0;g<p;g++)if(!o||o[g]){const w=t[g],v=e[g],P=s[w],A=n[v],F=r[P],T=a[A];l[g]=P==null||A==null?d:u==="changed"&&F===T?y:u==="unchanged"&&F!==T?x:P*f+A}}function ko(i){const{pixels:[t,e],mask:s,outBand:n}=i,r=t[0].length,a=t.length;for(let o=0;o<r;o++)if(!s||s[o]){let u=0;for(let l=0;l<a;l++){const p=t[l][o]-e[l][o];u+=p*p}n[o]=Math.sqrt(u)}}function Co(i){const{pixels:[t,e],mask:s,outBand:n}=i,r=t[0].length,a=t.length;for(let o=0;o<r;o++)if(!s||s[o]){let u=0,l=0,p=0;for(let f=0;f<a;f++){const d=t[f][o],y=e[f][o];u+=d*y,l+=d*d,p+=y*y}const m=Math.sqrt(l*p);n[o]=m?Math.acos(u/m):1.5707963267948966}}function So(i){const{pixels:[t,e],mask:s,outBand:n}=i,r=t[0].length,a=t.length;for(let o=0;o<r;o++)if(!s||s[o]){let u=0,l=0;for(let p=0;p<a;p++){const m=Math.abs(t[p][o]-e[p][o]);m>u&&(u=m,l=p)}n[o]=l}}var be;let mt=be=class extends z{constructor(){super(...arguments),this.method="difference",this.keepMethod="all",this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new be({raster:this.raster,raster2:this.raster2,method:this.method,keepMethod:this.keepMethod})}};c([H(Po)],mt.prototype,"method",void 0),c([H($o)],mt.prototype,"keepMethod",void 0),c([h({json:{write:!0}})],mt.prototype,"raster2",void 0),c([h({readOnly:!0})],mt.prototype,"rasters",null),mt=be=c([$("esri.layers.support.rasterFunctions.ComputeChangeFunctionArguments")],mt);const Io=mt;let ht=class extends O{constructor(){super(...arguments),this.functionName="ComputeChange",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{method:t}=this.functionArguments,e=this.sourceRasterInfos[0].clone();if(this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),t==="categorical"){const s=this.sourceRasterInfos.map(a=>a.attributeTable),n=this._getFieldNames(s,"value"),r=s.map(a=>this._getClassFieldName(a));if(n[0]==null||n[1]==null||r[0]==null||r[1]==null)return{success:!1,supportsGPU:!1,error:"both inputs must have proper attribute table with value and class fields"};this._updateAttributeTable(e,n,r)}return e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:t==="difference"||t==="relative-difference"}}_processPixels(t){const{pixelBlocks:e}=t;if(e?.[0]==null||e?.[1]==null)return null;const{method:s}=this.functionArguments;return Fo(e,s,this.outputPixelType,this._categoryConfig)}_getWebGLParameters(){const t=this.outputPixelType??"f32";let[e,s]=St(t);const n=L(t);return n&&(e-=1e-4,s+=1e-4),{method:this.functionArguments.method,domainRange:[e,s],isOutputRounded:n}}_updateAttributeTable(t,e,s){const n=this.sourceRasterInfos.map(A=>A.attributeTable),r=n.map((A,F)=>A.features.map(T=>T.attributes[e[F]])),a=n.map((A,F)=>A.features.map(T=>T.attributes[s[F]])),o=r.map(A=>{const F=[];return A.forEach((T,N)=>F[T]=N),F}),{keepMethod:u}=this.functionArguments;this._categoryConfig={categoryIndexLookups:o,classNames:a,keepMethod:u};const l=n[0].clone();l.fields=[new nt({name:"OID",type:"oid"}),new nt({name:"Value",type:"integer"}),new nt({name:"ClassName",type:"string"}),new nt({name:"Class_From",type:"string"}),new nt({name:"Class_To",type:"string"})];const p=this._getFieldNames(n,"red"),m=this._getFieldNames(n,"green"),f=this._getFieldNames(n,"blue"),d=[],y=p.length===2&&m.length===2&&f.length===2;y&&(d.push(...n.map((A,F)=>A.features.map(T=>[T.attributes[p[F]],T.attributes[m[F]],T.attributes[f[F]]]))),l.fields.push(new nt({name:"Red",type:"integer"}),new nt({name:"Green",type:"integer"}),new nt({name:"Blue",type:"integer"})));const x=l.features[0].clone();x.geometry=null;const g=[],[w,v]=r.map(A=>A.length);let P=1;for(let A=0;A<w;A++){const F=a[0][A];for(let T=0;T<v;T++){const N=a[1][T];if(u==="changed"&&F===N||u==="unchanged"&&F!==N)continue;const R=x.clone();R.attributes={OID:P++,Value:A*v+T,ClassName:F===N?F:`${F} -> ${N}`,Class_From:F,Class_To:N},y&&(R.attributes.Red=d[0][A][0]+d[1][T][0]>>1,R.attributes.Green=d[0][A][1]+d[1][T][1]>>1,R.attributes.Blue=d[0][A][2]+d[1][T][2]>>1),g.push(R)}}if(u==="changed"){const A=x.clone();A.attributes={OID:P++,Value:w*v+1,ClassName:"No Change",Class_From:"Same",Class_To:"Same"},g.push(A)}else if(u==="unchanged"){const A=x.clone();A.attributes={OID:P++,Value:w*v+2,ClassName:"Changed",Class_From:"Any",Class_To:"Any"},g.push(A)}l.features=g,t.attributeTable=l}_getFieldNames(t,e){return t.map(({fields:s})=>s.find(n=>n.name.toLowerCase()===e)?.name).filter(s=>s)}_getClassFieldName(t){return(t.fields.find(s=>s.type==="string"&&s.name.toLowerCase().startsWith("class"))??t.fields.find(s=>s.type==="string"&&s.name.toLowerCase().includes("class")||s.name.toLowerCase().includes("type")||s.name.toLowerCase().includes("name"))??t.fields.find(s=>s.type==="string"))?.name}};c([h({json:{write:!0,name:"rasterFunction"}})],ht.prototype,"functionName",void 0),c([h({type:Io,json:{write:!0,name:"rasterFunctionArguments"}})],ht.prototype,"functionArguments",void 0),c([h()],ht.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],ht.prototype,"_categoryConfig",void 0),ht=c([$("esri.layers.support.rasterFunctions.ComputeChangeFunction")],ht);const _o=ht;var Ae;let Xt=Ae=class extends z{constructor(){super(...arguments),this.contrastOffset=0,this.brightnessOffset=0}clone(){return new Ae({contrastOffset:this.contrastOffset,brightnessOffset:this.brightnessOffset,raster:this.raster})}};c([h({json:{write:!0}})],Xt.prototype,"contrastOffset",void 0),c([h({json:{write:!0}})],Xt.prototype,"brightnessOffset",void 0),Xt=Ae=c([$("esri.layers.support.rasterFunctions.ContrastBrightnessFunctionArguments")],Xt);const Bo=Xt;let ft=class extends O{constructor(){super(...arguments),this.functionName="ContrastBrightness",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];if(e.pixelType!=="u8")return{success:!1,supportsGPU:!1,error:"Only unsigned 8 bit raster is supported by ContrastBrightness function."};this.outputPixelType=this._getOutputPixelType("u8");const s=e.clone();this._removeStatsHistColormapVAT(s),this.rasterInfo=s;const{contrastOffset:n,brightnessOffset:r}=this.functionArguments;return this.lookup=dn(n,r),{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];return e==null?null:Je(e,{lut:e.pixels.map(()=>this.lookup),offset:0,outputPixelType:"u8"})}_getWebGLParameters(){const{contrastOffset:t,brightnessOffset:e}=this.functionArguments;return{contrastOffset:t,brightnessOffset:e}}};c([h({json:{write:!0,name:"rasterFunction"}})],ft.prototype,"functionName",void 0),c([h({type:Bo,json:{write:!0,name:"rasterFunctionArguments"}})],ft.prototype,"functionArguments",void 0),c([h()],ft.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],ft.prototype,"lookup",void 0),ft=c([$("esri.layers.support.rasterFunctions.ContrastBrightnessFunction")],ft);const jo=ft;function Ke(i,t,e,s,n){const r=Math.floor(s/2);for(let o=0;o<r;o++)for(let u=0;u<t;u++)i[o*t+u]=i[(n-1-o)*t+u],i[(e-1-o)*t+u]=i[(e-n+o)*t+u];const a=Math.floor(n/2);for(let o=0;o<e;o++){const u=o*t;for(let l=0;l<a;l++)i[u+l]=i[u+n-1-l],i[u+t-l-1]=i[u+t+l-n]}}const j=new Map;function Mo(i){const t=Math.sqrt(i.length),e=i.slice(0,t),s=[1];for(let n=1;n<t;n++){let r=null;for(let a=0;a<t;a++){const o=i[a+n*t],u=i[a];if(r==null)if(u===0){if(o)return{separable:!1,row:null,col:null}}else r=o/u;else if(o/u!==r)return{separable:!1,row:null,col:null}}if(r==null)return{separable:!1,row:null,col:null};s.push(r)}return{separable:!0,row:e,col:s}}function ws(i,t,e,s,n,r,a){const o=new Float32Array(t*e),u=r.length,l=a?0:s,p=a?s:0,m=a?1:t;for(let f=l;f<e-l;f++){const d=f*t;for(let y=p;y<t-p;y++){if(n&&!n[d+y])continue;let x=0;for(let g=0;g<u;g++)x+=i[d+y+(g-s)*m]*r[g];o[d+y]=x}}return o}function Oo(i,t,e,s,n,r,a){const o=new Float32Array(t*e),u=Math.floor(s/2),l=Math.floor(n/2);for(let p=u;p<e-u;p++){const m=p*t;for(let f=l;f<t-l;f++){if(r&&!r[m+f])continue;let d=0;for(let y=0;y<s;y++)for(let x=0;x<n;x++)d+=i[m+f+(y-u)*t+x-l]*a[y*n+x];o[m+f]=d}}return o}function Go(i,t,e=!0){const{pixels:s,width:n,height:r,pixelType:a,mask:o}=i,u=s.length,l=[],{kernel:p,rows:m,cols:f}=t;for(let d=0;d<u;d++){const y=Oo(s[d],n,r,m,f,o,p);e&&Ke(y,n,r,m,f),l.push(y)}return new b({width:n,height:r,pixelType:a,pixels:l,mask:o})}function zo(i,t,e,s=!0){const{pixels:n,width:r,height:a,pixelType:o,mask:u}=i,l=n.length,p=[],m=t.length,f=e.length,d=Math.floor(m/2),y=Math.floor(f/2);for(let x=0;x<l;x++){let g=ws(n[x],r,a,d,u,t,!0);g=ws(g,r,a,y,u,e,!1),s&&Ke(g,r,a,m,f),p.push(g)}return new b({width:r,height:a,pixelType:o,pixels:p,mask:u})}function Do(i,t){const e=Mo(t.kernel),s=t.mirrorEdges!==!1,n=e.separable?zo(i,e.row,e.col,s):Go(i,t,s),{outputPixelType:r}=t;return r&&n.clamp(r),n}j.set(I.none,[0,0,0,0,1,0,0,0,0]),j.set(I.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),j.set(I.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),j.set(I.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),j.set(I.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),j.set(I.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),j.set(I.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),j.set(I.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),j.set(I.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),j.set(I.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),j.set(I.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),j.set(I.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),j.set(I.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),j.set(I.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),j.set(I.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),j.set(I.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),j.set(I.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),j.set(I.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),j.set(I.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),j.set(I.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),j.set(I.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),j.set(I.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),j.set(I.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);var Te;let dt=Te=class extends z{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(i){this._set("convolutionType",i);const t=j.get(i);if(!t||i===I.userDefined||i===I.none)return;const e=Math.sqrt(t.length);this._set("kernel",t),this._set("cols",e),this._set("rows",e)}clone(){return new Te({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:J(this.raster)})}};c([h({json:{type:Number,write:!0}})],dt.prototype,"rows",void 0),c([h({json:{type:Number,write:!0}})],dt.prototype,"cols",void 0),c([h({json:{name:"type",type:Number,write:!0}})],dt.prototype,"convolutionType",null),c([h({json:{type:[Number],write:!0}})],dt.prototype,"kernel",void 0),dt=Te=c([$("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],dt);const Eo=dt,vs=25;let gt=class extends O{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}get _normalizedKernel(){const{kernel:t,convolutionType:e}=this.functionArguments,s=t.reduce((n,r)=>n+r);return e===-1||s===0||s===1?t:t.map(n=>n/s)}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:s,kernel:n}=this.functionArguments;if(!Object.values(I).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==I.none&&e*s!==n.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const r=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(r.pixelType);const a=r.clone();a.pixelType=this.outputPixelType;const o=[I.none,I.sharpen,I.sharpen2,I.sharpening3x3,I.sharpening5x5];return(t===-1||this.outputPixelType!=="u8"&&!o.includes(t))&&(a.statistics=null,a.histograms=null),a.colormap=null,a.attributeTable=null,this.rasterInfo=a,{success:!0,supportsGPU:n.length<=vs}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null||this.functionArguments.convolutionType===I.none)return e;const{rows:s,cols:n}=this.functionArguments,{_normalizedKernel:r}=this;return Do(e,{kernel:r,rows:s,cols:n,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=new Float32Array(vs);return t.set(this._normalizedKernel),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:t,clampRange:St(this.outputPixelType)}}};c([h({json:{write:!0,name:"rasterFunction"}})],gt.prototype,"functionName",void 0),c([h({type:Eo,json:{write:!0,name:"rasterFunctionArguments"}})],gt.prototype,"functionArguments",void 0),c([h()],gt.prototype,"rasterArgumentNames",void 0),c([h()],gt.prototype,"_normalizedKernel",null),gt=c([$("esri.layers.support.rasterFunctions.ConvolutionFunction")],gt);const Uo=gt;var Pe;const Es=new Z({0:"standard",1:"planform",2:"profile"},{useNumericKeys:!0});let Mt=Pe=class extends z{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(i,t){return Es.fromJSON(t.type??t.curvatureType??0)}clone(){return new Pe({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};c([h({json:{write:{target:"type"}}}),H(Es)],Mt.prototype,"curvatureType",void 0),c([Ct("curvatureType",["type","curvatureType"])],Mt.prototype,"readCurvatureType",null),c([h({type:Number,json:{write:!0}})],Mt.prototype,"zFactor",void 0),Mt=Pe=c([$("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],Mt);const Vo=Mt;let yt=class extends O{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.bandCount=1,this._removeStatsHistColormapVAT(t),this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{zFactor:s,curvatureType:n}=this.functionArguments,{extent:r,primaryPixelSizes:a}=t,o=a?.[0],u=o??(r?{x:r.width/e.width,y:r.height/e.height}:{x:1,y:1}),l=this.isGCS&&s>=1?s*Zt:s;return gn(e,{zFactor:l,curvatureType:n,resolution:u})}_getWebGLParameters(){const{zFactor:t,curvatureType:e}=this.functionArguments;return{curvatureType:e,zFactor:this.isGCS&&t>=1?t*Zt:t}}};c([h({json:{write:!0,name:"rasterFunction"}})],yt.prototype,"functionName",void 0),c([h({type:Vo,json:{write:!0,name:"rasterFunctionArguments"}})],yt.prototype,"functionArguments",void 0),c([h()],yt.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],yt.prototype,"isGCS",void 0),yt=c([$("esri.layers.support.rasterFunctions.CurvatureFunction")],yt);const Lo=yt;var $e;let et=$e=class extends z{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=Ns.bestMatch}clone(){return new $e({bandIds:this.bandIds?.slice(),bandNames:this.bandNames?.slice(),bandWavelengths:this.bandWavelengths?.slice(),missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};c([h({json:{write:!0}})],et.prototype,"bandIds",void 0),c([h({json:{write:!0}})],et.prototype,"bandNames",void 0),c([h({json:{write:!0}})],et.prototype,"bandWavelengths",void 0),c([H({0:"name",1:"wavelength",2:"id"})],et.prototype,"method",void 0),c([h({json:{write:!0}})],et.prototype,"missingBandAction",void 0),c([h({json:{write:!0}})],et.prototype,"wavelengthMatchTolerance",void 0),et=$e=c([$("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],et);const Wo=et;let Ot=class extends O{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{functionArguments:t,sourceRasterInfos:e}=this,s=e[0],{method:n,bandNames:r,bandWavelengths:a,bandIds:o,missingBandAction:u}=t,l=r?.length&&(n==="name"||n!=="id"&&!o?.length),p=a?.length&&(n==="wavelength"||n!=="id"&&!o?.length),m=u===Ns.fail,f=l?Ho(s,r):p?Xo(s,a,this.functionArguments,m):qo(s,o,m);if(f==null)return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${l?"band names":p?"band wavelengths":"band ids"} for the imagery data source`};this.functionArguments.bandIds=f,this.functionArguments.method="id",this.outputPixelType=this._getOutputPixelType("f32");const d=s.clone();d.pixelType=this.outputPixelType,d.bandCount=f.length;const{statistics:y,histograms:x}=d;y!=null&&y.length&&(d.statistics=f.map(w=>y[w]||y[y.length-1])),x!=null&&x.length&&(d.histograms=f.map(w=>x[w]||x[x.length-1])),d.multidimensionalInfo&&d.multidimensionalInfo.variables.forEach(w=>{const{statistics:v,histograms:P}=w;v!=null&&v.length&&(w.statistics=f.map(A=>v[A]||v[v.length-1])),P!=null&&P.length&&(w.histograms=f.map(A=>P[A]||P[P.length-1]))});let g=d.keyProperties?.BandProperties;return g?.length&&(g=f.map(w=>w>=g.length?g[g.length-1]:g[w]),d.keyProperties={...d.keyProperties,BandProperties:g}),this.rasterInfo=d,{success:!0,supportsGPU:d.bandCount<=3}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const s=e.pixels.length,n=this.functionArguments.bandIds.map(r=>r>=s?s-1:r);return e.extractBands(n)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],t.length===0?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let e=0;e<3;e++)t[e]=Math.min(t[e],2)}return{bandIndexMat3:U(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map(s=>s>=e?e-1:s).map(s=>t[s])}};c([h({json:{write:!0,name:"rasterFunction"}})],Ot.prototype,"functionName",void 0),c([h({type:Wo,json:{write:!0,name:"rasterFunctionArguments"}})],Ot.prototype,"functionArguments",void 0),c([h()],Ot.prototype,"rasterArgumentNames",void 0),Ot=c([$("esri.layers.support.rasterFunctions.ExtractBandFunction")],Ot);const Jo=Ot;function Ho(i,t){const e=i.bandInfos.map(({name:n})=>n.toLowerCase()),s=[];for(let n=0;n<t.length;n++){const r=t[n].toLowerCase();let a=e.indexOf(r);if(a===-1&&r==="nearinfrared"&&(a=e.findIndex(o=>o.startsWith("nearinfrared_1")),a===-1&&(a=e.findIndex(o=>o.startsWith("nearinfrared")))),a===-1)return null;s.push(a)}return s}function qo(i,t,e){const{bandCount:s}=i;return!t?.length||e&&t.some(n=>n<0||n>=s)?null:t}function Xo(i,t,{wavelengthMatchTolerance:e},s){const{bandInfos:n}=i,r=[];for(let o=0;o<n.length;o++){const{minWavelength:u,maxWavelength:l}=n[o];if(!u||!l)return null;r.push({minWavelength:u,maxWavelength:l})}const a=[];for(let o=0;o<t.length;o++){const u=t[o];let l=!1,p=-1,m=Number.MAX_VALUE;for(let f=0;f<r.length;f++){const d=r[f],y=u>=d.minWavelength&&u<=d.maxWavelength,x=Math.abs(u-(d.minWavelength+d.maxWavelength)/2);y?x<m&&(l=!0,p=f,m=x):!l&&x<m&&(p=f,m=x)}if(!l&&e&&m<e&&(l=!0),!l&&s)return null;a.push(p)}return a}function Ko(i,t,e){const{pixels:s,width:n,height:r,mask:a,bandMasks:o}=i,u=n*r,l=o?.length?b.combineBandMasks(o):a,p=Math.min(t.length,s.length),m=e.startsWith("f"),f=!m&&e!==i.pixelType,[d,y]=St(e),x=b.createEmptyBand(e,u);for(let w=0;w<r;w++){let v=w*n;for(let P=0;P<n;P++,v++)if(!l||l[v]){let A=0;for(let F=0;F<p;F++)A+=t[F]*s[F][v];m||(A=Math.round(A),f&&(A=A>y?y:A<d?d:A)),x[v]=A}}const g=new b({width:n,height:r,pixels:[x],pixelType:e,mask:l});return g.updateStatistics(),g}var Fe;let te=Fe=class extends z{clone(){return new Fe({conversionParameters:[...this.conversionParameters],raster:this.raster})}};c([h({type:[Number],json:{write:!0}})],te.prototype,"conversionParameters",void 0),te=Fe=c([$("esri.layers.support.rasterFunctions.GrayscaleFunctionArguments")],te);const Yo=te;let xt=class extends O{constructor(){super(...arguments),this.functionName="Grayscale",this.functionArguments=null,this.rasterArgumentNames=["raster"]}get _normalizedWeights(){const{conversionParameters:t}=this.functionArguments,e=t.reduce((s,n)=>s+n);return t.map(s=>s/e)}_bindSourceRasters(){const{conversionParameters:t}=this.functionArguments;if(!t?.length)return{success:!1,supportsGPU:!1,error:"missing valid conversion parameters."};const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType;const s=t.length===3||e.bandCount===3&&t.length>3;return e.bandCount=1,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:s}}_processPixels(t){const e=t.pixelBlocks?.[0];return e==null?null:Ko(e,this._normalizedWeights,this.outputPixelType)}_getWebGLParameters(){return{weights:this._normalizedWeights}}};c([h({json:{write:!0,name:"rasterFunction"}})],xt.prototype,"functionName",void 0),c([h({type:Yo,json:{write:!0,name:"rasterFunctionArguments"}})],xt.prototype,"functionArguments",void 0),c([h()],xt.prototype,"rasterArgumentNames",void 0),c([h()],xt.prototype,"_normalizedWeights",null),xt=c([$("esri.layers.support.rasterFunctions.GrayscaleFunction")],xt);const Zo=xt;var Ne;const Qo=new Z({0:"traditional",1:"multi-directional"},{useNumericKeys:!0}),ti=new Z({1:"degree",2:"percent-rise",3:"scaled"},{useNumericKeys:!0});let X=Ne=class extends z{constructor(){super(...arguments),this.altitude=45,this.azimuth=315,this.hillshadeType="traditional",this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.slopeType="degree",this.zFactor=1,this.removeEdgeEffect=!1}clone(){return new Ne({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};c([h({type:Number,json:{write:!0}})],X.prototype,"altitude",void 0),c([h({type:Number,json:{write:!0}})],X.prototype,"azimuth",void 0),c([h(),H(Qo)],X.prototype,"hillshadeType",void 0),c([h({type:Number,json:{write:!0,name:"psPower"}})],X.prototype,"pixelSizePower",void 0),c([h({type:Number,json:{write:!0,name:"psZFactor"}})],X.prototype,"pixelSizeFactor",void 0),c([h(),H(ti)],X.prototype,"slopeType",void 0),c([h({type:Number,json:{write:!0}})],X.prototype,"zFactor",void 0),c([h({type:Boolean,json:{write:!0}})],X.prototype,"removeEdgeEffect",void 0),X=Ne=c([$("esri.layers.support.rasterFunctions.HillshadeFunctionArguments")],X);const Us=X;let wt=class extends O{constructor(){super(...arguments),this.functionName="Hillshade",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"hillshade-function: source data must be single band"};this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone();return this._removeStatsHistColormapVAT(e),e.pixelType=this.outputPixelType,e.bandCount=1,e.statistics=[{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=e,this.isGCS=e.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(!e)return null;const{extent:s,primaryPixelSizes:n}=t,r=n?.[0],a=r??(s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1}),o=re(this.functionArguments,a,this.isGCS),u=Is(e,o);return u.pixelType=this.outputPixelType,u}_getWebGLParameters(){const t=re(this.functionArguments,{x:1,y:1},this.isGCS),e=_s(t),{slopeType:s,zFactor:n,pixelSizeFactor:r,pixelSizePower:a}=this.functionArguments,o=s==="scaled",u=L(this.outputPixelType);return{...e,zFactor:n,gcsFactor:this.isGCS?Zt:1,pixelSizeFactor:o?r:0,pixelSizePower:o?a:0,isOutputRounded:u}}};c([h({json:{write:!0,name:"rasterFunction"}})],wt.prototype,"functionName",void 0),c([h({type:Us,json:{write:!0,name:"rasterFunctionArguments"}})],wt.prototype,"functionArguments",void 0),c([h()],wt.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],wt.prototype,"isGCS",void 0),wt=c([$("esri.layers.support.rasterFunctions.HillshadeFunction")],wt);const ei=wt;var Re;let vt=Re=class extends z{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(i,t){t.rasters=i.map(e=>typeof e=="number"||typeof e=="string"?e:e.toJSON())}clone(){return new Re({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:J(this.rasters)})}};c([h({json:{write:!0}})],vt.prototype,"operation",void 0),c([h({json:{write:!0}})],vt.prototype,"rasters",void 0),c([Lt("rasters")],vt.prototype,"writeRasters",null),c([h({json:{write:!0}})],vt.prototype,"processAsMultiband",void 0),vt=Re=c([$("esri.layers.support.rasterFunctions.LocalFunctionArguments")],vt);const si=vt;let Gt=class extends O{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:s}=e,{processAsMultiband:n}=this.functionArguments;if(t.some(l=>l.bandCount!==s))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:r,rasters:a}=this.functionArguments,o=rs[r];if(!(o===999||a.length===o||a.length<=1&&o===1))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${o}`};const u=e.clone();return u.bandCount=o!==999||n?s:1,this._removeStatsHistColormapVAT(u),this._updateStatistics(u),this._updatePixelType(u),this.rasterInfo=u,{success:!0,supportsGPU:u.bandCount===1&&o<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e==null||e.some(s=>s==null)?null:Ds(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=rs[t],s=Object.keys(ss).find(u=>ss[u]===t)?.toLowerCase()??"undefined",n=this.outputPixelType??"f32";let[r,a]=St(n);const o=L(n);return o&&(r-=1e-4,a+=1e-4),{imageCount:e,operationName:s,domainRange:[r,a],isOutputRounded:o}}_updateStatistics(t){const e=this.sourceRasterInfos[0],{operation:s}=this.functionArguments,n=ns(s)?.domain;if(n){t.statistics=[];for(let r=0;r<t.bandCount;r++)t.statistics[r]={min:n[0],max:n[1],avg:(n[0]+n[1])/2,stddev:(n[0]+n[1])/10}}else s===45&&e.statistics?.length&&(t.statistics=e.statistics.map(r=>({min:-r.max,max:-r.min,avg:r.avg!=null?-r.avg:void 0,stddev:r.stddev!=null?-r.stddev:void 0})))}_updatePixelType(t){const{statistics:e,pixelType:s}=this.sourceRasterInfos[0],{operation:n}=this.functionArguments,{domain:r,isInteger:a}=ns(n)??{domain:null,isInteger:!1};let o="f32";if(r&&a)o=ce(r[0],r[1]);else if(n===30){const u=e?.[0];o=u?ce(u.min,u.max):L(s)?s:"s32"}else if(n===45&&L(s)){const u=e?.map(({max:f})=>-f),l=e?.map(({min:f})=>-f),p=u?.length?Math.min(...u):null,m=l?.length?Math.min(...l):null;o=p!=null&&m!=null?ce(p,m):s.startsWith("s")?s.replace("s","u"):s==="u1"||s==="u2"||s==="u4"?"s8":s==="u8"?"s16":"s32"}t.pixelType=this.outputPixelType=this._getOutputPixelType(o)}};c([h({json:{write:!0,name:"rasterFunction"}})],Gt.prototype,"functionName",void 0),c([h({type:si,json:{write:!0,name:"rasterFunctionArguments"}})],Gt.prototype,"functionArguments",void 0),c([h()],Gt.prototype,"rasterArgumentNames",void 0),Gt=c([$("esri.layers.support.rasterFunctions.LocalFunction")],Gt);const ni=Gt;var ke;let bt=ke=class extends z{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=Rs.matchAny}get normalizedNoDataValues(){const{noDataValues:i}=this;if(!i?.length)return null;let t=!1;const e=i.map(s=>{if(typeof s=="number")return t=!0,[s];if(typeof s=="string"){const n=s.trim().split(" ").filter(r=>r.trim()!=="").map(r=>Number(r));return t=t||n.length>0,n.length===0?null:n}return null});return t?e:null}clone(){return new ke({includedRanges:this.includedRanges?.slice()??[],noDataValues:this.noDataValues?.slice()??[],noDataInterpretation:this.noDataInterpretation})}};c([h({json:{write:!0}})],bt.prototype,"includedRanges",void 0),c([h({json:{write:!0}})],bt.prototype,"noDataValues",void 0),c([h()],bt.prototype,"normalizedNoDataValues",null),c([h({json:{write:!0}})],bt.prototype,"noDataInterpretation",void 0),bt=ke=c([$("esri.layers.support.rasterFunctions.MaskFunctionArguments")],bt);const ri=bt;let At=class extends O{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:s,normalizedNoDataValues:n}=this.functionArguments;if(!s?.length&&!n?.length)return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let r=[];for(let o=0;o<t.bandCount;o++){const u=Zs(e,s?.slice(2*o,2*o+2),n?.[o]);if(u==null){r=null;break}r.push(u)}this.lookups=r;const a=n!=null&&n.every(o=>o?.length===n[0]?.length);return{success:!0,supportsGPU:(!s||s.length<=2*st)&&(!n||a&&n[0].length<=st)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{outputPixelType:s,lookups:n}=this,{includedRanges:r,noDataInterpretation:a,normalizedNoDataValues:o}=this.functionArguments,u=a===Rs.matchAll;return Qs(e,{includedRanges:r,noDataValues:o,outputPixelType:s,matchAll:u,lookups:n})}_getWebGLParameters(){const{includedRanges:t,normalizedNoDataValues:e}=this.functionArguments,s=new Float32Array(st);s.fill(Vt),e?.[0]?.length&&s.set(e[0]);const n=new Float32Array(st);for(let r=0;r<n.length;r+=2)n[r]=t?.[r]??-Vt,n[r+1]=t?.[r+1]??Vt;return t?.length&&n.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:s,includedRanges:n}}};c([h({json:{write:!0,name:"rasterFunction"}})],At.prototype,"functionName",void 0),c([h({type:ri,json:{write:!0,name:"rasterFunctionArguments"}})],At.prototype,"functionArguments",void 0),c([h()],At.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],At.prototype,"lookups",void 0),At=c([$("esri.layers.support.rasterFunctions.MaskFunction")],At);const oi=At;var Ce;let zt=Ce=class extends z{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:i,infraredBandID:t,scientificOutput:e}=this;return new Ce({visibleBandID:i,infraredBandID:t,scientificOutput:e})}};c([h({json:{write:!0}})],zt.prototype,"visibleBandID",void 0),c([h({json:{write:!0}})],zt.prototype,"infraredBandID",void 0),c([h({json:{write:!0}})],zt.prototype,"scientificOutput",void 0),zt=Ce=c([$("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],zt);const ii=zt;let Dt=class extends O{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:e,infraredBandID:s}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const n=this.sourceRasterInfos[0],r=Math.max(e,s);if(n.bandCount<2||r>=n.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};if(e<0||s<0)return{success:!1,supportsGPU:!1,error:"ndvi-function: invalid visible or infrared band id"};const a=n.clone();a.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(a),a.bandCount=1,a.keyProperties={...a.keyProperties,BandProperties:void 0};const[o,u,l,p]=t?[-1,1,0,.1]:[0,200,100,10];return a.statistics=[{min:o,max:u,avg:l,stddev:p}],this.rasterInfo=a,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{visibleBandID:s,infraredBandID:n,scientificOutput:r}=this.functionArguments;return Ur(e,s,n,!r)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this.functionArguments,n=this.isInputBandIdsSwizzled?[0,1,2]:[e,t,0];return{bandIndexMat3:U(n),scaled:!s}}_getInputBandIds(t){const{visibleBandID:e,infraredBandID:s}=this.functionArguments;return[s,e,0].map(n=>t[n])}};c([h({json:{write:!0,name:"rasterFunction"}})],Dt.prototype,"functionName",void 0),c([h({type:ii,json:{write:!0,name:"rasterFunctionArguments"}})],Dt.prototype,"functionArguments",void 0),c([h()],Dt.prototype,"rasterArgumentNames",void 0),Dt=c([$("esri.layers.support.rasterFunctions.NDVIFunction")],Dt);const ai=Dt;var Se;let rt=Se=class extends z{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new Se({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};c([h({json:{write:!0}})],rt.prototype,"inputRanges",void 0),c([h({json:{write:!0}})],rt.prototype,"outputValues",void 0),c([h({json:{write:!0}})],rt.prototype,"noDataRanges",void 0),c([h({json:{write:!0}})],rt.prototype,"allowUnmatched",void 0),c([h({json:{write:!0}})],rt.prototype,"isLastInputRangeInclusive",void 0),rt=Se=c([$("esri.layers.support.rasterFunctions.RemapFunctionArguments")],rt);const ui=rt;let Tt=class extends O{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,t.bandCount=1;const{statistics:s}=t;this._removeStatsHistColormapVAT(t);const{allowUnmatched:n,outputValues:r,inputRanges:a,noDataRanges:o,isLastInputRangeInclusive:u}=this.functionArguments;if(s!=null&&s.length&&r?.length)if(n){const l=Math.min.apply(null,[...r,s[0].min]),p=Math.max.apply(null,[...r,s[0].max]);t.statistics=[{...s[0],min:l,max:p}]}else{let l=r[0],p=l;for(let m=0;m<r.length;m++)l=l>r[m]?r[m]:l,p=p>r[m]?p:r[m];t.statistics=[{...s[0],min:l,max:p}]}return this.rasterInfo=t,this.lookup=n?null:tn({srcPixelType:e,inputRanges:a,outputValues:r,noDataRanges:o,allowUnmatched:n,isLastInputRangeInclusive:u,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!r||r.length<=st)&&(!o||o.length<=st)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{lookup:s,outputPixelType:n}=this;if(s){const p=Je(e,{lut:[s.lut],offset:s.offset,outputPixelType:n});return p!=null&&s.mask&&(p.mask=en(e.pixels[0],e.mask,s.mask,s.offset,"u8")),p}const{inputRanges:r,outputValues:a,noDataRanges:o,allowUnmatched:u,isLastInputRangeInclusive:l}=this.functionArguments;return sn(e,{inputRanges:r,outputValues:a,noDataRanges:o,outputPixelType:n,allowUnmatched:u,isLastInputRangeInclusive:l})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:e,isLastInputRangeInclusive:s}=this.functionArguments,n=new Float32Array(3*st),r=1e-5,a=this.functionArguments.inputRanges??[],o=this.functionArguments.outputValues??[],u=o.length;for(let p=0;p<st;p++)n[3*p]=a[2*p]??Vt-1,n[3*p+1]=a[2*p+1]??Vt,n[3*p+2]=o[p]??0,p<u&&(p>0&&(n[3*p]-=r),(p<u-1||!s)&&(n[3*p+1]-=r));const l=new Float32Array(2*st);return l.fill(Vt),e?.length&&l.set(e),{allowUnmatched:t,rangeMaps:n,noDataRanges:l,clampRange:St(this.outputPixelType)}}};c([h({json:{write:!0,name:"rasterFunction"}})],Tt.prototype,"functionName",void 0),c([h({type:ui,json:{write:!0,name:"rasterFunctionArguments"}})],Tt.prototype,"functionArguments",void 0),c([h()],Tt.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],Tt.prototype,"lookup",void 0),Tt=c([$("esri.layers.support.rasterFunctions.RemapFunction")],Tt);const li=Tt;var Ie;let Et=Ie=class extends Us{readColorRamp(i){if(typeof i=="string"){const t=kt.jsonValues.find(e=>e.toLowerCase()===i.toLowerCase());return t?Cs(kt.fromJSON(t)):null}return"toJSON"in i?i.toJSON():i}clone(){return new Ie({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,colorRamp:this.colorRamp,colormap:this.colormap,raster:this.raster})}};c([h({json:{write:!0}})],Et.prototype,"colorRamp",void 0),c([Ct("colorRamp")],Et.prototype,"readColorRamp",null),c([h({type:[[Number]],json:{write:!0}})],Et.prototype,"colormap",void 0),Et=Ie=c([$("esri.layers.support.rasterFunctions.ShadedReliefFunctionArguments")],Et);const ci=Et;let ot=class extends O{constructor(){super(...arguments),this.functionName="ShadedRelief",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const i=this.sourceRasterInfos[0];if(i.bandCount>1)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: source data must be single band"};let{colorRamp:t,colormap:e}=this.functionArguments;if(!t&&!e?.length)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a color ramp argument must be specified"};this.outputPixelType=this._getOutputPixelType("u8");const s=i.clone();this._removeStatsHistColormapVAT(s),s.pixelType=this.outputPixelType,s.bandCount=3,s.statistics=[{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=s,this.isGCS=s.spatialReference?.isGeographic??!1,e?.length||(e=pe(t,{interpolateAlpha:!0}));const{indexedColormap:n,offset:r}=Fs({colormap:e});if(!n?.length)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a valid colorramp is required"};const a=yn(n);return this.lookup={indexedColormap:n,offset:r,hsvMap:a},{success:!0,supportsGPU:Ss(n)}}_processPixels(i){const t=i.pixelBlocks?.[0];if(!t||!this.lookup)return null;let e=i.primaryPixelSizes?.[0];if(e==null){const{extent:a}=i;e=a?{x:a.width/t.width,y:a.height/t.height}:{x:1,y:1}}const s=re(this.functionArguments,e,this.isGCS),n=Is(t,s),r=this.sourceRasterInfos[0].statistics?.[0]??{min:0,max:8e3};return xn(n,t,this.lookup.hsvMap,r),n.pixelType=this.outputPixelType,n}_getWebGLParameters(){const i=re(this.functionArguments,{x:1,y:1},this.isGCS),t=_s(i),{slopeType:e,zFactor:s,pixelSizeFactor:n,pixelSizePower:r}=this.functionArguments,a=e==="scaled",{indexedColormap:o,offset:u}=this.lookup,l=this.sourceRasterInfos[0].statistics?.[0],p=L(this.outputPixelType);return{...t,indexedColormap:o,offset:u,zFactor:s,gcsFactor:this.isGCS?Zt:1,pixelSizeFactor:a?n:0,pixelSizePower:a?r:0,minValue:l?.min??0,maxValue:l?.max??8e3,isOutputRounded:p}}};c([h({json:{write:!0,name:"rasterFunction"}})],ot.prototype,"functionName",void 0),c([h({type:ci,json:{write:!0,name:"rasterFunctionArguments"}})],ot.prototype,"functionArguments",void 0),c([h()],ot.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],ot.prototype,"isGCS",void 0),c([h({json:{write:!0}})],ot.prototype,"lookup",void 0),ot=c([$("esri.layers.support.rasterFunctions.ShadedReliefFunction")],ot);const pi=ot;var _e;const mi=new Z({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let it=_e=class extends z{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new _e({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};c([H(mi)],it.prototype,"slopeType",void 0),c([h({type:Number,json:{write:!0}})],it.prototype,"zFactor",void 0),c([h({type:Number,json:{name:"psPower",write:!0}})],it.prototype,"pixelSizePower",void 0),c([h({type:Number,json:{name:"psZFactor",write:!0}})],it.prototype,"pixelSizeFactor",void 0),c([h({type:Boolean,json:{write:!0}})],it.prototype,"removeEdgeEffect",void 0),it=_e=c([$("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],it);const hi=it;let Pt=class extends O{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(t),t.statistics=this.functionArguments.slopeType!=="percent-rise"?[{min:0,max:90,avg:1,stddev:1}]:null,t.bandCount=1,this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{zFactor:s,slopeType:n,pixelSizePower:r,pixelSizeFactor:a}=this.functionArguments,{isGCS:o}=this,{extent:u,primaryPixelSizes:l}=t,p=l?.[0],m=p??(u?{x:u.width/e.width,y:u.height/e.height}:{x:1,y:1});return wn(e,{zFactor:s,slopeType:n,pixelSizePower:r,pixelSizeFactor:a,isGCS:o,resolution:m})}_getWebGLParameters(){const{zFactor:t,slopeType:e,pixelSizeFactor:s,pixelSizePower:n}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*Zt:t,slopeType:e,pixelSizeFactor:s??0,pixelSizePower:n??0,isOutputRounded:L(this.outputPixelType)}}};c([h({json:{write:!0,name:"rasterFunction"}})],Pt.prototype,"functionName",void 0),c([h({type:hi,json:{write:!0,name:"rasterFunctionArguments"}})],Pt.prototype,"functionArguments",void 0),c([h()],Pt.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],Pt.prototype,"isGCS",void 0),Pt=c([$("esri.layers.support.rasterFunctions.SlopeFunction")],Pt);const fi=Pt,bs=new Z({1:"min",2:"max",3:"mean",4:"stddev",5:"median",6:"majority",7:"minority"},{useNumericKeys:!0});function di(i,t){const{fillNoDataOnly:e}=t,{band:s,width:n,height:r,mask:a,outBand:o}=i;if(e&&!a)return void o.set(s);const{statisticsType:u,kernelRows:l,kernelCols:p}=t,m=u==="stddev",f=n*r,d=new Float64Array(f),y=new Float64Array(f),x=new Uint32Array(f);for(let T=0;T<r;T++){const N=T*n;let R=0,C=0,S=0;for(let _=0;_<p;_++)a&&!a[N+_]||(R+=s[N+_],m&&(C+=s[N+_]**2),S++);d[N]=R,y[N]=C,x[N]=S;for(let _=1;_<=n-p;_++){const G=N+_-1,Q=G+p;a?(a[G]&&(S--,R-=s[G],m&&(C-=s[G]**2)),a[Q]&&(S++,R+=s[Q],m&&(C+=s[Q]**2))):(R-=s[G],R+=s[Q],m&&(C-=s[G]**2,C+=s[Q]**2)),d[N+_]=R,x[N+_]=S,m&&(y[N+_]=C)}}const g=new Float64Array(f),w=new Float64Array(f),v=new Uint32Array(f),P=l*n;for(let T=0;T<=n-p;T++){let N=0,R=0,C=0;for(let S=0;S<l;S++){const _=S*n+T;N+=d[_],C+=x[_],m&&(R+=y[_])}g[T]=N,w[T]=R,v[T]=C;for(let S=1;S<=r-l;S++){const _=(S-1)*n+T,G=_+P;N-=d[_],N+=d[G],C-=x[_],C+=x[G],m&&(R-=y[_],R+=y[G]),g[S*n+T]=N,w[S*n+T]=R,v[S*n+T]=C}}const A=Math.floor(l/2),F=Math.floor(p/2);for(let T=A;T<r-A;T++){const N=T*n;for(let R=F;R<n-F;R++){const C=(T-A)*n+R-F,S=v[C];if(S===0||e&&(!a||a[N+R]))continue;const _=g[C]/S,G=m?Math.sqrt((w[C]-g[C]*_)/S):_;o[N+R]=G,a&&(a[N+R]=255)}}}function gi(i,t){const{fillNoDataOnly:e}=t,{band:s,width:n,height:r,mask:a,outBand:o}=i;if(e&&!a)return void o.set(s);const{kernelRows:u,kernelCols:l,statisticsType:p}=t,m=Math.floor(u/2),f=Math.floor(l/2),d=p==="min",y=o.slice(),x=new Uint32Array(n*r);for(let g=m;g<r-m;g++){const w=g*n;for(let v=f;v<n-f;v++){let P=d?Number.MAX_VALUE:-Number.MAX_VALUE,A=0;for(let F=0;F<u;F++)for(let T=0;T<l;T++){const N=w+v+(F-m)*n+T-f;a&&!a[N]||(P=d?Math.min(P,s[N]):Math.max(P,s[N]),A++)}a?(y[w+v]=A===0?0:P,x[w+v]=A):o[w+v]=A===0?0:P}}if(a)for(let g=m;g<r-m;g++){const w=g*n;for(let v=f;v<n-f;v++)if(x[w+v]){if(e&&a[w+v])continue;o[w+v]=y[w+v],a[w+v]=255}}}function yi(i,t){const{fillNoDataOnly:e}=t,{band:s,width:n,height:r,mask:a,outBand:o}=i;if(e&&!a)return void o.set(s);const{kernelRows:u,kernelCols:l}=t,p=Math.floor(u/2),m=Math.floor(l/2),f=o.slice(),d=new Uint32Array(n*r);for(let y=p;y<r-p;y++){const x=y*n;for(let g=m;g<n-m;g++){if(e&&a?.[x+g])continue;const w=[];for(let v=0;v<u;v++)for(let P=0;P<l;P++){const A=x+g+(v-p)*n+P-m;a&&!a[A]||w.push(s[A])}w.length&&(w.sort((v,P)=>v-P),a?(f[x+g]=w[Math.floor((w.length-1)/2)],d[x+g]=w.length):o[x+g]=w[Math.floor((w.length-1)/2)])}}if(a)for(let y=p;y<r-p;y++){const x=y*n;for(let g=m;g<n-m;g++)if(d[x+g]){if(e&&a[x+g])continue;o[x+g]=f[x+g],a[x+g]=255}}}function xi(i,t){const{fillNoDataOnly:e}=t,{band:s,width:n,height:r,mask:a,outBand:o}=i;if(e&&!a)return void o.set(s);const{kernelRows:u,kernelCols:l}=t,p=Math.floor(u/2),m=Math.floor(l/2),f=t.statisticsType==="majority",d=u*l,y=o.slice(),x=new Uint32Array(n*r);for(let g=p;g<r-p;g++){const w=g*n;for(let v=m;v<n-m;v++){if(e&&a?.[w+v])continue;const P=new Map;for(let N=0;N<u;N++)for(let R=0;R<l;R++){const C=w+v+(N-p)*n+R-m;if(a&&!a[C])continue;const S=s[C];P.set(S,P.has(S)?P.get(S)+1:1)}if(P.size===0)continue;let A=0,F=0,T=f?0:d+1;for(const N of P.keys())F=P.get(N),f===F>T&&(T=F,A=N);a?(y[w+v]=A,x[w+v]=P.size):o[w+v]=A}}if(a)for(let g=p;g<r-p;g++){const w=g*n;for(let v=m;v<n-m;v++)if(x[w+v]){if(e&&a[w+v])continue;o[w+v]=y[w+v],a[w+v]=255}}}function wi(i,t){const{mask:e}=i,{fillNoDataOnly:s}=t;if(s&&!e)return i;const{pixels:n,width:r,height:a,bandMasks:o,pixelType:u}=i,l=n.length,p=r*a,m=[],{kernelRows:f,kernelCols:d,statisticsType:y,mirrorEdges:x}=t;if(s&&!e)return i;const g=t.outputPixelType??u,w=[];for(let A=0;A<l;A++){const F=n[A],T=b.createEmptyBand(g,p);s&&T.set(F);const N=o?.[A]??e,R=N?.slice()??null,C={band:F,width:r,height:a,mask:R,outBand:T};switch(y){case"min":case"max":gi(C,t);break;case"mean":case"stddev":di(C,t);break;case"median":yi(C,t);break;case"majority":case"minority":xi(C,t)}x&&!s&&Ke(T,r,a,f,d),m.push(T),R&&w.push(R)}let v=w[0]??e;w.length!==l&&(w.length=0),l>1&&o?.length&&(v=b.combineBandMasks(o));const P=new b({pixelType:g,width:r,height:a,pixels:m,bandMasks:o&&w.length?w:null,mask:v});return P.updateStatistics(),P}var Be;let $t=Be=class extends z{constructor(){super(...arguments),this.rows=3,this.cols=3,this.fillNoDataOnly=!1,this.statisticsType="min"}clone(){return new Be({rows:this.rows,cols:this.cols,fillNoDataOnly:this.fillNoDataOnly,statisticsType:this.statisticsType,raster:J(this.raster)})}};c([h({json:{write:!0,read:{source:["kernelRows","rows"],reader:(i,t)=>Number(i??t?.kernelRows??3)}}})],$t.prototype,"rows",void 0),c([h({json:{write:!0,read:{source:["kernelCols","cols"],reader:(i,t)=>Number(i??t?.kernelCols??3)}}})],$t.prototype,"cols",void 0),c([h({json:{write:!0}})],$t.prototype,"fillNoDataOnly",void 0),c([h({json:{read:{source:["statisticsType","type"],reader:(i,t)=>bs.fromJSON(t?.statisticsType??t?.type)??"min"},write:{target:"type"}}}),H(bs)],$t.prototype,"statisticsType",void 0),$t=Be=c([$("esri.layers.support.rasterFunctions.StatisticsFunctionArguments")],$t);const vi=$t;let Ut=class extends O{constructor(){super(...arguments),this.functionName="Statistics",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{type:t}=this.functionArguments.toJSON();if(t<1||t>7)return{success:!1,supportsGPU:!1,error:`statistics-function: the given statistics type is not supported ${t}`};const e=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();s.pixelType=this.outputPixelType;const{statisticsType:n}=this.functionArguments;return n==="stddev"&&this._removeStatsHistColormapVAT(s),this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3&&t<5}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return e;const{statisticsType:s,rows:n,cols:r,fillNoDataOnly:a}=this.functionArguments;return wi(e,{kernelRows:n,kernelCols:r,fillNoDataOnly:a,outputPixelType:this.outputPixelType,statisticsType:s,mirrorEdges:!0})}_getWebGLParameters(){const{rows:t,cols:e,statisticsType:s,fillNoDataOnly:n}=this.functionArguments;return{fillNoDataOnly:n,kernelRows:t,kernelCols:e,statisticsType:s,clampRange:St(this.outputPixelType)}}};c([h({json:{write:!0,name:"rasterFunction"}})],Ut.prototype,"functionName",void 0),c([h({type:vi,json:{write:!0,name:"rasterFunctionArguments"}})],Ut.prototype,"functionArguments",void 0),c([h()],Ut.prototype,"rasterArgumentNames",void 0),Ut=c([$("esri.layers.support.rasterFunctions.StatisticsFunction")],Ut);const bi=Ut;var je;let Ft=je=class extends z{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(i,t){if(!i?.length)return null;const e=[];return i.forEach(s=>{const n={min:s.min,max:s.max,avg:s.avg??s.mean,stddev:s.stddev??s.standardDeviation};e.push(n)}),e}writeStatistics(i,t,e){if(!i?.length)return;const s=[];i.forEach(n=>{const r={...n,mean:n.avg,standardDeviation:n.stddev};delete r.avg,delete r.stddev,s.push(r)}),t[e]=s}clone(){return new je({statistics:J(this.statistics),histograms:J(this.histograms)})}};c([h({json:{write:!0}})],Ft.prototype,"statistics",void 0),c([Ct("statistics")],Ft.prototype,"readStatistics",null),c([Lt("statistics")],Ft.prototype,"writeStatistics",null),c([h({json:{write:!0}})],Ft.prototype,"histograms",void 0),Ft=je=c([$("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],Ft);const Ai=Ft;let at=class extends O{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone(),{statistics:s,histograms:n}=this.functionArguments;return n&&(e.histograms=n),s&&(e.statistics=s),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};c([h({json:{write:!0,name:"rasterFunction"}})],at.prototype,"functionName",void 0),c([h({type:Ai,json:{write:!0,name:"rasterFunctionArguments"}})],at.prototype,"functionArguments",void 0),c([h()],at.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],at.prototype,"indexedColormap",void 0),c([h()],at.prototype,"isNoopProcess",void 0),at=c([$("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],at);const Ti=at;var Me;const Pi=new Z({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let V=Me=class extends z{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(i,t,e){i?.length&&(Array.isArray(i[0])||(i=i.map(s=>[s.min,s.max,s.avg,s.stddev])),t[e]=i)}clone(){return new Me({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:J(this.statistics),gamma:J(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:J(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};c([h({type:Boolean,json:{write:!0}})],V.prototype,"computeGamma",void 0),c([h({type:Boolean,json:{name:"dra",write:!0}})],V.prototype,"dynamicRangeAdjustment",void 0),c([h({type:[Number],json:{write:!0}})],V.prototype,"gamma",void 0),c([h()],V.prototype,"histograms",void 0),c([h({type:Number,json:{write:!0}})],V.prototype,"maxPercent",void 0),c([h({type:Number,json:{write:!0}})],V.prototype,"minPercent",void 0),c([h({type:Number,json:{write:!0}})],V.prototype,"numberOfStandardDeviations",void 0),c([h({type:Number,json:{name:"max",write:!0}})],V.prototype,"outputMax",void 0),c([h({type:Number,json:{name:"min",write:!0}})],V.prototype,"outputMin",void 0),c([h({type:Number,json:{write:!0}})],V.prototype,"sigmoidStrengthLevel",void 0),c([h({json:{type:[[Number]],write:!0}})],V.prototype,"statistics",void 0),c([Lt("statistics")],V.prototype,"writeStatistics",null),c([H(Pi)],V.prototype,"stretchType",void 0),c([h({type:Boolean,json:{write:!0}})],V.prototype,"useGamma",void 0),V=Me=c([$("esri.layers.support.rasterFunctions.StretchFunctionArguments")],V);const $i=V;let ut=class extends O{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:e}=t,{functionArguments:s}=this,{dynamicRangeAdjustment:n,gamma:r,useGamma:a}=s;if(!n&&["u8","u16","s8","s16"].includes(e)){const p=le(s.toJSON(),{rasterInfo:t}),m=L(this.outputPixelType)?"round":"float";this.lookup=vn({pixelType:e,...p,gamma:a?r:null,rounding:m}),this.cutOffs=p}else n||(this.cutOffs=le(s.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(e);const o=t.clone();o.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(o),this.outputPixelType==="u8"&&(o.keyProperties.DataType="processed");const{outputMin:u=0,outputMax:l=255}=this.functionArguments;o.statistics=[];for(let p=0;p<o.bandCount;p++)o.statistics[p]={min:u,max:l};return this.rasterInfo=o,{success:!0,supportsGPU:!n}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return e;const{lookup:s}=this;if(s)return Je(e,{...s,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:n}=this,r=this.cutOffs||le(n.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e}),a=n.useGamma?n.gamma:null;return bn(e,{...r,gamma:a,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:e=255,gamma:s,useGamma:n}=this.functionArguments,r=this.rasterInfo.bandCount>=2?3:1,a=n&&s?.length?An(r,s):[1,1,1],{minCutOff:o,maxCutOff:u}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};o.length===1&&(o[1]=o[2]=o[0],u[1]=u[2]=u[0]);const l=u.map((d,y)=>(e-t)/(u[y]-o[y])),p=L(this.outputPixelType),m=n&&s?[s[0],s[1]??s[0],s[2]??s[0]]:[1,1,1],f=n?[a[0],a[1]??a[0],a[2]??a[0]]:[1,1,1];return{bandCount:r,minOutput:t,maxOutput:e,minCutOff:o,maxCutOff:u,factor:l,useGamma:n,gamma:m,gammaCorrection:f,stretchType:this.functionArguments.stretchType,isOutputRounded:p,type:"stretch"}}};c([h({json:{write:!0,name:"rasterFunction"}})],ut.prototype,"functionName",void 0),c([h({type:$i,json:{write:!0,name:"rasterFunctionArguments"}})],ut.prototype,"functionArguments",void 0),c([h()],ut.prototype,"rasterArgumentNames",void 0),c([h({json:{write:!0}})],ut.prototype,"lookup",void 0),c([h({json:{write:!0}})],ut.prototype,"cutOffs",void 0),ut=c([$("esri.layers.support.rasterFunctions.StretchFunction")],ut);const Fi=ut;var Oe;let ee=Oe=class extends z{constructor(){super(...arguments),this.attributeTableAsRecordSet=null}clone(){return new Oe({attributeTableAsRecordSet:J(this.attributeTableAsRecordSet)})}};c([h({json:{write:!0}})],ee.prototype,"attributeTableAsRecordSet",void 0),ee=Oe=c([$("esri.layers.support.rasterFunctions.TableFunctionArguments")],ee);const Ni=ee;let Nt=class extends O{constructor(){super(...arguments),this.functionName="Table",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const i=this.sourceRasterInfos[0];if(i.bandCount>1||i.pixelType.startsWith("f"))return{success:!1,supportsGPU:!1,error:"table-function: Source data must be single band and integer pixel type."};const{attributeTableAsRecordSet:t}=this.functionArguments;if(!t)return{success:!1,supportsGPU:!1,error:"table-function: Missing attributeTableAsRecordSet argument."};this.outputPixelType=this._getOutputPixelType(i.pixelType);const e=i.clone();return e.pixelType=this.outputPixelType,e.bandCount=1,e.dataType!=="thematic"&&(e.keyProperties=e.keyProperties?{...e.keyProperties,DataType:"thematic"}:{DataType:"thematic"}),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(i){return i.pixelBlocks?.[0]}};c([h({json:{write:!0,name:"rasterFunction"}})],Nt.prototype,"functionName",void 0),c([h({type:Ni,json:{write:!0,name:"rasterFunctionArguments"}})],Nt.prototype,"functionArguments",void 0),c([h()],Nt.prototype,"rasterArgumentNames",void 0),c([h()],Nt.prototype,"isNoopProcess",void 0),Nt=c([$("esri.layers.support.rasterFunctions.TableFunction")],Nt);const Ri=Nt,B=new Map;function ki(i,t){const{rasterFunctionArguments:e}=i;e&&(e.rasters||[e.raster,e.raster2]).forEach(s=>{s&&typeof s!="number"&&(typeof s=="string"?s.startsWith("http")&&(t.includes(s)||t.push(s)):"rasterFunctionArguments"in s&&ki(s,t))})}function Ci(i,t){if(t=t??{},"function"in(i=J(i))&&"arguments"in i&&i.arguments){const e=Ws(i,new Map,t);if(De(e),!e.renderingRule)throw new Wt("raster-function-helper","Unsupported raster function json.");i=e.renderingRule}if("rasterFunction"in i)return Vs(i=Ge(i),t);throw new Wt("raster-function-helper","unsupported raster function json.")}function Si(i,t){return t[0]==="rasters"&&Array.isArray(i.rasters)?i.rasters:t.map(e=>i[e])}function As(i){return!!(i&&typeof i=="object"&&i.rasterFunction&&i.rasterFunctionArguments)}function Ge(i){const{rasterFunction:t,rasterFunctionArguments:e}=i,s={};for(const n in e){let r=e[n];const a=n.toLowerCase();if(a==="rasters"&&Array.isArray(r))s.rasters=r.map(o=>As(o)?Ge(o):o);else switch(As(r)&&(r=Ge(r)),a){case"dra":s.dra=r;break;case"pspower":s.psPower=r;break;case"pszfactor":s.psZFactor=r;break;case"bandids":s.bandIds=r;break;default:s[n[0].toLowerCase()+n.slice(1)]=r}}return t!=="Local"||s.rasters?.length||(s.rasters=["$$"]),{...i,rasterFunctionArguments:s}}function Vs(i,t){const{rasterFunction:e,rasterFunctionArguments:s}=i,n=i.outputPixelType?.toLowerCase();if(e==null||!B.has(e))throw new Wt("raster-function-helper",`unsupported raster function: ${e}`);const r=B.get(e),a=(typeof r.ctor=="function"?r.ctor:r.ctor.default).fromJSON({...i,outputPixelType:n}),{rasterArgumentNames:o}=a,u=[],l=Si(s,o),p=o[0]==="rasters"||o.length>1,m=[];for(let f=0;f<l.length;f++){const d=l[f];let y;d==null||typeof d=="string"&&d.startsWith("$")?u.push(t?.raster):typeof d=="string"?t[d]&&u.push(t[d]):typeof d!="number"&&"rasterFunction"in d&&(y=Vs(d,t),p||(a.functionArguments[o[f]]=y),u.push(y)),p&&m.push(y??d)}if(p&&(o[0]==="rasters"?a.functionArguments.rasters=m:o.forEach((f,d)=>{a.functionArguments[f]=m[d]})),t){a.sourceRasters=u;const f=t.raster?.url;f&&(a.mainPrimaryRasterId=f)}return a}function Ls(i,t){if(i&&t)for(const e in i){const s=i[e];s&&typeof s=="object"&&"type"in s&&(s.type==="RasterFunctionTemplate"?Ls(s.arguments,t):s.type==="RasterFunctionVariable"&&t[s.name]!=null&&(s.value=t[s.name]))}}function ze(i,t){if(!i||typeof i!="object")return i;const{value:e}=i;if(!e||typeof e!="object")return i.isDataset?"$$":e;if(Array.isArray(e))return e.length===0?[]:e.map(n=>typeof n=="object"&&n.type==="RasterFunctionVariable"?ze(n,t):n);if("value"in e&&["number","string","boolean"].includes(typeof e.value))return e.value;if(i.isDataset&&e.type!=="Scalar")return"$$";if(!("type"in e))return e;let s=e;switch(e.type){case"Scalar":s=e.value;break;case"AlgorithmicColorRamp":s=Ts(e);break;case"MultiPartColorRamp":s={type:"multipart",colorRamps:e.ArrayOfColorRamp.map(Ts)};break;case"ArgumentArray":if(e.elements?.length&&e.elements[0].type!=="RasterStatistics"){const n=[];for(let r=0;r<e.elements.length;r++){const a=e.elements[r],{type:o}=a;if(o)if(o==="RasterFunctionTemplate"){const{renderingRule:u}=Ws(a,t);n.push(u),a._object_id!=null&&t.set(a._object_id,u)}else{if(o!=="RasterFunctionVariable")throw new Wt("raster-function-helper","unsupported raster function json.");{const u=ze(a,t);n.push(u),a._object_id!=null&&t.set(a._object_id,u)}}else n.push(a)}s=n}else s=e.elements}return e._object_id!=null&&t.set(e._object_id,s),s}function Ts(i){const t=i.algorithm??"esriHSVAlgorithm";let{FromColor:e,ToColor:s}=i;if(!Array.isArray(e)){const{r:n,g:r,b:a}=es({h:e.Hue,s:e.Saturation,v:e.Value});e=[n,r,a,e.AlphaValue]}if(!Array.isArray(s)){const{r:n,g:r,b:a}=es({h:s.Hue,s:s.Saturation,v:s.Value});s=[n,r,a,s.AlphaValue]}return{type:"algorithmic",algorithm:t,fromColor:e,toColor:s}}function Ws(i,t,e){e&&Ls(i,e);const s={renderingRule:{},templates:t};return Js(i,s),s}function Js(i,t){if(!i||!t.renderingRule)return;const{renderingRule:e,templates:s}=t,{function:n,arguments:r,_object_id:a}=i;if(!n||!r)return;a!=null&&s.set(a,e),e.rasterFunction=n.type.replace("Function",""),e.outputPixelType=n.pixelType;const o={};e.rasterFunctionArguments=o;for(const u in r){if(u==="type"||u==="object_id"||u==="_object_ref_id")continue;const l=r[u];l&&typeof l=="object"&&"type"in l&&(l.type==="RasterFunctionTemplate"||l.type==="RasterFunctionVariable")?(l.type==="RasterFunctionVariable"?o[u]=ze(l,s):(e.rasterFunctionArguments[u]={},Js(l,{renderingRule:e.rasterFunctionArguments[u],templates:s})),l._object_id!=null&&s.set(l._object_id,o[u])):o[u]=l}switch(o.DEM&&!o.Raster&&(o.Raster=o.DEM,delete o.DEM),e.rasterFunction){case"Stretch":Ii(o);break;case"Colormap":_i(o);break;case"Convolution":Bi(o);break;case"Mask":ji(o)}}function De(i){const{renderingRule:t,templates:e}=i;if(typeof t!="object"||!t?.rasterFunctionArguments||!e.size)return;const{rasterFunctionArguments:s}=t;for(const n in s){const r=s[n],a=n==="_object_ref_id"?r:r&&typeof r=="object"&&"_object_ref_id"in r?r._object_ref_id:null;if(a==null)r&&typeof r=="object"&&(r.rasterFunctionArguments&&De({renderingRule:r,templates:e}),Array.isArray(r)&&r.forEach((o,u)=>{if(typeof o=="object")if(o._object_ref_id!=null){if(!e.has(o._object_ref_id))throw new Wt("raster-function-helper",`unsupported raster function json. _object_ref_id: ${r} does not exist`);const l=e.get(a);l&&typeof l=="object"?Object.assign(o,l):r[u]=l}else De({renderingRule:o,templates:e})}));else{if(!e.has(a))throw new Wt("raster-function-helper",`unsupported raster function json. _object_ref_id: ${a} does not exist`);const o=e.get(a);n!=="_object_ref_id"?s[n]=o:o&&typeof o=="object"&&Object.assign(s,o)}}}function Ii(i){i.Statistics?.length&&typeof i.Statistics=="object"&&(i.Statistics=i.Statistics.map(t=>[t.min,t.max,t.mean,t.standardDeviation])),i.NumberOfStandardDeviation!=null&&(i.NumberOfStandardDeviations=i.NumberOfStandardDeviation,delete i.NumberOfStandardDeviation)}function _i(i){i.ColorRamp?.type?.toLowerCase()==="randomcolorramp"&&(delete i.ColorRamp,i.ColormapName="Random"),i.ColorSchemeType===0&&delete i.ColorRamp}function Bi(i){i.ConvolutionType!=null&&(i.Type=i.ConvolutionType,delete i.ConvolutionType)}function ji(i){i.NoDataValues?.length&&typeof i.NoDataValues[0]=="string"&&(i.NoDataValues=i.NoDataValues.filter(t=>t!=="").map(t=>Number(t)))}B.set("Arithmetic",{desc:"Arithmetic Function",ctor:Sr,rasterArgumentNames:["rasters"]}),B.set("Aspect",{desc:"Aspect Function",ctor:_r,rasterArgumentNames:["raster"]}),B.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:io,rasterArgumentNames:["raster"]}),B.set("Colormap",{desc:"Colormap Function",ctor:wo,rasterArgumentNames:["raster"]}),B.set("ColormapToRGB",{desc:"ColormapToRGB Function",ctor:bo,rasterArgumentNames:["raster"]}),B.set("CompositeBand",{desc:"CompositeBand Function",ctor:To,rasterArgumentNames:["rasters"]}),B.set("ComputeChange",{desc:"ComputeChange Function",ctor:_o,rasterArgumentNames:["rasters"]}),B.set("Convolution",{desc:"Convolution Function",ctor:Uo,rasterArgumentNames:["raster"]}),B.set("ContrastBrightness",{desc:"Contrast Brightness Function",ctor:jo,rasterArgumentNames:["raster"]}),B.set("ExtractBand",{desc:"ExtractBand Function",ctor:Jo,rasterArgumentNames:["raster"]}),B.set("Curvature",{desc:"Curvature Function",ctor:Lo,rasterArgumentNames:["raster"]}),B.set("Hillshade",{desc:"Hillshade Function",ctor:ei,rasterArgumentNames:["raster"]}),B.set("ShadedRelief",{desc:"ShadedRelief Function",ctor:pi,rasterArgumentNames:["raster"]}),B.set("Grayscale",{desc:"Grayscale Function",ctor:Zo,rasterArgumentNames:["raster"]}),B.set("Clip",{desc:"Clip Function",ctor:uo,rasterArgumentNames:["raster"]}),B.set("Local",{desc:"Local Function",ctor:ni,rasterArgumentNames:["rasters"]}),B.set("Mask",{desc:"Mask Function",ctor:oi,rasterArgumentNames:["raster"]}),B.set("NDVI",{desc:"NDVI Function",ctor:ai,rasterArgumentNames:["raster"]}),B.set("Remap",{desc:"Remap Function",ctor:li,rasterArgumentNames:["raster"]}),B.set("Slope",{desc:"Slope Function",ctor:fi,rasterArgumentNames:["raster"]}),B.set("Statistics",{desc:"Focal Statistics Function",ctor:bi,rasterArgumentNames:["raster"]}),B.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:Ti,rasterArgumentNames:["raster"]}),B.set("Stretch",{desc:"Stretch Function",ctor:Fi,rasterArgumentNames:["raster"]}),B.set("Table",{desc:"Attribute Table Function",ctor:Ri,rasterArgumentNames:["raster"]});let Kt=class extends We{get affectsPixelSize(){return!1}forwardTransform(i){return i}inverseTransform(i){return i}};c([h()],Kt.prototype,"affectsPixelSize",null),c([h({json:{write:!0}})],Kt.prototype,"spatialReference",void 0),Kt=c([$("esri.layers.support.rasterTransforms.BaseRasterTransform")],Kt);const Ye=Kt;var Ee;function Ue(i,t,e){const{x:s,y:n}=t;if(e<2)return{x:i[0]+s*i[2]+n*i[4],y:i[1]+s*i[3]+n*i[5]};if(e===2){const f=s*s,d=n*n,y=s*n;return{x:i[0]+s*i[2]+n*i[4]+f*i[6]+y*i[8]+d*i[10],y:i[1]+s*i[3]+n*i[5]+f*i[7]+y*i[9]+d*i[11]}}const r=s*s,a=n*n,o=s*n,u=r*s,l=r*n,p=s*a,m=n*a;return{x:i[0]+s*i[2]+n*i[4]+r*i[6]+o*i[8]+a*i[10]+u*i[12]+l*i[14]+p*i[16]+m*i[18],y:i[1]+s*i[3]+n*i[5]+r*i[7]+o*i[9]+a*i[11]+u*i[13]+l*i[15]+p*i[17]+m*i[19]}}function Ps(i,t,e){const{xmin:s,ymin:n,xmax:r,ymax:a,spatialReference:o}=t;let u=[];if(e<2)u.push({x:s,y:a}),u.push({x:r,y:a}),u.push({x:s,y:n}),u.push({x:r,y:n});else{let m=10;for(let f=0;f<m;f++)u.push({x:s,y:n+(a-n)*f/(m-1)}),u.push({x:r,y:n+(a-n)*f/(m-1)});m=8;for(let f=1;f<=m;f++)u.push({x:s+(r-s)*f/m,y:n}),u.push({x:s+(r-s)*f/m,y:a})}u=u.map(m=>Ue(i,m,e));const l=u.map(m=>m.x),p=u.map(m=>m.y);return new Rt({xmin:Math.min.apply(null,l),xmax:Math.max.apply(null,l),ymin:Math.min.apply(null,p),ymax:Math.max.apply(null,p),spatialReference:o})}function Mi(i){const[t,e,s,n,r,a]=i,o=s*a-r*n,u=r*n-s*a;return[(r*e-t*a)/o,(s*e-t*n)/u,a/o,n/u,-r/o,-s/u]}let q=Ee=class extends Ye{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(i,t){const{coeffX:e,coeffY:s}=t;if(!e?.length||!s?.length||e.length!==s.length)return null;const n=[];for(let r=0;r<e.length;r++)n.push(e[r]),n.push(s[r]);return n}writeForwardCoefficients(i,t,e){const s=[],n=[];for(let r=0;r<i?.length;r++)r%2==0?s.push(i[r]):n.push(i[r]);t.coeffX=s,t.coeffY=n}get inverseCoefficients(){let i=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!i&&t&&this.polynomialOrder<2&&(i=Mi(t)),i}set inverseCoefficients(i){this._set("inverseCoefficients",i)}readInverseCoefficients(i,t){const{inverseCoeffX:e,inverseCoeffY:s}=t;if(!e?.length||!s?.length||e.length!==s.length)return null;const n=[];for(let r=0;r<e.length;r++)n.push(e[r]),n.push(s[r]);return n}writeInverseCoefficients(i,t,e){const s=[],n=[];for(let r=0;r<i?.length;r++)r%2==0?s.push(i[r]):n.push(i[r]);t.inverseCoeffX=s,t.inverseCoeffY=n}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(i){if(i.type==="point"){const t=Ue(this.forwardCoefficients,i,this.polynomialOrder);return new ne({x:t.x,y:t.y,spatialReference:i.spatialReference})}return Ps(this.forwardCoefficients,i,this.polynomialOrder)}inverseTransform(i){if(i.type==="point"){const t=Ue(this.inverseCoefficients,i,this.polynomialOrder);return new ne({x:t.x,y:t.y,spatialReference:i.spatialReference})}return Ps(this.inverseCoefficients,i,this.polynomialOrder)}clone(){return new Ee({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};c([h({json:{write:!0}})],q.prototype,"polynomialOrder",void 0),c([h()],q.prototype,"forwardCoefficients",void 0),c([Ct("forwardCoefficients",["coeffX","coeffY"])],q.prototype,"readForwardCoefficients",null),c([Lt("forwardCoefficients")],q.prototype,"writeForwardCoefficients",null),c([h({json:{write:!0}})],q.prototype,"inverseCoefficients",null),c([Ct("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],q.prototype,"readInverseCoefficients",null),c([Lt("inverseCoefficients")],q.prototype,"writeInverseCoefficients",null),c([h()],q.prototype,"affectsPixelSize",null),c([H({PolynomialXform:"polynomial"})],q.prototype,"type",void 0),q=Ee=c([$("esri.layers.support.rasterTransforms.PolynomialTransform")],q);const Oi=q;var Ve;let Yt=Ve=class extends Ye{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(i){return(i=i.clone()).type==="point"?(i.x>180+this.tolerance&&(i.x-=360),i):(i.xmin>=180-this.tolerance?(i.xmax-=360,i.xmin-=360):i.xmax>180+this.tolerance&&(i.xmin=-180,i.xmax=180),i)}inverseTransform(i){return(i=i.clone()).type==="point"?(i.x<-this.tolerance&&(i.x+=360),i):(i.xmin<-this.tolerance&&(i.xmin+=360,i.xmax+=360),i)}clone(){return new Ve({tolerance:this.tolerance})}};c([H({GCSShiftXform:"gcs-shift"})],Yt.prototype,"type",void 0),c([h()],Yt.prototype,"tolerance",void 0),Yt=Ve=c([$("esri.layers.support.rasterTransforms.GCSShiftTransform")],Yt);const Gi=Yt;var Le;let se=Le=class extends Ye{constructor(){super(...arguments),this.type="identity"}clone(){return new Le}};c([H({IdentityXform:"identity"})],se.prototype,"type",void 0),se=Le=c([$("esri.layers.support.rasterTransforms.IdentityTransform")],se);const zi=se,Di={GCSShiftXform:Gi,IdentityXform:zi,PolynomialXform:Oi};function Ei(i){if(!i?.type)return null;const e=Di[i?.type];if(e){const s=new e;return s.read(i),s}return null}class Ui{convertVectorFieldData(t){const e=b.fromJSON(t.pixelBlock),s=nn(e,t.type);return Promise.resolve(s!=null?s.toJSON():null)}computeStatisticsHistograms(t){const e=b.fromJSON(t.pixelBlock),s=Tn(e);return Promise.resolve(s)}async decode(t){const e=await Pn(t.data,t.options);return e&&e.toJSON()}symbolize(t){t.pixelBlock=b.fromJSON(t.pixelBlock),t.extent=t.extent?Rt.fromJSON(t.extent):null;const e=this.symbolizer.symbolize(t);return Promise.resolve(e!=null?e.toJSON():null)}async updateSymbolizer(t){this.symbolizer=$n.fromJSON(t.symbolizerJSON),t.histograms&&this.symbolizer?.rendererJSON.type==="rasterStretch"&&(this.symbolizer.rendererJSON.histograms=t.histograms)}async updateRasterFunction(t){this.rasterFunction=Ci(t.rasterFunctionJSON)}async process(t){const e=this.rasterFunction.process({extent:Rt.fromJSON(t.extent),primaryPixelBlocks:t.primaryPixelBlocks.map(s=>s!=null?b.fromJSON(s):null),primaryPixelSizes:t.primaryPixelSizes?.map(s=>s!=null?ne.fromJSON(s):null),primaryRasterIds:t.primaryRasterIds});return e!=null?e.toJSON():null}stretch(t){const e=this.symbolizer.simpleStretch(b.fromJSON(t.srcPixelBlock),t.stretchParams);return Promise.resolve(e?.toJSON())}estimateStatisticsHistograms(t){const e=Fn(b.fromJSON(t.srcPixelBlock));return Promise.resolve(e)}split(t){const e=rn(b.fromJSON(t.srcPixelBlock),t.tileSize,t.maximumPyramidLevel??0,t.useBilinear===!1);return e&&e.forEach((s,n)=>{e.set(n,s?.toJSON())}),Promise.resolve(e)}clipTile(t){const e=b.fromJSON(t.pixelBlock),s=on({...t,pixelBlock:e});return Promise.resolve(s?.toJSON())}async mosaicAndTransform(t){const e=t.srcPixelBlocks.map(a=>a?new b(a):null),s=an(e,t.srcMosaicSize,{blockWidths:t.blockWidths,alignmentInfo:t.alignmentInfo,clipOffset:t.clipOffset,clipSize:t.clipSize});let n,r=s;return t.coefs&&(r=un(s,t.destDimension,t.coefs,t.sampleSpacing,t.interpolation)),t.projectDirections&&t.gcsGrid&&(n=ln(t.destDimension,t.gcsGrid),r=cn(r,t.isUV?"vector-uv":"vector-magdir",n)),{pixelBlock:r?.toJSON(),localNorthDirections:n}}async createFlowMesh(t,e){const s={data:new Float32Array(t.flowData.buffer),mask:new Uint8Array(t.flowData.maskBuffer),width:t.flowData.width,height:t.flowData.height},{vertexData:n,indexData:r}=await pn(t.meshType,t.simulationSettings,s,e.signal);return{result:{vertexBuffer:n.buffer,indexBuffer:r.buffer},transferList:[n.buffer,r.buffer]}}async getProjectionOffsetGrid(t){const e=Rt.fromJSON(t.projectedExtent),s=Rt.fromJSON(t.srcBufferExtent);let n=null;t.datumTransformationSteps&&(n=new Xs({steps:t.datumTransformationSteps})),(t.includeGCSGrid||Sn(e.spatialReference,s.spatialReference,n))&&await In();const r=t.rasterTransform?Ei(t.rasterTransform):null;return _n({...t,projectedExtent:e,srcBufferExtent:s,datumTransformation:n,rasterTransform:r})}}const Pa=Object.freeze(Object.defineProperty({__proto__:null,default:Ui},Symbol.toStringTag,{value:"Module"}));export{Pa as R,Ci as T,Gi as c,Qi as h,Dn as l,ki as w,Oi as y};
