import{s as I,n as g}from"./main-D6UWMbWJ.js";import{U as f,C as a}from"./enums-Dk3osxpS.js";import{s as $}from"./getDataTypeBytes-DflDeYgv.js";import{t as w}from"./VertexElementDescriptor-BOD-G50G.js";import{i as P}from"./BoundingBox-CnpCxTZE.js";const S=()=>g.getLogger("esri.views.2d.engine.webgl.Utils");function D(e){switch(e){case f.UNSIGNED_BYTE:return 1;case f.UNSIGNED_SHORT_4_4_4_4:return 2;case f.FLOAT:return 4;default:return void S().error(new I("webgl-utils",`Unable to handle type ${e}`))}}function G(e){switch(e){case f.UNSIGNED_BYTE:return Uint8Array;case f.UNSIGNED_SHORT_4_4_4_4:return Uint16Array;case f.FLOAT:return Float32Array;default:return void S().error(new I("webgl-utils",`Unable to handle type ${e}`))}}function L(e){const t=new Map;for(const n in e){const r=e[n];let i=0;t.set(n,r.map(s=>{const o=new w(s.name,s.count,s.type,i,0,s.normalized||!1);return i+=s.count*$(s.type),o})),t.get(n).forEach(s=>s.stride=i)}return t}const Y=e=>{const t=new Map;for(const n in e)for(const r of e[n])t.set(r.name,r.location);return t},B=e=>{const t={};return e.forEach((n,r)=>t[r]=n?.length?n[0].stride:0),t},E=new Map,X=(e,t)=>{if(!E.has(e)){const n=L(t),r={strides:B(n),bufferLayouts:n,attributes:Y(t)};E.set(e,r)}return E.get(e)},K=e=>e.includes("data:image/svg+xml");function V(e){const t=[];for(let n=0;n<e.length;n++)t.push(e.charCodeAt(n));return t}function J(e){if(e==null)return"";const{type:t}=e;switch(t){case"CIMMarkerPlacementAlongLineRandomSize":return`${t}-${e.seed}-${e.randomization}`;case"CIMMarkerPlacementAlongLineVariableSize":return`${t}-${e.maxRandomOffset}-${e.numberOfSizes}-${e.seed}-${e.variationMethod}`;case"CIMMarkerPlacementAtExtremities":return`${t}-${e.extremityPlacement}-${e.offsetAlongLine}`;case"CIMMarkerPlacementAtRatioPositions":return`${t}-${e.beginPosition}-${e.endPosition}-${e.flipFirst}-${JSON.stringify(e.positionArray)}`;case"CIMMarkerPlacementAtMeasuredUnits":return`${t}-${e.interval}-${e.skipMarkerRate}-${e.placeAtExtremities}`;case"CIMMarkerPlacementInsidePolygon":return`${t}-${e.stepX}-${e.stepY}-${e.randomness}-${e.gridType}-${e.seed}-${e.shiftOddRows}`;case"CIMMarkerPlacementOnLine":return`${t}-${e.relativeTo}-${e.startPointOffset}`;case"CIMMarkerPlacementOnVertices":return`${t}-${e.placeOnControlPoints}-${e.placeOnEndPoints}-${e.placeOnRegularVertices}`;case"CIMMarkerPlacementPolygonCenter":return`${t}-${e.method}`;default:return`${t}`}}let d=class h{constructor(t,n,r,i,s,o,c){this.instanceId=t,this.textureKey=n,this.indexStart=r,this.indexCount=i,this.vertexStart=s,this.vertexCount=o,this.overlaps=c}updateBaseOffsets(t){this.vertexStart+=t.vertexFrom,this.indexStart+=t.indexFrom}clone(){return new h(this.instanceId,this.textureKey,this.indexStart,this.indexCount,this.vertexStart,this.vertexCount,this.overlaps)}static write(t,n,r,i,s,o,c,u){t.push(n),t.push(r),t.push(i),t.push(s),t.push(o),t.push(c),t.push(u)}serialize(t){return t.push(this.instanceId),t.push(this.textureKey),t.push(this.indexStart),t.push(this.indexCount),t.push(this.vertexStart),t.push(this.vertexCount),t.push(this.overlaps),t}static deserialize(t){const n=t.readInt32(),r=t.readInt32(),i=t.readInt32(),s=t.readInt32(),o=t.readInt32(),c=t.readInt32(),u=t.readInt32();return new h(n,r,i,s,o,c,u)}};d.byteSizeHint=7*Uint32Array.BYTES_PER_ELEMENT;function _(e,t){if(t!==null){e.push(t.length);for(const n of t)n.serialize(e);return e}e.push(0)}function y(e,t,n){const r=e.readInt32(),i=new Array(r);for(let s=0;s<i.length;s++)i[s]=t.deserialize(e,n);return i}let R=class F{constructor(t,n){this.id=t,this.sortKey=n,this.records=[]}serialize(t){return t.push(this.id),t.writeF32(this.sortKey),_(t,this.records),t}static deserialize(t){const n=t.readInt32(),r=t.readF32(),i=new F(n,r);return i.records=y(t,d)??[],i}};R.byteSizeHint=2*Uint32Array.BYTES_PER_ELEMENT+d.byteSizeHint;class U{constructor(t,n,r,i,s,o,c,u,l=[]){this.entityTexel=t,this.anchorX=n,this.anchorY=r,this.directionX=i,this.directionY=s,this.maxScale=o,this.minScale=c,this.referenceBounds=u,this.bounds=l}serialize(t){t.push(this.entityTexel),t.writeF32(this.anchorX),t.writeF32(this.anchorY),t.writeF32(this.directionX),t.writeF32(this.directionY),t.writeF32(this.maxScale),t.writeF32(this.minScale),this.referenceBounds===null?(t.writeF32(0),t.writeF32(0),t.writeF32(0)):(t.writeF32(this.referenceBounds.size),t.writeF32(this.referenceBounds.offsetX),t.writeF32(this.referenceBounds.offsetY)),_(t,this.bounds)}static deserialize(t){const n=t.readInt32(),r=t.readF32(),i=t.readF32(),s=t.readF32(),o=t.readF32(),c=t.readF32(),u=t.readF32(),l=t.readF32(),M=t.readF32(),N=t.readF32(),A=y(t,P)??[];return new U(n,r,i,s,o,c,u,{size:l,offsetX:M,offsetY:N},A)}}const m=new Float32Array(1),x=new Uint32Array(m.buffer);function b(e){return m[0]=e,x[0]}function j(e,t){return 65535&e|t<<16}function T(e){const t=b(e),n=t>>>31;let r=t>>>23&255,i=8388607&t;return r-=127,r>15?n<<15|31744:r<-25?0:(r<-14&&(i+=8388608,i/=2**(-14-r),r=-15),r+=15,i/=8192,i=O(i,1023),n<<15|r<<10|i)}function O(e,t){const n=Math.floor(e),r=e-n;return n<t&&(r>.5||r===.5&&n%2==1)?n+1:n}function p(e){let t=e>>>15,n=e>>10&31,r=1023&e;return t=t?-1:1,n-=15,r/=1024,n>-15?r+=1:n=-14,t*2**n*r}function q(e,t,n,r){const i=n.packPrecisionFactor??1;switch(n.type){case a.BYTE:if(n.count===1)e.setInt8(r+n.offset,t*i);else for(let s=0;s<n.count;s++){const o=s*Int8Array.BYTES_PER_ELEMENT;e.setInt8(r+n.offset+o,t[s]*i)}break;case a.UNSIGNED_BYTE:if(n.count===1)e.setUint8(r+n.offset,t*i);else for(let s=0;s<n.count;s++){const o=s*Uint8Array.BYTES_PER_ELEMENT;e.setUint8(r+n.offset+o,t[s]*i)}break;case a.SHORT:if(n.count===1)e.setInt16(r+n.offset,t*i,!0);else for(let s=0;s<n.count;s++){const o=s*Int16Array.BYTES_PER_ELEMENT;e.setInt16(r+n.offset+o,t[s]*i,!0)}break;case a.UNSIGNED_SHORT:if(n.count===1)e.setUint16(r+n.offset,t*i,!0);else for(let s=0;s<n.count;s++){const o=s*Uint16Array.BYTES_PER_ELEMENT;e.setUint16(r+n.offset+o,t[s]*i,!0)}break;case a.INT:if(n.count===1)e.setInt32(r+n.offset,t*i,!0);else for(let s=0;s<n.count;s++){const o=s*Int32Array.BYTES_PER_ELEMENT;e.setInt32(r+n.offset+o,t[s]*i,!0)}break;case a.UNSIGNED_INT:if(n.count===1)e.setUint32(r+n.offset,t*i,!0);else for(let s=0;s<n.count;s++){const o=s*Uint32Array.BYTES_PER_ELEMENT;e.setUint32(r+n.offset+o,t[s]*i,!0)}break;case a.FLOAT:if(n.count===1)e.setFloat32(r+n.offset,t*i,!0);else for(let s=0;s<n.count;s++){const o=s*Float32Array.BYTES_PER_ELEMENT;e.setFloat32(r+n.offset+o,t[s]*i,!0)}break;case a.HALF_FLOAT:if(n.count===1)e.setUint16(r+n.offset,T(t*i),!0);else for(let s=0;s<n.count;s++){const o=s*Uint16Array.BYTES_PER_ELEMENT;e.setUint16(r+n.offset+o,T(t[s]*i),!0)}}}function Q(e,t,n){switch(t.type){case a.BYTE:{if(t.count===1)return e.getInt8(n+t.offset);const r=[];for(let i=0;i<t.count;i++){const s=i*Int8Array.BYTES_PER_ELEMENT;r.push(e.getInt8(n+t.offset+s))}return r}case a.UNSIGNED_BYTE:{if(t.count===1)return e.getUint8(n+t.offset);const r=[];for(let i=0;i<t.count;i++){const s=i*Uint8Array.BYTES_PER_ELEMENT;r.push(e.getUint8(n+t.offset+s))}return r}case a.SHORT:{if(t.count===1)return e.getInt16(n+t.offset,!0);const r=[];for(let i=0;i<t.count;i++){const s=i*Int16Array.BYTES_PER_ELEMENT;r.push(e.getInt16(n+t.offset+s,!0))}return r}case a.UNSIGNED_SHORT:{if(t.count===1)return e.getUint16(n+t.offset,!0);const r=[];for(let i=0;i<t.count;i++){const s=i*Uint16Array.BYTES_PER_ELEMENT;r.push(e.getUint16(n+t.offset+s,!0))}return r}case a.INT:{if(t.count===1)return e.getInt32(n+t.offset,!0);const r=[];for(let i=0;i<t.count;i++){const s=i*Int32Array.BYTES_PER_ELEMENT;r.push(e.getInt32(n+t.offset+s,!0))}return r}case a.UNSIGNED_INT:{if(t.count===1)return e.getUint32(n+t.offset,!0);const r=[];for(let i=0;i<t.count;i++){const s=i*Uint32Array.BYTES_PER_ELEMENT;r.push(e.getUint32(n+t.offset+s,!0))}return r}case a.FLOAT:{if(t.count===1)return e.getFloat32(n+t.offset,!0);const r=[];for(let i=0;i<t.count;i++){const s=i*Float32Array.BYTES_PER_ELEMENT;r.push(e.getFloat32(n+t.offset+s,!0))}return r}case a.HALF_FLOAT:{if(t.count===1)return p(e.getUint16(n+t.offset,!0));const r=[];for(let i=0;i<t.count;i++){const s=i*Uint16Array.BYTES_PER_ELEMENT;r.push(p(e.getUint16(n+t.offset+s,!0)))}return r}}}export{X as $,q as a,j as b,Q as c,V as d,K as f,G as i,y as n,D as o,J as p,U as r,R as s,d as t};
