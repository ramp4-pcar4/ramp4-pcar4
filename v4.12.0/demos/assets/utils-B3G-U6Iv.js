import{s as l,C as h}from"./main-D6UWMbWJ.js";import{i as I}from"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import S from"./PortalItem-BUPtFYt9.js";import{o as g}from"./jsonContext-BPKshDab.js";import{i as P,E as N}from"./portalItemUtils-HRSUZPvT.js";function f(e){e?.writtenProperties&&e.writtenProperties.forEach(({target:r,propName:o,newOrigin:t})=>{I(r)&&t&&r.originOf(o)!==t&&r.updateOrigin(o,t)})}async function T(e){const r=[];for(const o of e.allLayers)if("beforeSave"in o&&typeof o.beforeSave=="function"){const t=o.beforeSave();t&&r.push(t)}await Promise.allSettled(r)}const x=new Set(["layer:unsupported","property:unsupported","symbol:unsupported","symbol-layer:unsupported","url:unsupported"]);function O(e,r,o){let t=(e.messages??[]).filter(({type:i})=>i==="error").map(({name:i,message:n,details:s})=>new l(i,n,s));if(e.blockedRelativeUrls&&(t=t.concat(e.blockedRelativeUrls.map(i=>new l("url:unsupported",`Relative url '${i}' is not supported`)))),o){const{ignoreUnsupported:i,supplementalUnsupportedErrors:n=[],requiredPropertyChecksDisabled:s}=o;i&&(t=t.filter(({name:p})=>!(x.has(p)||n.includes(p)))),s&&(t=t.filter(p=>p.name!=="web-document-write:property-required"))}if(t.length>0)throw new l(r.errorName,"Failed to save due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:t})}function U(e,r,o){const t=o(e);if(!t.isValid)throw new l(`${r}:invalid-parameters`,t.errorMessage,{layer:e})}async function y(e){const{layer:r,errorNamePrefix:o,validateLayer:t}=e;await r.load(),U(r,o,t)}function d(e,r){return`Layer (title: ${e.title}, id: ${e.id}) of type '${e.declaredClass}' ${r}`}function w(e){const{item:r,errorNamePrefix:o,layer:t,validateItem:i}=e;if(E(e),i){const n=i(r);if(!n.isValid)throw new l(`${o}:invalid-parameters`,n.errorMessage,{layer:t})}}function E(e){const{item:r,itemType:o,additionalItemType:t,errorNamePrefix:i,layer:n}=e,s=[o];if(t&&s.push(t),!s.includes(r.type)){const p=s.map(a=>`'${a}'`).join(", ");throw new l(`${i}:portal-item-wrong-type`,`Portal item type should be one of: "${p}"`,{item:r,layer:n})}}function C(e){const{layer:r,errorNamePrefix:o}=e,{portalItem:t}=r;if(!t)throw new l(`${o}:portal-item-not-set`,d(r,"requires the portalItem property to be set"));if(!t.loaded)throw new l(`${o}:portal-item-not-loaded`,d(r,"cannot be saved to a portal item that does not exist or is inaccessible"));w({...e,item:t})}function J(e){const{newItem:r,itemType:o}=e;let t=S.from(r);return t.id&&(t=t.clone(),t.id=null),t.type??=o,t.portal??=h.getDefault(),w({...e,item:t}),t}function v(e){return g(e,"portal-item")}async function $(e,r,o){"beforeSave"in e&&typeof e.beforeSave=="function"&&await e.beforeSave();const t=e.write({},r);return await Promise.all(r.resources?.pendingOperations??[]),O(r,{errorName:"layer-write:unsupported"},o),t}function b(e){P(e,N.JSAPI),e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter((r,o,t)=>t.indexOf(r)===o))}async function R(e,r,o){const t=e.portal;await t.signIn(),await t.user.addItem({item:e,data:r,folder:o?.folder})}async function M(e,r){const{layer:o,createItemData:t,createJSONContext:i,setItemProperties:n,saveResources:s,supplementalUnsupportedErrors:p}=e;await y(e),C(e);const a=o.portalItem,u=i?i(a):v(a),c=await $(o,u,{...r,supplementalUnsupportedErrors:p}),m=await t({layer:o,layerJSON:c},a);return await n?.(o,a,m),b(a),await a.update({data:m}),f(u),await s?.(a,u),a}async function V(e,r){const{layer:o,createItemData:t,createJSONContext:i,setItemProperties:n,saveResources:s,supplementalUnsupportedErrors:p}=e;await y(e);const a=J(e),u=i?i(a):v(a),c=await $(o,u,{...r,supplementalUnsupportedErrors:p}),m=await t({layer:o,layerJSON:c},a);return await n(o,a,m),b(a),await R(a,m,r),o.portalItem=a,f(u),await s?.(a,u),a}export{V as $,b as I,M as P,J as d,C as f,f as i,d as m,U as p,T as r,O as t,R as v,$ as w};
