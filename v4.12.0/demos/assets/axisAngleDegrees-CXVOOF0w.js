import{aT as j,aU as x,aV as y,aW as U,aX as b}from"./main-D6UWMbWJ.js";import{j as d}from"./mat4-mplESjCB.js";import{v,b as e,x as k}from"./quat-DOvbuK1U.js";import{e as A}from"./quatf64-aQ5IuZRd.js";import{s as q,_ as w,A as z,B as C}from"./vec32-DvB22h0L.js";function o(t=D){return[t[0],t[1],t[2],t[3]]}function f(t,r,n=o()){return q(n,t),n[3]=r,n}function T(t,r,n){return w(n,t,r),z(n,n),n[3]=-C(t,r),n}function V(t,r=o()){const n=d(u,t);return B(r,j(v(r,n))),r}function i(t,r,n=o()){return e(u,t,c(t)),e(m,r,c(r)),k(u,m,u),B(n,j(v(n,u)))}function W(t,r,n,s=o()){return f(x,t,a),f(y,r,$),f(U,n,p),i(a,$,a),i(a,p,s),s}function X(t){return t}function _(t){return t[3]}function c(t){return b(t[3])}function B(t,r){return t[3]=r,t}const D=[0,0,1,0],u=A(),m=A();o();const a=o(),$=o(),p=o();export{D as B,W as d,o as j,V as k,f as q,T as v,X as w,_ as y,c as z};
