import{dC as f,bR as j}from"./main-D6UWMbWJ.js";import{w as x,j as G}from"./operatorOffset-DEyLTuUd.js";import{getSpatialReference as u,fromGeometry as y,toGeometry as p,fromGeometries as g}from"./jsonConverter-CxSHL2F-.js";import"./preload-helper-ExcqyqRp.js";import"./SimpleGeometryCursor-B92kdZ15.js";import"./ProjectionTransformation-DYBnfgxa.js";const l={round:0,bevel:1,miter:2,square:3};function S(t,e,m={}){const{miterLimit:a=10,flattenError:s=0,joins:c="round",unit:r}=m,o=u(t);r&&o&&(e=f(e,r,o));const i=y(t),n=i.getSpatialReference();return p(x(i.getGeometry(),n,e,l[c],a,s),n)}function $(t,e,m={}){const{miterLimit:a=10,flattenError:s=0,joins:c="round",unit:r}=m,o=u(t);r&&o&&(e=f(e,r,o));const[i,n]=g(t);return G(i,n,e,l[c],a,s).map(d=>p(d,n)).filter(j)}export{S as execute,$ as executeMany};
