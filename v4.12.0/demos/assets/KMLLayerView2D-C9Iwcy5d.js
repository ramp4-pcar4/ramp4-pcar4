import{ak as C,bf as Q,gD as X,cp as Z,b9 as W,dq as q,gE as R,gF as D,gG as M,gH as ee,O as A,du as te,v as f,x as _,ar as U,J as H,D as ie,ap as O,V as se,a6 as ae,fW as re,d8 as k,gI as oe,gJ as N,cl as ne}from"./main-D6UWMbWJ.js";import{O as L,K as le}from"./projection-F5U3p10J.js";import{fromJSON as he}from"./jsonUtils-DWiHYlpG.js";import{d as pe}from"./FeatureSet-EjAFZH0Q.js";import{f as me}from"./utils-BIJX9DmY.js";import{c as $}from"./GraphicsCollection-B4inrSzy.js";import{g as ce,f as ue,S as de}from"./BitmapTechnique-CyzCkUvJ.js";import{r as fe}from"./BitmapContainer-C212I0yG.js";import{S as ge}from"./LayerView2D-B0UOVQoI.js";import{t as E}from"./GraphicContainer-B6v7Qatg.js";import{A as T}from"./GraphicsView2D-DSSW-FKe.js";import{y as ye}from"./LayerView-BS4FWKIk.js";import{z as _e,a as we}from"./rasterProjectionHelper-Cc7dG1NZ.js";import{n as xe}from"./VertexStream-BQIof7n5.js";import{y as be,o as Se}from"./MaterialPrograms-BJWfXKSq.js";import{D as z,G as Ve,U as ve,X as F}from"./enums-Dk3osxpS.js";import{x as Ie}from"./FramebufferObject-BNB8Tiie.js";import{m as Pe}from"./rasterUtils-BzzEsbRj.js";import{p as B,w as Ce}from"./Texture-pu6CNJho.js";const De={esriGeometryPoint:"points",esriGeometryPolyline:"polylines",esriGeometryPolygon:"polygons"};function Me(t){const e=t.folders||[],i=e.slice(),a=new Map,s=new Map,r=new Map,h=new Map,p=new Map,l={esriGeometryPoint:s,esriGeometryPolyline:r,esriGeometryPolygon:h};(t.featureCollection?.layers||[]).forEach(o=>{const c=C(o);c.featureSet.features=[];const m=o.featureSet.geometryType;a.set(m,c);const g=o.layerDefinition.objectIdField;m==="esriGeometryPoint"?G(s,g,o.featureSet.features):m==="esriGeometryPolyline"?G(r,g,o.featureSet.features):m==="esriGeometryPolygon"&&G(h,g,o.featureSet.features)}),t.groundOverlays&&t.groundOverlays.forEach(o=>{p.set(o.id,o)}),e.forEach(o=>{o.networkLinkIds.forEach(c=>{const m=$e(c,o.id,t.networkLinks);m&&i.push(m)})}),i.forEach(o=>{if(o.featureInfos){o.points=C(a.get("esriGeometryPoint")),o.polylines=C(a.get("esriGeometryPolyline")),o.polygons=C(a.get("esriGeometryPolygon")),o.mapImages=[];for(const c of o.featureInfos)switch(c.type){case"esriGeometryPoint":case"esriGeometryPolyline":case"esriGeometryPolygon":{const m=l[c.type].get(c.id);m&&o[De[c.type]]?.featureSet.features.push(m);break}case"GroundOverlay":{const m=p.get(c.id);m&&o.mapImages.push(m);break}}o.fullExtent=K([o])}});const n=K(i);return{folders:e,sublayers:i,extent:n}}function ke(t,e,i,a){const s=Q?.findCredential(t);t=X(t,{token:s?.token});const r=Z.kmlServiceUrl;return W(r,{query:{url:t,model:"simple",folders:"",refresh:i!==0||void 0,outSR:JSON.stringify(e)},responseType:"json",signal:a})}function Ze(t,e,i=null,a=[]){const s=[],r={},h=e.sublayers,p=new Set(e.folders.map(l=>l.id));return h.forEach(l=>{const n=new t;if(i?n.read(l,i):n.read(l),a.length&&p.has(n.id)&&(n.visible=a.includes(n.id)),r[l.id]=n,l.parentFolderId!=null&&l.parentFolderId!==-1){const o=r[l.parentFolderId];o.sublayers||(o.sublayers=[]),o.sublayers?.unshift(n)}else s.unshift(n)}),s}function G(t,e,i){i.forEach(a=>{t.set(a.attributes[e],a)})}function Re(t,e){let i;return e.some(a=>a.id===t&&(i=a,!0)),i}function $e(t,e,i){const a=Re(t,i);return a&&(a.parentFolderId=e,a.networkLink=a),a}async function j(t){const e=pe.fromJSON(t.featureSet).features,i=t.layerDefinition,a=he(i.drawingInfo.renderer),s=te.fromJSON(t.popupInfo),r=[];for(const h of e){const p=await a.getSymbolAsync(h);h.symbol=p,h.popupTemplate=s,h.visible=!0,r.push(h)}return r}function K(t){const e=q(R),i=q(R);for(const a of t){if(a.polygons?.featureSet?.features)for(const s of a.polygons.featureSet.features)D(e,s.geometry),M(i,e);if(a.polylines?.featureSet?.features)for(const s of a.polylines.featureSet.features)D(e,s.geometry),M(i,e);if(a.points?.featureSet?.features)for(const s of a.points.featureSet.features)D(e,s.geometry),M(i,e);if(a.mapImages)for(const s of a.mapImages)D(e,s.extent),M(i,e)}return ee(i,R)?void 0:{xmin:i[0],ymin:i[1],zmin:i[2],xmax:i[3],ymax:i[4],zmax:i[5],spatialReference:A.WGS84}}let w=class extends ie{constructor(){super(...arguments),this.id=0,this.rotation=0,this.href="",this.extent=new U}};f([_({nonNullable:!0,json:{write:!0}})],w.prototype,"id",void 0),f([_({nonNullable:!0,json:{write:!0}})],w.prototype,"rotation",void 0),f([_({nonNullable:!0,json:{write:!0}})],w.prototype,"href",void 0),f([_({type:U,nonNullable:!0,json:{write:!0}})],w.prototype,"extent",void 0),w=f([H("esri.layers.support.KMLMapImage")],w);class u{constructor(e){if(this._ownsRctx=!1,e)this._ownsRctx=!1,this._rctx=e;else{if(u._instance)return u._instanceRefCount++,u._instance;u._instanceRefCount=1,u._instance=this,this._ownsRctx=!0;const s=document.createElement("canvas").getContext("webgl2");s.getExtension("OES_texture_float"),this._rctx=new be(s,{})}const i={applyProjection:!0,bilinear:!1,bicubic:!1},a=Se("raster/reproject","raster/reproject",new Map([["a_position",0]]),i);this._program=this._rctx.programCache.acquire(a.shaders.vertexShader,a.shaders.fragmentShader,a.attributes),this._rctx.useProgram(this._program),this._program.setUniform1f("u_opacity",1),this._program.setUniform1i("u_image",0),this._program.setUniform1i("u_flipY",0),this._program.setUniform1i("u_transformGrid",1),this._quad=new xe(this._rctx,[0,0,1,0,0,1,1,1])}reprojectTexture(e,i,a=!1){const s=L(e.extent,i),r=new O({x:(e.extent.xmax-e.extent.xmin)/e.texture.descriptor.width,y:(e.extent.ymax-e.extent.ymin)/e.texture.descriptor.height,spatialReference:e.extent.spatialReference}),{x:h,y:p}=_e(r,i,e.extent);let l=(h+p)/2;const n=Math.round((s.xmax-s.xmin)/l),o=Math.round((s.ymax-s.ymin)/l);l=(s.width/n+s.height/o)/2;const c=new O({x:l,y:l,spatialReference:s.spatialReference}),m=we({projectedExtent:s,srcBufferExtent:e.extent,pixelSize:c,hasWrapAround:!0,spacing:[16,16]}),g=Pe(this._rctx,m),S=new B(n,o);S.wrapMode=z.CLAMP_TO_EDGE;const d=new Ie(this._rctx,S);this._rctx.bindFramebuffer(d),this._rctx.setViewport(0,0,n,o),this._rctx.useProgram(this._program),this._rctx.bindTexture(e.texture,0),this._rctx.bindTexture(g,1),this._quad.bind();const{width:V=0,height:v=0}=e.texture.descriptor;if(this._program.setUniform2f("u_srcImageSize",V,v),this._program.setUniform2fv("u_transformSpacing",m.spacing),this._program.setUniform2fv("u_transformGridSize",m.size),this._program.setUniform2f("u_targetImageSize",n,o),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),g.dispose(),a){const{width:y,height:P}=d,b=new ImageData(y??0,P??0);d.readPixels(0,0,y??0,P??0,Ve.RGBA,ve.UNSIGNED_BYTE,b.data);const Y=d.detachColorTexture(F.COLOR_ATTACHMENT0);return d.dispose(),{texture:Y,extent:s,imageData:b}}const I=d.detachColorTexture(F.COLOR_ATTACHMENT0);return d.dispose(),{texture:I,extent:s}}reprojectBitmapData(e,i){const a=ce(e.bitmapData)?ue(e.bitmapData):e.bitmapData,s=new B;s.wrapMode=z.CLAMP_TO_EDGE,s.width=e.bitmapData.width,s.height=e.bitmapData.height;const r=new Ce(this._rctx,s,a),h=this.reprojectTexture({texture:r,extent:e.extent},i,!0);h.texture.dispose();const p=document.createElement("canvas"),l=h.imageData;return p.width=l.width,p.height=l.height,p.getContext("2d").putImageData(l,0,0),{bitmapData:p,extent:h.extent}}async loadAndReprojectBitmapData(e,i,a){const s=(await W(e,{responseType:"image"})).data,r=document.createElement("canvas");r.width=s.width,r.height=s.height;const h=r.getContext("2d");h.drawImage(s,0,0);const p=h.getImageData(0,0,r.width,r.height);if(i.spatialReference.equals(a))return{bitmapData:p,extent:i};const l=this.reprojectBitmapData({bitmapData:p,extent:i},a);return{bitmapData:l.bitmapData,extent:l.extent}}destroy(){this._ownsRctx?(u._instanceRefCount--,u._instanceRefCount===0&&(this._quad.dispose(),this._program.dispose(),this._rctx.dispose(),u._instance=null)):(this._quad.dispose(),this._program.dispose())}}u._instanceRefCount=0;class J{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}}let x=class extends ge(ye){constructor(){super(...arguments),this._bitmapIndex=new Map,this._mapImageContainer=new fe,this._kmlVisualData=new J,this._fetchController=null,this.allVisiblePoints=new $,this.allVisiblePolylines=new $,this.allVisiblePolygons=new $,this.allVisibleMapImages=new se}async hitTest(t,e){const i=this.layer;return[this._pointsView?.hitTest(t),this._polylinesView?.hitTest(t),this._polygonsView?.hitTest(t)].flat().filter(Boolean).map(a=>(a.layer=i,a.sourceLayer=i,{type:"graphic",graphic:a,layer:i,mapPoint:t}))}update(t){this._polygonsView&&this._polygonsView.processUpdate(t),this._polylinesView&&this._polylinesView.processUpdate(t),this._pointsView&&this._pointsView.processUpdate(t)}attach(){this._fetchController=new AbortController,this.container.addChild(this._mapImageContainer),this._polygonsView=new T({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new E(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new T({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new E(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new T({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new E(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.addAttachHandles([this.allVisibleMapImages.on("change",t=>{t.added.forEach(e=>this._addMapImage(e)),t.removed.forEach(e=>this._removeMapImage(e))}),ae(()=>this.layer.visibleSublayers,t=>{for(const e of this._kmlVisualData.allSublayers.values())e.visibility=0;for(const e of t){const i=this._kmlVisualData.allSublayers.get(e.id);i&&(i.visibility=1)}this._refreshCollections()})]),this._updatingHandles.addPromise(this._fetchService(this._fetchController.signal)),this._imageReprojector=new u}detach(){this._fetchController=re(this._fetchController),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView=k(this._polygonsView),this._polylinesView=k(this._polylinesView),this._pointsView=k(this._pointsView),this._imageReprojector=k(this._imageReprojector)}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(t){(this.view.spatialReference?.isWGS84||this.view.spatialReference?.isWebMercator)&&this._imageReprojector.loadAndReprojectBitmapData(t.href,t.extent,this.view.spatialReference).then(e=>{const i=new de(e.bitmapData);i.x=e.extent.xmin,i.y=e.extent.ymax,i.resolution=e.extent.width/e.bitmapData.width,i.rotation=t.rotation,this._mapImageContainer.addChild(i),this._bitmapIndex.set(t,i)})}async _getViewDependentUrl(t,e){const{viewFormat:i,viewBoundScale:a,httpQuery:s}=t;if(i!=null){if(e==null)throw new Error("Loading this network link requires a view state.");let r;if(await le(),a!=null&&a!==1){const y=new U(e.extent);y.expand(a),r=y}else r=e.extent;r=L(r,A.WGS84);const h=L(r,A.WebMercator),p=r.xmin,l=r.xmax,n=r.ymin,o=r.ymax,c=e.size[0]*e.pixelRatio,m=e.size[1]*e.pixelRatio,g=Math.max(h.width,h.height),S={"[bboxWest]":p.toString(),"[bboxEast]":l.toString(),"[bboxSouth]":n.toString(),"[bboxNorth]":o.toString(),"[lookatLon]":r.center.x.toString(),"[lookatLat]":r.center.y.toString(),"[lookatRange]":g.toString(),"[lookatTilt]":"0","[lookatHeading]":e.rotation.toString(),"[lookatTerrainLon]":r.center.x.toString(),"[lookatTerrainLat]":r.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":r.center.x.toString(),"[cameraLat]":r.center.y.toString(),"[cameraAlt]":g.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":c.toString(),"[vertPixels]":m.toString(),"[terrainEnabled]":"0","[clientVersion]":oe,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},d=y=>{for(const P in y){let b;for(b in S)y[P]=y[P].replace(b,S[b])}},V=N(i);d(V);let v={};s!=null&&(v=N(s),d(v));const I=me(t.href);return I.query={...I.query,...V,...v},`${I.path}?${ne(V)}`}return t.href}async _fetchService(t){const e=new J;await this._loadVisualData(this.layer.url,e,t),this._kmlVisualData=e,this._refreshCollections()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter(t=>this._isSublayerVisible(t.sublayerId)).map(({item:t})=>t)),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter(t=>this._isSublayerVisible(t.sublayerId)).map(({item:t})=>t)),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter(t=>this._isSublayerVisible(t.sublayerId)).map(({item:t})=>t)),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter(t=>this._isSublayerVisible(t.sublayerId)).map(({item:t})=>t))}_isSublayerVisible(t){const e=this._kmlVisualData.allSublayers.get(t);return!!e?.visibility&&(e.parentFolderId===-1||this._isSublayerVisible(e.parentFolderId))}_loadVisualData(t,e,i){return this._fetchParsedKML(t,i).then(async a=>{for(const s of a.sublayers){e.allSublayers.set(s.id,s);const r=s.points?await j(s.points):[],h=s.polylines?await j(s.polylines):[],p=s.polygons?await j(s.polygons):[],l=s.mapImages?.map(n=>w.fromJSON(n))??[];if(e.allPoints.push(...r.map(n=>({item:n,sublayerId:s.id}))),e.allPolylines.push(...h.map(n=>({item:n,sublayerId:s.id}))),e.allPolygons.push(...p.map(n=>({item:n,sublayerId:s.id}))),e.allMapImages.push(...l.map(n=>({item:n,sublayerId:s.id}))),s.networkLink){const n=await this._getViewDependentUrl(s.networkLink,this.view.state);await this._loadVisualData(n,e,i)}}})}_fetchParsedKML(t,e){return ke(t,this.layer.spatialReference,this.layer.refreshInterval,e).then(i=>Me(i.data))}_removeMapImage(t){const e=this._bitmapIndex.get(t);e&&(this._mapImageContainer.removeChild(e),this._bitmapIndex.delete(t))}};f([_()],x.prototype,"_pointsView",void 0),f([_()],x.prototype,"_polylinesView",void 0),f([_()],x.prototype,"_polygonsView",void 0),f([_()],x.prototype,"updating",void 0),x=f([H("esri.views.2d.layers.KMLLayerView2D")],x);const Ee=x,et=Object.freeze(Object.defineProperty({__proto__:null,default:Ee},Symbol.toStringTag,{value:"Module"}));export{et as K,Ze as S,Me as d,ke as g,K as j};
