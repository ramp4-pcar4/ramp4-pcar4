import{h4 as f,h5 as p,gv as d,gC as L,h6 as u,h7 as m,h8 as A,gs as w}from"./main.efb50b2c.js";import{H as h,a as n,F as l,D as H}from"./hilight-defs.8b611028.js";import"./preload-helper.387dac8f.js";class c extends f{config={};mode=h.NONE;constructor(e,i){super(i),this.config=e,this.mode=e.mode}async add(e){this.notImplementedError("addGraphics")}async remove(e){this.notImplementedError("removeGraphics")}async reloadHilight(e){}getHilightLayer(){const e=this.$iApi.geo.layer.getLayer(n);if(e&&e instanceof p)return e;console.warn("Hilight layer could not be fetched.")}notImplementedError(e){console.warn("Hilight mode method {method} was not implemented by subclass.")}}class g extends c{async add(e){const i=this.getHilightLayer();!i||await i.addGraphic(e)}async remove(e){const i=this.getHilightLayer();!i||await i.removeGraphic(e)}async reloadHilight(e){await this.remove(e),await this.add(e)}}class $ extends g{handlers=[];onOpacity;offOpacity;lastAdd=0;constructor(e,i){super(e,i),this.onOpacity=e.options?.onOpacity??.75,this.offOpacity=e.options?.offOpacity>.02?e.options.offOpacity:.02,this.hilightSetup(),this.handlers.push(this.$iApi.event.on(d.MAP_BASEMAPCHANGE,()=>{const t=this.getHilightLayer();t&&t.graphics.length===0&&this.updateFogLayer()}))}async hilightSetup(){const e=this.$iApi.$vApp.$store.get(L.getActiveBasemapConfig);try{const i=await this.$iApi.geo.layer.createLayer({id:l,layerType:u.TILE,cosmetic:!0,url:e.layers[0].url});await this.$iApi.geo.map.addLayer(i),i.opacity=this.offOpacity,this.reorderFogLayer()}catch{console.error("Something went wrong while setting up the hilighter.")}}async updateFogLayer(){this.$iApi.geo.map.removeLayer(l),await this.hilightSetup()}reorderFogLayer(){const e=this.getFogLayer(),i=this.getHilightLayer();if(!i||!e)return;const t=this.$iApi.geo.layer.allLayers(),r=t.indexOf(e);t.indexOf(i)<r&&this.$iApi.geo.map.reorder(i,r+1,!1)}async add(e){this.lastAdd=Date.now();const i=this.getFogLayer();!i||(i.opacity=this.onOpacity,await super.add(e))}async remove(e){await super.remove(e);const i=this.getFogLayer();if(!i)return;const t=Date.now();setTimeout(()=>{this.lastAdd<t&&(i.opacity=this.offOpacity)},300)}async reloadHilight(e){await this.updateFogLayer(),await super.reloadHilight(e)}getFogLayer(){const e=this.$iApi.geo.layer.getLayer(l);if(e&&e instanceof m)return e;console.warn("Hilight fog layer could not be fetched.")}}class y extends g{handlers=[];constructor(e,i){super(e,i),this.hilightSetup(e),this.handlers.push(this.$iApi.event.on(d.MAP_CREATED,()=>{this.hilightSetup(e)}))}hilightSetup(e){this.$iApi.geo.map.viewPromise.then(()=>{this.$iApi.geo.map.esriView.highlightOptions=e.options})}async add(e){await super.add(e);const i=this.$iApi.geo.layer.getLayer(n);if(i&&i.esriLayer&&i.isLoaded&&i instanceof A){const t=e instanceof Array?e:[e];this.$iApi.geo.map.esriView?.whenLayerView(i.esriLayer)?.then(function(r){t.forEach(s=>{const a=i.getEsriGraphic(s.id);r.highlight(a)})})}}async remove(e){await super.remove(e)}}class v extends w{hilightMode=new c({},this.$iApi);constructor(e,i){super(e,i),this.$iApi.geo.map.created?this.initHilightLayer():this.$iApi.event.once(d.MAP_CREATED,this.initHilightLayer)}_parseConfig(e){if(e)switch(e.mode){case h.NONE:this.hilightMode=new c(e,this.$iApi);break;case h.GLOW:this.hilightMode=new y(e,this.$iApi);break;case h.LIFT:this.hilightMode=new g(e,this.$iApi);break;case h.FOG:this.hilightMode=new $(e,this.$iApi);break;default:console.error("Could not find hilight mode:",e.mode);break}else this.hilightMode=new y(H,this.$iApi)}async initHilightLayer(){const e=await this.$iApi.geo.layer.createLayer({id:n,layerType:u.GRAPHIC,cosmetic:!0,url:""});this.$iApi.geo.map.addLayer(e)}async addHilight(e){const i=e instanceof Array?e:[e];await this.hilightMode.add(i)}async removeHilight(e){const i=e?e instanceof Array?e:[e]:void 0;await this.hilightMode.remove(i)}async reloadHilight(e){const i=e instanceof Array?e:[e];await this.hilightMode.reloadHilight(i)}getGraphicsByKey(e,i,t){const r=this.getHilightLayer();if(!r)return[];let s=r.graphics.map(a=>({...this.deconstructGraphicKey(a.id),og:a}));return e&&(s=s.filter(a=>a.origin===e)),i&&(s=s.filter(a=>a.uid===i)),t&&(s=s.filter(a=>a.oid===t)),s.map(a=>a.og)}constructGraphicKey(e,i,t){return`${n}~${e}~${i}~${t}`}deconstructGraphicKey(e){const i=e.split("~");return i.length!==4&&console.warn("Malformed Hilight Graphic key provided:",e),{origin:i[1],uid:i[2],oid:parseInt(i[3])}}getHilightLayer(){const e=this.$iApi.geo.layer.getLayer(n);if(e&&e.isLoaded&&e instanceof p)return e;console.warn("hilight layer could not be fetched.")}}class O extends v{async added(){this._parseConfig(this.config);const e=this.$vApp.$watch(()=>this.config,i=>this._parseConfig(i));this.removed=()=>{e()}}}export{O as default};
