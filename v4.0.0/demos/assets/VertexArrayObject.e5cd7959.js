import{a6 as v,aT as p,e as C,aU as z,aV as V,aW as J,i as G,aX as Q}from"./main.efb50b2c.js";import{s as P,u as B,a as X,c as Z}from"./Texture.627d6838.js";import{t as x,A as f,F as I,C as U,u as d,U as c,B as R,P as l,f as b,V as u,G as w,c as W,n as N,M as A,Y as L,L as k,D as K}from"./enums.de935fa5.js";const T=v.getLogger("esri.views.webgl.BufferObject");function tt(h){return J(h)}class D{constructor(t,e,i,s){this._context=t,this.bufferType=e,this.usage=i,this._glName=null,this._size=-1,this._indexType=void 0,t.instanceCounter.increment(x.BufferObject,this),this._glName=this._context.gl.createBuffer(),P(this._context.gl),s&&this.setData(s)}static createIndex(t,e,i){return new D(t,f.ELEMENT_ARRAY_BUFFER,e,i)}static createVertex(t,e,i){return new D(t,f.ARRAY_BUFFER,e,i)}static createUniform(t,e,i){if(t.type!==p.WEBGL2)throw new Error("Uniform buffers are supported in WebGL2 only!");return new D(t,f.UNIFORM_BUFFER,e,i)}static createPixelPack(t,e=I.STREAM_READ,i){if(t.type!==p.WEBGL2)throw new Error("Pixel pack buffers are supported in WebGL2 only!");const s=new D(t,f.PIXEL_PACK_BUFFER,e);return i&&s.setSize(i),s}static createPixelUnpack(t,e=I.STREAM_DRAW,i){if(t.type!==p.WEBGL2)throw new Error("Pixel unpack buffers are supported in WebGL2 only!");return new D(t,f.PIXEL_UNPACK_BUFFER,e,i)}get glName(){return this._glName}get size(){return this._size}get indexType(){return this._indexType}get byteSize(){return this.bufferType===f.ELEMENT_ARRAY_BUFFER?this._indexType===U.UNSIGNED_INT?4*this._size:2*this._size:this._size}get _isVAOAware(){return this.bufferType===f.ELEMENT_ARRAY_BUFFER||this.bufferType===f.ARRAY_BUFFER}dispose(){this._context?.gl?(this._glName&&(this._context.gl.deleteBuffer(this._glName),this._glName=null),this._context.instanceCounter.decrement(x.BufferObject,this),this._context=null):this._glName&&T.warn("Leaked WebGL buffer object")}setSize(t,e=null){if(t<=0&&T.error("Buffer size needs to be positive!"),this.bufferType===f.ELEMENT_ARRAY_BUFFER&&C(e))switch(this._indexType=e,e){case U.UNSIGNED_SHORT:t*=2;break;case U.UNSIGNED_INT:t*=4}this._setBufferData(t)}setData(t){if(!t)return;let e=t.byteLength;this.bufferType===f.ELEMENT_ARRAY_BUFFER&&(z(t)&&(e/=2,this._indexType=U.UNSIGNED_SHORT),V(t)&&(e/=4,this._indexType=U.UNSIGNED_INT)),this._setBufferData(e,t)}_setBufferData(t,e=null){this._size=t;const i=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const s=this._context.gl;C(e)?s.bufferData(this.bufferType,e,this.usage):s.bufferData(this.bufferType,t,this.usage),P(s),this._isVAOAware&&this._context.bindVAO(i)}setSubData(t,e=0,i=0,s=t.byteLength){if(!t)return;(e<0||e>=this._size)&&T.error("offset is out of range!");let a=e,n=i,r=s,o=t.byteLength;this.bufferType===f.ELEMENT_ARRAY_BUFFER&&(z(t)?(o/=2,a*=2,n*=2,r*=2):V(t)&&(o/=4,a*=4,n*=4,r*=4)),s===void 0&&(s=o-1),i>=s&&T.error("end must be bigger than start!"),e+i-s>this._size&&T.error("An attempt to write beyond the end of the buffer!");const E=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const _=this._context.gl,g=ArrayBuffer.isView(t)?t.buffer:t,q=n===0&&r===t.byteLength?g:g.slice(n,r);_.bufferSubData(this.bufferType,a,q),P(_),this._isVAOAware&&this._context.bindVAO(E)}setSubDataFromView(t,e,i,s){if(!t)return;(e<0||e>=this._size)&&T.error("offset is out of range!"),i>=s&&T.error("end must be bigger than start!"),e+i-s>this._size&&T.error("An attempt to write beyond the end of the buffer!");const a=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const n=this._context.gl;if(this._context.type===p.WEBGL2)n.bufferSubData(this.bufferType,e*t.BYTES_PER_ELEMENT,t,i,s-i);else{const r=i===0&&s===t.length?t:t.subarray(i,s);n.bufferSubData(this.bufferType,e*t.BYTES_PER_ELEMENT,r)}P(n),this._isVAOAware&&this._context.bindVAO(a)}getSubData(t,e=0,i,s){if(this._context.type!==p.WEBGL2)return void T.error("Get buffer subdata is supported in WebGL2 only!");if(i<0||s<0)return void T.error("Problem getting subdata: offset and length were less than zero!");const a=tt(t)?t.BYTES_PER_ELEMENT:1;if(a*((i??0)+(s??0))>t.byteLength)return void T.error("Problem getting subdata: offset and length exceeded destination size!");e+a*(s??0)>this.byteSize&&T.warn("Potential problem getting subdata: requested data exceeds buffer size!");const n=this._context.gl;this._context.bindBuffer(this,f.COPY_READ_BUFFER),n.getBufferSubData(f.COPY_READ_BUFFER,e,t,i,s),this._context.unbindBuffer(f.COPY_READ_BUFFER)}async getSubDataAsync(t,e=0,i,s){this._context.type===p.WEBGL2?(await this._context.clientWaitAsync(),this.getSubData(t,e,i,s)):T.error("Get buffer subdata is supported in WebGL2 only!")}}class O{constructor(t,e){this._context=t,this._desc=e,this.type="renderbuffer",this._context.instanceCounter.increment(x.Renderbuffer,this);const i=this._context.gl;this.glName=i.createRenderbuffer(),this._context.bindRenderbuffer(this);const{width:s,height:a,internalFormat:n,multisampled:r}=e;if(r){if(this._context.type!==p.WEBGL2)throw new Error("Multisampled renderbuffers are not supported in WebGL1!");i.renderbufferStorageMultisample(i.RENDERBUFFER,this.samples,n,s,a)}else i.renderbufferStorage(i.RENDERBUFFER,n,s,a)}get descriptor(){return this._desc}get samples(){const t=this._desc.samples,e=this._context.parameters.maxSamples;return t?Math.min(t,e):e}resize(t,e){const i=this._desc;if(i.width===t&&i.height===e)return;i.width=t,i.height=e;const s=this._context.gl;this._context.bindRenderbuffer(this),i.multisampled?s.renderbufferStorageMultisample(s.RENDERBUFFER,this.samples,i.internalFormat,i.width,i.height):s.renderbufferStorage(s.RENDERBUFFER,i.internalFormat,i.width,i.height)}dispose(){this._context&&(this._context.gl.deleteRenderbuffer(this.glName),this._context.instanceCounter.decrement(x.Renderbuffer,this),this._context=null)}}function _t(h){const t=h.gl;switch(t.getError()){case t.NO_ERROR:return null;case t.INVALID_ENUM:return"An unacceptable value has been specified for an enumerated argument";case t.INVALID_VALUE:return"A numeric argument is out of range";case t.INVALID_OPERATION:return"The specified command is not allowed for the current state";case t.INVALID_FRAMEBUFFER_OPERATION:return"The currently bound framebuffer is not framebuffer complete";case t.OUT_OF_MEMORY:return"Not enough memory is left to execute the command";case t.CONTEXT_LOST_WEBGL:return"WebGL context is lost"}return"Unknown error"}function ut(h,t){return h.vertexBuffers[t].size/et(h.layout[t])}function et(h){return h[0].stride}function it(h,t,e,i,s=0){const a=h.gl,n=h.capabilities.instancing;h.bindBuffer(e);for(const r of i){const o=t.get(r.name);o===void 0&&console.error(`There is no location for vertex attribute '${r.name}' defined.`);const E=s*r.stride;if(r.count<=4)a.vertexAttribPointer(o,r.count,r.type,r.normalized,r.stride,r.offset+E),a.enableVertexAttribArray(o),r.divisor>0&&n&&n.vertexAttribDivisor(o,r.divisor);else if(r.count===9)for(let _=0;_<3;_++)a.vertexAttribPointer(o+_,3,r.type,r.normalized,r.stride,r.offset+12*_+E),a.enableVertexAttribArray(o+_),r.divisor>0&&n&&n.vertexAttribDivisor(o+_,r.divisor);else if(r.count===16)for(let _=0;_<4;_++)a.vertexAttribPointer(o+_,4,r.type,r.normalized,r.stride,r.offset+16*_+E),a.enableVertexAttribArray(o+_),r.divisor>0&&n&&n.vertexAttribDivisor(o+_,r.divisor);else console.error("Unsupported vertex attribute element count: "+r.count)}}function st(h,t,e,i){const s=h.gl,a=h.capabilities.instancing;h.bindBuffer(e);for(const n of i){const r=t.get(n.name);if(n.count<=4)s.disableVertexAttribArray(r),n.divisor&&n.divisor>0&&a&&a.vertexAttribDivisor(r,0);else if(n.count===9)for(let o=0;o<3;o++)s.disableVertexAttribArray(r+o),n.divisor&&n.divisor>0&&a&&a.vertexAttribDivisor(r+o,0);else if(n.count===16)for(let o=0;o<4;o++)s.disableVertexAttribArray(r+o),n.divisor&&n.divisor>0&&a&&a.vertexAttribDivisor(r+o,0);else console.error("Unsupported vertex attribute element count: "+n.count)}h.unbindBuffer(f.ARRAY_BUFFER)}function rt(h){switch(h){case l.ALPHA:case l.LUMINANCE:case l.RED:case l.RED_INTEGER:case c.R8:case c.R8I:case c.R8UI:case c.R8_SNORM:case R.STENCIL_INDEX8:return 1;case l.LUMINANCE_ALPHA:case l.RG:case l.RG_INTEGER:case c.RGBA4:case c.R16F:case c.R16I:case c.R16UI:case c.RG8:case c.RG8I:case c.RG8UI:case c.RG8_SNORM:case c.RGB565:case c.RGB5_A1:case R.DEPTH_COMPONENT16:return 2;case l.DEPTH_COMPONENT:case l.RGB:case l.RGB_INTEGER:case c.RGB8:case c.RGB8I:case c.RGB8UI:case c.RGB8_SNORM:case c.SRGB8:case R.DEPTH_COMPONENT24:return 3;case l.DEPTH_STENCIL:case l.RGBA:case l.RGBA_INTEGER:case c.RGBA8:case c.R32F:case c.R11F_G11F_B10F:case c.RG16F:case c.R32I:case c.R32UI:case c.RG16I:case c.RG16UI:case c.RGBA8I:case c.RGBA8UI:case c.RGBA8_SNORM:case c.SRGB8_ALPHA8:case c.RGB9_E5:case c.RGB10_A2UI:case c.RGB10_A2:case R.DEPTH_STENCIL:case R.DEPTH_COMPONENT32F:case R.DEPTH24_STENCIL8:return 4;case R.DEPTH32F_STENCIL8:return 5;case c.RGB16F:case c.RGB16I:case c.RGB16UI:return 6;case c.RG32F:case c.RG32I:case c.RG32UI:case c.RGBA16F:case c.RGBA16I:case c.RGBA16UI:return 8;case c.RGB32F:case c.RGB32I:case c.RGB32UI:return 12;case c.RGBA32F:case c.RGBA32I:case c.RGBA32UI:return 16;case d.COMPRESSED_RGB_S3TC_DXT1_EXT:case d.COMPRESSED_RGBA_S3TC_DXT1_EXT:return .5;case d.COMPRESSED_RGBA_S3TC_DXT3_EXT:case d.COMPRESSED_RGBA_S3TC_DXT5_EXT:return 1;case d.COMPRESSED_R11_EAC:case d.COMPRESSED_SIGNED_R11_EAC:case d.COMPRESSED_RGB8_ETC2:case d.COMPRESSED_SRGB8_ETC2:case d.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:case d.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:return .5;case d.COMPRESSED_RG11_EAC:case d.COMPRESSED_SIGNED_RG11_EAC:case d.COMPRESSED_RGBA8_ETC2_EAC:case d.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:return 1}return 0}function H(h){if(G(h))return 0;if("descriptor"in h)return h.glName?H(h.descriptor):0;const t=h.internalFormat||"pixelFormat"in h&&h.pixelFormat;if(!t)return 0;const e="hasMipmap"in h&&h.hasMipmap?1.3:1,i=h.width*h.height;return rt(t)*i*e}const nt=v.getLogger("esri.views.webgl.FrameBufferObject");class S{constructor(t,e,i=null,s=null){if(this._context=t,this._glName=null,this._depthAttachment=null,this._stencilAttachment=null,this._colorAttachments=new Map,this._initialized=!1,this._desc={...e},t.instanceCounter.increment(x.FramebufferObject,this),C(i)){Array.isArray(i)||(i=[i]);for(let a=0;a<i.length;++a){const n=i[a],r=b.COLOR_ATTACHMENT0+a;let o;Y(n)?(m(n)?(o=n.descriptor,this._colorAttachments.set(r,n)):(o=n,this._colorAttachments.set(r,new B(this._context,o))),M(o,this._desc)):($(n)?(o=n.descriptor,this._colorAttachments.set(r,n)):(o=n,this._colorAttachments.set(r,new O(this._context,o))),y(o,this._desc)),this._validateColorAttachmentPoint(r)}}if(C(s)){let a,n;if(Y(s))this._context.capabilities.depthTexture||console.error("Setting the depth/stencil texture as an attachment requires WEBGL_depth_texture or WebGL2"),m(s)?(n=s.descriptor,this._depthStencilTexture=s):(n=s,this._depthStencilTexture=new B(this._context,n)),M(n,this._desc);else{$(s)?(n=s.descriptor,a=s):(n=s,a=new O(this._context,n));const r=this._desc.depthStencilTarget??u.DEPTH_STENCIL_RENDER_BUFFER;r===u.STENCIL_RENDER_BUFFER?this._stencilAttachment=a:r===u.DEPTH_RENDER_BUFFER||r===u.DEPTH_STENCIL_RENDER_BUFFER?this._depthAttachment=a:console.error('If a Renderbuffer is provided, "depthStencilTarget" must be one of STENCIL_RENDER_BUFFER, DEPTH_RENDER_BUFFER or DEPTH_STENCIL_RENDER_BUFFER'),y(n,this._desc)}}}dispose(){if(!this._desc)return;const t=this._context.getBoundFramebufferObject();this._disposeColorAttachments(),this._disposeDepthStencilAttachments(),this._glName&&(this._context.gl.deleteFramebuffer(this._glName),this._glName=null),this._context.bindFramebuffer(t),this._context.instanceCounter.decrement(x.FramebufferObject,this),this._desc=null}get glName(){return this._glName}get descriptor(){return this._desc}get colorTexture(){const t=this._colorAttachments.get(b.COLOR_ATTACHMENT0);return t&&m(t)?t:null}get colorAttachment(){return this._colorAttachments.get(b.COLOR_ATTACHMENT0)}get depthStencilAttachment(){return this._depthStencilTexture||this._depthAttachment||this._stencilAttachment}get depthStencilTexture(){return this._depthStencilTexture}get width(){return this._desc.width}get height(){return this._desc.height}get gpuMemoryUsage(){return[...this._colorAttachments].reduce((t,[e,i])=>t+H(i),0)+H(this.depthStencilAttachment)}getColorTexture(t){const e=this._colorAttachments.get(t);return e&&m(e)?e:null}attachColorTexture(t,e=b.COLOR_ATTACHMENT0){!t||(this._validateColorAttachmentPoint(e),M(t.descriptor,this._desc),this._disposeColorAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,e)),this._colorAttachments.set(e,t))}detachColorTexture(t=b.COLOR_ATTACHMENT0){const e=this._colorAttachments.get(t);if(m(e)){const i=e;return this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t)),this._colorAttachments.delete(t),i}}setColorTextureTarget(t,e=b.COLOR_ATTACHMENT0){const i=this._colorAttachments.get(e);m(i)&&this._framebufferTexture2D(i.glName,e,t)}attachDepthStencilTexture(t){if(G(t))return;const e=t.descriptor;e.pixelFormat!==l.DEPTH_STENCIL&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"),e.dataType!==w.UNSIGNED_INT_24_8&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"),this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture!"),M(e,this._desc),this._desc.depthStencilTarget&&this._desc.depthStencilTarget!==u.DEPTH_STENCIL_TEXTURE&&(this._desc.depthStencilTarget=u.DEPTH_STENCIL_TEXTURE),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,W)),this._depthStencilTexture=t}detachDepthStencilTexture(){const t=this._depthStencilTexture;return t&&this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,W)),this._depthStencilTexture=null,t}attachDepthStencilBuffer(t){if(G(t))return;const e=t.descriptor;if(e.internalFormat!==R.DEPTH_STENCIL&&e.internalFormat!==R.DEPTH_COMPONENT16&&console.error("Depth/Stencil buffer must have correct internalFormat"),y(e,this._desc),this._disposeDepthStencilAttachments(),this._desc.depthStencilTarget=e.internalFormat===R.DEPTH_STENCIL?u.DEPTH_STENCIL_RENDER_BUFFER:u.DEPTH_RENDER_BUFFER,this._initialized){this._context.bindFramebuffer(this);const i=this._context.gl,s=this._desc.depthStencilTarget===u.DEPTH_RENDER_BUFFER?i.DEPTH_ATTACHMENT:i.DEPTH_STENCIL_ATTACHMENT;i.framebufferRenderbuffer(N.FRAMEBUFFER,s,i.RENDERBUFFER,t.glName)}this._depthAttachment=t}detachDepthStencilBuffer(){const t=this._context.gl,e=this._depthAttachment;if(e&&this._initialized){this._context.bindFramebuffer(this);const i=this._desc.depthStencilTarget===u.DEPTH_RENDER_BUFFER?t.DEPTH_ATTACHMENT:t.DEPTH_STENCIL_ATTACHMENT;t.framebufferRenderbuffer(N.FRAMEBUFFER,i,t.RENDERBUFFER,null)}return this._depthAttachment=null,e}detachAll(){this._colorAttachments.forEach((t,e)=>this._detachColorAttachment(e)),this.detachDepthStencilBuffer(),this.detachDepthStencilTexture()}copyToTexture(t,e,i,s,a,n,r){(t<0||e<0||a<0||n<0)&&console.error("Offsets cannot be negative!"),(i<=0||s<=0)&&console.error("Copy width and height must be greater than zero!");const o=this._desc,E=r.descriptor;r.descriptor.target!==A.TEXTURE_2D&&console.error("Texture target must be TEXTURE_2D!"),(t+i>o.width||e+s>o.height||a+i>E.width||n+s>E.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const _=this._context,g=_.bindTexture(r,B.TEXTURE_UNIT_FOR_UPDATES);_.setActiveTexture(B.TEXTURE_UNIT_FOR_UPDATES),_.bindFramebuffer(this),_.gl.copyTexSubImage2D(A.TEXTURE_2D,0,a,n,t,e,i,s),_.bindTexture(g,B.TEXTURE_UNIT_FOR_UPDATES)}readPixels(t,e,i,s,a,n,r){(i<=0||s<=0)&&console.error("Copy width and height must be greater than zero!"),r||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this),this._context.gl.readPixels(t,e,i,s,a,n,r)}async readPixelsAsync(t,e,i,s,a,n,r){if(this._context.type!==p.WEBGL2)return X()&&console.warn("Attempting to read pixels using pixel buffer object without WebGL2"),void this.readPixels(t,e,i,s,a,n,r);const o=this._context.gl,E=D.createPixelPack(this._context,I.STREAM_READ,r.byteLength);this._context.bindBuffer(E),this._context.bindFramebuffer(this),o.readPixels(t,e,i,s,a,n,0),this._context.unbindBuffer(f.PIXEL_PACK_BUFFER),await E.getSubDataAsync(r),E.dispose()}resize(t,e){const i=this._desc;if(i.width!==t||i.height!==e){if(!this._initialized)return i.width=t,i.height=e,this._colorAttachments.forEach(s=>{s&&s.resize(t,e)}),void(this._depthStencilTexture&&this._depthStencilTexture.resize(t,e));i.width=t,i.height=e,this._colorAttachments.forEach(s=>{s&&s.resize(t,e)}),this._depthStencilTexture!=null?this._depthStencilTexture.resize(t,e):(this._depthAttachment||this._stencilAttachment)&&(this._depthAttachment&&this._depthAttachment.resize(t,e),this._stencilAttachment&&this._stencilAttachment.resize(t,e)),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1}}initializeAndBind(t=N.FRAMEBUFFER){const e=this._context.gl;if(this._initialized)return void e.bindFramebuffer(t,this.glName);this._glName&&e.deleteFramebuffer(this._glName);const i=this._context,s=e.createFramebuffer(),a=this._desc,n=a.colorTarget??L.RENDER_BUFFER,r=a.width??1,o=a.height??1;if(e.bindFramebuffer(t,s),this._colorAttachments.size===0)if(n===L.TEXTURE||n===L.CUBEMAP)this._colorAttachments.set(b.COLOR_ATTACHMENT0,at(i,a,this.descriptor.colorTarget===L.CUBEMAP?A.TEXTURE_CUBE_MAP:A.TEXTURE_2D));else{const _=new O(i,{internalFormat:c.RGBA4,width:r,height:o});this._colorAttachments.set(b.COLOR_ATTACHMENT0,_)}this._colorAttachments.forEach((_,g)=>{_&&(m(_)?this._framebufferTexture2D(_.glName,g,j(_),t):e.framebufferRenderbuffer(t,g,e.RENDERBUFFER,_.glName))});const E=a.depthStencilTarget??u.NONE;switch(E){case u.DEPTH_RENDER_BUFFER:case u.DEPTH_STENCIL_RENDER_BUFFER:{this._depthAttachment||(this._depthAttachment=new O(i,{internalFormat:a.depthStencilTarget===u.DEPTH_RENDER_BUFFER?R.DEPTH_COMPONENT16:R.DEPTH_STENCIL,width:r,height:o}));const _=E===u.DEPTH_RENDER_BUFFER?e.DEPTH_ATTACHMENT:e.DEPTH_STENCIL_ATTACHMENT;e.framebufferRenderbuffer(t,_,e.RENDERBUFFER,this._depthAttachment.glName);break}case u.STENCIL_RENDER_BUFFER:this._stencilAttachment||(this._stencilAttachment=new O(i,{internalFormat:R.STENCIL_INDEX8,width:r,height:o})),e.framebufferRenderbuffer(t,e.STENCIL_ATTACHMENT,e.RENDERBUFFER,this._stencilAttachment.glName);break;case u.DEPTH_STENCIL_TEXTURE:if(!this._depthStencilTexture){i.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture as an attachment!");const _={target:A.TEXTURE_2D,pixelFormat:l.DEPTH_STENCIL,dataType:w.UNSIGNED_INT_24_8,samplingMode:k.NEAREST,wrapMode:K.CLAMP_TO_EDGE,width:r,height:o};this._depthStencilTexture=new B(i,_)}this._framebufferTexture2D(this._depthStencilTexture.glName,e.DEPTH_STENCIL_ATTACHMENT,j(this._depthStencilTexture),t)}Z()&&e.checkFramebufferStatus(t)!==e.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!"),this._glName=s,this._initialized=!0}_framebufferTexture2D(t,e=b.COLOR_ATTACHMENT0,i=A.TEXTURE_2D,s=N.FRAMEBUFFER,a=0){this._context.gl.framebufferTexture2D(s,e,i,t,a)}_detachColorAttachment(t){X()&&console.warn("Detaching an FBO attachment can be a slow due to invalidating framebuffer completeness!");const e=this._context.gl,i=this._colorAttachments.get(t);return m(i)?this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t)):this._initialized&&(this._context.bindFramebuffer(this),e.framebufferRenderbuffer(N.FRAMEBUFFER,t,e.RENDERBUFFER,null)),this._colorAttachments.delete(t),i}_disposeColorAttachments(){this._colorAttachments.forEach((t,e)=>{this._detachColorAttachment(e),t.dispose()}),this._colorAttachments.clear()}_disposeDepthStencilAttachments(){const t=this._context.gl;if(this._depthAttachment){if(this._initialized){this._context.bindFramebuffer(this);const e=this._desc.depthStencilTarget===u.DEPTH_RENDER_BUFFER?t.DEPTH_ATTACHMENT:t.DEPTH_STENCIL_ATTACHMENT;t.framebufferRenderbuffer(N.FRAMEBUFFER,e,t.RENDERBUFFER,null)}this._depthAttachment.dispose(),this._depthAttachment=null}this._stencilAttachment&&(this._initialized&&(this._context.bindFramebuffer(this),t.framebufferRenderbuffer(N.FRAMEBUFFER,t.STENCIL_ATTACHMENT,t.RENDERBUFFER,null)),this._stencilAttachment.dispose(),this._stencilAttachment=null),this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t.DEPTH_STENCIL_ATTACHMENT)),this._depthStencilTexture.dispose(),this._depthStencilTexture=null)}_validateColorAttachmentPoint(t){if(S._MAX_COLOR_ATTACHMENTS===-1){const i=this._context.capabilities.drawBuffers;if(i){const s=this._context.gl;S._MAX_COLOR_ATTACHMENTS=s.getParameter(i.MAX_COLOR_ATTACHMENTS)}else S._MAX_COLOR_ATTACHMENTS=1}const e=t-b.COLOR_ATTACHMENT0;e+1>S._MAX_COLOR_ATTACHMENTS&&nt.error("esri.FrameBufferObject",`illegal attachment point for color attachment: ${e+1}. Implementation supports up to ${S._MAX_COLOR_ATTACHMENTS} color attachments`)}}function m(h){return"type"in h&&h.type==="texture"}function $(h){return"type"in h&&h.type==="renderbuffer"}function Y(h){return m(h)||"pixelFormat"in h}function at(h,t,e){return new B(h,{target:e,pixelFormat:l.RGBA,dataType:w.UNSIGNED_BYTE,samplingMode:k.NEAREST,wrapMode:K.CLAMP_TO_EDGE,width:t.width,height:t.height})}function M(h,t){h.target!==A.TEXTURE_2D&&h.target!==A.TEXTURE_CUBE_MAP&&console.error("Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!"),t.width!==void 0&&t.width>=0&&t.height!==void 0&&t.height>=0?t.width===h.width&&t.height===h.height||console.error("Color attachment texture must match the framebuffer's!"):(t.width=h.width,t.height=h.height)}function y(h,t){t.width!==void 0&&t.width>=0&&t.height!==void 0&&t.height>=0?t.width===h.width&&t.height===h.height||console.error("Renderbuffer dimensions must match the framebuffer's!"):(t.width=h.width,t.height=h.height)}function j(h){return h.descriptor.target===A.TEXTURE_CUBE_MAP?A.TEXTURE_CUBE_MAP_POSITIVE_X:A.TEXTURE_2D}S._MAX_COLOR_ATTACHMENTS=-1;const F=v.getLogger("esri.views.webgl.VertexArrayObject");class ft{constructor(t,e,i,s,a=null){this._context=t,this._locations=e,this._layout=i,this._buffers=s,this._indexBuffer=a,this._glName=null,this._initialized=!1,t.instanceCounter.increment(x.VertexArrayObject,this)}get glName(){return this._glName}get context(){return this._context}get vertexBuffers(){return this._buffers}get indexBuffer(){return this._indexBuffer}get size(){return Object.keys(this._buffers).reduce((t,e)=>t+this._buffers[e].size,C(this._indexBuffer)?this._indexBuffer.size:0)}get layout(){return this._layout}get locations(){return this._locations}dispose(t=!0){if(!this._context)return void((this._glName||t&&Object.getOwnPropertyNames(this._buffers).length>0)&&F.warn("Leaked WebGL VAO"));if(this._glName){const e=this._context?.capabilities?.vao;e?(e.deleteVertexArray(this._glName),this._glName=null):F.warn("Leaked WebGL VAO")}if(this._context.getBoundVAO()===this&&this._context.bindVAO(null),t){for(const e in this._buffers)this._buffers[e].dispose(),delete this._buffers[e];this._indexBuffer=Q(this._indexBuffer)}this._context.instanceCounter.decrement(x.VertexArrayObject,this),this._context=null}initialize(){if(this._initialized)return;const t=this._context.capabilities.vao;if(t){const e=t.createVertexArray();t.bindVertexArray(e),this._bindLayout(),t.bindVertexArray(null),this._glName=e}this._initialized=!0}bind(){this.initialize();const t=this._context.capabilities.vao;t?t.bindVertexArray(this.glName):(this._context.bindVAO(null),this._bindLayout())}_bindLayout(){const{_buffers:t,_layout:e,_indexBuffer:i}=this;t||F.error("Vertex buffer dictionary is empty!");const s=this._context.gl;for(const a in t){const n=t[a];n||F.error("Vertex buffer is uninitialized!");const r=e[a];r||F.error("Vertex element descriptor is empty!"),it(this._context,this._locations,n,r)}C(i)&&(this._context.capabilities.vao?s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,i.glName):this._context.bindBuffer(i))}unbind(){this.initialize();const t=this._context.capabilities.vao;t?t.bindVertexArray(null):this._unbindLayout()}_unbindLayout(){const{_buffers:t,_layout:e}=this;t||F.error("Vertex buffer dictionary is empty!");for(const i in t){const s=t[i];s||F.error("Vertex buffer is uninitialized!");const a=e[i];st(this._context,this._locations,s,a)}C(this._indexBuffer)&&this._context.unbindBuffer(this._indexBuffer.bufferType)}}export{S as D,rt as _,D as c,ft as f,_t as i,ut as n,O as r};
