import{K as t,N as s,fZ as k,O as j,an as x,kQ as z,kO as ve,kR as He,f_ as L,dC as I,cY as W,i as R,s as M,fQ as fe,U as re,lY as Be,aD as Xe,u as Ue,e as v,Y as Ge,h as Y,M as We,F as q,k as V,dN as we,bA as et,ae as de,L as tt,fY as Re,fM as rt,a2 as ot,fN as st,j as O,a6 as it,kh as nt,ki as at,dw as lt,dx as pt,dy as ut,bt as ct,dD as yt,eS as dt,a1 as mt,dM as ht,hE as ft,aA as Le,l8 as vt,d as wt,b as gt,B as St,lZ as Oe,b2 as bt,l_ as Bt,fe as Tt,iK as Nt,f as Pt,r as Rt}from"./main.efb50b2c.js";import{i as $t}from"./originUtils.68552ec1.js";import{f as It}from"./portalItemUtils.aa871d92.js";import{T as Q,y as $e,d as At,r as Ie,e as qe,u as Lt,w as Ot,R as jt,U as je,s as Dt,k as _t,i as Mt,o as kt,n as Ct,b as oe,h as se,O as H,g as X,a as ee,D as te,c as le,t as Jt,l as xt}from"./Stop.b9d968a1.js";import"./preload-helper.387dac8f.js";import"./multiOriginJSONSupportUtils.8128aa52.js";let G=class extends x{constructor(e){super(e),this.break=new z({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}}),this.first=new z({color:[0,255,0],size:20,outline:{color:[255,255,255],width:4}}),this.unlocated=new z({color:[255,0,0],size:12,outline:{color:[255,255,255],width:3}}),this.last=new z({color:[255,0,0],size:20,outline:{color:[255,255,255],width:4}}),this.middle=new z({color:[51,51,51],size:12,outline:{color:[0,122,194],width:3}}),this.waypoint=new z({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}})}};t([s({types:k})],G.prototype,"break",void 0),t([s({types:k})],G.prototype,"first",void 0),t([s({types:k})],G.prototype,"unlocated",void 0),t([s({types:k})],G.prototype,"last",void 0),t([s({types:k})],G.prototype,"middle",void 0),t([s({types:k})],G.prototype,"waypoint",void 0),G=t([j("esri.layers.support.RouteStopSymbols")],G);const Ze=G;let F=class extends x{constructor(e){super(e),this.directionLines=new ve({color:[0,122,194],width:6}),this.directionPoints=new z({color:[255,255,255],size:6,outline:{color:[0,122,194],width:2}}),this.pointBarriers=new z({style:"x",size:10,outline:{color:[255,0,0],width:3}}),this.polygonBarriers=new He({color:[255,170,0,.6],outline:{width:7.5,color:[255,0,0,.6]}}),this.polylineBarriers=new ve({width:7.5,color:[255,85,0,.7]}),this.routeInfo=new ve({width:8,color:[20,89,127]}),this.stops=new Ze}};t([s({types:k})],F.prototype,"directionLines",void 0),t([s({types:k})],F.prototype,"directionPoints",void 0),t([s({types:k})],F.prototype,"pointBarriers",void 0),t([s({types:k})],F.prototype,"polygonBarriers",void 0),t([s({types:k})],F.prototype,"polylineBarriers",void 0),t([s({types:k})],F.prototype,"routeInfo",void 0),t([s({type:Ze})],F.prototype,"stops",void 0),F=t([j("esri.layers.support.RouteSymbols")],F);const ze=F;let C=class extends x{constructor(e){super(e),this.dataType=null,this.name=null,this.parameterNames=null,this.restrictionUsageParameterName=null,this.timeNeutralAttributeName=null,this.trafficSupport=null,this.units=null,this.usageType=null}};t([s({type:String})],C.prototype,"dataType",void 0),t([L(Q,{ignoreUnknown:!1})],C.prototype,"name",void 0),t([s({type:[String]})],C.prototype,"parameterNames",void 0),t([s({type:String})],C.prototype,"restrictionUsageParameterName",void 0),t([L($e,{ignoreUnknown:!1})],C.prototype,"timeNeutralAttributeName",void 0),t([s({type:String})],C.prototype,"trafficSupport",void 0),t([s({type:String})],C.prototype,"units",void 0),t([L(At)],C.prototype,"usageType",void 0),C=t([j("esri.rest.support.NetworkAttribute")],C);const Ft=C;let Z=class extends x{constructor(e){super(e),this.buildTime=null,this.name=null,this.networkAttributes=null,this.networkSources=null,this.state=null}};t([s({type:Number})],Z.prototype,"buildTime",void 0),t([s({type:String})],Z.prototype,"name",void 0),t([s({type:[Ft]})],Z.prototype,"networkAttributes",void 0),t([s()],Z.prototype,"networkSources",void 0),t([s({type:String})],Z.prototype,"state",void 0),Z=t([j("esri.rest.support.NetworkDataset")],Z);const Et=Z;let A=class extends x{constructor(e){super(e),this.accumulateAttributeNames=null,this.currentVersion=null,this.defaultTravelMode=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsSupportedLanguages=null,this.directionsTimeAttribute=null,this.hasZ=null,this.impedance=null,this.networkDataset=null,this.supportedTravelModes=null}readAccumulateAttributes(e){return R(e)?null:e.map(r=>Q.fromJSON(r))}writeAccumulateAttributes(e,r,o){!R(e)&&e.length&&(r[o]=e.map(i=>Q.toJSON(i)))}};t([s()],A.prototype,"accumulateAttributeNames",void 0),t([I("accumulateAttributeNames")],A.prototype,"readAccumulateAttributes",null),t([W("accumulateAttributeNames")],A.prototype,"writeAccumulateAttributes",null),t([s()],A.prototype,"currentVersion",void 0),t([s()],A.prototype,"defaultTravelMode",void 0),t([s()],A.prototype,"directionsLanguage",void 0),t([L(Ie)],A.prototype,"directionsLengthUnits",void 0),t([s()],A.prototype,"directionsSupportedLanguages",void 0),t([L($e,{ignoreUnknown:!1})],A.prototype,"directionsTimeAttribute",void 0),t([s()],A.prototype,"hasZ",void 0),t([L(Q,{ignoreUnknown:!1})],A.prototype,"impedance",void 0),t([s({type:Et})],A.prototype,"networkDataset",void 0),t([s({type:[qe]})],A.prototype,"supportedTravelModes",void 0),A=t([j("esri.rest.support.NetworkServiceDescription")],A);const Ut=A;function pe(e,r,o,i){i[o]=[r.length,r.length+e.length],e.forEach(n=>{r.push(n.geometry)})}function Gt(e,r){for(let o=0;o<r.length;o++){const i=e[r[o]];if(i&&i.length)for(const n of i)n.z=void 0}console.log(`The remote Network Analysis service is powered by a network dataset which is not Z-aware.
Z-coordinates of the input geometry are ignored.`)}function Wt(e,r){for(let o=0;o<r.length;o++){const i=e[r[o]];if(i&&i.length){for(const n of i)if(v(n)&&n.hasZ)return!0}}return!1}async function Ve(e,r,o){if(!e)throw new M("network-service:missing-url","Url to Network service is missing");const i=fe({f:"json",token:r},o),{data:n}=await re(e,i);n.supportedTravelModes||(n.supportedTravelModes=[]);for(let d=0;d<n.supportedTravelModes.length;d++)n.supportedTravelModes[d].id||(n.supportedTravelModes[d].id=n.supportedTravelModes[d].itemId);const y=n.currentVersion>=10.4?Zt(e,r,o):qt(e,o),{defaultTravelMode:u,supportedTravelModes:h}=await y;return n.defaultTravelMode=u,n.supportedTravelModes=h,Ut.fromJSON(n)}async function qt(e,r){const o=fe({f:"json"},r),{data:i}=await re(e.replace(/\/rest\/.*$/i,"/info"),o);if(!i||!i.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:n}=i,y=Be(n)+"/sharing/rest/portals/self",{data:u}=await re(y,o),h=Xe("helperServices.routingUtilities.url",u);if(!h)return{supportedTravelModes:[],defaultTravelMode:null};const d=Ue(n),f=/\/solve$/i.test(d.path)?"Route":/\/solveclosestfacility$/i.test(d.path)?"ClosestFacility":"ServiceAreas",l=fe({f:"json",serviceName:f},r),g=Be(h)+"/GetTravelModes/execute",P=await re(g,l),B=[];let m=null;if(P?.data?.results?.length){const T=P.data.results;for(const b of T)if(b.paramName==="supportedTravelModes"){if(b.value?.features){for(const{attributes:a}of b.value.features)if(a){const N=JSON.parse(a.TravelMode);B.push(N)}}}else b.paramName==="defaultTravelMode"&&(m=b.value)}return{supportedTravelModes:B,defaultTravelMode:m}}async function Zt(e,r,o){try{const i=fe({f:"json",token:r},o),n=Be(e)+"/retrieveTravelModes",{data:{supportedTravelModes:y,defaultTravelMode:u}}=await re(n,i);return{supportedTravelModes:y,defaultTravelMode:u}}catch(i){throw new M("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:i})}}const De=new Ge({esriJobMessageTypeInformative:"informative",esriJobMessageTypeProcessDefinition:"process-definition",esriJobMessageTypeProcessStart:"process-start",esriJobMessageTypeProcessStop:"process-stop",esriJobMessageTypeWarning:"warning",esriJobMessageTypeError:"error",esriJobMessageTypeEmpty:"empty",esriJobMessageTypeAbort:"abort"});let ie=class extends x{constructor(e){super(e),this.description=null,this.type=null}};t([s({type:String,json:{write:!0}})],ie.prototype,"description",void 0),t([s({type:String,json:{read:De.read,write:De.write}})],ie.prototype,"type",void 0),ie=t([j("esri.rest.support.GPMessage")],ie);const zt=ie,_e=new Ge({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let me=class extends zt{constructor(e){super(e),this.type=null}};t([s({type:String,json:{read:_e.read,write:_e.write}})],me.prototype,"type",void 0),me=t([j("esri.rest.support.NAMessage")],me);const Vt=me;let ne=class extends Y{};t([s()],ne.prototype,"events",void 0),t([s()],ne.prototype,"strings",void 0),ne=t([j("esri.rest.support.DirectionsFeature")],ne);const Me=ne;let D=class extends q{constructor(e){super(e),this.extent=null,this.features=null,this.geometryType="polyline",this.routeId=null,this.routeName=null,this.totalDriveTime=null,this.totalLength=null,this.totalTime=null}readFeatures(e,r){if(!e)return[];const o=r.summary.envelope.spatialReference??r.spatialReference,i=o&&V.fromJSON(o);return e.map(n=>{const y=this._decompressGeometry(n.compressedGeometry),u=new we({...y,spatialReference:i}),h=n.events?.map(d=>{const{arriveTimeUTC:f,ETA:l,point:{x:g,y:P,z:B},strings:m}=d;return new Me({geometry:new et({x:g,y:P,z:B,hasZ:B!==void 0,spatialReference:i}),attributes:{ETA:l,arriveTimeUTC:f},strings:m})})??[];return new Me({attributes:n.attributes,events:h,geometry:u,strings:n.strings})})}get mergedGeometry(){if(!this.features)return null;const e=this.features.map(({geometry:o})=>de(o)),r=this.get("extent.spatialReference");return this._mergePolylinesToSinglePath(e,r)}get strings(){return this.features.map(({strings:e})=>e)}_decompressGeometry(e){let r=0,o=0,i=0,n=0;const y=[];let u,h,d,f,l,g,P,B,m=0,T=0,b=0;if(l=e.match(/((\+|\-)[^\+\-\|]+|\|)/g),l||(l=[]),parseInt(l[m],32)===0){m=2;const a=parseInt(l[m],32);m++,g=parseInt(l[m],32),m++,1&a&&(T=l.indexOf("|")+1,P=parseInt(l[T],32),T++),2&a&&(b=l.indexOf("|",T)+1,B=parseInt(l[b],32),b++)}else g=parseInt(l[m],32),m++;for(;m<l.length&&l[m]!=="|";){u=parseInt(l[m],32)+r,m++,r=u,h=parseInt(l[m],32)+o,m++,o=h;const a=[u/g,h/g];T&&(f=parseInt(l[T],32)+i,T++,i=f,a.push(f/P)),b&&(d=parseInt(l[b],32)+n,b++,n=d,a.push(d/B)),y.push(a)}return{paths:[y],hasZ:T>0,hasM:b>0}}_mergePolylinesToSinglePath(e,r){if(e.length===0)return new we({spatialReference:r});const o=[];for(const u of e)for(const h of u.paths)o.push(...h);const i=[];o.forEach((u,h)=>{h!==0&&u[0]===o[h-1][0]&&u[1]===o[h-1][1]||i.push(u)});const{hasM:n,hasZ:y}=e[0];return new we({hasM:n,hasZ:y,paths:[i],spatialReference:r})}};t([s({type:We,json:{read:{source:"summary.envelope"}}})],D.prototype,"extent",void 0),t([s()],D.prototype,"features",void 0),t([I("features")],D.prototype,"readFeatures",null),t([s()],D.prototype,"geometryType",void 0),t([s({readOnly:!0})],D.prototype,"mergedGeometry",null),t([s()],D.prototype,"routeId",void 0),t([s()],D.prototype,"routeName",void 0),t([s({value:null,readOnly:!0})],D.prototype,"strings",null),t([s({json:{read:{source:"summary.totalDriveTime"}}})],D.prototype,"totalDriveTime",void 0),t([s({json:{read:{source:"summary.totalLength"}}})],D.prototype,"totalLength",void 0),t([s({json:{read:{source:"summary.totalTime"}}})],D.prototype,"totalTime",void 0),D=t([j("esri.rest.support.DirectionsFeatureSet")],D);const Kt=D;let _=class extends x{constructor(e){super(e),this.directionLines=null,this.directionPoints=null,this.directions=null,this.route=null,this.routeName=null,this.stops=null,this.traversedEdges=null,this.traversedJunctions=null,this.traversedTurns=null}};t([s({type:q,json:{write:!0}})],_.prototype,"directionLines",void 0),t([s({type:q,json:{write:!0}})],_.prototype,"directionPoints",void 0),t([s({type:Kt,json:{write:!0}})],_.prototype,"directions",void 0),t([s({type:Y,json:{write:!0}})],_.prototype,"route",void 0),t([s({type:String,json:{write:!0}})],_.prototype,"routeName",void 0),t([s({type:[Y],json:{write:!0}})],_.prototype,"stops",void 0),t([s({type:q,json:{write:!0}})],_.prototype,"traversedEdges",void 0),t([s({type:q,json:{write:!0}})],_.prototype,"traversedJunctions",void 0),t([s({type:q,json:{write:!0}})],_.prototype,"traversedTurns",void 0),_=t([j("esri.rest.support.RouteResult")],_);const Yt=_;function ge(e){return e&&q.fromJSON(e).features.map(r=>r)}let J=class extends x{constructor(e){super(e),this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routeResults=null}readPointBarriers(e,r){return ge(r.barriers)}readPolylineBarriers(e){return ge(e)}readPolygonBarriers(e){return ge(e)}};t([s({type:[Vt]})],J.prototype,"messages",void 0),t([s({type:[Y]})],J.prototype,"pointBarriers",void 0),t([I("pointBarriers",["barriers"])],J.prototype,"readPointBarriers",null),t([s({type:[Y]})],J.prototype,"polylineBarriers",void 0),t([I("polylineBarriers")],J.prototype,"readPolylineBarriers",null),t([s({type:[Y]})],J.prototype,"polygonBarriers",void 0),t([I("polygonBarriers")],J.prototype,"readPolygonBarriers",null),t([s({type:[Yt]})],J.prototype,"routeResults",void 0),J=t([j("esri.rest.support.RouteSolveResult")],J);const Qt=J;function ue(e){return e?.declaredClass==="esri.rest.support.FeatureSet"}async function Ht(e,r,o){const i=[],n=[],y={},u={},h=Ue(e),{path:d}=h;ue(r.stops)&&pe(r.stops.features,n,"stops.features",y),ue(r.pointBarriers)&&pe(r.pointBarriers.features,n,"pointBarriers.features",y),ue(r.polylineBarriers)&&pe(r.polylineBarriers.features,n,"polylineBarriers.features",y),ue(r.polygonBarriers)&&pe(r.polygonBarriers.features,n,"polygonBarriers.features",y);const f=await tt(n);for(const B in y){const m=y[B];i.push(B),u[B]=f.slice(m[0],m[1])}if(Wt(u,i)){let B=null;try{B=await Ve(d,r.apiKey,o)}catch{}B&&!B.hasZ&&Gt(u,i)}for(const B in u)u[B].forEach((m,T)=>{r.get(B)[T].geometry=m});const l={...o,query:{...h.query,...Lt(r),f:"json"}},g=d.endsWith("/solve")?d:`${d}/solve`,{data:P}=await re(g,l);return Xt(P)}function Xt(e){const{barriers:r,directionLines:o,directionPoints:i,directions:n,messages:y,polygonBarriers:u,polylineBarriers:h,routes:d,stops:f,traversedEdges:l,traversedJunctions:g,traversedTurns:P}=e,B=a=>{const N=T.find($=>$.routeName===a);if(v(N))return N;const S={routeId:T.length+1,routeName:a};return T.push(S),S},m=a=>{const N=T.find($=>$.routeId===a);if(v(N))return N;const S={routeId:a,routeName:null};return T.push(S),S},T=[];d?.features.forEach((a,N)=>{a.geometry.spatialReference=d.spatialReference;const S=a.attributes.Name,$=N+1;T.push({routeId:$,routeName:S,route:a})}),n?.forEach(a=>{const{routeName:N}=a;B(N).directions=a});const b=(f?.features.every(a=>R(a.attributes.RouteName))??!1)&&T.length>0?T[0].routeName:null;return f?.features.forEach(a=>{var N;a.geometry&&((N=a.geometry).spatialReference??(N.spatialReference=f.spatialReference));const S=b??a.attributes.RouteName,$=B(S);$.stops??($.stops=[]),$.stops.push(a)}),o?.features.forEach(a=>{const N=a.attributes.RouteID,S=m(N),{geometryType:$,spatialReference:U}=o;S.directionLines??(S.directionLines={features:[],geometryType:$,spatialReference:U}),S.directionLines.features.push(a)}),i?.features.forEach(a=>{const N=a.attributes.RouteID,S=m(N),{geometryType:$,spatialReference:U}=i;S.directionPoints??(S.directionPoints={features:[],geometryType:$,spatialReference:U}),S.directionPoints.features.push(a)}),l?.features.forEach(a=>{const N=a.attributes.RouteID,S=m(N),{geometryType:$,spatialReference:U}=l;S.traversedEdges??(S.traversedEdges={features:[],geometryType:$,spatialReference:U}),S.traversedEdges.features.push(a)}),g?.features.forEach(a=>{const N=a.attributes.RouteID,S=m(N),{geometryType:$,spatialReference:U}=g;S.traversedJunctions??(S.traversedJunctions={features:[],geometryType:$,spatialReference:U}),S.traversedJunctions.features.push(a)}),P?.features.forEach(a=>{const N=a.attributes.RouteID,S=m(N);S.traversedTurns??(S.traversedTurns={features:[]}),S.traversedTurns.features.push(a)}),Qt.fromJSON({routeResults:T,barriers:r,polygonBarriers:u,polylineBarriers:h,messages:y})}const er={type:String,json:{read:{source:"token"},write:{target:"token"}}};let E=class extends Re(x){constructor(e){super(e),this.doNotLocateOnRestrictedElements=null,this.geometry=null,this.geometryType=null,this.name=null,this.spatialRelationship=null,this.type="layer",this.where=null}};t([s({type:Boolean,json:{write:!0}})],E.prototype,"doNotLocateOnRestrictedElements",void 0),t([s({types:rt,json:{read:ot,write:!0}})],E.prototype,"geometry",void 0),t([L(Ot)],E.prototype,"geometryType",void 0),t([s({type:String,json:{name:"layerName",write:!0}})],E.prototype,"name",void 0),t([L(jt,{name:"spatialRel"})],E.prototype,"spatialRelationship",void 0),t([s({type:String,json:{write:!0}})],E.prototype,"type",void 0),t([s({type:String,json:{write:!0}})],E.prototype,"where",void 0),E=t([j("esri.rest.support.DataLayer")],E);const tr=E;var Te;let he=Te=class extends q{constructor(e){super(e),this.doNotLocateOnRestrictedElements=null}clone(){return new Te({doNotLocateOnRestrictedElements:this.doNotLocateOnRestrictedElements,...this.cloneProperties()})}};t([s({type:Boolean,json:{write:!0}})],he.prototype,"doNotLocateOnRestrictedElements",void 0),he=Te=t([j("esri.rest.support.NetworkFeatureSet")],he);const rr=he;let ae=class extends Re(x){constructor(e){super(e),this.doNotLocateOnRestrictedElements=null,this.url=null}};t([s({type:Boolean,json:{write:!0}})],ae.prototype,"doNotLocateOnRestrictedElements",void 0),t([s({type:String,json:{write:!0}})],ae.prototype,"url",void 0),ae=t([j("esri.rest.support.NetworkUrl")],ae);const or=ae;var Ne;function sr(e){return e&&"type"in e}function ir(e){return e&&"features"in e&&"doNotLocateOnRestrictedElements"in e}function nr(e){return e&&"url"in e}function ar(e){return e&&"features"in e}function lr(e){return sr(e)?tr.fromJSON(e):nr(e)?or.fromJSON(e):ir(e)?rr.fromJSON(e):ar(e)?q.fromJSON(e):null}function ce(e,r,o){v(e)&&(r[o]=O.isCollection(e)?{features:e.toArray().map(i=>i.toJSON())}:e.toJSON())}let p=Ne=class extends Re(x){constructor(e){super(e),this.accumulateAttributes=null,this.apiKey=null,this.attributeParameterValues=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsOutputType=null,this.directionsStyleName=null,this.directionsTimeAttribute=null,this.findBestSequence=null,this.geometryPrecision=null,this.geometryPrecisionM=null,this.geometryPrecisionZ=null,this.ignoreInvalidLocations=null,this.impedanceAttribute=null,this.outputGeometryPrecision=null,this.outputGeometryPrecisionUnits=null,this.outputLines="true-shape",this.outSpatialReference=null,this.overrides=null,this.pointBarriers=null,this.polygonBarriers=null,this.polylineBarriers=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.preserveObjectID=null,this.restrictionAttributes=null,this.restrictUTurns=null,this.returnBarriers=!1,this.returnDirections=!1,this.returnPolygonBarriers=!1,this.returnPolylineBarriers=!1,this.returnRoutes=!0,this.returnStops=!1,this.returnTraversedEdges=null,this.returnTraversedJunctions=null,this.returnTraversedTurns=null,this.returnZ=!0,this.startTime=null,this.startTimeIsUTC=!0,this.stops=null,this.timeWindowsAreUTC=null,this.travelMode=null,this.useHierarchy=null,this.useTimeWindows=null}static from(e){return st(Ne,e)}readAccumulateAttributes(e){return R(e)?null:e.map(r=>Q.fromJSON(r))}writeAccumulateAttributes(e,r,o){!R(e)&&e.length&&(r[o]=e.map(i=>Q.toJSON(i)))}writePointBarriers(e,r,o){ce(e,r,o)}writePolygonBarrier(e,r,o){ce(e,r,o)}writePolylineBarrier(e,r,o){ce(e,r,o)}readRestrictionAttributes(e){return R(e)?null:e.map(r=>je.fromJSON(r))}writeRestrictionAttributes(e,r,o){!R(e)&&e.length&&(r[o]=e.map(i=>je.toJSON(i)))}readStartTime(e,r){const{startTime:o}=r;return R(o)?null:o==="now"?"now":new Date(o)}writeStartTime(e,r){R(e)||(r.startTime=e==="now"?"now":e.getTime())}readStops(e,r){return lr(r.stops)}writeStops(e,r,o){ce(e,r,o)}};t([s({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],p.prototype,"accumulateAttributes",void 0),t([I("accumulateAttributes")],p.prototype,"readAccumulateAttributes",null),t([W("accumulateAttributes")],p.prototype,"writeAccumulateAttributes",null),t([s(er)],p.prototype,"apiKey",void 0),t([s({json:{write:!0}})],p.prototype,"attributeParameterValues",void 0),t([s({type:String,json:{write:!0}})],p.prototype,"directionsLanguage",void 0),t([L(Ie)],p.prototype,"directionsLengthUnits",void 0),t([L(Dt)],p.prototype,"directionsOutputType",void 0),t([L(_t)],p.prototype,"directionsStyleName",void 0),t([L($e,{name:"directionsTimeAttributeName",ignoreUnknown:!1})],p.prototype,"directionsTimeAttribute",void 0),t([s({type:Boolean,json:{write:!0}})],p.prototype,"findBestSequence",void 0),t([s({type:Number,json:{write:!0}})],p.prototype,"geometryPrecision",void 0),t([s({type:Number,json:{write:!0}})],p.prototype,"geometryPrecisionM",void 0),t([s({type:Number,json:{write:!0}})],p.prototype,"geometryPrecisionZ",void 0),t([s({type:Boolean,json:{write:!0}})],p.prototype,"ignoreInvalidLocations",void 0),t([L(Q,{name:"impedanceAttributeName",ignoreUnknown:!1})],p.prototype,"impedanceAttribute",void 0),t([s({type:Number,json:{write:!0}})],p.prototype,"outputGeometryPrecision",void 0),t([L(Mt)],p.prototype,"outputGeometryPrecisionUnits",void 0),t([L(kt)],p.prototype,"outputLines",void 0),t([s({type:V,json:{name:"outSR",write:!0}})],p.prototype,"outSpatialReference",void 0),t([s({json:{write:!0}})],p.prototype,"overrides",void 0),t([s({json:{name:"barriers",write:!0}})],p.prototype,"pointBarriers",void 0),t([W("pointBarriers")],p.prototype,"writePointBarriers",null),t([s({json:{write:!0}})],p.prototype,"polygonBarriers",void 0),t([W("polygonBarriers")],p.prototype,"writePolygonBarrier",null),t([s({json:{write:!0}})],p.prototype,"polylineBarriers",void 0),t([W("polylineBarriers")],p.prototype,"writePolylineBarrier",null),t([s({type:Boolean,json:{write:!0}})],p.prototype,"preserveFirstStop",void 0),t([s({type:Boolean,json:{write:!0}})],p.prototype,"preserveLastStop",void 0),t([s({type:Boolean,json:{write:!0}})],p.prototype,"preserveObjectID",void 0),t([s({type:[String],json:{name:"restrictionAttributeNames",write:!0}})],p.prototype,"restrictionAttributes",void 0),t([I("restrictionAttributes")],p.prototype,"readRestrictionAttributes",null),t([W("restrictionAttributes")],p.prototype,"writeRestrictionAttributes",null),t([L(Ct)],p.prototype,"restrictUTurns",void 0),t([s({type:Boolean,json:{write:!0}})],p.prototype,"returnBarriers",void 0),t([s({type:Boolean,json:{write:!0}})],p.prototype,"returnDirections",void 0),t([s({type:Boolean,json:{write:!0}})],p.prototype,"returnPolygonBarriers",void 0),t([s({type:Boolean,json:{write:!0}})],p.prototype,"returnPolylineBarriers",void 0),t([s({type:Boolean,json:{write:!0}})],p.prototype,"returnRoutes",void 0),t([s({type:Boolean,json:{write:!0}})],p.prototype,"returnStops",void 0),t([s({type:Boolean,json:{write:!0}})],p.prototype,"returnTraversedEdges",void 0),t([s({type:Boolean,json:{write:!0}})],p.prototype,"returnTraversedJunctions",void 0),t([s({type:Boolean,json:{write:!0}})],p.prototype,"returnTraversedTurns",void 0),t([s({type:Boolean,json:{write:!0}})],p.prototype,"returnZ",void 0),t([s({type:Date,json:{type:Number,write:!0}})],p.prototype,"startTime",void 0),t([I("startTime")],p.prototype,"readStartTime",null),t([W("startTime")],p.prototype,"writeStartTime",null),t([s({type:Boolean,json:{write:!0}})],p.prototype,"startTimeIsUTC",void 0),t([s({json:{write:!0}})],p.prototype,"stops",void 0),t([I("stops")],p.prototype,"readStops",null),t([W("stops")],p.prototype,"writeStops",null),t([s({type:Boolean,json:{write:!0}})],p.prototype,"timeWindowsAreUTC",void 0),t([s({type:qe,json:{write:!0}})],p.prototype,"travelMode",void 0),t([s({type:Boolean,json:{write:!0}})],p.prototype,"useHierarchy",void 0),t([s({type:Boolean,json:{write:!0}})],p.prototype,"useTimeWindows",void 0),p=Ne=t([j("esri.rest.support.RouteParameters")],p);const ke=p;function Se(e){return e.length?e:null}function Ke(e){const{defaultTravelMode:r,supportedTravelModes:o}=e;return o.find(i=>i.id===r)}function Pe(e){switch(e){case"esriGeometryPoint":return{type:"esriSMS",style:"esriSMSCircle",size:12,color:[0,0,0,0],outline:Pe("esriGeometryPolyline")};case"esriGeometryPolyline":return{type:"esriSLS",style:"esriSLSSolid",width:1,color:[0,0,0,0]};case"esriGeometryPolygon":return{type:"esriSFS",style:"esriSFSNull",outline:Pe("esriGeometryPolyline")}}}function ye(e){return"layers"in e}function pr(e){return e.declaredClass==="esri.rest.support.FeatureSet"}function ur(e){return e.declaredClass==="esri.rest.support.NetworkFeatureSet"}function cr(e,r,o){const i=r.networkDataset.networkAttributes.filter(c=>c.usageType==="cost"),n=Ke(r),y=o.travelMode??n;if(R(y))return void Ye.warn("route-layer:missing-travel-mode","The routing service must have a default travel mode or one must be specified in the route parameter.");const{timeAttributeName:u,distanceAttributeName:h}=y,d=i.find(c=>c.name===u),f=i.find(c=>c.name===h),l=de(o.travelMode)?.impedanceAttributeName??de(o.impedanceAttribute)??r.impedance,g=Jt.fromJSON(d?.units),P=Ie.fromJSON(f?.units);if(!g||!P)throw new M("routelayer:unknown-impedance-units","the units of either the distance or time impedance are unknown");const B=o.directionsLanguage??r.directionsLanguage,m=de(o.accumulateAttributes)??r.accumulateAttributeNames??[],T=new Set(i.filter(({name:c})=>c===u||c===h||c===l||m.includes(c)).map(({name:c})=>c)),b=c=>{for(const Ae in c)T.has(Ae)||delete c[Ae]};for(const c of e.pointBarriers)v(c.costs)&&(c.addedCost=c.costs[l]??0,b(c.costs));for(const c of e.polygonBarriers)v(c.costs)&&(c.scaleFactor=c.costs[l]??1,b(c.costs));for(const c of e.polylineBarriers)v(c.costs)&&(c.scaleFactor=c.costs[l]??1,b(c.costs));const{routeInfo:a}=e,{findBestSequence:N,preserveFirstStop:S,preserveLastStop:$,startTimeIsUTC:U,timeWindowsAreUTC:Qe}=o;a.analysisSettings=new xt({accumulateAttributes:m,directionsLanguage:B,findBestSequence:N,preserveFirstStop:S,preserveLastStop:$,startTimeIsUTC:U,timeWindowsAreUTC:Qe,travelMode:y}),a.totalDuration=K(a.totalCosts[u]??0,g),a.totalDistance=be(a.totalCosts[h]??0,P),a.totalLateDuration=K(a.totalViolations[u]??0,g),a.totalWaitDuration=K(a.totalWait[u]??0,g),v(a.totalCosts)&&b(a.totalCosts),v(a.totalViolations)&&b(a.totalViolations),v(a.totalWait)&&b(a.totalWait);for(const c of e.stops)v(c.serviceCosts)&&(c.serviceDuration=K(c.serviceCosts[u]??0,g),c.serviceDistance=be(c.serviceCosts[h]??0,P),b(c.serviceCosts)),v(c.cumulativeCosts)&&(c.cumulativeDuration=K(c.cumulativeCosts[u]??0,g),c.cumulativeDistance=be(c.cumulativeCosts[h]??0,P),b(c.cumulativeCosts)),v(c.violations)&&(c.lateDuration=K(c.violations[u]??0,g),b(c.violations)),v(c.wait)&&(c.waitDuration=K(c.wait[u]??0,g),b(c.wait))}async function Ce(e){const r=V.WGS84;return await Pt(e.spatialReference,r),Rt(e,r)}function K(e,r){switch(r){case"seconds":return e/60;case"hours":return 60*e;case"days":return 60*e*24;default:return e}}function be(e,r){return r==="decimal-degrees"||r==="points"||r==="unknown"?e:Nt(e,r,"meters")}function yr(e){const{attributes:r,geometry:o,popupTemplate:i,symbol:n}=e.toGraphic().toJSON();return{attributes:r,geometry:o,popupInfo:i,symbol:n}}const dr=O.ofType(oe),mr=O.ofType(se),Je=O.ofType(H),xe=O.ofType(X),Fe=O.ofType(ee),Ee=O.ofType(te),Ye=it.getLogger("esri.layers.RouteLayer");let w=class extends nt(at(lt(pt(ut(ct(yt)))))){constructor(e){super(e),this._cachedServiceDescription=null,this._featureCollection=null,this._type="Feature Collection",this.defaultSymbols=new ze,this.directionLines=null,this.directionPoints=null,this.featureCollectionType="route",this.legendEnabled=!1,this.maxScale=0,this.minScale=0,this.pointBarriers=new Je,this.polygonBarriers=new xe,this.polylineBarriers=new Fe,this.routeInfo=null,this.spatialReference=V.WGS84,this.stops=new Ee,this.type="route";const r=()=>{this._setStopSymbol(this.stops)};this.own([dt(()=>this.stops,"change",r,{sync:!0,onListenerAdd:r})])}writeFeatureCollectionWebmap(e,r,o,i){const n=[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),this._writeStops()].filter(h=>!!h),y=n.map((h,d)=>d),u=i.origin==="web-map"?"featureCollection.layers":"layers";mt(u,n,r),r.opacity=this.opacity,r.visibility=this.visible,r.visibleLayers=y}readDirectionLines(e,r){return this._getNetworkFeatures(r,"DirectionLines",o=>oe.fromGraphic(o))}readDirectionPoints(e,r){return this._getNetworkFeatures(r,"DirectionPoints",o=>se.fromGraphic(o))}get fullExtent(){const e=new We({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:V.WGS84});if(v(this.routeInfo)&&v(this.routeInfo.geometry))return this.routeInfo.geometry.extent??e;if(R(this.stops))return e;const r=this.stops.filter(n=>v(n.geometry));if(r.length<2)return e;const{spatialReference:o}=r.getItemAt(0).geometry;if(R(o))return e;const i=r.toArray().map(n=>{const y=n.geometry;return[y.x,y.y]});return new ht({points:i,spatialReference:o}).extent}readMaxScale(e,r){return(ye(r)?r.layers:r.featureCollection.layers).find(o=>v(o.layerDefinition.maxScale))?.layerDefinition.maxScale??0}readMinScale(e,r){return(ye(r)?r.layers:r.featureCollection.layers).find(o=>v(o.layerDefinition.minScale))?.layerDefinition.minScale??0}readPointBarriers(e,r){return this._getNetworkFeatures(r,"Barriers",o=>H.fromGraphic(o))}readPolygonBarriers(e,r){return this._getNetworkFeatures(r,"PolygonBarriers",o=>X.fromGraphic(o))}readPolylineBarriers(e,r){return this._getNetworkFeatures(r,"PolylineBarriers",o=>ee.fromGraphic(o))}readRouteInfo(e,r){const o=this._getNetworkFeatures(r,"RouteInfo",i=>le.fromGraphic(i));return o.length>0?o.getItemAt(0):null}readSpatialReference(e,r){const o=ye(r)?r.layers:r.featureCollection.layers;if(!o.length)return V.WGS84;const{layerDefinition:i}=o[0],n=i.spatialReference??i.extent.spatialReference??ft;return V.fromJSON(n)}readStops(e,r){return this._getNetworkFeatures(r,"Stops",o=>te.fromGraphic(o),o=>this._setStopSymbol(o))}get title(){return v(this.routeInfo)&&v(this.routeInfo.name)?this.routeInfo.name:"Route"}set title(e){e?this._override("title",e):this._clearOverride("title")}get url(){return Le.routeServiceUrl}set url(e){e!=null?this._set("url",vt(e,Ye)):this._set("url",Le.routeServiceUrl)}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}removeAll(){this.removeResult(),this.pointBarriers.removeAll(),this.polygonBarriers.removeAll(),this.polylineBarriers.removeAll(),this.stops.removeAll()}removeResult(){v(this.directionLines)&&(this.directionLines.removeAll(),this._set("directionLines",null)),v(this.directionPoints)&&(this.directionPoints.removeAll(),this._set("directionPoints",null)),v(this.routeInfo)&&this._set("routeInfo",null)}async save(){await this.load();const{fullExtent:e,portalItem:r}=this;if(!r)throw new M("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");if(!r.id)throw new M("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if(r.type!=="Feature Collection")throw new M("routelayer:portal-item-wrong-type",'Portal item needs to have type "Feature Collection"');if(R(this.routeInfo))throw new M("routelayer:route-unsolved","save() requires a solved route");const{portal:o}=r;await o._signIn(),o.user||await r.reload();const{itemUrl:i,itemControl:n}=r;if(n!=="admin"&&n!=="update")throw new M("routelayer:insufficient-permissions","To save this layer, you need to be the owner or an administrator of your organization");const y={messages:[],origin:"portal-item",portal:o,url:i&&wt(i),writtenProperties:[]},u=this.write(null,y);return r.extent=await Ce(e),r.title=this.title,await r.update({data:u}),r}async saveAs(e,r={}){if(await this.load(),R(this.routeInfo))throw new M("routelayer:route-unsolved","saveAs() requires a solved route");const o=gt.from(e).clone();o.extent??(o.extent=await Ce(this.fullExtent)),o.id=null,o.portal??(o.portal=St.getDefault()),o.title??(o.title=this.title),o.type="Feature Collection",o.typeKeywords=["Data","Feature Collection",It.MULTI_LAYER,"Route Layer"];const{portal:i}=o,n={messages:[],origin:"portal-item",portal:i,url:null,writtenProperties:[]};await i._signIn();const y=r?.folder,u=this.write(null,n);return await i.user.addItem({item:o,folder:y,data:u}),this.portalItem=o,$t(n),n.portalItem=o,o}async solve(e,r){const o=e?.stops??this.stops,i=e?.pointBarriers??Se(this.pointBarriers),n=e?.polylineBarriers??Se(this.polylineBarriers),y=e?.polygonBarriers??Se(this.polygonBarriers);if(R(o))throw new M("routelayer:undefined-stops","the route layer must have stops defined in the route parameters.");if((pr(o)||ur(o))&&o.features.length<2||O.isCollection(o)&&o.length<2)throw new M("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");if(O.isCollection(o))for(const a of o)a.routeName=null;const u=e?.apiKey,h=this.url,d=await this._getServiceDescription(h,u,r),f=Ke(d),l=e?.travelMode??f,g=Oe(e?.accumulateAttributes,[]);v(l)&&(g.push(l.distanceAttributeName),l.timeAttributeName&&g.push(l.timeAttributeName));const P={startTime:new Date},B={accumulateAttributes:g,directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:i,polylineBarriers:n,polygonBarriers:y,preserveFirstStop:!0,preserveLastStop:!0,returnBarriers:!!i,returnDirections:!0,returnPolygonBarriers:!!y,returnPolylineBarriers:!!n,returnRoutes:!0,returnStops:!0,stops:o},m=e?ke.from(e):new ke;for(const a in P)m[a]==null&&(m[a]=P[a]);let T;m.set(B);try{T=await Ht(h,m,r)}catch(a){throw bt(a)?a:new M("routelayer:failed-route-request","the routing request failed",{error:a})}const b=this._toRouteLayerSolution(T);return this._isOverridden("title")||(this.title=Oe(b.routeInfo.name,"Route")),cr(b,d,m),b}update(e){const{stops:r,directionLines:o,directionPoints:i,pointBarriers:n,polylineBarriers:y,polygonBarriers:u,routeInfo:h}=e;this.set({stops:r,pointBarriers:n,polylineBarriers:y,polygonBarriers:u}),this._set("directionLines",o),this._set("directionPoints",i),this._set("routeInfo",h)}_getNetworkFeatures(e,r,o,i){const n=(ye(e)?e.layers:e.featureCollection.layers).find(P=>P.layerDefinition.name===r);if(R(n))return new O;const{layerDefinition:y,popupInfo:u,featureSet:h}=n,d=y.drawingInfo.renderer,{features:f}=h,l=d&&Bt(d),g=f.map(P=>{const B=Y.fromJSON(P),m=o(B);return m.symbol??(m.symbol=l?.getSymbol(B)??this._getNetworkSymbol(r)),m.popupTemplate??(m.popupTemplate=u&&Tt.fromJSON(u)),m});return i&&g.some(P=>!P.symbol)&&i(g),new O(g)}_getNetworkSymbol(e){switch(e){case"Barriers":return this.defaultSymbols.pointBarriers;case"DirectionPoints":return this.defaultSymbols.directionPoints;case"DirectionLines":return this.defaultSymbols.directionLines;case"PolylineBarriers":return this.defaultSymbols.polylineBarriers;case"PolygonBarriers":return this.defaultSymbols.polygonBarriers;case"RouteInfo":return this.defaultSymbols.routeInfo;case"Stops":return null}}async _getServiceDescription(e,r,o){if(v(this._cachedServiceDescription)&&this._cachedServiceDescription.url===e)return this._cachedServiceDescription.serviceDescription;const i=await Ve(e,r,o);return this._cachedServiceDescription={serviceDescription:i,url:e},i}_setStopSymbol(e){if(!e||e.length===0||R(this.defaultSymbols.stops)||e.every(l=>v(l.symbol)))return;const{first:r,last:o,middle:i,unlocated:n,waypoint:y,break:u}=this.defaultSymbols.stops;if(R(this.routeInfo)||e.length===1)return void e.forEach((l,g)=>{switch(g){case 0:l.symbol=r;break;case e.length-1:l.symbol=o;break;default:l.symbol=i}});const h=e.map(l=>l.sequence).filter(l=>v(l)),d=Math.min(...h),f=Math.max(...h);for(const l of e)l.sequence!==d?l.sequence!==f?l.status==="ok"||l.status==="not-located-on-closest"?l.locationType!=="waypoint"?l.locationType!=="break"?l.symbol=i:l.symbol=u:l.symbol=y:l.symbol=n:l.symbol=o:l.symbol=r}_toRouteLayerSolution(e){const r=e.routeResults[0].stops.map(d=>te.fromJSON(d.toJSON()));this._setStopSymbol(r);const o=new Ee(r),i=new xe(e.polygonBarriers?.map(d=>{const f=X.fromJSON(d.toJSON());return f.symbol=this.defaultSymbols.polygonBarriers,f})),n=new Fe(e.polylineBarriers?.map(d=>{const f=ee.fromJSON(d.toJSON());return f.symbol=this.defaultSymbols.polylineBarriers,f})),y=new Je(e.pointBarriers?.map(d=>{const f=H.fromJSON(d.toJSON());return f.symbol=this.defaultSymbols.pointBarriers,f})),u=le.fromJSON(e.routeResults[0].route.toJSON());u.symbol=this.defaultSymbols.routeInfo;const h=new mr(e.routeResults[0].directionPoints?.features.map(d=>{const f=se.fromJSON(d.toJSON());return f.symbol=this.defaultSymbols.directionPoints,f}));return{directionLines:new dr(e.routeResults[0].directionLines?.features.map(d=>{const f=oe.fromJSON(d.toJSON());return f.symbol=this.defaultSymbols.directionLines,f})),directionPoints:h,pointBarriers:y,polygonBarriers:i,polylineBarriers:n,routeInfo:u,stops:o}}_writeDirectionLines(){return this._writeNetworkFeatures(this.directionLines,this.defaultSymbols.directionLines,"esriGeometryPolyline",oe.fields,oe.popupInfo,"DirectionLines","Direction Lines")}_writeDirectionPoints(){return this._writeNetworkFeatures(this.directionPoints,this.defaultSymbols.directionPoints,"esriGeometryPoint",se.fields,se.popupInfo,"DirectionPoints","Direction Points")}_writeNetworkFeatures(e,r,o,i,n,y,u){return R(e)||!e.length?null:{featureSet:{features:e.toArray().map(h=>yr(h)),geometryType:o},layerDefinition:{capabilities:"Query,Update,Editing",drawingInfo:{renderer:{type:"simple",symbol:v(r)?r.toJSON():Pe(o)}},extent:this.fullExtent.toJSON(),fields:i,geometryType:o,hasM:!1,hasZ:!1,maxScale:this.maxScale,minScale:this.minScale,name:y,objectIdField:"__OBJECTID",spatialReference:this.spatialReference.toJSON(),title:u,type:"Feature Layer",typeIdField:""},popupInfo:n}}_writePointBarriers(){return this._writeNetworkFeatures(this.pointBarriers,this.defaultSymbols.pointBarriers,"esriGeometryPoint",H.fields,H.popupInfo,"Barriers","Point Barriers")}_writePolygonBarriers(){return this._writeNetworkFeatures(this.polygonBarriers,this.defaultSymbols.polygonBarriers,"esriGeometryPolygon",X.fields,X.popupInfo,"PolygonBarriers","Polygon Barriers")}_writePolylineBarriers(){return this._writeNetworkFeatures(this.polylineBarriers,this.defaultSymbols.polylineBarriers,"esriGeometryPolyline",ee.fields,ee.popupInfo,"PolylineBarriers","Line Barriers")}_writeRouteInfo(){return this._writeNetworkFeatures(v(this.routeInfo)?new O([this.routeInfo]):null,this.defaultSymbols.routeInfo,"esriGeometryPolyline",le.fields,le.popupInfo,"RouteInfo","Route Details")}_writeStops(){const e=this._writeNetworkFeatures(this.stops,null,"esriGeometryPoint",te.fields,te.popupInfo,"Stops","Stops");if(R(e))return null;const{stops:r}=this.defaultSymbols,o=v(r)&&v(r.first)&&r.first.toJSON(),i=v(r)&&v(r.middle)&&r.middle.toJSON(),n=v(r)&&v(r.last)&&r.last.toJSON();return e.layerDefinition.drawingInfo.renderer={type:"uniqueValue",field1:"Sequence",defaultSymbol:i,uniqueValueInfos:[{value:"1",symbol:o,label:"First Stop"},{value:`${this.stops.length}`,symbol:n,label:"Last Stop"}]},e}};t([s({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:this.portalItem==null}}}}}}})],w.prototype,"_featureCollection",void 0),t([W(["web-map","portal-item"],"_featureCollection")],w.prototype,"writeFeatureCollectionWebmap",null),t([s({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:this.portalItem!=null}}}}}}})],w.prototype,"_type",void 0),t([s({nonNullable:!0,type:ze})],w.prototype,"defaultSymbols",void 0),t([s({readOnly:!0})],w.prototype,"directionLines",void 0),t([I(["web-map","portal-item"],"directionLines",["layers","featureCollection.layers"])],w.prototype,"readDirectionLines",null),t([s({readOnly:!0})],w.prototype,"directionPoints",void 0),t([I(["web-map","portal-item"],"directionPoints",["layers","featureCollection.layers"])],w.prototype,"readDirectionPoints",null),t([s({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],w.prototype,"featureCollectionType",void 0),t([s({readOnly:!0})],w.prototype,"fullExtent",null),t([s({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],w.prototype,"legendEnabled",void 0),t([s({type:["show","hide"]})],w.prototype,"listMode",void 0),t([s({type:Number,nonNullable:!0,json:{write:!1}})],w.prototype,"maxScale",void 0),t([I(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],w.prototype,"readMaxScale",null),t([s({type:Number,nonNullable:!0,json:{write:!1}})],w.prototype,"minScale",void 0),t([I(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],w.prototype,"readMinScale",null),t([s({type:["ArcGISFeatureLayer"],value:"ArcGISFeatureLayer"})],w.prototype,"operationalLayerType",void 0),t([s({nonNullable:!0,type:O.ofType(H)})],w.prototype,"pointBarriers",void 0),t([I(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],w.prototype,"readPointBarriers",null),t([s({nonNullable:!0,type:O.ofType(X)})],w.prototype,"polygonBarriers",void 0),t([I(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],w.prototype,"readPolygonBarriers",null),t([s({nonNullable:!0,type:O.ofType(ee)})],w.prototype,"polylineBarriers",void 0),t([I(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],w.prototype,"readPolylineBarriers",null),t([s({readOnly:!0})],w.prototype,"routeInfo",void 0),t([I(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],w.prototype,"readRouteInfo",null),t([s({type:V})],w.prototype,"spatialReference",void 0),t([I(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],w.prototype,"readSpatialReference",null),t([s({nonNullable:!0,type:O.ofType(te)})],w.prototype,"stops",void 0),t([I(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],w.prototype,"readStops",null),t([s()],w.prototype,"title",null),t([s({readOnly:!0,json:{read:!1}})],w.prototype,"type",void 0),t([s()],w.prototype,"url",null),w=t([j("esri.layers.RouteLayer")],w);const br=w;export{br as default};
