import{K as s,N as o,O as T,Z as A,F as L,e as S,k as h,i as N,fO as Z,s as F,kv as z,kT as J,kU as H,kh as U,kS as V,kV as W,ki as K,dw as X,dx as Y,kj as ee,dy as te,dD as se,kW as b,km as re,v as I,kX as ie,ky as oe,kY as ne,jh as pe,M as ae,k5 as O,k_ as le,k$ as ue,kZ as de,kM as ce,kp as ye,fe as he,l1 as fe,ko as me,l2 as ge,l4 as ve,dB as Se,kq as xe}from"./main.efb50b2c.js";import{q as we,F as R,N as D,S as Fe,k as be,T as Ie,x as Oe,I as Re,j as De}from"./ogcFeatureUtils.b832242d.js";import"./preload-helper.387dac8f.js";import"./geojson.82f10ea5.js";import"./clientSideDefaults.24a06bd0.js";import"./QueryEngineCapabilities.c2e9875c.js";let c=class extends A{constructor(){super(...arguments),this.featureDefinition=null,this.type="ogc-feature"}load(e){return this.addResolvingPromise(this._loadOGCServices(this.layer,e)),this.when()}getFeatureDefinition(){const{featureDefinition:{collection:e,layerDefinition:r,spatialReference:t,supportedCrs:n},layer:{apiKey:l,capabilities:a,customParameters:p}}=this;return{capabilities:a,collection:e,layerDefinition:r,queryParameters:{apiKey:l,customParameters:p},spatialReference:t,supportedCrs:n}}queryExtent(e,r={}){return null}queryFeatureCount(e,r={}){return null}queryFeatures(e,r={}){return this.queryFeaturesJSON(e,r).then(t=>L.fromJSON(t))}queryFeaturesJSON(e,r={}){const t=this.getFeatureDefinition();return this.load(r).then(()=>we(t,e,r))}queryObjectIds(e,r={}){return null}serviceSupportsSpatialReference(e){return!(!e.isWGS84&&!e.isWebMercator)||!!this.featureDefinition.supportedCrs[e.wkid]}_conformsToType(e,r){const t=new RegExp(`^${r}$`,"i");return e.conformsTo.some(n=>t.test(n))??!1}_getCapabilities(e,r){const t=S(r)?r.components?.parameters:null;return{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:e},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:!1,supportsDelete:!1,supportsEditing:!1,supportsChangeTracking:!1,supportsQuery:!1,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:!1,supportsExceedsLimitStatistics:!1},query:{maxRecordCount:t?.limit?.schema?.maximum??t?.limitFeatures?.schema?.maximum??5e3,maxRecordCountFactor:void 0,standardMaxRecordCount:void 0,supportsCacheHint:!1,supportsCentroid:!1,supportsDisjointSpatialRelationship:!1,supportsDistance:!1,supportsDistinct:!1,supportsExtent:!1,supportsFormatPBF:!1,supportsGeometryProperties:!1,supportsHavingClause:!1,supportsHistoricMoment:!1,supportsMaxRecordCountFactor:!1,supportsOrderBy:!1,supportsPagination:!1,supportsPercentileStatistics:!1,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryByOthers:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsStandardizedQueriesOnly:!1,supportsTopFeaturesQuery:!1,supportsStatistics:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!1,supportsCompactGeometry:!1,supportsSqlExpression:!1,tileMaxRecordCount:void 0},queryRelated:{supportsCount:!1,supportsOrderBy:!1,supportsPagination:!1,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},editing:{supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsGeometryUpdate:!1,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsUploadWithItemId:!1,supportsUpdateWithoutM:!1}}}_getExtent(e){const r=e.extent?.spatial;if(!r)return null;const t=r.bbox[0],n=t.length===4,l=t[0],a=t[1],p=n?void 0:t[2];return{xmin:l,ymin:a,xmax:n?t[2]:t[3],ymax:n?t[3]:t[4],zmin:p,zmax:n?void 0:t[5],spatialReference:h.WGS84.toJSON()}}_getStorageSpatialReference(e){const r=e.storageCrs??R,t=D(r);return N(t)?h.WGS84:new h({wkid:t})}_getSupportedSpatialReferences(e,r){const t="#/crs",n=e.crs??[R],l=n.includes(t)?n.filter(p=>p!==t).concat(r.crs):n,a=/^http:\/\/www\.opengis.net\/def\/crs\/epsg\/.*\/3785$/i;return l.filter(p=>!a.test(p))}async _loadOGCServices(e,r){const t=S(r)?r.signal:null,{apiKey:n,collectionId:l,customParameters:a,fields:p,geometryType:$,hasZ:C,objectIdField:j,timeInfo:k,url:E}=e,P={fields:p?.map(d=>d.toJSON()),geometryType:Z.toJSON($),hasZ:C,objectIdField:j,timeInfo:k?.toJSON()},y={apiKey:n,customParameters:a,signal:t},f=await Fe(E,y),[x,w]=await Promise.all([be(f,y),Ie(f,y)]);if(!this._conformsToType(x,"http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson"))throw new F("ogc-feature-layer:no-geojson-support","Server does not support geojson");const u=w.collections.find(d=>d.id===l);if(!u)throw new F("ogc-feature-layer:collection-not-found","Server does not contain the named collection");const _=this._conformsToType(x,"http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30")?await Oe(f,y):null,m=await Re(u,P,y),q=this._getCapabilities(m.hasZ,_),G=this._getExtent(u),B=this._getStorageSpatialReference(u).toJSON(),M=this._getSupportedSpatialReferences(u,w),Q=new RegExp(`^${De}`,"i"),g={};for(const d of M){const v=D(d);S(v)&&(g[v]||(g[v]=d.replace(Q,"")))}m.extent=G,this.featureDefinition={capabilities:q,collection:u,layerDefinition:m,queryParameters:{},spatialReference:B,supportedCrs:g}}};s([o()],c.prototype,"featureDefinition",void 0),s([o({constructOnly:!0})],c.prototype,"layer",void 0),s([o()],c.prototype,"type",void 0),c=s([T("esri.layers.graphics.sources.OGCFeatureSource")],c);const Te=xe();let i=class extends z(J(H(U(V(W(K(X(Y(ee(te(se))))))))))){constructor(e){super(e),this.collectionId=null,this.copyright=null,this.definitionExpression=null,this.description=null,this.displayField=null,this.elevationInfo=null,this.featureReduction=null,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.hasZ=void 0,this.labelingInfo=null,this.labelsVisible=!0,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="OGCFeatureLayer",this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new c({layer:this}),this.spatialReference=null,this.title=null,this.type="ogc-feature",this.typeIdField=null,this.types=null,this.url=null}destroy(){this.source?.destroy()}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["OGCFeatureServer"]},e).then(()=>this._fetchService(e))),this.when()}get defaultPopupTemplate(){return this.createPopupTemplate()}get isTable(){return this.loaded&&this.geometryType==null}set renderer(e){b(e,this.fieldsIndex),this._set("renderer",e)}on(e,r){return super.on(e,r)}createPopupTemplate(e){return re(this,e)}createQuery(){return new I}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,r){let t,n=!1;const l=r?.feature?.attributes,a=this.typeIdField&&l?.[this.typeIdField];return a!=null&&this.types&&(n=this.types.some(p=>p.id==a&&(t=p.domains?.[e],t?.type==="inherited"&&(t=this._getLayerDomain(e)),!0))),n||t||(t=this._getLayerDomain(e)),t}queryFeatures(e,r){return this.load().then(()=>this.source.queryFeatures(I.from(e)||this.createQuery(),r)).then(t=>(t?.features?.forEach(n=>{n.layer=n.sourceLayer=this}),t))}serviceSupportsSpatialReference(e){return this.source?.serviceSupportsSpatialReference(e)??!1}async _fetchService(e){await this.source.load(e),this.read(this.source.featureDefinition,{origin:"service"}),b(this.renderer,this.fieldsIndex),ie(this.timeInfo,this.fieldsIndex)}_getLayerDomain(e){if(!this.fields)return null;for(const r of this.fields)if(r.name===e&&r.domain)return r.domain;return null}};s([o({readOnly:!0,json:{origins:{service:{read:!0}}}})],i.prototype,"capabilities",void 0),s([o({type:String,json:{write:!0}})],i.prototype,"collectionId",void 0),s([o({type:String})],i.prototype,"copyright",void 0),s([o({readOnly:!0})],i.prototype,"defaultPopupTemplate",null),s([o({type:String})],i.prototype,"definitionExpression",void 0),s([o({readOnly:!0,type:String,json:{origins:{service:{name:"collection.description"}}}})],i.prototype,"description",void 0),s([o({type:String})],i.prototype,"displayField",void 0),s([o(oe)],i.prototype,"elevationInfo",void 0),s([o(ne)],i.prototype,"featureReduction",void 0),s([o({type:[pe],json:{origins:{service:{name:"layerDefinition.fields"}}}})],i.prototype,"fields",void 0),s([o(Te.fieldsIndex)],i.prototype,"fieldsIndex",void 0),s([o({readOnly:!0,type:ae,json:{origins:{service:{name:"layerDefinition.extent"}}}})],i.prototype,"fullExtent",void 0),s([o({type:O.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:O.read}}}}})],i.prototype,"geometryType",void 0),s([o({type:Boolean,json:{origins:{service:{name:"layerDefinition.hasZ"}}}})],i.prototype,"hasZ",void 0),s([o({type:Boolean,readOnly:!0})],i.prototype,"isTable",null),s([o({type:[le],json:{origins:{"web-document":{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:ue},write:!0}}}})],i.prototype,"labelingInfo",void 0),s([o(de)],i.prototype,"labelsVisible",void 0),s([o(ce)],i.prototype,"legendEnabled",void 0),s([o({type:String,json:{origins:{service:{name:"layerDefinition.objectIdField"}}}})],i.prototype,"objectIdField",void 0),s([o({type:["OGCFeatureLayer"]})],i.prototype,"operationalLayerType",void 0),s([o(ye)],i.prototype,"popupEnabled",void 0),s([o({type:he,json:{name:"popupInfo",write:!0}})],i.prototype,"popupTemplate",void 0),s([o({types:fe,json:{origins:{service:{name:"layerDefinition.drawingInfo.renderer",write:!1},"web-scene":{types:me,name:"layerDefinition.drawingInfo.renderer",write:!0}},name:"layerDefinition.drawingInfo.renderer",write:!0}})],i.prototype,"renderer",null),s([o(ge)],i.prototype,"screenSizePerspectiveEnabled",void 0),s([o({readOnly:!0})],i.prototype,"source",void 0),s([o({readOnly:!0,type:h,json:{origins:{service:{read:!0}}}})],i.prototype,"spatialReference",void 0),s([o({type:String,json:{write:{enabled:!0,ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"collection.title"}}}})],i.prototype,"title",void 0),s([o({readOnly:!0,json:{read:!1}})],i.prototype,"type",void 0),s([o({type:String,readOnly:!0})],i.prototype,"typeIdField",void 0),s([o({type:[ve]})],i.prototype,"types",void 0),s([o(Se)],i.prototype,"url",void 0),i=s([T("esri.layers.OGCFeatureLayer")],i);const _e=i;export{_e as default};
