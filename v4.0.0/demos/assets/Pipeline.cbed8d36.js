import{jk as Ft,s as A,jl as Ct,a6 as re,hD as Ge,i as k,q as $e,c1 as W,e as f,p as kt,a$ as Tt,R as j,jm as qt,ae as ue,j1 as pe,d2 as Mt,jn as ct,jo as Rt,ao as Pe,as as De,eV as ge,d6 as fe,a0 as Et,g0 as _e,jp as At,v as ut,jq as Ot,E as Ut,b4 as Me,b3 as Q,bj as ye,b2 as Ie,U as dt,bq as Lt,fk as je,K as $,O as de,N as B,o as Gt,aF as lt,bk as Ne,a2 as $t,dE as Pt,k as J,bZ as gt,ak as Re,jb as Dt,jr as pt,js as ft,c2 as jt,a_ as Ee,cl as Nt,jt as Xe,i_ as Bt,dg as _t,de as yt,bi as he,ju as te,bS as zt,M as Qt,bQ as mt,jv as Vt,bB as Xt,d9 as Yt,fb as le,jw as Wt,cL as Ht,eN as Zt,fd as Jt,jx as Kt}from"./main.efb50b2c.js";import{_ as Ae}from"./preload-helper.387dac8f.js";import{Y as es}from"./QueryEngine.6d4001c3.js";import{r as ts,c as vt,l as ss}from"./FeatureStore2D.b0244937.js";import{s as bt}from"./quantizationUtils.d09757e3.js";import{v as Ye}from"./ogcFeatureUtils.b832242d.js";import{A as We,d as X,r as rs,R as is}from"./ComputedAttributeStorage.a7ff046c.js";import{s as me}from"./CircularArray.eecf6ac8.js";import{g as ce,f as It}from"./projectionSupport.a2ec70ff.js";import{s as as,a as He}from"./visualVariablesUtils.42df48c6.js";import{G as V}from"./enums.6e42a319.js";import"./QueryEngineResult.191af376.js";import"./WhereClause.5a38bf79.js";import"./utils.9dfb26f2.js";import"./utils.1e6f5f3b.js";import"./QueryEngineCapabilities.c2e9875c.js";import"./timeSupport.3d7ef658.js";import"./geojson.82f10ea5.js";import"./clientSideDefaults.24a06bd0.js";import"./centroid.79915d1f.js";import"./Utils.f67560a4.js";import"./enums.de935fa5.js";import"./Texture.627d6838.js";import"./VertexElementDescriptor.d386088d.js";import"./json.d1a0fa35.js";import"./visualVariablesUtils.087ada97.js";function os(r){return r==="heatmap"?Ae(()=>import("./HeatmapProcessor.78401979.js"),["assets/HeatmapProcessor.78401979.js","assets/main.efb50b2c.js","assets/main.908c9a86.css","assets/preload-helper.387dac8f.js","assets/enums.6e42a319.js","assets/BaseProcessor.d148d436.js","assets/tileUtils.0431f5e8.js"]):Ae(()=>import("./SymbolProcessor.c1db71e7.js"),["assets/SymbolProcessor.c1db71e7.js","assets/main.efb50b2c.js","assets/main.908c9a86.css","assets/preload-helper.387dac8f.js","assets/CIMSymbolHelper.6248d0ad.js","assets/BidiEngine.ec67919b.js","assets/enums.6e42a319.js","assets/MaterialKey.c216087c.js","assets/Utils.f67560a4.js","assets/enums.de935fa5.js","assets/Texture.627d6838.js","assets/VertexElementDescriptor.d386088d.js","assets/GeometryUtils.814cb798.js","assets/visualVariablesUtils.42df48c6.js","assets/visualVariablesUtils.087ada97.js","assets/Matcher.41df3644.js","assets/tileUtils.0431f5e8.js","assets/TileClipper.68567d53.js","assets/Geometry.b68345ae.js","assets/GeometryUtils.8166011b.js","assets/ExpandedCIM.7b8d9605.js","assets/quantizationUtils.d09757e3.js","assets/earcut.d30cbec0.js","assets/devEnvironmentUtils.8c6e6b72.js","assets/BaseProcessor.d148d436.js"])}const Se=268435455;class ns{constructor(){this.fieldMap=new Map,this.fields=[],this.hasFeatures=!1,this.fieldCount=0,this.featureCount=0,this.objectIdFieldIndex=0,this.vertexCount=0,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}hasField(e){return this.fieldMap.has(e)}isDateField(e){return this.fieldMap.get(e)?.isDate}getFieldIndex(e){return this.fieldMap.get(e)?.index}}function hs(r){const s=r.getLength(),i=r.pos()+s,a={name:"",isDate:!1};for(;r.pos()<i&&r.next();)switch(r.tag()){case 1:a.name=r.getString();break;case 2:Ct(r.getEnum())==="esriFieldTypeDate"&&(a.isDate=!0);break;default:r.skip()}return a}function cs(r){return r.toLowerCase().trim()}function us(r,e,t=!1){const h=r.pos(),u=new ns;let d=0,g=0;const l=1,p=2,_=4,I=3;let y=null,v=null,b=null,w=!1;for(;r.next();)switch(r.tag()){case 1:y=r.getString();break;case 3:v=r.getString();break;case 12:b=r.processMessage(Ft);break;case 9:if(u.exceededTransferLimit=r.getBool(),u.exceededTransferLimit){u.offsets.geometry=t?new Float64Array(8e3):new Int32Array(8e3),u.centroid=t?new Float64Array(16e3):new Int32Array(16e3);for(let m=0;m<u.centroid.length;m++)u.centroid[m]=Se}break;case 13:{const m=hs(r),C=m.name,M=cs(m.name),x={fieldName:C,index:d++,isDate:m.isDate};u.fields.push(x),u.fieldMap.set(m.name,x),u.fieldMap.set(M,x);break}case 15:{const m=r.getLength(),C=r.pos()+m;if(!u.exceededTransferLimit){const x=u.offsets.geometry,q=u.centroid;x.push(0),q.push(Se),q.push(Se)}!w&&u.exceededTransferLimit&&(w=!0,u.offsets.attributes=t?new Float64Array(8e3*d):new Uint32Array(8e3*d));let M=g*d;for(;r.pos()<C&&r.next();)switch(r.tag()){case l:{w?u.offsets.attributes[M++]=r.pos():u.offsets.attributes.push(r.pos());const x=r.getLength();r.skipLen(x);break}case p:if(e){const x=r.getLength(),q=r.pos()+x;for(;r.pos()<q&&r.next();)switch(r.tag()){case I:{r.getUInt32();const F=r.getSInt64(),P=r.getSInt64();u.centroid[2*g]=F,u.centroid[2*g+1]=P;break}default:r.skip()}}else{u.offsets.geometry[g]=r.pos();const x=r.getLength();u.vertexCount+=x,r.skipLen(x)}break;case _:{const x=r.getLength(),q=r.pos()+x;for(;r.pos()<q&&r.next();)switch(r.tag()){case I:{r.getUInt32();const F=r.getSInt64(),P=r.getSInt64();u.centroid[2*g]=F,u.centroid[2*g+1]=P;break}default:r.skip()}break}default:r.skip()}g++,u.hasFeatures=!0;break}default:r.skip()}const S=y||v;if(!S)throw new A("FeatureSet has no objectId or globalId field name");return u.featureCount=g,u.fieldCount=d,u.objectIdFieldIndex=u.getFieldIndex(S),u.transform=b,u.displayIds=new Uint32Array(u.featureCount),u.groupIds=new Uint16Array(u.featureCount),r.move(h),u}const ds=re.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF"),ls=!0,xe=268435455,Ze=128,Je=128e3,ie={small:{delta:new Int32Array(Ze),decoded:new Int32Array(Ze)},large:{delta:new Int32Array(Je),decoded:new Int32Array(Je)}};function Ke(r){return r<=ie.small.delta.length?ie.small:(r<=ie.large.delta.length||(ie.large.delta=new Int32Array(Math.round(1.25*r)),ie.large.decoded=new Int32Array(Math.round(1.25*r))),ie.large)}function et(r){return r.toLowerCase().trim()}function gs(r){try{const t=new Tt(new Uint8Array(r),new DataView(r));for(;t.next();){if(t.tag()===2)return ps(t.getMessage());t.skip()}}catch(e){const t=new A("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:e});ds.error(t)}return null}function ps(r){for(;r.next();){if(r.tag()===1)return r.getMessage();r.skip()}return null}function fs(r){const u=r.getLength(),d=r.pos()+u;for(;r.pos()<d&&r.next();)switch(r.tag()){case 1:return r.getString();case 2:return r.getFloat();case 3:return r.getDouble();case 4:return r.getSInt32();case 5:return r.getUInt32();case 6:return r.getInt64();case 7:return r.getUInt64();case 8:return r.getSInt64();case 9:return r.getBool();default:return r.skip(),null}return null}function _s(r,e,t,s,i,a){return .5*Math.abs(r*s+t*a+i*e-r*a-t*e-i*s)}function Fe(r,e,t,s){return r*s-t*e===0&&r*t+e*s>0}class ve extends We{constructor(e,t,s,i){super(e,i),this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0,centroid:void 0,legacyFeature:void 0,optFeature:void 0},this._geometryType=i.geometryType,this._reader=t,this._header=s,this._hasNext=s.hasFeatures,this._isPoints=i.geometryType==="esriGeometryPoint"}static fromBuffer(e,t,s=!1){const i=t.geometryType,a=gs(e),o=us(a,i==="esriGeometryPoint",s),n=We.createInstance();return new ve(n,a,o,t)}get geometryType(){return this._geometryType}get size(){return this._header.featureCount}get hasZ(){return!1}get hasM(){return!1}get stride(){return 2+(this.hasZ?1:0)+(this.hasM?1:0)}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}hasField(e){return this._header.hasField(e)||this._header.hasField(et(e))}getFieldNames(){return this._header.fields.map(e=>e.fieldName)}getSize(){return this.size}getQuantizationTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0,this._featureIndex=e}getAttributeHash(){let e="";return this._header.fields.forEach(({index:t})=>{e+=this._readAttributeAtIndex(t)+"."}),e}getObjectId(){return this._readAttributeAtIndex(this._header.objectIdFieldIndex)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}getGroupId(){return this._header.groupIds[this._featureIndex]}setGroupId(e){this._header.groupIds[this._featureIndex]=e}readLegacyFeature(){if(this._cache.legacyFeature===void 0){const e=this.readCentroid(),t={attributes:this.readAttributes(),geometry:this._isPoints?this.readLegacyPointGeometry():this.readLegacyGeometry(),centroid:(e&&{x:e.coords[0],y:e.coords[1]})??null};return this._cache.legacyFeature=t,t}return this._cache.legacyFeature}readOptimizedFeature(){if(this._cache.optFeature===void 0){const e=new Ge(this.readGeometry(),this.readAttributes(),this.readCentroid());return e.objectId=this.getObjectId(),e.displayId=this.getDisplayId(),this._cache.optFeature=e,e}return this._cache.optFeature}getXHydrated(){const e=this._header.centroid[2*this._featureIndex],t=this.getQuantizationTransform();return k(t)?e:e*t.scale[0]+t.translate[0]}getYHydrated(){const e=this._header.centroid[2*this._featureIndex+1],t=this.getQuantizationTransform();return k(t)?e:t.translate[1]-e*t.scale[1]}getX(){return this._header.centroid[2*this._featureIndex]*this._sx+this._tx}getY(){return this._header.centroid[2*this._featureIndex+1]*this._sy+this._ty}readLegacyPointGeometry(){return{x:this.getX(),y:this.getY()}}readLegacyGeometry(e){const t=this.readGeometry(e);return $e(t,this.geometryType,!1,!1)}readLegacyCentroid(){const e=this.readCentroid();if(!e)return null;const[t,s]=e.coords;return{x:t,y:s}}readGeometryArea(){return this._cache.area||this.readGeometry(!0),this._cache.area}readUnquantizedGeometry(e=!1){if(this._cache.unquantGeometry===void 0){const t=this.readGeometry(e);if(!t)return this._cache.unquantGeometry=null,null;const s=Ke(t.coords.length).decoded,i=t.clone(s),a=i.coords;let o=0;for(const n of i.lengths){for(let c=1;c<n;c++){const h=2*(o+c),u=2*(o+c-1);a[h]+=a[u],a[h+1]+=a[u+1]}o+=n}return this._cache.unquantGeometry=i,i}return this._cache.unquantGeometry}readHydratedGeometry(){if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===xe)return null;const i=this.getXHydrated(),a=this.getYHydrated();return new W([],[i,a])}const e=this.readGeometry();if(!e)return null;const t=e.clone(),s=this.getQuantizationTransform();return f(s)&&kt(t,t,this.hasZ,this.hasM,s),t}readGeometry(e=!1){if(this._cache.geometry===void 0){let t=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===xe)return null;const s=this.getX(),i=this.getY();t=new W([],[s,i])}else{const s=this._header.offsets.geometry[this._featureIndex],i=this._reader;if(s===0)return null;i.move(s);try{t=e?this._parseGeometryForDisplay(i):this._parseGeometry(i)}catch(a){return console.error("Failed to parse geometry!",a),null}}return this._cache.geometry=t,t}return this._cache.geometry}readCentroid(){if(this._cache.centroid===void 0){let e=null;const t=this._header.centroid[2*this._featureIndex]+this._tx,s=this._header.centroid[2*this._featureIndex+1]+this._ty;return t===xe?(e=this._computeCentroid(),e&&(this._header.centroid[2*this._featureIndex]=e.coords[0]-this._tx,this._header.centroid[2*this._featureIndex+1]=e.coords[1]-this._ty)):e=new W([],[t,s]),this._cache.centroid=e,e}return this._cache.centroid}copy(){const e=this._reader.clone(),t=new ve(this.instance,e,this._header,this.fullSchema());return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0;++this._featureIndex<this.size&&!this._getExists(););return this._featureIndex<this.size}_readAttribute(e,t){const s=this._header.hasField(e)?e:et(e),i=this._header.getFieldIndex(s);if(i==null)return;const a=this._readAttributeAtIndex(i);return!t||a==null?a:this._header.isDateField(s)?new Date(a):a}_readAttributes(){const e={};return this._header.fields.forEach(({fieldName:t,index:s})=>{e[t]=this._readAttributeAtIndex(s)}),e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext}_readAttributeAtIndex(e){const t=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],s=this._reader;return s.move(t),fs(s)}_parseGeometry(e){const i=e.getLength(),a=e.pos()+i,o=[],n=[];for(;e.pos()<a&&e.next();)switch(e.tag()){case 2:{const c=e.getUInt32(),h=e.pos()+c;for(;e.pos()<h;)n.push(e.getUInt32());break}case 3:{const c=e.getUInt32(),h=e.pos()+c;for(o.push(e.getSInt32()+this._tx),o.push(e.getSInt32()+this._ty),this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();e.pos()<h;)o.push(e.getSInt32()),o.push(e.getSInt32()),this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();break}default:e.skip()}return new W(n,o)}_parseGeometryForDisplay(e){const i=e.getLength(),a=e.pos()+i,o=[],n=[];let c=0,h=0,u=null,d=0;const g=this.geometryType==="esriGeometryPolygon";for(;e.pos()<a&&e.next();)switch(e.tag()){case 2:{const l=e.getUInt32(),p=e.pos()+l;for(;e.pos()<p;){const _=e.getUInt32();o.push(_),c+=_}u=Ke(2*c).delta;break}case 3:{e.getUInt32();const l=2+(this.hasZ?1:0)+(this.hasM?1:0);for(const p of o)if(h+l*p>u.length)for(let _=0;_<p;_++)e.getSInt32(),e.getSInt32(),this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();else if(g&&ls){const _=this.getAreaSimplificationThreshold(p,this._header.vertexCount);let I=2,y=1;const v=!1;let b=e.getSInt32(),w=e.getSInt32();u[h++]=b,u[h++]=w,this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();let S=e.getSInt32(),m=e.getSInt32();for(this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();I<p;){let C=e.getSInt32(),M=e.getSInt32();this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();const x=b+S,q=w+m;_s(b,w,x,q,x+C,q+M)>=_?(d+=-.5*(x-b)*(q+w),y>1&&Fe(u[h-2],u[h-1],S,m)?(u[h-2]+=S,u[h-1]+=m):(u[h++]=S,u[h++]=m,y++),b=x,w=q):(C+=S,M+=m),S=C,m=M,I++}y<3||v?h-=2*y:(d+=-.5*(b+S-b)*(w+m+w),Fe(u[h-2],u[h-1],S,m)?(u[h-2]+=S,u[h-1]+=m,n.push(y)):(u[h++]=S,u[h++]=m,n.push(++y)))}else{let _=0,I=e.getSInt32(),y=e.getSInt32();this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32(),u[h++]=I,u[h++]=y,_+=1;for(let v=1;v<p;v++){const b=e.getSInt32(),w=e.getSInt32(),S=I+b,m=y+w;d+=-.5*(S-I)*(m+y),this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32(),v>2&&Fe(u[h-2],u[h-1],b,w)?(u[h-2]+=b,u[h-1]+=w):(u[h++]=b,u[h++]=w,_+=1),I=S,y=m}n.push(_)}break}default:e.skip()}if(this._cache.area=d,!n.length)return null;if(this._tx||this._ty){let l=0;for(const p of n)u[2*l]+=this._tx,u[2*l+1]+=this._ty,l+=p}return new W(n,u)}}class we{constructor(e){this.service=e}destroy(){}}function ys(r){return Array.isArray(r.source)}function ms(r){return r&&r.capabilities&&r.collection&&r.layerDefinition}function vs(r){const{capabilities:e}=r;return ms(r.source)?new xs(r):ys(r)?new Is(r):e.query.supportsFormatPBF&&j("featurelayer-pbf")?new ws(r):new Ss(r)}async function bs(r){const e=new Rt;return await e.open(r,{}),e}class Is extends we{constructor(e){super(e),this._portsOpen=bs(e.source).then(t=>this.client=t)}destroy(){this.client.close(),this.client=null}async executeQuery(e,t){await this._portsOpen;const s=await this.client.invoke("queryFeatures",e.toJSON(),t);return X.fromFeatureSet(s,this.service)}}class ws extends we{async executeQuery(e,t){const{data:s}=await qt(this.service.source,e,t),i=!e.quantizationParameters;return ve.fromBuffer(s,this.service,i)}}class Ss extends we{async executeQuery(e,t){const{source:s,capabilities:i,spatialReference:a,objectIdField:o,geometryType:n}=this.service;if(f(e.quantizationParameters)&&!i.query.supportsQuantization){const h=e.clone(),u=bt(ue(h.quantizationParameters));h.quantizationParameters=null;const{data:d}=await pe(s,h,a,t),g=Mt(d,o);return ct(u,g),X.fromOptimizedFeatureSet(g,this.service)}const{data:c}=await pe(s,e,this.service.spatialReference,t);return n==="esriGeometryPoint"&&(c.features=c.features?.filter(h=>{if(f(h.geometry)){const u=h.geometry;return Number.isFinite(u.x)&&Number.isFinite(u.y)}return!0})),X.fromFeatureSet(c,this.service)}}class xs extends we{async executeQuery(e,t){const{capabilities:s}=this.service;if(e.quantizationParameters&&!s.query.supportsQuantization){const a=e.clone(),o=bt(ue(a.quantizationParameters));a.quantizationParameters=null;const n=await Ye(this.service.source,e,t);return ct(o,n),X.fromOptimizedFeatureSet(n,this.service)}const i=await Ye(this.service.source,e,t);return X.fromOptimizedFeatureSet(i,this.service)}}class N{constructor(){this.version=0,this.source=!1,this.targets={feature:!1,aggregate:!1},this.storage={filters:!1,data:!1},this.mesh=!1,this.queryFilter=!1,this.why={mesh:[],source:[]}}static create(e){const t=new N;for(const s in e){const i=e[s];if(typeof i=="object")for(const a in i){const o=i[a];t[s][a]=o}t[s]=i}return t}static empty(){return N.create({})}static all(){return N.create({source:!0,targets:{feature:!0,aggregate:!0},storage:{filters:!0,data:!0},mesh:!0})}unset(e){this.version=e.version,e.source&&(this.source=!1),e.targets.feature&&(this.targets.feature=!1),e.targets.aggregate&&(this.targets.aggregate=!1),e.storage.filters&&(this.storage.filters=!1),e.storage.data&&(this.storage.data=!1),e.mesh&&(this.mesh=!1),e.queryFilter&&(this.queryFilter=!1)}any(){return this.source||this.mesh||this.storage.filters||this.storage.data||this.targets.feature||this.targets.aggregate||this.queryFilter}describe(){let e=0,t="";if(this.mesh){e+=20,t+=`-> (20) Mesh needs update
`;for(const i of this.why.mesh)t+=`    + ${i}
`}if(this.source){e+=10,t+=`-> (10) The source needs update
`;for(const i of this.why.source)t+=`    + ${i}
`}this.targets.feature&&(e+=5,t+=`-> (5) Feature target parameters changed
`),this.storage.filters&&(e+=5,t+=`-> (5) Feature filter parameters changed
`),this.targets.aggregate&&(e+=4,t+=`-> (4) Aggregate target parameters changed
`),this.storage.data&&(e+=1,t+="-> (1) Texture storage parameters changed");const s=e<5?"Fastest":e<10?"Fast":e<15?"Moderate":e<20?"Slow":"Very Slow";console.debug(`Applying ${s} update of cost ${e}/45 `),console.debug(t)}toJSON(){return{queryFilter:this.queryFilter,source:this.source,targets:this.targets,storage:this.storage,mesh:this.mesh}}}class Fs{constructor(e,t){this.requests={done:new Array,stream:new me(10)},this._edits=null,this._abortController=new AbortController,this._version=0,this._done=!1,this.didSend=!1,this.tile=e,this._version=t}get signal(){return this._abortController.signal}get options(){return{signal:this._abortController.signal}}get empty(){return!this.requests.done.length}get edits(){return this._edits}get done(){return this._done}end(){this._done=!0}clear(){this.requests.done=[]}applyUpdate(e){this.requests.done.forEach(t=>t.message.status.unset(e)),this._version=e.version,f(this._edits)&&this._edits.status.unset(e)}add(e){e.message.status=e.message.status??N.empty(),e.message.status.version=this._version,j("esri-2d-update-debug")&&console.debug(this.tile.id,"DataTileSubscription:add",this._version),e.message.end&&this.requests.done.forEach(t=>{f(t.message)&&t.message.end&&(t.message.end=!1)}),this.requests.done.push(e)}edit(e,t){const s=e.getQuantizationTransform(),i=e.fullSchema(),a=Array.from(e.features()),o=[...t,...a.map(n=>n.objectId)];if(this.removeIds(o),this._invalidate(),k(this._edits))return void(this._edits={type:"append",addOrUpdate:X.fromOptimizedFeatures(a,i,ue(s)),id:this.tile.id,status:N.empty(),end:!0});this.requests.done.forEach(n=>n.message.end=!1),ue(this._edits.addOrUpdate).append(e.features())}*readers(){for(const{message:e}of this.requests.done)f(e.addOrUpdate)&&(yield e.addOrUpdate);f(this._edits)&&f(this._edits.addOrUpdate)&&(yield this._edits.addOrUpdate)}_invalidate(){for(const e of this.requests.done)e.message.status=N.empty();f(this._edits)&&(this._edits.status=N.empty())}removeIds(e){this._invalidate();for(const{message:t}of this.requests.done){const s=t.addOrUpdate;f(s)&&(s.removeIds(e),s.isEmpty&&(t.addOrUpdate=null))}f(this._edits)&&f(this._edits.addOrUpdate)&&this._edits.addOrUpdate.removeIds(e),this.requests.done=this.requests.done.filter(t=>t.message.addOrUpdate||t.message.end)}abort(){this._abortController.abort()}}function Cs(r,e){const t=new Set;return r&&r.forEach(s=>t.add(s)),e&&e.forEach(s=>t.add(s)),t.has("*")?["*"]:Array.from(t)}class wt{constructor(e){this.events=new Pe,this._resolver=De(),this._didEdit=!1,this._subscriptions=new Map,this._outSR=e.outSR,this._serviceInfo=e.serviceInfo,this._onTileUpdateMessage=e.onMessage}destroy(){}async _onMessage(e){const t=this._subscriptions.get(e.id);if(!t)return;const s={...e,remove:e.remove??[],status:e.status??N.empty()};return ge(this._onTileUpdateMessage(s,t.options))}update(e,t){const s=t.fields.length;t.outFields=Cs(this._schema?.outFields,t.outFields),t.outFields=t.outFields.length>=.75*s?["*"]:t.outFields,t.outFields.sort();const i=fe(this._schema,t);if(!i)return;j("esri-2d-update-debug")&&console.debug("Applying Update - Source:",i);const a="orderByFields"in this._serviceInfo&&this._serviceInfo.orderByFields?this._serviceInfo.orderByFields:this._serviceInfo.objectIdField+" ASC",o={returnCentroid:j("esri-2d-query-centroid-enabled")&&this._serviceInfo.geometryType==="esriGeometryPolygon",returnGeometry:!0,timeReferenceUnknownClient:this._serviceInfo.type!=="stream"&&this._serviceInfo.timeReferenceUnknownClient,outFields:t.outFields,outSpatialReference:this._outSR,orderByFields:[a],where:t.definitionExpression||"1=1",gdbVersion:t.gdbVersion,historicMoment:t.historicMoment,timeExtent:Et.fromJSON(t.timeExtent)},n=this._schema&&_e(i,"outFields");this._schema&&At(i,["timeExtent","definitionExpression","gdbVersion","historicMoment","customParameters"])&&(e.why.mesh.push("Layer filter and/or custom parameters changed"),e.why.source.push("Layer filter and/or custom parameters changed"),e.mesh=!0,e.source=!0,e.queryFilter=!0),n&&(e.why.source.push("Layer required fields changed"),e.source=!0),fe(o,this._queryInfo)&&(this._queryInfo=o),this._schema=t,this._resolver.resolve()}whenInitialized(){return this._resolver.promise}async applyUpdate(e){if(e.queryFilter||e.source&&this._didEdit)return this.refresh(e.version),void(this._didEdit=!1);this._subscriptions.forEach(t=>t.applyUpdate(e)),await this.resend()}refresh(e){for(const t of this._tiles())this.unsubscribe(t),this.subscribe(t,e)}subscribe(e,t){const s=new Fs(e,t);this._subscriptions.set(e.id,s)}unsubscribe(e){const t=this.get(e.id);f(t)&&t.abort(),this._subscriptions.delete(e.id)}createQuery(e={}){const t=this._queryInfo.historicMoment?new Date(this._queryInfo.historicMoment):null;return new ut({...this._queryInfo,historicMoment:t,...e})}get(e){return this._subscriptions.has(e)?this._subscriptions.get(e):null}async queryLastEditDate(){throw new Error("Service does not support query type")}async query(e){throw new Error("Service does not support query")}*_tiles(){const e=Array.from(this._subscriptions.values());for(const t of e)yield t.tile}async edit(e,t){const s=Array.from(this._subscriptions.values()),i=s.map(({tile:a})=>a);for(const a of s)a.removeIds(t);if(e.length){const a=i.map(n=>{const c=this.createTileQuery(n);return c.objectIds=e,{tile:n,query:c}}).map(async({tile:n,query:c})=>({tile:n,result:await this.query(c),query:c})),o=(await Ot(a)).map(async({tile:n,result:c})=>{if(!c.hasFeatures&&!t.length&&!e.length)return;const h=this._subscriptions.get(n.key.id);h&&h.edit(c,e)});await Ut(o)}this._didEdit=!0}}const ks=re.getLogger("esri.views.2d.layers.features.sources.BaseFeatureSource"),Ts=4;class Be extends wt{constructor(e){super(e),this.type="feature",this.mode="on-demand",this._adapter=vs(e.serviceInfo),this._queue=new Me({concurrency:8,process:async t=>{if(Q(t),f(t.tile)){const s=t.tile.key.id,{signal:i}=t,a=j("esri-tiles-debug")?{tile:s.replace(/\//g,"."),depth:t.depth}:void 0,o=await this._adapter.executeQuery(t.query,{signal:i,query:{...a,...this._schema.customParameters}});return o.level=t.tile.key.level,o}return this._adapter.executeQuery(t.query,{...t,query:this._schema.customParameters})}}),this._patchQueue=new Me({concurrency:8,process:async t=>{if(Q(t),f(t.tile)){const s=t.tile.key.id,{signal:i}=t,a=j("esri-tiles-debug")?{tile:s.replace(/\//g,"."),depth:t.depth}:void 0,o=await this._adapter.executeQuery(t.query,{signal:i,query:{...a,...this._schema.customParameters}});return o.level=t.tile.key.level,o}return this._adapter.executeQuery(t.query,{...t,query:this._schema.customParameters})}})}destroy(){super.destroy(),this._adapter.destroy(),this._queue.destroy(),this._patchQueue.destroy()}get updating(){return!!this._queue.length||Array.from(this._subscriptions.values()).some(e=>!e.done)}get maxRecordCountFactor(){const{query:e}=this._serviceInfo.capabilities;return e.supportsMaxRecordCountFactor?Ts:null}get maxPageSize(){const{query:e}=this._serviceInfo.capabilities;return(e.maxRecordCount??8e3)*ye(this.maxRecordCountFactor,1)}get pageSize(){return Math.min(8e3,this.maxPageSize)}enableEvent(e,t){}subscribe(e,t){super.subscribe(e,t);const s=this._subscriptions.get(e.id);this._fetchDataTile(e).catch(i=>{Ie(i)||ks.error(new A("mapview-query-error","Encountered error when fetching tile",{tile:e,error:i}))}).then(()=>s.end())}unsubscribe(e){super.unsubscribe(e)}readers(e){return this._subscriptions.get(e).readers()}async query(e){return this._adapter.executeQuery(e,{query:this._schema.customParameters})}async queryLastEditDate(){const e=this._serviceInfo.source,t={...e.query,f:"json"};return(await dt(e.path,{query:t,responseType:"json"})).data.editingInfo.lastEditDate}createTileQuery(e,t={}){const s=this._serviceInfo.geometryType,i=this.createQuery(t);i.quantizationParameters=t.quantizationParameters??e.getQuantizationParameters(),i.resultType="tile",i.geometry=e.extent,this._serviceInfo.capabilities.query.supportsQuantization?s==="esriGeometryPolyline"&&(i.maxAllowableOffset=e.resolution*j("feature-polyline-generalization-factor")):s!=="esriGeometryPolyline"&&s!=="esriGeometryPolygon"||(i.maxAllowableOffset=e.resolution,s==="esriGeometryPolyline"&&(i.maxAllowableOffset*=j("feature-polyline-generalization-factor")));const a=this._serviceInfo.capabilities.query;return i.defaultSpatialReferenceEnabled=a.supportsDefaultSpatialReference,i.compactGeometryEnabled=a.supportsCompactGeometry,i}async _executePatchQuery(e,t,s,i){const a=t.clone();a.outFields=[this._serviceInfo.objectIdField,...s],a.returnCentroid=!1,a.returnGeometry=!1;const o=f(a.start)?a.start/8e3:0,n=i.signal;return this._patchQueue.push({tile:e,query:a,signal:n,depth:o})}async _resend(e,t){const{query:s,message:i}=e,a=f(s.outFields)?s.outFields:[],o=this._queryInfo.outFields,n=o.filter(c=>!a.includes(c));if(k(i.addOrUpdate))this._onMessage({...i,type:"append"});else if(n.length)try{const c=this._subscriptions.get(i.id).tile,h=await this._executePatchQuery(c,s,n,t);Q(t),s.outFields=o,i.addOrUpdate.joinAttributes(h),this._onMessage({...i,end:i.end,type:"append"})}catch{}else this._onMessage({...i,type:"append"})}async _resendSubscription(e){if(j("esri-2d-update-debug")&&console.debug(e.tile.id,"Resend Subscription"),e.empty)return this._onMessage({id:e.tile.id,addOrUpdate:null,end:!1,type:"append"});const t=e.signal;for(const s of e.requests.done)await this._resend(s,{signal:t});return f(e.edits)?this._onMessage(e.edits):void 0}async resend(){const e=Array.from(this._subscriptions.values());await Promise.all(e.map(t=>this._resendSubscription(t)))}}const tt=j("esri-mobile"),st={maxDrillLevel:tt?1:4,maxRecordCountFactor:tt?1:3};class qs extends Be{constructor(e){super(e)}async _fetchDataTile(e){const t=this._serviceInfo.capabilities.query.supportsMaxRecordCountFactor,s=this._subscriptions.get(e.key.id),i=s.signal,a=e.getQuantizationParameters();let o=0;const n=async(c,h)=>{const u=this._queryInfo,d=this.createTileQuery(c,{maxRecordCountFactor:t?st.maxRecordCountFactor:void 0,returnExceededLimitFeatures:!1,quantizationParameters:a});o++;try{const g=await this._queue.push({tile:e,query:d,signal:i,depth:h});if(o--,Q(i),!g)return;if(u!==this._queryInfo)return void n(c,h);if(g.exceededTransferLimit&&h<st.maxDrillLevel){for(const p of c.createChildTiles())n(p,h+1);return}const l={id:e.id,addOrUpdate:g,end:o===0,type:"append"};s.add({query:d,message:l}),this._onMessage(l)}catch(g){Ie(g)||this._onMessage({id:e.id,addOrUpdate:null,end:!0,type:"append"})}};n(e,0)}}const Ms="__esri_stream_id__",rt="__esri_timestamp__",it=1e3;class Rs{constructor(e,t,s,i,a=128){this._trackIdToObservations=new Map,this._idCounter=0,this._lastPurge=performance.now(),this._addOrUpdated=new Map,this._removed=[],this._maxAge=0,this._timeInfo=s,this._purgeOptions=i,this.store=e,this.objectIdField=t,this.purgeInterval=a,this._useGeneratedIds=this.objectIdField===Ms}add(e){if(this._useGeneratedIds){const i=this._nextId();e.attributes[this.objectIdField]=i,e.objectId=i}else e.objectId=e.attributes[this.objectIdField];if(this._addOrUpdated.set(e.objectId,e),this._maxAge=Math.max(this._maxAge,e.attributes[this._timeInfo.startTimeField]),!this._timeInfo.trackIdField)return k(this._trackIdLessObservations)&&(this._trackIdLessObservations=new me(1e5)),void this._trackIdLessObservations.enqueue(e.objectId);const t=e.attributes[this._timeInfo.trackIdField];if(!this._trackIdToObservations.has(t)){const i=f(this._purgeOptions)&&this._purgeOptions.maxObservations!=null?this._purgeOptions.maxObservations:it,a=Lt(i,0,it);this._trackIdToObservations.set(t,new me(a))}const s=this._trackIdToObservations.get(t).enqueue(e.objectId);f(s)&&(this._addOrUpdated.has(s)?this._addOrUpdated.delete(s):this._removed.push(s))}checkForUpdates(){const e=this._getToAdd(),t=this._getToRemove(),s=performance.now();s-this._lastPurge>=this.purgeInterval&&(this._purge(s),this._lastPurge=s);const i=[];if(f(t))for(const a of t){const o=this.store.removeById(a);f(o)&&i.push(o)}if(f(e))for(const a of e)a.attributes[rt]=s,this.store.add(a);(e||i)&&this.store.update(e,i)}_getToAdd(){if(!this._addOrUpdated.size)return null;const e=new Array(this._addOrUpdated.size);let t=0;return this._addOrUpdated.forEach(s=>e[t++]=s),this._addOrUpdated.clear(),e}_getToRemove(){const e=this._removed;return this._removed.length?(this._removed=[],e):null}_nextId(){const e=this._idCounter;return this._idCounter=(this._idCounter+1)%4294967294+1,e}_purge(e){const t=this._purgeOptions;f(t)&&(this._purgeSomeByDisplayCount(t),this._purgeByAge(t),this._purgeByAgeReceived(e,t),this._purgeTracks())}_purgeSomeByDisplayCount(e){if(!e.displayCount)return;let t=this.store.size;if(t>e.displayCount){if(this._timeInfo.trackIdField){for(const s of this._trackIdToObservations.values())if(t>e.displayCount&&s.size){const i=ue(s.dequeue());this._removed.push(i),t--}}if(f(this._trackIdLessObservations)){let s=t-e.displayCount;for(;s-- >0;){const i=this._trackIdLessObservations.dequeue();f(i)&&this._removed.push(i)}}}}_purgeByAge(e){if(!e.age||!this._timeInfo?.startTimeField)return;const t=60*e.age*1e3,s=this._maxAge-t;this.store.forEach(i=>{i.attributes[this._timeInfo.startTimeField]<s&&this._removed.push(i.objectId)})}_purgeByAgeReceived(e,t){if(!t.ageReceived)return;const s=e-60*t.ageReceived*1e3;this.store.forEach(i=>{i.attributes[rt]<s&&this._removed.push(i.objectId)})}_purgeTracks(){this._trackIdToObservations.forEach((e,t)=>{e.size===0&&this._trackIdToObservations.delete(t)})}}let Oe=class extends Pe.EventedMixin(je){onFeature(r){this.emit("feature",r)}};Oe=$([de("esri.layers.graphics.sources.connections.StreamConnection")],Oe);const Es=Oe,H=re.getLogger("esri.layers.graphics.sources.connections.WebSocketConnection");var oe;(function(r){r[r.CONNECTING=0]="CONNECTING",r[r.OPEN=1]="OPEN",r[r.CLOSING=2]="CLOSING",r[r.CLOSED=3]="CLOSED"})(oe||(oe={}));let ne=class extends Es{constructor(r){super(),this.errorString=null;const{geometryType:e,spatialReference:t,sourceSpatialReference:s}=r;this._config=r,this._featureZScaler=Gt(e,s,t),this._open()}async _open(){await this._tryCreateWebSocket(),this.destroyed||await this._handshake()}destroy(){f(this._websocket)&&(this._websocket.onopen=null,this._websocket.onclose=null,this._websocket.onerror=null,this._websocket.onmessage=null,this._websocket.close()),this._websocket=null}get connectionStatus(){if(k(this._websocket))return"disconnected";switch(this._websocket.readyState){case oe.CONNECTING:case oe.OPEN:return"connected";case oe.CLOSING:case oe.CLOSED:return"disconnected"}}async _tryCreateWebSocket(r=this._config.source.path,e=1e3,t=0){try{if(this.destroyed)return;const s=lt(r,this._config.customParameters);this._websocket=await this._createWebSocket(s),this.notifyChange("connectionStatus")}catch(s){const i=e/1e3;return this._config.maxReconnectionAttempts&&t>=this._config.maxReconnectionAttempts?(H.error(new A("websocket-connection","Exceeded maxReconnectionAttempts attempts. No further attempts will be made")),void this.destroy()):(H.error(new A("websocket-connection",`Failed to connect. Attempting to reconnect in ${i}s`,s)),await Ne(e),this._tryCreateWebSocket(r,Math.min(1.5*e,1e3*this._config.maxReconnectionInterval),t+1))}}_createWebSocket(r){return new Promise((e,t)=>{const s=new WebSocket(r);s.onopen=()=>{if(s.onopen=null,this.destroyed)return s.onclose=null,void s.close();s.onclose=i=>this._onClose(i),s.onerror=i=>this._onError(i),s.onmessage=i=>this._onMessage(i),e(s)},s.onclose=i=>{s.onopen=s.onclose=null,t(i)}})}async _handshake(r=1e4){const e=this._websocket;if(k(e))return;const t=De(),s=e.onmessage,{filter:i,outFields:a,spatialReference:o}=this._config;return t.timeout(r),e.onmessage=n=>{let c=null;try{c=JSON.parse(n.data)}catch{}c&&typeof c=="object"||(H.error(new A("websocket-connection","Protocol violation. Handshake failed - malformed message",n.data)),t.reject(),this.destroy()),c.spatialReference?.wkid!==o?.wkid&&(H.error(new A("websocket-connection",`Protocol violation. Handshake failed - expected wkid of ${o.wkid}`,n.data)),t.reject(),this.destroy()),c.format!=="json"&&(H.error(new A("websocket-connection","Protocol violation. Handshake failed - format is not set",n.data)),t.reject(),this.destroy()),i&&c.filter!==i&&H.error(new A("websocket-connection","Tried to set filter, but server doesn't support it")),a&&c.outFields!==a&&H.error(new A("websocket-connection","Tried to set outFields, but server doesn't support it")),e.onmessage=s,t.resolve()},e.send(JSON.stringify({filter:i,outFields:a,format:"json",spatialReference:{wkid:o.wkid}})),t.promise}_onMessage(r){try{const e=JSON.parse(r.data);if(e.type!=="featureResult")throw new A("websocket-connection","Protocol violation - Expected to find message of type 'featureResult'",e);for(const t of e.features)f(this._featureZScaler)&&this._featureZScaler(t.geometry),this.onFeature(t)}catch(e){return H.error(new A("websocket-connection","Failed to parse message",e)),void this.destroy()}}_onError(r){const e="Encountered an error over WebSocket connection";this._set("errorString",e),H.error("websocket-connection",e)}_onClose(r){this._websocket=null,this.notifyChange("connectionStatus"),r.code!==1e3&&H.error("websocket-connection",`WebSocket closed unexpectedly with error code ${r.code}`),this.destroyed||this._open()}};$([B()],ne.prototype,"connectionStatus",null),$([B()],ne.prototype,"errorString",void 0),ne=$([de("esri.layers.graphics.sources.connections.WebSocketConnection")],ne);const Z=re.getLogger("esri.layers.graphics.sources.connections.GeoEventConnection"),As=1e4,Os={maxQueryDepth:5,maxRecordCountFactor:3};let Ue=class extends ne{constructor(r){super({...Os,...r})}async _open(){const r=await this._fetchServiceDefinition(this._config.source);r.timeInfo.trackIdField||Z.warn("GeoEvent service was configured without a TrackIdField. This may result in certain functionality being disabled. The purgeOptions.maxObservations property will have no effect.");const e=this._fetchWebSocketUrl(r.streamUrls,this._config.spatialReference);this._buddyServicesQuery||(this._buddyServicesQuery=this._queryBuddyServices()),await this._buddyServicesQuery,await this._tryCreateWebSocket(e);const{filter:t,outFields:s}=this._config;this.destroyed||this._setFilter(t,s)}_onMessage(r){let e;try{e=this._enrich(JSON.parse(r.data)),f(this._featureZScaler)&&this._featureZScaler(e.geometry)}catch(t){return void Z.error(new A("geoevent-connection","Failed to parse message",t))}this.onFeature(e)}async _fetchServiceDefinition(r){const e={f:"json",...this._config.customParameters},t=dt(r.path,{query:e,responseType:"json"}),s=(await t).data;return this._serviceDefinition=s,s}_fetchWebSocketUrl(r,e){const t=r[0],{urls:s,token:i}=t,a=this._inferWebSocketBaseUrl(s);return lt(`${a}/subscribe`,{outSR:""+e.wkid,token:i})}_inferWebSocketBaseUrl(r){if(r.length===1)return r[0];for(const e of r)if(e.includes("wss"))return e;return Z.error(new A("geoevent-connection","Unable to infer WebSocket url",r)),null}async _setFilter(r,e){const t=this._websocket;if(k(t)||k(r)&&k(e))return;const s=JSON.stringify({filter:this._serializeFilter(r,e)});let i=!1;const a=De(),o=()=>{i||(this.destroyed||this._websocket!==t||Z.error(new A("geoevent-connection","Server timed out when setting filter")),a.reject())},n=c=>{const h=JSON.parse(c.data);h.filter&&(h.error&&(Z.error(new A("geoevent-connection","Failed to set service filter",h.error)),this._set("errorString",`Could not set service filter - ${h.error}`),a.reject(h.error)),t.onmessage=this._onMessage.bind(this),i=!0,a.resolve())};return t.onmessage=n,t.send(s),setTimeout(o,As),a.promise}_serializeFilter(r,e){const t={};if(k(r)&&k(e))return t;if(f(r)&&r.geometry)try{const s=$t(r.geometry);if(s.type!=="extent")throw new A(`Expected extent but found type ${s.type}`);t.geometry=JSON.stringify(s.shiftCentralMeridian())}catch(s){Z.error(new A("geoevent-connection","Encountered an error when setting connection geometryDefinition",s))}return f(r)&&r.where&&r.where!=="1 = 1"&&(t.where=r.where),f(e)&&(t.outFields=e.join(",")),t}_enrich(r){if(!this._relatedFeatures)return r;const e=this._serviceDefinition.relatedFeatures.joinField,t=r.attributes[e];if(!this._relatedFeatures.has(t))return Z.warn("geoevent-connection","Feature join failed. Is the join field configured correctly?",r),r;const{attributes:s,geometry:i}=this._relatedFeatures.get(t);for(const a in s)r.attributes[a]=s[a];return i&&(r.geometry=i),r.geometry||r.centroid||Z.error(new A("geoevent-connection","Found malformed feature - no geometry found",r)),r}async _queryBuddyServices(){try{const{relatedFeatures:r,keepLatestArchive:e}=this._serviceDefinition,t=this._queryRelatedFeatures(r),s=this._queryArchive(e);await t;const i=await s;if(!i)return;for(const a of i.features)this.onFeature(this._enrich(a))}catch(r){Z.error(new A("geoevent-connection","Encountered an error when querying buddy services",{error:r}))}}async _queryRelatedFeatures(r){if(!r)return;const e=await this._queryBuddy(r.featuresUrl);this._addRelatedFeatures(e)}async _queryArchive(r){if(r)return this._queryBuddy(r.featuresUrl)}async _queryBuddy(r){const e=new(await Ae(()=>import("./main.efb50b2c.js").then(function(d){return d.nd}),["assets/main.efb50b2c.js","assets/main.908c9a86.css","assets/preload-helper.387dac8f.js"])).default({url:r}),{capabilities:t}=await e.load(),s=t.query.supportsMaxRecordCountFactor,i=t.query.supportsPagination,a=t.query.supportsCentroid,o=this._config.maxRecordCountFactor,n=e.capabilities.query.maxRecordCount,c=s?n*o:n,h=new ut;if(h.outFields=ye(this._config.outFields,["*"]),h.where=ye(Pt(this._config.filter,"where"),"1=1"),h.returnGeometry=!0,h.returnExceededLimitFeatures=!0,h.outSpatialReference=J.fromJSON(this._config.spatialReference),a&&(h.returnCentroid=!0),s&&(h.maxRecordCountFactor=o),i)return h.num=c,e.destroy(),this._queryPages(r,h);const u=await pe(r,h,this._config.sourceSpatialReference);return e.destroy(),u.data}async _queryPages(r,e,t=[],s=0){e.start=f(e.num)?s*e.num:null;const{data:i}=await pe(r,e,this._config.sourceSpatialReference);return i.exceededTransferLimit&&s<this._config.maxQueryDepth?(i.features.forEach(a=>t.push(a)),this._queryPages(r,e,t,s+1)):(t.forEach(a=>i.features.push(a)),i)}_addRelatedFeatures(r){const e=new Map,t=r.features,s=this._serviceDefinition.relatedFeatures.joinField;for(const i of t){const a=i.attributes[s];e.set(a,i)}this._relatedFeatures=e}};Ue=$([de("esri.layers.graphics.sources.connections.GeoEventConnection")],Ue);const Us=Ue;function Ls(r,e,t,s,i,a,o,n){const c=r.path.indexOf("wss://")===0||r.path.indexOf("ws://")===0,h={source:r,sourceSpatialReference:e,spatialReference:t,geometryType:s,filter:i,maxReconnectionAttempts:a,maxReconnectionInterval:o,customParameters:n};return c?new ne(h):new Us(h)}const Gs=2500;function $s(r,e){const t=r.weakClone();if(f(r.geometry)){const s=pt(e,r.geometry.coords[0]),i=ft(e,r.geometry.coords[1]);t.geometry=new W([],[s,i])}return t}function Ps(r){return r==="esriGeometryPoint"?$s:(e,t)=>{const s=e.weakClone(),i=new W,a=!1,o=!1,n=gt(i,e.geometry,a,o,r,t,!1,!1);return s.geometry=n,s}}function Ds(r){return r==="esriGeometryPoint"?e=>f(e.geometry)?{minX:e.geometry.coords[0],minY:e.geometry.coords[1],maxX:e.geometry.coords[0],maxY:e.geometry.coords[1]}:{minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}:e=>{let t=1/0,s=1/0,i=-1/0,a=-1/0;return f(e.geometry)&&e.geometry.forEachVertex((o,n)=>{t=Math.min(t,o),s=Math.min(s,n),i=Math.max(i,o),a=Math.max(a,n)}),{minX:t,minY:s,maxX:i,maxY:a}}}function js(r,e){const t=jt(9,Ds(e));return t.load(r),t}function Ns(r,e){return r.search({minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]})}class Bs{constructor(e,t){this.onUpdate=e,this._geometryType=t,this._objectIdToFeature=new Map}get _features(){const e=[];return this._objectIdToFeature.forEach(t=>e.push(t)),e}add(e){this._objectIdToFeature.set(e.objectId,e),this._index=null}get(e){return this._objectIdToFeature.has(e)?this._objectIdToFeature.get(e):null}forEach(e){this._objectIdToFeature.forEach(e)}search(e){return this._index||(this._index=js(this._features,this._geometryType)),Ns(this._index,e)}removeById(e){const t=this._objectIdToFeature.get(e);return t?(this._objectIdToFeature.delete(e),this._index=null,t):null}update(e,t){this.onUpdate(e,t)}get size(){return this._objectIdToFeature.size}}class zs extends wt{constructor(e){super(e),this.type="geoevent",this._dataReceiveEventEnabled=!1,this._level=0,this._updateInfo={websocket:0,client:0};const{outSR:t}=e,{geometryType:s,objectIdField:i,timeInfo:a,purgeOptions:o,source:n,spatialReference:c,serviceFilter:h,maxReconnectionAttempts:u,maxReconnectionInterval:d,updateInterval:g,enableDataReceived:l,customParameters:p}=e.serviceInfo,_=new Bs(this._onUpdate.bind(this),s),I=new Rs(_,i,a,o),y=Ls(n,c,t,s,h,u,d,p);this._store=_,this._manager=I,this._connection=y,this._quantize=Ps(s),this._dataReceiveEventEnabled=l,this._handles=[this._connection.on("feature",v=>this._onFeature(v)),Re(()=>y.connectionStatus,v=>this.events.emit("connectionStatus",v)),Re(()=>y.errorString,v=>this.events.emit("errorString",v))],this._initUpdateInterval=()=>{let v=performance.now();this._updateIntervalId=setInterval(()=>{const b=performance.now(),w=b-v;if(w>Gs){v=b;const S=Math.round(this._updateInfo.client/(w/1e3)),m=Math.round(this._updateInfo.websocket/(w/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.events.emit("updateRate",{client:S,websocket:m})}e.canAcceptRequest()&&this._manager.checkForUpdates()},g)},this._initUpdateInterval()}destroy(){super.destroy(),this._clearUpdateInterval(),this._handles.forEach(e=>e.remove()),this._connection.destroy()}_fetchDataTile(){}pauseStream(){this._clearUpdateInterval()}resumeStream(){this._initUpdateInterval()}enableEvent(e,t){e==="data-received"&&(this._dataReceiveEventEnabled=t)}get updating(){return!1}subscribe(e,t){super.subscribe(e,t);const s=this._subscriptions.get(e.id);this._level=e.level;const i=this._getTileFeatures(e);this._onMessage({type:"append",id:e.key.id,addOrUpdate:i,end:!0}),s.didSend=!0}unsubscribe(e){super.unsubscribe(e)}*readers(e){const t=this._subscriptions.get(e),{tile:s}=t;yield this._getTileFeatures(s);for(const i of t.requests.stream.entries)f(i)&&f(i.addOrUpdate)&&(yield i.addOrUpdate)}createTileQuery(e){throw new Error("Service does not support tile  queries")}async resend(){this._subscriptions.forEach(e=>{const{tile:t}=e,s={type:"append",id:t.id,addOrUpdate:this._getTileFeatures(t),end:!0};this._onMessage(s)})}_getTileFeatures(e){const t=this._store.search(e).map(s=>this._quantize(s,e.transform));return X.fromOptimizedFeatures(t,this._serviceInfo,e.transform)}_onFeature(e){this._updateInfo.websocket++;try{this._dataReceiveEventEnabled&&this.events.emit("feature",e);const t=Dt(e,this._serviceInfo.geometryType,!1,!1,this._serviceInfo.objectIdField);this._manager.add(t)}catch{}}_clearUpdateInterval(){clearInterval(this._updateIntervalId),this._updateIntervalId=0}_onUpdate(e,t){f(e)&&(this._updateInfo.client+=e.length),this._subscriptions.forEach((s,i)=>{s.didSend&&s.tile.level===this._level&&this._onMessage({type:"append",id:i,addOrUpdate:null,clear:!0,end:!1})}),this._subscriptions.forEach((s,i)=>{if(!s.didSend||s.tile.level!==this._level)return;const a=s.tile,o={type:"append",id:i,addOrUpdate:this._getTileFeatures(a),remove:[],end:!0,status:N.empty()};s.requests.stream.enqueue(o),this._onMessage(o)})}}const Qs=re.getLogger("esri.views.2d.layers.features.sources.FeatureSource");class Vs extends Be{constructor(e){super(e)}async _fetchDataTile(e){const i=this._subscriptions.get(e.key.id);let a=!1,o=0,n=0;const c=(d,g)=>{n--,Q(i);const l=e.id,p=d.reader,_=d.query;if(!p.exceededTransferLimit){if(a=!0,g!==0&&!p.hasFeatures){const v={id:l,addOrUpdate:p,end:n===0,type:"append"};return i.add({message:v,query:_}),void this._onMessage(v)}const y={id:l,addOrUpdate:p,end:n===0,type:"append"};return i.add({message:y,query:_}),void this._onMessage(y)}const I={id:l,addOrUpdate:p,end:a&&n===0,type:"append"};i.add({message:I,query:_}),this._onMessage(I)};let h=0,u=0;for(;!a&&u++<20;){let d;for(let g=0;g<h+1;g++){const l=o++;n++,d=this._fetchDataTilePage(e,l,i).then(p=>p&&c(p,l)).catch(p=>{a=!0,Ie(p)||(Qs.error(new A("mapview-query-error","Encountered error when fetching tile",{tile:e,error:p})),this._onMessage({id:e.id,addOrUpdate:null,end:a,type:"append"}))})}await d,Q(i),h=Math.min(h+2,6)}}async _fetchDataTilePage(e,t,s){Q(s);const i=this._queryInfo,a={start:this.pageSize*t,num:this.pageSize,returnExceededLimitFeatures:!0,quantizationParameters:e.getQuantizationParameters()};f(this.maxRecordCountFactor)&&(a.maxRecordCountFactor=this.maxRecordCountFactor);const o=this.createTileQuery(e,a);try{const n=s.signal,c=await this._queue.push({tile:e,query:o,signal:n,depth:t});return Q(s),c?i!==this._queryInfo?this._fetchDataTilePage(e,t,s):{reader:c,query:o}:null}catch(n){return Ee(n),null}}}const Xs=re.getLogger("esri.views.2d.layers.features.sources.SnapshotFeatureSource");function Ys(r,e,t){const s=r.getXHydrated(),i=r.getYHydrated(),a=e.getColumnForX(s),o=Math.floor(e.normalizeCol(a));return`${t}/${Math.floor(e.getRowForY(i))}/${o}`}function Ce(r,e){if(k(r))return null;const t=e.transform,s=r.getQuantizationTransform();if(k(s)){const[I,y]=t.scale,[v,b]=t.translate,w=-v/I,S=1/I,m=b/y,C=1/-y;return r.transform(w,m,S,C)}const[i,a]=s.scale,[o,n]=s.translate,[c,h]=t.scale,[u,d]=t.translate,g=i/c,l=(o-u)/c,p=a/h,_=(-n+d)/h;return r.transform(l,_,g,p)}class Ws extends Be{constructor(e){super(e),this.mode="snapshot",this._loading=!0,this._controller=new AbortController,this._downloadPromise=null,this._didSendEnd=!1,this._queries=new Array,this._invalidated=!1,this._hasAggregates=!1,this._random=new Nt(1e3),this._store=e.store,this._markedIdsBufId=this._store.storage.createBitset()}destroy(){super.destroy(),this._controller.abort()}get loading(){return this._loading}get _signal(){return this._controller.signal}update(e,t){super.update(e,t),this._hasAggregates=e.targets.aggregate}async resend(e=!1){if(await this._downloadPromise,this._invalidated||e){const s=Xe(this._schema.featureCount,"Expected featureCount to be defined");return this._invalidated=!1,this._subscriptions.forEach(i=>i.clear()),this._downloadPromise=this._download(s),void await this._downloadPromise}const t=this._queries.map(({query:s,reader:i})=>this._sendPatchQuery(s,i));await Promise.all(t),this._subscriptions.forEach(s=>{s.requests.done.forEach(i=>this._onMessage(i.message))})}async refresh(){await this.resend(!0)}async _sendPatchQuery(e,t){const s=f(e.outFields)?e.outFields:[],i=this._queryInfo.outFields,a=i.filter(h=>!s.includes(h));if(!a.length)return;const o=e.clone(),n=this._signal;o.returnGeometry=!1,o.returnCentroid=!1,o.outFields=a,e.outFields=i;const c=await this._queue.push({query:o,depth:0,signal:n});Q({signal:n}),t.joinAttributes(c)}async _fetchDataTile(e){if(!this._downloadPromise){const c=Xe(this._schema.featureCount,"Expected featureCount to be defined");this._downloadPromise=this._download(c)}const t=this._store.search(e),s=this._subscriptions.get(e.key.id),i=t.length-1;for(let c=0;c<i;c++){const h=Ce(t[c],e),u={type:"append",id:e.id,addOrUpdate:h,end:!1,status:N.empty()};s.add({query:null,message:u}),this._hasAggregates||await Ne(1),this._onMessage(u)}const a=Ce(i>=0?t[i]:null,e),o=this._didSendEnd,n={type:"append",id:e.id,addOrUpdate:a,end:o,status:N.empty()};s.add({query:null,message:n}),this._onMessage(n)}async _download(e){try{await this.whenInitialized();const t=this._store.storage.getBitset(this._markedIdsBufId),s=new Set;t.clear();const i=Math.ceil(e/this.pageSize),a=Array.from({length:i},(o,n)=>n).sort((o,n)=>this._random.getInt()-this._random.getInt()).map(o=>this._downloadPage(o,t,s));await Promise.all(a),this._store.sweepFeatures(t,this._store.storage),this._store.sweepFeatureSets(s)}catch(t){Xs.error("mapview-snapshot-source","Encountered and error when downloading feature snapshot",t)}this._sendEnd(),this._loading=!1}async _downloadPage(e,t,s){const i=this.pageSize,a={start:e*i,num:i,cacheHint:!0};f(this.maxRecordCountFactor)&&(a.maxRecordCountFactor=this.maxRecordCountFactor);const o=this.createQuery(a),n=this._signal,c=await this._queue.push({query:o,depth:e,signal:n});Q({signal:n}),this._queries.push({query:o,reader:c}),this._store.insert(c),s.add(c.instance);const h=c.getCursor();for(;h.next();)t.set(h.getDisplayId());this._send(c)}_send(e){if(!this._subscriptions.size)return;let t=null;const s=new Map,i=new Set,a=new Map;this._subscriptions.forEach(o=>{const n=o.tile;s.set(n.key.id,null),t=n.tileInfoView,i.add(n.level);const{row:c,col:h}=n.key,u=`${n.level}/${c}/${h}`,d=a.get(u)??[];d.push(o),a.set(u,d)});for(const o of i){const n=t.getLODInfoAt(o),c=e.getCursor();for(;c.next();){const h=Ys(c,n,o),u=c.getIndex();if(a.has(h))for(const d of a.get(h)){const g=d.tile.id;let l=s.get(g);k(l)&&(l=[],s.set(g,l)),l.push(u)}}}s.forEach((o,n)=>{if(f(o)){const c=this._subscriptions.get(n),h={type:"append",id:n,addOrUpdate:Ce(ts.from(e,o),c.tile),end:!1,status:N.empty()};c.add({query:null,message:h}),this._onMessage(h)}})}_sendEnd(){this._subscriptions.forEach(e=>{const t={type:"append",id:e.tile.id,addOrUpdate:null,end:!0,status:N.empty()};e.add({query:null,message:t}),this._onMessage(t)}),this._didSendEnd=!0}}function Hs(r,e,t,s,i,a){const o=Zs(r,e,t,s,i,a);switch(o.type){case"feature":switch(o.origin){case"hosted":case"local":return new Vs(o);case"snapshot":return new Ws(o);case"unknown":return new qs(o)}case"geoevent":return new zs(o)}}function Zs(r,e,t,s,i,a){switch(r.type){case"snapshot":return{type:"feature",origin:"snapshot",featureCount:ye(r.featureCount,0),serviceInfo:r,onMessage:s,outSR:e,tileInfoView:t,canAcceptRequest:i,store:a};case"stream":return{type:"geoevent",serviceInfo:r,onMessage:s,outSR:e,canAcceptRequest:i};case"memory":case"on-demand":return{type:"feature",serviceInfo:r,onMessage:s,outSR:e,origin:o(r.source),tileInfoView:t,canAcceptRequest:i}}function o(n){return Array.isArray(n)?"local":"path"in n&&Bt(n.path)?"hosted":"unknown"}}function Js(r,e){let t=-90,s=90,i=-180,a=180;for(let o=0;o<e;o++){const n=Math.ceil((o+1)/2),c=Math.floor((o+1)/2),h=1-o%2,u=30-(3*n+2*c),d=30-(2*n+3*c),g=3*h+2*(1-h),l=2*h+3*(1-h),p=3*h+7*(1-h)<<d,_=(7*h+3*(1-h)<<u&r.geohashX)>>u,I=(p&r.geohashY)>>d;for(let y=g-1;y>=0;y--){const v=(i+a)/2,b=_&1<<y?1:0;i=(1-b)*i+b*v,a=(1-b)*v+b*a}for(let y=l-1;y>=0;y--){const v=(t+s)/2,b=I&1<<y?1:0;t=(1-b)*t+b*v,s=(1-b)*v+b*s}}return[i,t,a,s]}function Le(r,e,t,s){s%2&&(s+=1);let i=0,a=0,o=-90,n=90,c=-180,h=180;for(let u=0;u<s/2;u++){for(let d=0;d<5;d++){const g=(c+h)/2,l=t>g?1:0;i|=l<<29-(d+5*u),c=(1-l)*c+l*g,h=(1-l)*g+l*h}for(let d=0;d<5;d++){const g=(o+n)/2,l=e>g?1:0;a|=l<<29-(d+5*u),o=(1-l)*o+l*g,n=(1-l)*g+l*n}}r.geohashX=i,r.geohashY=a}function be(r,e,t,s,i){i%2&&(i+=1);let a=0,o=0,n=-90,c=90,h=-180,u=180;for(let d=0;d<i/2;d++){for(let g=0;g<5;g++){const l=(h+u)/2,p=s>l?1:0;a|=p<<29-(g+5*d),h=(1-p)*h+p*l,u=(1-p)*l+p*u}for(let g=0;g<5;g++){const l=(n+c)/2,p=t>l?1:0;o|=p<<29-(g+5*d),n=(1-p)*n+p*l,c=(1-p)*l+p*c}}r[2*e]=a,r[2*e+1]=o}class St{constructor(e=[],t,s=8096){this.onRelease=i=>{},this._nodes=0,this._root=new ke(this,0,0,0),this._statisticFields=e,this._pool=s?new me(8096):null,this._serviceInfo=t}destroy(){this.clear()}_acquire(e,t,s){this._nodes++;let i=null;return f(this._pool)&&(i=this._pool.dequeue()),f(i)?i.realloc(e,t,s):i=new ke(this,e,t,s),i}_release(e){this.onRelease(e),this._nodes--,f(this._pool)&&this._pool.enqueue(e)}get count(){return this._root.count}get size(){return this._nodes}get poolSize(){return _t(this._pool,0,e=>e.size)}get depth(){let e=0;return this.forEach(t=>e=Math.max(e,t.depth)),e}dropLevels(e){this.forEach(t=>{if(t.depth>=e)for(let s=0;s<t.children.length;s++){const i=t.children[s];i&&this._release(i)}}),this.forEach(t=>{if(t.depth>=e)for(let s=0;s<t.children.length;s++)t.children[s]=null})}clear(){this.forEach(e=>this._release(e)),this._root=new ke(this,0,0,0)}insert(e,t,s=0){const i=X.fromOptimizedFeatures([e],this._serviceInfo).getCursor();i.next();const a=i.readGeometry();if(!a)return;const[o,n]=a.coords,c=e.geohashX,h=e.geohashY;this.insertCursor(i,e.displayId,o,n,c,h,t,s)}insertCursor(e,t,s,i,a,o,n,c=0){let h=this._root,u=0,d=0,g=0;for(;h!==null;){if(h.depth>=c&&(h.count+=1,h.xTotal+=s,h.yTotal+=i,h.xGeohashTotal+=a,h.yGeohashTotal+=o,h.referenceId=t,this._updateStatisticsCursor(e,h,1)),u>=n)return void h.add(t);const l=Math.ceil((u+1)/2),p=Math.floor((u+1)/2),_=1-u%2,I=30-(3*l+2*p),y=30-(2*l+3*p),v=(a&7*_+3*(1-_)<<I)>>I,b=(o&3*_+7*(1-_)<<y)>>y,w=v+b*(8*_+4*(1-_));d=d<<3*_+2*(1-_)|v,g=g<<2*_+3*(1-_)|b,h.children[w]==null&&(h.children[w]=this._acquire(d,g,u+1)),u+=1,h=h.children[w]}}remove(e,t){const s=X.fromOptimizedFeatures([e],this._serviceInfo).getCursor();s.next();const i=s.readGeometry();if(!i)return;const[a,o]=i.coords,n=e.geohashX,c=e.geohashY;this.removeCursor(s,a,o,n,c,t)}removeCursor(e,t,s,i,a,o){let n=this._root,c=0;for(;n!==null;){if(n.count-=1,n.xTotal-=t,n.yTotal-=s,n.xGeohashTotal-=i,n.yGeohashTotal-=a,this._updateStatisticsCursor(e,n,-1),c>=o)return void n.remove(e.getDisplayId());const h=Math.ceil((c+1)/2),u=Math.floor((c+1)/2),d=1-c%2,g=30-(3*h+2*u),l=30-(2*h+3*u),p=((i&7*d+3*(1-d)<<g)>>g)+((a&3*d+7*(1-d)<<l)>>l)*(8*d+4*(1-d)),_=n.children[p];_.count===1&&(this._release(_),n.children[p]=null),c+=1,n=_}}forEach(e){let t=this._root;for(;t!==null;){const s=this._linkChildren(t)||t.next;e(t),t=s}}find(e,t,s){return this._root.find(e,t,s,0,0,0)}findIf(e){let t=null;return this.forEach(s=>{e(s)&&(t=s)}),t}findAllIf(e){const t=[];return this.forEach(s=>{e(s)&&t.push(s)}),t}findSingleOccupancyNode(e,t,s,i,a){let o=this._root;for(;o!==null;){const n=o.depth,c=o.xNode,h=o.yNode,u=1-n%2,d=o.xGeohashTotal/o.count,g=o.yGeohashTotal/o.count;if(o.count===1&&e<d&&d<=s&&t<g&&g<=i)return o;if(n>=a){o=o.next;continue}const l=Math.ceil((n+1)/2),p=Math.floor((n+1)/2),_=30-(3*l+2*p),I=30-(2*l+3*p),y=~((1<<_)-1),v=~((1<<I)-1),b=(e&y)>>_,w=(t&v)>>I,S=(s&y)>>_,m=(i&v)>>I,C=c<<3*u+2*(1-u),M=h<<2*u+3*(1-u),x=C+8*u+4*(1-u),q=M+4*u+8*(1-u),F=Math.max(C,b),P=Math.max(M,w),G=Math.min(x,S),O=Math.min(q,m);let R=null,U=null;for(let L=P;L<=O;L++)for(let E=F;E<=G;E++){const T=E-C+(L-M)*(8*u+4*(1-u)),D=o.children[T];D&&(R||(R=D,R.next=o.next),U&&(U.next=D),U=D,D.next=o.next)}o=R||o.next}return null}getRegionDisplayIds(e,t,s,i,a){let o=this._root;const n=[];for(;o!==null;){const c=o.depth,h=o.xNode,u=o.yNode;if(c>=a){const U=o.xGeohashTotal/o.count,L=o.yGeohashTotal/o.count;e<=U&&U<=s&&t<=L&&L<=i&&o.displayIds.forEach(E=>n.push(E)),o=o.next;continue}const d=Math.ceil((c+1)/2),g=Math.floor((c+1)/2),l=1-c%2,p=30-(3*d+2*g),_=30-(2*d+3*g),I=~((1<<p)-1),y=~((1<<_)-1),v=(e&I)>>p,b=(t&y)>>_,w=(s&I)>>p,S=(i&y)>>_,m=h<<3*l+2*(1-l),C=u<<2*l+3*(1-l),M=m+8*l+4*(1-l),x=C+4*l+8*(1-l),q=Math.max(m,v),F=Math.max(C,b),P=Math.min(M,w),G=Math.min(x,S);let O=null,R=null;for(let U=F;U<=G;U++)for(let L=q;L<=P;L++){const E=L-m+(U-C)*(8*l+4*(1-l)),T=o.children[E];T&&(O||(O=T,O.next=o.next),R&&(R.next=T),R=T,T.next=o.next)}o=O||o.next}return n}getRegionStatistics(e,t,s,i,a){let o=this._root,n=0,c=0,h=0;const u={};let d=0;for(;o!==null;){const g=o.depth,l=o.xNode,p=o.yNode;if(g>=a){const D=o.xGeohashTotal/o.count,K=o.yGeohashTotal/o.count;e<D&&D<=s&&t<K&&K<=i&&(n+=o.count,c+=o.xTotal,h+=o.yTotal,o.count===1&&(d=o.referenceId),this._aggregateStatistics(u,o.statistics)),o=o.next;continue}const _=Math.ceil((g+1)/2),I=Math.floor((g+1)/2),y=1-g%2,v=30-(3*_+2*I),b=30-(2*_+3*I),w=~((1<<v)-1),S=~((1<<b)-1),m=(e&w)>>v,C=(t&S)>>b,M=(s&w)>>v,x=(i&S)>>b,q=l<<3*y+2*(1-y),F=p<<2*y+3*(1-y),P=q+8*y+4*(1-y),G=F+4*y+8*(1-y),O=Math.max(q,m),R=Math.max(F,C),U=Math.min(P,M),L=Math.min(G,x);let E=null,T=null;for(let D=R;D<=L;D++)for(let K=O;K<=U;K++){const xt=K-q+(D-F)*(8*y+4*(1-y)),z=o.children[xt];if(z){if(D!==R&&D!==L&&K!==O&&K!==U){const Qe=z.xGeohashTotal/z.count,Ve=z.yGeohashTotal/z.count;e<Qe&&Qe<=s&&t<Ve&&Ve<=i&&(n+=z.count,c+=z.xTotal,h+=z.yTotal,o.count===1&&(d=o.referenceId),this._aggregateStatistics(u,z.statistics));continue}E||(E=z,E.next=o.next),T&&(T.next=z),T=z,z.next=o.next}}o=E||o.next}return{count:n,attributes:this.normalizeStatistics(u,n),xTotal:c,yTotal:h,referenceId:d}}getBins(e,t,s,i,a){const o=[];let n=this._root;for(;n!==null;){const c=n.depth,h=n.xNode,u=n.yNode;if(c>=a){o.push(n),n=n.next;continue}const d=Math.ceil((c+1)/2),g=Math.floor((c+1)/2),l=1-c%2,p=30-(3*d+2*g),_=30-(2*d+3*g),I=~((1<<p)-1),y=~((1<<_)-1),v=(e&I)>>p,b=(t&y)>>_,w=(s&I)>>p,S=(i&y)>>_,m=h<<3*l+2*(1-l),C=u<<2*l+3*(1-l),M=m+8*l+4*(1-l),x=C+4*l+8*(1-l),q=Math.max(m,v),F=Math.max(C,b),P=Math.min(M,w),G=Math.min(x,S);let O=null,R=null;for(let U=F;U<=G;U++)for(let L=q;L<=P;L++){const E=L-m+(U-C)*(8*l+4*(1-l)),T=n.children[E];T&&(O||(O=T,O.next=n.next),R&&(R.next=T),R=T,T.next=n.next)}n=O||n.next}return o}_linkChildren(e){let t=null,s=null;for(let i=0;i<=e.children.length;i++){const a=e.children[i];a&&(t||(t=a,t.next=e.next),s&&(s.next=a),s=a,a.next=e.next)}return t}_updateStatisticsCursor(e,t,s){for(const i of this._statisticFields){const a=i.name,o=i.inField?e.readAttribute(i.inField):e.getComputedNumericAtIndex(i.inFieldIndex);switch(i.statisticType){case"norm":{t.statistics[a]||(t.statistics[a]={});const n=i.inNormalizationField,c=e.readAttribute(n),h=t.statistics[a].onStatisticField||0,u=t.statistics[a].onStatisticNormalizationField||0;o==null||isNaN(o)||c==null||c===0||isNaN(c)||(t.statistics[a].onStatisticField=h+s*o,t.statistics[a].onStatisticNormalizationField=u+s*c);break}case"sum":case"avg":{t.statistics[a]||(t.statistics[a]={value:0,nanCount:0});const n=t.statistics[a].value,c=t.statistics[a].nanCount;o==null||isNaN(o)?t.statistics[a].nanCount=c+s:t.statistics[a].value=n+s*o;break}case"avg_angle":{t.statistics[a]||(t.statistics[a]={x:0,y:0,nanCount:0});const n=t.statistics[a].x,c=t.statistics[a].y,h=t.statistics[a].nanCount,u=Math.PI/180;o==null||isNaN(o)?t.statistics[a].nanCount=h+s:(t.statistics[a].x=n+s*Math.cos(o*u),t.statistics[a].y=c+s*Math.sin(o*u));break}case"mode":{t.statistics[a]||(t.statistics[a]={});const n=t.statistics[a][o]||0;t.statistics[a][o]=n+s;break}}}}_aggregateStatistics(e,t){for(const s of this._statisticFields){const i=s.name;switch(s.statisticType){case"sum":case"avg":case"avg_angle":case"mode":case"norm":e[i]||(e[i]={});for(const a in t[i]){const o=e[i][a]||0;e[i][a]=o+t[i][a]}}}}normalizeStatistics(e,t){const s={};for(const i of this._statisticFields){const a=i.name;switch(i.statisticType){case"norm":{const o=e[a];if(t&&o.onStatisticNormalizationField==null)break;if(t&&o.onStatisticNormalizationField){s[a]=o.onStatisticField/o.onStatisticNormalizationField;break}s[a]=0;break}case"sum":{if(!t)break;const{value:o,nanCount:n}=e[a];if(!(t-n))break;s[a]=o;break}case"avg":{if(!t)break;const{value:o,nanCount:n}=e[a];if(!(t-n))break;s[a]=o/(t-n);break}case"avg_angle":{if(!t)break;const{x:o,y:n,nanCount:c}=e[a];if(!(t-c))break;const h=o/(t-c),u=n/(t-c),d=180/Math.PI,g=Math.atan2(u,h)*d;s[a]=g;break}case"mode":{const o=e[a];let n=0,c=null;for(const h in o){const u=o[h];u>n&&(n=u,c=h)}s[a]=c==="null"?null:c;break}}}return s}}class ke{constructor(e,t,s,i){this.count=0,this.xTotal=0,this.yTotal=0,this.statistics={},this.displayId=0,this.referenceId=0,this.displayIds=new Set,this.next=null,this.depth=0,this.xNode=0,this.yNode=0,this.xGeohashTotal=0,this.yGeohashTotal=0,this._tree=e,this.children=new Array(32);for(let a=0;a<this.children.length;a++)this.children[a]=null;this.xNode=t,this.yNode=s,this.depth=i}realloc(e,t,s){for(let i=0;i<this.children.length;i++)this.children[i]=null;return this.xNode=e,this.yNode=t,this.depth=s,this.next=null,this.xGeohashTotal=0,this.yGeohashTotal=0,this.displayId=0,this.referenceId=0,this.xTotal=0,this.yTotal=0,this.count=0,this.statistics={},this.displayIds.clear(),this}get id(){return`${this.xNode}.${this.yNode}`}add(e){this.displayIds.add(e)}remove(e){this.displayIds.delete(e)}getAttributes(){const e=this._tree.normalizeStatistics(this.statistics,this.count);return e.aggregateId=this.id,e.aggregateCount=this.count,e}getGeometry(e,t){const s=this.getLngLatBounds(),[i,a,o,n]=s,c=ce({rings:[[[i,a],[i,n],[o,n],[o,a],[i,a]]]},J.WGS84,e),h=yt(new W,c,!1,!1);return f(t)?gt(new W,h,!1,!1,"esriGeometryPolygon",t,!1,!1):h}getLngLatBounds(){const e=this.depth,t=Math.ceil(e/2),s=Math.floor(e/2),i=30-(3*t+2*s),a=30-(2*t+3*s),o=this.xNode<<i,n=this.yNode<<a;return Js({geohashX:o,geohashY:n},this.depth)}find(e,t,s,i,a,o){if(i>=s)return this;const n=1-i%2,c=3*n+2*(1-n),h=2*n+3*(1-n),u=30-a-c,d=30-o-h,g=((e&7*n+3*(1-n)<<u)>>u)+((t&3*n+7*(1-n)<<d)>>d)*(8*n+4*(1-n)),l=this.children[g];return l==null?null:l.find(e,t,s,i+1,a+c,o+h)}}const Te=re.getLogger("esri.view.2d.layers.features.support.BinStore"),at=12,Ks=64,er=5;function ot(r){return 57.29577951308232*r}class tr extends vt{constructor(e,t,s,i){super(e,s),this._geohashLevel=er,this._geohashBuf=[],this._serviceInfo=i,this.geometryInfo=e.geometryInfo,this._spatialReference=t,this._projectionSupportCheck=It(t,J.WGS84),this._bitsets.geohash=s.getBitset(s.createBitset()),this._bitsets.inserted=s.getBitset(s.createBitset())}destroy(){this._tree&&this._tree.destroy()}async updateSchema(e,t){const s=this._schema;try{await super.updateSchema(e,t),await this._projectionSupportCheck}catch{}const i=fe(s,t);t&&(!k(i)||e.source||e.storage.filters)?((_e(i,"params.fields")||_e(i,"params")||!this._tree||e.source)&&(this._tree&&this._tree.destroy(),this._tree=new St(this._statisticFields,this._serviceInfo),this._tree.onRelease=a=>a.displayId&&this._storage.releaseDisplayId(a.displayId),this._geohashLevel=this._schema.params.fixedBinLevel,this._rebuildTree(),j("esri-2d-update-debug")&&Te.info("Aggregate mesh needs update due to tree changing")),j("esri-2d-update-debug")&&Te.info("Aggregate mesh needs update due to tree changing"),e.targets[t.name]=!0,e.mesh=!1):s&&(e.mesh=!0)}clear(){this._rebuildTree()}sweepFeatures(e,t){this._bitsets.inserted.forEachSet(s=>{if(!e.has(s)){const i=t.lookupByDisplayIdUnsafe(s);this._remove(i)}})}sweepAggregates(e,t,s){}onTileData(e,t,s,i,a=!0){if(!this._schema||k(t.addOrUpdate))return t;const o=this._getTransforms(e,this._spatialReference);{const c=t.addOrUpdate.getCursor();for(;c.next();)this._update(c,i)}if(t.status.mesh||!a)return t;const n=new Array;this._getBinsForTile(n,e,o,s),t.addOrUpdate=X.fromOptimizedFeatures(n,{...this._serviceInfo,geometryType:"esriGeometryPolygon"}),t.addOrUpdate.attachStorage(s),t.clear=!0,t.end=!0;{const c=t.addOrUpdate.getCursor();for(;c.next();){const h=c.getDisplayId();this._bitsets.computed.unset(h),this.setComputedAttributes(s,c,h,e.scale)}}return t}forEach(e){this._tree.forEach(e)}onTileUpdate(e){}getAggregate(e){const t=as(e,!0),s=this._tree.findIf(i=>i.displayId===t);return he(s,i=>this._toAggregateGraphic(i))}getAggregates(){return this._tree.findAllIf(e=>e.depth===this._geohashLevel).map(this._toAggregateGraphic.bind(this))}getDisplayId(e){const t=this._tree.findIf(s=>s.id===e);return he(t,s=>s.displayId)}getFeatureDisplayIdsForAggregate(e){const t=this._tree.findIf(s=>s.id===e);return _t(t,[],s=>Array.from(s.displayIds))}getDisplayIdForReferenceId(e){const t=this._tree.findIf(s=>s.displayIds.size===1&&s.displayIds.has(e));return he(t,s=>s.displayId)}_toAggregateGraphic(e){const t=this._spatialReference;return{referenceId:null,objectId:e.id,displayId:e.displayId,attributes:e.getAttributes(),geometry:$e(e.getGeometry(t),"esriGeometryPolygon",!1,!1),centroid:null}}_rebuildTree(){this._bitsets.computed.clear(),this._bitsets.inserted.clear(),this._tree&&this._tree.clear()}_remove(e){const t=e.getDisplayId(),s=e.getXHydrated(),i=e.getYHydrated(),a=this._geohashBuf[2*t],o=this._geohashBuf[2*t+1];this._bitsets.inserted.has(t)&&(this._bitsets.inserted.unset(t),this._tree.removeCursor(e,s,i,a,o,this._geohashLevel))}_update(e,t){const s=e.getDisplayId(),i=this._bitsets.inserted,a=t.isVisible(s);if(a===i.has(s))return;if(!a)return void this._remove(e);const o=e.getXHydrated(),n=e.getYHydrated();if(!this._setGeohash(s,o,n))return;const c=this._geohashBuf[2*s],h=this._geohashBuf[2*s+1];this._tree.insertCursor(e,s,o,n,c,h,this._geohashLevel),i.set(s)}_setGeohash(e,t,s){if(this._bitsets.geohash.has(e))return!0;const i=this._geohashBuf;if(this._spatialReference.isWebMercator){const a=ot(t/te.radius),o=a-360*Math.floor((a+180)/360),n=ot(Math.PI/2-2*Math.atan(Math.exp(-s/te.radius)));be(i,e,n,o,at)}else{const a=ce({x:t,y:s},this._spatialReference,J.WGS84);if(!a)return!1;be(i,e,a.y,a.x,at)}return this._bitsets.geohash.set(e),!0}_getBinsForTile(e,t,s,i){try{const{xLL:a,yLL:o,xTR:n,yTR:c,level:h}=this._getGeohashBounds(t),u=this._tree.getBins(a,o,n,c,h);for(const d of u){d.displayId||(d.displayId=i.createDisplayId(!0));const g=d.getGeometry(this._spatialReference,s.tile),l=new Ge(g,d.getAttributes());l.objectId=d.id,l.displayId=d.displayId,e.push(l)}}catch{return void Te.error("Unable to get bins for tile",t.key.id)}}_getGeohash(e,t,s){const i={geohashX:0,geohashY:0};return Le(i,t,e,s),i}_getGeohashBounds(e){const t=this._getGeohashLevel(e.key.level),s=[e.extent.xmin,e.extent.ymin,e.extent.xmax,e.extent.ymax],i=zt.fromExtent(Qt.fromBounds(s,this._spatialReference)),a=ce(i,this._spatialReference,J.WGS84,{densificationStep:e.resolution*Ks}),o=yt(new W,a,!1,!1),n=o.coords.filter((_,I)=>!(I%2)),c=o.coords.filter((_,I)=>I%2),h=Math.min(...n),u=Math.min(...c),d=Math.max(...n),g=Math.max(...c),l=this._getGeohash(h,u,t),p=this._getGeohash(d,g,t);return{xLL:l.geohashX,yLL:l.geohashY,xTR:p.geohashX,yTR:p.geohashY,level:t}}_getGeohashLevel(e){return this._schema.params.fixedBinLevel}_getTransforms(e,t){const s={originPosition:"upperLeft",scale:[e.resolution,e.resolution],translate:[e.bounds[0],e.bounds[3]]},i=mt(t);if(!i)return{tile:s,left:null,right:null};const[a,o]=i.valid;return{tile:s,left:{...s,translate:[o,e.bounds[3]]},right:{...s,translate:[a-o+e.bounds[0],e.bounds[3]]}}}}const qe=12,nt=1;class ze extends Vt{constructor(e,t,s,i,a){super(new W([],[t,s]),i,null,e),this.geohashBoundsInfo=a}get count(){return this.attributes.cluster_count}static create(e,t,s,i,a,o,n,c){const h=new ze(t,s,i,o,n);return h.displayId=e.createDisplayId(!0),h.referenceId=c,h.tileLevel=a,h}update(e,t,s,i,a,o){return this.geometry.coords[0]=e,this.geometry.coords[1]=t,this.tileLevel=s,this.attributes=i,this.geohashBoundsInfo=a,this.referenceId=null,this.referenceId=o,this}toJSON(){return{objectId:this.objectId,referenceId:this.attributes.cluster_count===1?this.referenceId:null,attributes:{...this.attributes,clusterId:this.objectId},geometry:{x:this.geometry.coords[0],y:this.geometry.coords[1]}}}}function ae(r){return 57.29577951308232*r}class sr extends vt{constructor(e,t,s,i){super(e,s),this.events=new Pe,this._geohashLevel=0,this._tileLevel=0,this._aggregateValueRanges={},this._aggregateValueRangesChanged=!1,this._geohashBuf=[],this._clusters=new Map,this._tiles=new Map,this._serviceInfo=i,this.geometryInfo=e.geometryInfo,this._spatialReference=t,this._projectionSupportCheck=It(t,J.WGS84),this._bitsets.geohash=s.getBitset(s.createBitset()),this._bitsets.inserted=s.getBitset(s.createBitset())}destroy(){this._tree.destroy()}async updateSchema(e,t){const s=this._schema;try{await super.updateSchema(e,t),await this._projectionSupportCheck}catch{}const i=fe(s,t);t&&(!k(i)||e.source||e.storage.filters)?((_e(i,"params.fields")||!this._tree||e.source)&&(this._tree&&this._tree.destroy(),this._tree=new St(this._statisticFields,this._serviceInfo),this._rebuildTree(),j("esri-2d-update-debug")&&console.debug("Aggregate mesh needs update due to tree changing")),j("esri-2d-update-debug")&&console.debug("Applying Update - ClusterStore:",i),e.targets[t.name]=!0,e.mesh=!1,this._aggregateValueRanges={}):s&&(e.mesh=!0)}clear(){this._rebuildTree()}sweepFeatures(e,t){this._bitsets.inserted.forEachSet(s=>{if(!e.has(s)){const i=t.lookupByDisplayIdUnsafe(s);this._remove(i)}})}sweepAggregates(e,t,s){this._clusters.forEach((i,a)=>{i&&i.tileLevel!==s&&(e.releaseDisplayId(i.displayId),t.unsetAttributeData(i.displayId),this._clusters.delete(a))})}onTileData(e,t,s,i,a=!0){if(!this._schema||k(t.addOrUpdate))return t;const o=this._getTransforms(e,this._spatialReference);{const h=t.addOrUpdate.getCursor();for(;h.next();)this._update(h,i)}if(t.status.mesh||!a)return t;const n=new Array,c=this._schema.params.clusterRadius;this._getClustersForTile(n,e,c,s,o),t.addOrUpdate=X.fromOptimizedFeatures(n,this._serviceInfo),t.addOrUpdate.attachStorage(s),t.clear=!0,t.end=!0;{const h=t.addOrUpdate.getCursor();for(;h.next();){const u=h.getDisplayId();this._bitsets.computed.unset(u),this.setComputedAttributes(s,h,u,e.scale)}}return this._aggregateValueRangesChanged&&t.end&&(this.events.emit("valueRangesChanged",{valueRanges:this._aggregateValueRanges}),this._aggregateValueRangesChanged=!1),t}onTileUpdate({added:e,removed:t}){if(e.length){const i=e[0].level;this._tileLevel=i,this._setGeohashLevel(i)}if(!this._schema)return;const s=this._schema.params.clusterRadius;t.forEach(i=>{this._tiles.delete(i.key.id),this._markTileClustersForDeletion(i,s)})}getAggregate(e){for(const t of this._clusters.values())if((t?.displayId&He)==(e&He))return t.toJSON();return null}getAggregates(){const e=[];for(const t of this._clusters.values())t?.tileLevel===this._tileLevel&&e.push(t.toJSON());return e}getDisplayId(e){const t=this._clusters.get(e);return t?t.displayId:null}getFeatureDisplayIdsForAggregate(e){const t=this._clusters.get(e);if(!t)return[];const s=t.geohashBoundsInfo;return this._tree.getRegionDisplayIds(s.xLL,s.yLL,s.xTR,s.yTR,s.level)}getDisplayIdForReferenceId(e){for(const t of this._clusters.values())if(t?.referenceId===e)return t.displayId;return null}getAggregateValueRanges(){return this._aggregateValueRanges}forEach(e){for(const[t,s]of this._clusters)s&&e(s,t)}size(){let e=0;return this.forEach(t=>e++),e}_rebuildTree(){this._bitsets.computed.clear(),this._bitsets.inserted.clear(),this._tree&&this._tree.clear()}_remove(e){const t=e.getDisplayId(),s=e.getXHydrated(),i=e.getYHydrated(),a=this._geohashBuf[2*t],o=this._geohashBuf[2*t+1];this._bitsets.inserted.has(t)&&(this._bitsets.inserted.unset(t),this._tree.removeCursor(e,s,i,a,o,this._geohashLevel))}_update(e,t){const s=e.getDisplayId(),i=this._bitsets.inserted,a=t.isVisible(s);if(a===i.has(s))return;if(!a)return void this._remove(e);const o=e.getXHydrated(),n=e.getYHydrated();if(!this._setGeohash(s,o,n))return;const c=this._geohashBuf[2*s],h=this._geohashBuf[2*s+1];this._tree.insertCursor(e,s,o,n,c,h,this._geohashLevel),i.set(s)}_setGeohash(e,t,s){if(this._bitsets.geohash.has(e))return!0;const i=this._geohashBuf;if(this._spatialReference.isWebMercator){const a=ae(t/te.radius),o=a-360*Math.floor((a+180)/360),n=ae(Math.PI/2-2*Math.atan(Math.exp(-s/te.radius)));be(i,e,n,o,qe)}else{const a=ce({x:t,y:s},this._spatialReference,J.WGS84);if(!a)return!1;be(i,e,a.y,a.x,qe)}return this._bitsets.geohash.set(e),!0}_getClustersForTile(e,t,s,i,a,o=!0){const n=this._schema.params.clusterPixelBuffer,c=2*s,h=this._getGeohashLevel(t.key.level),u=Math.ceil(2**t.key.level*V/c),d=Math.ceil(n/c)+0,g=Math.ceil(V/c),{row:l,col:p}=t.key,_=p*V,I=l*V,y=Math.floor(_/c)-d,v=Math.floor(I/c)-d,b=y+g+2*d,w=v+g+2*d,S=t.tileInfoView.getLODInfoAt(t.key.level);for(let m=y;m<=b;m++)for(let C=v;C<=w;C++){let M=m;S.wrap&&(M=m<0?m+u:m%u);const x=S.wrap&&m<0,q=S.wrap&&m%u!==m,F=this._lookupCluster(i,S,t.key.level,M,C,h);if(f(F)){const P=he(a,G=>x?G.left:q?G.right:G.tile);if(o&&k(P)||!F.count)continue;if(f(P)&&o){const G=F.geometry.clone();let O=F.attributes;G.coords[0]=pt(P,G.coords[0]),G.coords[1]=ft(P,G.coords[1]),F.count===1&&f(F.referenceId)&&(O={...F.attributes,referenceId:F.referenceId});const R=new Ge(G,O);R.displayId=F.displayId,e.push(R)}}}}_getGeohashLevel(e){return Math.min(Math.ceil(e/2+2),qe)}_setGeohashLevel(e){const t=this._getGeohashLevel(e),s=(Math.floor(t/nt)+1)*nt-1;if(this._geohashLevel!==s)return this._geohashLevel=s,this._rebuildTree(),void this._bitsets.geohash.clear()}_getTransforms(e,t){const s={originPosition:"upperLeft",scale:[e.resolution,e.resolution],translate:[e.bounds[0],e.bounds[3]]},i=mt(t);if(!i)return{tile:s,left:null,right:null};const[a,o]=i.valid;return{tile:s,left:{...s,translate:[o,e.bounds[3]]},right:{...s,translate:[a-o+e.bounds[0],e.bounds[3]]}}}_getClusterId(e,t,s){return(15&e)<<28|(16383&t)<<14|16383&s}_markForDeletion(e,t,s){const i=this._getClusterId(e,t,s);this._clusters.delete(i)}_getClusterBounds(e,t,s){const i=this._schema.params.clusterRadius,a=2*i;let o=s%2?t*a:t*a-i;const n=s*a;let c=o+a;const h=n-a,u=2**e.level*V;e.wrap&&o<0&&(o=0),e.wrap&&c>u&&(c=u);const d=o/V,g=n/V,l=c/V,p=h/V;return[e.getXForColumn(d),e.getYForRow(g),e.getXForColumn(l),e.getYForRow(p)]}_lookupCluster(e,t,s,i,a,o){const n=this._getClusterId(s,i,a),c=this._clusters.get(n),[h,u,d,g]=this._getClusterBounds(t,i,a),l={x:h,y:u},p={x:d,y:g};let _=0,I=0,y=0,v=0;if(this._spatialReference.isWebMercator){{const T=ae(l.x/te.radius);_=T-360*Math.floor((T+180)/360),I=ae(Math.PI/2-2*Math.atan(Math.exp(-l.y/te.radius)))}{const T=ae(p.x/te.radius);y=T-360*Math.floor((T+180)/360),v=ae(Math.PI/2-2*Math.atan(Math.exp(-p.y/te.radius)))}}else{const T=ce(l,this._spatialReference,J.WGS84),D=ce(p,this._spatialReference,J.WGS84);if(!T||!D)return null;_=T.x,I=T.y,y=D.x,v=D.y}const b={geohashX:0,geohashY:0},w={geohashX:0,geohashY:0};Le(b,I,_,o),Le(w,v,y,o);const S=b.geohashX,m=b.geohashY,C=w.geohashX,M=w.geohashY,x={xLL:S,yLL:m,xTR:C,yTR:M,level:o},q=this._tree.getRegionStatistics(S,m,C,M,o),{count:F,xTotal:P,yTotal:G,referenceId:O}=q,R=F?P/F:0,U=F?G/F:0;if(F===0)return this._clusters.set(n,null),null;const L={cluster_count:F,...q.attributes},E=f(c)?c.update(R,U,s,L,x,O):ze.create(e,n,R,U,s,L,x,O);return F===0&&(E.geometry.coords[0]=(h+d)/2,E.geometry.coords[1]=(u+g)/2),this._clusters.set(n,E),this._updateAggregateValueRangeForCluster(E,E.tileLevel),E}_updateAggregateValueRangeForCluster(e,t){const s=this._aggregateValueRanges[t]||{minValue:1/0,maxValue:0},i=s.minValue,a=s.maxValue;s.minValue=Math.min(i,e.count),s.maxValue=Math.max(a,e.count),this._aggregateValueRanges[t]=s,i===s.minValue&&a===s.maxValue||(this._aggregateValueRangesChanged=!0)}_markTileClustersForDeletion(e,t){const s=2*t,i=Math.ceil(V/s),{row:a,col:o}=e.key,n=o*V,c=a*V,h=Math.floor(n/s),u=Math.floor(c/s);for(let d=h;d<h+i;d++)for(let g=u;g<u+i;g++)this._markForDeletion(e.key.level,d,g)}}const rr=5e3,ir="tileRenderer.featuresView.attributeView.initialize",ar="tileRenderer.featuresView.attributeView.requestUpdate",or="tileRenderer.featuresView.requestRender";function nr(r){return r.name==="worker:port-closed"}function ee(r){if(!Ie(r)&&!nr(r))throw r}function ht(r){return r.type==="feature"&&r.mode==="snapshot"}let Y=class extends je{constructor(){super(...arguments),this._storage=new rs,this._markedIdsBufId=this._storage.createBitset(),this._lastCleanup=performance.now(),this._cleanupNeeded=!1,this._invalidated=!1,this._tileToResolver=new Map,this._didEdit=!1,this._updateVersion=1,this.tileStore=null,this.config=null,this.processor=null,this.remoteClient=null,this.service=null}initialize(){this._initStores(),this._initSource(),this._updateQueue=new Me({concurrency:this._source.type==="geoevent"?1:4,process:(r,e)=>this._onTileMessage(r,{signal:e})}),this.handles.add([this.tileStore.on("update",this.onTileUpdate.bind(this)),Xt(()=>!this.updating,()=>this.onIdle())]),this._checkUpdating=setInterval(()=>this.notifyChange("updating"),300)}_initSource(){const r=this.tileStore.tileScheme,e=()=>this._updateQueue.length<50,t=(s,i)=>(this._invalidated=!0,this._patchTile(s,i));this._source=Hs(this.service,this.spatialReference,r,t,e,this.featureStore),this._proxyEvents()}_proxyEvents(){if(this._source.type==="geoevent"){const r=this._source.events;this.handles.add([r.on("connectionStatus",e=>this.remoteClient.invoke("setProperty",{propertyName:"connectionStatus",value:e}).catch(ee)),r.on("errorString",e=>this.remoteClient.invoke("setProperty",{propertyName:"errorString",value:e}).catch(ee)),r.on("feature",e=>this.remoteClient.invoke("emitEvent",{name:"data-received",event:{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry}}).catch(ee)),r.on("updateRate",e=>this.remoteClient.invoke("emitEvent",{name:"update-rate",event:{...e}}).catch(ee))])}}_initAttributeStore(r){this.attributeStore?this.attributeStore.invalidateResources():this.attributeStore=new is({type:"remote",initialize:(e,t)=>ge(this.remoteClient.invoke(ir,e,{signal:t}).catch(ee)),update:(e,t)=>ge(this.remoteClient.invoke(ar,e,{signal:t}).catch(ee)),render:e=>ge(this.remoteClient.invoke(or,void 0,{signal:e}).catch(ee))},r,()=>this.notifyChange("updating"))}_initStores(){const r=this.service.type==="snapshot"?"snapshot":"on-demand",e={geometryInfo:{geometryType:this.service.geometryType,hasM:!1,hasZ:!1},spatialReference:this.spatialReference,fieldsIndex:this.fieldsIndex,fields:this.service.fields};this.featureStore=new ss(e,this._storage,r)}_initQueryEngine(r){const e=this;this.queryEngine?.destroy(),this.queryEngine=new es({definitionExpression:r.schema.source.definitionExpression,fields:this.service.fields,geometryType:this.service.geometryType,objectIdField:this.service.objectIdField,hasM:!1,hasZ:!1,spatialReference:this.spatialReference.toJSON(),cacheSpatialQueries:!0,featureStore:this.featureStore,aggregateAdapter:{getFeatureObjectIds(t){return k(e.aggregateStore)?[]:e.aggregateStore.getFeatureDisplayIdsForAggregate(t).map(s=>e.getObjectId(s))}},timeInfo:this.service.timeInfo})}destroy(){this._updateQueue.destroy(),this._source.destroy(),this.queryEngine.destroy(),this.attributeStore&&this.attributeStore.destroy();for(const r of this.tileStore.tiles)this._source.unsubscribe(r);clearInterval(this._checkUpdating)}get fieldsIndex(){return new Yt(this.service.fields)}get spatialReference(){return this.tileStore.tileScheme.spatialReference}get updating(){return this.isUpdating()}isUpdating(){const r=this._source.updating,e=!!this._updateQueue.length,t=!this.attributeStore||this.attributeStore.isUpdating(),s=r||e||t;return j("esri-2d-log-updating")&&console.log(`Updating FeatureController2D: ${s}
  -> updatingSource ${r}
  -> updateQueue ${e}
  -> updatingAttributeStore ${t}
`),s}enableEvent(r){this._source.enableEvent(r.name,r.value)}pause(){this._updateQueue.pause(),this._updateQueue.clear()}resume(){this._updateQueue.resume()}pauseStream(){this._source.type==="geoevent"&&this._source.pauseStream()}resumeStream(){this._source.type==="geoevent"&&this._source.resumeStream()}_initAggregateStore(r){const e={geometryInfo:{geometryType:this.service.geometryType,hasM:!1,hasZ:!1},spatialReference:this.spatialReference,fieldsIndex:this.fieldsIndex,fields:this.service.fields},t=r.schema.targets?.aggregate?.type;if(he(this.config,i=>i.schema.targets?.aggregate?.type)!==t&&(f(this.aggregateStore)&&(this.handles.remove("valueRangesChanged"),this.aggregateStore.destroy(),this.aggregateStore=null),t)){switch(t){case"cluster":this.aggregateStore=new sr(e,this.spatialReference,this._storage,this.service),this.handles.add(this.aggregateStore.events.on("valueRangesChanged",i=>{this.remoteClient.invoke("emitEvent",{name:"valueRangesChanged",event:{valueRanges:i.valueRanges}}).catch(ee)}),"valueRangesChanged");break;case"bin":this.aggregateStore=new tr(e,this.spatialReference,this._storage,this.service)}this.aggregateStore.onTileUpdate({added:this.tileStore.tiles,removed:[]})}}async update(r,e){this._updateVersion++,this._initQueryEngine(e),this._initAttributeStore(e),this.pause(),await Promise.all([this._source.update(r,e.schema.source),this.featureStore.updateSchema(r,e.schema.targets.feature),this.attributeStore.update(r,e),this.attributeStore.updateFilters(r,e,this)]),this._initAggregateStore(e),f(this.aggregateStore)&&await this.aggregateStore.updateSchema(r,e.schema.targets.aggregate),j("esri-2d-update-debug")&&r.describe(),this._set("config",e)}async applyUpdate(r){r.version=this._updateVersion,j("esri-2d-update-debug")&&console.debug(`Applying update ${r.version}`),r.mesh&&this.clearTiles(),this._updateQueue.resume(),await this._source.applyUpdate(r),this.notifyChange("updating"),await le(()=>!this.updating),f(this.aggregateStore)&&(await Ne(10),await le(()=>!this.updating))}async onEdits({edits:r}){j("esri-2d-update-debug")&&console.debug("Applying Edit:",r),this._didEdit=!0;try{const e=r.removed.map(s=>s.objectId&&s.objectId!==-1?s.objectId:this._lookupObjectIdByGlobalId(s.globalId)),t=r.addOrModified.map(({objectId:s})=>s);this.featureStore.invalidate(),await this._source.edit(t,e),this.clearTiles(),this.notifyChange("updating"),f(this.aggregateStore)&&this.aggregateStore.clear(),await this._source.resend(),await le(()=>!this.updating)}catch{}}async refresh(r){if(!r){const e=N.empty();return e.storage.filters=!0,this.applyUpdate(e)}this.featureStore.invalidate(),this.clearTiles(),this._source.refresh(this._updateVersion),this._cleanupNeeded=!0,this.notifyChange("updating"),await le(()=>!this.updating)}clearTiles(){for(const r of this.tileStore.tiles)this.processor.onTileClear(r)}onTileUpdate(r){f(this.aggregateStore)&&this.aggregateStore.onTileUpdate(r);for(const e of r.added)this._source.subscribe(e,this._updateVersion),this._level=e.level;for(const e of r.removed)this._source.unsubscribe(e),this._cleanupNeeded=!0,this._tileToResolver.has(e.id)&&(this._tileToResolver.get(e.id).resolve(),this._tileToResolver.delete(e.id));this.notifyChange("updating")}async onIdle(){this._invalidated&&(this._invalidated=!1,(f(this.aggregateStore)||this.processor.type==="heatmap")&&await this._repushCurrentLevelTiles()),this._markAndSweep()}async querySummaryStatistics({query:r,params:e}){return this.queryEngine.executeQueryForSummaryStatistics(r,e)}async queryUniqueValues({query:r,params:e}){return this.queryEngine.executeQueryForUniqueValues(r,e)}async queryClassBreaks({query:r,params:e}){return this.queryEngine.executeQueryForClassBreaks(r,e)}async queryHistogram({query:r,params:e}){return this.queryEngine.executeQueryForHistogram(r,e)}queryExtent(r){return this.queryEngine.executeQueryForExtent(r)}queryFeatures(r){return this.queryEngine.executeQuery(r)}async queryVisibleFeatures(r){const e=await this.queryEngine.executeQuery(r),t=e.objectIdFieldName;return e.features=e.features.filter(s=>{const i=s.attributes[t],a=this.getDisplayId(i);return he(a,o=>this.attributeStore.isVisible(o))}),e}queryFeatureCount(r){return this.queryEngine.executeQueryForCount(r)}queryLatestObservations(r){return this.queryEngine.executeQueryForLatestObservations(r)}queryObjectIds(r){return this.queryEngine.executeQueryForIds(r)}async queryStatistics(){return this.featureStore.storeStatistics}getObjectId(r){return this.featureStore.lookupObjectId(r,this._storage)}getDisplayId(r){if(f(this.aggregateStore)){const e=this.aggregateStore.getDisplayId(r);if(k(e)){const t=this.featureStore.lookupDisplayId(r);return this.aggregateStore.getDisplayIdForReferenceId(t)}return e}return this.featureStore.lookupDisplayId(r)}getFeatures(r){const e=[],t=[];for(const s of r){const i=f(this.aggregateStore)?this.getAggregate(s):null;if(f(i))if(f(i.referenceId)){const a=this.getFeature(i.referenceId);f(a)&&e.push(a)}else t.push(i);else{const a=this.getFeature(s);f(a)&&e.push(a)}}return{features:e,aggregates:t}}getFeature(r){const e=this.featureStore.lookupFeatureByDisplayId(r,this._storage);if(k(e))return null;const t=e.readHydratedGeometry(),s=$e(t,e.geometryType,e.hasZ,e.hasM);return{attributes:e.readAttributes(),geometry:s}}getAggregate(r){return k(this.aggregateStore)?null:this.aggregateStore.getAggregate(r)}getAggregates(){return k(this.aggregateStore)?[]:this.aggregateStore.getAggregates()}async setHighlight(r){const e=Wt(r.map(t=>this.getDisplayId(t)));return this.attributeStore.setHighlight(r,e)}_lookupObjectIdByGlobalId(r){const e=this.service.globalIdField;if(k(e))throw new Error("Expected globalIdField to be defined");let t=null;if(this.featureStore.forEach(s=>{r===s.readAttribute(e)&&(t=s.getObjectId())}),k(t))throw new Error(`Expected to find a feature with globalId ${r}`);return t}async _repushCurrentLevelTiles(){const r=this.tileStore.tiles.filter(e=>e.level===this._level).map(async e=>this._patchTile({type:"append",id:e.key.id,addOrUpdate:X.fromOptimizedFeatures([],this.service),remove:[],end:!0,status:N.empty()}));await Promise.all(r)}_maybeForceCleanup(){performance.now()-this._lastCleanup>rr&&this._markAndSweep()}_patchTile(r,e){const t=this._updateQueue.push(r,e).then(()=>{this.notifyChange("updating")}).catch(s=>{this.notifyChange("updating")});return this.notifyChange("updating"),t}async _onTileMessage(r,e){Q(e);const t=this.tileStore.get(r.id);if(!t)return;if(r.clear)return this.processor.onTileClear(t);const s=r.status;this._cleanupNeeded=!0;const i=[];for(const a of r.remove){const o=this.featureStore.lookupDisplayId(a);o&&i.push(o)}r.remove=i;try{if(k(r.addOrUpdate))return void this.processor.onTileMessage(t,{...r,addOrUpdate:null},f(this.aggregateStore),e).catch(Ee);if(r.addOrUpdate.setArcadeSpatialReference(this.spatialReference),this.featureStore.hasInstance(r.addOrUpdate.instance)&&s.targets.feature||(s.targets.feature=!0,this.featureStore.onTileData(t,r)),(!s.storage.data||!s.storage.filters)&&(s.storage.data=!0,s.storage.filters=!0,this.attributeStore.onTileData(t,r),this._source.type==="geoevent"||this._didEdit?(await this.attributeStore.sendUpdates(),Q(e)):this.attributeStore.sendUpdates()),f(this.aggregateStore)&&!s.targets.aggregate){s.targets.aggregate=!0;const a=ht(this._source)&&this._source.loading,o=!ht(this._source)||a||r.end;if(this.aggregateStore.onTileData(t,r,this._storage,this.attributeStore,o),!o)return;s.mesh||(this.attributeStore.onTileData(t,r),await this.attributeStore.sendUpdates())}s.mesh||(s.mesh=!0,await this.processor.onTileMessage(t,r,f(this.aggregateStore),e),Q(e)),this._maybeForceCleanup()}catch(a){Ee(a)}}_mark(r,e,t){const s=(4294901760&this._storage.getInstanceId(r))>>>16;r&&(e.add(s),t.set(r))}_markAndSweep(){if(this._lastCleanup=performance.now(),!(!(this._source.type==="feature"&&this._source.mode==="snapshot")&&(this._source.type==="geoevent"||this._cleanupNeeded)))return;this._cleanupNeeded=!1;const r=this._storage.getBitset(this._markedIdsBufId),e=new Set;r.clear();for(const t of this.tileStore.tiles)for(const s of this._source.readers(t.id)){const i=s.getCursor();for(;i.next();){let a=i.getDisplayId();if(!a){const o=i.getObjectId();a=this.featureStore.lookupDisplayId(o)}this._mark(a,e,r)}}this.processor.type==="symbol"&&this.processor.forEachBufferId(t=>{this._mark(t,e,r)}),this._updateQueue.forEach(t=>{for(const s of t.remove){const i=this.featureStore.lookupDisplayId(s);this._mark(i,e,r)}}),f(this.aggregateStore)&&(this.aggregateStore.sweepFeatures(r,this.featureStore),"sweepAggregates"in this.aggregateStore&&this.aggregateStore.sweepAggregates(this._storage,this.attributeStore,this._level)),this.featureStore.sweepFeatures(r,this._storage,this.attributeStore),this.featureStore.sweepFeatureSets(e)}};$([B({constructOnly:!0})],Y.prototype,"tileStore",void 0),$([B()],Y.prototype,"config",void 0),$([B({readOnly:!0})],Y.prototype,"fieldsIndex",null),$([B()],Y.prototype,"processor",void 0),$([B({constructOnly:!0})],Y.prototype,"remoteClient",void 0),$([B({constructOnly:!0})],Y.prototype,"service",void 0),$([B()],Y.prototype,"spatialReference",null),$([B()],Y.prototype,"updating",null),Y=$([de("esri.views.2d.layers.features.controllers.FeatureController2D")],Y);const hr=Y;let se=class extends je{constructor(){super(...arguments),this.controller=null,this.processor=null,this.remoteClient=null,this.tileStore=null,this.service=null,this.viewState=null,this._paused=!1,this._pendingTileUpdates=[]}initialize(){this.handles.add(Re(()=>this.updating,r=>{this.remoteClient.invoke("setUpdating",r).catch(e=>{})}))}destroy(){this.stop(),this.controller?.destroy(),this.processor?.destroy(),this.controller=this.processor=this.tileStore=this.remoteClient=null}get updating(){return!this.controller||this.controller.updating}stop(){this._paused=!0,Array.isArray(this.service?.source)&&(this.service.source.forEach(r=>r.close()),this.service.source.length=0),this.tileStore?.updateTiles({added:[],removed:this.tileStore.tiles.map(r=>r.id)}),this.tileStore?.destroy(),this.tileStore=null,this._pendingTileUpdates.length=0}async startup({service:r,config:e,tileInfo:t,tiles:s}){if(this._paused=!0,Array.isArray(this.service?.source)&&(this.service.source.forEach(i=>i.close()),this.service.source.length=0),this.service=r,!this.tileStore||!Ht(this.tileStore.tileScheme.spatialReference,t.spatialReference)){const i=new Zt(Jt.fromJSON(t));s.added.length=s.removed.length=0,this.tileStore?.updateTiles({added:[],removed:this.tileStore.tiles.map(a=>a.id)}),this.tileStore?.destroy(),this.tileStore=new Kt(i),this._pendingTileUpdates.length=0}for(await this._createProcessorAndController(e),await this.update({config:e}),this.controller.resume(),this.tileStore.clear(),this.tileStore.updateTiles(s),this._paused=!1;this._pendingTileUpdates.length;)this.tileStore.updateTiles(this._pendingTileUpdates.pop())}async updateTiles(r){this._paused?this._pendingTileUpdates.push(r):this.tileStore.updateTiles(r)}async update({config:r}){const e=N.empty();return await Promise.all([this.processor.update(e,r),this.controller.update(e,r)]),e.toJSON()}async applyUpdate(r){return this.controller.applyUpdate(N.create(r))}async _createProcessorAndController(r){await Promise.all([this._handleControllerConfig(r),this._handleProcessorConfig(r)]),this.controller.processor=this.processor}async _handleControllerConfig(r){return this._createController(this.service,r)}async _handleProcessorConfig(r){return this._createProcessor(this.service,r)}async _createController(r,e){this.controller&&this.controller.destroy();const{tileStore:t,remoteClient:s}=this,i=new hr({service:r,tileStore:t,remoteClient:s});return this.controller=i,i}async _createProcessor(r,e){const t=e.schema.processors[0].type,s=(await os(t)).default,{remoteClient:i,tileStore:a}=this,o=new s({service:r,config:e,tileStore:a,remoteClient:i});return this.processor&&this.processor.destroy(),this.processor=o,o}};$([B()],se.prototype,"controller",void 0),$([B()],se.prototype,"processor",void 0),$([B()],se.prototype,"updating",null),$([B()],se.prototype,"viewState",void 0),se=$([de("esri.views.2d.layers.features.Pipeline")],se);const Ur=se;export{Ur as default};
