import{b as l,s as p}from"./main.efb50b2c.js";import{a as f}from"./lazyLayerLoader.e0a392f3.js";import{f as L,I as u,m as d,n as s}from"./layersLoader.c832ef21.js";import{s as y}from"./portalItemUtils.aa871d92.js";import"./preload-helper.387dac8f.js";import"./jsonContext.4a2dd7f6.js";function k(e){return!e.portalItem||e.portalItem instanceof l||(e={...e,portalItem:new l(e.portalItem)}),N(e.portalItem).then(r=>{const t={portalItem:e.portalItem,...r.properties};return new r.constructor(t)})}function N(e){return e.load().then(I).then(S)}function I(e){switch(e.type){case"Map Service":return h(e);case"Feature Service":return g(e);case"Feature Collection":return T(e);case"Scene Service":return w(e);case"Image Service":return M(e);case"Stream Service":return v();case"Vector Tile Service":return P();case"KML":return C();case"WFS":return F();case"WMTS":return j();case"WMS":return $();case"Feed":return b();default:return Promise.reject(new p("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type}))}}function S(e){return(0,f[e.className])().then(r=>({constructor:r,properties:e.properties}))}function h(e){return G(e).then(r=>r?{className:"TileLayer"}:{className:"MapImageLayer"})}function g(e){return m(e).then(r=>{if(typeof r=="object"){const t={};return r.id!=null&&(t.layerId=r.id),{className:"FeatureLayer",properties:t}}return{className:"GroupLayer"}})}function w(e){return m(e).then(r=>{if(typeof r=="object"){const t={};let c;if(r.id!=null?(t.layerId=r.id,c=`${e.url}/layers/${r.id}`):c=e.url,Array.isArray(e.typeKeywords)&&e.typeKeywords.length>0){const a={IntegratedMesh:"IntegratedMeshLayer","3DObject":"SceneLayer",Point:"SceneLayer",PointCloud:"PointCloudLayer",Building:"BuildingSceneLayer"};for(const n of Object.keys(a))if(e.typeKeywords.includes(n))return{className:a[n]}}return s(c).then(a=>{let n="SceneLayer";const i={Point:"SceneLayer","3DObject":"SceneLayer",IntegratedMesh:"IntegratedMeshLayer",PointCloud:"PointCloudLayer",Building:"BuildingSceneLayer"};return a&&a.layerType&&i[a.layerType]&&(n=i[a.layerType]),{className:n,properties:t}})}return r===!1?s(e.url).then(t=>t?.layerType==="Voxel"?{className:"VoxelLayer"}:{className:"GroupLayer"}):{className:"GroupLayer"}})}async function T(e){if(await e.load(),y(e,"Map Notes"))return{className:"MapNotesLayer"};if(y(e,"Route Layer"))return{className:"RouteLayer"};const r=await e.fetchData();return u(r)===1?{className:"FeatureLayer"}:{className:"GroupLayer"}}async function M(e){await e.load();const r=e.typeKeywords?.map(a=>a.toLowerCase())??[];if(r.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(r.includes("tiled imagery"))return{className:"ImageryTileLayer"};const t=(await e.fetchData())?.layerType;return t==="ArcGISTiledImageServiceLayer"?{className:"ImageryTileLayer"}:t==="ArcGISImageServiceLayer"?{className:"ImageryLayer"}:(await s(e.url)).cacheType?.toLowerCase()==="map"?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}function v(){return{className:"StreamLayer"}}function P(){return{className:"VectorTileLayer"}}function C(){return{className:"KMLLayer"}}function F(){return{className:"WFSLayer"}}function $(){return{className:"WMSLayer"}}function j(){return{className:"WMTSLayer"}}function b(){return{className:"StreamLayer"}}function G(e){return s(e.url).then(r=>r.tileInfo)}function m(e){return!e.url||e.url.match(/\/\d+$/)?Promise.resolve({}):e.load().then(()=>e.fetchData()).then(async r=>e.type==="Feature Service"?o(r=await L(r,e.url)):u(r)>0?o(r):s(e.url).then(o))}function o(e){return u(e)===1&&{id:d(e)}}export{k as fromItem,I as selectLayerClassPath};
