import{gR as j,gA as A,g6 as S,gL as F,g7 as E,g9 as l,gf as u,gc as h,gz as H,gg as T,gh as m,gB as R,gm as f,go as C,gp as x,gv as z,gj as X,gO as Y,g8 as _,ga as N,gb as k,gr as P,ge as L}from"./main.efb50b2c.js";const J={A:10,B:12,C:11,E:13,G:24,H:24,J:24,K:35,L:35,M:35,N:35,P:35,R:46,S:47,T:48,V:59,X:[62,61],Y:60},V={en:{},fr:{}};class W{list={};listFetched=!1;constructor(e,s){j.get(s).then(o=>{o.data.definitions.forEach(r=>V[e][r.code]=r.description),Object.keys(V[e]).forEach(r=>{this.list[r]=V[e][r]}),this.listFetched=!0})}fsaToProvinces(e){const s={};let o=J[e.substring(0,1).toUpperCase()];return typeof o=="number"&&(o=[o]),o.forEach(r=>{s[r]=this.list[r]}),s}}function Z(t,e){return new W(t,e)}const $={en:{FSA:"Forward Sortation Area",NTS:"National Topographic System",COORD:"Latitude/Longitude",SCALE:"Scale"},fr:{FSA:"R\xE9gion De Tri D'Acheminement",NTS:"Syst\xE8me National De R\xE9f\xE9rence Cartographique",COORD:"Latitude/Longitude",SCALE:"\xC9chelle"}};class K{allTypes={};validTypes={};filterComplete=!1;typesFetched=!1;constructor(e,s){j.get(s).then(o=>{o.data.definitions.forEach(r=>{$[e][r.code]=r.term.split(`${r.code}-`)[1]}),Object.keys($[e]).forEach(r=>{this.allTypes[r]=$[e][r],this.validTypes[r]=$[e][r]}),this.typesFetched=!0})}filterValidTypes(e){if(this.filterComplete)return this.validTypes;if(e=typeof e=="string"?[e]:e,e&&e.length>0)for(const s of e)delete this.validTypes[s];return this.filterComplete=!0,this.validTypes}}function q(t,e){return new K(t,e)}function ee(t,e){const s=/^[-+]?([1-8]?\d(\.\d+)?|90(\.0+)?)(\s*[,|;\s]\s*)[-+]?(180(\.0+)?|((1[0-7]\d)|([1-9]?\d))(\.\d+)?)[*]$/,o=/^\d{2,3}[A-P]/,r=/^[ABCEGHJKLMNPRSTVXY]\d[A-Z]/;if(s.test(e)){const n=e.slice(0,-1);return new te(t,n)}else{if(r.test(e))return new se(t,e);if(o.test(e))return new oe(t,e.substring(0,6).toUpperCase());{const n=new w(t,e);return n.onComplete=n.search().then(i=>(n.results=i,n)),n}}}class w{config;query;results=[];onComplete;latLongResult;featureResults=void 0;constructor(e,s){this.query=s,this.config=e}search(){return this.jsonRequest(this.getUrl()).then(e=>this.normalizeNameItems(e.items))}getUrl(e,s,o,r){let n="";return e?n=this.config.geoLocateUrl+"?q="+this.query:o&&r?n=`${this.config.geoNameUrl}?lat=${o}&lon=${r}&num=${this.config.maxResults}`:n=`${this.config.geoNameUrl}?q=${this.query}&num=${this.config.maxResults}`,n}normalizeNameItems(e){return e.filter(s=>this.config.types.validTypes[s.concise.code]).map(s=>({name:s.name,location:s.location,province:this.config.provinces.list[s.province.code],type:this.config.types.allTypes[s.concise.code],LatLon:{lat:s.latitude,lon:s.longitude},bbox:s.bbox}))}jsonRequest(e){return new Promise((s,o)=>{const r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="json",r.onload=()=>{if(r.status===200){const n=typeof r.response=="string"?JSON.parse(r.response):r.response;s(n)}else o("Could not load results from remote service.")},r.send()})}locateByQuery(){return this.jsonRequest(this.getUrl(!0,void 0))}nameByLatLon(e,s,o){return this.jsonRequest(this.getUrl(!1,o,e,s)).then(r=>this.normalizeNameItems(r.items))}}class te extends w{constructor(e,s){super(e,s);let o;o=s.split(/[\s|,|;|]/).filter(c=>!isNaN(c)&&c!=="").map(c=>parseFloat(c));const n=.015,i=[o[1]-n,o[0]-n,o[1]+n,o[0]+n];this.latLongResult={name:`${o[0]},${o[1]}`,location:{latitude:o[0],longitude:o[1]},type:"Latitude/Longitude",position:[o[1],o[0]],bbox:i},this.onComplete=new Promise((c,a)=>{this.nameByLatLon(o[0],o[1]).then(g=>{g?(this.results=g,c(this)):a("Given lat lon coordinates cannot be found")})})}}class se extends w{constructor(e,s){s=s.substring(0,3).toUpperCase(),super(e,s),this.onComplete=new Promise((o,r)=>{this.formatLocationResult().then(n=>{n?(this.featureResults=n,this.nameByLatLon(n.LatLon.lat,n.LatLon.lon,Object.keys(n._provinces).map(i=>parseInt(i))).then(i=>{this.results=i,o(this)})):r("FSA code given cannot be found.")})})}formatLocationResult(){return this.locateByQuery().then(e=>{if(e.length===1&&this.query){const s=this.config.provinces.fsaToProvinces(this.query);return{fsa:this.query,code:"FSA",desc:this.config.types.allTypes.FSA,province:Object.keys(s).map(o=>s[o]).join(","),_provinces:s,LatLon:{lat:e[0].geometry.coordinates[1],lon:e[0].geometry.coordinates[0]}}}})}}class oe extends w{unitName;unit;mapSheets=[];constructor(e,s){super(e,s),s=isNaN(parseInt(s[2]))?"0"+s:s,this.unitName=s,this.onComplete=new Promise((o,r)=>{this.locateByQuery().then(n=>{if(n.length>0&&this.query){const i=this.locateToResult(n);this.unit=i[0],this.mapSheets=i,this.featureResults=this.unit,this.nameByLatLon(this.unit.LatLon.lat,this.unit.LatLon.lon).then(c=>{this.results=c,o(this)})}else r("Given NTS code not found")})})}locateToResult(e){return e.map(o=>{const r=o.title.split(" ");return{nts:r.shift()||"",location:r.join(" "),code:"NTS",desc:this.config.types.allTypes.NTS,LatLon:{lat:o.geometry.coordinates[1],lon:o.geometry.coordinates[0]},bbox:o.bbox}})}equals(e){return this.unitName===e.unitName}}const O="https://geogratis.gc.ca/services/geolocation/@{language}/locate",U="https://geogratis.gc.ca/services/geoname/@{language}/geonames.json",B="https://geogratis.gc.ca/services/geoname/@{language}/codes/province.json",G="https://geogratis.gc.ca/services/geoname/@{language}/codes/concise.json",re={10:"NL",11:"PE",12:"NS",13:"NB",24:"QC",35:"ON",46:"MB",47:"SK",48:"AB",59:"BC",60:"YU",61:"NT",62:"NU",72:"UF",73:"IW"};class M{config;constructor(e,s){let o,r,n,i;const c=s?.serviceUrls;c?(o=c.geoLocation?c.geoLocation:O,r=c.geoNames?c.geoNames:U,n=c.geoProvince?c.geoProvince:B,i=c.geoTypes?c.geoTypes:G):(o=O,r=U,n=B,i=G),o=o.replace("@{language}",e),r=r.replace("@{language}",e),n=n.replace("@{language}",e),i=i.replace("@{language}",e);const a=s?.settings;let g,v,y,b;a?(g=a.categories?a.categories:[],v=a.sortOrder?a.sortOrder:[],y=a.maxResults>0?a.maxResults:100,b=!!a.officialOnly):(g=[],v=[],y=100,b=!1),this.config={language:e,geoNameUrl:r,geoLocateUrl:o,types:q(e,i),provinces:Z(e,n),categories:g,sortOrder:v,maxResults:y,officialOnly:b},this.config.types.filterValidTypes(s?.excludeTypes),this._provinceList=[],this._typeList=[],this._excludedTypes=s?.excludeTypes||[]}get provinceList(){return this._provinceList}get typeList(){return this._typeList}set provinceList(e){this._provinceList=e}set typeList(e){this._typeList=e}findProvinceObj(e){return this.provinceList.find(s=>s.name===e)}query(e){return ee(this.config,e.toUpperCase()).onComplete.then(s=>{let o=[];s.featureResults?s.featureResults.fsa?o=[{name:s.featureResults.fsa,bbox:[s.featureResults.LatLon.lon+.02,s.featureResults.LatLon.lat-.02,s.featureResults.LatLon.lon-.02,s.featureResults.LatLon.lat+.02],type:s.featureResults.desc,position:[s.featureResults.LatLon.lon,s.featureResults.LatLon.lat],location:{latitude:s.featureResults.LatLon.lat,longitude:s.featureResults.LatLon.lon,province:this.findProvinceObj(s.featureResults.province)}}]:s.featureResults.nts&&(o=[{name:s.featureResults.nts,bbox:s.featureResults.bbox,type:s.featureResults.desc,position:[s.featureResults.LatLon.lon,s.featureResults.LatLon.lat],location:{city:s.featureResults.location,latitude:s.featureResults.LatLon.lat,longitude:s.featureResults.LatLon.lon}}]):s.latLongResult!==void 0&&(o=[s.latLongResult]);const r=s.results.map(n=>({name:n.name,bbox:n.bbox,type:n.type,position:[n.LatLon.lon,n.LatLon.lat],location:{city:n.location,latitude:n.LatLon.lat,longitude:n.LatLon.lon,province:this.findProvinceObj(n.province)}}));return o.concat(r)})}fetchProvinces(){return new Promise(e=>{const s=setInterval(()=>{if(this.config.provinces.listFetched){clearInterval(s);const o=[],r={code:-1,abbr:"...",name:"..."};o.push(r);const n=this.config.provinces.list;for(const i in n)o.push({code:i,abbr:re[i],name:n[i]});this.provinceList=o,e(this.provinceList)}})})}fetchTypes(){return new Promise(e=>{const s=setInterval(()=>{if(this.config.types.typesFetched){clearInterval(s);const o=[],r={code:-1,name:"..."};o.push(r);const n=this.config.types.allTypes;for(const i in n)this._excludedTypes.includes(i)||o.push({code:i,name:n[i]});this.typeList=o,e(this.typeList)}},250)})}}class ne{queryParams;GSservice;searchVal;lastSearchVal;searchResults;savedResults;resultsVisible;loadingResults;constructor(e){this.GSservice=new M(e.language,e);const s={type:"",province:"",extent:""};this.queryParams=s,this.resultsVisible=!1,this.searchVal="",this.lastSearchVal="",this.searchResults=[],this.savedResults=[],this.loadingResults=!1}}const ie={getProvinces:t=>new Promise(e=>{t.GSservice.fetchProvinces().then(s=>{s.sort((o,r)=>o.name>r.name?1:-1),e(s)})}),getTypes:t=>new Promise(e=>{t.GSservice.fetchTypes().then(s=>{s.sort((o,r)=>o.name>r.name?1:-1),e(s)})})},ae={SET_PROVINCE:(t,e)=>{t.queryParams.province=e},SET_TYPE:(t,e)=>{t.queryParams.type=e},SET_EXTENT:(t,e)=>{t.queryParams.extent=e},SET_GSSERVICE:(t,e)=>{t.GSservice=e}},ce={runQuery:function(t,e){if(t.commit("SET_LOADING_RESULTS",!0),!t.state.searchVal)t.commit("SET_SEARCH_RESULTS",[]),t.commit("SET_SAVED_RESULTS",[]),t.commit("SET_LOADING_RESULTS",!1);else if(t.state.searchVal&&t.state.searchVal!==t.state.lastSearchVal||e){const s=setInterval(()=>{t.state.GSservice.config.provinces.listFetched&&t.state.GSservice.config.types.typesFetched&&(clearInterval(s),t.state.GSservice.query(`${t.state.searchVal}*`).then(o=>{t.commit("SET_LAST_SEARCH_VAL",t.state.searchVal),t.commit("SET_SAVED_RESULTS",o);const r=I(t.state.resultsVisible,t.state.queryParams,t.state.savedResults);t.commit("SET_SEARCH_RESULTS",r||[]),t.commit("SET_LOADING_RESULTS",!1)}))},250)}else{const s=I(t.state.resultsVisible,t.state.queryParams,t.state.savedResults);t.commit("SET_SEARCH_RESULTS",s||[]),t.commit("SET_LOADING_RESULTS",!1)}},setProvince:function(t,e){t.commit("SET_PROVINCE",typeof e.province>"u"?"":e.province),t.dispatch("runQuery",e.forceReRun)},setType:function(t,e){t.commit("SET_TYPE",typeof e.type>"u"?"":e.type),t.dispatch("runQuery",e.forceReRun)},setSearchTerm:function(t,e){t.commit("SET_LAST_SEARCH_VAL",t.state.searchVal),t.commit("SET_SEARCH_VAL",e),t.dispatch("runQuery")},setMapExtent:function(t,e){if(e.visible!==void 0&&t.commit("SET_RESULTS_VISIBLE",e.visible),e.extent.sr.wkid!==4326)throw new Error("an extent that was not projected to wkid 4326 was passed to the geosearch store");t.commit("SET_EXTENT",e.extent),t.dispatch("runQuery")}};function I(t,e,s){return t&&e.extent&&(s=s.filter(o=>o.bbox[0]<=e.extent.xmax&&o.bbox[1]<=e.extent.ymax&&o.bbox[2]>=e.extent.xmin&&o.bbox[3]>=e.extent.ymin)),e.province&&e.province!=="..."&&(s=s.filter(o=>o.location.province.name&&o.location.province.name===e.province)),e.type&&e.type!=="..."&&(s=s.filter(o=>o.type===e.type)),s}var p=(t=>(t.getProvinces="geosearch/getProvinces",t.getTypes="geosearch/getTypes",t.queryParams="geosearch/queryParams",t.searchVal="geosearch/searchVal",t.searchResults="geosearch/searchResults",t.resultsVisible="geosearch/resultsVisible",t.loadingResults="geosearch/loadingResults",t.runQuery="geosearch/runQuery",t.setProvince="geosearch/setProvince",t.setType="geosearch/setType",t.setSearchTerm="geosearch/setSearchTerm",t.setMapExtent="geosearch/setMapExtent",t.setGSservice="geosearch/setGSservice",t))(p||{});function st(t){const e=new ne(t);return{namespaced:!0,state:e,getters:{...ie},actions:{...ce,...A.actions(e)},mutations:{...ae,...A.mutations(e)}}}const le=S({data(){return{searchVal:this.get(p.searchVal),setSearchTerm:this.call(p.setSearchTerm),onSearchTermChange:F(500,t=>{this.setSearchTerm(t)})}}}),ue={class:"rv-geosearch-bar h-26 mb-14"},he=["placeholder","value","aria-label"];function pe(t,e,s,o,r,n){return l(),u("div",ue,[h("input",{type:"search",class:"border-b text-base px-12 py-8 outline-none focus:shadow-outline border-gray-600 mx-8 h-full w-11/12",placeholder:t.$t("geosearch.searchText"),value:t.searchVal,onInput:e[0]||(e[0]=i=>t.onSearchTermChange(i.target.value)),onKeyup:e[1]||(e[1]=H(i=>{t.$store.get("panel/mobileView")&&i?.target?.blur()},["enter"])),"aria-label":t.$t("geosearch.searchText"),enterkeyhint:"done"},null,40,he)])}var de=E(le,[["render",pe],["__file","/home/runner/work/ramp4-pcar4/ramp4-pcar4/src/fixtures/geosearch/search-bar.vue"]]);const fe=S({name:"GeosearchTopFiltersV",data(){return{provinces:[],types:[],queryParams:this.get(p.queryParams),setProvince:this.call(p.setProvince),setType:this.call(p.setType),watchers:[]}},created(){this.updateProvincesAndTypes(),this.watchers.push(this.$watch("$iApi.language",this.updateProvincesAndTypes))},beforeUnmount(){this.watchers.forEach(t=>t())},methods:{clearFilters(){this.setProvince({}),this.setType({})},updateProvincesAndTypes(){this.$store.dispatch(p.setGSservice,new M(this.$iApi.language,this.$iApi.fixture.get("geosearch").config));const t=this.provinces.find(s=>this.queryParams.province===s.name)?.code,e=this.types.find(s=>this.queryParams.type===s.name)?.code;this.$store.get(p.getProvinces).then(s=>{this.provinces=s,this.setProvince({province:s.find(o=>o.code===t)?.name,forceReRun:!0})}),this.$store.get(p.getTypes).then(s=>{this.types=s,this.setType({type:s.find(o=>o.code===e)?.name,forceReRun:!0})})}}}),ge={class:"rv-geosearch-top-filters flex items-center w-full mx-8 mb-14"},me={class:"inline-block w-2/5 h-26"},ve=["value"],ye={value:"",disabled:"",hidden:""},be={class:"inline-block w-2/5 h-26 mx-16"},_e=["value"],Le={value:"",disabled:"",hidden:""},Te=["disabled","content"],Re=h("div",{class:"rv-geosearch-icon"},[h("svg",{class:"fill-current w-18 h-18",viewBox:"0 0 23 21"},[h("path",{d:"M 14.7574,20.8284L 17.6036,17.9822L 14.7574,15.1716L 16.1716,13.7574L 19.0178,16.568L 21.8284,13.7574L 23.2426,15.1716L 20.432,17.9822L 23.2426,20.8284L 21.8284,22.2426L 19.0178,19.3964L 16.1716,22.2426L 14.7574,20.8284 Z M 2,2L 19.9888,2.00001L 20,2.00001L 20,2.01122L 20,3.99999L 19.9207,3.99999L 13,10.9207L 13,22.909L 8.99999,18.909L 8.99999,10.906L 2.09405,3.99999L 2,3.99999L 2,2 Z "})])],-1),Se=[Re];function Ee(t,e,s,o,r,n){const i=T("truncate"),c=T("tippy");return l(),u("div",ge,[h("div",me,[m((l(),u("select",{class:"form-select border-b border-b-gray-600 w-full h-full py-0 cursor-pointer",value:t.queryParams.province,onChange:e[0]||(e[0]=a=>t.setProvince({province:a.target.value}))},[m((l(),u("option",ye,[R(f(t.$t("geosearch.filters.province")),1)])),[[i]]),(l(!0),u(C,null,x(t.provinces,a=>m((l(),u("option",{key:a.code},[R(f(a.name),1)])),[[i]])),128))],40,ve)),[[i]])]),h("div",be,[m((l(),u("select",{class:"form-select border-b border-b-gray-600 w-full h-full py-0 cursor-pointer",value:t.queryParams.type,onChange:e[1]||(e[1]=a=>t.setType({type:a.target.value}))},[h("option",Le,f(t.$t("geosearch.filters.type")),1),(l(!0),u(C,null,x(t.types,a=>(l(),u("option",{key:a.code},f(a.name),1))),128))],40,_e)),[[i]])]),m((l(),u("button",{type:"button",class:"inline-block text-gray-400 w-1/8 h-24 px-8 mr-8 float-right hover:text-black disabled:cursor-default disabled:text-gray-400",disabled:!t.queryParams.type&&!t.queryParams.province,onClick:e[2]||(e[2]=(...a)=>t.clearFilters&&t.clearFilters(...a)),content:t.$t("geosearch.filters.clear")},Se,8,Te)),[[c,{placement:"bottom"}]])])}var $e=E(fe,[["render",Ee],["__file","/home/runner/work/ramp4-pcar4/ramp4-pcar4/src/fixtures/geosearch/top-filters.vue"]]);const we=S({name:"GeosearchBottomFiltersV",data(){return{resultsVisible:this.get(p.resultsVisible),setMapExtent:this.call(p.setMapExtent),onMapExtentChange:F(300,t=>{this.latLongExtent(t).then(e=>{this.setMapExtent({extent:e,visible:this.resultsVisible})})})}},mounted(){this.$iApi.event.on(z.MAP_EXTENTCHANGE,this.onMapExtentChange,"geosearch_map_extent")},beforeUnmount(){this.$iApi.event.off("geosearch_map_extent")},methods:{async latLongExtent(t){return t.sr.wkid===4326?t:await this.$iApi.geo.proj.projectGeometry(4326,t)},updateMapExtent(t){this.latLongExtent(this.$iApi.geo.map.getExtent()).then(e=>{this.setMapExtent({extent:e,visible:t})})}}}),Pe={class:"rv-geosearch-bottom-filters"},Ve={class:"bg-white"},Ce={class:"ml-8 cursor-pointer"},xe=["checked"];function Ae(t,e,s,o,r,n){return l(),u("div",Pe,[h("div",Ve,[h("label",Ce,[h("input",{type:"checkbox",class:"form-checkbox border-2 mx-8 border-gray-600 cursor-pointer",checked:t.resultsVisible,onChange:e[0]||(e[0]=i=>t.updateMapExtent(i.target.checked))},null,40,xe),R(f(t.$t("geosearch.visible")),1)])])])}var Ne=E(we,[["render",Ae],["__file","/home/runner/work/ramp4-pcar4/ramp4-pcar4/src/fixtures/geosearch/bottom-filters.vue"]]);const ke=S({name:"GeosearchLoadingBarV"}),Oe={class:"w-full h-6 relative overflow-hidden rounded-full indeterminate mb-14"},Ue={class:"h-full progressbar bg-blue-800 rounded-full top-0","aria-valuemin":"0","aria-valuemax":"100"},Be={class:"flex items-center h-full"};function Ge(t,e,s,o,r,n){return l(),u("div",Oe,[h("div",Ue,[h("span",Be,[X(t.$slots,"default",{},void 0,!0)])])])}var Ie=E(ke,[["render",Ge],["__scopeId","data-v-31c7f983"],["__file","/home/runner/work/ramp4-pcar4/ramp4-pcar4/src/fixtures/geosearch/loading-bar.vue"]]);const je=S({name:"GeosearchScreenV",props:{panel:{type:Object}},components:{"geosearch-bar":de,"geosearch-top-filters":$e,"geosearch-bottom-filters":Ne,"loading-bar":Ie},data(){return{searchVal:this.get(p.searchVal),searchResults:this.get(p.searchResults),loadingResults:this.get(p.loadingResults)}},methods:{zoomIn(t){let e=new Y("zoomies",t.position);this.$iApi.geo.map.zoomMapTo(e)},highlightSearchTerm(t,e){const s=t.replace(new RegExp(`${this.searchVal.value}`,"gi"),o=>'<span class="font-bold text-blue-600">'+o+"</span>");return e?s+",":s}}}),Fe={class:"flex flex-col h-full"},Me={key:1,class:"px-8 mb-10 truncate"},De={class:"relative h-48"},Qe={class:"font-bold text-blue-600"},He={key:2,class:"rv-results-list flex-grow mb-5 border-t border-b border-gray-600 overflow-y-auto"},ze=["onClick"],Xe={class:"rv-result-description px-8"},Ye={class:"flex-1 text-left truncate font-bold"},Je=["innerHTML"],We={key:0,class:"text-gray-600 text-sm"},Ze={key:0,class:"flex-1 text-left truncate text-sm"};function Ke(t,e,s,o,r,n){const i=_("geosearch-bar"),c=_("geosearch-top-filters"),a=_("loading-bar"),g=_("geosearch-bottom-filters"),v=_("panel-screen"),y=T("truncate"),b=T("focus-item"),D=T("focus-list");return l(),N(v,{panel:t.panel},{header:k(()=>[R(f(t.$t("geosearch.title")),1)]),content:k(()=>[h("div",Fe,[P(i),P(c),t.loadingResults?(l(),N(a,{key:0,class:"flex-none"})):L("v-if",!0),t.searchVal&&t.searchResults.length===0&&!t.loadingResults?(l(),u("div",Me,[h("span",De,[R(f(t.$t("geosearch.noResults")),1),h("span",Qe,'"'+f(t.searchVal)+'"',1)])])):L("v-if",!0),t.searchResults.length>0?m((l(),u("ul",He,[(l(!0),u(C,null,x(t.searchResults,(d,Q)=>(l(),u("li",{class:"relative h-56",key:Q},[m((l(),u("button",{type:"button",class:"absolute inset-0 h-full w-full hover:bg-gray-300 default-focus-style",onClick:et=>t.zoomIn(d),style:{"border-bottom":"1px solid lightgray"}},[m((l(),u("div",Xe,[h("div",Ye,[h("span",{innerHTML:t.highlightSearchTerm(d.name,d.location.province)},null,8,Je),d.location.province?(l(),u("span",We,f(d.location.city?" "+d.location.city+", "+d.location.province.abbr:" "+d.location.province.abbr),1)):L("v-if",!0)]),d.type?(l(),u("div",Ze,f(d.type),1)):L("v-if",!0)])),[[y]])],8,ze)),[[b,"show-truncate"]])]))),128))])),[[D]]):L("v-if",!0),P(g,{class:"mt-auto"})])]),_:1},8,["panel"])}var qe=E(je,[["render",Ke],["__file","/home/runner/work/ramp4-pcar4/ramp4-pcar4/src/fixtures/geosearch/screen.vue"]]),ot=Object.freeze(Object.defineProperty({__proto__:null,default:qe},Symbol.toStringTag,{value:"Module"}));export{qe as G,st as g,ot as s};
