import{s as ae,a as Z,j as oe,d as he}from"./LabelMetric-D12aZWIt.js";import{ci as H,n as I,a$ as m,ad as j,af as ue,b3 as de,dL as le,am as ce,em as _e,iL as fe,ag as pe,j as ye,bK as me,ah as ge,l as be,eh as xe,s as w,bS as Ie,cM as we,B as Se}from"./main-I34c1W55.js";import{m as A,a as J,n as X}from"./TimeOnly-UqMRd--c.js";import{a7 as Te,a8 as Fe,a9 as c,aa as Ee,ab as Ae,f as g}from"./UpdateTracking2D-QQY_ZvUy.js";import{n as Ce,P as ve,t as ze}from"./timeSupport-Cpa6UIyb.js";import{r as k,p as K}from"./featureConversionUtils-CpxfICn8.js";import{s as C,e as Be}from"./OptimizedFeature-EIithYlr.js";import{p as De}from"./labelUtils-BWMzlbHL.js";import{Z as N}from"./FieldsIndex-BWCyDbTB.js";import{d as Me}from"./diffUtils-DiD8qAHh.js";import{c as Oe,K as W,J as v}from"./definitions-DJSdSb77.js";import{a as Re}from"./queryUtils-DRiQDASA.js";import{b as Ge}from"./Query-CJScdlzS.js";import{U as S}from"./enums-DBi1-Mm2.js";const Ve=1.25;let z=class{get length(){return this._pos}constructor(r,e){this._pos=0;const t=e?this._roundToNearest(e,r.BYTES_PER_ELEMENT):40;this._array=new ArrayBuffer(t),this._buffer=new r(this._array),this._ctor=r,this._i16View=new Int16Array(this._array)}_roundToNearest(r,e){const t=Math.round(r);return e===1?t:t+(e-t%e)}_ensureSize(r){if(this._pos+r>=this._buffer.length){const e=this._roundToNearest((this._array.byteLength+r*this._buffer.BYTES_PER_ELEMENT)*Ve,this._buffer.BYTES_PER_ELEMENT),t=new ArrayBuffer(e),i=new this._ctor(t);i.set(this._buffer,0),this._array=t,this._buffer=i,this._i16View=new Int16Array(this._array)}}ensureSize(r){this._ensureSize(r)}writeF32(r){this._ensureSize(1);const e=this._pos;return new Float32Array(this._array,4*this._pos,1)[0]=r,this._pos++,e}push(r){this._ensureSize(1);const e=this._pos;return this._buffer[this._pos++]=r,e}writeFixed(r){this._buffer[this._pos++]=r}setValue(r,e){this._buffer[r]=e}i1616Add(r,e,t){this._i16View[2*r]+=e,this._i16View[2*r+1]+=t}getValue(r){return this._buffer[r]}getValueF32(r){return new Float32Array(this._array,4*r,1)[0]}incr(r){if(this._buffer.length<r)throw new Error("Increment index overflows the target buffer");this._buffer[r]++}decr(r){this._buffer[r]--}writeRegion(r){this._ensureSize(r.length);const e=this._pos;return this._buffer.set(r,this._pos),this._pos+=r.length,e}writeManyFrom(r,e,t){this._ensureSize(t-e);for(let i=e;i!==t;i++)this.writeFixed(r._buffer[i])}buffer(){const r=this._array.slice(0,4*this._pos);return this.destroy(),r}toArray(){return[...this._buffer]}seek(r){this._pos=r}destroy(){this._array=null,this._buffer=null}};const je=6,ke=4;let Ne=class{constructor(r,e,t=0){const i=je*t*Uint32Array.BYTES_PER_ELEMENT,s=ke*t*e.stride,n=e.stride/4,a=e.attributes.find(o=>o.name==="pos"||o.name==="position");if(!a)throw new Error("InternalError: Unable to find position attribute");this.layout={...e,position:a},this._indices=new z(Uint32Array,i),this._vertices=new z(Uint32Array,s),this._metrics=new z(Uint32Array,0),this._metricCountOffset=this._metrics.push(0),this._strideInt=n,this._instanceId=r}serialize(r){const e=this._indices.buffer(),t=this._vertices.buffer(),i=this._metrics.length?this._metrics.buffer():null;return r.push(e,t),{instanceId:this._instanceId,layout:this.layout,indices:e,vertices:t,metrics:i}}get strideInt(){return this._strideInt}get vertexCount(){return this._vertices.length/this._strideInt}get indexCount(){return this._indices.length}get indexWriter(){return this._indices}get vertexWriter(){return this._vertices}get metricWriter(){return this._metrics}vertexEnsureSize(r){this._vertices.ensureSize(r)}indexEnsureSize(r){this._indices.ensureSize(r)}writeIndex(r){this._indices.push(r)}writeVertex(r){this._vertices.push(r)}writeVertexRegion(r){this._vertices.writeRegion(r)}writeVertexF32(r){this._vertices.writeF32(r)}writeMetric(r){this._metrics.incr(this._metricCountOffset),r.serialize(this._metrics)}},We=class{constructor(r,e=0){this._id=r,this._sizeHint=e,this._entityRecordCountOffset=0,this._entityCountOffset=0,this._entityIdIndex=0,this._entitySortKeyIndex=0,this._didEntityStart=!1,this._instanceIdToVertexData=new Map,this._recordIndexStart=0,this._recordIndexCount=0,this._recordVertexStart=0,this._recordVertexCount=0,this._current={metric:null,writer:null,start:0,sortKey:0,instanceId:0,layoutHash:0,indexStart:0,vertexStart:0,textureKey:0,metricBoxLenPointer:0},this._entities=new z(Uint32Array,this._sizeHint*ae.byteSizeHint),this._entityCountOffset=this._entities.push(0)}get id(){return this._id}serialize(){const r=new Array,e=[],t=this._entities.buffer();for(const i of this._instanceIdToVertexData.values())e.push(i.serialize(r));return{message:{data:e,entities:t},transferList:r}}vertexCount(){return this._current.writer?.vertexCount??0}indexCount(){return this._current.writer?.indexCount??0}vertexEnsureSize(r){this._current.writer.vertexEnsureSize(r)}indexEnsureSize(r){this._current.writer.indexEnsureSize(r)}vertexWrite(r){this._current.writer.writeVertex(r)}vertexWriteRegion(r){this._current.writer.writeVertexRegion(r)}vertexWriteF32(r){this._current.writer.writeVertexF32(r)}recordBounds(r,e,t,i){}indexWrite(r){this._current.writer.writeIndex(r)}metricStart(r){this._current.metric=r}metricEnd(){const r=this._current.writer;this._current.metric.bounds.length&&r.writeMetric(this._current.metric)}metricBoxWrite(r){this._current.metric.bounds.push(r)}entityStart(r,e=r){this._entityIdIndex=this._entities.push(r),this._entitySortKeyIndex=this._entities.writeF32(e),this._entityRecordCountOffset=this._entities.push(0),this._didEntityStart=!0}entityRecordCount(){return this._entities.getValue(this._entityRecordCountOffset)}entityEnd(){this._didEntityStart&&(this.entityRecordCount()===0?this._entities.seek(this._entityIdIndex):this._entities.incr(this._entityCountOffset),this._didEntityStart=!1)}recordCount(){return this._entities.getValue(this._entityRecordCountOffset)}recordStart(r,e,t=0){this._current.writer=this._getVertexWriter(r,e),this._current.indexStart=this._current.writer.indexCount,this._current.vertexStart=this._current.writer.vertexCount,this._current.instanceId=r,this._current.layoutHash=e.hash,this._current.textureKey=t}recordEnd(r=0){const e=this._current.vertexStart,t=this._current.writer.vertexCount-e;if(!t)return!1;const i=this._current.indexStart,s=this._current.writer.indexCount-i;return this._recordIndexStart=i,this._recordIndexCount=s,this._recordVertexStart=e,this._recordVertexCount=t,this._entities.incr(this._entityRecordCountOffset),Z.write(this._entities,this._current.instanceId,this._current.textureKey,i,s,e,t,r),!0}copyLast(r,e){const t=this._recordVertexStart+this._recordVertexCount;this._entities.incr(this._entityRecordCountOffset),Z.write(this._entities,this._current.instanceId,this._current.textureKey,this._recordIndexStart+this._recordIndexCount,this._recordIndexCount,t,this._recordVertexCount,0);const i=this._current.writer.indexWriter,s=this._current.writer.vertexWriter,n=this._recordIndexStart+this._recordIndexCount,a=this._recordVertexCount;for(let _=this._recordIndexStart;_!==n;_++){const l=i.getValue(_);i.push(l+a)}const o=this._current.writer.layout.stride/Uint32Array.BYTES_PER_ELEMENT,h=this._recordVertexStart*o,d=(this._recordVertexStart+this._recordVertexCount)*o;for(let _=h;_!==d;_++){const l=s.getValue(_);s.push(l)}const u=this._current.writer.layout.position,p=u.packPrecisionFactor??1,y=u.offset/Uint32Array.BYTES_PER_ELEMENT,x=r*p,f=e*p;for(let _=t*o;_<=s.length;_+=o)s.i1616Add(_+y,x,f)}copyLastFrom(r,e,t){const i=r._entities.getValue(r._entityIdIndex);if(i!==this._entities.getValue(this._entityIdIndex)){const l=r._entities.getValueF32(r._entitySortKeyIndex);this.entityStart(i,l)}this.recordStart(r._current.instanceId,r._current.writer.layout,r._current.textureKey);const s=this._current.writer.layout.stride/Uint32Array.BYTES_PER_ELEMENT,n=this._current.vertexStart,a=r._current.vertexStart-n,o=this._current.writer.indexWriter,h=this._current.writer.vertexWriter,d=r._current.writer.indexWriter,u=r._current.writer.vertexWriter;for(let l=r._current.indexStart;l!==d.length;l++){const V=d.getValue(l);o.push(V-a)}for(let l=r._current.vertexStart*s;l!==u.length;l++){const V=u.getValue(l);h.push(V)}const p=this._current.writer.layout.position,y=p.packPrecisionFactor??1,x=p.offset/Uint32Array.BYTES_PER_ELEMENT,f=e*y,_=t*y;for(let l=n*s;l<=h.length;l+=s)h.i1616Add(l+x,f,_);this.recordEnd()}_getVertexWriter(r,e){const t=this._instanceIdToVertexData;return t.has(r)||t.set(r,new Ne(r,e,this._sizeHint)),t.get(r)}},Le=class{},Pe=class extends Le{constructor(r){super(),this._fetcher=r,this._controller=new AbortController,this._pendingIds=new Set,this._pendingRequests=[],this._resourceIdToResource=new Map}destroy(){this._controller.abort()}get _abortOptions(){return{signal:this._controller.signal}}enqueueRequest(r){const e=oe(r.resource),t=H(JSON.stringify(e));return this._pendingIds.has(t)||(this._pendingIds.add(t),this._pendingRequests.push({...r,resourceId:t})),t}async fetchEnqueuedResources(){const r=this._pendingRequests;this._pendingIds.clear(),this._pendingRequests=[];const e=await this._fetcher.fetch(r,this._abortOptions);for(let t=0;t<e.length;t++){const i=r[t].resourceId;this._resourceIdToResource.set(i,e[t])}}async fetchResourceImmediate(r){const e=await this._fetcher.fetch([r],this._abortOptions);if(e.length!==1)throw new Error("FeaturePipelineResourceProxy: failed to fetch resources");return e[0]}async fetchDictionaryResourceImmediate(r){const e=await this._fetcher.fetchDictionary([r],this._abortOptions);if(e.length!==1)throw new Error("FeaturePipelineResourceProxy: failed to fetch dictionary resources");return e[0]}getResource(r){return this._resourceIdToResource.get(r)}},T=class{destroy(){}};function Q(r,e,t){if(r==null)return null;const i=e.readArcadeFeature();e.contextTimeZone=t.$view?.timeZone;try{return r.evaluate({...t,$feature:i},r.services)}catch(s){return I.getLogger("esri.views.2d.support.arcadeOnDemand").warn("Feature arcade evaluation failed:",s),null}}function L(r){return r==null||r===1/0||r===-1/0||typeof r=="number"&&isNaN(r)}function $(r,e,t,i){if(r==null)return i??null;const s=e.readArcadeFeature();e.contextTimeZone=t.$view?.timeZone;const n=r.evaluate({...t,$feature:s},r.services);return L(n)?i??null:n}let B=class R{static fromBuffer(e,t){return new R(e,t)}static create(e,t=4294967295){const i=new Uint32Array(Math.ceil(e/32));return new R(i,t)}constructor(e,t){this._mask=0,this._buf=e,this._mask=t}_getIndex(e){return Math.floor(e/32)}has(e){const t=this._mask&e;return!!(this._buf[this._getIndex(t)]&1<<t%32)}hasRange(e,t){let i=e,s=t;for(;i%32&&i!==s;){if(this.has(i))return!0;i++}for(;s%32&&i!==s;){if(this.has(i))return!0;s--}if(i===s)return!1;for(let n=i/32;n!==s/32;n++)if(this._buf[n])return!0;return!1}set(e){const t=this._mask&e,i=this._getIndex(t),s=1<<t%32;this._buf[i]|=s}setRange(e,t){let i=e,s=t;for(;i%32&&i!==s;)this.set(i++);for(;s%32&&i!==s;)this.set(s--);if(i!==s)for(let n=i/32;n!==s/32;n++)this._buf[n]=4294967295}unset(e){const t=this._mask&e,i=this._getIndex(t),s=1<<t%32;this._buf[i]&=4294967295^s}resize(e){const t=this._buf,i=new Uint32Array(Math.ceil(e/32));i.set(t),this._buf=i}or(e){for(let t=0;t<this._buf.length;t++)this._buf[t]|=e._buf[t];return this}and(e){for(let t=0;t<this._buf.length;t++)this._buf[t]&=e._buf[t];return this}xor(e){for(let t=0;t<this._buf.length;t++)this._buf[t]^=e._buf[t];return this}ior(e){for(let t=0;t<this._buf.length;t++)this._buf[t]|=~e._buf[t];return this}iand(e){for(let t=0;t<this._buf.length;t++)this._buf[t]&=~e._buf[t];return this}ixor(e){for(let t=0;t<this._buf.length;t++)this._buf[t]^=~e._buf[t];return this}any(){for(let e=0;e<this._buf.length;e++)if(this._buf[e])return!0;return!1}copy(e){for(let t=0;t<this._buf.length;t++)this._buf[t]=e._buf[t];return this}clone(){return new R(this._buf.slice(),this._mask)}clear(){for(let e=0;e<this._buf.length;e++)this._buf[e]=0;return this}forEachSet(e){for(let t=0;t<this._buf.length;t++){let i=this._buf[t],s=32*t;if(i)for(;i;)1&i&&e(s),i>>>=1,s++}}countSet(){let e=0;return this.forEachSet(t=>{e++}),e}},q=class{constructor(r){this._valid=B.create(r),this._data=new Array(r)}has(r){return this._valid.has(r)}set(r,e){this._valid.set(r),this._data[r]=e}get(r){return this._data[r]}};const D=m("featurelayer-simplify-thresholds")??[.5,.5,.5,.5],Ue=D[0],Ye=D[1],Ze=D[2],He=D[3],P=m("featurelayer-simplify-payload-size-factors")??[1,2,4],Je=P[0],Xe=P[1],Ke=P[2],Qe=m("featurelayer-simplify-mobile-factor")??2,$e=m("esri-mobile"),ee=4294967295;function qe(r,e,t){if(!(r.length>e))for(;r.length<=e;)r.push(t)}class et{constructor(e){this.metadata=e,this.type="FeatureSetReader",this._deleted=null,this._joined=[],this._objectIdToIndex=null,this._boundsBuffer=[],this._caches=new Map,this.arcadeDeclaredClass="esri.arcade.Feature",this._contextTimeZone=null}destroy(){}[Symbol.dispose](){this.destroy()}get isEmpty(){return this._deleted!=null&&this._deleted.countSet()===this.getSize()}getAreaSimplificationThreshold(e,t){let i=1;const s=$e?Qe:1;t>4e6?i=Ke*s:t>1e6?i=Xe*s:t>5e5?i=Je*s:t>1e5&&(i=s);let n=0;return e>4e3?n=He*i:e>2e3?n=Ze*i:e>100?n=Ye:e>15&&(n=Ue),n}getBounds(e){if(qe(this._boundsBuffer,4*this.getIndex()+4,0),this.getBoundsXMin()===ee)return!1;if(this.getBoundsXMin()===0){const a=this.readGeometryWorldSpace();if(!a)return this.setBoundsXMin(ee),!1;let o=1/0,h=1/0,d=-1/0,u=-1/0;return a.forEachVertex((p,y)=>{o=Math.min(o,p),h=Math.min(h,y),d=Math.max(d,p),u=Math.max(u,y)}),this.setBoundsXMin(o),this.setBoundsYMin(h),this.setBoundsXMax(d),this.setBoundsYMax(u),j(e,o,h,d,u),!0}const t=this.getBoundsXMin(),i=this.getBoundsYMin(),s=this.getBoundsXMax(),n=this.getBoundsYMax();return j(e,t,i,s,n),!0}getBoundsXMin(){return this._boundsBuffer[4*this.getIndex()]}setBoundsXMin(e){this._boundsBuffer[4*this.getIndex()]=e}getBoundsYMin(){return this._boundsBuffer[4*this.getIndex()+1]}setBoundsYMin(e){this._boundsBuffer[4*this.getIndex()+1]=e}getBoundsXMax(){return this._boundsBuffer[4*this.getIndex()+2]}setBoundsXMax(e){this._boundsBuffer[4*this.getIndex()+2]=e}getBoundsYMax(){return this._boundsBuffer[4*this.getIndex()+3]}setBoundsYMax(e){this._boundsBuffer[4*this.getIndex()+3]=e}readAttributeAsTimestamp(e){const t=this.readAttribute(e);return typeof t=="string"?new Date(t).getTime():typeof t=="number"||t==null?t:null}readAttribute(e,t=!1){const i=this._readAttribute(e,t);if(i!==void 0)return i;for(const s of this._joined){s.setIndex(this.getIndex());const n=s._readAttribute(e,t);if(n!==void 0)return n}}readAttributes(){const e=this._readAttributes();for(const t of this._joined){t.setIndex(this.getIndex());const i=t._readAttributes();for(const s of Object.keys(i))e[s]=i[s]}return e}joinAttributes(e){this._joined.push(e)}removeIds(e){if(this._objectIdToIndex==null){const i=new Map,s=this.getCursor();for(;s.next();){const n=s.getObjectId();ue(n),i.set(n,s.getIndex())}this._objectIdToIndex=i}const t=this._objectIdToIndex;for(const i of e.values())t.has(i)&&this._removeAtIndex(t.get(i))}readOptimizedFeatureWorldSpace(){const e=this.readGeometryWorldSpace(),t=this.readAttributes(),i=this.readCentroidWorldSpace(),s=new Be(e,t,i);return s.objectId=this.getObjectId(),s.displayId=this.getDisplayId(),s}readLegacyFeatureForDisplay(){const e=this.readCentroidForDisplay();return{attributes:this.readAttributes(),geometry:this.readLegacyGeometryForDisplay(),centroid:(e&&{x:e.coords[0],y:e.coords[1]})??null}}readLegacyFeatureWorldSpace(){const e=this.readCentroidWorldSpace();return{attributes:this.readAttributes(),geometry:this._readLegacyGeometryWorldSpace(),centroid:(e&&{x:e.coords[0],y:e.coords[1]})??null}}readLegacyGeometryForDisplay(){const e=this.readGeometryForDisplay();return k(e,this.geometryType,!1,!1)}readXForDisplay(){return this._readX()}readYForDisplay(){return this._readY()}readXWorldSpace(){const e=this._readX(),t=this.getInTransform();return t==null?e:e*t.scale[0]+t.translate[0]}readYWorldSpace(){const e=this._readY(),t=this.getInTransform();return t==null?e:t.translate[1]-e*t.scale[1]}readGeometryForDisplay(){const e=this._readGeometryDeltaDecoded(!0);if(!e){const t=this._createGeometryFromServerCentroid();return t?t.deltaDecode():null}return e}readGeometryWorldSpace(){let e=this._readGeometry();if(e||(e=this._createGeometryFromServerCentroid()),!e)return null;const t=e.clone(),i=this.getInTransform();return i!=null&&K(t,t,this.hasZ,this.hasM,i),t}readCentroidForDisplay(){const e=this.readGeometryForDisplay();return e?this._computeDisplayCentroid(e):this._readServerCentroid()}readCentroidWorldSpace(){const e=this.readGeometryForDisplay(),t=e?this._computeDisplayCentroid(e):this._readServerCentroid();if(!t)return null;const i=t.clone(),s=this.getInTransform();return s!=null&&K(i,i,this.hasZ,this.hasM,s),i}setCache(e){let t=this._caches.get(e);t==null&&(t=new q(this.getSize()),this._caches.set(e,t)),this._activeCache=t}setCachedValue(e){this._activeCache.set(this.getIndex(),e)}hasCachedValue(){return this._activeCache.has(this.getIndex())}getCachedValue(){return this._activeCache.get(this.getIndex())}_readGeometryDeltaDecoded(e){const t=this._readGeometry(e);return this.geometryType!=="esriGeometryPoint"&&t&&this.getInTransform()?t.deltaDecode():t}get contextTimeZone(){return this._contextTimeZone}set contextTimeZone(e){this._contextTimeZone=e}readArcadeFeature(){return this}hasField(e){return this.fields.has(e)||this._joined.some(t=>t.hasField(e))}geometry(){const e=this.readGeometryWorldSpace(),t=k(e,this.geometryType,this.hasZ,this.hasM),i=de(t);if(i){if(!this.metadata.spatialReference)throw new Error("InternalError: Expected spatial reference to be defined");i.spatialReference=this.metadata.spatialReference}return i}autocastArcadeDate(e,t){return t&&t instanceof Date?this.isUnknownDateTimeField(e)?A.unknownDateJSToArcadeDate(t):A.dateJSAndZoneToArcadeDate(t,this.contextTimeZone??le):t}isUnknownDateTimeField(e){return this.metadata.fieldsIndex.getTimeZone(e)===ce}field(e){let t=this.fields.get(e);if(t)switch(t.type){case"date-only":case"esriFieldTypeDateOnly":return X.fromReader(this.readAttribute(e,!1));case"time-only":case"esriFieldTypeTimeOnly":return J.fromReader(this.readAttribute(e,!1));case"esriFieldTypeTimestampOffset":case"timestamp-offset":return A.fromReaderAsTimeStampOffset(this.readAttribute(e,!1));case"date":case"esriFieldTypeDate":return this.autocastArcadeDate(e,this.readAttribute(e,!0));default:return this.readAttribute(e,!1)}for(const i of this._joined)if(i.setIndex(this.getIndex()),t=i.fields.get(e),t)switch(t.type){case"date-only":case"esriFieldTypeDateOnly":return X.fromReader(i._readAttribute(e,!1));case"time-only":case"esriFieldTypeTimeOnly":return J.fromReader(i._readAttribute(e,!1));case"esriFieldTypeTimestampOffset":case"timestamp-offset":return A.fromReaderAsTimeStampOffset(i._readAttribute(e,!1));case"date":case"esriFieldTypeDate":return this.autocastArcadeDate(e,i._readAttribute(e,!0));default:return this.readAttribute(e,!1)}throw new Error(`Field ${e} does not exist`)}setField(e,t){throw new Error("Unable to update feature attribute values, feature is readonly")}keys(){return this.fields.fields.map(e=>e.name)}castToText(e=!1){if(!e)return JSON.stringify(this.readLegacyFeatureForDisplay());const t=this.readLegacyFeatureForDisplay();if(!t)return JSON.stringify(null);const i={geometry:t.geometry,attributes:{...t.attributes??{}}};for(const s in i.attributes){const n=i.attributes[s];n instanceof Date&&(i.attributes[s]=n.getTime())}return JSON.stringify(i)}gdbVersion(){return null}fullSchema(){return this.metadata.arcadeSchema}castAsJson(e=null){return{attributes:this._readAttributes(),geometry:e?.keepGeometryType===!0?this.geometry():this.geometry()?.toJSON()??null}}castAsJsonAsync(e=null,t=null){return Promise.resolve(this.castAsJson(t))}_getExists(){return this._deleted==null||!this._deleted.has(this.getIndex())}_computeDisplayCentroid(e){if(this.getInTransform()==null)return Ce(new C,e,this.hasM,this.hasZ);const t=Te.fromOptimized(e,this.geometryType);t.yFactor*=-1;const i=Fe(t);return i?(i[1]*=-1,new C([],i)):null}copyInto(e){e._joined=this._joined,e._deleted=this._deleted,e._objectIdToIndex=this._objectIdToIndex,e._boundsBuffer=this._boundsBuffer,e._activeCache=this._activeCache,e._caches=this._caches,e._contextTimeZone=this._contextTimeZone}_readLegacyGeometryWorldSpace(){const e=this.readGeometryWorldSpace();return k(e,this.geometryType,!1,!1)}_createGeometryFromServerCentroid(){const e=this._readServerCentroid();if(!e)return null;const[t,i]=e.coords;return this._createQuantizedExtrudedGeometry(t,i)}_createQuantizedExtrudedGeometry(e,t){return this.geometryType==="esriGeometryPolyline"?this._createQuantizedExtrudedLine(e,t):this._createQuantizedExtrudedQuad(e,t)}_createQuantizedExtrudedQuad(e,t){return new C([5],[e-1,t,1,-1,1,1,-1,1,-1,-1])}_createQuantizedExtrudedLine(e,t){return new C([2],[e-1,t+1,1,-1])}_removeAtIndex(e){this._deleted==null&&(this._deleted=B.create(this.getSize())),this._deleted.set(e)}}let tt=class extends T{constructor(r){super(),this._field=r}resize(r){throw new Error("Method not implemented.")}read(r,e){return r.readAttribute(this._field)}readWithDefault(r,e){return r.readAttribute(this._field)}referencesScale(){return!1}referencesGeometry(){return!1}},rt=class ie extends T{static async create(e,t){const i=await _e(e,t.spatialReference,t.fields),s=H(e);return new ie(i,s)}constructor(e,t){super(),this._compiled=e,this._cacheKey=t}resize(e){}read(e,t){return this.referencesScale()||t.$view.timeZone!=="system"?Q(this._compiled,e,t):this._readCached(e,t)}readWithDefault(e,t,i){return this.referencesScale()||t.$view.timeZone!=="system"?$(this._compiled,e,t,i):this._readWithDefaultCached(e,t,i)}referencesScale(){return this._compiled?.referencesScale()??!1}referencesGeometry(){return this._compiled?.referencesGeometry()??!1}_readCached(e,t){if(e.setCache(this._cacheKey),e.hasCachedValue())return e.getCachedValue();const i=Q(this._compiled,e,t);return e.setCachedValue(i),i}_readWithDefaultCached(e,t,i){if(e.setCache(this._cacheKey),e.hasCachedValue())return e.getCachedValue();const s=$(this._compiled,e,t,i);return e.setCachedValue(s),s}};function it(r,e){if(r==null)return"";const t=e.domain;if(t){if(t.type==="codedValue"||t.type==="coded-value"){const s=r;for(const n of t.codedValues)if(n.code===s)return n.name}else if(t.type==="range"){const{max:s,min:n}=fe(e),a=+r;if(n!=null&&s!=null&&n<=a&&a<=s)return t.name}}let i=r;return pe(e)?i=ye(i,me("short-date")):ge(e)&&(i=be(+i)),i||""}let st=class se extends T{static async create(e,t){const i=De(e);return new se(s=>i.replaceAll(/{[^}]*}/g,n=>{const a=n.slice(1,-1),o=s.metadata.fieldsIndex.get(a);if(o==null)return n;const h=s.readAttribute(a);return h==null?"":it(h,o)}))}constructor(e){super(),this._evaluator=e}resize(e){}read(e,t){return this._evaluator(e)}readWithDefault(e,t,i){const s=this._evaluator(e);return L(s)?i:s}referencesScale(){return!1}referencesGeometry(){return!1}};class nt extends T{constructor(e,t){super(),this._field=e,this._normalizationInfo=t}resize(e){throw new Error("Method not implemented.")}read(e,t){return this._readNormalized(e)}readWithDefault(e,t){return this._readNormalized(e)}referencesScale(){return!1}referencesGeometry(){return!1}_readNormalized(e){const t=e.readAttribute(this._field);if(t==null)return null;const{normalizationField:i,normalizationTotal:s,normalizationType:n}=this._normalizationInfo,a=e.readAttribute(i);switch(n??"esriNormalizeByField"){case"esriNormalizeByField":return a?a?t/a:void 0:null;case"esriNormalizeByLog":return Math.log(t)*Math.LOG10E;case"esriNormalizeByPercentOfTotal":return s?t/s*100:null}}}const U=()=>I.getLogger("esri.views.2d.layers.features.support.whereUtils"),at={getAttribute:(r,e)=>r.readAttribute(e)};async function te(r,e){try{const t=await xe(r,e);if(!t.isStandardized){const i=new w("mapview - bad input","Unable to apply filter's definition expression, as expression is not standardized.",t);U().error(i)}return i=>{const s=i.readArcadeFeature();try{return t.testFeature(s,at)}catch{return U().warn("mapview-bad-where-clause","Encountered an error when evaluating where clause",r),!0}}}catch{return U().warn("mapview-bad-where-clause","Encountered an error when evaluating where clause",r),t=>!0}}const re=()=>I.getLogger("esri.views.2d.layers.features.support.ComputedAttributeStorage"),b=4294967295;function M(r,e,t){if(!(r.length>e))for(;r.length<=e;)r.push(t)}let ot=class{constructor(r){this._numerics=[],this._strings=[],this._allocatedSize=256,this._bitsets=[],this._instanceIds=[],this._bounds=[],this._dirtyBitset=this.getBitset(this.createBitset()),this.compilationOptions=r}createBitset(){const r=this._bitsets.length;return this._bitsets.push(B.create(this._allocatedSize,c)),r+1}async createComputedField(r,e=!1){if(r.expression)try{if(!this.compilationOptions)throw new Error("InternalError: Compilation options not defined");return e?await st.create(r.expression,this.compilationOptions):await rt.create(r.expression,this.compilationOptions)}catch(i){const s=new w("featurelayer","Failed to compile arcade expression",{error:i,expression:r.expression});return re().error(s),null}if(r.normalizationType||r.normalizationField)return new nt(r.field,r);if(r.field)return new tt(r.field);const t=new w("featurelayer","Unable to create computed field. No expression or field found",{info:r});return re().error(t),null}async createWhereClause(r){return r?te(r,this.compilationOptions.fields):null}getBitset(r){return this._bitsets[r-1]}getComputedNumeric(r,e){return this.getComputedNumericAtIndex(r&c,0)}setComputedNumeric(r,e,t){return this.setComputedNumericAtIndex(r&c,t,0)}getComputedString(r,e){return this.getComputedStringAtIndex(r&c,0)}setComputedString(r,e,t){return this.setComputedStringAtIndex(r&c,0,t)}getComputedNumericAtIndex(r,e){const t=r&c;return this._ensureNumeric(e,t),this._numerics[e][t]}setComputedNumericAtIndex(r,e,t){const i=r&c;this._ensureNumeric(e,i),this._numerics[e][i]=t}getPackedChunkId(r){const e=r&c;return this._ensureInstanceId(e),this._instanceIds[e]}setPackedChunkId(r,e){const t=r&c;this._ensureInstanceId(t),this._instanceIds[t]=e}getComputedStringAtIndex(r,e){const t=r&c;return this._ensureString(e,t),this._strings[e][t]}setComputedStringAtIndex(r,e,t){const i=r&c;this._ensureString(e,i),this._strings[e][i]=t}getXMin(r){return this._bounds[4*(r&c)]}getYMin(r){return this._bounds[4*(r&c)+1]}getXMax(r){return this._bounds[4*(r&c)+2]}getYMax(r){return this._bounds[4*(r&c)+3]}setBounds(r,e,t=!1){const i=r&c;if(!t&&!this._dirtyBitset.has(r))return this._bounds[4*i]!==b;this._dirtyBitset.unset(r);const s=e.readGeometryWorldSpace();if(M(this._bounds,4*i+4,0),!s||!s.coords.length)return this._bounds[4*i]=b,this._bounds[4*i+1]=b,this._bounds[4*i+2]=b,this._bounds[4*i+3]=b,!1;let n=1/0,a=1/0,o=-1/0,h=-1/0;return s.forEachVertex((d,u)=>{n=Math.min(n,d),a=Math.min(a,u),o=Math.max(o,d),h=Math.max(h,u)}),this._bounds[4*i]=n,this._bounds[4*i+1]=a,this._bounds[4*i+2]=o,this._bounds[4*i+3]=h,!0}getBounds(r,e){const t=this.getXMin(e),i=this.getYMin(e),s=this.getXMax(e),n=this.getYMax(e);return j(r,t,i,s,n),t!==b}_ensureNumeric(r,e){this._numerics[r]||(this._numerics[r]=[]),M(this._numerics[r],e,0)}_ensureInstanceId(r){M(this._instanceIds,r,0)}_ensureString(r,e){this._strings[r]||(this._strings[r]=[]),M(this._strings[r],e,null)}},O=class{getObjectId(r){return r.getObjectId()}getAttributes(r){return r.readAttributes()}getAttribute(r,e){return r.readAttribute(e)}getAttributeAsTimestamp(r,e){return r.readAttributeAsTimestamp(e)}cloneWithGeometry(r,e){return r}getGeometry(r){return r.readGeometryWorldSpace()}getCentroid(r,e){return r.readCentroidForDisplay()}};O.Shared=new O;const F=1,ht=2;class G{constructor(e){this._geometryBounds=Ie(),this._idToVisibility=new Map,this._serviceInfo=e}static async create(e){const t=new G(e);return await t.update(e.filterJSON,e.spatialReference),t}get hash(){return this._hash}check(e){return this._applyFilter(e)}clear(){const e=this._resetAllHiddenIds();return this.update(),{show:e,hide:[]}}invalidate(){this._idToVisibility.forEach((e,t)=>{this._idToVisibility.set(t,0)})}setKnownIds(e){for(const t of e)this._idToVisibility.set(t,F)}setTrue(e){const t=[],i=[],s=new Set(e);return this._idToVisibility.forEach((n,a)=>{const o=!!(this._idToVisibility.get(a)&F),h=s.has(a);!o&&h?t.push(a):o&&!h&&i.push(a),this._idToVisibility.set(a,h?F|ht:0)}),{show:t,hide:i}}createQuery(){const{geometry:e,spatialRel:t,where:i,timeExtent:s,objectIds:n}=this;return Ge.fromJSON({geometry:e,spatialRel:t,where:i,timeExtent:s,objectIds:n})}async update(e,t){this._hash=JSON.stringify(e);const i=await Re(e,null,t);await Promise.all([this._setGeometryFilter(i),this._setIdFilter(i),this._setAttributeFilter(i),this._setTimeFilter(i)])}async _setAttributeFilter(e){if(!e?.where)return this._clause=null,void(this.where=null);this._clause=await te(e.where,this._serviceInfo.fieldsIndex),this.where=e.where}_setIdFilter(e){this._idsToShow=e?.objectIds&&new Set(e.objectIds),this._idsToHide=e?.hiddenIds&&new Set(e.hiddenIds),this.objectIds=e?.objectIds}async _setGeometryFilter(e){if(!e?.geometry)return this._spatialQueryOperator=null,this.geometry=null,void(this.spatialRel=null);const t=e.geometry,i=e.spatialRel||"esriSpatialRelIntersects",s=await ve(i,t,this._serviceInfo.geometryType,this._serviceInfo.hasZ,this._serviceInfo.hasM);we(this._geometryBounds,t),this._spatialQueryOperator=s,this.geometry=t,this.spatialRel=i}_setTimeFilter(e){if(this.timeExtent=this._timeOperator=null,e?.timeExtent)if(this._serviceInfo.timeInfo)this.timeExtent=e.timeExtent,this._timeOperator=ze(this._serviceInfo.timeInfo,e.timeExtent,O.Shared);else{const t=new w("feature-layer-view:time-filter-not-available","Unable to apply time filter, as layer doesn't have time metadata.",e.timeExtent);I.getLogger("esri.views.2d.layers.features.controllers.FeatureFilter").error(t)}}_applyFilter(e){return this._filterByGeometry(e)&&this._filterById(e)&&this._filterByTime(e)&&this._filterByExpression(e)}_filterByExpression(e){return!this.where||this._clause(e)}_filterById(e){return(!this._idsToHide?.size||!this._idsToHide.has(e.getObjectId()))&&(!this._idsToShow?.size||this._idsToShow.has(e.getObjectId()))}_filterByGeometry(e){if(!this.geometry)return!0;const t=e.readGeometryWorldSpace();return!!t&&this._spatialQueryOperator(t)}_filterByTime(e){return this._timeOperator==null||this._timeOperator(e)}_resetAllHiddenIds(){const e=[];return this._idToVisibility.forEach((t,i)=>{t&F||(this._idToVisibility.set(i,F),e.push(i))}),e}}class E{static minimal(e,t,i=[]){return new E({geometryType:e,fieldsIndex:new N(i).toJSON(),objectIdField:t,subtypes:null,subtypeField:null,types:null,globalIdField:null,spatialReference:null,timeInfo:null,timeReferenceUnknownClient:null,typeIdField:null})}static createFeature(e){return new E(e)}constructor(e){this._options=e,this._fieldsIndex=N.fromJSON(e.fieldsIndex),e.spatialReference&&(this._spatialReference=Se.fromJSON(e.spatialReference)),this._arcadeSchema={fields:this.fieldsIndex.fields,fieldsIndex:this.fieldsIndex,geometryType:this.geometryType,objectIdField:this.objectIdField,globalIdField:this._options.globalIdField,spatialReference:this._spatialReference,timeInfo:this._options.timeInfo,typeIdField:this._options.typeIdField??void 0,types:this._options.types??void 0,subtypeField:this._options.subtypeField,subtypes:this._options.subtypes??void 0}}get fieldsIndex(){return this._fieldsIndex}get geometryType(){return this._options.geometryType==="esriGeometryMultiPatch"?"esriGeometryPolygon":this._options.geometryType}get serviceGeometryType(){return this._options.geometryType}get subtypeField(){return this._options.subtypeField}get timeInfo(){return this._options.timeInfo}get objectIdField(){return this._options.objectIdField}get globalIdField(){return this._options.globalIdField}get arcadeSchema(){return this._arcadeSchema}get spatialReference(){return this._spatialReference}get timeReferenceUnknownClient(){return this._options.timeReferenceUnknownClient}}let ut=class ne extends E{static createGraphics(e){return new ne({fieldsIndex:new N().toJSON(),objectIdField:"uid",geometryType:null,spatialReference:e,globalIdField:null,subtypeField:null,subtypes:null,timeInfo:null,typeIdField:null,types:null,timeReferenceUnknownClient:null})}};const dt=(r,e)=>()=>null,lt=!1;class ct{constructor(e){this.data=e,this._referenceCount=0}increment(){this._referenceCount+=1}decrement(){this._referenceCount-=1}empty(){return this._referenceCount===0}}class _t{constructor(){this._freeIdsGenerationA=[],this._freeIdsGenerationB=[],this._idCounter=1,this._freeIds=this._freeIdsGenerationA,this._objectIdToDisplayId=new Map}createIdForObjectId(e){let t=this._objectIdToDisplayId.get(e);return t?t.increment():(t=new ct(Ee(this._getFreeId(),!1)),t.increment(),this._objectIdToDisplayId.set(e,t)),t.data}releaseIdForObjectId(e){const t=this._objectIdToDisplayId.get(e);t&&(t.decrement(),t.empty()&&(this._objectIdToDisplayId.delete(e),this._freeIds.push(t.data)))}getDisplayIdForObjectId(e){const t=this._objectIdToDisplayId.get(e);return t!=null?t.data:null}releaseAll(){for(const e of this._objectIdToDisplayId.values())this._freeIds.push(e.data);this._objectIdToDisplayId.clear()}incrementGeneration(){this._freeIds=this._freeIds===this._freeIdsGenerationA?this._freeIdsGenerationB:this._freeIdsGenerationA}_getFreeId(){return this._freeIds.length?this._freeIds.pop():this._idCounter++}}function ft(r,e){if(!r||!e)return r;switch(e){case"radius":case"distance":return 2*r;case"diameter":case"width":return r;case"area":return Math.sqrt(r)}return r}const Y=()=>I.getLogger("esri.views.layers.2d.features.support.AttributeStore"),pt=dt(lt,Y());m("esri-shared-array-buffer"),m("esri-atomics");class yt{constructor(e,t,i){this.size=0,this.texelSize=4,this.dirtyStart=0,this.dirtyEnd=0;const{pixelType:s,layout:n,textureOnly:a}=t;this.textureOnly=a||!1,this.pixelType=s,this.layout=n,this._resetRange(),this.size=e,this.isLocal=i,a||(this.data=this._initData(s,e))}get buffer(){return this.data?.buffer}unsetComponentAllTexels(e,t){const i=this.data;for(let s=0;s<this.size*this.size;s++)i[s*this.texelSize+e]&=~t;this.dirtyStart=0,this.dirtyEnd=this.size*this.size-1}setComponentAllTexels(e,t){const i=this.data;for(let s=0;s<this.size*this.size;s++)i[s*this.texelSize+e]|=255&t;this.dirtyStart=0,this.dirtyEnd=this.size*this.size-1}setComponent(e,t,i){const s=this.data;for(const n of i)s[n*this.texelSize+e]|=t,this.dirtyStart=Math.min(this.dirtyStart,n),this.dirtyEnd=Math.max(this.dirtyEnd,n)}setComponentTexel(e,t,i){this.data[i*this.texelSize+e]|=t,this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,i)}unsetComponentTexel(e,t,i){this.data[i*this.texelSize+e]&=~t,this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,i)}getData(e,t){const i=g(e);return this.data[i*this.texelSize+t]}setData(e,t,i){const s=g(e),n=1<<t;this.layout&n?this.data!=null&&(this.data[s*this.texelSize+t]=i,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s)):Y().error("mapview-attributes-store","Tried to set a value for a texel's readonly component")}expand(e){if(this.size=e,!this.textureOnly){const t=this._initData(this.pixelType,e),i=this.data;t.set(i),this.data=t}}toMessage(){const e=this.dirtyStart,t=this.dirtyEnd,i=this.texelSize;if(e>t)return null;this._resetRange();const s=!this.isLocal,n=this.pixelType,a=this.layout,o=this.data;return{start:e,end:t,data:s&&o.slice(e*i,(t+1)*i)||null,pixelType:n,layout:a}}_initData(e,t){const i=ArrayBuffer,s=he(e),n=new s(new i(t*t*4*s.BYTES_PER_ELEMENT));for(let a=0;a<n.length;a+=4)n[a+1]=255;return n}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}}class mt{constructor(e){this._client=e,this._filters=[],this._blocks=new Array,this._attributeComputeInfo=null,this._abortController=new AbortController,this._size=Oe,this._idsToHighlight=new Map,this._referencesScale=!1,this._referencesGeometry=!1,this._initialized=!1,this.version=0,this._idGenerator=new _t,this._epoch=1}destroy(){this._abortController.abort()}_initialize(){if(this._blockDescriptors!=null)return;const e=S.FLOAT;this._blockDescriptors=[{pixelType:S.UNSIGNED_BYTE,layout:1},{pixelType:S.UNSIGNED_BYTE,layout:15,textureOnly:!0},{pixelType:S.UNSIGNED_BYTE,layout:15,textureOnly:!0},{pixelType:e,layout:15},{pixelType:e,layout:15},{pixelType:e,layout:15},{pixelType:e,layout:15},{pixelType:S.FLOAT,layout:15}],this._blocks=this._blockDescriptors.map(()=>null)}get referencesScale(){return this._referencesScale}get referencesGeometry(){return this._referencesGeometry}get hasHighlight(){return this._idsToHighlight.size>0}createDisplayIdForObjectId(e){return this._idGenerator.createIdForObjectId(e)}releaseDisplayIdForObjectId(e){return this._idGenerator.releaseIdForObjectId(e)}getDisplayIdForObjectId(e){return this._idGenerator.getDisplayIdForObjectId(e)}incrementDisplayIdGeneration(){this._idGenerator.incrementGeneration()}releaseAllIds(){this._idGenerator.releaseAll()}async update(e,t,i,s,n=0){const a=Me(this._schema,e);if(this.version=n,a&&(m("esri-2d-update-debug")&&console.debug(`Version[${n}] AttributeStore.update`,{changed:a}),this._schema=e,this._attributeComputeInfo=null,this._initialize(),e!=null))if(i&&(this._filters=await Promise.all(e.filters.map(o=>o?G.create({geometryType:i.geometryType,hasM:!1,hasZ:!1,timeInfo:i.timeInfo,fieldsIndex:i.fieldsIndex,spatialReference:s??i.spatialReference,filterJSON:o}):null))),e.type!=="subtype")this._attributeComputeInfo={isSubtype:!1,map:new Map},await Promise.all(e.bindings.map(async o=>{const h=await this._bind(t,o);this._referencesGeometry=this._referencesGeometry||(h?.referencesGeometry()??!1),this._referencesScale=this._referencesScale||(h?.referencesScale()??!1)}));else{this._attributeComputeInfo={isSubtype:!0,subtypeField:e.subtypeField,map:new Map},this._referencesScale=!1,this._referencesGeometry=!1;for(const o in e.bindings){const h=e.bindings[o];await Promise.all(h.map(async d=>{const u=await this._bind(t,d,parseInt(o,10));this._referencesGeometry=this._referencesGeometry||(u?.referencesGeometry()??!1),this._referencesScale=this._referencesScale||(u?.referencesScale()??!1)}))}}}setHighlight(e,t){const i=this._getBlock(0);i.unsetComponentAllTexels(0,(1<<W)-1);for(const{displayId:s,highlightFlags:n}of e){if(s==null)continue;const a=g(s);i.setComponent(0,n,[a])}this._idsToHighlight.clear();for(const{objectId:s,highlightFlags:n}of e)this._idsToHighlight.set(s,n);for(const{objectId:s,highlightFlags:n}of t)this._idsToHighlight.set(s,n)}setData(e,t,i,s){const n=g(e);this._ensureSizeForTexel(n),this._getBlock(t).setData(e,i,s)}getData(e,t,i){return this._getBlock(t).getData(e,i)}getHighlightFlags(e){return this._idsToHighlight.get(e)||0}unsetAttributeData(e){const t=g(e);this._getBlock(0).setData(t,0,0)}setAttributeData(e,t,i){const s=g(e);this._ensureSizeForTexel(s),this._getBlock(0).setData(s,0,this.getFilterFlags(t));const n=this._attributeComputeInfo,a=1,o=4;let h=null;n&&(h=n.isSubtype?n.map.get(t.readAttribute(n.subtypeField)):n.map,h?.size&&h.forEach((d,u)=>{const p=u*a%o,y=Math.floor(u*a/o),x=this._getBlock(y+v.VV);let f=d.field?.read(t,i);d.valueRepresentation&&(f=ft(f,d.valueRepresentation)),(f===null||isNaN(f)||f===1/0||f===-1/0)&&(f=Ae),x.setData(s,p,f)}))}get epoch(){return this._epoch}sendUpdates(){const e=this._blocks.map(i=>i!=null?i.toMessage():null),t=this._getInitArgs();m("esri-2d-log-updating")&&console.log("AttributeStore: _doSendUpdate.start"),this._client.update({initArgs:t,blockData:e,version:this.version,sendUpdateEpoch:this._epoch}),this._epoch+=1,m("esri-2d-log-updating")&&console.log("AttributeStore: _doSendUpdate.end")}_ensureSizeForTexel(e){for(;e>=this._size*this._size;)if(this._expand())return}async _bind(e,t,i){const s=await e.createComputedField(t),{valueRepresentation:n}=t,a=this._attributeComputeInfo;if(a.isSubtype){const o=a.map.get(i)??new Map;o.set(t.binding,{field:s,valueRepresentation:n}),a.map.set(i,o)}else a.map.set(t.binding,{field:s,valueRepresentation:n});return s}_getInitArgs(){return this._initialized?null:(this._initialized=!0,this._getBlock(v.Animation),this._getBlock(v.GPGPU),this._getBlock(v.LocalTimeOrigin),{blockSize:this._size,blockDescriptors:this._blocks.map(e=>e!=null?{textureOnly:e.textureOnly,buffer:e.buffer,pixelType:e.pixelType}:null)})}_getBlock(e){const t=this._blocks[e];if(t!=null)return t;const i=new yt(this._size,this._blockDescriptors[e],this._client.isLocal);return this._blocks[e]=i,this._initialized=!1,i}_expand(){if(this._size<this._schema.capabilities.maxTextureSize){const e=this._size<<=1;pt("Expanding block size to",e,this._blocks);for(const t of this._blocks)t?.expand(e);return this._initialized=!1,this._size=e,0}return Y().error(new w("mapview-limitations","Maximum number of onscreen features exceeded.")),-1}isVisible(e){return!!(this._getBlock(0).getData(e,0)&1<<W)}getFilterFlags(e){let t=0;for(let s=0;s<this._filters.length;s++){const n=!!(1<<s),a=this._filters[s];t|=(!n||a==null||a.check(e)?1:0)<<s}let i=0;if(this._idsToHighlight.size){const s=e.getObjectId();i=this.getHighlightFlags(s)}return t<<W|i}}export{et as M,We as a,mt as b,T as c,L as d,G as e,q as f,O as g,E as i,ut as n,ot as p,Pe as s,B as t};
