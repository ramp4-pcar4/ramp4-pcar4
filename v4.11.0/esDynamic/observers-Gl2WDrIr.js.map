{"version":3,"file":"observers-Gl2WDrIr.js","sources":["../../node_modules/@esri/calcite-components/dist/components/observers.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.13.2\n */\nimport { i as isBrowser } from './browser.js';\n\n/**\n * This utility ensures observers are created only for browser contexts.\n *\n * @param type - the type of observer to create\n * @param callback - the observer callback\n * @param options - the observer options\n */\nfunction createObserver(type, callback, options) {\n    if (!isBrowser()) {\n        return undefined;\n    }\n    const Observer = getObserver(type);\n    return new Observer(callback, options);\n}\nfunction getObserver(type) {\n    // based on https://github.com/whatwg/dom/issues/126#issuecomment-1049814948\n    class ExtendedMutationObserver extends window.MutationObserver {\n        constructor(callback) {\n            super(callback);\n            this.observedEntry = [];\n            this.callback = callback;\n        }\n        observe(target, options) {\n            this.observedEntry.push({ target, options });\n            return super.observe(target, options);\n        }\n        unobserve(target) {\n            const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);\n            this.observedEntry = [];\n            this.callback(super.takeRecords(), this);\n            this.disconnect();\n            newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));\n        }\n    }\n    return (function () {\n        return (type === \"intersection\"\n            ? window.IntersectionObserver\n            : type === \"mutation\"\n                ? ExtendedMutationObserver\n                : window.ResizeObserver);\n    })();\n}\n\nexport { createObserver as c };\n\n//# sourceMappingURL=observers.js.map"],"names":["createObserver","type","callback","options","isBrowser","Observer","getObserver","ExtendedMutationObserver","target","newObservedEntries","observed"],"mappings":";AAcA,SAASA,EAAeC,GAAMC,GAAUC,GAAS;AAC7C,MAAI,CAACC,EAAS;AACV;AAEJ,QAAMC,IAAWC,EAAYL,CAAI;AACjC,SAAO,IAAII,EAASH,GAAUC,CAAO;AACzC;AACA,SAASG,EAAYL,GAAM;AAAA,EAEvB,MAAMM,UAAiC,OAAO,iBAAiB;AAAA,IAC3D,YAAYL,GAAU;AAClB,YAAMA,CAAQ,GACd,KAAK,gBAAgB,CAAE,GACvB,KAAK,WAAWA;AAAA,IAC5B;AAAA,IACQ,QAAQM,GAAQL,GAAS;AACrB,kBAAK,cAAc,KAAK,EAAE,QAAAK,GAAQ,SAAAL,EAAO,CAAE,GACpC,MAAM,QAAQK,GAAQL,CAAO;AAAA,IAChD;AAAA,IACQ,UAAUK,GAAQ;AACd,YAAMC,IAAqB,KAAK,cAAc,OAAO,CAACC,MAAaA,EAAS,WAAWF,CAAM;AAC7F,WAAK,gBAAgB,CAAE,GACvB,KAAK,SAAS,MAAM,YAAW,GAAI,IAAI,GACvC,KAAK,WAAY,GACjBC,EAAmB,QAAQ,CAACC,MAAa,KAAK,QAAQA,EAAS,QAAQA,EAAS,OAAO,CAAC;AAAA,IACpG;AAAA,EACA;AACI,SAAQ,WAAY;AAChB,WAAQT,MAAS,iBACX,OAAO,uBACPA,MAAS,aACLM,IACA,OAAO;AAAA,EACzB,EAAQ;AACR;","x_google_ignoreList":[0]}