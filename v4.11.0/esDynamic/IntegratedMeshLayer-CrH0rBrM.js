import{k as i,o as r,bC as v,q as I,A as d,v as x,z as L,f as N,d9 as R,V as b,I as M,U as A,aG as J,p as V,G as j,s as c,n as S,u as D,az as E}from"./main-I34c1W55.js";import{S as U}from"./MultiOriginJSONSupport-DsYvNMb2.js";import{j as m}from"./persistable-Tla5PeX5.js";import{f as K}from"./Layer-CYh3Ux8v.js";import{i as P}from"./APIKeyMixin-QZjXDE8U.js";import{l as z}from"./ArcGISService-BY6uXmrc.js";import{e as G}from"./CustomParametersMixin-C1rOrKc_.js";import{b as k}from"./OperationalLayer-DhLn_F27.js";import{j as q}from"./PortalLayer-BC1AAJpi.js";import{t as C}from"./ScaleRangeLayer-kD9VKvAo.js";import{R as F,V as w}from"./SceneService-6CE90F3z.js";import{c as H}from"./commonProperties-s5Ra1orv.js";import{p as Z,a as $,y as B,m as Q}from"./I3SLayerDefinitions-ct4r2jaN.js";import{J as W,a as X}from"./projection-CWCxBqta.js";import{$ as T,Z as Y,w as ee}from"./elevationInfoUtils-DHjfhxT_.js";var f;let n=f=class extends x{constructor(e){super(e),this.geometry=null,this.type="clip"}writeGeometry(e,t,s,a){if(a.layer?.spatialReference&&!a.layer.spatialReference.equals(this.geometry.spatialReference)){if(!W(e.spatialReference,a.layer.spatialReference))return void(a?.messages&&a.messages.push(new L("scenemodification:unsupported","Scene modifications with incompatible spatial references are not supported",{modification:this,spatialReference:a.layer.spatialReference,context:a})));const l=new v;X(e,l,a.layer.spatialReference),t[s]=l.toJSON(a)}else t[s]=e.toJSON(a);delete t[s].spatialReference}clone(){return new f({geometry:N(this.geometry),type:this.type})}};i([r({type:v}),m()],n.prototype,"geometry",void 0),i([I(["web-scene","portal-item"],"geometry")],n.prototype,"writeGeometry",null),i([r({type:["clip","mask","replace"],nonNullable:!0}),m()],n.prototype,"type",void 0),n=f=i([d("esri.layers.support.SceneModification")],n);const h=n;var p;let y=p=class extends R(b.ofType(h)){constructor(e){super(e),this.url=null}clone(){return new p({url:this.url,items:this.items.map(e=>e.clone())})}toJSON(e){return this.toArray().map(t=>t.toJSON(e)).filter(t=>!!t.geometry)}static fromJSON(e,t){const s=new p;for(const a of e)s.add(h.fromJSON(a,t));return s}static async fromUrl(e,t,s){const a={url:M(e),origin:"service"},l=await A(e,{responseType:"json",signal:s?.signal}),O=t.toJSON(),u=[];for(const g of l.data)u.push(h.fromJSON({...g,geometry:{...g.geometry,spatialReference:O}},a));return new p({url:e,items:u})}};i([r({type:String})],y.prototype,"url",void 0),y=p=i([d("esri.layers.support.SceneModifications")],y);const _=y;let o=class extends F(z(k(q(C(U(G(P(K)))))))){constructor(...e){super(...e),this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.path=null,this.definitionExpression=null}initialize(){this.addHandles(J(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,E))}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}readModifications(e,t,s){this._modificationsSource={url:V(e,s),context:s}}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const t=e?.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(s){j(s)}if(await this._fetchService(t),this._modificationsSource!=null){const s=await _.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",s,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,t)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}async saveAs(e,t){return this._debouncedSaveOperations(w.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(w.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new c("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new c("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new c("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}_validateElevationInfo(){const e=this.elevationInfo,t="Integrated mesh layers";T(S.getLogger(this),Y(t,"absolute-height",e)),T(S.getLogger(this),ee(t,e))}};i([r({type:String,readOnly:!0})],o.prototype,"geometryType",void 0),i([r({type:["show","hide"]})],o.prototype,"listMode",void 0),i([r({type:["IntegratedMeshLayer"]})],o.prototype,"operationalLayerType",void 0),i([r({json:{read:!1},readOnly:!0})],o.prototype,"type",void 0),i([r({type:Z,readOnly:!0})],o.prototype,"nodePages",void 0),i([r({type:[$],readOnly:!0})],o.prototype,"materialDefinitions",void 0),i([r({type:[B],readOnly:!0})],o.prototype,"textureSetDefinitions",void 0),i([r({type:[Q],readOnly:!0})],o.prototype,"geometryDefinitions",void 0),i([r({readOnly:!0})],o.prototype,"serviceUpdateTimeStamp",void 0),i([r({type:_}),m({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],o.prototype,"modifications",void 0),i([D(["web-scene","portal-item"],"modifications")],o.prototype,"readModifications",null),i([r(H)],o.prototype,"elevationInfo",null),i([r({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],o.prototype,"path",void 0),o=i([d("esri.layers.IntegratedMeshLayer")],o);const te=o;export{te as default};
