const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./editingSupport-BxXQ3zXQ.js","./main-7nqzKo04.js","./preload-helper-ExcqyqRp.js","./main-gKmidBZg.css","./uuid-Cl5lrJ4c.js","./normalizeUtils-Bz4pPiym.js","./normalizeUtilsCommon-BDljxOu-.js","./utils-BZ-awri-.js","./utils-RBj55bRD.js","./EditBusLayer-Je_NmJeB.js","./infoFor3D-_5f2f6Um.js"])))=>i.map(i=>d[i]);
import{_ as Z}from"./preload-helper-ExcqyqRp.js";import{q as i,u as s,C as b,A as D,a$ as N,dc as te,V as q,bF as j,B as C,z as v,aI as re,aB as ie,p as se,U as B,h as oe,s as d,a1 as ae,b0 as ne,E as le,f3 as V,n as f,J as pe,hQ as de,b3 as ue,bx as ce,bh as G,bo as A,H as ye,f5 as me,hw as he,b6 as fe}from"./main-7nqzKo04.js";import"./UniqueValueRenderer-_2Kx4xvv.js";import{u as ge}from"./jsonUtils-mVpZRL__.js";import{S as ve}from"./MultiOriginJSONSupport-B6J-W59E.js";import{$ as we}from"./Mesh-C0y_xhuK.js";import{f as be}from"./Layer-Bmiqc_vS.js";import{i as Ie,m as Le,t as Fe}from"./meshSpatialReferenceScaleUtils-DhiLE3Mr.js";import{i as Se}from"./APIKeyMixin-BwA5VRSm.js";import{l as _e}from"./ArcGISService-BlFEeojs.js";import{e as Te}from"./CustomParametersMixin-COQliALH.js";import{F as $e}from"./EditBusLayer-Je_NmJeB.js";import{b as Oe}from"./OperationalLayer-Ced0SM8k.js";import{j as Ee}from"./PortalLayer-asxaaElk.js";import{t as xe}from"./ScaleRangeLayer-3rKl-Gjx.js";import{R as je,V as Q}from"./SceneService-D9q_pftR.js";import{f as Ae}from"./TemporalLayer-D8TYMwyL.js";import{d as k,l as Pe}from"./TimeInfo-Cv4_eppp.js";import{p as z}from"./TimeExtent-LauUhoJg.js";import{g as J}from"./arcgisLayerUrl-Bgq-0hIo.js";import{s as Re}from"./associatedFeatureServiceUtils-CsEbJRKw.js";import{t as De}from"./capabilities-Y9lFlGVh.js";import{c as qe,p as Ue,d as Ne,l as Ce,s as Ve}from"./commonProperties-DUIuHWjS.js";import{Z as Ge,K as Qe}from"./featureLayerUtils-wUcBUaNv.js";import{t as ke,p as ze}from"./FeatureReductionSelection-CpkwMTOq.js";import{s as Je}from"./fieldProperties-7n8lORk7.js";import{Z as Ke}from"./FieldsIndex-Ba_LhL6O.js";import{p as X,a as He,y as Me,m as We}from"./I3SLayerDefinitions-Cy61zfVq.js";import{r as Ze,n as Be}from"./infoFor3D-_5f2f6Um.js";import{C as Xe,n as K}from"./labelingInfo-CHneWRo9.js";import{p as Ye}from"./LayerFloorInfo-BQsqeWMF.js";import{b as et}from"./fetchService-oDmqtW58.js";import{j as tt}from"./persistable-D6on4_AH.js";import{J as rt,a as it}from"./projection-uWASLutg.js";import{t as st}from"./styleUtils-BGOBxvVr.js";import{b as ot}from"./Query-BotaYlLX.js";import{$ as H,P as at,w as nt}from"./elevationInfoUtils-cAzYoNdj.js";import{p as lt}from"./popupUtils-Hc7lsAxF.js";import{V as pt}from"./I3SUtil-B80ebXax.js";import{n as dt,p as ut}from"./popupUtils-5dJU4CQD.js";import"./RendererLegendOptions-DWCNE36I.js";import"./diffUtils-DwXtBCa8.js";import"./colorRamps-ChyDqgUz.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./visualVariableUtils-CLocs99Y.js";import"./compilerUtils-DO1ngQxB.js";import"./lengthUtils-yTwjD6q3.js";import"./styleUtils-BpR5Pli9.js";import"./LRUCache-iH9TkhNf.js";import"./Version-DnrwVW-G.js";import"./OverrideHelper-DuVEcR-f.js";import"./colorUtils-ZVjV-Ek5.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-CMoMXWBi.js";import"./utils-QWndGYJy.js";import"./enums-CmIX1y88.js";import"./quantizationUtils-C6YmP8ac.js";import"./heatmapUtils-Dz1PGT5-.js";import"./MeshTransform-BSItKOqI.js";import"./mat4-gnzTYV35.js";import"./mat4f64-CSKppSlJ.js";import"./quat-CleT4LJE.js";import"./mat3f64-q3fE-ZOt.js";import"./quatf64-aQ5IuZRd.js";import"./vec32-CjC8RzUk.js";import"./imageUtils-DlC2iV_P.js";import"./MeshVertexAttributes-DExMhqYN.js";import"./MeshLocalVertexSpace-CziZVD61.js";import"./meshVertexSpaceUtils-BBVcvx89.js";import"./earcut-Lltz9D9k.js";import"./Indices-V1_TBF1v.js";import"./plane-Co1DowrI.js";import"./vec2f64-B7N_6o8F.js";import"./deduplicate-Co0orLrf.js";import"./projectPointToVector-CKURiqCv.js";import"./projectBuffer-DohnbaJT.js";import"./vertexSpaceConversion-DD-XGgCz.js";import"./mat3-XZDRtl20.js";import"./spatialReferenceEllipsoidUtils-IAMY6K9E.js";import"./computeTranslationToOriginAndRotation-D1O1Eq5q.js";import"./vec3-MkwdWpHy.js";import"./BufferView-DXA3kVqA.js";import"./vec2-DGVIkCvT.js";import"./vec4-Dvpeczky.js";import"./External-DEFtuBem.js";import"./uuid-Cl5lrJ4c.js";import"./PortalItem-CUJ-aEPg.js";import"./portalItemUtils-BrITqBoP.js";import"./originUtils-CPX8CCAY.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./HeightModelInfo-D_2KbXxu.js";import"./jsonContext-khEd6dAJ.js";import"./resourceUtils-mPFXM7hy.js";import"./resourceUtils-B_lnpnxt.js";import"./saveUtils-C9oLYb48.js";import"./ElevationInfo-BeK7kpCR.js";import"./Field-DlKE1Mj8.js";import"./fieldType-CmjutMKi.js";import"./RelationshipQuery-DFO14R8I.js";import"./UnknownTimeZone-BbXWTWnn.js";import"./labelUtils-Btnn7TmQ.js";import"./MD5-C9MwAd2G.js";import"./resourceExtension-D85gvlqV.js";import"./projectVectorToVector-Bm6LR8BY.js";import"./sphere-BAl2zY7R.js";import"./I3SBinaryReader-CHyJmWbQ.js";import"./VertexAttribute-BdZWZuT1.js";import"./floatRGBA-Bxahm3aW.js";import"./NormalAttribute.glsl-C1IYEbDh.js";import"./interfaces-DDtDqZYj.js";import"./BindType-BmZEZMMh.js";import"./orientedBoundingBox-BQPfV6fW.js";import"./ViewingMode-HRfKv6NR.js";function Y({associatedLayer:e,serviceUpdateTimeStamp:t}){const r=e?.editingInfo?.lastEditDate,a=e?.serverGens,n=r!=null,l=t!=null,p=n&&l&&t.lastUpdate!==r.getTime();return n&&(p||!l&&a?.minServerGen!==a?.serverGen)}const ct=e=>{let t=class extends e{constructor(){super(...arguments),this.serviceTimeInfo=null}get timeInfo(){const r=this.associatedLayer?.timeInfo;if(r==null)return null;const a=r.clone();return N(a,this.fieldsIndex),a}set timeInfo(r){N(r,this.fieldsIndex),this._override("timeInfo",r)}get timeExtent(){return this.associatedLayer?.timeExtent}set timeExtent(r){this._override("timeExtent",r)}get timeOffset(){return this.associatedLayer?.timeOffset}set timeOffset(r){this._override("timeOffset",r)}get datesInUnknownTimezone(){return this.associatedLayer?.datesInUnknownTimezone??!1}set datesInUnknownTimezone(r){this._override("datesInUnknownTimezone",r)}async loadTimeInfoFromService(r){const{serviceTimeInfo:a}=this;if(a==null)return;const{startTimeField:n,endTimeField:l}=a;if(n==null&&l==null||Y({associatedLayer:this.associatedLayer,serviceUpdateTimeStamp:this.serviceUpdateTimeStamp}))return;const p=async y=>{let h=null;try{h=(await this.fetchStatistics?.(y,r))?.stats}catch{}if(h==null)return null;const{minTimeStr:I,min:$,maxTimeStr:O,max:E}=h,F=y===n?I??$:O??E;return F!=null?new Date(F):null},[u,c]=await Promise.all([p(n),p(l)]);if(n!=null&&u==null||l!=null&&c==null)return;const m=new z({start:u,end:c});this.setAtOrigin("timeInfo",new k({endField:l,startField:n,fullTimeExtent:m}),"service")}};return i([s({type:k,json:{read:!1,write:!1}})],t.prototype,"timeInfo",null),i([s({type:z,json:{read:!1,write:!1}})],t.prototype,"timeExtent",null),i([s({type:Pe,json:{read:!1,write:!1}})],t.prototype,"timeOffset",null),i([s({type:Boolean,nonNullable:!0,json:{read:!1,write:!1}})],t.prototype,"datesInUnknownTimezone",null),i([s({type:L,readOnly:!0,json:{read:{source:"timeInfo"}}})],t.prototype,"serviceTimeInfo",void 0),t=i([b("esri.layers.mixins.TemporalSceneLayer")],t),t};let L=class extends D{constructor(){super(...arguments),this.endTimeField=null,this.startTimeField=null}};i([s({type:String})],L.prototype,"endTimeField",void 0),i([s({type:String})],L.prototype,"startTimeField",void 0),L=i([b("esri.layers.mixins.TemporalSceneLayer.SceneServiceTimeInfo")],L);let g=class extends D{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};i([s({type:String,json:{read:!0,write:!0}})],g.prototype,"name",void 0),i([s({type:String,json:{read:!0,write:!0}})],g.prototype,"field",void 0),i([s({type:[Number],json:{read:!0,write:!0}})],g.prototype,"currentRangeExtent",void 0),i([s({type:[Number],json:{read:!0,write:!0}})],g.prototype,"fullRangeExtent",void 0),i([s({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],g.prototype,"type",void 0),g=i([b("esri.layers.support.RangeInfo")],g);var _;let P=_=class extends te(q.ofType(j)){constructor(e){super(e)}clone(){return new _(this.items.map(e=>e.clone()))}write(e,t){return this.toJSON(t)}toJSON(e){const t=e?.layer?.spatialReference;return t?this.toArray().map(r=>{if(!t.equals(r.spatialReference)){if(!rt(r.spatialReference,t))return e?.messages?.push(new C("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const n=new j;it(r,n,t),r=n}const a=r.toJSON(e);return delete a.spatialReference,a}).filter(r=>r!=null):(e?.messages?.push(new C("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),this.toArray().map(r=>r.toJSON(e)))}static fromJSON(e,t){const r=new _;return e.forEach(a=>r.add(j.fromJSON(a,t))),r}};P=_=i([b("esri.layers.support.PolygonCollection")],P);const T=P;var R;let w=R=class extends D{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new T,this._geometriesSource=null}initialize(){this.addHandles(re(()=>this.geometries,"after-changes",()=>this.geometries=this.geometries,ie))}readGeometries(e,t,r){Array.isArray(e)?this.geometries=T.fromJSON(e,r):this._geometriesSource={url:se(e,r),context:r}}async loadGeometries(e,t){if(this._geometriesSource==null)return;const{url:r,context:a}=this._geometriesSource,n=await B(r,{responseType:"json",signal:t?.signal}),l=e.toJSON(),p=n.data.map(u=>({...u,spatialReference:l}));this.geometries=T.fromJSON(p,a),this._geometriesSource=null}clone(){const e=new R({geometries:oe(this.geometries),spatialRelationship:this.spatialRelationship});return e._geometriesSource=this._geometriesSource,e}};i([s({type:["disjoint","contains"],nonNullable:!0,json:{write:!0}})],w.prototype,"spatialRelationship",void 0),i([s({type:T,nonNullable:!0,json:{write:!0}}),tt({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries",contentAddressed:!0})],w.prototype,"geometries",void 0),i([v(["web-scene","portal-item"],"geometries")],w.prototype,"readGeometries",null),w=R=i([b("esri.layers.support.SceneFilter")],w);const yt=w;async function mt({fieldName:e,statisticsInfo:t,errorContext:r,fieldsIndex:a,path:n,customParameters:l,apiKey:p,signal:u}){if(t==null)throw new d(`${r}:no-cached-statistics`,"Cached statistics are not available for this layer");const c=a.get(e);if(c==null)throw new d(`${r}:field-unexisting`,`Field '${e}' does not exist on the layer`);const m=t.find(I=>I.name===c.name);if(m==null)throw new d(`${r}:no-cached-statistics`,"Cached statistics for this attribute are not available");const y=ae(n,m.href),{data:h}=await B(y,{query:{f:"json",...l,token:p},responseType:"json",signal:u});return h}async function ht(e){const t=[];for(const r of e)r.name.toLowerCase().endsWith(".zip")?t.push(ft(r)):t.push(Promise.resolve(r));return(await Promise.all(t)).flat()}async function ft(e){const{BlobReader:t,ZipReader:r,BlobWriter:a}=await Z(()=>import("./zipjs-wrapper-srAKUj3Q.js"),[],import.meta.url),n=[];return(await new r(new t(e)).getEntries()).forEach(p=>{if(p.directory||/^__MACOS/i.test(p.filename))return;const u=new a,c=p.getData?.(u).then(m=>new File([m],p.filename));c&&n.push(c)}),Promise.all(n)}const gt=new Set(["3DObject","Point"]),M=Je();let o=class extends ct($e(je(_e(Oe(Ee(xe(ve(Te(Se(ne(be))))))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new q,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0,this.serviceItemId=void 0}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}destroy(){this._set("renderer",null),this.associatedLayer=le(this.associatedLayer)}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){const r=this.getFeatureType(t?.feature)?.domains?.[e];return r&&r.type!=="inherited"?r:this.getField(e)?.domain??null}getFeatureType(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null}get types(){return this.associatedLayer?.types??[]}get typeIdField(){return this.associatedLayer?.typeIdField??null}get templates(){return this.associatedLayer?.templates??null}get formTemplate(){return this.associatedLayer?.formTemplate??null}get attributeTableTemplate(){return this.associatedLayer?.attributeTableTemplate??null}get fieldsIndex(){return new Ke(this.fields)}readNodePages(e,t,r){return t.layerType==="Point"&&(e=t.pointNodePages),e==null||typeof e!="object"?null:X.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get effectiveCapabilities(){return this._capabilitiesFromAssociatedFeatureLayer(this.associatedLayer?.effectiveCapabilities)}get effectiveEditingEnabled(){return this.associatedLayer!=null&&Ge(this.associatedLayer)}get geometryType(){return vt[this.profile]||"mesh"}set renderer(e){V(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return e!=null&&typeof e=="object"||(e={}),e.color==null&&(e.color=!1),e}get capabilities(){return this._capabilitiesFromAssociatedFeatureLayer(this.associatedLayer?.capabilities)}_capabilitiesFromAssociatedFeatureLayer(e){e=e??De;const{query:t,queryRelated:r,editing:{supportsGlobalId:a,supportsRollbackOnFailure:n,supportsUploadWithItemId:l,supportsGeometryUpdate:p,supportsReturnServiceEditsInSourceSpatialReference:u},data:{supportsZ:c,supportsM:m,isVersioned:y,supportsAttachment:h},operations:{supportsEditing:I,supportsAdd:$,supportsUpdate:O,supportsDelete:E,supportsQuery:F,supportsQueryAttachments:U,supportsAsyncConvert3D:ee}}=e,S=e.operations.supportsChangeTracking,x=!!this.associatedLayer?.infoFor3D;return{query:t,queryRelated:r,editing:{supportsGlobalId:a,supportsReturnServiceEditsInSourceSpatialReference:u,supportsRollbackOnFailure:n,supportsGeometryUpdate:x&&p,supportsUploadWithItemId:l},data:{supportsAttachment:h,supportsZ:c,supportsM:m,isVersioned:y},operations:{supportsQuery:F,supportsQueryAttachments:U,supportsEditing:I&&S,supportsAdd:x&&$&&S,supportsDelete:x&&E&&S,supportsUpdate:O&&S,supportsAsyncConvert3D:ee}}}get editingEnabled(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.associatedLayer?.editingEnabled??!1}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get infoFor3D(){return this.associatedLayer?.infoFor3D??null}get relationships(){return this.associatedLayer?.relationships}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some(r=>(r.type==="esriFieldTypeOID"&&(e=r.name),!!e)),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some(r=>(r.type==="esriFieldTypeGlobalID"&&(e=r.name),!!e)),e||void 0}get displayField(){return this.associatedLayer?.displayField??null}readProfile(e,t){const r=t.store.profile;return r!=null&&W[r]?W[r]:(f.getLogger(this).error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}get useViewTime(){return this.associatedLayer?.useViewTime??!0}set useViewTime(e){this._override("useViewTime",e)}load(e){return this.addResolvingPromise(this._load(e)),Promise.resolve(this)}async _load(e){const t=e!=null?e.signal:null;await this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(pe),await this._fetchService(t),await Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t),this._loadFilterGeometries()]),this._validateElevationInfo(),this._applyAssociatedLayerOverrides(),this._populateFieldUsageInfo(),await this.loadTimeInfoFromService(e),await st(this,{origin:"service"},t),V(this.renderer,this.fieldsIndex),await this.finishLoadEditablePortalLayer(e)}async beforeSave(){this.filter!=null&&(this.filter=this.filter.clone(),await this.load())}async _loadFilterGeometries(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference)}catch(e){f.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",{error:e}),this.filter=null}}createQuery(){const e=new ot;return this.geometryType==="mesh"?this.associatedLayer?.infoFor3D&&(e.returnGeometry=!0):(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryExtent(e||this.createQuery(),t))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatureCount(e||this.createQuery(),t))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatures(e||this.createQuery(),t)).then(r=>{if(r?.features)for(const a of r.features)a.layer=this,a.sourceLayer=this;return r})}async queryRelatedFeatures(e,t){if(await this.load(),!this.associatedLayer)throw new d("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeatures(e,t)}async queryRelatedFeaturesCount(e,t){if(await this.load(),!this.associatedLayer)throw new d("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeaturesCount(e,t)}async queryCachedAttributes(e,t){const r=de(this.fieldsIndex,await dt(this,ut(this)));return pt(this.parsedUrl?.path??"",this.attributeStorageInfo??[],e,t,r,this.apiKey,this.customParameters)}async queryCachedFeature(e,t){const r=await this.queryCachedAttributes(e,[t]);if(!r||r.length===0)throw new d("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const a=new ue;return a.attributes=r[0],a.layer=this,a.sourceLayer=this,a}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryObjectIds(e||this.createQuery(),t))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryAttachments(e,t))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(f.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return lt(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e?.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new d("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new d("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return this.statisticsInfo!=null&&this.statisticsInfo.some(t=>t.name===e)}async queryCachedStatistics(e,t){return await this.load(t),await this.fetchStatistics(e,t)}async saveAs(e,t){return this._debouncedSaveOperations(Q.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(Q.SAVE,e)}async applyEdits(e,t){const{applyEdits:r}=await Z(()=>import("./editingSupport-BxXQ3zXQ.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10]),import.meta.url);let a=t;await this.load();const n=this.associatedLayer;if(!n)throw new d(`${this.type}-layer:not-editable`,"Service is not editable");await n.load();const{globalIdField:l}=n,p=!!n.infoFor3D,u=a?.globalIdUsed??!0;if(p&&l==null)throw new d(`${this.type}-layer:not-editable`,"Valid globalIdField expected on editable SceneLayer");if(p&&!u)throw new d(`${this.type}-layer:globalid-required`,"globalIdUsed must not be false for SceneLayer editing as globalIds are required.");return J(n.url)&&p&&e.deleteFeatures!=null&&l!=null&&(a={...a,globalIdToObjectId:await Qe(n,e.deleteFeatures,l)}),r(this,n.source,e,a)}async uploadAssets(e,t){if(await this.load(),this.associatedLayer==null)throw new d(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,t)}on(e,t){return super.on(e,t)}async convertMesh(e,t){t??={};const r=y=>{throw f.getLogger(this).error(".convertMesh()",y.message),y};await this.load(),this.infoFor3D||r(new d("invalid:layer","SceneLayer has no capability for mesh conversion"));const a=await this.extractAndFilterFiles(e),n=a.reduce((y,h)=>Ze(this.infoFor3D,h)?y+1:y,0);n===0&&r(new Ie),n>1&&r(new Le);const l=this.spatialReference,p=t.location??new ce({x:0,y:0,z:0,spatialReference:l}),u=p.spatialReference.isGeographic?"local":"georeferenced",c=we.createWithExternalSource(p,a,{vertexSpace:u,transform:Fe(p.spatialReference),unitConversionDisabled:!0}),[m]=await this.uploadAssets([c],{...t,useAssetOrigin:!t.location});return m}async extractAndFilterFiles(e){await this.load();const t=this.infoFor3D;return t?(await ht(e)).filter(r=>Be(t,r)):e}validateLayer(e){if(e.layerType&&!gt.has(e.layerType))throw new d("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new d("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new d("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function t(r,a){let n=!1,l=!1;if(r==null)n=!0,l=!0;else{const p=a&&a.isGeographic;switch(r){case"east-north-up":case"earth-centered":n=!0,l=p;break;case"vertex-reference-frame":n=!0,l=!p;break;default:n=!1}}if(!n)throw new d("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!l)throw new d("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}t(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if(this.profile==="points")e.push("Point");else{if(this.profile!=="mesh-pyramids")throw new d("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!!this.attributeStorageInfo?.some(n=>n.name===e.name),r=!!this.associatedLayer?.fields?.some(n=>n&&e.name===n.name),a={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||r,supportsLayerQuery:r};this._fieldUsageInfo[e.name]=a}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides(),this._applyAssociatedLayerExtentOverride(),this._applyAssociatedLayerPrivileges()}_applyAssociatedLayerFieldsOverrides(){if(!this.associatedLayer?.fields)return;let e=null;for(const t of this.associatedLayer.fields){const r=this.getField(t.name);r?(!r.domain&&t.domain&&(r.domain=t.domain.clone()),r.editable=t.editable,r.nullable=t.nullable,r.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled"],t=G(this);for(let r=0;r<e.length;r++){const a=e[r],n=this.originIdOf(a),l=this.associatedLayer.originIdOf(a);n<l&&(l===A.SERVICE||l===A.PORTAL_ITEM)&&t.setAtOrigin(a,this.associatedLayer[a],l)}}_applyAssociatedLayerExtentOverride(){const e=this.associatedLayer?.getAtOrigin("fullExtent","service");this.associatedLayer?.infoFor3D==null||!e||!J(this.associatedLayer?.url)||!Y(this)||G(this).setAtOrigin("fullExtent",e.clone(),A.SERVICE)}_applyAssociatedLayerPrivileges(){const e=this.associatedLayer;e&&(this._set("userHasEditingPrivileges",e.userHasEditingPrivileges),this._set("userHasFullEditingPrivileges",e.userHasFullEditingPrivileges),this._set("userHasUpdateItemPrivileges",e.userHasUpdateItemPrivileges))}async _setAssociatedFeatureLayer(e){if(["mesh-pyramids","points"].includes(this.profile))try{const{serverUrl:t,layerId:r,portalItem:a}=await Re(`${this.url}/layers/${this.layerId}`,{sceneLayerItem:this.portalItem,customParameters:this.customParameters,apiKey:this.apiKey,signal:e}),n=await et.FeatureLayer();this.associatedLayer=new n({url:t,customParameters:this.customParameters,layerId:r,portalItem:a}),await this.associatedLayer.load()}catch(t){ye(t)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){await me(()=>this.popupEnabled&&this.popupTemplate!=null);const e=`this SceneLayer: ${this.title}`;this.attributeStorageInfo==null?f.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):f.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}_validateElevationInfo(){const e=this.elevationInfo;this.profile==="mesh-pyramids"&&H(f.getLogger(this),at("Mesh scene layers","relative-to-scene",e)),H(f.getLogger(this),nt("Scene layers",e))}async fetchStatistics(e,t){return await mt({fieldName:e,statisticsInfo:this.statisticsInfo,errorContext:"scenelayer",fieldsIndex:this.fieldsIndex,path:this.parsedUrl?.path??"",customParameters:this.customParameters,apiKey:this.apiKey,signal:t?.signal})}};i([s({types:{key:"type",base:ke,typeMap:{selection:ze}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],o.prototype,"featureReduction",void 0),i([s({type:[g],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],o.prototype,"rangeInfos",void 0),i([s({json:{read:!1}})],o.prototype,"associatedLayer",void 0),i([s({type:["show","hide"]})],o.prototype,"listMode",void 0),i([s({type:["ArcGISSceneServiceLayer"]})],o.prototype,"operationalLayerType",void 0),i([s({json:{read:!1},readOnly:!0})],o.prototype,"type",void 0),i([s({...M.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"fields",void 0),i([s()],o.prototype,"types",null),i([s()],o.prototype,"typeIdField",null),i([s()],o.prototype,"templates",null),i([s()],o.prototype,"formTemplate",null),i([s()],o.prototype,"attributeTableTemplate",null),i([s({readOnly:!0,clonable:!1})],o.prototype,"fieldsIndex",null),i([s({type:Ye,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],o.prototype,"floorInfo",void 0),i([s(M.outFields)],o.prototype,"outFields",void 0),i([s({type:X,readOnly:!0,json:{read:!1}})],o.prototype,"nodePages",void 0),i([v("service","nodePages",["nodePages","pointNodePages"])],o.prototype,"readNodePages",null),i([s({type:[He],readOnly:!0})],o.prototype,"materialDefinitions",void 0),i([s({type:[Me],readOnly:!0})],o.prototype,"textureSetDefinitions",void 0),i([s({type:[We],readOnly:!0})],o.prototype,"geometryDefinitions",void 0),i([s({readOnly:!0})],o.prototype,"serviceUpdateTimeStamp",void 0),i([s({readOnly:!0})],o.prototype,"attributeStorageInfo",void 0),i([s({readOnly:!0})],o.prototype,"statisticsInfo",void 0),i([s({type:q.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],o.prototype,"excludeObjectIds",void 0),i([s({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],o.prototype,"definitionExpression",void 0),i([s({type:yt,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],o.prototype,"filter",void 0),i([s({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],o.prototype,"path",void 0),i([s(qe)],o.prototype,"elevationInfo",null),i([s({readOnly:!0,json:{read:!1}})],o.prototype,"effectiveCapabilities",null),i([s({readOnly:!0})],o.prototype,"effectiveEditingEnabled",null),i([s({type:String})],o.prototype,"geometryType",null),i([s(Ue)],o.prototype,"labelsVisible",void 0),i([s({type:[Xe],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:K},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:K},write:!0}})],o.prototype,"labelingInfo",void 0),i([s(Ne)],o.prototype,"legendEnabled",void 0),i([s({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){if(typeof e=="number"&&e>=0&&e<=1)return e;const r=t.layerDefinition?.drawingInfo?.transparency;return r!==void 0?he(r):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],o.prototype,"opacity",void 0),i([s({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"priority",void 0),i([s({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"semantic",void 0),i([s({types:ge,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],o.prototype,"renderer",null),i([s({json:{read:!1}})],o.prototype,"cachedDrawingInfo",void 0),i([v("service","cachedDrawingInfo")],o.prototype,"readCachedDrawingInfo",null),i([s({readOnly:!0,json:{read:!1}})],o.prototype,"capabilities",null),i([s({type:Boolean,json:{read:!1}})],o.prototype,"editingEnabled",null),i([s({readOnly:!0,json:{write:!1,read:!1}})],o.prototype,"infoFor3D",null),i([s({readOnly:!0,json:{write:!1,read:!1}})],o.prototype,"relationships",null),i([s(Ce)],o.prototype,"popupEnabled",void 0),i([s({type:fe,json:{name:"popupInfo",write:!0}})],o.prototype,"popupTemplate",void 0),i([s({readOnly:!0,json:{read:!1}})],o.prototype,"defaultPopupTemplate",null),i([s({type:String,json:{read:!1}})],o.prototype,"objectIdField",void 0),i([v("service","objectIdField",["objectIdField","fields"])],o.prototype,"readObjectIdField",null),i([s({type:String,json:{read:!1}})],o.prototype,"globalIdField",void 0),i([v("service","globalIdField",["globalIdField","fields"])],o.prototype,"readGlobalIdField",null),i([s({readOnly:!0,type:String,json:{read:!1}})],o.prototype,"displayField",null),i([s({type:String,json:{read:!1}})],o.prototype,"profile",void 0),i([v("service","profile",["store.profile"])],o.prototype,"readProfile",null),i([s({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],o.prototype,"normalReferenceFrame",void 0),i([s(Ve)],o.prototype,"screenSizePerspectiveEnabled",void 0),i([s({json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"serviceItemId",void 0),i([s(Ae)],o.prototype,"useViewTime",null),o=i([b("esri.layers.SceneLayer")],o);const W={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},vt={"mesh-pyramids":"mesh",points:"point"},Ti=o;export{Ti as default};
