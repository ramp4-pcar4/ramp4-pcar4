import{q as W,u as X,bA as _t,C as Dt,A as Lt,s as Rt,h as Nt,n as Z,az as Et,b1 as nt,G as jt,h7 as vt,bI as Gt,aw as Ot,eL as qt}from"./main-7nqzKo04.js";let Ut=class{constructor(e=null,n=null,r=null){this.minValue=e,this.maxValue=n,this.noDataValue=r}};const Wt=9999999e31,zt=2e-7,Xt={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE],unknown:void 0,c64:void 0,c128:void 0};function rt(t){return Xt[t]??[-34028234663852886e22,34028234663852886e22]}function Ae(t,e){return t==null||e==null?"s32":t<0?t>=-128&&e<128?"s8":t>=-32768&&e<32768?"s16":"s32":e<256?"u8":e<65536?"u16":"u32"}function Jt(t){return(t?.startsWith("s")||t?.startsWith("u"))??!1}function be(t,e,n,r){let[o,i]=rt(n);const s=Jt(n);return s&&(o-=1e-5,i+=1e-5),s?n.startsWith("u")?Ht(t,e,r,[o,i]):Kt(t,e,r,[o,i]):Qt(t,e,r,[o,i])}function ve(t,e){for(let n=0;n<e.length;n++)e[n]&&isNaN(t[n])&&(e[n]=0,t[n]=0)}function Ht(t,e,n,r){const[o,i]=r;for(let s=0;s<e.length;s++)if(e[s]){const c=t[s];c<o||c>i?e[s]=0:n[s]=c+.5|0}}function Kt(t,e,n,r){const[o,i]=r;for(let s=0;s<e.length;s++)if(e[s]){const c=t[s];c<o||c>i?e[s]=0:n[s]=c+(c>0?.5:-.5)|0}}function Qt(t,e,n,r){const[o,i]=r;for(let s=0;s<e.length;s++)if(e[s]){const c=t[s];c<o||c>i?e[s]=0:n[s]=c}}function Ue(t,e,n){if(t.depthCount&&t.depthCount>1)return;const{pixels:r,statistics:o,pixelType:i}=t,s=r[0].length,c=t.bandMasks??[],h=t.mask??new Uint8Array(s).fill(255),a=i==="f32"||i==="f64",l=rt(i);let f=!1;for(let p=0;p<r.length;p++){const u=typeof e=="number"?e:e[p];if(u==null)continue;const d=o?.[p]?.minValue??l[0],m=o?.[p]?.maxValue??l[1];if(d>u+Number.EPSILON||m<u-Number.EPSILON)continue;const g=c[p]||h.slice(),y=r[p],A=n?.customFloatTolerance;if(a&&A!==0){let w=A;w||(w=Math.abs(u)>=Wt?zt*Math.abs(u):i==="f32"?2**-23:Number.EPSILON);for(let k=0;k<y.length;k++)g[k]&&Math.abs(y[k]-u)<w&&(y[k]=0,g[k]=0,h[k]=0,f=!0)}else for(let w=0;w<y.length;w++)g[w]&&y[w]===u&&(y[w]=0,g[w]=0,h[w]=0,f=!0);c[p]=g}f&&(t.bandMasks=t.bandMasks||t.pixels.length>1?c:null,t.mask=h),f&&"updateStatistics"in t&&t.updateStatistics()}var K;let G=K=class extends Lt{static createEmptyBand(t,e){return new(K.getPixelArrayConstructor(t))(e)}static combineBandMasks(t){if(t.length<2)return t[0];const e=t[0].length,n=new Uint8Array(e).fill(255);for(let r=0;r<t.length;r++){const o=t[r];for(let i=0;i<e;i++)o[i]||(n[i]=0)}return n}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){return this.pixels?.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new Rt("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new Ut)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map(n=>Yt(n,this.mask));const t=this.mask;let e=0;if(t!=null)for(let n=0;n<t.length;n++)t[n]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||t==="f64"||t==="f32"||!this.pixels)return;const[e,n]=rt(t),r=this.pixels,o=this.width*this.height,i=r.length;let s,c,h;const a=[];for(let l=0;l<i;l++){h=K.createEmptyBand(t,o),s=r[l];for(let f=0;f<o;f++)c=s[f],h[f]=c>n?n:c<e?e:c;a.push(h)}this.pixels=a,this.pixelType=t}extractBands(t){const{pixels:e,statistics:n}=this;if(t==null||t.length===0||!e||e.length===0)return this;const r=e.length,o=t.some(f=>f>=e.length),i=r===t.length&&!t.some((f,p)=>f!==p);if(o||i)return this;const s=this.bandMasks?.length===r?t.map(f=>this.bandMasks[f]):void 0;let{mask:c,validPixelCount:h}=this;const{width:a,height:l}=this;return s?.length&&(c=K.combineBandMasks(s),h=c.filter(f=>!!f).length),new K({pixelType:this.pixelType,width:a,height:l,mask:c,bandMasks:s,validPixelCount:h,maskIsAlpha:this.maskIsAlpha,pixels:t.map(f=>e[f]),statistics:n&&t.map(f=>n[f])})}clone(){const t=new K({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;this.mask!=null&&(t.mask=new Uint8Array(this.mask)),this.bandMasks&&(t.bandMasks=this.bandMasks.map(r=>new Uint8Array(r)));const n=K.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const r=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=r?this.pixels[e].slice():new n(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=Nt(this.statistics[e]);return t.premultiplyAlpha=this.premultiplyAlpha,t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:n,premultiplyAlpha:r,pixels:o}=this;if(!t||!o?.length)return void Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let i,s,c,h;i=s=c=o[0],o.length>=3?(s=o[1],c=o[2]):o.length===2&&(s=o[1]);const a=new Uint32Array(t),l=this.width*this.height;if(i.length===l)if(e!=null&&e.length===l)if(n)for(h=0;h<l;h++){const f=e[h];if(f){const p=f/255;a[h]=r?f<<24|c[h]*p<<16|s[h]*p<<8|i[h]*p:f<<24|c[h]<<16|s[h]<<8|i[h]}}else for(h=0;h<l;h++)e[h]&&(a[h]=255<<24|c[h]<<16|s[h]<<8|i[h]);else for(h=0;h<l;h++)a[h]=255<<24|c[h]<<16|s[h]<<8|i[h];else Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:n,statistics:r}=this;if(!t||!e?.length)return void Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const o=this.pixelType;let i=1,s=0,c=1;if(r&&r.length>0){for(const m of r)if(m.minValue!=null&&(s=Math.min(s,m.minValue)),m.maxValue!=null&&m.minValue!=null){const g=m.maxValue-m.minValue;c=Math.max(c,g)}i=255/c}else{let m=255;o==="s8"?(s=-128,m=127):o==="u16"?m=65535:o==="s16"?(s=-32768,m=32767):o==="u32"?m=4294967295:o==="s32"?(s=-2147483648,m=2147483647):o==="f32"?(s=-34e38,m=34e38):o==="f64"&&(s=-Number.MAX_VALUE,m=Number.MAX_VALUE),i=255/(m-s)}const h=new Uint32Array(t),a=this.width*this.height;let l,f,p,u,d;if(l=f=p=e[0],l.length!==a)return Z.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(f=e[1],e.length>=3&&(p=e[2]),n!=null&&n.length===a)for(u=0;u<a;u++)n[u]&&(h[u]=255<<24|(p[u]-s)*i<<16|(f[u]-s)*i<<8|(l[u]-s)*i);else for(u=0;u<a;u++)h[u]=255<<24|(p[u]-s)*i<<16|(f[u]-s)*i<<8|(l[u]-s)*i;else if(n!=null&&n.length===a)for(u=0;u<a;u++)d=(l[u]-s)*i,n[u]&&(h[u]=255<<24|d<<16|d<<8|d);else for(u=0;u<a;u++)d=(l[u]-s)*i,h[u]=255<<24|d<<16|d<<8|d}_fillFrom32Bit(t){const{pixels:e,mask:n}=this;if(!t||!e?.length)return Z.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let r,o,i,s;r=o=i=e[0],e.length>=3?(o=e[1],i=e[2]):e.length===2&&(o=e[1]);const c=this.width*this.height;if(r.length!==c)return Z.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let h=0;if(n!=null&&n.length===c)for(s=0;s<c;s++)t[h++]=r[s],t[h++]=o[s],t[h++]=i[s],t[h++]=1&n[s];else for(s=0;s<c;s++)t[h++]=r[s],t[h++]=o[s],t[h++]=i[s],t[h++]=1}};function Yt(t,e){let n=1/0,r=-1/0;const o=t.length;let i,s=0;if(e!=null)for(i=0;i<o;i++)e[i]&&(s=t[i],n=s<n?s:n,r=s>r?s:r);else for(i=0;i<o;i++)s=t[i],n=s<n?s:n,r=s>r?s:r;return new Ut(n,r)}W([X({json:{write:!0}})],G.prototype,"width",void 0),W([X({json:{write:!0}})],G.prototype,"height",void 0),W([X({json:{write:!0}})],G.prototype,"pixelType",void 0),W([_t("pixelType")],G.prototype,"castPixelType",null),W([X({json:{write:!0}})],G.prototype,"validPixelCount",void 0),W([X({json:{write:!0}})],G.prototype,"mask",void 0),W([X({json:{write:!0}})],G.prototype,"maskIsAlpha",void 0),W([X({json:{write:!0}})],G.prototype,"pixels",void 0),W([X()],G.prototype,"premultiplyAlpha",void 0),W([X({json:{write:!0}})],G.prototype,"statistics",void 0),W([X({json:{write:!0}})],G.prototype,"depthCount",void 0),W([X({json:{write:!0}})],G.prototype,"noDataValues",void 0),W([X({json:{write:!0}})],G.prototype,"bandMasks",void 0),G=K=W([Dt("esri.layers.support.PixelBlock")],G);const _=G;var gt,xt;(function(t){t[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll"})(gt||(gt={})),function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(xt||(xt={}));const $e=6;function L(t){return t!=null&&t.declaredClass==="esri.layers.support.PixelBlock"&&t.pixels&&t.pixels.length>0}function Pe(t){if(!t?.length||t.some(l=>!L(l)))return null;if(t.length===1)return t[0]?.clone()??null;const e=t,{width:n,height:r,pixelType:o}=e[0];if(e.some(l=>l.width!==n||l.height!==r))return null;const i=e.map(({mask:l})=>l).filter(l=>l!=null);let s=null;i.length&&(s=new Uint8Array(n*r),s.set(i[0]),i.length>1&&Pt(i.slice(1),s));const c=[];e.forEach(({pixels:l})=>c.push(...l));const h=e.map(({statistics:l})=>l).filter(l=>l?.length),a=[];return h.forEach(l=>a.push(...l)),new _({pixelType:o,width:n,height:r,mask:s,pixels:c,statistics:a.length?a:null})}function Te(t){if(!t)return;const e=t.colormap;if(!e||e.length===0)return;const n=e.sort((f,p)=>f[0]-p[0]);let r=0;n[0][0]<0&&(r=n[0][0]);const o=Math.max(256,n[n.length-1][0]-r+1),i=new Uint8Array(4*o),s=[];let c,h=0,a=0;const l=n[0].length===5;if(o>65536)return n.forEach(f=>{s[f[0]-r]=l?f.slice(1):f.slice(1).concat([255])}),{indexed2DColormap:s,offset:r,alphaSpecified:l};if(t.fillUnspecified)for(c=n[a],h=c[0]-r;h<o;h++)i[4*h]=c[1],i[4*h+1]=c[2],i[4*h+2]=c[3],i[4*h+3]=l?c[4]:255,h===c[0]-r&&(c=a===n.length-1?c:n[++a]);else for(h=0;h<n.length;h++)c=n[h],a=4*(c[0]-r),i[a]=c[1],i[a+1]=c[2],i[a+2]=c[3],i[a+3]=l?c[4]:255;return{indexedColormap:i,offset:r,alphaSpecified:l}}function Ie(t,e){if(!L(t)||!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),r=n.pixels;let o=n.mask;const i=n.width*n.height;if(r.length!==1)return t;const{indexedColormap:s,indexed2DColormap:c,offset:h,alphaSpecified:a}=e;let l=0;const f=r[0],p=new Uint8Array(f.length),u=new Uint8Array(f.length),d=new Uint8Array(f.length);let m,g=0;if(s){const y=s.length-1;if(o!=null)for(l=0;l<i;l++)o[l]&&(g=4*(f[l]-h),g<h||g>y?o[l]=0:(p[l]=s[g],u[l]=s[g+1],d[l]=s[g+2],o[l]=s[g+3]));else{for(o=new Uint8Array(i),l=0;l<i;l++)g=4*(f[l]-h),g<h||g>y?o[l]=0:(p[l]=s[g],u[l]=s[g+1],d[l]=s[g+2],o[l]=s[g+3]);n.mask=o}}else if(c)if(o!=null)for(l=0;l<i;l++)o[l]&&(m=c[f[l]],p[l]=m[0],u[l]=m[1],d[l]=m[2],o[l]=m[3]);else{for(o=new Uint8Array(i),l=0;l<i;l++)m=c[f[l]],p[l]=m[0],u[l]=m[1],d[l]=m[2],o[l]=m[3];n.mask=o}return n.pixels=[p,u,d],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=a,n}function Be(t,e){if(!L(t))return null;const{pixels:n,mask:r}=t,o=n.length;let i=e.lut;const{offset:s}=e;i&&i[0].length===1&&(i=n.map(()=>i));const c=[],h=e.outputPixelType||"u8";for(let l=0;l<o;l++){const f=$t(n[l],r,i[l],s||0,h);c.push(f)}const a=new _({width:t.width,height:t.height,pixels:c,mask:r,pixelType:h});return a.updateStatistics(),a}function $t(t,e,n,r,o){const i=t.length,s=_.createEmptyBand(o,i);if(e)for(let c=0;c<i;c++)e[c]&&(s[c]=n[t[c]-r]);else for(let c=0;c<i;c++)s[c]=n[t[c]-r];return s}function Se(t,e){if(!L(t))return null;const n=t.clone(),{pixels:r}=n,o=n.width*n.height,i=e.length,s=Math.floor(i/2),c=e[Math.floor(s)],h=r[0];let a,l,f,p,u,d,m=!1;const g=new Uint8Array(o),y=new Uint8Array(o),A=new Uint8Array(o);let w=n.mask;const k=e[0].mappedColor.length===4;for(w||(w=new Uint8Array(o),w.fill(k?255:1),n.mask=w),u=0;u<o;u++)if(w[u]){for(a=h[u],m=!1,d=s,l=c,f=0,p=i-1;p-f>1;){if(a===l.value){m=!0;break}a>l.value?f=d:p=d,d=Math.floor((f+p)/2),l=e[Math.floor(d)]}m||(a===e[f].value?(l=e[f],m=!0):a===e[p].value?(l=e[p],m=!0):a<e[f].value?(m=!1,l=null):a>e[f].value&&(a<e[p].value?(l=e[f],m=!0):p===i-1?(m=!1,l=null):(l=e[p],m=!0))),m?(g[u]=l.mappedColor[0],y[u]=l.mappedColor[1],A[u]=l.mappedColor[2],w[u]=l.mappedColor[3]):g[u]=y[u]=A[u]=w[u]=0}return n.pixels=[g,y,A],n.mask=w,n.pixelType="u8",n.maskIsAlpha=k,n}function Ce(t,e){if(!L(t))return null;const{width:n,height:r}=t,{inputRanges:o,outputValues:i,outputPixelType:s,noDataRanges:c,allowUnmatched:h,isLastInputRangeInclusive:a}=e,l=t.pixels[0],f=_.createEmptyBand(s,l.length),p=t.mask,u=new Uint8Array(n*r);p?u.set(p):u.fill(255);const d=t.pixelType.startsWith("f")?1e-6:0,m=o.map(k=>k-d);m[0]=o[0],m[m.length-1]=o[o.length-1]+(a?1e-6:0);const g=o.length/2,[y,A]=rt(s);for(let k=0;k<r;k++)for(let x=0;x<n;x++){const M=k*n+x;if(u[M]){const U=l[M];let b=!1;for(let P=g-1;P>=0;P--)if(U===m[2*P]||U>m[2*P]&&U<m[2*P+1]){f[M]=i[P],b=!0;break}b||(h?f[M]=U>A?A:U<y?y:U:u[M]=0)}}const w=c?.length;if(w)for(let k=0;k<r;k++)for(let x=0;x<n;x++){const M=k*n+x;if(!p||p[M]){const U=l[M];for(let b=0;b<w;b+=2)if(U>=c[b]&&U<=c[b+1]){f[M]=0,u[M]=0;break}}}return new _({width:n,height:r,pixelType:s,pixels:[f],mask:u})}function wt(t,e,n,r){const o=n!=null&&n.length>=2?new Set(n):null,i=n?.length===1?n[0]:null,s=!!e?.length;for(let c=0;c<t.length;c++)if(r[c]){const h=t[c];if(s){let a=!1;for(let l=0;l<e.length;l+=2)if(h>=e[l]&&h<=e[l+1]){a=!0;break}a||(r[c]=0)}r[c]&&(h===i||o?.has(h))&&(r[c]=0)}}function yt(t,e){const n=t[0].length;for(let r=0;r<n;r++)if(e[r]){let o=!1;for(let i=0;i<t.length;i++)if(t[i][r]){o=!0;break}o||(e[r]=0)}}function Pt(t,e){const n=t[0].length;for(let r=0;r<n;r++)if(e[r]){let o=!1;for(let i=0;i<t.length;i++)if(t[i][r]===0){o=!0;break}o&&(e[r]=0)}}function Fe(t,e){if(!L(t))return null;const{width:n,height:r,pixels:o}=t,i=n*r,s=new Uint8Array(i);t.mask?s.set(t.mask):s.fill(255);const c=o.length,{includedRanges:h,noDataValues:a,outputPixelType:l,matchAll:f,lookups:p}=e;if(p){const u=[];for(let d=0;d<c;d++){const m=p[d],g=$t(o[d],s,m.lut,m.offset||0,"u8");u.push(g)}u.length===1?s.set(u[0]):f?yt(u,s):Pt(u,s)}else if(f){const u=[];for(let d=0;d<c;d++){const m=new Uint8Array(i);m.set(s),wt(o[d],h?.slice(2*d,2*d+2),a?.[d],m),u.push(m)}u.length===1?s.set(u[0]):yt(u,s)}else for(let u=0;u<c;u++)wt(o[u],h?.slice(2*u,2*u+2),a?.[u],s);return new _({width:n,height:r,pixelType:l,pixels:o,mask:s})}function Ve(t){const{srcPixelType:e,inputRanges:n,outputValues:r,allowUnmatched:o,noDataRanges:i,isLastInputRangeInclusive:s,outputPixelType:c}=t;if(e!=="u8"&&e!=="s8"&&e!=="u16"&&e!=="s16")return null;const h=e.includes("16")?65536:256,a=e.includes("s")?-h/2:0,l=_.createEmptyBand(c,h),f=new Uint8Array(h);o&&f.fill(255);const[p,u]=rt(c);if(n?.length&&r?.length){const m=n.map(g=>g-1e-6);m[0]=n[0],s&&(m[m.length-1]=n[n.length-1]);for(let g=0;g<m.length;g++){const y=r[g]>u?u:r[g]<p?p:r[g],A=Math.ceil(m[2*g]-a),w=Math.floor(m[2*g+1]-a);for(let k=A;k<=w;k++)l[k]=y,f[k]=255}}if(i?.length)for(let d=0;d<i.length;d++){const m=Math.ceil(i[2*d]-a),g=Math.floor(i[2*d+1]-a);for(let y=m;y<=g;y++)f[y]=0}return{lut:l,offset:a,mask:f}}function _e(t,e,n){if(t!=="u8"&&t!=="s8"&&t!=="u16"&&t!=="s16")return null;const r=t.includes("16")?65536:256,o=t.includes("s")?-r/2:0,i=new Uint8Array(r);if(e)for(let s=0;s<e.length;s++){const c=Math.ceil(e[2*s]-o),h=Math.floor(e[2*s+1]-o);for(let a=c;a<=h;a++)i[a]=255}else i.fill(255);if(n)for(let s=0;s<n.length;s++)i[n[s]-o]=0;return{lut:i,offset:o}}function Zt(t,e,n,r,o,i,s,c){return{xmin:o<=n*t?0:o<n*t+t?o-n*t:t,ymin:i<=r*e?0:i<r*e+e?i-r*e:e,xmax:o+s<=n*t?0:o+s<n*t+t?o+s-n*t:t,ymax:i+c<=r*e?0:i+c<r*e+e?i+c-r*e:e}}function De(t,e){if(!t||t.length===0)return null;const n=t.find(d=>d.pixelBlock);if(n?.pixelBlock==null)return null;const r=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,o=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,i=.01*Math.min(r,o),s=t.sort((d,m)=>Math.abs(d.extent.ymax-m.extent.ymax)>i?m.extent.ymax-d.extent.ymax:Math.abs(d.extent.xmin-m.extent.xmin)>i?d.extent.xmin-m.extent.xmin:0),c=Math.min.apply(null,s.map(d=>d.extent.xmin)),h=Math.min.apply(null,s.map(d=>d.extent.ymin)),a=Math.max.apply(null,s.map(d=>d.extent.xmax)),l=Math.max.apply(null,s.map(d=>d.extent.ymax)),f={x:Math.round((e.xmin-c)/r),y:Math.round((l-e.ymax)/o)},p={width:Math.round((a-c)/r),height:Math.round((l-h)/o)},u={width:Math.round((e.xmax-e.xmin)/r),height:Math.round((e.ymax-e.ymin)/o)};return Math.round(p.width/n.pixelBlock.width)*Math.round(p.height/n.pixelBlock.height)!==s.length||f.x<0||f.y<0||p.width<u.width||p.height<u.height?null:{extent:e,pixelBlock:te(s.map(d=>d.pixelBlock),p,{clipOffset:f,clipSize:u})}}function ft(t,e,n,r,o,i){const{width:s,height:c}=n.block,{x:h,y:a}=n.offset,{width:l,height:f}=n.mosaic,p=Zt(s,c,r,o,h,a,l,f);let u=0,d=0;if(i){const m=i.hasGCSSShiftTransform?360:i.halfWorldWidth??0,g=s*i.resolutionX,y=i.startX+r*g;y<m&&y+g>m?d=i.rightPadding:y>=m&&(u=i.leftMargin-i.rightPadding,d=0)}if(p.xmax-=d,typeof e!="number")for(let m=p.ymin;m<p.ymax;m++){const g=(o*c+m-a)*l+(r*s-h)+u,y=m*s;for(let A=p.xmin;A<p.xmax;A++)t[g+A]=e[y+A]}else for(let m=p.ymin;m<p.ymax;m++){const g=(o*c+m-a)*l+(r*s-h)+u;for(let y=p.xmin;y<p.xmax;y++)t[g+y]=e}}function te(t,e,n={}){const{clipOffset:r,clipSize:o,alignmentInfo:i,blockWidths:s}=n;if(s)return ee(t,e,{blockWidths:s});const c=t.find($=>L($));if(c==null)return null;const h=o?o.width:e.width,a=o?o.height:e.height,l=c.width,f=c.height,p=e.width/l,u=e.height/f,d={offset:r||{x:0,y:0},mosaic:o||e,block:{width:l,height:f}},m=c.pixelType,g=_.getPixelArrayConstructor(m),y=c.pixels.length,A=[];let w,k;for(let $=0;$<y;$++){k=new g(h*a);for(let T=0;T<u;T++)for(let v=0;v<p;v++){const B=t[T*p+v];L(B)&&(w=B.pixels[$],ft(k,w,d,v,T,i))}A.push(k)}const x=t.some($=>$==null||$.mask!=null&&$.mask.length>0),M=t.some($=>$?.bandMasks&&$.bandMasks.length>1),U=x?new Uint8Array(h*a):void 0,b=M?[]:void 0;if(U){for(let $=0;$<u;$++)for(let T=0;T<p;T++){const v=t[$*p+T],B=v!=null?v.mask:null;ft(U,B??(v?255:0),d,T,$,i)}if(b)for(let $=0;$<y;$++){const T=new Uint8Array(h*a);for(let v=0;v<u;v++)for(let B=0;B<p;B++){const V=t[v*p+B],S=V?.bandMasks?.[$]??V?.mask;ft(T,S??(V?255:0),d,B,v,i)}b.push(T)}}const P=new _({width:h,height:a,pixels:A,pixelType:m,bandMasks:b,mask:U});return P.updateStatistics(),P}function ee(t,e,n){const r=t.find(g=>g!=null);if(r==null)return null;const o=t.some(g=>g==null||!!g.mask),{width:i,height:s}=e,c=o?new Uint8Array(i*s):null,{blockWidths:h}=n,a=[],l=r.getPlaneCount(),f=_.getPixelArrayConstructor(r.pixelType);if(o)for(let g=0,y=0;g<t.length;y+=h[g],g++){const A=t[g];if(!L(A))continue;const w=A.mask;for(let k=0;k<s;k++)for(let x=0;x<h[g];x++)c[k*i+x+y]=w==null?255:w[k*A.width+x]}const p=t.some(g=>g?.bandMasks&&g.bandMasks.length>1),u=p?[]:void 0,d=i*s;for(let g=0;g<l;g++){const y=new f(d),A=p?new Uint8Array(d):void 0;for(let w=0,k=0;w<t.length;k+=h[w],w++){const x=t[w];if(!L(x))continue;const M=x.pixels[g];if(M!=null){for(let U=0;U<s;U++)for(let b=0;b<h[w];b++)y[U*i+b+k]=M[U*x.width+b];if(A){const U=x.bandMasks?.[g]??x.mask;for(let b=0;b<s;b++)for(let P=0;P<h[w];P++)A[b*i+P+k]=U?U[b*x.width+P]:255}}}a.push(y),u&&A&&u.push(A)}const m=new _({width:i,height:s,mask:c,bandMasks:u,pixels:a,pixelType:r.pixelType});return m.updateStatistics(),m}function Le(t,e,n){if(!L(t))return null;const{width:r,height:o}=t,i=e.x,s=e.y,c=n.width+i,h=n.height+s;if(i<0||s<0||c>r||h>o||i===0&&s===0&&c===r&&h===o)return t;t.mask||(t.mask=new Uint8Array(r*o));const a=t.mask;for(let l=0;l<o;l++){const f=l*r;for(let p=0;p<r;p++)a[f+p]=l<s||l>=h||p<i||p>=c?0:1}return t.updateStatistics(),t}function ne(t){if(!L(t))return null;const e=t.clone(),{width:n,height:r,pixels:o}=t,i=o[0],s=e.pixels[0],c=t.mask;for(let h=2;h<r-1;h++){const a=new Map;for(let f=h-2;f<h+2;f++)for(let p=0;p<4;p++){const u=f*n+p;lt(a,i[u],c?c[u]:1)}s[h*n]=kt(a),s[h*n+1]=s[h*n+2]=s[h*n];let l=3;for(;l<n-1;l++){let f=(h-2)*n+l+1;lt(a,i[f],c?c[f]:1),f=(h-1)*n+l+1,lt(a,i[f],c?c[f]:1),f=h*n+l+1,lt(a,i[f],c?c[f]:1),f=(h+1)*n+l+1,lt(a,i[f],c?c[f]:1),f=(h-2)*n+l-3,ot(a,i[f],c?c[f]:1),f=(h-1)*n+l-3,ot(a,i[f],c?c[f]:1),f=h*n+l-3,ot(a,i[f],c?c[f]:1),f=(h+1)*n+l-3,ot(a,i[f],c?c[f]:1),s[h*n+l]=kt(a)}s[h*n+l+1]=s[h*n+l]}for(let h=0;h<n;h++)s[h]=s[n+h]=s[2*n+h],s[(r-1)*n+h]=s[(r-2)*n+h];return e.updateStatistics(),e}function kt(t){if(t.size===0)return 0;let e=0,n=-1,r=0;const o=t.keys();let i=o.next();for(;!i.done;)r=t.get(i.value),r>e&&(n=i.value,e=r),i=o.next();return n}function ot(t,e,n){if(n===0)return;const r=t.get(e);r===1?t.delete(e):t.set(e,r-1)}function lt(t,e,n){n!==0&&t.set(e,t.has(e)?t.get(e)+1:1)}function Tt(t,e,n){let{x:r,y:o}=e;const{width:i,height:s}=n;if(r===0&&o===0&&s===t.height&&i===t.width)return t;const{width:c,height:h}=t,a=Math.max(0,o),l=Math.max(0,r),f=Math.min(r+i,c),p=Math.min(o+s,h);if(f<0||p<0||!L(t))return null;r=Math.max(0,-r),o=Math.max(0,-o);const{pixels:u}=t,d=i*s,m=u.length,g=[];for(let k=0;k<m;k++){const x=u[k],M=_.createEmptyBand(t.pixelType,d);for(let U=a;U<p;U++){const b=U*c;let P=(U+o-a)*i+r;for(let $=l;$<f;$++)M[P++]=x[b+$]}g.push(M)}const y=new Uint8Array(d),A=t.mask;for(let k=a;k<p;k++){const x=k*c;let M=(k+o-a)*i+r;for(let U=l;U<f;U++)y[M++]=A?A[x+U]:1}const w=new _({width:n.width,height:n.height,pixelType:t.pixelType,pixels:g,mask:y});return w.updateStatistics(),w}function It(t,e=!0){if(!L(t))return null;const{pixels:n,width:r,height:o,mask:i,pixelType:s}=t,c=[],h=Math.round(r/2),a=Math.round(o/2),l=o-1,f=r-1;for(let u=0;u<n.length;u++){const d=n[u],m=_.createEmptyBand(s,h*a);let g=0;for(let y=0;y<o;y+=2)for(let A=0;A<r;A+=2){const w=d[y*r+A];if(e){const k=A===f?w:d[y*r+A+1],x=y===l?w:d[y*r+A+r],M=A===f?x:y===l?k:d[y*r+A+r+1];m[g++]=(w+k+x+M)/4}else m[g++]=w}c.push(m)}let p=null;if(i!=null){p=new Uint8Array(h*a);let u=0;for(let d=0;d<o;d+=2)for(let m=0;m<r;m+=2){const g=i[d*r+m];if(e){const y=m===f?g:i[d*r+m+1],A=d===l?g:i[d*r+m+r],w=m===f?A:d===l?y:i[d*r+m+r+1];p[u++]=g*y*A*w?1:0}else p[u++]=g}}return new _({width:h,height:a,pixelType:s,pixels:c,mask:p})}function Re(t,e,n=0,r=!0){if(!L(t))return null;const{width:o,height:i}=e;let{width:s,height:c}=t;const h=new Map,a={x:0,y:0},l=1+n;let f=t;for(let p=0;p<l;p++){const u=Math.ceil(s/o),d=Math.ceil(c/i);for(let m=0;m<d;m++){a.y=m*i;for(let g=0;g<u;g++){a.x=g*o;const y=Tt(f,a,e);h.set(`${p}/${m}/${g}`,y)}}p<l-1&&(f=It(f,r)),s=Math.round(s/2),c=Math.round(c/2)}return h}function Ne(t){const{pixelBlock:e,tileSize:n,level:r,row:o,col:i,useBilinear:s}=t;if(!L(e))return null;const{width:c,height:h}=n,a=2**r,l=a*c,f=a*h;let p=Tt(e,{y:o*f,x:i*l},{width:l,height:f});if(!p)return null;for(let u=r;u>0;u--)p=It(p,s);return p}function Bt(t,e,n,r,o=0){const{width:i,height:s}=t,{width:c,height:h}=e,a=r.cols,l=r.rows,f=Math.ceil(c/a-.1/a),p=Math.ceil(h/l-.1/l);let u,d,m,g,y,A,w;const k=f*a,x=k*p*l,M=new Float32Array(x),U=new Float32Array(x),b=new Uint32Array(x),P=new Uint32Array(x);let $,T,v=0;for(let B=0;B<p;B++)for(let V=0;V<f;V++){u=12*(B*f+V),d=n[u],m=n[u+1],g=n[u+2],y=n[u+3],A=n[u+4],w=n[u+5];for(let S=0;S<l;S++){v=(B*l+S)*k+V*a,T=(S+.5)/l;for(let I=0;I<S;I++)$=(I+.5)/a,M[v+I]=(d*$+m*T+g)*i+o,U[v+I]=(y*$+A*T+w)*s+o,b[v+I]=Math.floor(M[v+I]),P[v+I]=Math.floor(U[v+I])}u+=6,d=n[u],m=n[u+1],g=n[u+2],y=n[u+3],A=n[u+4],w=n[u+5];for(let S=0;S<l;S++){v=(B*l+S)*k+V*a,T=(S+.5)/l;for(let I=S;I<a;I++)$=(I+.5)/a,M[v+I]=(d*$+m*T+g)*i+o,U[v+I]=(y*$+A*T+w)*s+o,b[v+I]=Math.floor(M[v+I]),P[v+I]=Math.floor(U[v+I])}}return{offsets_x:M,offsets_y:U,offsets_xi:b,offsets_yi:P,gridWidth:k}}function Ee(t,e){const{coefficients:n,spacing:r}=e,{offsets_x:o,offsets_y:i,gridWidth:s}=Bt(t,t,n,{rows:r[0],cols:r[1]}),{width:c,height:h}=t,a=new Float32Array(c*h),l=180/Math.PI;for(let f=0;f<h;f++)for(let p=0;p<c;p++){const u=f*s+p,d=f===0?u:u-s,m=f===h-1?u:u+s,g=o[d]-o[m],y=i[m]-i[d];if(isNaN(g)||isNaN(y))a[f*c+p]=90;else{let A=Math.atan2(y,g)*l;A=(360+A)%360,a[f*c+p]=A}}return a}function je(t,e,n,r,o="nearest"){if(!L(t))return null;o==="majority"&&(t=ne(t));const{pixels:i,mask:s,bandMasks:c,pixelType:h}=t,a=t.width,l=t.height,f=_.getPixelArrayConstructor(h),p=i.length,{width:u,height:d}=e;let m=!1;for(let v=0;v<n.length;v+=3)n[v]===-1&&n[v+1]===-1&&n[v+2]===-1&&(m=!0);const{offsets_x:g,offsets_y:y,offsets_xi:A,offsets_yi:w,gridWidth:k}=Bt({width:a,height:l},e,n,r,o==="majority"?.5:0);let x;const M=(v,B,V,S)=>{const I=v instanceof Float32Array||v instanceof Float64Array?0:.5;for(let C=0;C<d;C++){x=C*k;for(let F=0;F<u;F++){if(g[x]<0||y[x]<0)v[C*u+F]=0;else if(S)v[C*u+F]=B[A[x]+w[x]*a];else{const E=Math.floor(g[x]),q=Math.floor(y[x]),R=Math.ceil(g[x]),O=Math.ceil(y[x]),z=g[x]-E,H=y[x]-q;if(!V||V[E+q*a]&&V[R+q*a]&&V[E+O*a]&&V[R+O*a]){const et=(1-z)*B[E+q*a]+z*B[R+q*a],Q=(1-z)*B[E+O*a]+z*B[R+O*a];v[C*u+F]=(1-H)*et+H*Q+I}else v[C*u+F]=B[A[x]+w[x]*a]}x++}}},U=[];let b;const P=c?.length===p,$=[];for(let v=0;v<p;v++){if(P){const B=new Uint8Array(u*d);M(B,c[v],c[v],!0),$.push(B)}b=new f(u*d),M(b,i[v],P?c[v]:s,o==="nearest"||o==="majority"),U.push(b)}const T=new _({width:u,height:d,pixelType:h,pixels:U,bandMasks:P?$:void 0});if(s!=null)T.mask=new Uint8Array(u*d),M(T.mask,s,s,!0);else if(m){T.mask=new Uint8Array(u*d);for(let v=0;v<u*d;v++)T.mask[v]=g[v]<0||y[v]<0?0:1}return T.updateStatistics(),T}const tt=new Map;tt.set("meter-per-second",1),tt.set("kilometer-per-hour",.277778),tt.set("knots",.514444),tt.set("feet-per-second",.3048),tt.set("mile-per-hour",.44704);const pt=180/Math.PI,dt=5,ht=new Et({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function mt(t,e){return tt.get(t)/tt.get(e)||1}function St(t){return(450-t)%360}function Ct(t,e="geographic"){const[n,r]=t,o=Math.sqrt(n*n+r*r);let i=Math.atan2(r,n)*pt;return i=(360+i)%360,e==="geographic"&&(i=St(i)),[o,i]}function ie(t,e="geographic"){let n=t[1];e==="geographic"&&(n=St(n)),n%=360;const r=t[0];return[r*Math.cos(n/pt),r*Math.sin(n/pt)]}function Ge(t,e,n,r="geographic"){if(!L(t)||n==null)return t;const o=e==="vector-magdir"?t.clone():Mt(t,e),i=o.pixels[1];for(let s=0;s<i.length;s++)i[s]=r==="geographic"?(i[s]+n[s]+270)%360:(i[s]+360-n[s])%360;return e==="vector-magdir"?o:Mt(o,"vector-magdir")}function Mt(t,e,n="geographic",r=1){if(!L(t))return t;const{pixels:o,width:i,height:s}=t,c=i*s,h=o[0],a=o[1],l=t.pixelType.startsWith("f")?t.pixelType:"f32",f=_.createEmptyBand(l,c),p=_.createEmptyBand(l,c);let u=0;for(let m=0;m<s;m++)for(let g=0;g<i;g++)e==="vector-uv"?([f[u],p[u]]=Ct([h[u],a[u]],n),f[u]*=r):([f[u],p[u]]=ie([h[u],a[u]],n),f[u]*=r,p[u]*=r),u++;const d=new _({pixelType:l,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[f,p]});return d.updateStatistics(),d}function Oe(t,e,n=1){if(n===1||!L(t))return t;const r=t.clone(),{pixels:o,width:i,height:s}=r,c=o[0];o[1];let h=0;for(let a=0;a<s;a++)for(let l=0;l<i;l++)c[h]*=n,h++;return r.updateStatistics(),r}function qe(t,e,n,r,o){if(o==null||!o.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/r),height:Math.round(n/r),resolution:t.width/e};const i=o.xmin,s=o.ymax,c=(t.xmax-t.xmin)/e*r,h=(t.ymax-t.ymin)/n*r,a=(c+h)/2;return t.xmin=i+Math.floor((t.xmin-i)/c)*c,t.xmax=i+Math.ceil((t.xmax-i)/c)*c,t.ymin=s+Math.floor((t.ymin-s)/h)*h,t.ymax=s+Math.ceil((t.ymax-s)/h)*h,{extent:t,width:Math.round(t.width/c),height:Math.round(t.height/h),resolution:a}}const se=Ft(0,0,0);function Ft(t=0,e=0,n=Math.PI,r=!0){r&&(n=(2*Math.PI-n)%(2*Math.PI));const o=r?-1:1,i=13*o,s=-7*o,c=-2*o,h=-16*o,a=21.75,[l,f]=j(0,e+i,n,a),[p,u]=j(t-5.5,e+s,n,a),[d,m]=j(t+5.5,e+s,n,a),[g,y]=j(t-1.5,e+c,n,a),[A,w]=j(t+1.5,e+c,n,a),[k,x]=j(t-1.5,e+h,n,a),[M,U]=j(t+1.5,e+h,n,a);return[l,f,p,u,g,y,A,w,d,m,k,x,M,U]}function le(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const r=10,o=n?-1:1,i=5*o,s=20*o,c=25*o,h=45,a=0,l=0,f=2,p=0,u=f*o,d=n?1:-1,m=r/2*d;let[g,y]=[a+m,l-s],[A,w]=[g+f*d,y],[k,x]=[A-p*d,w+u],[M,U]=[a-m,l-c],[b,P]=[M+p*d,U-u],$=Math.ceil(t/dt),T=Math.floor($/10);$-=8*T;const v=[],B=[];for(let z=0;z<$/2;z++,T--){T<=0&&$%2==1&&z===($-1)/2&&(M=a,b=M+p*d,U=(U+y)/2,P=U-u);const[H,et]=j(M,U,e,h);if(T>0){const[Q,it]=j(A,U,e,h),[st,D]=j(g,y,e,h);v.push(Q),v.push(it),v.push(H),v.push(et),v.push(st),v.push(D)}else{const[Q,it]=j(A,w,e,h),[st,D]=j(k,x,e,h),[N,ct]=j(b,P,e,h);B.push(H),B.push(et),B.push(N),B.push(ct),B.push(st),B.push(D),B.push(Q),B.push(it)}U+=i,y+=i,w+=i,x+=i,P+=i}const[V,S]=j(a+m,l+s,e,h),I=(r/2+f)*d,[C,F]=j(a+I,l+s,e,h),[E,q]=j(a+m,l-c,e,h),[R,O]=j(a+I,l-c,e,h);return{pennants:v,barbs:B,shaft:[V,S,C,F,E,q,R,O]}}function j(t,e,n,r=1){const o=Math.sqrt(t*t+e*e)/r,i=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[o,(2*Math.PI+i-n)%(2*Math.PI)]}const at=[0,1,3,6,10,16,21,27,33,40,47,55,63],re=[0,.5,1,1.5,2],oe=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function Y(t,e,n,r){const o=mt(r||"knots",n);let i;for(i=1;i<e.length;i++)if(i===e.length-1){if(t<e[i]*o)break}else if(t<=e[i]*o)break;return Math.min(i-1,e.length-2)}function ae(t,e,n,r,o){let i=0;switch(e){case"beaufort_kn":i=Y(t,at,"knots",n);break;case"beaufort_km":i=Y(t,at,"kilometer-per-hour",n);break;case"beaufort_ft":i=Y(t,at,"feet-per-second",n);break;case"beaufort_m":i=Y(t,at,"meter-per-second",n);break;case"classified_arrow":i=Y(t,o??[],r,n);break;case"ocean_current_m":i=Y(t,re,"meter-per-second",n);break;case"ocean_current_kn":i=Y(t,oe,"knots",n)}return i}function he(t,e){const{style:n,inputUnit:r,outputUnit:o,breakValues:i}=e,s=ht.fromJSON(r),c=ht.fromJSON(o),h=7*6,a=15;let l=0,f=0;const{width:p,height:u,mask:d}=t,m=t.pixels[0],g=t.pixels[1],y=d!=null?d.filter(x=>x>0).length:p*u,A=new Float32Array(y*h),w=new Uint32Array(a*y),k=e.invertDirection?Ft(0,0,0,!1):se;for(let x=0;x<u;x++)for(let M=0;M<p;M++){const U=x*p+M;if(!d||d[x*p+M]){const b=(g[U]+360)%360/180*Math.PI,P=ae(m[U],n,s,c,i);for(let T=0;T<k.length;T+=2)A[l++]=(M+.5)/p,A[l++]=(x+.5)/u,A[l++]=k[T],A[l++]=k[T+1]+b,A[l++]=P,A[l++]=m[U];const $=7*(l/h-1);w[f++]=$,w[f++]=$+1,w[f++]=$+2,w[f++]=$+0,w[f++]=$+4,w[f++]=$+3,w[f++]=$+0,w[f++]=$+2,w[f++]=$+3,w[f++]=$+2,w[f++]=$+5,w[f++]=$+3,w[f++]=$+5,w[f++]=$+6,w[f++]=$+3}}return{vertexData:A,indexData:w}}const ut=[];function ce(t,e){if(ut.length===0)for(let u=0;u<30;u++)ut.push(le(5*u,0,!e.invertDirection));const n=mt(ht.fromJSON(e.inputUnit),"knots"),{width:r,height:o,mask:i}=t,s=t.pixels[0],c=t.pixels[1],h=6,a=[],l=[];let f=0,p=0;for(let u=0;u<o;u++)for(let d=0;d<r;d++){const m=u*r+d,g=s[m]*n;if((!i||i[u*r+d])&&g>=dt){const y=(c[m]+360)%360/180*Math.PI,{pennants:A,barbs:w,shaft:k}=ut[Math.min(Math.floor(g/5),29)];if(A.length+w.length===0)continue;let x=a.length/h;const M=(d+.5)/r,U=(u+.5)/o;for(let b=0;b<A.length;b+=2)a[f++]=M,a[f++]=U,a[f++]=A[b],a[f++]=A[b+1]+y,a[f++]=0,a[f++]=g;for(let b=0;b<w.length;b+=2)a[f++]=M,a[f++]=U,a[f++]=w[b],a[f++]=w[b+1]+y,a[f++]=0,a[f++]=g;for(let b=0;b<k.length;b+=2)a[f++]=M,a[f++]=U,a[f++]=k[b],a[f++]=k[b+1]+y,a[f++]=0,a[f++]=g;for(let b=0;b<A.length/6;b++)l[p++]=x,l[p++]=x+1,l[p++]=x+2,x+=3;for(let b=0;b<w.length/8;b++)l[p++]=x,l[p++]=x+1,l[p++]=x+2,l[p++]=x+1,l[p++]=x+2,l[p++]=x+3,x+=4;l[p++]=x+0,l[p++]=x+1,l[p++]=x+2,l[p++]=x+1,l[p++]=x+3,l[p++]=x+2,x+=4}}return{vertexData:new Float32Array(a),indexData:new Uint32Array(l)}}function fe(t,e){let r=0,o=0;const{width:i,height:s,mask:c}=t,h=t.pixels[0],a=[],l=[],f=mt(ht.fromJSON(e.inputUnit),"knots"),p=e.style==="wind_speed"?dt:Number.MAX_VALUE;for(let u=0;u<s;u++)for(let d=0;d<i;d++){const m=h[u*i+d]*f;if((!c||c[u*i+d])&&m<p){for(let y=0;y<4;y++)a[r++]=(d+.5)/i,a[r++]=(u+.5)/s,a[r++]=y<2?-.5:.5,a[r++]=y%2==0?-.5:.5,a[r++]=0,a[r++]=m;const g=4*(r/24-1);l[o++]=g,l[o++]=g+1,l[o++]=g+2,l[o++]=g+1,l[o++]=g+2,l[o++]=g+3}}return{vertexData:new Float32Array(a),indexData:new Uint32Array(l)}}function We(t,e){return e.style==="simple_scalar"?fe(t,e):e.style==="wind_speed"?ce(t,e):he(t,e)}function ze(t,e,n,r=[0,0],o=.5){const{width:i,height:s,mask:c}=t,[h,a]=t.pixels,[l,f]=r,p=Math.round((i-l)/n),u=Math.round((s-f)/n),d=p*u,m=new Float32Array(d),g=new Float32Array(d),y=new Uint8Array(d);for(let w=0;w<u;w++)for(let k=0;k<p;k++){let x=0;const M=w*p+k,U=Math.max(0,w*n+f),b=Math.max(0,k*n+l),P=Math.min(s,U+n),$=Math.min(i,b+n);for(let T=U;T<P;T++)for(let v=b;v<$;v++){const B=T*i+v;if(!c||c[B]){x++;const V=[h[B],a[B]],[S,I]=V;m[M]+=S,g[M]+=I}}if(x>=(P-U)*($-b)*(1-o)){y[M]=1;const[T,v]=Ct([m[M]/x,g[M]/x]);m[M]=T,g[M]=v}else y[M]=0,m[M]=0,g[M]=0}const A=new _({width:p,height:u,pixels:[m,g],mask:y});return A.updateStatistics(),A}const J=()=>Z.getLogger("esri.views.2d.engine.flow.dataUtils"),ue=10;async function Xe(t,e,n,r){const o=performance.now(),i=pe(e,n),s=performance.now(),c=me(e,i,n.width,n.height),h=performance.now(),a=xe(c),l=performance.now(),f=t==="Streamlines"?we(a,ue):ye(a),p=performance.now();return nt("esri-2d-profiler")&&(J().info("I.1","_createFlowFieldFromData (ms)",Math.round(s-o)),J().info("I.2","_getStreamlines (ms)",Math.round(h-s)),J().info("I.3","createAnimatedLinesData (ms)",Math.round(l-h)),J().info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(p-l)),J().info("I.5","createFlowMesh (ms)",Math.round(p-o)),J().info("I.6","Mesh size (bytes)",f.vertexData.buffer.byteLength+f.indexData.buffer.byteLength)),await Promise.resolve(),jt(r),f}function pe(t,e){const n=ge(e.data,e.width,e.height,t.smoothing);return t.interpolate?(r,o)=>{const i=Math.floor(r),s=Math.floor(o);if(i<0||i>=e.width)return[0,0];if(s<0||s>=e.height)return[0,0];const c=r-i,h=o-s,a=i,l=s,f=i<e.width-1?i+1:i,p=s<e.height-1?s+1:s,u=n[2*(l*e.width+a)],d=n[2*(l*e.width+f)],m=n[2*(p*e.width+a)],g=n[2*(p*e.width+f)],y=n[2*(l*e.width+a)+1],A=n[2*(l*e.width+f)+1];return[(u*(1-h)+m*h)*(1-c)+(d*(1-h)+g*h)*c,(y*(1-h)+n[2*(p*e.width+a)+1]*h)*(1-c)+(A*(1-h)+n[2*(p*e.width+f)+1]*h)*c]}:(r,o)=>{const i=Math.round(r),s=Math.round(o);return i<0||i>=e.width||s<0||s>=e.height?[0,0]:[n[2*(s*e.width+i)],n[2*(s*e.width+i)+1]]}}function de(t,e,n,r,o,i,s,c,h){const a=[];let l=n,f=r,p=0,[u,d]=e(l,f);u*=t.velocityScale,d*=t.velocityScale;const m=Math.sqrt(u*u+d*d);let g,y;a.push({x:l,y:f,t:p,speed:m});for(let A=0;A<t.verticesPerLine;A++){let[w,k]=e(l,f);w*=t.velocityScale,k*=t.velocityScale;const x=Math.sqrt(w*w+k*k);if(x<t.minSpeedThreshold)return a;const M=w/x,U=k/x;if(l+=M*t.segmentLength,f+=U*t.segmentLength,p+=t.segmentLength/x,Math.acos(M*g+U*y)>t.maxTurnAngle)return a;if(t.collisions){const b=Math.round(l*h),P=Math.round(f*h);if(b<0||b>s-1||P<0||P>c-1)return a;const $=i[P*s+b];if($!==-1&&$!==o)return a;i[P*s+b]=o}a.push({x:l,y:f,t:p,speed:x}),g=M,y=U}return a}function me(t,e,n,r){const o=[],i=new vt,s=1/Math.max(t.lineCollisionWidth,1),c=Math.round(n*s),h=Math.round(r*s),a=new Int32Array(c*h);for(let f=0;f<a.length;f++)a[f]=-1;const l=[];for(let f=0;f<r;f+=t.lineSpacing)for(let p=0;p<n;p+=t.lineSpacing)l.push({x:p,y:f,sort:i.getFloat()});l.sort((f,p)=>f.sort-p.sort);for(const{x:f,y:p}of l)if(i.getFloat()<t.density){const u=de(t,e,f,p,o.length,a,c,h,s);if(u.length<2)continue;o.push(u)}return o}function ge(t,e,n,r){if(r===0)return t;const o=Math.round(3*r),i=new Array(2*o+1);let s=0;for(let a=-o;a<=o;a++){const l=Math.exp(-a*a/(r*r));i[a+o]=l,s+=l}for(let a=-o;a<=o;a++)i[a+o]/=s;const c=new Float32Array(t.length);for(let a=0;a<n;a++)for(let l=0;l<e;l++){let f=0,p=0;for(let u=-o;u<=o;u++){if(l+u<0||l+u>=e)continue;const d=i[u+o];f+=d*t[2*(a*e+(l+u))],p+=d*t[2*(a*e+(l+u))+1]}c[2*(a*e+l)]=f,c[2*(a*e+l)+1]=p}const h=new Float32Array(t.length);for(let a=0;a<e;a++)for(let l=0;l<n;l++){let f=0,p=0;for(let u=-o;u<=o;u++){if(l+u<0||l+u>=n)continue;const d=i[u+o];f+=d*c[2*((l+u)*e+a)],p+=d*c[2*((l+u)*e+a)+1]}h[2*(l*e+a)]=f,h[2*(l*e+a)+1]=p}return h}function xe(t,e){const n=new vt,r=t.reduce((h,a)=>h+a.length,0),o=new Float32Array(4*r),i=new Array(t.length);let s=0,c=0;for(const h of t){const a=s;for(const l of h)o[4*s]=l.x,o[4*s+1]=l.y,o[4*s+2]=l.t,o[4*s+3]=l.speed,s++;i[c++]={startVertex:a,numberOfVertices:h.length,totalTime:h[h.length-1].t,timeSeed:n.getFloat()}}return{lineVertices:o,lineDescriptors:i}}function we(t,e){const{lineVertices:r,lineDescriptors:o}=t;let i=0,s=0;for(const u of o)i+=2*u.numberOfVertices,s+=6*(u.numberOfVertices-1);const c=new Float32Array(i*9),h=new Uint32Array(s);let a=0,l=0;function f(){h[l++]=a-2,h[l++]=a,h[l++]=a-1,h[l++]=a,h[l++]=a+1,h[l++]=a-1}function p(u,d,m,g,y,A,w,k){const x=a*9;let M=0;c[x+M++]=u,c[x+M++]=d,c[x+M++]=1,c[x+M++]=m,c[x+M++]=A,c[x+M++]=w,c[x+M++]=g/2,c[x+M++]=y/2,c[x+M++]=k,a++,c[x+M++]=u,c[x+M++]=d,c[x+M++]=-1,c[x+M++]=m,c[x+M++]=A,c[x+M++]=w,c[x+M++]=-g/2,c[x+M++]=-y/2,c[x+M++]=k,a++}for(const u of o){const{totalTime:d,timeSeed:m}=u;let g=null,y=null,A=null,w=null,k=null,x=null;for(let M=0;M<u.numberOfVertices;M++){const U=r[4*(u.startVertex+M)],b=r[4*(u.startVertex+M)+1],P=r[4*(u.startVertex+M)+2],$=r[4*(u.startVertex+M)+3];let T=null,v=null,B=null,V=null;if(M>0){T=U-g,v=b-y;const S=Math.sqrt(T*T+v*v);if(T/=S,v/=S,M>1){let I=T+k,C=v+x;const F=Math.sqrt(I*I+C*C);I/=F,C/=F;const E=Math.min(1/(I*T+C*v),e);I*=E,C*=E,B=-C,V=I}else B=-v,V=T;B!==null&&V!==null&&(p(g,y,A,B,V,d,m,$),f())}g=U,y=b,A=P,k=T,x=v,w=$}p(g,y,A,-x,k,d,m,w)}return{vertexData:c,indexData:h}}function ye(t){const{lineVertices:o,lineDescriptors:i}=t;let s=0,c=0;for(const S of i){const I=S.numberOfVertices-1;s+=4*I*2,c+=6*I*2}const h=new Float32Array(s*16),a=new Uint32Array(c);let l,f,p,u,d,m,g,y,A,w,k,x,M,U,b=0,P=0;function $(){a[P++]=b-8,a[P++]=b-7,a[P++]=b-6,a[P++]=b-7,a[P++]=b-5,a[P++]=b-6,a[P++]=b-4,a[P++]=b-3,a[P++]=b-2,a[P++]=b-3,a[P++]=b-1,a[P++]=b-2}function T(S,I,C,F,E,q,R,O,z,H,et,Q,it,st){const D=b*16;let N=0;for(const ct of[1,2])for(const Vt of[1,2,3,4])h[D+N++]=S,h[D+N++]=I,h[D+N++]=C,h[D+N++]=F,h[D+N++]=R,h[D+N++]=O,h[D+N++]=z,h[D+N++]=H,h[D+N++]=ct,h[D+N++]=Vt,h[D+N++]=it,h[D+N++]=st,h[D+N++]=E/2,h[D+N++]=q/2,h[D+N++]=et/2,h[D+N++]=Q/2,b++}function v(S,I){let C=A+k,F=w+x;const E=Math.sqrt(C*C+F*F);C/=E,F/=E;const q=A*C+w*F;C/=q,F/=q;let R=k+M,O=x+U;const z=Math.sqrt(R*R+O*O);R/=z,O/=z;const H=k*R+x*O;R/=H,O/=H,T(l,f,p,u,-F,C,d,m,g,y,-O,R,S,I),$()}function B(S,I,C,F,E,q){if(A=k,w=x,k=M,x=U,A==null&&w==null&&(A=k,w=x),d!=null&&m!=null){M=S-d,U=I-m;const R=Math.sqrt(M*M+U*U);M/=R,U/=R}A!=null&&w!=null&&v(E,q),l=d,f=m,p=g,u=y,d=S,m=I,g=C,y=F}function V(S,I){A=k,w=x,k=M,x=U,A==null&&w==null&&(A=k,w=x),A!=null&&w!=null&&v(S,I)}for(const S of i){l=null,f=null,p=null,u=null,d=null,m=null,g=null,y=null,A=null,w=null,k=null,x=null,M=null,U=null;const{totalTime:I,timeSeed:C}=S;for(let F=0;F<S.numberOfVertices;F++)B(o[4*(S.startVertex+F)],o[4*(S.startVertex+F)+1],o[4*(S.startVertex+F)+2],o[4*(S.startVertex+F)+3],I,C);V(I,C)}return{vertexData:h,indexData:a}}function At(t,e){const n=e.pixels,{width:r,height:o}=e,i=new Float32Array(r*o*2),s=e.mask||new Uint8Array(r*o*2);if(e.mask||s.fill(255),t==="vector-uv")for(let c=0;c<r*o;c++)i[2*c]=n[0][c],i[2*c+1]=-n[1][c];else if(t==="vector-magdir")for(let c=0;c<r*o;c++){const h=n[0][c],a=qt(n[1][c]),l=Math.cos(a-Math.PI/2),f=Math.sin(a-Math.PI/2);i[2*c]=l*h,i[2*c+1]=f*h}return{data:i,mask:s,width:r,height:o}}async function Je(t,e,n,r,o,i){const s=performance.now(),c=Gt(e.spatialReference);if(!c){const k=await bt(t,e,n,r,o,i);return nt("esri-2d-profiler")&&J().info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-s)),nt("esri-2d-profiler")&&J().info("I.9","Number of parts",1),k}const[h,a]=c.valid,l=a-h,f=Math.ceil(e.width/l),p=e.width/f,u=Math.round(n/f);let d=e.xmin;const m=[],g=performance.now();for(let k=0;k<f;k++){const x=new Ot({xmin:d,xmax:d+p,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});m.push(bt(t,x,u,r,o,i)),d+=p}const y=await Promise.all(m);nt("esri-2d-profiler")&&J().info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-g)),nt("esri-2d-profiler")&&J().info("I.9","Number of parts",y.length);const A={data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r};let w=0;for(const k of y){for(let x=0;x<k.height;x++)for(let M=0;M<k.width;M++)w+M>=n||(A.data[2*(x*n+w+M)]=k.data[2*(x*k.width+M)],A.data[2*(x*n+w+M)+1]=k.data[2*(x*k.width+M)+1],A.mask[x*n+w+M]=k.mask[x*k.width+M]);w+=k.width}return nt("esri-2d-profiler")&&J().info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-s)),A}async function bt(t,e,n,r,o,i){const s={requestProjectedLocalDirections:!0,signal:i};if(o!=null&&(s.timeExtent=o),t.type==="imagery"){await t.load({signal:i});const a=t.rasterInfo.dataType,l=await t.fetchImage(e,n,r,s);return l?.pixelData?.pixelBlock==null?{data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r}:At(a,l.pixelData.pixelBlock)}await t.load({signal:i});const c=t.serviceRasterInfo.dataType,h=await t.fetchPixels(e,n,r,s);return h?.pixelBlock==null?{data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r}:At(c,h.pixelBlock)}export{_e as A,$e as B,Fe as C,je as D,Ne as E,Ve as F,$t as G,Ce as H,De as M,Ee as R,ze as S,Le as T,te as U,Re as W,fe as _,Je as a,We as b,Ue as c,Ae as d,ht as e,Mt as f,_ as g,mt as h,Ut as i,rt as j,Ie as k,Ct as l,qe as m,Se as n,L as o,Oe as p,Be as q,Te as r,Xe as s,ve as t,Ge as u,be as v,Jt as w,Pe as x,xt as y,gt as z};
