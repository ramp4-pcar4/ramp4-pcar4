const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./imageryUtils-CoefjEJI.js","./utils-HKEwAEY3.js","./main-7nqzKo04.js","./preload-helper-ExcqyqRp.js","./main-gKmidBZg.css","./originUtils-CPX8CCAY.js","./multiOriginJSONSupportUtils-C0wm8_Yw.js","./PortalItem-CUJ-aEPg.js","./jsonContext-khEd6dAJ.js","./portalItemUtils-BrITqBoP.js","./projection-uWASLutg.js","./projectBuffer-DohnbaJT.js","./saveUtils-C9oLYb48.js"])))=>i.map(i=>d[i]);
import{_ as zt}from"./preload-helper-ExcqyqRp.js";import{h as $,q as r,u as o,v as I,C as R,A as F,b0 as fe,bx as V,D as ie,br as Ge,az as Lt,b4 as ne,jm as ge,jl as et,aY as Y,jn as tt,z as J,bF as ut,aw as Je,b5 as ee,bm as Ut,bG as Ht,cJ as M,U as x,bp as pt,I as Bt,n as It,s as b,aG as Qt,b3 as kt,jo as Wt,g2 as Zt,dD as Kt,J as Xt,b6 as Yt}from"./main-7nqzKo04.js";import{S as ei}from"./MultiOriginJSONSupport-B6J-W59E.js";import{f as ti}from"./Layer-Bmiqc_vS.js";import{N as S,a as he,i as Ee,j as H,g as ii,c as ri,l as si,d as ni,n as nt,b as ai,h as Ft,p as oi,f as li,B as ui,L as pi,U as ci,q as mi,e as di,t as yi,o as hi}from"./RasterPresetRendererMixin-BOFqXWxq.js";import{f as gi,y as fi,d as wi,l as Ri}from"./commonProperties-DUIuHWjS.js";import{m as at,g as vi,p as bi,d as Si}from"./multidimensionalUtils-BcmlNgvy.js";import{j as xi,g as ot,s as Ii,l as Fi}from"./dataUtils-BgmS2dJe.js";import{A as Nt,d as _t,e as Di,q as Ti,s as ji,n as Pi,a as Ot,_ as Ni,j as Dt,P as _i}from"./RasterSymbolizer-CrcZxWKE.js";import{b as Oi}from"./UniqueValueRenderer-_2Kx4xvv.js";import{y as we}from"./Field-DlKE1Mj8.js";import{Z as Ci}from"./FieldsIndex-Ba_LhL6O.js";import{t as Tt}from"./imageBitmapUtils-GkqCrK-I.js";import{R as xe}from"./normalizeUtils-Bz4pPiym.js";import{f as E,s as G,i as z}from"./utils-BZ-awri-.js";import{s as $i,b as lt}from"./Query-BotaYlLX.js";import{p as bt}from"./TimeExtent-LauUhoJg.js";import{d as Ct}from"./FeatureSet-D9asjXuQ.js";import{a as Ai,s as Vi}from"./executeForIds-C8fab95y.js";import{s as Mi}from"./executeQueryJSON--joNQgex.js";import{l as Ji}from"./ArcGISService-BlFEeojs.js";import{l as Ei}from"./BlendLayer-B3kEVn1W.js";import{e as qi}from"./CustomParametersMixin-COQliALH.js";import{b as Gi}from"./OperationalLayer-Ced0SM8k.js";import{j as zi}from"./PortalLayer-asxaaElk.js";import{f as Li}from"./RefreshableLayer-BFSuWiFU.js";import{t as Ui}from"./ScaleRangeLayer-3rKl-Gjx.js";import{l as Hi}from"./TemporalLayer-D8TYMwyL.js";import{t as Bi}from"./versionUtils-Dca1Hlo9.js";import{p as Qi}from"./popupUtils-Hc7lsAxF.js";import{A as Ue}from"./interfaces-CL2NbQte.js";import"./workers-yoQEo-M6.js";import"./RendererLegendOptions-DWCNE36I.js";import"./ClassBreaksDefinition-BNohlYZV.js";import"./colorRamps-ChyDqgUz.js";import"./visualVariableUtils-CLocs99Y.js";import"./compilerUtils-DO1ngQxB.js";import"./lengthUtils-yTwjD6q3.js";import"./sizeVariableUtils-Cmcuvw-4.js";import"./utils-B4xEeHqi.js";import"./parser-CHHf2xzw.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-gnzTYV35.js";import"./common-DQOJ18NT.js";import"./cimSymbolUtils-CZVpT9-w.js";import"./utils-QWndGYJy.js";import"./enums-CmIX1y88.js";import"./LRUCache-iH9TkhNf.js";import"./ElevationInfo-BeK7kpCR.js";import"./_commonjsHelpers-DCkdB7M8.js";import"./colorUtils-ZVjV-Ek5.js";import"./vec42-CKs01hkn.js";import"./vec4f64-CMoMXWBi.js";import"./diffUtils-DwXtBCa8.js";import"./styleUtils-BpR5Pli9.js";import"./fieldType-CmjutMKi.js";import"./UnknownTimeZone-BbXWTWnn.js";import"./normalizeUtilsCommon-BDljxOu-.js";import"./utils-RBj55bRD.js";import"./query-4-hn2cMV.js";import"./pbfQueryUtils-WAWHXn8s.js";import"./pbf-B2aHlyuq.js";import"./OptimizedFeature-CIptWNVu.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./queryZScale-DOJ8BH8B.js";import"./projection-uWASLutg.js";import"./projectBuffer-DohnbaJT.js";import"./arcgisLayerUrl-Bgq-0hIo.js";import"./jsonUtils-Ej-u0sVu.js";import"./PortalItem-CUJ-aEPg.js";import"./portalItemUtils-BrITqBoP.js";import"./TimeInfo-Cv4_eppp.js";const ki={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}},Wi=new Set(["u1","u2","u4","u8","s8","u16","s16"]),Zi={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},Ki=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function $t(s){return Ki.has(s.type)}function ct(s,t){if(!s||!t)return $(s||t);const a=$(s);if(a.functionDefinition&&t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=void 0),At(a.functionDefinition.arguments,t),a.rasterFunctionDefinition=a.functionDefinition.toJSON()}else t.functionName?.toLowerCase()!=="none"&&(Vt(a.functionArguments).Raster=t);return a}function At(s,t){for(const a in s)a.toLowerCase()==="raster"&&(s[a].type==="RasterFunctionVariable"?(s[a]=t.rasterFunctionDefinition,s[a].type="RasterFunctionTemplate"):s[a].type==="RasterFunctionTemplate"&&At(s[a].arguments,t))}function re(s){const t=$(ki[s.functionName+"Function"]),a=s.functionArguments;for(const e in a)e.toLowerCase()==="raster"?(t.arguments[e]=re(a[e]),t.arguments[e].type="RasterFunctionTemplate"):e.toLowerCase()==="colormap"?(t.arguments[e].value=nr(a[e]),t.arguments.ColorSchemeType.value=0):t.arguments[e].value=a[e];return t}function Xi(s,t){switch(t=t||{},s.type){case"raster-stretch":return tr(s,t);case"class-breaks":return ir(s,t);case"unique-value":return rr(s,t);case"raster-colormap":return sr(s,t);case"vector-field":return Yi(s,t);case"raster-shaded-relief":return er(s,t);case"flow":throw new Error("Unsupported rendering rule.")}}function Vt(s){const t=s?.Raster??s?.raster;return t&&t.declaredClass==="esri.layers.support.RasterFunction"?Vt(t.functionArguments):s}const Ce={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function Yi(s,t){const a=new S;a.functionName="VectorFieldRenderer";const{dataType:e,bandNames:i}=t,n=e==="vector-uv";let l,u;if(i&&i.length===2){const f=i.map(w=>w.toLowerCase());l=f.indexOf("magnitude"),u=f.indexOf("direction")}l!==-1&&l!==null||(l=0,u=1);const p=s.rotationType==="arithmetic"?1:2,m=s.flowRepresentation==="flow-from"?0:1,c=s.visualVariables?s.visualVariables.find(f=>f.field==="Magnitude"):new Oi,d={magnitudeBandID:l,directionBandID:u,isUVComponents:n,referenceSystem:p,massFlowAngleRepresentation:m,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:Zi[s.style.toLowerCase().replace("-","_")],minimumMagnitude:c.minDataValue,maximumMagnitude:c.maxDataValue,minimumSymbolSize:c.minSize,maximumSymbolSize:c.maxSize};a.functionArguments=d;const h=re(a);return t.convertToRFT?S.fromJSON({rasterFunctionDefinition:h}):a}function er(s,t){const a=t.convertToRFT;if(t.dataType!=="elevation"&&(t.dataType!=="generic"||t.bandCount!==1||t.pixelType!=="s16"&&t.pixelType!=="s32"&&t.pixelType!=="f32"&&t.pixelType!=="f64"))return new S;const e=new S;e.functionName="Hillshade";const i=s.hillshadeType==="traditional"?0:1,n=s.scalingType==="none"?1:3,l={HillshadeType:i,SlopeType:n,ZFactor:s.zFactor};return i===0&&(l.Azimuth=s.azimuth,l.Altitude=s.altitude),n===3&&(l.PSPower=s.pixelSizePower,l.PSZFactor=s.pixelSizeFactor),e.functionArguments=l,e.variableName="Raster",s.colorRamp&&(e.functionName="ShadedRelief",a?l.ColorRamp=Nt(s.colorRamp):l.Colormap=_t(s.colorRamp)),a?new S({rasterFunctionDefinition:re(e)}):e}function tr(s,t){const a=t.convertToRFT,e=new S;e.functionName="Stretch";const i=Ce[Di.toJSON(s.stretchType)],n="u8",l=s.customStatistics?.map(p=>[p.min,p.max,p.avg??0,p.stddev??1]),u={StretchType:i,Statistics:l,DRA:s.dynamicRangeAdjustment,UseGamma:s.useGamma,Gamma:s.gamma,ComputeGamma:s.computeGamma};if(s.outputMin!=null&&(u.Min=s.outputMin),s.outputMax!=null&&(u.Max=s.outputMax),i===Ce.standardDeviation?(u.NumberOfStandardDeviations=s.numberOfStandardDeviations,e.outputPixelType=n):i===Ce.percentClip?(u.MinPercent=s.minPercent,u.MaxPercent=s.maxPercent,e.outputPixelType=n):i===Ce.minMax?e.outputPixelType=n:i===Ce.sigmoid&&(u.SigmoidStrengthLevel=s.sigmoidStrengthLevel),e.functionArguments=u,e.variableName="Raster",s.colorRamp){const p=s.colorRamp,m=new S;if(a)m.functionArguments={ColorRamp:Nt(p)};else{const c=Ti(p,!0);if(c)m.functionArguments={colorRampName:c};else if(!t.convertColorRampToColormap||p.type!=="algorithmic"&&p.type!=="multipart"){const d=s.colorRamp.toJSON();d.type==="algorithmic"?d.algorithm=d.algorithm||"esriCIELabAlgorithm":d.type==="multipart"&&d.colorRamps?.length&&d.colorRamps.forEach(h=>h.algorithm=h.algorithm||"esriCIELabAlgorithm"),m.functionArguments={colorRamp:d}}else m.functionArguments={Colormap:_t(p)}}return m.variableName="Raster",m.functionName="Colormap",m.functionArguments.Raster=e,a?new S({rasterFunctionDefinition:re(m)}):m}return a?new S({rasterFunctionDefinition:re(e)}):e}function ir(s,t){const a=[],e=[],i=[],n=[],{pixelType:u,rasterAttributeTable:p}=t,m=p==null?null:p.features,c=Mt(p);if(c&&m&&Array.isArray(m)&&s.classBreakInfos){s.classBreakInfos.forEach((g,v)=>{const T=g.symbol?.color;let P;T?.a&&g.minValue!=null&&g.maxValue!=null&&m.forEach(C=>{g.minValue!=null&&g.maxValue!=null&&(P=C.attributes[s.field],(P>=g.minValue&&P<g.maxValue||v===s.classBreakInfos.length-1&&P>=g.minValue)&&n.push([C.attributes[c],T.r,T.g,T.b]))})});const w=u?it(n,u):n,y=new S;return y.functionName="Colormap",y.functionArguments={},y.functionArguments.Colormap=w,y.variableName="Raster",t.convertToRFT?new S({rasterFunctionDefinition:re(y)}):y}s.classBreakInfos.forEach((w,y)=>{if(w.minValue==null||w.maxValue==null)return;const g=w.symbol&&w.symbol.color;g?.a?(y===0?a.push(w.minValue,w.maxValue+1e-4):a.push(w.minValue+1e-4,w.maxValue+1e-4),e.push(y),n.push([y,g.r,g.g,g.b])):i.push(w.minValue,w.maxValue)});const d=u?it(n,u):n,h=new S;h.functionName="Remap",h.functionArguments={InputRanges:a,OutputValues:e,NoDataRanges:i},h.variableName="Raster";const f=new S;return f.functionName="Colormap",f.functionArguments={Colormap:d,Raster:h},t.convertToRFT?new S({rasterFunctionDefinition:re(f)}):f}function it(s,t){const a=Wi.has(t)?xi(t):null;return a&&s.push([Math.floor(a[0]-1),0,0,0],[Math.ceil(a[1]+1),0,0,0]),s}function Mt(s){if(s==null)return;const{fields:t}=s;return t?.find(e=>e?.name&&e.name.toLowerCase()==="value")?.name}function rr(s,t){const a=[],{pixelType:e,rasterAttributeTable:i}=t,n=i==null?null:i.features,l=Mt(i),u=s.defaultSymbol?.color?.toRgb(),p=s.uniqueValueInfos;if(p)if(n){if(l){const d=new Map;p.forEach(f=>{const w=f.value,y=jt(f);w!=null&&y?.a&&d.set(String(w),y.toRgb())});const h=s.field;h&&n.forEach(({attributes:f})=>{const w=String(f[h]),y=f[l],g=d.get(w);g?a.push([y,...g]):u&&a.push([y,...u])})}}else for(let d=0;d<p.length;d++){const h=p[d],f=jt(h),w=+h.value;if(f?.a){if(isNaN(w))return null;a.push([w,f.r,f.g,f.b])}}const m=e?it(a,e):a,c=new S;return c.functionName="Colormap",c.functionArguments={},c.functionArguments.Colormap=m,c.variableName="Raster",t.convertToRFT?new S({rasterFunctionDefinition:re(c)}):c}function jt(s){return s.symbol?.type==="polygon-3d"?s.symbol.symbolLayers?.find(t=>t.type==="fill")?.material?.color:s.symbol?.color}function sr(s,t){const a=s.extractColormap();if(!a||a.length===0)return null;const{pixelType:e}=t,i=e?it(a,e):a,n=new S;return n.functionName="Colormap",n.functionArguments={},n.functionArguments.Colormap=i,t.convertToRFT?new S({rasterFunctionDefinition:re(n)}):n}function nr(s){const t=[],a=[];return s.forEach(e=>{t.push(e[0]),a.push(ji([...e.slice(1),255]))}),{type:"RasterColormap",values:t,colors:a}}let _=class extends F{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.pixelType=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(t,a,e){this.layer.version<10.3||(a[e]=t)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(t,a,e){this.format&&this.format.toLowerCase().includes("jpg")&&t!=null&&(a[e]=t)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(t,a,e){this.format==="lerc"&&t!=null&&(a[e]=t)}get format(){return this.layer.renderer?.type==="vector-field"?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}writeLercVersion(t,a,e){this.format==="lerc"&&this.layer.version>=10.5&&(a[e]=t)}get version(){const t=this.layer;return t.commitProperty("bandIds"),t.commitProperty("format"),t.commitProperty("compressionQuality"),t.commitProperty("compressionTolerance"),t.commitProperty("interpolation"),t.commitProperty("noData"),t.commitProperty("noDataInterpretation"),t.commitProperty("mosaicRule"),t.commitProperty("rasterFunction"),t.commitProperty("adjustAspectRatio"),t.commitProperty("pixelFilter"),t.commitProperty("definitionExpression"),t.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(t){this._set("version",t)}get mosaicRule(){const t=this.layer;let a=t.mosaicRule;const e=t.definitionExpression;return a?e&&e!==a.where&&(a=a.clone(),a.where=e):e&&(a=new H({where:e})),a}get rasterFunction(){const t=this.layer;let{rasterFunction:a}=t;const e=t.pixelFilter,i=!t.format||t.format.includes("jpg")||t.format.includes("png");a=this._addResampleRasterFunction(a);const n=t.multidimensionalSubset?.areaOfInterest;return n&&(a=ar(a,n)),i&&!e&&t.renderer?.type!=="vector-field"&&(a=this.combineRendererWithRenderingRule(a)),a}combineRendererWithRenderingRule(t){const a=this.layer,{rasterInfo:e,renderer:i}=a;return t=t||a.rasterFunction,!i||!$t(i)?t:ct(Xi(i,{rasterAttributeTable:e.attributeTable,pixelType:e.pixelType,dataType:e.dataType,bandNames:e.bandInfos.map(({name:n})=>n),convertColorRampToColormap:a.version<10.6,convertToRFT:!!t?.rasterFunctionDefinition,bandCount:e.bandCount}),t)}_addResampleRasterFunction(t){if(this.layer.renderer?.type!=="vector-field"||t?.functionName==="Resample")return t;const a=this.layer.serviceDataType==="esriImageServiceDataTypeVector-UV"?7:10,e=this.layer.serviceRasterInfo.pixelSize;let i=new S({functionName:"Resample",functionArguments:{ResamplingType:a,InputCellSize:e}});return i=t?.rasterFunctionDefinition?new S({rasterFunctionDefinition:re(i)}):i,ct(i,t)}};function ar(s,t){const a=new S({functionName:"Clip",functionArguments:{ClippingGeometry:t.toJSON(),ClippingType:1}});return ct(a,s)}r([o()],_.prototype,"layer",void 0),r([o({json:{write:!0}})],_.prototype,"adjustAspectRatio",null),r([I("adjustAspectRatio")],_.prototype,"writeAdjustAspectRatio",null),r([o({json:{write:!0}})],_.prototype,"bandIds",null),r([o({json:{write:!0}})],_.prototype,"compression",void 0),r([o({json:{write:!0}})],_.prototype,"compressionQuality",null),r([I("compressionQuality")],_.prototype,"writeCompressionQuality",null),r([o({json:{write:!0}})],_.prototype,"compressionTolerance",null),r([I("compressionTolerance")],_.prototype,"writeCompressionTolerance",null),r([o({json:{write:!0}})],_.prototype,"format",null),r([o({type:String,json:{read:{reader:he.read},write:{writer:he.write}}})],_.prototype,"interpolation",null),r([o({json:{write:!0}})],_.prototype,"noData",null),r([o({type:String,json:{read:{reader:Ee.read},write:{writer:Ee.write}}})],_.prototype,"noDataInterpretation",null),r([o({json:{write:!0}})],_.prototype,"pixelType",void 0),r([o({json:{write:!0}})],_.prototype,"lercVersion",void 0),r([I("lercVersion")],_.prototype,"writeLercVersion",null),r([o({type:Number})],_.prototype,"version",null),r([o({json:{write:!0}})],_.prototype,"mosaicRule",null),r([o({json:{write:!0,name:"renderingRule"}})],_.prototype,"rasterFunction",null),_=r([R("esri.layers.support.ExportImageServiceParameters")],_);let ce=class extends fe(F){constructor(){super(...arguments),this.fromGeometry=null,this.toGeometry=null,this.objectIds=null,this.where=null,this.maxCount=null}};r([o({type:V,json:{read:!0}})],ce.prototype,"fromGeometry",void 0),r([o({type:V,json:{read:!0,write:!0}})],ce.prototype,"toGeometry",void 0),r([o({json:{write:!0}})],ce.prototype,"objectIds",void 0),r([o({type:String,json:{write:!0}})],ce.prototype,"where",void 0),r([o({type:Number,json:{write:!0}})],ce.prototype,"maxCount",void 0),ce=r([R("esri.rest.support.FindImagesParameters")],ce);const or=ce,Jt=s=>{let t=class extends s{constructor(){super(...arguments),this.make=null,this.model=null,this.focalLength=null,this.pixelSize=null,this.rows=null,this.cols=null}};return r([o({json:{write:!0}})],t.prototype,"make",void 0),r([o({json:{write:!0}})],t.prototype,"model",void 0),r([o({json:{write:!0}})],t.prototype,"focalLength",void 0),r([o({json:{write:!0}})],t.prototype,"pixelSize",void 0),r([o({json:{write:!0}})],t.prototype,"rows",void 0),r([o({json:{write:!0}})],t.prototype,"cols",void 0),t=r([R("esri.rest.support.CameraInfoMixin")],t),t};let W=class extends Jt(F){constructor(){super(...arguments),this.id=null,this.referenceUri=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.perspectiveCenter=null,this.orientation=null}writeAcquisitionDate(t,a){a.acquisitionDate=t?.getTime()}};r([o({json:{write:!0}})],W.prototype,"id",void 0),r([o({json:{name:"uri",write:!0}})],W.prototype,"referenceUri",void 0),r([o({type:Date,json:{write:!0}})],W.prototype,"acquisitionDate",void 0),r([I("acquisitionDate")],W.prototype,"writeAcquisitionDate",null),r([o({json:{write:!0}})],W.prototype,"cameraID",void 0),r([o({type:V,json:{write:!0}})],W.prototype,"center",void 0),r([o({type:V,json:{write:!0}})],W.prototype,"perspectiveCenter",void 0),r([o({json:{write:!0}})],W.prototype,"orientation",void 0),W=r([R("esri.rest.support.ImageInspectionInfo")],W);const lr=W;let He=class extends F{constructor(){super(...arguments),this.images=null}};r([o({type:[lr],json:{write:!0}})],He.prototype,"images",void 0),He=r([R("esri.rest.support.FindImagesResult")],He);const ur=He;var mt;let Re=mt=class extends F{constructor(s){super(s),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new mt($({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};r([o({type:[String],json:{name:"angleName",write:!0}})],Re.prototype,"angleNames",void 0),r([o({type:V,json:{write:!0}})],Re.prototype,"point",void 0),r([o({type:ie,json:{write:!0}})],Re.prototype,"spatialReference",void 0),r([o({type:Ge,json:{write:!0}})],Re.prototype,"rasterId",void 0),Re=mt=r([R("esri.rest.support.ImageAngleParameters")],Re);const pr=Re;let Fe=class extends F{constructor(t){super(t),this.north=null,this.up=null,this.spatialReference=null}};r([o({type:Number,json:{write:!0}})],Fe.prototype,"north",void 0),r([o({type:Number,json:{write:!0}})],Fe.prototype,"up",void 0),r([o({type:ie,json:{write:!0}})],Fe.prototype,"spatialReference",void 0),Fe=r([R("esri.rest.support.ImageAngleResult")],Fe);const cr=Fe,B=new Lt({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let X=class extends F{constructor(){super(...arguments),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};r([o()],X.prototype,"type",void 0),r([o({type:B.apiValues,json:{read:B.read,write:B.write}})],X.prototype,"measureOperation",void 0),r([o({type:H,json:{write:!0}})],X.prototype,"mosaicRule",void 0),r([o({type:V,json:{write:!0}})],X.prototype,"pixelSize",void 0),r([o({json:{write:!0}})],X.prototype,"raster",void 0),X=r([R("esri.rest.support.BaseImageMeasureParameters")],X);var dt;let ae=dt=class extends X{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(s,t,a){s!=null&&(t.geometryType=Y(s),t[a]=s.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new dt($({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};r([o({types:ne,json:{name:"fromGeometry",read:!0,write:!0}})],ae.prototype,"geometry",void 0),r([I("geometry")],ae.prototype,"writeGeometry",null),r([o({type:B.apiValues,json:{write:B.write}})],ae.prototype,"measureOperation",null),r([o({json:{read:!0}})],ae.prototype,"is3D",void 0),r([o({type:String,json:{read:ge.read,write:ge.write}})],ae.prototype,"linearUnit",void 0),r([o({type:String,json:{read:et.read,write:et.write}})],ae.prototype,"areaUnit",void 0),ae=dt=r([R("esri.rest.support.ImageAreaParameters")],ae);const mr=ae;let de=class extends F{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};r([o({type:Number,json:{read:!0,write:!0}})],de.prototype,"value",void 0),r([o({type:String,json:{read:!0,write:!0}})],de.prototype,"displayValue",void 0),r([o({type:Number,json:{read:!0,write:!0}})],de.prototype,"uncertainty",void 0),de=r([R("esri.rest.support.BaseImageMeasureResult.BaseImageMeasureResultValue")],de);let Ne=class extends de{constructor(){super(...arguments),this.unit=null}};r([o({type:String,json:{read:ge.read,write:ge.write}})],Ne.prototype,"unit",void 0),Ne=r([R("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultLengthValue")],Ne);let Be=class extends de{constructor(){super(...arguments),this.unit=null}};r([o({type:String,json:{read:et.read,write:et.write}})],Be.prototype,"unit",void 0),Be=r([R("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultAreaValue")],Be);let qe=class extends de{constructor(){super(...arguments),this.unit=null}};r([o({type:String,json:{read:tt.read,write:tt.write}})],qe.prototype,"unit",void 0),qe=r([R("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultAngleValue")],qe);let ye=class extends F{constructor(){super(...arguments),this.name=null,this.sensorName=null}};r([o({type:String,json:{read:!0,write:!0}})],ye.prototype,"name",void 0),r([o({type:String,json:{read:!0,write:!0}})],ye.prototype,"sensorName",void 0),ye=r([R("esri.rest.support.BaseImageMeasureResult")],ye);let $e=class extends ye{constructor(){super(...arguments),this.area=null,this.perimeter=null}};r([o({type:Be,json:{read:!0,write:!0}})],$e.prototype,"area",void 0),r([o({type:Ne,json:{read:!0,write:!0}})],$e.prototype,"perimeter",void 0),$e=r([R("esri.rest.support.ImageAreaResult")],$e);const dr=$e;let Qe=class extends fe(F){constructor(){super(...arguments),this.outSpatialReference=null}};r([o({type:ie,json:{name:"outSR",write:!0}})],Qe.prototype,"outSpatialReference",void 0),Qe=r([R("esri.rest.support.ImageBoundaryParameters")],Qe);const yr=Qe;let De=class extends F{constructor(){super(...arguments),this.area=null,this.geometry=null}readGeometry(t,a){return t==null?null:t.rings?ut.fromJSON(t):Je.fromJSON(t)}};r([o({type:Number,json:{write:!0}})],De.prototype,"area",void 0),r([o({json:{name:"shape",write:!0}})],De.prototype,"geometry",void 0),r([J("geometry")],De.prototype,"readGeometry",null),De=r([R("esri.rest.support.ImageBoundaryResult")],De);const hr=De;var yt;let te=yt=class extends X{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(s,t,a){s!=null&&(t.geometryType=Y(s),t[a]=s.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new yt($({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};r([o({type:V,json:{read:!0,write:!0}})],te.prototype,"fromGeometry",void 0),r([I("fromGeometry")],te.prototype,"writeFromGeometry",null),r([o({type:V,json:{read:!0,write:!0}})],te.prototype,"toGeometry",void 0),r([o({type:B.apiValues,json:{write:B.write}})],te.prototype,"measureOperation",null),r([o({json:{read:!0}})],te.prototype,"is3D",void 0),r([o({type:String,json:{read:ge.read,write:ge.write}})],te.prototype,"linearUnit",void 0),r([o({type:String,json:{read:tt.read,write:tt.write}})],te.prototype,"angularUnit",void 0),te=yt=r([R("esri.rest.support.ImageDistanceParameters")],te);const gr=te;let Te=class extends ye{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};r([o({type:Ne,json:{read:!0,write:!0}})],Te.prototype,"distance",void 0),r([o({type:qe,json:{read:!0,write:!0}})],Te.prototype,"azimuthAngle",void 0),r([o({type:qe,json:{read:!0,write:!0}})],Te.prototype,"elevationAngle",void 0),Te=r([R("esri.rest.support.ImageDistanceResult")],Te);const fr=Te;let oe=class extends fe(F){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(t,a,e){t!=null&&(a.geometryType=Y(t),a[e]=JSON.stringify(t.toJSON()))}};r([o({types:ne,json:{read:ee,write:!0}})],oe.prototype,"geometry",void 0),r([I("geometry")],oe.prototype,"writeGeometry",null),r([o({json:{write:!0}})],oe.prototype,"objectIds",void 0),r([Ut($i,{ignoreUnknown:!1,name:"spatialRel"})],oe.prototype,"spatialRelationship",void 0),r([o({type:bt,json:{name:"time",write:!0}})],oe.prototype,"timeExtent",void 0),r([o({type:String,json:{write:!0}})],oe.prototype,"where",void 0),oe=r([R("esri.rest.support.ImageGPSInfoParameters")],oe);const wr=oe;let ke=class extends Jt(F){constructor(){super(...arguments),this.id=null}};r([o({json:{write:!0}})],ke.prototype,"id",void 0),ke=r([R("esri.rest.support.CameraInfo")],ke);const Rr=ke;let Z=class extends F{constructor(){super(...arguments),this.id=null,this.name=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.gps=null,this.orientation=null}writeAcquisitionDate(t,a){a.acquisitionDate=t?.getTime()}};r([o({json:{write:!0}})],Z.prototype,"id",void 0),r([o({json:{write:!0}})],Z.prototype,"name",void 0),r([o({type:Date,json:{write:!0}})],Z.prototype,"acquisitionDate",void 0),r([I("acquisitionDate")],Z.prototype,"writeAcquisitionDate",null),r([o({json:{write:!0}})],Z.prototype,"cameraID",void 0),r([o({type:V,json:{write:!0}})],Z.prototype,"center",void 0),r([o({json:{write:!0}})],Z.prototype,"gps",void 0),r([o({json:{write:!0}})],Z.prototype,"orientation",void 0),Z=r([R("esri.rest.support.ImageGPSInfo")],Z);const vr=Z;let Ae=class extends F{constructor(){super(...arguments),this.images=null,this.cameras=null}};r([o({type:[vr],json:{write:!0}})],Ae.prototype,"images",void 0),r([o({type:[Rr],json:{write:!0}})],Ae.prototype,"cameras",void 0),Ae=r([R("esri.rest.support.ImageGPSInfoResult")],Ae);const br=Ae;var ht;let le=ht=class extends X{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(s,t,a){s!=null&&(t.geometryType=Y(s),t[a]=s.toJSON())}get measureOperation(){return this.operationType}clone(){return new ht($({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};r([o({type:V,json:{read:!0}})],le.prototype,"fromGeometry",void 0),r([I("fromGeometry")],le.prototype,"writeFromGeometry",null),r([o({type:V,json:{read:!0,write:!0}})],le.prototype,"toGeometry",void 0),r([o({type:B.apiValues,json:{write:B.write}})],le.prototype,"measureOperation",null),r([o({json:{read:!0}})],le.prototype,"operationType",void 0),r([o({type:String,json:{read:ge.read,write:ge.write}})],le.prototype,"linearUnit",void 0),le=ht=r([R("esri.rest.support.ImageHeightParameters")],le);const Sr=le;let We=class extends ye{constructor(){super(...arguments),this.height=null}};r([o({type:Ne,json:{read:!0,write:!0}})],We.prototype,"height",void 0),We=r([R("esri.rest.support.ImageHeightResult")],We);const xr=We;var gt;let O=gt=class extends F{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(s,t,a){s!=null&&(t.geometryType=Y(s),t[a]=JSON.stringify(s.toJSON()))}set mosaicRule(s){let t=s;t?.mosaicMethod&&(t=H.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(s,t,a){s!=null&&(t[a]=JSON.stringify(s.toJSON()))}set rasterFunction(s){let t=s;t?.rasterFunction&&(t=S.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}writeRasterFunction(s,t,a){s!=null&&(t[a]=JSON.stringify(s.toJSON())),s.rasterFunctionDefinition&&(t[a]=JSON.stringify(s.rasterFunctionDefinition))}writeRasterFunctions(s,t,a){s!=null&&(t[a]=JSON.stringify(s.map(e=>e.rasterFunctionDefinition||e.toJSON())))}writePixelSize(s,t,a){s!=null&&(t[a]=JSON.stringify(s))}writeTimeExtent(s,t,a){if(s!=null){const e=s.start!=null?s.start.getTime():null,i=s.end!=null?s.end.getTime():null;t[a]=e!=null?i!=null?`${e},${i}`:`${e}`:null}}clone(){return new gt($({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};r([o({json:{write:!0}})],O.prototype,"geometry",void 0),r([I("geometry")],O.prototype,"writeGeometry",null),r([o({type:H,json:{write:!0}})],O.prototype,"mosaicRule",null),r([I("mosaicRule")],O.prototype,"writeMosaicRule",null),r([o({type:S,json:{write:!0,name:"renderingRule"}})],O.prototype,"rasterFunction",null),r([I("rasterFunction")],O.prototype,"writeRasterFunction",null),r([o({type:[S],json:{write:!0,name:"renderingRules"}})],O.prototype,"rasterFunctions",void 0),r([I("rasterFunctions")],O.prototype,"writeRasterFunctions",null),r([o({type:V,json:{write:!0}})],O.prototype,"pixelSize",void 0),r([I("pixelSize")],O.prototype,"writePixelSize",null),r([o({type:Boolean,json:{write:!0}})],O.prototype,"returnGeometry",void 0),r([o({type:Boolean,json:{write:!0}})],O.prototype,"returnCatalogItems",void 0),r([o({type:Boolean,json:{write:!0}})],O.prototype,"returnPixelValues",void 0),r([o({type:Number,json:{write:!0}})],O.prototype,"maxItemCount",void 0),r([o({type:bt,json:{write:{target:"time"}}})],O.prototype,"timeExtent",void 0),r([I("timeExtent")],O.prototype,"writeTimeExtent",null),r([o({json:{write:!0}})],O.prototype,"raster",void 0),r([o({json:{write:!0}})],O.prototype,"viewId",void 0),r([o({type:Boolean,json:{write:!0}})],O.prototype,"processAsMultidimensional",void 0),O=gt=r([R("esri.rest.support.ImageIdentifyParameters")],O);const Et=O;let K=class extends F{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};r([o({json:{write:!0}})],K.prototype,"catalogItemVisibilities",void 0),r([o({type:Ct,json:{write:!0}})],K.prototype,"catalogItems",void 0),r([o({type:V,json:{write:!0}})],K.prototype,"location",void 0),r([o({json:{write:!0}})],K.prototype,"name",void 0),r([o({json:{write:!0}})],K.prototype,"objectId",void 0),r([o({json:{write:!0}})],K.prototype,"processedValues",void 0),r([o({json:{write:!0}})],K.prototype,"properties",void 0),r([o({json:{write:!0}})],K.prototype,"value",void 0),K=r([R("esri.rest.support.ImageIdentifyResult")],K);const Ir=K;var ft;let je=ft=class extends F{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(s,t,a){t.geometries={geometryType:"esriGeometryPoint",geometries:s.map(e=>e.toJSON())}}clone(){return new ft({geometries:this.geometries?.map(s=>s.clone())??[],rasterId:this.rasterId})}};r([o({type:[V],json:{write:!0}})],je.prototype,"geometries",void 0),r([I("geometries")],je.prototype,"writeGeometry",null),r([o({type:Ge,json:{write:!0}})],je.prototype,"rasterId",void 0),je=ft=r([R("esri.rest.support.ImagePixelLocationParameters")],je);const Fr=je;let Ze=class extends F{constructor(){super(...arguments),this.geometries=null}};r([o({json:{write:!0}})],Ze.prototype,"geometries",void 0),Ze=r([R("esri.rest.support.ImagePixelLocationResult")],Ze);const Dr=Ze;var wt;let ve=wt=class extends X{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(s,t,a){s!=null&&(t.geometryType=Y(s),t[a]=s.toJSON())}get measureOperation(){const{is3D:s,geometry:t}=this;return t.type==="point"?s?"point-3D":"point":s?"centroid-3D":"centroid"}clone(){return new wt($({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};r([o({types:ne,json:{name:"fromGeometry",read:ee}})],ve.prototype,"geometry",void 0),r([I("geometry")],ve.prototype,"writeGeometry",null),r([o({type:B.apiValues,json:{read:B.read,write:B.write}})],ve.prototype,"measureOperation",null),r([o({json:{read:!0}})],ve.prototype,"is3D",void 0),ve=wt=r([R("esri.rest.support.ImagePointParameters")],ve);const Tr=ve;let Ke=class extends ye{constructor(){super(...arguments),this.point=null}};r([o({type:V,json:{name:"point.value",read:!0,write:!0}})],Ke.prototype,"point",void 0),Ke=r([R("esri.rest.support.ImagePointResult")],Ke);const jr=Ke;var Rt;let q=Rt=class extends F{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(s,t,a){s!=null&&(t.geometryType=Y(s),t[a]=s.toJSON())}set locations(s){if(s?.length){const t=new Ht({spatialReference:s[0].spatialReference,points:s.map(({x:a,y:e})=>[a,e])});this._set("locations",s),this.geometry=t}}clone(){return new Rt($({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};r([o({types:ne,json:{read:ee}})],q.prototype,"geometry",void 0),r([I("geometry")],q.prototype,"writeGeometry",null),r([o()],q.prototype,"locations",null),r([o({type:String,json:{type:he.jsonValues,read:he.read,write:he.write}})],q.prototype,"interpolation",void 0),r([o({type:H,json:{write:!0}})],q.prototype,"mosaicRule",void 0),r([o({type:[String],json:{write:!0}})],q.prototype,"outFields",void 0),r([o({type:V,json:{write:!0}})],q.prototype,"pixelSize",void 0),r([o({type:String,json:{write:!0}})],q.prototype,"raster",void 0),r([o({type:Boolean,json:{write:!0}})],q.prototype,"returnFirstValueOnly",void 0),r([o({type:Number,json:{write:!0}})],q.prototype,"sampleDistance",void 0),r([o({type:Number,json:{write:!0}})],q.prototype,"sampleCount",void 0),r([o({type:Number,json:{write:!0}})],q.prototype,"sliceId",void 0),r([o({type:bt,json:{read:{source:"time"},write:{target:"time"}}})],q.prototype,"timeExtent",void 0),q=Rt=r([R("esri.rest.support.ImageSampleParameters")],q);const Pr=q;let ue=class extends F{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};r([o({json:{write:!0}})],ue.prototype,"attributes",void 0),r([o({type:V,json:{write:!0}})],ue.prototype,"location",void 0),r([o({json:{write:!0}})],ue.prototype,"locationId",void 0),r([o({json:{write:!0}})],ue.prototype,"rasterId",void 0),r([o({json:{write:!0}})],ue.prototype,"resolution",void 0),r([o({json:{write:!0}})],ue.prototype,"pixelValue",void 0),ue=r([R("esri.rest.support.ImageSample")],ue);const Nr=ue;let Xe=class extends F{constructor(){super(...arguments),this.samples=null}};r([o({type:[Nr],json:{write:!0}})],Xe.prototype,"samples",void 0),Xe=r([R("esri.rest.support.ImageSampleResult")],Xe);const _r=Xe;let be=class extends fe(F){constructor(){super(...arguments),this.geometries=[],this.rasterIds=null,this.outSpatialReference=null}writeGeometries(t,a,e){a.geometries=t?.length?{geometryType:Y(t[0]),geometries:t.map(i=>({...i.toJSON(),spatialReference:void 0}))}:null}};r([o({types:[ne]})],be.prototype,"geometries",void 0),r([I("geometries")],be.prototype,"writeGeometries",null),r([o({type:[Ge],json:{write:!0}})],be.prototype,"rasterIds",void 0),r([o({type:ie,json:{name:"outSR",write:!0}})],be.prototype,"outSpatialReference",void 0),be=r([R("esri.rest.support.ImageToMapMultirayParameters")],be);const Or=be;let pe=class extends fe(F){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(t,a,e){t!=null&&(a.geometryType=Y(t),a[e]={...t.toJSON(),spatialReference:void 0})}};r([o({types:ne,json:{read:ee,write:!0}})],pe.prototype,"geometry",void 0),r([I("geometry")],pe.prototype,"writeGeometry",null),r([o({json:{write:!0}})],pe.prototype,"rasterId",void 0),r([o({type:ie,json:{name:"outSR",write:!0}})],pe.prototype,"outSpatialReference",void 0),r([o({json:{name:"options.DOff",write:!0}})],pe.prototype,"depthOffset",void 0),r([o({json:{name:"options.Adjust",write:!0}})],pe.prototype,"adjust",void 0),pe=r([R("esri.rest.support.ImageToMapParameters")],pe);const Cr=pe;let Ve=class extends fe(F){constructor(){super(...arguments),this.referenceUri=null,this.rasterId=null}};r([o({type:String,json:{name:"uri",write:!0}})],Ve.prototype,"referenceUri",void 0),r([o({type:Number,json:{write:!0}})],Ve.prototype,"rasterId",void 0),Ve=r([R("esri.rest.support.ImageUrlParameters")],Ve);const $r=Ve;let Ye=class extends F{constructor(){super(...arguments),this.url=null}};r([o({json:{name:"imageURL",write:!0}})],Ye.prototype,"url",void 0),Ye=r([R("esri.rest.support.ImageUrlResult")],Ye);const Ar=Ye;let Se=class extends fe(F){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.visibleOnly=!1}writeGeometry(s,t,a){s!=null&&(t.geometryType=Y(s),t[a]=JSON.stringify(s))}};r([o({types:ne,json:{read:ee,write:!0}})],Se.prototype,"geometry",void 0),r([I("geometry")],Se.prototype,"writeGeometry",null),r([o({json:{write:!0}})],Se.prototype,"rasterId",void 0),r([o({json:{name:"options.VisibleOnly",write:!0}})],Se.prototype,"visibleOnly",void 0),Se=r([R("esri.rest.support.MapToImageParameters")],Se);const Vr=Se;let me=class extends F{constructor(){super(...arguments),this.geometry=null,this.length=null,this.area=null,this.center=null}readCenter(t,a){return t.spatialReference||(t={...t,spatialReference:a.Shape.spatialReference}),V.fromJSON(t)}};r([o({types:ne,json:{name:"Shape",read:ee,write:!0}})],me.prototype,"geometry",void 0),r([o({json:{name:"Length",write:!0}})],me.prototype,"length",void 0),r([o({json:{name:"Area",write:!0}})],me.prototype,"area",void 0),r([o({json:{name:"Center",write:!0}})],me.prototype,"center",void 0),r([J("center")],me.prototype,"readCenter",null),me=r([R("esri.rest.support.MeasureAreaFromImageResult")],me);const Mr=me;var vt;let Pe=vt=class extends F{constructor(){super(...arguments),this.geometry=null,this.rasterId=void 0}writeGeometry(s,t,a){s!=null&&(t.geometryType=Y(s),t[a]={...s.toJSON(),spatialReference:void 0})}clone(){const s=$({geometry:this.geometry,rasterId:this.rasterId});return new vt(s)}};r([o({types:ne,json:{name:"fromGeometry",read:ee,write:!0}})],Pe.prototype,"geometry",void 0),r([I("geometry")],Pe.prototype,"writeGeometry",null),r([o({json:{write:!0}})],Pe.prototype,"rasterId",void 0),Pe=vt=r([R("esri.rest.support.MeasureFromImageParameters")],Pe);const Jr=Pe;let Me=class extends F{constructor(){super(...arguments),this.geometry=null,this.length=null}};r([o({types:ne,json:{name:"Shape",read:ee,write:!0}})],Me.prototype,"geometry",void 0),r([o({json:{name:"Length",write:!0}})],Me.prototype,"length",void 0),Me=r([R("esri.rest.support.MeasureLengthFromImageResult")],Me);const Er=Me;function St(s){const t=s?.time;if(t&&(t.start!=null||t.end!=null)){const a=[];t.start!=null&&a.push(t.start),t.end==null||a.includes(t.end)||a.push(t.end),s.time=a.join(",")}}async function qt(s,t,a){t=M(ii,t);const e=E(s),i=t.geometry?[t.geometry]:[],n=await xe(i),l=t.toJSON();St(l);const u=n?.[0];u!=null&&(l.geometry=se(u));const p=G({...e.query,f:"json",...l});return z(p,a)}async function qr(s,t,a){const e=(t=M(pr,t)).toJSON();e.angleName!=null&&(e.angleName=e.angleName.join(",")),t?.point?.spatialReference?.imageCoordinateSystem&&(e.point.spatialReference=st(t.point.spatialReference)),t?.spatialReference?.imageCoordinateSystem&&(e.spatialReference=_e(t.spatialReference));const i=E(s),n=G({...i.query,f:"json",...e}),l=z(n,a),{data:u}=await x(`${i.path}/computeAngles`,l);return u.spatialReference=u.spatialReference?u.spatialReference.geodataXform!=null?new ie({wkid:0,imageCoordinateSystem:u.spatialReference}):ie.fromJSON(u.spatialReference):null,u.north==="NaN"&&(u.north=null),u.up==="NaN"&&(u.up=null),new cr(u)}async function Gr(s,t,a){const e=(t=M(Fr,t)).toJSON(),{geometries:i}=t;if(i)for(let m=0;m<i.length;m++)i[m].spatialReference?.imageCoordinateSystem&&(e.geometries.geometries[m].spatialReference=st(i[m].spatialReference));const n=E(s),l=G({...n.query,f:"json",...e}),u=z(l,a),{data:p}=await x(`${n.path}/computePixelLocation`,u);return Dr.fromJSON(p)}async function zr(s,t,a){const e=await qt(s,t,a),i=E(s),{data:n}=await x(`${i.path}/computeStatisticsHistograms`,e),{statistics:l}=n;return l?.length&&l.forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:l,histograms:n.histograms}}async function Lr(s,t,a){const e=await qt(s,t,a),i=E(s),{data:n}=await x(`${i.path}/computeHistograms`,e);return{histograms:n.histograms}}async function Ur(s,t,a){const e=(t=M(Pr,t)).toJSON();St(e),e.outFields?.length&&(e.outFields=e.outFields.join(","));const i=await xe(t.geometry),n=i?.[0];n!=null&&(e.geometry=se(n));const l=E(s),u=G({...l.query,f:"json",...e}),p=z(u,a),{data:m}=await x(`${l.path}/getSamples`,p),c=m?.samples?.map(d=>{const h=d.value==="NaN"||d.value===""?null:d.value.split(" ").map(f=>Number(f));return{...d,pixelValue:h}});return _r.fromJSON({samples:c})}async function Pt(s,t,a){t=M(Et,t);const e=E(s),i=t.geometry?[t.geometry]:[];return xe(i).then(n=>{const l=t.toJSON(),u=n?.[0];u!=null&&(l.geometry=JSON.stringify(se(u)));const p=G({...e.query,f:"json",...l}),m=z(p,a);return x(e.path+"/identify",m)}).then(n=>Ir.fromJSON(n.data))}async function Hr(s,t,a){t=M(Sr,t);const e=await rt(s,t,[t.fromGeometry,t.toGeometry],a);return xr.fromJSON(e)}async function Br(s,t,a){t=M(mr,t);const e=await rt(s,t,[t.geometry],a);return dr.fromJSON(e)}async function Qr(s,t,a){t=M(Tr,t);const e=await rt(s,t,[t.geometry],a);return jr.fromJSON(e)}async function kr(s,t,a){t=M(gr,t);const e=await rt(s,t,[t.fromGeometry,t.toGeometry],a);return fr.fromJSON(e)}async function rt(s,t,a,e){const i=E(s),n=await xe(a),l=t.toJSON();n[0]!=null&&(l.fromGeometry=JSON.stringify(se(n[0]))),n[1]!=null&&(l.toGeometry=JSON.stringify(se(n[1])));const u=G({...i.query,f:"json",...l}),p=z(u,e),{data:m}=await x(i.path+"/measure",p);return m}async function Wr(s,t,a){const e=await Gt(s,t,a);return Er.fromJSON(e)}async function Zr(s,t,a){const e=await Gt(s,t,a);return Mr.fromJSON(e)}async function Gt(s,t,a){t=M(Jr,t);const e=E(s),i=t.toJSON(),n=G({...e.query,f:"json",...i}),l=z(n,a),{data:u}=await x(e.path+"/measureFromImage",l);return u}function se(s){const t=s.toJSON();return s.spatialReference?.imageCoordinateSystem&&(t.spatialReference=st(s.spatialReference)),t}function st(s){const{imageCoordinateSystem:t}=s;if(t){const{id:a,referenceServiceName:e}=t;return a!=null?e?{icsid:a,icsns:e}:{icsid:a}:{ics:t}}return s.toJSON()}function _e(s,t){if(!s.imageCoordinateSystem)return pt(s);const a=st(s),{icsid:e,icsns:i}=a;return e==null||i!=null&&!t?.toLowerCase().includes("/"+i.toLowerCase()+"/")?JSON.stringify(a):`0:${e}`}async function Kr(s,t,a){t=M(yr,t);const e=E(s),i=t.toJSON();t.outSpatialReference&&(i.outSR=_e(t.outSpatialReference));const n=G({...e.query,f:"json",...i}),l=z(n,a),{data:u}=await x(e.path+"/queryBoundary",l);return hr.fromJSON(u)}async function Xr(s,t,a){const e=(t=M(wr,t)).toJSON();St(e),e.objectIds?.length&&(e.objectIds=e.objectIds.join(",")),e.geometry||e.objectIds||e.time||e.where||(e.where="1=1");const i=await xe(t.geometry),n=i?.[0];n!=null&&(e.geometry=se(n));const l=n?.spatialReference??t.geometry?.spatialReference;l&&(e.inSR=_e(l));const u=E(s),p=G({...u.query,f:"json",...e}),m=z(p,a),{data:c}=await x(`${u.path}/queryGPSInfo`,m);return br.fromJSON(c)}async function Yr(s,t,a){const e=(t=M(Cr,t)).toJSON();t.geometry.spatialReference.imageCoordinateSystem&&(e.geometry=se(t.geometry)),t.depthOffset&&t.adjust||delete e.options;const i=E(s),n=G({...i.query,f:"json",...e}),l=z(n,a),{data:u}=await x(`${i.path}/imageToMap`,l);return ee(u)}async function es(s,t,a){const e=(t=M(Or,t)).toJSON();t.rasterIds?.length&&(e.rasterIds=t.rasterIds.join(","));const i=E(s),n=G({...i.query,f:"json",...e}),l=z(n,a),{data:u}=await x(`${i.path}/imageToMapMultiray`,l);return ee(u)}async function ts(s,t,a){const e=(t=M(Vr,t)).toJSON(),i=await xe(t.geometry),n=i?.[0];n!=null&&(e.geometry=se(n)),t.visibleOnly||delete e.options;const l=n?.spatialReference??t.geometry?.spatialReference;l&&(e.inSR=_e(l));const u=E(s),p=G({...u.query,f:"json",...e}),m=z(p,a),{data:c}=await x(`${u.path}/mapToImage`,m);return ee(c)}async function is(s,t,a){const e=(t=M($r,t)).toJSON(),i=E(s),n=G({...i.query,f:"json",...e}),l=z(n,a),{data:u}=await x(`${i.path}/getImageUrl`,l);return Ar.fromJSON(u)}async function rs(s,t,a){const e=(t=M(or,t)).toJSON(),i=await xe([t.fromGeometry,t.toGeometry]);i[0]!=null&&(e.fromGeometry=se(i[0]),i[0].spatialReference&&(e.inSR=_e(i[0].spatialReference))),i[1]!=null&&(e.toGeometry=se(i[1])),t.objectIds?.length&&(e.objectIds=e.objectIds.join(","));const n=E(s),l=G({...n.query,f:"json",...e}),u=z(l,a),{data:p}=await x(`${n.path}/find`,u);return ur.fromJSON(p)}async function ss(s,t,a){const e=E(s),i=G({...e?.query,f:"json"}),n=z(i,a),l=`${e?.path}/${t}/info`,u=x(`${l}`,n),p=x(`${l}/keyProperties`,n),m=await Promise.allSettled([u,p]),c=m[0].status==="fulfilled"?m[0].value.data:null,d=m[1].status==="fulfilled"?m[1].value.data:null;let h=null;c.statistics?.length&&(h=c.statistics.map(C=>({min:C[0],max:C[1],avg:C[2],stddev:C[3]})));const f=Je.fromJSON(c.extent),w=Math.ceil(f.width/c.pixelSizeX-.1),y=Math.ceil(f.height/c.pixelSizeY-.1),g=f.spatialReference,v=new V({x:c.pixelSizeX,y:c.pixelSizeY,spatialReference:g}),T=c.histograms?.length?c.histograms:null,P=new Pi({origin:c.origin,blockWidth:c.blockWidth,blockHeight:c.blockHeight,firstPyramidLevel:c.firstPyramidLevel,maximumPyramidLevel:c.maxPyramidLevel});return new Ot({width:w,height:y,bandCount:c.bandCount,extent:f,spatialReference:g,pixelSize:v,pixelType:c.pixelType.toLowerCase(),statistics:h,histograms:T,keyProperties:d,storageInfo:P})}const ns=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),as=Wt(Zt,{min:0,max:255});function os(s){const t=JSON.stringify(s),a=t.includes('"rasterFunctionDefinition":{'),e=a?t.match(/"type":"(.*?FunctionArguments")/gi):t.match(/"rasterFunction":"(.*?")/gi),i=e?.map(n=>a?n.slice(8,-18):n.slice(18,-1));return i?i.join("/"):null}const ls=s=>{let t=class extends s{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this._rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new _({layer:this}))}readServiceSupportsMosaicRule(e,i){return this._isMosaicRuleSupported(i)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.length<1||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.forEach(i=>{e.set(i.name.toLowerCase().replaceAll(/ /gi,"_"),i.name)}),e}readBandIds(e,i){if(Array.isArray(e)&&e.length>0&&e.every(n=>typeof n=="number"))return e}readCapabilities(e,i){return this._readCapabilities(i)}writeCompressionQuality(e,i,n){e!=null&&this.format!=="lerc"&&(i[n]=e)}writeCompressionTolerance(e,i,n){this.format==="lerc"&&e!=null&&(i[n]=e)}readDefaultMosaicRule(e,i){return this._serviceSupportsMosaicRule?H.fromJSON(i):null}get fieldsIndex(){return this.fields?new Ci(this.fields):null}set format(e){e&&ns.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,i){return i.serviceDataType==="esriImageServiceDataTypeVector-UV"||i.serviceDataType==="esriImageServiceDataTypeVector-MagDir"||this.pixelFilter!=null?"lerc":"jpgpng"}readMinScale(e,i){return i.minLOD!=null&&i.maxLOD!=null?e:0}readMaxScale(e,i){return i.minLOD!=null&&i.maxLOD!=null?e:0}set mosaicRule(e){let i=e;i?.mosaicMethod&&(i=H.fromJSON({...i.toJSON(),mosaicMethod:i.mosaicMethod,mosaicOperation:i.mosaicOperation})),this._set("mosaicRule",i)}readMosaicRule(e,i){const n=e||i.mosaicRule;return n?H.fromJSON(n):this._isMosaicRuleSupported(i)?H.fromJSON(i):null}writeMosaicRule(e,i,n){let l=this.mosaicRule;const u=this.definitionExpression;l?u&&u!==l.where&&(l=l.clone(),l.where=u):u&&(l=new H({where:u})),this._isValidCustomizedMosaicRule(l)&&(i[n]=l.toJSON())}writeNoData(e,i,n){e!=null&&typeof e=="number"&&(i[n]=as(e))}readObjectIdField(e,i){return e||(e=i.fields.find(l=>l.type==="esriFieldTypeOID"||l.type==="oid")?.name),e}get parsedUrl(){return Bt(this.url)}readSourceType(e,i){return this._isMosaicDataset(i)?"mosaic-dataset":"raster-dataset"}get renderer(){const{activePresetRendererName:e,presetRenderers:i}=this;return e?i?.find(({name:l})=>l===e)?.renderer.clone():this.internalRenderer}set renderer(e){this.activePresetRendererName=null,this.internalRenderer=e}set internalRenderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("internalRenderer",e)}readRenderer(e,i,n){const l=i?.layerDefinition?.drawingInfo?.renderer,u=ai(l,n);return u==null?null:(u.type==="vector-field"&&i.symbolTileSize&&!l.symbolTileSize&&(u.symbolTileSize=i.symbolTileSize),$t(u)||It.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),u)}writeRenderer(e,i,n){i.layerDefinition=i.layerDefinition||{},i.layerDefinition.drawingInfo=i.layerDefinition.drawingInfo||{},i.layerDefinition.drawingInfo.renderer=e.toJSON(),e.type==="vector-field"&&(i.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this._rasterAttributeTableFieldPrefix,i=new we({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),n=new we({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),l=new we({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let u=this.fields?$(this.fields):[];u.push(n),this.capabilities?.operations.supportsQuery&&this.fields&&this.fields.length>0&&u.push(i),this.version>=10.4&&this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.some(m=>m.name.toLowerCase()==="none")&&u.push(l),this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.filter(m=>m.name.toLowerCase()!=="none").forEach(m=>{u.push(new we({name:"Raster.ServicePixelValue."+m.name,alias:m.name,domain:null,editable:!1,length:50,type:"string"}))}),this._isVectorDataSet()&&(u.push(new we({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),u.push(new we({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const{attributeTable:p}=this.rasterInfo??{};if(p!=null){const m=p.fields.filter(c=>c.type!=="esriFieldTypeOID"&&c.name.toLowerCase()!=="value").map(c=>{const d=$(c);return d.name=e+c.name,d});u=u.concat(m)}return u}set rasterFunction(e){let i=e;i?.rasterFunction&&(i=S.fromJSON({...i.toJSON(),rasterFunction:i.rasterFunction,rasterFunctionArguments:i.rasterFunctionArguments})),this._set("rasterFunction",i)}readRasterFunction(e,i){const n=i.rasterFunctionInfos;return i.renderingRule||n?.length&&n[0].name!=="None"?this._isRFTJson(i.renderingRule)?S.fromJSON({rasterFunctionDefinition:i.renderingRule}):S.fromJSON(i.renderingRule||{rasterFunctionInfos:i.rasterFunctionInfos}):null}readSpatialReference(e,i){const n=e||i.extent.spatialReference;return n?ie.fromJSON(n):null}readPixelType(e){return nt.fromJSON(e)||e}writePixelType(e,i,n){this.serviceRasterInfo!=null&&this.pixelType===this.serviceRasterInfo.pixelType||(i[n]=nt.toJSON(e))}readVersion(e,i){let n=i.currentVersion;return n||(n=i.hasOwnProperty("fields")||i.hasOwnProperty("timeInfo")?10:9.3),n}applyFilter(e){let i=e;return this.pixelFilter&&(i=this._clonePixelData(e),this.pixelFilter(i)),i}async applyRenderer(e,i){let n=e;const{renderer:l,symbolizer:u,pixelFilter:p,bandIds:m}=this;if(!this._isPicture()&&l&&u&&!p){const c=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(l.toJSON()),d=this._rasterJobHandler.instance;if(d){c&&(u.bind(),await d.updateSymbolizer(u,i),this._cachedRendererJson=l.toJSON());const h=await d.symbolize({bandIds:m,...e},i);n={extent:e.extent,pixelBlock:h}}else n={extent:e.extent,pixelBlock:u.symbolize({bandIds:m,...e})}}return n}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsComputeAngles)throw new b("imagery-layer:compute-angles","this operation is not supported on the input image service");return qr(this.url,e,this._getRequestOptions(i))}async computePixelSpaceLocations(e,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsComputePixelLocation)throw new b("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return Gr(this.url,e,this._getRequestOptions(i))}async computeHistograms(e,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsComputeHistograms)throw new b("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=$(e),this._applyMosaicAndRenderingRules(e),Lr(this.url,e,this._getRequestOptions(i))}async computeStatisticsHistograms(e,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsComputeStatisticsHistograms)throw new b("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=$(e),this._applyMosaicAndRenderingRules(e),zr(this.url,e,this._getRequestOptions(i))}async measureHeight(e,i){const n=await this._fetchCapabilities(i?.signal);if(!(e.operationType==="base-and-top"?n.mensuration.supportsHeightFromBaseAndTop:e.operationType==="base-and-top-shadow"?n.mensuration.supportsHeightFromBaseAndTopShadow:n.mensuration.supportsHeightFromTopAndTopShadow))throw new b("imagery-layer:measure-height","this operation is not supported on the input image service");return e=$(e),this._applyMosaicAndRenderingRules(e),Hr(this.url,e,this._getRequestOptions(i))}async measureAreaAndPerimeter(e,i){const n=await this._fetchCapabilities(i?.signal);if(!(n.mensuration.supportsAreaAndPerimeter&&(!e.is3D||n.mensuration.supports3D)))throw new b("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=$(e),this._applyMosaicAndRenderingRules(e),Br(this.url,e,this._getRequestOptions(i))}async measureDistanceAndAngle(e,i){const n=await this._fetchCapabilities(i?.signal);if(!(n.mensuration.supportsDistanceAndAngle&&(!e.is3D||n.mensuration.supports3D)))throw new b("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=$(e),this._applyMosaicAndRenderingRules(e),kr(this.url,e,this._getRequestOptions(i))}async measurePointOrCentroid(e,i){const n=await this._fetchCapabilities(i?.signal);if(!(n.mensuration.supportsPointOrCentroid&&(!e.is3D||n.mensuration.supports3D)))throw new b("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=$(e),this._applyMosaicAndRenderingRules(e),Qr(this.url,e,this._getRequestOptions(i))}async measureLengthFromImage(e,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsMeasureFromImage)throw new b("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if(e.geometry.type!=="polyline")throw new b("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return Wr(this.url,e,this._getRequestOptions(i))}async measureAreaFromImage(e,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsMeasureFromImage)throw new b("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if(e.geometry.type!=="polygon")throw new b("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return Zr(this.url,e,this._getRequestOptions(i))}getField(e){const{fieldsIndex:i}=this;return i?.get(e)}getFieldDomain(e,i){const n=this.getField(e);return n?n.domain:null}async fetchImage(e,i,n,l={}){if(e==null||i==null||n==null)throw new b("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const d=await this._generateRasterInfo(this.rasterFunction,{signal:l.signal});d&&(this.rasterInfo=d)}const u=this.getExportImageServiceParameters(e,i,n,l.timeExtent);if(u==null){if(l.requestAsImageElement&&this._canRequestImageElement(this.format)){const v=document.createElement("canvas");return v.width=i,v.height=n,l.returnImageBitmap?{imageBitmap:await Tt(v,`${a(this.parsedUrl)}/exportImage`,l.signal)}:{imageOrCanvasElement:v}}const{bandIds:d,rasterInfo:h}=this,f=(d?.length||h.bandCount)??0,w=i*n,y=h.pixelType,g=[];for(let v=0;v<f;v++)g.push(ot.createEmptyBand(y,w));return{pixelData:{pixelBlock:new ot({width:i,height:n,pixels:g,mask:new Uint8Array(w),pixelType:y}),extent:e}}}const p=!!l.requestAsImageElement&&!this.pixelFilter,m=p&&!!l.returnImageBitmap,c={imageServiceParameters:u,imageProps:{extent:e,width:i,height:n,format:this.format},requestAsImageElement:p,returnImageBitmap:m,signal:l.signal};return this._requestArrayBuffer(c)}fetchKeyProperties(e){return x(a(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then(i=>i.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new b("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):x(a(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then(i=>Ct.fromJSON(i.data))}getCatalogItemRasterInfo(e,i){const n={...i,query:this._getQueryParams()};return ss(a(this.parsedUrl),e,n)}async getCatalogItemICSInfo(e,i){const{data:n}=await x(a(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...i}),l=n?.ics;if(!l)return;let u=null;try{u=(await x(a(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...i})).data.extent}catch{}if(!u?.spatialReference)return{ics:l,icsToPixelTransform:null,icsExtent:null,northDirection:null};const p=this.version>=10.7?x(a(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...i}).then(j=>j.data).catch(()=>({})):{},m=u.spatialReference,c={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[u]}),inSR:pt(m),outSR:"0:"+e},d=x(a(this.parsedUrl)+"/project",{query:this._getQueryParams(c),...i}).then(j=>j.data).catch(()=>({})),h=5,f=(u.xmin+u.xmax)/2,w=(u.ymax-u.ymin)/(h+1),y=u.ymin+w,g=[];for(let j=0;j<h;j++)g.push({x:f,y:y+w*j});const v={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:g}),inSR:pt(m),outSR:"0:"+e},T=x(a(this.parsedUrl)+"/project",{query:this._getQueryParams(v),...i}).then(j=>j.data).catch(()=>({})),P=await Promise.all([p,d,T]);let C=P[0].ipxf;if(C==null){const j=l.geodataXform?.xf_0;j?.name?.toLowerCase()==="topup"&&j?.coefficients?.length===6&&(C={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:j.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const N=Je.fromJSON(P[1]?.geometries?.[0]);N&&(N.spatialReference=new ie({wkid:0,imageCoordinateSystem:l}));const D=P[2].geometries?P[2].geometries.filter(j=>j?.x!=null&&j.y!=null&&j.x!=="NaN"&&j.y!=="NaN"):[],A=D.length;if(A<3)return{ics:l,icsToPixelTransform:C,icsExtent:N,northDirection:null};let U=0,Oe=0,ze=0,Le=0;for(let j=0;j<A;j++)U+=D[j].x,Oe+=D[j].y,ze+=D[j].x*D[j].x,Le+=D[j].x*D[j].y;const Q=(A*Le-U*Oe)/(A*ze-U*U);let k=0;const Ie=D[h-1].x>D[0].x,xt=D[h-1].y>D[0].y;return Q===1/0?k=xt?90:270:Q===0?k=Ie?0:180:Q>0?k=Ie?180*Math.atan(Q)/Math.PI:180*Math.atan(Q)/Math.PI+180:Q<0&&(k=xt?180+180*Math.atan(Q)/Math.PI:360+180*Math.atan(Q)/Math.PI),{ics:l,icsToPixelTransform:C,icsExtent:N,northDirection:k}}async generateRasterInfo(e,i){e=M(S,e);const n={...i,query:this._getQueryParams()};if(!e||e.functionName?.toLowerCase()==="none"||this._isVectorFieldResampleFunction(e))return this.serviceRasterInfo??Ft(a(this.parsedUrl),this.sourceJSON,n);const l=os(e);if(!l)throw new b("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[l])return this._functionRasterInfos[l];const u=oi(a(this.parsedUrl),e,n);this._functionRasterInfos[l]=u;try{return await u}catch(p){throw this._functionRasterInfos[l]=null,p}}getExportImageServiceParameters(e,i,n,l){e=e.clone().shiftCentralMeridian();const u=_e(e.spatialReference,a(this.parsedUrl));this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const p=this.exportImageServiceParameters.toJSON(),{bandIds:m,noData:c}=p;let{renderingRule:d}=p;const h=this.rasterFunction?.rasterFunctionDefinition,f=this.renderer?.type,w=!f||f==="raster-stretch"||f==="raster-colormap"||f==="unique-value"||f==="class-breaks"||f==="raster-shaded-relief";if(m?.length&&this._hasRasterFunction(this.rasterFunction)&&!h&&w){const v={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:m}};if(d.rasterFunction==="Stretch")v.rasterFunctionArguments.Raster=d.rasterFunctionArguments.Raster,d.rasterFunctionArguments.Raster=v;else if(d.rasterFunction==="Colormap"){const T=d.rasterFunctionArguments.Raster;T?.rasterFunction==="Stretch"?(v.rasterFunctionArguments.Raster=T.rasterFunctionArguments.Raster,T.rasterFunctionArguments.Raster=v):(v.rasterFunctionArguments.Raster=T,d.rasterFunctionArguments.Raster=v)}else v.rasterFunctionArguments.Raster=d,d=v;p.bandIds=void 0}else p.bandIds=m?.join(",");Array.isArray(c)&&c.length>0&&(p.noData=c.join(","));const y=this._processMultidimensionalIntersection(null,l,this.exportImageServiceParameters.mosaicRule);if(y.isOutSide)return null;p.mosaicRule=y.mosaicRule!=null?JSON.stringify(y.mosaicRule):null,l=y.timeExtent,p.renderingRule=this._getRenderingRuleString(S.fromJSON(d));const g={};if(l!=null){const{start:v,end:T}=l.toJSON();v&&T&&v===T?g.time=""+v:v==null&&T==null||(g.time=`${v??"null"},${T??"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:u,imageSR:u,size:i+","+n,...p,...g}}async getSamples(e,i){if(!(await this._fetchCapabilities(i?.signal))?.operations.supportsGetSamples)throw new b("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=$(e);const{raster:l}=this;return l&&e.raster==null&&(e.raster=l),Ur(this.url,e,this._getRequestOptions(i))}async identify(e,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsIdentify)throw new b("imagery-layer:identify","identify operation is not supported on the input image service");e=$(e),this.version<10.91&&e.geometry?.type==="extent"&&(e.geometry=ut.fromExtent(e.geometry));const n=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(n.isOutSide)throw new b("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=n.timeExtent,e.mosaicRule=n.mosaicRule;const{raster:l,rasterFunction:u}=this;return u&&e.rasterFunction==null&&(e.rasterFunction=u),l&&e.raster==null&&(e.raster=l),Pt(this.url,e,this._getRequestOptions(i))}async imageToMap(e,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsImageToMap)throw new b("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return Yr(a(this.parsedUrl),e,this._getRequestOptions(i))}async imageToMapMultiray(e,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsImageToMapMultiray)throw new b("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return es(a(this.parsedUrl),e,this._getRequestOptions(i))}async mapToImage(e,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsMapToImage)throw new b("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return ts(a(this.parsedUrl),e,this._getRequestOptions(i))}async findImages(e,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsFindImages)throw new b("imagery-layer:find-images","findImages operation is not supported on the input image service");return rs(a(this.parsedUrl),e,this._getRequestOptions(i))}async getImageUrl(e,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsGetImageUrl)throw new b("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return is(a(this.parsedUrl),e,this._getRequestOptions(i))}createQuery(){return new lt({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}async queryBoundary(e,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsQueryBoundary)throw new b("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return e=e??{outSpatialReference:this.spatialReference},Kr(a(this.parsedUrl),e,this._getRequestOptions(i))}async queryRasters(e,i){return{query:e,requestOptions:i}=await this._prepareForQuery(e,i),Mi(this.url,e,i)}async queryObjectIds(e,i){return{query:e,requestOptions:i}=await this._prepareForQuery(e,i),Ai(this.url,e,i)}async queryGPSInfo(e,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsQueryGPSInfo)throw new b("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return e=e??{where:"1=1"},Xr(a(this.parsedUrl),e,this._getRequestOptions(i))}async queryRasterCount(e,i){return{query:e,requestOptions:i}=await this._prepareForQuery(e,i),Vi(this.url,e,i)}async queryVisibleRasters(e,i){if(!e)throw new b("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:n,returnDomainValues:l,returnTopmostRaster:u,showNoDataRecords:p}=i||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let m=!1,c=null,d=null;const h="raster.servicepixelvalue",f=this._rasterFunctionNamesIndex;if(e.outFields!=null&&(m=e.outFields.some(N=>!N.toLowerCase().includes(h)),this.version>=10.4)){const N=e.outFields.filter(A=>A.toLowerCase().includes(h)&&A.length>h.length).map(A=>{const U=A.slice(h.length+1);return[this._updateRenderingRulesFunctionName(U,f),U]});c=N.map(A=>new S({functionName:A[0]})),d=N.map(A=>A[1]);const{rasterFunction:D}=this;c.length===0?D?.functionName?(c.push(D),d.push(D.functionName)):c=null:D?.functionName&&!c.some(A=>A.functionName===D.functionName)&&(c.push(D),d.push(D.functionName))}const w=e.outSpatialReference==null||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:y}=this;let g=e.timeExtent||this.timeExtent;if(y){const{isOutside:N,intersection:D}=at(y,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:this.exportImageServiceParameters.mosaicRule?.multidimensionalDefinition});if(N)throw new b("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");D?.timeExtent!=null&&(g=D.timeExtent)}const v=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,g);let T=e.geometry;this.version<10.91&&T?.type==="extent"&&(T=ut.fromExtent(T));const P=this._getQueryParams({geometry:T,timeExtent:g,mosaicRule:v,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:c,pixelSize:n,returnCatalogItems:m,returnGeometry:w,raster:this.raster,maxItemCount:u?1:null});delete P.f;const C=new Et(P);try{await this._generateRasterInfo(this.rasterFunction);const N=await Pt(this.url,C,{signal:i?.signal,query:{...this.customParameters}}),D=e.outFields,A=N.value!=null&&N.value.toLowerCase().includes("nodata");if(!(m&&!w&&N?.catalogItems?.features.length&&(p||!A)))return this._processVisibleRastersResponse(N,{returnDomainValues:l,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:D});const U=this.objectIdField||"ObjectId",Oe=N.catalogItems?.features??[],ze=Oe.map(k=>k.attributes?.[U]),Le=new lt({objectIds:ze,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[U]}),Q=await this.queryRasters(Le);return Q?.features?.length&&Q.features.forEach(k=>{Oe.forEach(Ie=>{Ie.attributes[U]===k.attributes[U]&&k.geometry&&(Ie.geometry=k.geometry.clone(),e.outSpatialReference!=null&&(Ie.geometry.spatialReference=e.outSpatialReference))})}),this._processVisibleRastersResponse(N,{returnDomainValues:l,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:D})}catch{throw new b("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,i){const n=x(a(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:i}).then(p=>p.data?.statistics),l=x(a(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:i}).then(p=>p.data?.histograms),u=await Promise.all([n,l]);return u[0]&&u[0].forEach(p=>{p.avg=p.mean,p.stddev=p.standardDeviation}),{statistics:u[0]||null,histograms:u[1]||null}}async createFlowMesh(e,i){const n=this._rasterJobHandler.instance;return n?n.createFlowMesh(e,i):Ii(e.meshType,e.simulationSettings,e.flowData,i.signal!=null?i.signal:new AbortController().signal)}getMultidimensionalSubsetVariables(e){const i=e??this.serviceRasterInfo.multidimensionalInfo;return vi(this.multidimensionalSubset,i)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const i=this.sourceJSON,n=this.serviceRasterInfo!=null?Promise.resolve(this.serviceRasterInfo):Ft(a(this.parsedUrl),i,{signal:e,query:this._getQueryParams()}).then(p=>(this._set("serviceRasterInfo",p),this._set("multidimensionalInfo",p.multidimensionalInfo),li(p,i),p)),l=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,u=this._getRasterFunctionInfos();return Promise.all([n,l,u]).then(p=>{p[1]?this._set("rasterInfo",p[1]):this._set("rasterInfo",p[0]),p[2]&&this._set("rasterFunctionInfos",p[2]),this.internalRenderer&&!this._isSupportedRenderer(this.internalRenderer)&&(this._set("internalRenderer",null),It.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("internalRenderer",this._configRenderer(this.renderer)),this.addHandles([Qt(()=>this.rasterFunction,c=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(c).then(d=>{d&&(this.rasterInfo=d)})})]);const{serviceRasterInfo:m}=this;m.multidimensionalInfo!=null&&this._updateMultidimensionalDefinition(m)})}_combineMosaicRuleWithTimeExtent(e,i){const n=this.timeInfo,{multidimensionalInfo:l}=this.serviceRasterInfo;if(e==null||l==null||i==null||n?.startField==null)return e;const{startField:u}=n,p=l.variables.some(y=>y.dimensions.some(g=>g.name===u))?u:"StdTime";if(e=e.clone(),this.sourceType==="mosaic-dataset")return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter(y=>y.dimensionName!==p),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const m=e.multidimensionalDefinition.filter(y=>y.dimensionName===p),c=i.start!=null?i.start.getTime():null,d=i.end!=null?i.end.getTime():null,h=c==null||d==null||c===d,f=h?[c||d]:[[c,d]],w=this.version>=10.8;if(m.length)m.forEach(y=>{y.dimensionName===p&&(w?(y.dimensionName=null,y.isSlice=!1,y.values=[]):(y.isSlice=h,y.values=f))});else if(!w){const y=e.multidimensionalDefinition.filter(g=>g.variableName!=null&&g.dimensionName==null);y.length?y.forEach(g=>{g.dimensionName=p,g.isSlice=h,g.values=f}):e.multidimensionalDefinition.push(new bi({variableName:"",dimensionName:p,isSlice:h,values:f}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return e==null?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(i=>!(!i.variableName&&!i.dimensionName)),e.multidimensionalDefinition.length===0&&(e.multidimensionalDefinition=null)),this.sourceType!=="mosaic-dataset"&&e.multidimensionalDefinition==null?null:e)}async _prepareForQuery(e,i){if(!(await this._fetchCapabilities(i?.signal)).operations.supportsQuery)throw new b("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=e!=null?M(lt,e):this.createQuery(),i=this._getRequestOptions(i),this.raster&&(i.query={...i.query,raster:this.raster}),{query:e,requestOptions:i}}async _initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const e=new yi;this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e},()=>{}),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:i,rasterFunction:n}=this;return e.type==="unique-value"&&this._hasRasterFunction(n)&&i?.bandCount===1&&["u8","s8"].includes(i.pixelType)||i!=null&&e!=null&&ui(i).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){let i=this.sourceJSON;if(!i){const{data:n,ssl:l}=await x(a(this.parsedUrl),{query:this._getQueryParams(),signal:e});i=n,this.sourceJSON=i,l&&(this.url=this.url.replace(/^http:/i,"https:"))}if(i.capabilities?.toLowerCase().split(",").map(n=>n.trim()).indexOf("tilesonly")>-1)throw new b("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(i,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){return e.serviceSourceType?e.serviceSourceType==="esriImageServiceSourceTypeMosaicDataset":e.fields?.length>0}_isMosaicRuleSupported(e){if(!e)return!1;const i=this._isMosaicDataset(e),n=e.currentVersion>=10.71&&e.hasMultidimensions&&!(e.fields?.length>1);return i||n}_isVectorFieldResampleFunction(e){if(e==null)return!1;const{functionName:i,functionArguments:n}=e,l=i?.toLowerCase()==="resample",u=n?.ResampleType||n?.resampleType;return l&&(u===7||u===10)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){const i=this._isPicture(),{rasterInfo:n}=this;if(!i&&!this.pixelFilter||this._isVectorDataSet()){const l=this.mosaicRule?.multidimensionalDefinition?.[0].variableName,u=pi({variableName:l,rasterFunctionName:this.rasterFunction?.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&n.bandCount>=3){const m=u?.bandIds??ci(n);!m||n.bandCount===3&&m[0]===0&&m[1]===1&&m[2]===2||(this.bandIds=m)}e||(e=u?.renderer??mi(n,{bandIds:this.bandIds,variableName:this.rasterFunction?null:l}));const p=di(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=p,this.symbolizer.rasterInfo=n):this.symbolizer=new Ni({rendererJSON:p,rasterInfo:n}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return e==null?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock!=null?e.pixelBlock.clone():null}}_getQueryParams(e){e?.renderingRule!=null&&typeof e.renderingRule!="string"&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:i,viewId:n}=this;return{raster:i,viewId:n,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e?.query,...this.customParameters}}}_decodePixelBlock(e,i,n){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:i}):Dt(e,i,n)}async _getRasterFunctionInfos(e){const i=this.sourceJSON.rasterFunctionInfos;return this.loaded?i:i&&this.version>=10.3?i.length===1&&i[0].name.toLowerCase()==="none"?i:(await x(a(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data?.rasterFunctionInfos:null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:i,requestAsImageElement:n,returnImageBitmap:l,signal:u}=e;if(n&&this._canRequestImageElement(i.format)){const y=`${a(this.parsedUrl)}/exportImage`,{data:g}=await x(y,{responseType:l?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:u});return g instanceof Blob?{imageBitmap:await Tt(g,y,u),params:i}:{imageOrCanvasElement:g,params:i}}const p=this._initJobHandler(),m=x(a(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:u}),c=(await Promise.all([m,p]))[0].data,d=i.format||"jpgpng";let h=d;if(h!=="bsq"&&h!=="bip"&&(h=_i(c)),!h)throw new b("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(c)));const f={signal:u};return{pixelData:{pixelBlock:await(d==="gif"||d==="bmp"||d.includes("png")&&(h==="png"||h==="jpg")?Dt(c,{useCanvas:!0,...i},f):this._decodePixelBlock(c,{width:i.width,height:i.height,planes:null,pixelType:null,noDataValue:null,format:d},f)),extent:i.extent},params:i}}_generateRasterInfo(e,i){return this.generateRasterInfo(e,i).catch(()=>null)}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let i=Si(e,{multidimensionalSubset:this.multidimensionalSubset});if(i!=null&&i.length>0){this.mosaicRule=this.mosaicRule||new H;const n=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&this.rasterFunction.functionName?.toLowerCase()!=="none"&&i.forEach(l=>l.variableName=""),i=i.filter(({variableName:l,dimensionName:u})=>l&&l!=="*"||u),!n?.length&&i.length&&(this.mosaicRule.multidimensionalDefinition=i)}}_processVisibleRastersResponse(e,i){i=i||{};const n=e.value,{templateRRFunctionNames:l,showNoDataRecords:u,returnDomainValues:p,templateFields:m}=i,c=e.processedValues;let d=e.catalogItems?.features,h=e.properties?.Values?.map(P=>P.replaceAll(/ /gi,", "))||[];const f=this.objectIdField||"ObjectId",w=typeof n=="string"&&n.toLowerCase().includes("nodata"),y=[];if(n&&!d&&!w){const P={};P[f]=0,h=[n],d=[new kt({geometry:this.fullExtent,attributes:P})]}if(!d)return[];let g,v,T;this._updateResponseFieldNames(d,m),w&&!u&&(d=[]);for(let P=0;P<d.length;P++){if(g=d[P],n!=null){if(v=h[P],T=this.rasterFunction&&c&&c.length>0&&l&&l.length>0&&l.includes(this.rasterFunction.functionName)?c[l.indexOf(this.rasterFunction.functionName)]:n,v.toLowerCase()==="nodata"&&!u)continue;const C="Raster.ItemPixelValue",N="Raster.ServicePixelValue";g.attributes[C]=v,g.attributes[N]=T,this._updateFeatureWithMagDirValues(g,v);const D=this.fields&&this.fields.length>0;let A=this.rasterFunction&&this.serviceRasterInfo.attributeTable!=null?D?v:n:T;this.rasterFunction||(A=D?v:n),this._updateFeatureWithRasterAttributeTableValues(g,A)}if(g.sourceLayer=g.layer=this,p&&this._updateFeatureWithDomainValues(g),l&&c&&l.length===c.length)for(let C=0;C<l.length;C++){const N="Raster.ServicePixelValue."+l[C];g.attributes[N]=c[C]}y.push(d[P])}return y}_processMultidimensionalIntersection(e,i,n){const{multidimensionalSubset:l}=this;if(!l)return{isOutSide:!1,timeExtent:i,mosaicRule:n=this._combineMosaicRuleWithTimeExtent(n,i)};if(l){const{isOutside:u,intersection:p}=at(l,{geometry:e,timeExtent:i});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null};p?.timeExtent!=null&&(i=p.timeExtent)}if(n=this._combineMosaicRuleWithTimeExtent(n,i),n?.multidimensionalDefinition){const{isOutside:u}=at(l,{multidimensionalDefinition:n.multidimensionalDefinition});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:i,mosaicRule:n}}_updateFeatureWithRasterAttributeTableValues(e,i){const n=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(n==null)return;const{features:l,fields:u}=n,p=u.map(c=>c.name).find(c=>c.toLowerCase()==="value");if(!p)return;const m=l.filter(c=>c.attributes[p]===(i!=null?parseInt(i,10):null));m&&m[0]&&u.forEach(c=>{const d=this._rasterAttributeTableFieldPrefix+c.name;e.attributes[d]=m[0].attributes[c.name]})}_updateFeatureWithMagDirValues(e,i){if(!this._isVectorDataSet())return;const n=i.split(/,\s*/).map(c=>parseFloat(c)),l=n.map(c=>[c]),u=n.map(c=>({minValue:c,maxValue:c,noDataValue:null})),p=new ot({height:1,width:1,pixelType:"f32",pixels:l,statistics:u});this.pixelFilter!=null&&this.pixelFilter({pixelBlock:p,extent:new Je(0,0,0,0,this.spatialReference)});const m=this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"?[p.pixels[0][0],p.pixels[1][0]]:Fi([p.pixels[0][0],p.pixels[1][0]]);e.attributes["Raster.Magnitude"]=m[0],e.attributes["Raster.Direction"]=m[1]}_updateFeatureWithDomainValues(e){const i=this.fields&&this.fields.filter(n=>n.domain&&n.domain.type==="coded-value");i?.forEach(n=>{const l=e.attributes[n.name];if(l!=null){const u=n.domain.codedValues.find(p=>p.code===l);u&&(e.attributes[n.name]=u.name)}})}_updateResponseFieldNames(e,i){if(!i||i.length<1)return;const n=this.fieldsIndex;n!=null&&e.forEach(l=>{if(l?.attributes)for(const u of i){const p=n.get(u)?.name;p&&p!==u&&(l.attributes[u]=l.attributes[p],delete l.attributes[p])}})}_getRenderingRuleString(e){if(e){let i=e.toJSON();return i=i.rasterFunctionDefinition??i,(i.thumbnail||i.thumbnailEx)&&(i.thumbnail=i.thumbnailEx=null),JSON.stringify(i)}return null}_hasRasterFunction(e){return e?.functionName!=null&&e.functionName.toLowerCase()!=="none"}_updateRenderingRulesFunctionName(e,i){if(!e||e.length<1)return;if(e==="Raw")return e.replace("Raw","None");const n=e.toLowerCase().replaceAll(/ /gi,"_");return i.has(n)?i.get(n):e}_isRFTJson(e){return e?.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"}_applyMosaicAndRenderingRules(e){const{raster:i,mosaicRule:n,rasterFunction:l}=this;l&&"rasterFunction"in e&&e.rasterFunction==null&&(e.rasterFunction=l),n&&e.mosaicRule==null&&(e.mosaicRule=n),i&&e.raster==null&&(e.raster=i)}_readCapabilities(e){const i=e.capabilities?e.capabilities.toLowerCase().split(",").map(v=>v.trim()):["image","catalog"],{currentVersion:n,advancedQueryCapabilities:l,maxRecordCount:u}=e,p=i.includes("image"),m=e.serviceDataType==="esriImageServiceDataTypeElevation",c=!(!e.spatialReference&&!e.extent?.spatialReference),d=i.includes("edit"),h=i.includes("mensuration")&&c,f=e.mensurationCapabilities==null?[]:e.mensurationCapabilities.toLowerCase().split(",").map(v=>v.trim()),w=h&&f.includes("basic"),y=this._isMosaicDataset(e)&&i.includes("catalog"),g=i.includes("download");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:p,supportsExportImage:p,supportsIdentify:p,supportsImageToMap:n>=11.2&&y,supportsImageToMapMultiray:n>=11.2&&y,supportsMapToImage:n>=11.2&&y,supportsFindImages:n>=11.2&&y,supportsGetImageUrl:n>=11.3&&g,supportsMeasure:h,supportsMeasureFromImage:n>=11.2,supportsDownload:g,supportsQuery:y&&e.fields&&e.fields.length>0,supportsGetSamples:n>=10.2&&p,supportsProject:n>=10.3&&p,supportsComputeStatisticsHistograms:n>=10.4&&p,supportsQueryBoundary:n>=10.6&&p,supportsCalculateVolume:n>=10.7&&m,supportsComputePixelLocation:n>=10.7&&y,supportsComputeAngles:n>=10.91,supportsQueryGPSInfo:n>=11.2&&y,supportsAdd:d,supportsDelete:d,supportsEditing:d,supportsUpdate:d,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryBins:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:u,maxRecordCountFactor:void 0,supportsStatistics:!!l?.supportsStatistics,supportsOrderBy:!!l?.supportsOrderBy,supportsDistinct:!!l?.supportsDistinct,supportsPagination:!!l?.supportsPagination,supportsStandardizedQueriesOnly:!!l?.useStandardizedQueries,supportsPercentileStatistics:!!l?.supportsPercentileStatistics,supportsCentroid:!!l?.supportsReturningGeometryCentroid,supportsDistance:!!l?.supportsQueryWithDistance,supportsExtent:!!l?.supportsReturningQueryExtent,supportsGeometryProperties:!!l?.supportsReturningGeometryProperties,supportsHavingClause:!!l?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!l?.supportsDefaultSR,supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0},mensuration:{supportsDistanceAndAngle:w,supportsAreaAndPerimeter:w,supportsPointOrCentroid:w,supportsHeightFromBaseAndTop:h&&f.includes("base-top height"),supportsHeightFromBaseAndTopShadow:h&&f.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:h&&f.includes("top-top shadow height"),supports3D:h&&f.includes("3d")}}}};function a(e){return e?.path??""}return r([o({clonable:!1})],t.prototype,"_functionRasterInfos",void 0),r([o({clonable:!1})],t.prototype,"_rasterJobHandler",void 0),r([o({clonable:!1})],t.prototype,"_cachedRendererJson",void 0),r([o({readOnly:!0})],t.prototype,"_serviceSupportsMosaicRule",void 0),r([J("_serviceSupportsMosaicRule",["currentVersion","fields"])],t.prototype,"readServiceSupportsMosaicRule",null),r([o({readOnly:!0})],t.prototype,"_rasterAttributeTableFieldPrefix",void 0),r([o({readOnly:!0})],t.prototype,"_rasterFunctionNamesIndex",null),r([o()],t.prototype,"adjustAspectRatio",void 0),r([o({type:[Ge],json:{write:!0}})],t.prototype,"bandIds",void 0),r([J("bandIds")],t.prototype,"readBandIds",null),r([o({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),r([J("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),r([o({type:Number})],t.prototype,"compressionQuality",void 0),r([I("compressionQuality")],t.prototype,"writeCompressionQuality",null),r([o({type:Number})],t.prototype,"compressionTolerance",void 0),r([I("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),r([o({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),r([o({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],t.prototype,"defaultMosaicRule",void 0),r([J("defaultMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultMosaicRule",null),r([o({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],t.prototype,"definitionExpression",void 0),r([o({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),r([o()],t.prototype,"rasterInfo",void 0),r([o({readOnly:!0,type:[we]})],t.prototype,"fields",void 0),r([o({readOnly:!0})],t.prototype,"fieldsIndex",null),r([o({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],t.prototype,"format",null),r([J("service","format",["serviceDataType"])],t.prototype,"readFormat",null),r([o({type:Je})],t.prototype,"fullExtent",void 0),r([o({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),r([o({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),r([o({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),r([o({type:String,json:{type:he.jsonValues,read:he.read,write:he.write}})],t.prototype,"interpolation",void 0),r([o()],t.prototype,"minScale",void 0),r([J("service","minScale")],t.prototype,"readMinScale",null),r([o()],t.prototype,"maxScale",void 0),r([J("service","maxScale")],t.prototype,"readMaxScale",null),r([o({type:H})],t.prototype,"mosaicRule",null),r([J("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),r([I("mosaicRule")],t.prototype,"writeMosaicRule",null),r([o()],t.prototype,"multidimensionalInfo",void 0),r([o({type:ri,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),r([o({json:{type:Ge}})],t.prototype,"noData",void 0),r([I("noData")],t.prototype,"writeNoData",null),r([o({type:String,json:{type:Ee.jsonValues,read:Ee.read,write:Ee.write}})],t.prototype,"noDataInterpretation",void 0),r([o({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),r([J("objectIdField")],t.prototype,"readObjectIdField",null),r([o({readOnly:!0})],t.prototype,"geometryType",void 0),r([o({})],t.prototype,"typeIdField",void 0),r([o({})],t.prototype,"types",void 0),r([o({readOnly:!0})],t.prototype,"parsedUrl",null),r([o({type:Function})],t.prototype,"pixelFilter",void 0),r([o()],t.prototype,"raster",void 0),r([o({readOnly:!0})],t.prototype,"sourceType",void 0),r([J("sourceType",["serviceSourceType","fields"])],t.prototype,"readSourceType",null),r([o()],t.prototype,"viewId",void 0),r([o()],t.prototype,"renderer",null),r([o({types:si,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:ni,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="flow"})}}}}})],t.prototype,"internalRenderer",null),r([J("internalRenderer")],t.prototype,"readRenderer",null),r([I("internalRenderer")],t.prototype,"writeRenderer",null),r([o({clonable:!1})],t.prototype,"symbolizer",void 0),r([o(gi)],t.prototype,"opacity",void 0),r([o({readOnly:!0})],t.prototype,"rasterFields",null),r([o({constructOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),r([o({type:S,json:{name:"renderingRule"}})],t.prototype,"rasterFunction",null),r([J("rasterFunction",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRasterFunction",null),r([o({readOnly:!0})],t.prototype,"serviceDataType",void 0),r([o({readOnly:!0,type:ie})],t.prototype,"spatialReference",void 0),r([J("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),r([o({json:{type:nt.jsonValues}})],t.prototype,"pixelType",void 0),r([J("pixelType")],t.prototype,"readPixelType",null),r([I("pixelType")],t.prototype,"writePixelType",null),r([o({constructOnly:!0,type:Ot})],t.prototype,"serviceRasterInfo",void 0),r([o()],t.prototype,"sourceJSON",void 0),r([o(fi)],t.prototype,"url",void 0),r([o({readOnly:!0})],t.prototype,"version",void 0),r([J("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=r([R("esri.layers.mixins.ArcGISImageService")],t),t};let L=class extends Ei(Hi(Ui(Gi(zi(hi(ls(Li(qi(Ji(ei(fe(ti)))))))))))){constructor(...s){super(...s),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=Kt(async(t,a,e)=>{const{save:i,saveAs:n}=await zt(()=>import("./imageryUtils-CoefjEJI.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12]),import.meta.url);switch(t){case Ue.SAVE:return i(this,a);case Ue.SAVE_AS:return n(this,e,a)}})}normalizeCtorArgs(s,t){return typeof s=="string"?{url:s,...t}:s}load(s){const t=s!=null?s.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},s).catch(Xt).then(()=>this._fetchService(t))),Promise.resolve(this)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(s){this._set("legendEnabled",s)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(s){this._set("listMode",s)}writeOperationalLayerType(s,t,a){const e=this.renderer?.type==="vector-field";t[a]=e?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){return!(!this.raster||!this.url?.toLowerCase().includes("/rasterrendering/imageserver"))}createPopupTemplate(s){const t=this.rasterFields,a=this.title,e=new Set;let i=!1,n=!1;this.capabilities&&(i=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,n=this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir");const l=new Set;i&&l.add("raster.itempixelvalue");for(const p of t){const m=p.name.toLowerCase();l.has(m)||m.includes("raster.servicepixelvalue.")||e.add(p.name)}n&&e.add("raster.magnitude").add("raster.direction");const u=Qi({fields:t,title:a},{...s,visibleFieldNames:e});return u?.fieldInfos&&this.rasterInfo?.pixelType.startsWith("f")&&u.fieldInfos.forEach(({format:p,fieldName:m})=>{p&&m&&/^raster\.(item|service)pixelvalue/i.test(m)&&(p.places=2)}),u}queryFeatures(s,t){return this.queryRasters(s,t).then(a=>{if(a?.features)for(const e of a.features)e.layer=e.sourceLayer=this;return a})}queryFeatureCount(s,t){return this.queryRasterCount(s,t)}redraw(){this.emit("redraw")}async save(s){return this._debouncedSaveOperations(Ue.SAVE,s)}async saveAs(s,t){return this._debouncedSaveOperations(Ue.SAVE_AS,t,s)}serviceSupportsSpatialReference(s){return Bi(this,s)}write(s,t){if(!this._isPreviewLayer)return super.write(s,t);if(t?.messages){const a=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new b("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${a}'`,{layer:this}))}return null}};r([o(wi)],L.prototype,"legendEnabled",null),r([o({type:["show","hide"]})],L.prototype,"listMode",null),r([o({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],L.prototype,"isReference",void 0),r([o({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],L.prototype,"operationalLayerType",void 0),r([I("web-map","operationalLayerType")],L.prototype,"writeOperationalLayerType",null),r([o(Ri)],L.prototype,"popupEnabled",void 0),r([o({type:Yt,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],L.prototype,"popupTemplate",void 0),r([o({readOnly:!0})],L.prototype,"defaultPopupTemplate",null),r([o({readOnly:!0,json:{read:!1}})],L.prototype,"type",void 0),r([o({readOnly:!0})],L.prototype,"_isPreviewLayer",null),L=r([R("esri.layers.ImageryLayer")],L);const ia=L;export{ia as default};
