name: Publish to GitHub pages

on:
    workflow_call:
        inputs:
            cache_sha:
                type: string
                required: true

jobs:
    deploy-to-pages:
        name: Deploy to GitHub pages
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Get dist files
              uses: actions/cache@v3
              with:
                  path: dist
                  key: dist-${{ inputs.cache_sha }}

            - name: Deploy ðŸš€
              uses: JamesIves/github-pages-deploy-action@v4.3.3
              with:
                  branch: gh-pages
                  folder: dist
                  target-folder: ${{ github.head_ref || github.ref_name }}
                  single-commit: true

            - name: Get RAMP version
              uses: martinbeentjes/npm-get-version-action@v1.3.1
              if: github.event_name == 'push' && github.ref == 'refs/heads/main'
              id: package-version

            - name: Regex match RAMP version
              uses: actions-ecosystem/action-regex-match@v2
              if: github.event_name == 'push' && github.ref == 'refs/heads/main'
              id: regex-match
              with:
                  text: ${{ steps.package-version.outputs.current-version }}
                  regex: '(\d+\.\d+\.\d+)'

            - name: Deploy Docs ðŸ“œ
              uses: JamesIves/github-pages-deploy-action@v4.3.3
              if: github.event_name == 'push' && github.ref == 'refs/heads/main'
              with:
                  branch: gh-pages
                  folder: documentation
                  target-folder: documentation/${{ steps.regex-match.outputs.group1 || steps.package-version.outputs.current-version }}
                  single-commit: true

            - uses: actions/github-script@v6
              name: Post link to demo for PR's
              if: github.event_name == 'pull_request_target' && github.event.action == 'opened'
              with:
                  script: |
                      github.rest.issues.createComment({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: `Your demo site is ready! ðŸš€

                        Main: https://${{github.repository_owner}}.github.io/ramp4-pcar4/${{github.head_ref}}/
                        Catalogue: https://${{github.repository_owner}}.github.io/ramp4-pcar4/${{github.head_ref}}/demos/index-all.html
                        Samples: https://${{github.repository_owner}}.github.io/ramp4-pcar4/${{github.head_ref}}/demos/index-samples.html`
                      })
