name: NPM install and build

on:
    workflow_call:
        inputs:
            cache_sha:
                type: string
                required: true

env:
    NODE_VERSION: '17.9.0'

jobs:
    install-build:
        name: Install and build
        runs-on: ubuntu-latest
        steps:
            - name: Check if contributor is an org member
              id: is_organization_member
              if: github.event_name == 'pull_request_target'
              uses: JamesSingleton/is-organization-member@1.0.1
              with:
                  organization: ramp4-pcar4
                  username: ${{ github.event.pull_request.head.user.login }}
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Output comment and end build if not org member
              if: github.event_name == 'pull_request_target'
              run: |
                  result=${{ steps.is_organization_member.outputs.result }}
                  if [ $result == false ]; then
                    user=${{ github.event.pull_request.head.user.login }}
                    echo Either ${user} is not part of the ramp4-pcar4 organization
                    echo or ${user} has its Organization Visibility set to Private at
                    echo https://github.com/orgs/ramp4-pcar4/people?query=${user}
                    exit 1
                  fi

            - uses: actions/checkout@v3
              with:
                  ref: ${{ github.event.pull_request.head.ref || github.ref_name }}
                  repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}

            - uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'npm'

            - name: Try to restore node_modules folder from cache
              id: cache-node-modules
              uses: actions/cache@v3
              with:
                  path: ./node_modules
                  key: npm-${{ hashFiles('./package-lock.json') }}

            - name: Otherwise install npm dependencies
              if: steps.cache-node-modules.outputs.cache-hit != 'true'
              run: npm ci

            - name: Persist docsite output for other workflows
              uses: actions/cache@v3
              with:
                  path: 'docs'
                  key: docs-${{ inputs.cache_sha }}

            - name: Update docsite version references
              uses: jacobtomlinson/gha-find-replace@v3
              with:
                  find: '{{ramp-version}}'
                  replace: ${{ github.ref_name }}
                  include: 'docs/**'
                  regex: false

            - name: Build the ts docs!
              run: npm run build:ts-docs

            - name: Build the vitepress docs!
              run: npm run build:vite-docs

            - name: Consolidate docsite files
              run: |
                  mkdir -p docs
                  rm -rf docs
                  mkdir -p docs/api-tech-docs
                  mv vite-docs/* docs/
                  mv ts-docs/* docs/api-tech-docs
