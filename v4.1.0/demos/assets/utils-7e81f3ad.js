import{e as l,y as m,n as w,R as Gt,bk as ge,k1 as Te,r as C,b as T,gk as d,k2 as Be,s as Ot,k3 as Ce,gB as lt,b8 as E,k4 as Se,b1 as gt,k5 as dt,k6 as je,k7 as Me,k8 as ye,k9 as Xt,ka as De,bg as ut,kb as _e,kc as vt,kd as xe,ke as we,kf as Ee,kg as W,kh as Ge,ki as at,kj as Oe,kk as ve,kl as ze,km as Ve,kn as Le,ko as bt,kp as Ue,kq as We,kr as qe,f as be,gG as Ht,bp as Jt,w as Xe}from"./main-e6c796d9.js";let yt=class extends Gt{constructor(){super(...arguments),this.raster=void 0}};l([m({json:{write:!0}})],yt.prototype,"raster",void 0),yt=l([w("esri.layers.support.rasterFunctions.AspectFunctionArguments")],yt);const S=yt;var At;let $t=At=class extends S{clone(){return new At({raster:this.raster})}};$t=At=l([w("esri.layers.support.rasterFunctions.AspectFunctionArguments")],$t);const He=$t;let $=class extends Gt{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}bind(t,r=!1,e=-1){this.id=e+1;const n=this._getRasterValues();let o=!0;for(let a=0;a<n.length;a++){const s=n[a];if(C(s)&&this._isRasterFunctionValue(s)){const u=s.bind(t,r,this.id+a);if(!u.success)return this._bindingResult=u,u;o=o&&u.supportsGPU}}return!this.rasterInfo||r?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.supportsGPU=o&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const r=this._getRasterValues(),e=r.length===0?t.pixelBlocks??t.primaryPixelBlocks:r.map(n=>this._readRasterValue(n,t));return this._processPixels({...t,pixelBlocks:e})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let r;if(t.length>1){const o=t.map(s=>s.processInputBandIds()[0]);this.rawInputBandIds=o,this.isInputBandIdsSwizzled=this.rawInputBandIds.some((s,u)=>s!==u);const a=t.filter(s=>s.functionName==="ExtractBand");return a.length&&a.forEach((s,u)=>{s.isInputBandIdsSwizzled=!0,s.swizzledBandSelection=[u,u,u]}),this.rawInputBandIds}const e=t[0];if(e){if(r=e.processInputBandIds(),e.isInputBandIdsSwizzled)return this.rawInputBandIds=r,r}else{r=[];const{bandCount:o}=this.sourceRasterInfos[0];for(let a=0;a<o;a++)r.push(a)}const n=this._getInputBandIds(r);return this.isInputBandIdsSwizzled=n.some((o,a)=>o!==a),this.rawInputBandIds=n,this.rawInputBandIds}getPrimaryRasters(){const t=[],r=[];return this._getPrimaryRasters(this,t,r),{rasters:t,rasterIds:r}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:r,rasters:e}=this.functionArguments;return e&&Array.isArray(e)&&e.length?(t.rasters=e.map(n=>this._isRasterFunctionValue(n)?n.getWebGLProcessorDefinition():typeof n=="number"?{name:"Constant",parameters:{value:n},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:n},pixelType:"f32",id:-1,isNoopProcess:!1}),t.rasters.some(n=>n!=null)||(t.rasters=null)):this._isRasterFunctionValue(r)&&(t.raster=r.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getFlatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const r=[t],{parameters:e}=t;let n=e.rasters||e.raster&&[e.raster];for(;n?.length;){r.unshift(...n);const a=[];for(let s=0;s<n.length;s++){const{parameters:u}=n[s],c=u.rasters||u.raster&&[u.raster];c?.length&&a.push(...c)}n=a}for(let a=r.length-1;a>=0;a--)r[a].isNoopProcess&&r.splice(a,1);let o=!1;for(let a=0;a<r.length;a++){const s=r[a];s.id=r.length-a-1;const{rasters:u}=s.parameters;o=o||u!=null&&u.length>1}return{hasBranches:o,functions:r}}_getOutputPixelType(t){return this.outputPixelType==="unknown"?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_isOutputRoundingNeeded(){const{outputPixelType:t}=this;return(t?.startsWith("u")||t?.startsWith("s"))??!1}_getRasterValues(){const{rasterArgumentNames:t}=this;return t[0]==="rasters"?this.functionArguments.rasters??[]:t.map(r=>this.functionArguments[r])}_getSourceRasterInfos(t){const r=this._getRasterValues(),{rasterInfos:e,rasterIds:n}=t;if(r.length===0)return e;const o=r.map(s=>s&&typeof s=="object"&&"bind"in s&&s.rasterInfo?s.rasterInfo:typeof s=="string"&&n.includes(s)?e[n.indexOf(s)]:typeof s!="number"?e[0]:void 0),a=o.find(s=>s)??e[0];return o.forEach((s,u)=>{s===void 0&&(o[u]=a)}),o}_getPrimaryRasterId(t){return t?.url}_getPrimaryRasters(t,r=[],e=[]){for(let n=0;n<t.sourceRasters.length;n++){const o=t.sourceRasters[n];if(typeof o!="number")if("bind"in o)this._getPrimaryRasters(o,r,e);else{const a=o,s=this._getPrimaryRasterId(a);if(s==null)continue;e.includes(s)||(this.mainPrimaryRasterId===s?(r.unshift(a),e.unshift(s)):(r.push(a),e.push(s)))}}}_isRasterFunctionValue(t){return t!=null&&typeof t=="object"&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,r){const{primaryPixelBlocks:e}=r;if(T(t)||t==="$$"){const n=e[0];return T(n)?null:n.clone()}if(typeof t=="string"){const n=r.primaryRasterIds.indexOf(t);return n===-1?null:e[n]}if(typeof t=="number"){const n=e[0];if(T(n))return null;const{width:o,height:a,pixelType:s,mask:u}=n,c=u?new Uint8Array(u):null,p=new Float32Array(o*a);p.fill(t);const h=this.sourceRasterInfos[0].bandCount,f=new Array(h).fill(p);return new d({width:o,height:a,pixelType:s,pixels:f,mask:c})}return t.process(r)}};l([m({json:{write:!0}})],$.prototype,"functionName",void 0),l([m({json:{write:!0}})],$.prototype,"functionArguments",void 0),l([m()],$.prototype,"rasterArgumentNames",void 0),l([m({json:{write:!0}}),ge(i=>i?.toLowerCase())],$.prototype,"outputPixelType",void 0),l([m({json:{write:!0}})],$.prototype,"mainPrimaryRasterId",void 0),l([m()],$.prototype,"sourceRasters",void 0),l([m({type:[Te],json:{write:!0}})],$.prototype,"sourceRasterInfos",void 0),l([m({json:{write:!0}})],$.prototype,"rasterInfo",void 0),l([m({json:{write:!0}})],$.prototype,"readingBufferSize",void 0),l([m({json:{write:!0}})],$.prototype,"id",void 0),l([m()],$.prototype,"isNoopProcess",void 0),l([m()],$.prototype,"supportsGPU",null),l([m()],$.prototype,"rawInputBandIds",void 0),l([m()],$.prototype,"isInputBandIdsSwizzled",void 0),l([m()],$.prototype,"swizzledBandSelection",void 0),l([m()],$.prototype,"isBranch",void 0),l([m()],$.prototype,"_bindingResult",void 0),$=l([w("esri.layers.support.rasterFunctions.BaseRasterFunction")],$);const j=$;let q=class extends j{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.isGCS=t.spatialReference?.isGeographic??!1,this.outputPixelType=this._getOutputPixelType("f32");const r=t.clone();return r.pixelType=this.outputPixelType,r.statistics=[{min:0,max:360,avg:180,stddev:30}],r.histograms=null,r.colormap=null,r.attributeTable=null,r.bandCount=1,this.rasterInfo=r,{success:!0,supportsGPU:!0}}_processPixels(t){const r=t.pixelBlocks?.[0];if(T(r))return null;const{extent:e}=t,n=e?{x:e.width/r.width,y:e.height/r.height}:{x:1,y:1};return Be(r,{resolution:n})}};l([m({json:{write:!0,name:"rasterFunction"}})],q.prototype,"functionName",void 0),l([m({type:He,json:{write:!0,name:"rasterFunctionArguments"}})],q.prototype,"functionArguments",void 0),l([m()],q.prototype,"rasterArgumentNames",void 0),l([m({json:{write:!0}})],q.prototype,"isGCS",void 0),q=l([w("esri.layers.support.rasterFunctions.AspectFunction")],q);const Je=q,Ye=new Set(["+","-","*","/","(",")"]);function Ke(i,t){(i=i.replace(/ /g,"")).startsWith("-")&&(i="0"+i),i.startsWith("+")&&(i=i.slice(1,i.length));const r=i.split(""),e=[],n=[];let o="";for(let a=0;a<r.length;a++){const s=r[a];if(Ye.has(s))o!==""&&n.push(parseFloat(o)),e.push(s),o="";else{if(s.toLowerCase()==="b"){a++,o=s.concat(r[a]),n.push(t[parseInt(o[1],10)-1]),o="";continue}o=o.concat(s),a===r.length-1&&n.push(parseFloat(o))}}return{ops:e,nums:n}}function Ze(i,t,r,e){if(typeof r=="number"&&typeof e=="number")return r+e;let n;if(typeof r=="number"){n=e.length;const a=r;(r=new Float32Array(n)).fill(a)}else if(n=r.length,e.constructor===Number){const a=e;(e=new Float32Array(n)).fill(a)}const o=new Float32Array(n);switch(t){case"+":for(let a=0;a<n;a++)(i==null||i[a])&&(o[a]=r[a]+e[a]);break;case"-":for(let a=0;a<n;a++)(i==null||i[a])&&(o[a]=r[a]-e[a]);break;case"*":for(let a=0;a<n;a++)(i==null||i[a])&&(o[a]=r[a]*e[a]);break;case"/":for(let a=0;a<n;a++)(i==null||i[a])&&e[a]&&(o[a]=r[a]/e[a]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return o}function Qe(i,t){i.splice(t,1);let r=0,e=0;do{r=0,e=0;for(let n=0;n<i.length;n++)if(i[n]==="(")r=n;else if(i[n]===")"){e=n;break}e===r+1&&i.splice(r,2)}while(e===r+1);return i}function ts(i){if(i.length===1)return{opIndex:0,numIndex:0};let t=0,r=0;for(let a=0;a<i.length;a++)if(i[a]==="(")t=a;else if(i[a]===")"){r=a;break}const e=r===0?i:i.slice(t+1,r);let n=-1;for(let a=0;a<e.length;a++)if(e[a]==="*"||e[a]==="/"){n=a;break}if(n>-1)r>0&&(n+=t+1);else{for(let a=0;a<e.length;a++)if(e[a]==="+"||e[a]==="-"){n=a;break}r>0&&(n+=t+1)}let o=0;for(let a=0;a<n;a++)i[a]==="("&&o++;return{opIndex:n,numIndex:n-o}}function es(i,t,r){let e,{ops:n,nums:o}=Ke(r,t);if(n.length===0){const a=o.length===1?o[0]:t[0];if(a instanceof Float32Array)return[a];const s=new Float32Array(t[0].length);return typeof a=="number"?s.fill(a):s.set(a),[s]}for(;n.length>0;){const{numIndex:a,opIndex:s}=ts(n);if(e=Ze(i,n[s],o[a],o[a+1]),n.length===1)break;n=Qe(n,s),o.splice(a,2,e)}return[e]}const ss=new Ot({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function ns(i,t){if(!Ce(i))return i;const{equation:r,method:e}=t,n=t.bandIndexes.map(p=>p-1),{pixels:o,mask:a}=i;let s;switch(e){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":s=Yt(a,o[n[0]],o[n[1]]);break;case"ndwi":s=Yt(a,o[n[1]],o[n[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":s=os(a,o[n[0]],o[n[1]]);break;case"ci-g":case"ci-re":s=is(a,o[n[0]],o[n[1]]);break;case"savi":s=as(a,o[n[0]],o[n[1]],n[2]+1);break;case"tsavi":s=us(a,o[n[0]],o[n[1]],n[2]+1,n[3]+1,n[4]+1);break;case"msavi":s=ls(a,o[n[0]],o[n[1]]);break;case"gemi":s=cs(a,o[n[0]],o[n[1]]);break;case"pvi":s=ps(a,o[n[0]],o[n[1]],n[2]+1,n[3]+1);break;case"gvitm":s=hs(a,[o[n[0]],o[n[1]],o[n[2]],o[n[3]],o[n[4]],o[n[5]]]);break;case"sultan":s=ms(a,[o[n[0]],o[n[1]],o[n[2]],o[n[3]],o[n[4]],o[n[5]]]);break;case"vari":s=fs(a,[o[n[0]],o[n[1]],o[n[2]]]);break;case"mtvi2":s=ds(a,[o[n[0]],o[n[1]],o[n[2]]]);break;case"rtvi-core":s=gs(a,[o[n[0]],o[n[1]],o[n[2]]]);break;case"evi":s=ys(a,[o[n[0]],o[n[1]],o[n[2]]]);break;case"wndwi":s=xs(a,[o[n[0]],o[n[1]],o[n[2]]],n[3]?n[3]+1:.5);break;case"bai":s=ws(a,o[n[0]],o[n[1]]);break;case"custom":s=es(a,o,r);break;default:return i}const u=C(a)?new Uint8Array(a.length):null;C(a)&&C(u)&&u.set(a);const c=new d({width:i.width,height:i.height,pixelType:"f32",pixels:s,mask:u});return c.updateStatistics(),c}function rs(i,t,r,e){const{mask:n,pixels:o,width:a,height:s}=i,u=o[r],c=o[t],p=c.length,h=e?new Uint8Array(p):new Float32Array(p),f=e?100:1,g=e?100.5:0;for(let F=0;F<p;F++)if(n==null||n[F]){const M=u[F],Wt=c[F],qt=M+Wt;qt&&(h[F]=(M-Wt)/qt*f+g)}const v=new d({width:a,height:s,mask:n,pixelType:e?"u8":"f32",pixels:[h]});return v.updateStatistics(),v}function P(i){const t=new Float32Array(9);return t[3*i[0]]=1,t[3*i[1]+1]=1,t[3*i[2]+2]=1,t}function Yt(i,t,r){const e=r.length,n=new Float32Array(e);for(let o=0;o<e;o++)if(i==null||i[o]){const a=t[o],s=r[o],u=a+s;u&&(n[o]=(a-s)/u)}return[n]}function os(i,t,r){const e=r.length,n=new Float32Array(e);for(let o=0;o<e;o++)if(i==null||i[o]){const a=t[o],s=r[o];s&&(n[o]=a/s)}return[n]}function is(i,t,r){const e=t.length,n=new Float32Array(e);for(let o=0;o<e;o++)if(i==null||i[o]){const a=t[o],s=r[o];s&&(n[o]=a/s-1)}return[n]}function as(i,t,r,e){const n=r.length,o=new Float32Array(n);for(let a=0;a<n;a++)if(i==null||i[a]){const s=r[a],u=t[a],c=u+s+e;c&&(o[a]=(u-s)/c*(1+e))}return[o]}function us(i,t,r,e,n,o){const a=r.length,s=new Float32Array(a),u=-n*e+o*(1+e*e);for(let c=0;c<a;c++)if(i==null||i[c]){const p=r[c],h=t[c],f=n*h+p+u;f&&(s[c]=e*(h-e*p-n)/f)}return[s]}function ls(i,t,r){const e=r.length,n=new Float32Array(e);for(let o=0;o<e;o++)if(i==null||i[o]){const a=r[o],s=t[o];n[o]=.5*(2*(s+1)-Math.sqrt((2*s+1)**2-8*(s-a)))}return[n]}function cs(i,t,r){const e=r.length,n=new Float32Array(e);for(let o=0;o<e;o++)if(i==null||i[o]){const a=r[o],s=t[o];if(a!==1){const u=(2*(s*s-a*a)+1.5*s+.5*a)/(s+a+.5);n[o]=u*(1-.25*u)-(a-.125)/(1-a)}}return[n]}function ps(i,t,r,e,n){const o=r.length,a=new Float32Array(o),s=Math.sqrt(1+e*e);for(let u=0;u<o;u++)if(i==null||i[u]){const c=r[u],p=t[u];a[u]=(p-e*c-n)/s}return[a]}function hs(i,t){const[r,e,n,o,a,s]=t,u=r.length,c=new Float32Array(u);for(let p=0;p<u;p++)(i==null||i[p])&&(c[p]=-.2848*r[p]-.2435*e[p]-.5436*n[p]+.7243*o[p]+.084*a[p]-1.18*s[p]);return[c]}function ms(i,t){const[r,,e,n,o,a]=t,s=r.length,u=new Float32Array(s),c=new Float32Array(s),p=new Float32Array(s);for(let h=0;h<s;h++)(i==null||i[h])&&(u[h]=a[h]?o[h]/a[h]*100:0,c[h]=r[h]?o[h]/r[h]*100:0,p[h]=n[h]?e[h]/n[h]*(o[h]/n[h])*100:0);return[u,c,p]}function fs(i,t){const[r,e,n]=t,o=r.length,a=new Float32Array(o);for(let s=0;s<o;s++)if(i==null||i[s])for(s=0;s<o;s++){const u=r[s],c=e[s],p=c+u-n[s];p&&(a[s]=(c-u)/p)}return[a]}function ds(i,t){const[r,e,n]=t,o=r.length,a=new Float32Array(o);for(let s=0;s<o;s++)if(i==null||i[s])for(s=0;s<o;s++){const u=r[s],c=e[s],p=n[s],h=Math.sqrt((2*u+1)**2-6*u-5*Math.sqrt(c)-.5);a[s]=1.5*(1.2*(u-p)-2.5*(c-p))*h}return[a]}function gs(i,t){const[r,e,n]=t,o=r.length,a=new Float32Array(o);for(let s=0;s<o;s++)if(i==null||i[s])for(s=0;s<o;s++){const u=r[s],c=e[s],p=n[s];a[s]=100*(u-c)-10*(u-p)}return[a]}function ys(i,t){const[r,e,n]=t,o=r.length,a=new Float32Array(o);for(let s=0;s<o;s++)if(i==null||i[s])for(s=0;s<o;s++){const u=r[s],c=e[s],p=u+6*c-7.5*n[s]+1;p&&(a[s]=2.5*(u-c)/p)}return[a]}function xs(i,t,r=.5){const[e,n,o]=t,a=n.length,s=new Float32Array(a);for(let u=0;u<a;u++)if(i==null||i[u])for(u=0;u<a;u++){const c=e[u],p=n[u],h=o[u],f=c+r*p+(1-r)*h;f&&(s[u]=(c-r*p-(1-r)*h)/f)}return[s]}function ws(i,t,r){const e=r.length,n=new Float32Array(e);for(let o=0;o<e;o++)if(i==null||i[o])for(o=0;o<e;o++){const a=(.1-t[o])**2+(.06-r[o])**2;a&&(n[o]=1/a)}return[n]}var It;let ct=It=class extends S{constructor(){super(...arguments),this.method="custom"}clone(){return new It({method:this.method,bandIndexes:this.bandIndexes,raster:E(this.raster)})}};l([m({json:{type:String,write:!0}})],ct.prototype,"bandIndexes",void 0),l([lt(ss)],ct.prototype,"method",void 0),ct=It=l([w("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],ct);const vs=ct,bs=new Set(["vari","mtvi2","rtvi-core","evi"]);let tt=class extends j{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0],r=t.clone();return r.pixelType=this.outputPixelType,r.statistics=null,r.histograms=null,r.bandCount=this.functionArguments.method==="sultan"?t.bandCount:1,this.rasterInfo=r,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){const r=t.pixelBlocks?.[0];if(T(r))return r;const{method:e,bandIndexes:n}=this.functionArguments,o=n.split(" ").map(a=>parseFloat(a));return ns(r,{method:e,bandIndexes:o,equation:n})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map(s=>parseFloat(s)-1);t.length===2&&t.push(0);const r=this.isInputBandIdsSwizzled?[0,1,2]:t;let e,n;const o=new Float32Array(3),{method:a}=this.functionArguments;switch(a){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":e=P([r[0],r[1],0]),n="ndxi";break;case"ndwi":e=P([r[1],r[0],0]),n="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":e=P([r[0],r[1],0]),n="sr";break;case"ci-g":case"ci-re":e=P([r[0],r[1],0]),n="ci";break;case"savi":e=P([r[0],r[1],0]),n="savi",o[0]=t[2]+1;break;case"tsavi":e=P([r[0],r[1],0]),n="tsavi",o[0]=t[2]+1,o[1]=t[3]+1,o[2]=t[4]+1;break;case"msavi":e=P([r[0],r[1],0]),n="msavi";break;case"gemi":e=P([r[0],r[1],0]),n="gemi";break;case"pvi":e=P([r[0],r[1],0]),n="tsavi",o[0]=t[2]+1,o[1]=t[3]+1;break;case"vari":e=P([r[0],r[1],r[2]]),n="vari";break;case"mtvi2":e=P([r[0],r[1],r[2]]),n="mtvi2";break;case"rtvi-core":e=P([r[0],r[1],r[2]]),n="rtvicore";break;case"evi":e=P([r[0],r[1],r[2]]),n="evi";break;case"wndwi":e=P([r[0],r[1],0]),n="wndwi",o[0]=t[3]?t[3]+1:.5;break;case"bai":e=P([r[1],r[0],0]),n="bai";break;default:e=P([0,1,2]),n="custom"}return{bandIndexMat3:e,indexType:n,adjustments:o}}_getInputBandIds(t){if(this.functionArguments.method==="custom")return t;const r=this.functionArguments.bandIndexes.split(" ").map(s=>parseFloat(s)-1),e=t.length,n=r.map(s=>s>=e?e-1:s),o=bs.has(this.functionArguments.method)?3:2,a=n.slice(0,o).map(s=>t[s]);return a.length===2&&a.push(0),a}};l([m({json:{write:!0,name:"rasterFunction"}})],tt.prototype,"functionName",void 0),l([m({type:vs,json:{write:!0,name:"rasterFunctionArguments"}})],tt.prototype,"functionArguments",void 0),l([m()],tt.prototype,"rasterArgumentNames",void 0),tt=l([w("esri.layers.support.rasterFunctions.BandArithmeticFunction")],tt);const As=tt;var Ft;let G=Ft=class extends S{castColormapName(i){if(!i)return null;const t=i.toLowerCase();return je.includes(t)?t:null}readColorRamp(i){return Me(i)}readColorRampName(i,t){if(!i)return null;const r=dt.jsonValues.find(e=>e.toLowerCase()===i.toLowerCase());return r?dt.fromJSON(r):null}clone(){return new Ft({colormap:E(this.colormap),colormapName:this.colormapName,colorRamp:this.colorRamp?.clone(),colorRampName:this.colorRampName})}};l([m({type:[[Number]],json:{write:!0}})],G.prototype,"colormap",void 0),l([m({type:String,json:{write:!0}})],G.prototype,"colormapName",void 0),l([ge("colormapName")],G.prototype,"castColormapName",null),l([m({types:Se,json:{write:!0}})],G.prototype,"colorRamp",void 0),l([gt("colorRamp")],G.prototype,"readColorRamp",null),l([m({type:dt.apiValues,json:{type:dt.jsonValues,write:dt.write}})],G.prototype,"colorRampName",void 0),l([gt("colorRampName")],G.prototype,"readColorRampName",null),G=Ft=l([w("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],G);const $s=G,Is=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],Fs=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function zt(i,t){const r=[],e=[];for(let o=0;o<i.length-1;o++)r.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:i[o].slice(1),toColor:i[o+1].slice(1)}),e.push(i[o+1][0]-i[o][0]);const n=i[i.length-1][0];return ye({type:"multipart",colorRamps:r},{numColors:n,weights:t=t??e})}function Ps(){return zt([[0,0,191,191],[51,0,255,0],[102,255,255,0],[153,255,127,0],[204,191,127,63],[256,20,20,20]])}function Ns(){const i=zt([[0,255,255,255],[70,0,0,255],[80,205,193,173],[100,150,150,150],[110,120,100,51],[130,120,200,100],[140,28,144,3],[160,6,55,0],[180,10,30,25],[201,6,27,7]]);for(let t=i.length;t<256;t++)i.push([6,27,7]);return i}function Rs(){return ye({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]})}function ks(){const i=[];for(let t=0;t<256;t++){const r=[];for(let e=0;e<3;e++)r.push(Math.round(255*Math.random()));i.push(r)}return i}function Ts(){return zt([[0,38,54,41],[69,79,90,82],[131,156,156,156],[256,253,241,253]],[.268,.238,.495])}function Bs(i){let t;switch(i){case"elevation":t=Ps();break;case"gray":t=Rs();break;case"hillshade":t=Ts();break;case"ndvi":t=Is;break;case"ndvi2":t=Ns();break;case"ndvi3":t=Fs;break;case"random":t=ks()}return t?(t=t.map((r,e)=>[e,...r]),t):null}let O=class extends j{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:r,colormapName:e,colorRamp:n,colorRampName:o}=this.functionArguments;if(!r?.length)if(n)r=Xt(n,{interpolateAlpha:!0});else if(o){const s=De(o);s&&(r=Xt(s))}else e&&(r=Bs(e));if(!r?.length)return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};this.outputPixelType=this._getOutputPixelType("u8");const a=t.clone();return a.pixelType=this.outputPixelType,a.colormap=r,a.bandCount=1,this.rasterInfo=a,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};l([m({json:{write:!0,name:"rasterFunction"}})],O.prototype,"functionName",void 0),l([m({type:$s,json:{write:!0,name:"rasterFunctionArguments"}})],O.prototype,"functionArguments",void 0),l([m()],O.prototype,"rasterArgumentNames",void 0),l([m()],O.prototype,"isNoopProcess",void 0),l([m({json:{write:!0}})],O.prototype,"indexedColormap",void 0),O=l([w("esri.layers.support.rasterFunctions.ColormapFunction")],O);const Cs=O;var Pt;let pt=Pt=class extends S{constructor(){super(...arguments),this.rasters=[]}writeRasters(i,t){t.rasters=i.map(r=>typeof r=="number"||typeof r=="string"?r:r.toJSON())}clone(){return new Pt({rasters:E(this.rasters)})}};l([m({json:{write:!0}})],pt.prototype,"rasters",void 0),l([ut("rasters")],pt.prototype,"writeRasters",null),pt=Pt=l([w("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],pt);const Ss=pt;let et=class extends j{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,r=t[0];this.outputPixelType=this._getOutputPixelType(r.pixelType);const e=r.clone();if(e.attributeTable=null,e.colormap=null,e.pixelType=this.outputPixelType,e.bandCount=t.map(({bandCount:n})=>n).reduce((n,o)=>n+o),t.every(({statistics:n})=>C(n)&&n.length)){const n=[];t.forEach(({statistics:o})=>C(o)&&n.push(...o)),e.statistics=n}if(t.every(({histograms:n})=>C(n)&&n.length)){const n=[];t.forEach(({histograms:o})=>C(o)&&n.push(...o)),e.histograms=n}return e.bandCount>1&&(e.colormap=null,e.attributeTable=null),this.rasterInfo=e,{success:!0,supportsGPU:e.bandCount<=3}}_processPixels(t){const{pixelBlocks:r}=t;if(!r)return null;const e=r?.[0];return T(e)?null:_e(r)}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};l([m({json:{write:!0,name:"rasterFunction"}})],et.prototype,"functionName",void 0),l([m({type:Ss,json:{write:!0,name:"rasterFunctionArguments"}})],et.prototype,"functionArguments",void 0),l([m()],et.prototype,"rasterArgumentNames",void 0),et=l([w("esri.layers.support.rasterFunctions.CompositeBandFunction")],et);const js=et,x={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},Ms={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65},B={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},_={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},Ds={majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75},Ae={setNull:50,conditional:78},Kt={...Ms,...B,..._,...Ds,...Ae},b=new Map;function _s(i){const t=Math.sqrt(i.length),r=i.slice(0,t),e=[1];for(let n=1;n<t;n++){let o=null;for(let a=0;a<t;a++){const s=i[a+n*t],u=i[a];if(o==null)if(u===0){if(s)return{separable:!1,row:null,col:null}}else o=s/u;else if(s/u!==o)return{separable:!1,row:null,col:null}}if(o==null)return{separable:!1,row:null,col:null};e.push(o)}return{separable:!0,row:r,col:e}}function Zt(i,t,r,e,n,o,a){const s=new Float32Array(t*r),u=o.length,c=a?0:e,p=a?e:0,h=a?1:t;for(let f=c;f<r-c;f++){const g=f*t;for(let v=p;v<t-p;v++){if(n&&!n[g+v])continue;let F=0;for(let M=0;M<u;M++)F+=i[g+v+(M-e)*h]*o[M];s[g+v]=F}}return s}function Es(i,t,r,e,n,o,a){const s=new Float32Array(t*r),u=Math.floor(e/2),c=Math.floor(n/2);for(let p=u;p<r-u;p++){const h=p*t;for(let f=c;f<t-c;f++){if(o&&!o[h+f])continue;let g=0;for(let v=0;v<e;v++)for(let F=0;F<n;F++)g+=i[h+f+(v-u)*t+F-c]*a[v*n+F];s[h+f]=g}}return s}function Gs(i,t,r=!0){const{pixels:e,width:n,height:o,pixelType:a,mask:s}=i,u=e.length,c=[],{kernel:p,rows:h,cols:f}=t;for(let g=0;g<u;g++){const v=Es(e[g],n,o,h,f,s,p);r&&$e(v,n,o,h,f),c.push(v)}return new d({width:n,height:o,pixelType:a,pixels:c,mask:s})}function $e(i,t,r,e,n){const o=Math.floor(e/2);for(let s=0;s<o;s++)for(let u=0;u<t;u++)i[s*t+u]=i[(n-1-s)*t+u],i[(r-1-s)*t+u]=i[(r-n+s)*t+u];const a=Math.floor(n/2);for(let s=0;s<r;s++){const u=s*t;for(let c=0;c<a;c++)i[u+c]=i[u+n-1-c],i[u+t-c-1]=i[u+t+c-n]}}function Os(i,t,r,e=!0){const{pixels:n,width:o,height:a,pixelType:s,mask:u}=i,c=n.length,p=[],h=t.length,f=r.length,g=Math.floor(h/2),v=Math.floor(f/2);for(let F=0;F<c;F++){let M=Zt(n[F],o,a,g,u,t,!0);M=Zt(M,o,a,v,u,r,!1),e&&$e(M,o,a,h,f),p.push(M)}return new d({width:o,height:a,pixelType:s,pixels:p,mask:u})}function zs(i,t){const r=_s(t.kernel),e=t.mirrorEdges!==!1,n=r.separable?Os(i,r.row,r.col,e):Gs(i,t,e),{outputPixelType:o}=t;return o&&n.clamp(o),n}b.set(x.none,[0,0,0,0,1,0,0,0,0]),b.set(x.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),b.set(x.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),b.set(x.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),b.set(x.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),b.set(x.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),b.set(x.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),b.set(x.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),b.set(x.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),b.set(x.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),b.set(x.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),b.set(x.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),b.set(x.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),b.set(x.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),b.set(x.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),b.set(x.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),b.set(x.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),b.set(x.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),b.set(x.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),b.set(x.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),b.set(x.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),b.set(x.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),b.set(x.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);var Nt;let X=Nt=class extends S{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(i){this._set("convolutionType",i);const t=b.get(i);if(!t||i===x.userDefined||i===x.none)return;const r=Math.sqrt(t.length);this._set("kernel",t),this._set("cols",r),this._set("rows",r)}clone(){return new Nt({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:E(this.raster)})}};l([m({json:{type:Number,write:!0}})],X.prototype,"rows",void 0),l([m({json:{type:Number,write:!0}})],X.prototype,"cols",void 0),l([m({json:{name:"type",type:Number,write:!0}})],X.prototype,"convolutionType",null),l([m({json:{type:[Number],write:!0}})],X.prototype,"kernel",void 0),X=Nt=l([w("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],X);const Vs=X,Qt=25;let st=class extends j{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{convolutionType:t,rows:r,cols:e,kernel:n}=this.functionArguments;if(!Object.values(x).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==x.none&&r*e!==n.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const o=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(o.pixelType);const a=o.clone();a.pixelType=this.outputPixelType;const s=[x.none,x.sharpen,x.sharpen2,x.sharpening3x3,x.sharpening5x5];return this.outputPixelType==="u8"||s.includes(t)||(a.statistics=null,a.histograms=null),a.colormap=null,a.attributeTable=null,this.rasterInfo=a,{success:!0,supportsGPU:n.length<=Qt}}_processPixels(t){const r=t.pixelBlocks?.[0];if(T(r)||this.functionArguments.convolutionType===x.none)return r;let{kernel:e,rows:n,cols:o}=this.functionArguments;const a=e.reduce((s,u)=>s+u);return a!==0&&a!==1&&(e=e.map(s=>s/a)),zs(r,{kernel:e,rows:n,cols:o,outputPixelType:this.outputPixelType})}_getWebGLParameters(){let{kernel:t}=this.functionArguments;const r=t.reduce((n,o)=>n+o);r!==0&&r!==1&&(t=t.map(n=>n/r));const e=new Float32Array(Qt);return e.set(t),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:e,clampRange:vt(this.outputPixelType)}}};l([m({json:{write:!0,name:"rasterFunction"}})],st.prototype,"functionName",void 0),l([m({type:Vs,json:{write:!0,name:"rasterFunctionArguments"}})],st.prototype,"functionArguments",void 0),l([m()],st.prototype,"rasterArgumentNames",void 0),st=l([w("esri.layers.support.rasterFunctions.ConvolutionFunction")],st);const Ls=st;var Rt;let ht=Rt=class extends S{constructor(){super(...arguments),this.bandIds=[],this.missingBandAction=xe.bestMatch}clone(){return new Rt({bandIds:[...this.bandIds],missingBandAction:this.missingBandAction})}};l([m({json:{write:!0}})],ht.prototype,"bandIds",void 0),l([m({json:{write:!0}})],ht.prototype,"missingBandAction",void 0),ht=Rt=l([w("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],ht);const Us=ht;let nt=class extends j{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,r=t[0],{bandCount:e}=r,{bandIds:n,missingBandAction:o}=this.functionArguments;if(o===xe.fail&&n.some(c=>c<0||c>=e))return{success:!1,supportsGPU:!1,error:"extract-band-function: invalid bandIds"};this.outputPixelType=this._getOutputPixelType("f32");const a=r.clone();a.pixelType=this.outputPixelType,a.bandCount=n.length;const{statistics:s,histograms:u}=a;return C(s)&&s.length&&(a.statistics=n.map(c=>s[c]||s[s.length-1])),C(u)&&u.length&&(a.histograms=n.map(c=>u[c]||u[u.length-1])),this.rasterInfo=a,{success:!0,supportsGPU:a.bandCount<=3}}_processPixels(t){const r=t.pixelBlocks?.[0];if(T(r))return null;const e=r.pixels.length,n=this.functionArguments.bandIds.map(o=>o>=e?e-1:o);return r.extractBands(n)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],t.length===0?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let r=0;r<3;r++)t[r]=Math.min(t[r],2)}return{bandIndexMat3:P(t)}}_getInputBandIds(t){const r=t.length;return this.functionArguments.bandIds.map(e=>e>=r?r-1:e).map(e=>t[e])}};l([m({json:{write:!0,name:"rasterFunction"}})],nt.prototype,"functionName",void 0),l([m({type:Us,json:{write:!0,name:"rasterFunctionArguments"}})],nt.prototype,"functionArguments",void 0),l([m()],nt.prototype,"rasterArgumentNames",void 0),nt=l([w("esri.layers.support.rasterFunctions.ExtractBandFunction")],nt);const Ws=nt;var kt;let H=kt=class extends S{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(i,t){t.rasters=i.map(r=>typeof r=="number"||typeof r=="string"?r:r.toJSON())}clone(){return new kt({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:E(this.rasters)})}};l([m({json:{write:!0}})],H.prototype,"operation",void 0),l([m({json:{write:!0}})],H.prototype,"rasters",void 0),l([ut("rasters")],H.prototype,"writeRasters",null),l([m({json:{write:!0}})],H.prototype,"processAsMultiband",void 0),H=kt=l([w("esri.layers.support.rasterFunctions.LocalFunctionArguments")],H);const qs=H,N=new Map;function Xs(i){return N.get(i)}N.set(_.acos,[0,Math.PI]),N.set(_.asin,[-Math.PI/2,Math.PI/2]),N.set(_.atan,[-Math.PI/2,Math.PI/2]),N.set(_.cos,[-1,1]),N.set(_.sin,[-1,1]),N.set(B.booleanAnd,[0,1]),N.set(B.booleanNot,[0,1]),N.set(B.booleanOr,[0,1]),N.set(B.booleanXOr,[0,1]),N.set(B.equalTo,[0,1]),N.set(B.notEqual,[0,1]),N.set(B.greaterThan,[0,1]),N.set(B.greaterThanEqual,[0,1]),N.set(B.lessThan,[0,1]),N.set(B.lessThanEqual,[0,1]),N.set(B.isNull,[0,1]);const te=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function Hs(i,t=!1){const r=i.map(s=>s.mask),e=r.filter(s=>C(s)),n=i[0].pixels[0].length;if(e.length===0)return new Uint8Array(n).fill(255);const o=e[0],a=new Uint8Array(o);if(e.length===1)return a;if(!t){for(let s=1;s<e.length;s++){const u=e[s];for(let c=0;c<a.length;c++)a[c]&&(a[c]=u[c]?255:0)}return a}if(e.length!==r.length)return new Uint8Array(n).fill(255);for(let s=1;s<e.length;s++){const u=e[s];for(let c=0;c<a.length;c++)a[c]===0&&(a[c]=u[c]?255:0)}return a}function Js(i,t,r){const[e,n]=i,o=e.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)t&&!t[s]||(a[s]=e[s]+n[s]);return a}function Ys(i,t,r){const[e]=i,n=e.length,o=d.createEmptyBand("f32",n);return o.set(e),o}function Ks(i,t,r){const[e,n]=i,o=e.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)t&&!t[s]||(a[s]=e[s]-n[s]);return a}function Zs(i,t,r){const[e,n]=i,o=e.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)t&&!t[s]||(a[s]=e[s]*n[s]);return a}function Qs(i,t,r){const[e]=i,n=e.length,o=d.createEmptyBand(r,n);for(let a=0;a<n;a++)t&&!t[a]||(o[a]=Math.sign(e[a])*Math.floor(Math.abs(e[a])));return o}function Ie(i,t,r){const[e,n]=i,o=e.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)t&&!t[s]||(a[s]=e[s]/n[s]);return a}function tn(i,t,r){return Ie(i,t,"f32")}function en(i,t,r){const[e,n]=i,o=e.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)t&&!t[s]||(a[s]=Math.floor(e[s]/n[s]));return a}function sn(i,t,r,e){const n=i[0],o=n.length,a=d.createEmptyBand(r,o);if(e===_.atanh){for(let u=0;u<o;u++)if(t[u]){const c=n[u];Math.abs(c)>=1?t[u]=0:a[u]=Math.atanh(c)}return a}const s=e===_.asin?Math.asin:Math.acos;for(let u=0;u<o;u++)if(t[u]){const c=n[u];Math.abs(c)>1?t[u]=0:a[u]=s(c)}return a}function nn(i,t,r,e){const[n]=i,o=n.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)t&&!t[s]||(a[s]=e(n[s]));return a}function rn(i,t,r,e){const[n,o]=i,a=n.length,s=d.createEmptyBand(r,a);for(let u=0;u<a;u++)t&&!t[u]||(s[u]=e(n[u],o[u]));return s}function on(i,t,r){const[e,n]=i,o=e.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)t&&!t[s]||(a[s]=e[s]&n[s]);return a}function ee(i,t,r){const[e,n]=i,o=e.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)t&&!t[s]||(a[s]=e[s]<<n[s]);return a}function an(i,t,r){const[e]=i,n=e.length,o=d.createEmptyBand(r,n);for(let a=0;a<n;a++)t&&!t[a]||(o[a]=~e[a]);return o}function un(i,t,r){const[e,n]=i,o=e.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)t&&!t[s]||(a[s]=e[s]|n[s]);return a}function ln(i,t,r){const[e,n]=i,o=e.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)t&&!t[s]||(a[s]=e[s]>>n[s]);return a}function cn(i,t,r){const[e,n]=i,o=e.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)t&&!t[s]||(a[s]=e[s]^n[s]);return a}function pn(i,t,r){const[e,n]=i,o=e.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)t&&!t[s]||(a[s]=e[s]&&n[s]?1:0);return a}function hn(i,t,r){const[e]=i,n=e.length,o=d.createEmptyBand(r,n);for(let a=0;a<n;a++)t&&!t[a]||(o[a]=e[a]?0:1);return o}function mn(i,t,r){const[e,n]=i,o=e.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)t&&!t[s]||(a[s]=e[s]||n[s]?1:0);return a}function fn(i,t,r){const[e,n]=i,o=e.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)t&&!t[s]||(a[s]=(e[s]?1:0)^(n[s]?1:0));return a}function dn(i,t,r){const[e,n]=i,o=e.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)t&&!t[s]||(a[s]=e[s]===n[s]?1:0);return a}function Vt(i,t,r,e){const[n]=i,o=n.length,a=d.createEmptyBand(r,o),s=e===Math.E;for(let u=0;u<o;u++)t&&!t[u]||(a[u]=s?Math.exp(n[u]):e**n[u]);return a}function gn(i,t,r){return Vt(i,t,r,10)}function yn(i,t,r){return Vt(i,t,r,2)}function xn(i,t,r){return Vt(i,t,r,Math.E)}function Lt(i,t,r,e){const[n]=i,o=n.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)t&&!t[s]||(n[s]<=0?t[s]=0:a[s]=e(n[s]));return a}function wn(i,t,r){return Lt(i,t,r,Math.log10)}function vn(i,t,r){return Lt(i,t,r,Math.log2)}function bn(i,t,r){return Lt(i,t,r,Math.log)}function An(i,t,r){const[e,n]=i,o=e.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)t&&!t[s]||(a[s]=e[s]>n[s]?1:0);return a}function $n(i,t,r){const[e,n]=i,o=e.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)t&&!t[s]||(a[s]=e[s]>=n[s]?1:0);return a}function In(i,t,r){const[e,n]=i,o=e.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)t&&!t[s]||(a[s]=e[s]<n[s]?1:0);return a}function Fn(i,t,r){const[e,n]=i,o=e.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)t&&!t[s]||(a[s]=e[s]<=n[s]?1:0);return a}function Pn(i,t,r){const[e]=i,n=e.length,o=d.createEmptyBand(r,n);if(!t)return o;for(let a=0;a<n;a++)o[a]=t[a]?0:1;return o}function Nn(i,t,r){const[e,n]=i,o=e.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)t&&!t[s]||(a[s]=e[s]%n[s]);return a}function Rn(i,t,r){const[e]=i,n=e.length,o=d.createEmptyBand(r,n);for(let a=0;a<n;a++)t&&!t[a]||(o[a]=-e[a]);return o}function kn(i,t,r){const[e,n]=i,o=e.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)t&&!t[s]||(a[s]=e[s]===n[s]?0:1);return a}function Tn(i,t,r){const[e,n]=i,o=e.length,a=d.createEmptyBand(r,o),s=new Uint8Array(o);for(let u=0;u<o;u++)t!=null&&!t[u]||e[u]!==0||(a[u]=n[u],s[u]=255);return{band:a,mask:s}}function se(i,t,r){const[e,n,o]=i,a=e.length,s=d.createEmptyBand(r,a);for(let u=0;u<a;u++)t&&!t[u]||(s[u]=e[u]?n[u]:o[u]);return s}function ne(i,t,r){const e=i.length;if(e<2)return i[0];const[n]=i,o=n.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)if(!t||t[s]){let u=n[s];for(let c=1;c<e;c++){const p=i[c][s];u<p&&(u=p)}a[s]=u}return a}function re(i,t,r){const e=i.length;if(e<2)return i[0];const[n]=i,o=n.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)if(!t||t[s]){let u=n[s];for(let c=1;c<e;c++){const p=i[c][s];u>p&&(u=p)}a[s]=u}return a}function oe(i,t,r){const e=i.length;if(e<2)return i[0];const[n]=i,o=n.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)if(!t||t[s]){let u=n[s],c=u;for(let p=1;p<e;p++){const h=i[p][s];c<h?c=h:u>h&&(u=h)}a[s]=c-u}return a}function ie(i,t,r){const e=i.length;if(e<2)return i[0];const[n]=i,o=n.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)if(!t||t[s]){let u=0;for(let c=0;c<e;c++)u+=i[c][s];a[s]=u/e}return a}function ae(i,t,r){const e=i.length;if(e<2)return i[0];const[n]=i,o=n.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)if(!t||t[s])for(let u=0;u<e;u++){const c=i[u];a[s]+=c[s]}return a}function ue(i,t,r){const e=i.length;if(e<2)return i[0];const[n]=i,o=n.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)if(!t||t[s]){const u=new Float32Array(e);let c=0;for(let h=0;h<e;h++){const f=i[h];c+=f[s],u[h]=f[s]}c/=e;let p=0;for(let h=0;h<e;h++)p+=(u[h]-c)**2;a[s]=Math.sqrt(p/e)}return a}function le(i,t,r){const e=i.length;if(e<2)return i[0];const n=Math.floor(e/2),[o]=i,a=o.length,s=d.createEmptyBand(r,a),u=new Float32Array(e),c=e%2==1;for(let p=0;p<a;p++)if(!t||t[p]){for(let h=0;h<e;h++)u[h]=i[h][p];u.sort(),s[p]=c?u[n]:(u[n]+u[n-1])/2}return s}function Fe(i,t,r){const[e,n]=i;if(n==null)return e;const o=e.length,a=d.createEmptyBand(r,o);for(let s=0;s<o;s++)t[s]&&(e[s]===n[s]?a[s]=e[s]:t[s]=0);return a}function ce(i,t,r){const e=i.length;if(e<=2)return Fe(i,t,r);const n=i[0].length,o=d.createEmptyBand(r,n),a=new Map;for(let s=0;s<n;s++)if(!t||t[s]){let u;a.clear();for(let h=0;h<e;h++)u=i[h][s],a.set(u,a.has(u)?a.get(u)+1:1);let c=0,p=0;for(const h of a.keys())c=a.get(h),c>p&&(p=c,u=h);o[s]=u}return o}function pe(i,t,r){const e=i.length;if(e<=2)return Fe(i,t,r);const n=i[0].length,o=d.createEmptyBand(r,n),a=new Map;for(let s=0;s<n;s++)if(!t||t[s]){let u;a.clear();for(let h=0;h<e;h++)u=i[h][s],a.set(u,a.has(u)?a.get(u)+1:1);let c=0,p=i.length;for(const h of a.keys())c=a.get(h),c<p&&(p=c,u=h);o[s]=u}return o}function he(i,t,r){const e=i.length;if(e<2)return i[0];const[n]=i,o=n.length,a=d.createEmptyBand(r,o),s=new Set;for(let u=0;u<o;u++)if(!t||t[u]){let c;s.clear();for(let p=0;p<e;p++)c=i[p][u],s.add(c);a[u]=s.size}return a}const I=new Map,wt=new Map,y=new Map,A=new Map;function Bn(){I.size||(I.set(4,Math.sqrt),I.set(6,Math.acos),I.set(7,Math.asin),I.set(8,Math.atan),I.set(9,Math.atanh),I.set(10,Math.abs),I.set(21,Math.cos),I.set(22,Math.cosh),I.set(48,Math.floor),I.set(49,Math.ceil),I.set(51,Math.sin),I.set(52,Math.sinh),I.set(56,Math.tan),I.set(57,Math.tanh),I.set(59,Math.acosh),I.set(60,Math.asinh),I.set(65,Math.floor),wt.set(5,Math.pow),wt.set(61,Math.atan2),y.set(1,Js),y.set(2,Ks),y.set(3,Zs),y.set(11,on),y.set(12,ee),y.set(12,ee),y.set(13,an),y.set(14,un),y.set(15,ln),y.set(16,cn),y.set(17,pn),y.set(18,hn),y.set(19,mn),y.set(20,fn),y.set(23,Ie),y.set(24,dn),y.set(25,xn),y.set(26,gn),y.set(27,yn),y.set(28,An),y.set(29,$n),y.set(30,Qs),y.set(31,Pn),y.set(32,Ys),y.set(33,In),y.set(34,Fn),y.set(35,bn),y.set(36,wn),y.set(37,vn),y.set(44,Nn),y.set(45,Rn),y.set(46,kn),y.set(64,tn),y.set(65,en),y.set(76,se),y.set(78,se),A.set(38,ce),A.set(39,ne),A.set(40,ie),A.set(41,le),A.set(42,re),A.set(43,pe),A.set(47,oe),A.set(54,ue),A.set(55,ae),A.set(58,he),A.set(66,ce),A.set(67,ne),A.set(68,ie),A.set(69,le),A.set(70,re),A.set(71,pe),A.set(72,oe),A.set(73,ue),A.set(74,ae),A.set(75,he))}function Cn(i,t,r,e){let[n,o]=vt(r);const a=r.startsWith("u")||r.startsWith("s");a&&(n-=1e-5,o+=1e-5);for(let s=0;s<t.length;s++)if(t[s]){const u=i[s];isNaN(u)||u<n||u>o?t[s]=0:e[s]=a?Math.round(u):u}}function Sn(i,t,r={}){Bn();let e=Hs(i,t>=66&&t<=75);const{outputPixelType:n="f32"}=r,o=!A.has(t)||r.processAsMultiband,a=o?i[0].pixels.length:1,s=[];for(let c=0;c<a;c++){const p=A.has(t)&&!o?i.flatMap(g=>g.pixels):i.map(g=>g.pixels[c]);let h,f=!0;if(t===Ae.setNull){const g=Tn(p,e,n);h=g.band,e=g.mask,f=!1}else y.has(t)?h=y.get(t)(p,e,"f64"):I.has(t)?h=t===_.asin||t===_.acos||t===_.atanh?sn(p,e,"f64",t):nn(p,e,"f64",I.get(t)):wt.has(t)?h=rn(p,e,"f64",wt.get(t)):A.has(t)?h=A.get(t)(p,e,"f64"):(h=p[0],f=!1);if(f&&t!==B.isNull&&!N.has(t)){const g=d.createEmptyBand(n,h.length);e||(e=new Uint8Array(h.length).fill(255)),Cn(h,e,n,g),h=g}s.push(h)}const u=i[0];return new d({width:u.width,height:u.height,pixelType:n,mask:t===B.isNull?null:e,pixels:s})}let rt=class extends j{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,r=t[0],{bandCount:e}=r,{processAsMultiband:n}=this.functionArguments;if(t.some(p=>p.bandCount!==e))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:o,rasters:a}=this.functionArguments,s=te[o];if(!(s===999||a.length===s||a.length<=1&&s===1))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${s}`};this.outputPixelType=this._getOutputPixelType("f32");const u=r.clone();u.pixelType=this.outputPixelType,u.statistics=null,u.histograms=null,u.colormap=null,u.attributeTable=null,u.bandCount=s!==999||n?e:1;const c=Xs(o);if(c){u.statistics=[];for(let p=0;p<u.bandCount;p++)u.statistics[p]={min:c[0],max:c[1],avg:(c[0]+c[1])/2,stddev:(c[0]+c[1])/10}}return this.rasterInfo=u,{success:!0,supportsGPU:u.bandCount===1&&s<=3&&(o<11||o>16)}}_processPixels(t){const{pixelBlocks:r}=t;return T(r)||r.some(e=>T(e))?null:Sn(r,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,r=te[t],e=Object.keys(Kt).find(u=>Kt[u]===t)?.toLowerCase()??"undefined",n=this.outputPixelType??"f32";let[o,a]=vt(n);const s=n.startsWith("u")||n.startsWith("s");return s&&(o-=1e-4,a+=1e-4),{imageCount:r,operationName:e,domainRange:[o,a],isOutputRounded:s}}};l([m({json:{write:!0,name:"rasterFunction"}})],rt.prototype,"functionName",void 0),l([m({type:qs,json:{write:!0,name:"rasterFunctionArguments"}})],rt.prototype,"functionArguments",void 0),l([m()],rt.prototype,"rasterArgumentNames",void 0),rt=l([w("esri.layers.support.rasterFunctions.LocalFunction")],rt);const jn=rt;var Tt;let J=Tt=class extends S{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=we.matchAny}get normalizedNoDataValues(){const{noDataValues:i}=this;if(!i?.length)return null;let t=!1;const r=i.map(e=>{if(typeof e=="number")return t=!0,[e];if(typeof e=="string"){const n=e.trim().split(" ").filter(o=>o.trim()!=="").map(o=>Number(o));return t=t||n.length>0,n.length===0?null:n}return null});return t?r:null}clone(){return new Tt({includedRanges:this.includedRanges?.slice()??[],noDataValues:this.noDataValues?.slice()??[],noDataInterpretation:this.noDataInterpretation})}};l([m({json:{write:!0}})],J.prototype,"includedRanges",void 0),l([m({json:{write:!0}})],J.prototype,"noDataValues",void 0),l([m()],J.prototype,"normalizedNoDataValues",null),l([m({json:{write:!0}})],J.prototype,"noDataInterpretation",void 0),J=Tt=l([w("esri.layers.support.rasterFunctions.MaskFunctionArguments")],J);const Mn=J;let Y=class extends j{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:r}=t;this.outputPixelType=this._getOutputPixelType(r),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:e,normalizedNoDataValues:n}=this.functionArguments;if(!e?.length&&!n?.length)return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let o=[];for(let s=0;s<t.bandCount;s++){const u=Ee(r,e?.slice(2*s,2*s+2),n?.[s]);if(u==null){o=null;break}o.push(u)}this.lookups=o;const a=n!=null&&n.every(s=>s?.length===n[0]?.length);return{success:!0,supportsGPU:(!e||e.length<=2*W)&&(!n||a&&n[0].length<=W)}}_processPixels(t){const r=t.pixelBlocks?.[0];if(T(r))return null;const{outputPixelType:e,lookups:n}=this,{includedRanges:o,noDataInterpretation:a,normalizedNoDataValues:s}=this.functionArguments,u=a===we.matchAll;return Ge(r,{includedRanges:o,noDataValues:s,outputPixelType:e,matchAll:u,lookups:n})}_getWebGLParameters(){const{includedRanges:t,normalizedNoDataValues:r}=this.functionArguments,e=new Float32Array(W);e.fill(at),r?.[0]?.length&&e.set(r[0]);const n=new Float32Array(W);for(let o=0;o<n.length;o+=2)n[o]=t?.[o]??-at,n[o+1]=t?.[o+1]??at;return t&&t.length&&n.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:e,includedRanges:n}}};l([m({json:{write:!0,name:"rasterFunction"}})],Y.prototype,"functionName",void 0),l([m({type:Mn,json:{write:!0,name:"rasterFunctionArguments"}})],Y.prototype,"functionArguments",void 0),l([m()],Y.prototype,"rasterArgumentNames",void 0),l([m({json:{write:!0}})],Y.prototype,"lookups",void 0),Y=l([w("esri.layers.support.rasterFunctions.MaskFunction")],Y);const Dn=Y;var Bt;let ot=Bt=class extends S{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:i,infraredBandID:t,scientificOutput:r}=this;return new Bt({visibleBandID:i,infraredBandID:t,scientificOutput:r})}};l([m({json:{write:!0}})],ot.prototype,"visibleBandID",void 0),l([m({json:{write:!0}})],ot.prototype,"infraredBandID",void 0),l([m({json:{write:!0}})],ot.prototype,"scientificOutput",void 0),ot=Bt=l([w("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],ot);const _n=ot;let it=class extends j{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const r=this.sourceRasterInfos[0].clone();r.pixelType=this.outputPixelType,r.colormap=null,r.histograms=null,r.bandCount=1;const[e,n,o,a]=t?[-1,1,0,.1]:[0,200,100,10];return r.statistics=[{min:e,max:n,avg:o,stddev:a}],this.rasterInfo=r,{success:!0,supportsGPU:!0}}_processPixels(t){const r=t.pixelBlocks?.[0];if(T(r))return null;const{visibleBandID:e,infraredBandID:n,scientificOutput:o}=this.functionArguments;return rs(r,e,n,!o)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:r,scientificOutput:e}=this.functionArguments,n=this.isInputBandIdsSwizzled?[0,1,2]:[r,t,0];return{bandIndexMat3:P(n),scaled:!e}}_getInputBandIds(t){const{visibleBandID:r,infraredBandID:e}=this.functionArguments;return[e,r,0].map(n=>t[n])}};l([m({json:{write:!0,name:"rasterFunction"}})],it.prototype,"functionName",void 0),l([m({type:_n,json:{write:!0,name:"rasterFunctionArguments"}})],it.prototype,"functionArguments",void 0),l([m()],it.prototype,"rasterArgumentNames",void 0),it=l([w("esri.layers.support.rasterFunctions.NDVIFunction")],it);const En=it;var Ct;let z=Ct=class extends S{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new Ct({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};l([m({json:{write:!0}})],z.prototype,"inputRanges",void 0),l([m({json:{write:!0}})],z.prototype,"outputValues",void 0),l([m({json:{write:!0}})],z.prototype,"noDataRanges",void 0),l([m({json:{write:!0}})],z.prototype,"allowUnmatched",void 0),l([m({json:{write:!0}})],z.prototype,"isLastInputRangeInclusive",void 0),z=Ct=l([w("esri.layers.support.rasterFunctions.RemapFunctionArguments")],z);const Gn=z;let K=class extends j{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:r}=t;this.outputPixelType=this._getOutputPixelType(r),t.pixelType=this.outputPixelType,t.colormap=null,t.histograms=null,t.bandCount=1,t.attributeTable=null;const{statistics:e}=t,{allowUnmatched:n,outputValues:o,inputRanges:a,noDataRanges:s,isLastInputRangeInclusive:u}=this.functionArguments;if(C(e)&&e.length&&o?.length)if(n){const c=Math.min.apply(null,[...o,e[0].min]),p=Math.max.apply(null,[...o,e[0].max]);t.statistics=[{...e[0],min:c,max:p}]}else{let c=o[0],p=c;for(let h=0;h<o.length;h++)c=c>o[h]?o[h]:c,p=p>o[h]?p:o[h];t.statistics=[{...e[0],min:c,max:p}]}return this.rasterInfo=t,this.lookup=n?null:Oe({srcPixelType:r,inputRanges:a,outputValues:o,noDataRanges:s,allowUnmatched:n,isLastInputRangeInclusive:u,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!o||o.length<=W)&&(!s||s.length<=W)}}_processPixels(t){const r=t.pixelBlocks?.[0];if(T(r))return null;const{lookup:e,outputPixelType:n}=this;if(e){const p=ve(r,{lut:[e.lut],offset:e.offset,outputPixelType:n});return C(p)&&e.mask&&(p.mask=ze(r.pixels[0],r.mask,e.mask,e.offset,"u8")),p}const{inputRanges:o,outputValues:a,noDataRanges:s,allowUnmatched:u,isLastInputRangeInclusive:c}=this.functionArguments;return Ve(r,{inputRanges:o,outputValues:a,noDataRanges:s,outputPixelType:n,allowUnmatched:u,isLastInputRangeInclusive:c})}_getWebGLParameters(){const{allowUnmatched:t,inputRanges:r,outputValues:e,noDataRanges:n,isLastInputRangeInclusive:o}=this.functionArguments,a=new Float32Array(3*W),s=1e-5,u=e.length;if(r?.length){let p=0,h=0;for(let f=0;f<a.length;f+=3)a[f]=r[p++]??at-1,a[f+1]=r[p++]??at,a[f+2]=e[h++]??0,h<=u&&(f>0&&(a[f]-=s),(h<u||!o)&&(a[f+1]-=s))}const c=new Float32Array(2*W);return c.fill(at),n?.length&&c.set(n),{allowUnmatched:t,rangeMaps:a,noDataRanges:c,clampRange:vt(this.outputPixelType)}}};l([m({json:{write:!0,name:"rasterFunction"}})],K.prototype,"functionName",void 0),l([m({type:Gn,json:{write:!0,name:"rasterFunctionArguments"}})],K.prototype,"functionArguments",void 0),l([m()],K.prototype,"rasterArgumentNames",void 0),l([m({json:{write:!0}})],K.prototype,"lookup",void 0),K=l([w("esri.layers.support.rasterFunctions.RemapFunction")],K);const On=K;var St;const zn=new Ot({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let V=St=class extends S{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new St({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};l([lt(zn)],V.prototype,"slopeType",void 0),l([m({type:Number,json:{write:!0}})],V.prototype,"zFactor",void 0),l([m({type:Number,json:{name:"psPower",write:!0}})],V.prototype,"pixelSizePower",void 0),l([m({type:Number,json:{name:"psZFactor",write:!0}})],V.prototype,"pixelSizeFactor",void 0),l([m({type:Boolean,json:{write:!0}})],V.prototype,"removeEdgeEffect",void 0),V=St=l([w("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],V);const Vn=V,Ln=1/111e3;let Z=class extends j{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.statistics=this.functionArguments.slopeType!=="percent-rise"?[{min:0,max:90,avg:1,stddev:1}]:null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.bandCount=1,this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const r=t.pixelBlocks?.[0];if(T(r))return null;const{zFactor:e,slopeType:n,pixelSizePower:o,pixelSizeFactor:a}=this.functionArguments,{isGCS:s}=this,{extent:u}=t,c=u?{x:u.width/r.width,y:u.height/r.height}:{x:1,y:1};return Le(r,{zFactor:e,slopeType:n,pixelSizePower:o,pixelSizeFactor:a,isGCS:s,resolution:c})}_getWebGLParameters(){const{zFactor:t,slopeType:r,pixelSizeFactor:e,pixelSizePower:n}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*Ln:t,slopeType:r,pixelSizeFactor:e??0,pixelSizePower:n??0}}};l([m({json:{write:!0,name:"rasterFunction"}})],Z.prototype,"functionName",void 0),l([m({type:Vn,json:{write:!0,name:"rasterFunctionArguments"}})],Z.prototype,"functionArguments",void 0),l([m()],Z.prototype,"rasterArgumentNames",void 0),l([m({json:{write:!0}})],Z.prototype,"isGCS",void 0),Z=l([w("esri.layers.support.rasterFunctions.SlopeFunction")],Z);const Un=Z;var jt;let Q=jt=class extends S{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(i,t){if(!i?.length)return null;const r=[];return i.forEach(e=>{const n={min:e.min,max:e.max,avg:e.avg??e.mean,stddev:e.stddev??e.standardDeviation};r.push(n)}),r}writeStatistics(i,t,r){if(!i?.length)return;const e=[];i.forEach(n=>{const o={...n,mean:n.avg,standardDeviation:n.stddev};delete o.avg,delete o.stddev,e.push(o)}),t[r]=e}clone(){return new jt({statistics:E(this.statistics),histograms:E(this.histograms)})}};l([m({json:{write:!0}})],Q.prototype,"statistics",void 0),l([gt("statistics")],Q.prototype,"readStatistics",null),l([ut("statistics")],Q.prototype,"writeStatistics",null),l([m({json:{write:!0}})],Q.prototype,"histograms",void 0),Q=jt=l([w("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],Q);const Wn=Q;let L=class extends j{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const r=t.clone(),{statistics:e,histograms:n}=this.functionArguments;return n&&(r.histograms=n),e&&(r.statistics=e),this.rasterInfo=r,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};l([m({json:{write:!0,name:"rasterFunction"}})],L.prototype,"functionName",void 0),l([m({type:Wn,json:{write:!0,name:"rasterFunctionArguments"}})],L.prototype,"functionArguments",void 0),l([m()],L.prototype,"rasterArgumentNames",void 0),l([m({json:{write:!0}})],L.prototype,"indexedColormap",void 0),l([m()],L.prototype,"isNoopProcess",void 0),L=l([w("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],L);const qn=L;var Mt;const Xn=new Ot({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let R=Mt=class extends S{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(i,t,r){i?.length&&(Array.isArray(i[0])||(i=i.map(e=>[e.min,e.max,e.avg,e.stddev])),t[r]=i)}clone(){return new Mt({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:E(this.statistics),gamma:E(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:E(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};l([m({type:Boolean,json:{write:!0}})],R.prototype,"computeGamma",void 0),l([m({type:Boolean,json:{name:"dra",write:!0}})],R.prototype,"dynamicRangeAdjustment",void 0),l([m({type:[Number],json:{write:!0}})],R.prototype,"gamma",void 0),l([m()],R.prototype,"histograms",void 0),l([m({type:Number,json:{write:!0}})],R.prototype,"maxPercent",void 0),l([m({type:Number,json:{write:!0}})],R.prototype,"minPercent",void 0),l([m({type:Number,json:{write:!0}})],R.prototype,"numberOfStandardDeviations",void 0),l([m({type:Number,json:{name:"max",write:!0}})],R.prototype,"outputMax",void 0),l([m({type:Number,json:{name:"min",write:!0}})],R.prototype,"outputMin",void 0),l([m({type:Number,json:{write:!0}})],R.prototype,"sigmoidStrengthLevel",void 0),l([m({json:{type:[[Number]],write:!0}})],R.prototype,"statistics",void 0),l([ut("statistics")],R.prototype,"writeStatistics",null),l([lt(Xn)],R.prototype,"stretchType",void 0),l([m({type:Boolean,json:{write:!0}})],R.prototype,"useGamma",void 0),R=Mt=l([w("esri.layers.support.rasterFunctions.StretchFunctionArguments")],R);const Hn=R;let U=class extends j{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:r}=t,{functionArguments:e}=this,{dynamicRangeAdjustment:n,gamma:o,useGamma:a}=e;if(!n&&["u8","u16","s8","s16"].includes(r)){const u=bt(e.toJSON(),{rasterInfo:t}),c=this._isOutputRoundingNeeded()?"round":"float";this.lookup=Ue({pixelType:r,...u,gamma:a?o:null,rounding:c}),this.cutOffs=u}else n||(this.cutOffs=bt(e.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(r);const s=t.clone();return s.pixelType=this.outputPixelType,s.statistics=null,s.histograms=null,s.colormap=null,s.attributeTable=null,this.outputPixelType==="u8"&&(s.keyProperties.DataType="processed"),this.rasterInfo=s,{success:!0,supportsGPU:!n}}_processPixels(t){const r=t.pixelBlocks?.[0];if(T(r))return r;const{lookup:e}=this;if(e)return ve(r,{...e,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:n}=this,o=this.cutOffs||bt(n.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:r}),a=n.useGamma?n.gamma:null;return We(r,{...o,gamma:a,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:r=255,gamma:e,useGamma:n}=this.functionArguments,o=this.rasterInfo.bandCount>=2?3:1,a=n&&e&&e.length?qe(o,e):[1,1,1],{minCutOff:s,maxCutOff:u}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};s.length===1&&(s[1]=s[2]=s[0],u[1]=u[2]=u[0]);const c=new Float32Array(o);let p;for(p=0;p<o;p++)c[p]=(r-t)/(u[p]-s[p]);const h=this._isOutputRoundingNeeded();return{bandCount:o,outMin:t,outMax:r,minCutOff:s,maxCutOff:u,factor:c,useGamma:n,gamma:n&&e?e:[1,1,1],gammaCorrection:n&&a?a:[1,1,1],stretchType:this.functionArguments.stretchType,isOutputRounded:h,type:"stretch"}}};l([m({json:{write:!0,name:"rasterFunction"}})],U.prototype,"functionName",void 0),l([m({type:Hn,json:{write:!0,name:"rasterFunctionArguments"}})],U.prototype,"functionArguments",void 0),l([m()],U.prototype,"rasterArgumentNames",void 0),l([m({json:{write:!0}})],U.prototype,"lookup",void 0),l([m({json:{write:!0}})],U.prototype,"cutOffs",void 0),U=l([w("esri.layers.support.rasterFunctions.StretchFunction")],U);const Jn=U,k=new Map;function Yn(i,t){const{rasterFunctionArguments:r}=i;r&&(r.rasters||[r.raster]).forEach(e=>{e&&typeof e!="number"&&(typeof e=="string"?e.startsWith("http")&&(t.includes(e)||t.push(e)):"rasterFunctionArguments"in e&&Yn(e,t))})}function Ir(i,t){if(t=t??{},"function"in(i=E(i))&&"arguments"in i&&i.arguments&&(i=Zn(i,t)),"rasterFunction"in i)return Pe(i=Dt(i),t);throw new be("raster-function-helper","unsupported raster function json.")}function Kn(i,t){return t[0]==="rasters"&&Array.isArray(i.rasters)?i.rasters:t.map(r=>i[r])}function me(i){return!!(i&&typeof i=="object"&&i.rasterFunction&&i.rasterFunctionArguments)}function Dt(i){const{rasterFunction:t,rasterFunctionArguments:r}=i,e={};for(const n in r){let o=r[n];const a=n.toLowerCase();if(a==="rasters"&&Array.isArray(o))e.rasters=o.map(s=>me(s)?Dt(s):s);else switch(me(o)&&(o=Dt(o)),a){case"dra":e.dra=o;break;case"pspower":e.psPower=o;break;case"pszfactor":e.psZFactor=o;break;case"bandids":e.bandIds=o;break;default:e[n[0].toLowerCase()+n.slice(1)]=o}}return t!=="Local"||e.rasters?.length||(e.rasters=["$$"]),{...i,rasterFunctionArguments:e}}function Pe(i,t){const{rasterFunction:r,rasterFunctionArguments:e}=i,n=i.outputPixelType?.toLowerCase();if(r==null||!k.has(r))throw new be("raster-function-helper",`unsupported raster function: ${r}`);const o=k.get(r),a=(typeof o.ctor=="function"?o.ctor:o.ctor.default).fromJSON({...i,outputPixelType:n}),{rasterArgumentNames:s}=a,u=[],c=Kn(e,s),p=s[0]==="rasters",h=[];for(let f=0;f<c.length;f++){const g=c[f];let v;g==null||typeof g=="string"&&g.startsWith("$")?u.push(t?.raster):typeof g=="string"?t[g]&&u.push(t[g]):typeof g!="number"&&"rasterFunction"in g&&(v=Pe(g,t),p||(a.functionArguments[s[f]]=v),u.push(v)),p&&h.push(v??g)}if(p&&(a.functionArguments.rasters=h),t){a.sourceRasters=u;const f=t.raster?.url;f&&(a.mainPrimaryRasterId=f)}return a}function Ne(i,t){if(i&&t)for(const r in i){const e=i[r];e&&typeof e=="object"&&(e.function&&e.arguments?Ne(e.arguments,t):e.type==="RasterFunctionVariable"&&t[e.name]!=null&&(e.value=t[e.name]))}}function _t(i){if(!i||typeof i!="object")return i;if(Array.isArray(i)&&i.length===0)return i.length===0?null:["number","string"].includes(typeof i[0])?i:i.map(t=>_t(t));if("value"in i&&["number","string","boolean"].includes(typeof i.value))return i.value;if(!("type"in i))return i;switch(i.type){case"Scalar":return i.value;case"AlgorithmicColorRamp":return fe(i);case"MultiPartColorRamp":return{type:"multipart",colorRamps:i.ArrayOfColorRamp.map(fe)};case"ArgumentArray":return i.elements?.length?i.elements[0].type==="RasterStatistics"?i.elements:i.elements[0].type==="RasterFunctionVariable"?i.elements.map(t=>t.value!=null?_t(t.value):t.name.toLowerCase().includes("raster")?"$$":null):i:i.elements;default:return i}}function fe(i){const t=i.algorithm??"esriHSVAlgorithm";let{FromColor:r,ToColor:e}=i;if(!Array.isArray(r)){const{r:n,g:o,b:a}=Ht({h:r.Hue,s:r.Saturation,v:r.Value});r=[n,o,a,r.AlphaValue]}if(!Array.isArray(e)){const{r:n,g:o,b:a}=Ht({h:e.Hue,s:e.Saturation,v:e.Value});e=[n,o,a,e.AlphaValue]}return{type:"algorithmic",algorithm:t,fromColor:r,toColor:e}}function Zn(i,t){t&&Ne(i,t);const r={};return Re(i,r),r}function Re(i,t){if(!i||!t)return;const{function:r,arguments:e}=i;if(!r||!e)return;t.rasterFunction=r.type.replace("Function",""),t.outputPixelType=r.pixelType;const n={};t.rasterFunctionArguments=n;for(const o in e){const a=e[o];typeof a=="object"&&("function"in a&&a.function&&a.arguments?(t.rasterFunctionArguments[o]={},Re(a,t.rasterFunctionArguments[o])):"value"in a&&(n[o]=_t(a.value)))}switch(n.DEM&&!n.Raster&&(n.Raster=n.DEM,delete n.DEM),t.rasterFunction){case"Stretch":Qn(n);break;case"Colormap":tr(n);break;case"Convolution":er(n);break;case"Mask":sr(n)}}function Qn(i){i.Statistics?.length&&typeof i.Statistics=="object"&&(i.Statistics=i.Statistics.map(t=>[t.min,t.max,t.mean,t.standardDeviation])),i.NumberOfStandardDeviation!=null&&(i.NumberOfStandardDeviations=i.NumberOfStandardDeviation,delete i.NumberOfStandardDeviation)}function tr(i){i.ColorRamp?.type?.toLowerCase()==="randomcolorramp"&&(delete i.ColorRamp,i.ColormapName="Random"),i.ColorSchemeType===0&&delete i.ColorRamp}function er(i){i.ConvolutionType!=null&&(i.Type=i.ConvolutionType,delete i.ConvolutionType)}function sr(i){i.NoDataValues?.length&&typeof i.NoDataValues[0]=="string"&&(i.NoDataValues=i.NoDataValues.filter(t=>t!=="").map(t=>Number(t)))}k.set("Aspect",{desc:"Aspect Function",ctor:Je,rasterArgumentNames:["raster"]}),k.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:As,rasterArgumentNames:["raster"]}),k.set("Colormap",{desc:"Colormap Function",ctor:Cs,rasterArgumentNames:["raster"]}),k.set("CompositeBand",{desc:"CompositeBand Function",ctor:js,rasterArgumentNames:["rasters"]}),k.set("Convolution",{desc:"Convolution Function",ctor:Ls,rasterArgumentNames:["raster"]}),k.set("ExtractBand",{desc:"ExtractBand Function",ctor:Ws,rasterArgumentNames:["raster"]}),k.set("Local",{desc:"Local Function",ctor:jn,rasterArgumentNames:["rasters"]}),k.set("Mask",{desc:"Mask Function",ctor:Dn,rasterArgumentNames:["raster"]}),k.set("NDVI",{desc:"NDVI Function",ctor:En,rasterArgumentNames:["raster"]}),k.set("Remap",{desc:"Remap Function",ctor:On,rasterArgumentNames:["raster"]}),k.set("Slope",{desc:"Slope Function",ctor:Un,rasterArgumentNames:["raster"]}),k.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:qn,rasterArgumentNames:["raster"]}),k.set("Stretch",{desc:"Stretch Function",ctor:Jn,rasterArgumentNames:["raster"]});let mt=class extends Gt{get affectsPixelSize(){return!1}forwardTransform(i){return i}inverseTransform(i){return i}};l([m()],mt.prototype,"affectsPixelSize",null),l([m({json:{write:!0}})],mt.prototype,"spatialReference",void 0),mt=l([w("esri.layers.support.rasterTransforms.BaseRasterTransform")],mt);const Ut=mt;let ft=class extends Ut{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(t){return(t=t.clone()).type==="point"?(t.x>180+this.tolerance&&(t.x-=360),t):(t.xmin>=180-this.tolerance?(t.xmax-=360,t.xmin-=360):t.xmax>180+this.tolerance&&(t.xmin=-180,t.xmax=180),t)}inverseTransform(t){return(t=t.clone()).type==="point"?(t.x<-this.tolerance&&(t.x+=360),t):(t.xmin<-this.tolerance&&(t.xmin+=360,t.xmax+=360),t)}};l([lt({GCSShiftXform:"gcs-shift"})],ft.prototype,"type",void 0),l([m()],ft.prototype,"tolerance",void 0),ft=l([w("esri.layers.support.rasterTransforms.GCSShiftTransform")],ft);const nr=ft;let xt=class extends Ut{constructor(){super(...arguments),this.type="identity"}};l([lt({IdentityXform:"identity"})],xt.prototype,"type",void 0),xt=l([w("esri.layers.support.rasterTransforms.IdentityTransform")],xt);const rr=xt;function Et(i,t,r){const{x:e,y:n}=t;if(r<2)return{x:i[0]+e*i[2]+n*i[4],y:i[1]+e*i[3]+n*i[5]};if(r===2){const f=e*e,g=n*n,v=e*n;return{x:i[0]+e*i[2]+n*i[4]+f*i[6]+v*i[8]+g*i[10],y:i[1]+e*i[3]+n*i[5]+f*i[7]+v*i[9]+g*i[11]}}const o=e*e,a=n*n,s=e*n,u=o*e,c=o*n,p=e*a,h=n*a;return{x:i[0]+e*i[2]+n*i[4]+o*i[6]+s*i[8]+a*i[10]+u*i[12]+c*i[14]+p*i[16]+h*i[18],y:i[1]+e*i[3]+n*i[5]+o*i[7]+s*i[9]+a*i[11]+u*i[13]+c*i[15]+p*i[17]+h*i[19]}}function de(i,t,r){const{xmin:e,ymin:n,xmax:o,ymax:a,spatialReference:s}=t;let u=[];if(r<2)u.push({x:e,y:a}),u.push({x:o,y:a}),u.push({x:e,y:n}),u.push({x:o,y:n});else{let h=10;for(let f=0;f<h;f++)u.push({x:e,y:n+(a-n)*f/(h-1)}),u.push({x:o,y:n+(a-n)*f/(h-1)});h=8;for(let f=1;f<=h;f++)u.push({x:e+(o-e)*f/h,y:n}),u.push({x:e+(o-e)*f/h,y:a})}u=u.map(h=>Et(i,h,r));const c=u.map(h=>h.x),p=u.map(h=>h.y);return new Xe({xmin:Math.min.apply(null,c),xmax:Math.max.apply(null,c),ymin:Math.min.apply(null,p),ymax:Math.max.apply(null,p),spatialReference:s})}function or(i){const[t,r,e,n,o,a]=i,s=e*a-o*n,u=o*n-e*a;return[(o*r-t*a)/s,(e*r-t*n)/u,a/s,n/u,-o/s,-e/u]}let D=class extends Ut{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(i,t){const{coeffX:r,coeffY:e}=t;if(!r?.length||!e?.length||r.length!==e.length)return null;const n=[];for(let o=0;o<r.length;o++)n.push(r[o]),n.push(e[o]);return n}writeForwardCoefficients(i,t,r){const e=[],n=[];for(let o=0;o<i?.length;o++)o%2==0?e.push(i[o]):n.push(i[o]);t.coeffX=e,t.coeffY=n}get inverseCoefficients(){let i=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!i&&t&&this.polynomialOrder<2&&(i=or(t)),i}set inverseCoefficients(i){this._set("inverseCoefficients",i)}readInverseCoefficients(i,t){const{inverseCoeffX:r,inverseCoeffY:e}=t;if(!r?.length||!e?.length||r.length!==e.length)return null;const n=[];for(let o=0;o<r.length;o++)n.push(r[o]),n.push(e[o]);return n}writeInverseCoefficients(i,t,r){const e=[],n=[];for(let o=0;o<i?.length;o++)o%2==0?e.push(i[o]):n.push(i[o]);t.inverseCoeffX=e,t.inverseCoeffY=n}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(i){if(i.type==="point"){const t=Et(this.forwardCoefficients,i,this.polynomialOrder);return new Jt({x:t.x,y:t.y,spatialReference:i.spatialReference})}return de(this.forwardCoefficients,i,this.polynomialOrder)}inverseTransform(i){if(i.type==="point"){const t=Et(this.inverseCoefficients,i,this.polynomialOrder);return new Jt({x:t.x,y:t.y,spatialReference:i.spatialReference})}return de(this.inverseCoefficients,i,this.polynomialOrder)}};l([m({json:{write:!0}})],D.prototype,"polynomialOrder",void 0),l([m()],D.prototype,"forwardCoefficients",void 0),l([gt("forwardCoefficients",["coeffX","coeffY"])],D.prototype,"readForwardCoefficients",null),l([ut("forwardCoefficients")],D.prototype,"writeForwardCoefficients",null),l([m({json:{write:!0}})],D.prototype,"inverseCoefficients",null),l([gt("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],D.prototype,"readInverseCoefficients",null),l([ut("inverseCoefficients")],D.prototype,"writeInverseCoefficients",null),l([m()],D.prototype,"affectsPixelSize",null),l([lt({PolynomialXform:"polynomial"})],D.prototype,"type",void 0),D=l([w("esri.layers.support.rasterTransforms.PolynomialTransform")],D);const ir=D,ke={GCSShiftXform:nr,IdentityXform:rr,PolynomialXform:ir},ar=Object.keys(ke);function Nr(i){const t=i?.type;return!i||ar.includes(t)}function Rr(i){if(!i?.type)return null;const r=ke[i?.type];if(r){const e=new r;return e.read(i),e}return null}export{Ir as C,nr as c,Nr as f,Yn as h,Rr as i,ir as m};
