import{bt as i,bu as r,a$ as v,eO as I,bv as d,bw as x,bD as b,dG as L,jf as N,T as R,e7 as M,a8 as A,I as J,U as j,eq as D,ec as V,ed as E,ee as U,ef as K,er as P,es as G,c9 as q,eL as z,p as $,B as k,s as c,G as S,eg as B,ex as C,ep as F}from"./main-DCIX61zy.js";import{j as h}from"./persistable-DhwFrfNW.js";import{R as H,V as w}from"./SceneService-DQjtIpoK.js";import{p as Z,a as Q,y as W,m as X}from"./I3SLayerDefinitions-CS63UqqU.js";import{$ as T,Z as Y,w as ee}from"./elevationInfoUtils-Cubp_PC_.js";var m;let n=m=class extends x{constructor(e){super(e),this.geometry=null,this.type="clip"}writeGeometry(e,t,o,a){if(a.layer?.spatialReference&&!a.layer.spatialReference.equals(this.geometry.spatialReference)){if(!b(e.spatialReference,a.layer.spatialReference))return void(a?.messages&&a.messages.push(new L("scenemodification:unsupported","Scene modifications with incompatible spatial references are not supported",{modification:this,spatialReference:a.layer.spatialReference,context:a})));const l=new v;N(e,l,a.layer.spatialReference),t[o]=l.toJSON(a)}else t[o]=e.toJSON(a);delete t[o].spatialReference}clone(){return new m({geometry:R(this.geometry),type:this.type})}};i([r({type:v}),h()],n.prototype,"geometry",void 0),i([I(["web-scene","portal-item"],"geometry")],n.prototype,"writeGeometry",null),i([r({type:["clip","mask","replace"],nonNullable:!0}),h()],n.prototype,"type",void 0),n=m=i([d("esri.layers.support.SceneModification")],n);const f=n;var p;let y=p=class extends M(A.ofType(f)){constructor(e){super(e),this.url=null}clone(){return new p({url:this.url,items:this.items.map(e=>e.clone())})}toJSON(e){return this.toArray().map(t=>t.toJSON(e)).filter(t=>!!t.geometry)}static fromJSON(e,t){const o=new p;for(const a of e)o.add(f.fromJSON(a,t));return o}static async fromUrl(e,t,o){const a={url:J(e),origin:"service"},l=await j(e,{responseType:"json",signal:o?.signal}),O=t.toJSON(),u=[];for(const g of l.data)u.push(f.fromJSON({...g,geometry:{...g.geometry,spatialReference:O}},a));return new p({url:e,items:u})}};i([r({type:String})],y.prototype,"url",void 0),y=p=i([d("esri.layers.support.SceneModifications")],y);const _=y;let s=class extends H(D(V(E(U(K(P(G(F)))))))){constructor(...e){super(...e),this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.path=null,this.definitionExpression=null}initialize(){this.addHandles(q(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,z))}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}readModifications(e,t,o){this._modificationsSource={url:$(e,o),context:o}}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const t=e?.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(o){k(o)}if(await this._fetchService(t),this._modificationsSource!=null){const o=await _.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",o,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,t)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}async saveAs(e,t){return this._debouncedSaveOperations(w.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(w.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new c("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new c("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new c("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}_validateElevationInfo(){const e=this.elevationInfo,t="Integrated mesh layers";T(S.getLogger(this),Y(t,"absolute-height",e)),T(S.getLogger(this),ee(t,e))}};i([r({type:String,readOnly:!0})],s.prototype,"geometryType",void 0),i([r({type:["show","hide"]})],s.prototype,"listMode",void 0),i([r({type:["IntegratedMeshLayer"]})],s.prototype,"operationalLayerType",void 0),i([r({json:{read:!1},readOnly:!0})],s.prototype,"type",void 0),i([r({type:Z,readOnly:!0})],s.prototype,"nodePages",void 0),i([r({type:[Q],readOnly:!0})],s.prototype,"materialDefinitions",void 0),i([r({type:[W],readOnly:!0})],s.prototype,"textureSetDefinitions",void 0),i([r({type:[X],readOnly:!0})],s.prototype,"geometryDefinitions",void 0),i([r({readOnly:!0})],s.prototype,"serviceUpdateTimeStamp",void 0),i([r({type:_}),h({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],s.prototype,"modifications",void 0),i([B(["web-scene","portal-item"],"modifications")],s.prototype,"readModifications",null),i([r(C)],s.prototype,"elevationInfo",null),i([r({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],s.prototype,"path",void 0),s=i([d("esri.layers.IntegratedMeshLayer")],s);const te=s;export{te as default};
