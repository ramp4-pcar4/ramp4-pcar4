{"version":3,"file":"index-Dc4yX_Cr.js","sources":["../../node_modules/@vue/compiler-core/dist/compiler-core.esm-bundler.js","../../node_modules/@vue/compiler-dom/dist/compiler-dom.esm-bundler.js","../../node_modules/vue/dist/vue.cjs.prod.js","../../node_modules/vue/index.js"],"sourcesContent":["/**\n* @vue/compiler-core v3.5.9\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\nimport { isString, NOOP, isObject, NO, extend, isSymbol, isArray, capitalize, camelize, EMPTY_OBJ, PatchFlagNames, slotFlagsText, isOn, isBuiltInDirective, isReservedProp, toHandlerKey } from '@vue/shared';\nexport { generateCodeFrame } from '@vue/shared';\n\nconst FRAGMENT = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `Fragment` : ``);\nconst TELEPORT = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `Teleport` : ``);\nconst SUSPENSE = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `Suspense` : ``);\nconst KEEP_ALIVE = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `KeepAlive` : ``);\nconst BASE_TRANSITION = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? `BaseTransition` : ``\n);\nconst OPEN_BLOCK = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `openBlock` : ``);\nconst CREATE_BLOCK = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `createBlock` : ``);\nconst CREATE_ELEMENT_BLOCK = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? `createElementBlock` : ``\n);\nconst CREATE_VNODE = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `createVNode` : ``);\nconst CREATE_ELEMENT_VNODE = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? `createElementVNode` : ``\n);\nconst CREATE_COMMENT = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? `createCommentVNode` : ``\n);\nconst CREATE_TEXT = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? `createTextVNode` : ``\n);\nconst CREATE_STATIC = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? `createStaticVNode` : ``\n);\nconst RESOLVE_COMPONENT = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? `resolveComponent` : ``\n);\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? `resolveDynamicComponent` : ``\n);\nconst RESOLVE_DIRECTIVE = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? `resolveDirective` : ``\n);\nconst RESOLVE_FILTER = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? `resolveFilter` : ``\n);\nconst WITH_DIRECTIVES = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? `withDirectives` : ``\n);\nconst RENDER_LIST = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `renderList` : ``);\nconst RENDER_SLOT = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `renderSlot` : ``);\nconst CREATE_SLOTS = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `createSlots` : ``);\nconst TO_DISPLAY_STRING = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? `toDisplayString` : ``\n);\nconst MERGE_PROPS = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `mergeProps` : ``);\nconst NORMALIZE_CLASS = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? `normalizeClass` : ``\n);\nconst NORMALIZE_STYLE = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? `normalizeStyle` : ``\n);\nconst NORMALIZE_PROPS = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? `normalizeProps` : ``\n);\nconst GUARD_REACTIVE_PROPS = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? `guardReactiveProps` : ``\n);\nconst TO_HANDLERS = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `toHandlers` : ``);\nconst CAMELIZE = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `camelize` : ``);\nconst CAPITALIZE = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `capitalize` : ``);\nconst TO_HANDLER_KEY = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? `toHandlerKey` : ``\n);\nconst SET_BLOCK_TRACKING = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? `setBlockTracking` : ``\n);\nconst PUSH_SCOPE_ID = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `pushScopeId` : ``);\nconst POP_SCOPE_ID = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `popScopeId` : ``);\nconst WITH_CTX = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `withCtx` : ``);\nconst UNREF = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `unref` : ``);\nconst IS_REF = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `isRef` : ``);\nconst WITH_MEMO = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `withMemo` : ``);\nconst IS_MEMO_SAME = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `isMemoSame` : ``);\nconst helperNameMap = {\n  [FRAGMENT]: `Fragment`,\n  [TELEPORT]: `Teleport`,\n  [SUSPENSE]: `Suspense`,\n  [KEEP_ALIVE]: `KeepAlive`,\n  [BASE_TRANSITION]: `BaseTransition`,\n  [OPEN_BLOCK]: `openBlock`,\n  [CREATE_BLOCK]: `createBlock`,\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\n  [CREATE_VNODE]: `createVNode`,\n  [CREATE_ELEMENT_VNODE]: `createElementVNode`,\n  [CREATE_COMMENT]: `createCommentVNode`,\n  [CREATE_TEXT]: `createTextVNode`,\n  [CREATE_STATIC]: `createStaticVNode`,\n  [RESOLVE_COMPONENT]: `resolveComponent`,\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\n  [RESOLVE_FILTER]: `resolveFilter`,\n  [WITH_DIRECTIVES]: `withDirectives`,\n  [RENDER_LIST]: `renderList`,\n  [RENDER_SLOT]: `renderSlot`,\n  [CREATE_SLOTS]: `createSlots`,\n  [TO_DISPLAY_STRING]: `toDisplayString`,\n  [MERGE_PROPS]: `mergeProps`,\n  [NORMALIZE_CLASS]: `normalizeClass`,\n  [NORMALIZE_STYLE]: `normalizeStyle`,\n  [NORMALIZE_PROPS]: `normalizeProps`,\n  [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\n  [TO_HANDLERS]: `toHandlers`,\n  [CAMELIZE]: `camelize`,\n  [CAPITALIZE]: `capitalize`,\n  [TO_HANDLER_KEY]: `toHandlerKey`,\n  [SET_BLOCK_TRACKING]: `setBlockTracking`,\n  [PUSH_SCOPE_ID]: `pushScopeId`,\n  [POP_SCOPE_ID]: `popScopeId`,\n  [WITH_CTX]: `withCtx`,\n  [UNREF]: `unref`,\n  [IS_REF]: `isRef`,\n  [WITH_MEMO]: `withMemo`,\n  [IS_MEMO_SAME]: `isMemoSame`\n};\nfunction registerRuntimeHelpers(helpers) {\n  Object.getOwnPropertySymbols(helpers).forEach((s) => {\n    helperNameMap[s] = helpers[s];\n  });\n}\n\nconst Namespaces = {\n  \"HTML\": 0,\n  \"0\": \"HTML\",\n  \"SVG\": 1,\n  \"1\": \"SVG\",\n  \"MATH_ML\": 2,\n  \"2\": \"MATH_ML\"\n};\nconst NodeTypes = {\n  \"ROOT\": 0,\n  \"0\": \"ROOT\",\n  \"ELEMENT\": 1,\n  \"1\": \"ELEMENT\",\n  \"TEXT\": 2,\n  \"2\": \"TEXT\",\n  \"COMMENT\": 3,\n  \"3\": \"COMMENT\",\n  \"SIMPLE_EXPRESSION\": 4,\n  \"4\": \"SIMPLE_EXPRESSION\",\n  \"INTERPOLATION\": 5,\n  \"5\": \"INTERPOLATION\",\n  \"ATTRIBUTE\": 6,\n  \"6\": \"ATTRIBUTE\",\n  \"DIRECTIVE\": 7,\n  \"7\": \"DIRECTIVE\",\n  \"COMPOUND_EXPRESSION\": 8,\n  \"8\": \"COMPOUND_EXPRESSION\",\n  \"IF\": 9,\n  \"9\": \"IF\",\n  \"IF_BRANCH\": 10,\n  \"10\": \"IF_BRANCH\",\n  \"FOR\": 11,\n  \"11\": \"FOR\",\n  \"TEXT_CALL\": 12,\n  \"12\": \"TEXT_CALL\",\n  \"VNODE_CALL\": 13,\n  \"13\": \"VNODE_CALL\",\n  \"JS_CALL_EXPRESSION\": 14,\n  \"14\": \"JS_CALL_EXPRESSION\",\n  \"JS_OBJECT_EXPRESSION\": 15,\n  \"15\": \"JS_OBJECT_EXPRESSION\",\n  \"JS_PROPERTY\": 16,\n  \"16\": \"JS_PROPERTY\",\n  \"JS_ARRAY_EXPRESSION\": 17,\n  \"17\": \"JS_ARRAY_EXPRESSION\",\n  \"JS_FUNCTION_EXPRESSION\": 18,\n  \"18\": \"JS_FUNCTION_EXPRESSION\",\n  \"JS_CONDITIONAL_EXPRESSION\": 19,\n  \"19\": \"JS_CONDITIONAL_EXPRESSION\",\n  \"JS_CACHE_EXPRESSION\": 20,\n  \"20\": \"JS_CACHE_EXPRESSION\",\n  \"JS_BLOCK_STATEMENT\": 21,\n  \"21\": \"JS_BLOCK_STATEMENT\",\n  \"JS_TEMPLATE_LITERAL\": 22,\n  \"22\": \"JS_TEMPLATE_LITERAL\",\n  \"JS_IF_STATEMENT\": 23,\n  \"23\": \"JS_IF_STATEMENT\",\n  \"JS_ASSIGNMENT_EXPRESSION\": 24,\n  \"24\": \"JS_ASSIGNMENT_EXPRESSION\",\n  \"JS_SEQUENCE_EXPRESSION\": 25,\n  \"25\": \"JS_SEQUENCE_EXPRESSION\",\n  \"JS_RETURN_STATEMENT\": 26,\n  \"26\": \"JS_RETURN_STATEMENT\"\n};\nconst ElementTypes = {\n  \"ELEMENT\": 0,\n  \"0\": \"ELEMENT\",\n  \"COMPONENT\": 1,\n  \"1\": \"COMPONENT\",\n  \"SLOT\": 2,\n  \"2\": \"SLOT\",\n  \"TEMPLATE\": 3,\n  \"3\": \"TEMPLATE\"\n};\nconst ConstantTypes = {\n  \"NOT_CONSTANT\": 0,\n  \"0\": \"NOT_CONSTANT\",\n  \"CAN_SKIP_PATCH\": 1,\n  \"1\": \"CAN_SKIP_PATCH\",\n  \"CAN_CACHE\": 2,\n  \"2\": \"CAN_CACHE\",\n  \"CAN_STRINGIFY\": 3,\n  \"3\": \"CAN_STRINGIFY\"\n};\nconst locStub = {\n  start: { line: 1, column: 1, offset: 0 },\n  end: { line: 1, column: 1, offset: 0 },\n  source: \"\"\n};\nfunction createRoot(children, source = \"\") {\n  return {\n    type: 0,\n    source,\n    children,\n    helpers: /* @__PURE__ */ new Set(),\n    components: [],\n    directives: [],\n    hoists: [],\n    imports: [],\n    cached: [],\n    temps: 0,\n    codegenNode: void 0,\n    loc: locStub\n  };\n}\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\n  if (context) {\n    if (isBlock) {\n      context.helper(OPEN_BLOCK);\n      context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\n    } else {\n      context.helper(getVNodeHelper(context.inSSR, isComponent));\n    }\n    if (directives) {\n      context.helper(WITH_DIRECTIVES);\n    }\n  }\n  return {\n    type: 13,\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent,\n    loc\n  };\n}\nfunction createArrayExpression(elements, loc = locStub) {\n  return {\n    type: 17,\n    loc,\n    elements\n  };\n}\nfunction createObjectExpression(properties, loc = locStub) {\n  return {\n    type: 15,\n    loc,\n    properties\n  };\n}\nfunction createObjectProperty(key, value) {\n  return {\n    type: 16,\n    loc: locStub,\n    key: isString(key) ? createSimpleExpression(key, true) : key,\n    value\n  };\n}\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0) {\n  return {\n    type: 4,\n    loc,\n    content,\n    isStatic,\n    constType: isStatic ? 3 : constType\n  };\n}\nfunction createInterpolation(content, loc) {\n  return {\n    type: 5,\n    loc,\n    content: isString(content) ? createSimpleExpression(content, false, loc) : content\n  };\n}\nfunction createCompoundExpression(children, loc = locStub) {\n  return {\n    type: 8,\n    loc,\n    children\n  };\n}\nfunction createCallExpression(callee, args = [], loc = locStub) {\n  return {\n    type: 14,\n    loc,\n    callee,\n    arguments: args\n  };\n}\nfunction createFunctionExpression(params, returns = void 0, newline = false, isSlot = false, loc = locStub) {\n  return {\n    type: 18,\n    params,\n    returns,\n    newline,\n    isSlot,\n    loc\n  };\n}\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\n  return {\n    type: 19,\n    test,\n    consequent,\n    alternate,\n    newline,\n    loc: locStub\n  };\n}\nfunction createCacheExpression(index, value, needPauseTracking = false) {\n  return {\n    type: 20,\n    index,\n    value,\n    needPauseTracking,\n    needArraySpread: false,\n    loc: locStub\n  };\n}\nfunction createBlockStatement(body) {\n  return {\n    type: 21,\n    body,\n    loc: locStub\n  };\n}\nfunction createTemplateLiteral(elements) {\n  return {\n    type: 22,\n    elements,\n    loc: locStub\n  };\n}\nfunction createIfStatement(test, consequent, alternate) {\n  return {\n    type: 23,\n    test,\n    consequent,\n    alternate,\n    loc: locStub\n  };\n}\nfunction createAssignmentExpression(left, right) {\n  return {\n    type: 24,\n    left,\n    right,\n    loc: locStub\n  };\n}\nfunction createSequenceExpression(expressions) {\n  return {\n    type: 25,\n    expressions,\n    loc: locStub\n  };\n}\nfunction createReturnStatement(returns) {\n  return {\n    type: 26,\n    returns,\n    loc: locStub\n  };\n}\nfunction getVNodeHelper(ssr, isComponent) {\n  return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\n}\nfunction getVNodeBlockHelper(ssr, isComponent) {\n  return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\n}\nfunction convertToBlock(node, { helper, removeHelper, inSSR }) {\n  if (!node.isBlock) {\n    node.isBlock = true;\n    removeHelper(getVNodeHelper(inSSR, node.isComponent));\n    helper(OPEN_BLOCK);\n    helper(getVNodeBlockHelper(inSSR, node.isComponent));\n  }\n}\n\nconst defaultDelimitersOpen = new Uint8Array([123, 123]);\nconst defaultDelimitersClose = new Uint8Array([125, 125]);\nfunction isTagStartChar(c) {\n  return c >= 97 && c <= 122 || c >= 65 && c <= 90;\n}\nfunction isWhitespace(c) {\n  return c === 32 || c === 10 || c === 9 || c === 12 || c === 13;\n}\nfunction isEndOfTagSection(c) {\n  return c === 47 || c === 62 || isWhitespace(c);\n}\nfunction toCharCodes(str) {\n  const ret = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    ret[i] = str.charCodeAt(i);\n  }\n  return ret;\n}\nconst Sequences = {\n  Cdata: new Uint8Array([67, 68, 65, 84, 65, 91]),\n  // CDATA[\n  CdataEnd: new Uint8Array([93, 93, 62]),\n  // ]]>\n  CommentEnd: new Uint8Array([45, 45, 62]),\n  // `-->`\n  ScriptEnd: new Uint8Array([60, 47, 115, 99, 114, 105, 112, 116]),\n  // `<\\/script`\n  StyleEnd: new Uint8Array([60, 47, 115, 116, 121, 108, 101]),\n  // `</style`\n  TitleEnd: new Uint8Array([60, 47, 116, 105, 116, 108, 101]),\n  // `</title`\n  TextareaEnd: new Uint8Array([\n    60,\n    47,\n    116,\n    101,\n    120,\n    116,\n    97,\n    114,\n    101,\n    97\n  ])\n  // `</textarea\n};\nclass Tokenizer {\n  constructor(stack, cbs) {\n    this.stack = stack;\n    this.cbs = cbs;\n    /** The current state the tokenizer is in. */\n    this.state = 1;\n    /** The read buffer. */\n    this.buffer = \"\";\n    /** The beginning of the section that is currently being read. */\n    this.sectionStart = 0;\n    /** The index within the buffer that we are currently looking at. */\n    this.index = 0;\n    /** The start of the last entity. */\n    this.entityStart = 0;\n    /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\n    this.baseState = 1;\n    /** For special parsing behavior inside of script and style tags. */\n    this.inRCDATA = false;\n    /** For disabling RCDATA tags handling */\n    this.inXML = false;\n    /** For disabling interpolation parsing in v-pre */\n    this.inVPre = false;\n    /** Record newline positions for fast line / column calculation */\n    this.newlines = [];\n    this.mode = 0;\n    this.delimiterOpen = defaultDelimitersOpen;\n    this.delimiterClose = defaultDelimitersClose;\n    this.delimiterIndex = -1;\n    this.currentSequence = void 0;\n    this.sequenceIndex = 0;\n  }\n  get inSFCRoot() {\n    return this.mode === 2 && this.stack.length === 0;\n  }\n  reset() {\n    this.state = 1;\n    this.mode = 0;\n    this.buffer = \"\";\n    this.sectionStart = 0;\n    this.index = 0;\n    this.baseState = 1;\n    this.inRCDATA = false;\n    this.currentSequence = void 0;\n    this.newlines.length = 0;\n    this.delimiterOpen = defaultDelimitersOpen;\n    this.delimiterClose = defaultDelimitersClose;\n  }\n  /**\n   * Generate Position object with line / column information using recorded\n   * newline positions. We know the index is always going to be an already\n   * processed index, so all the newlines up to this index should have been\n   * recorded.\n   */\n  getPos(index) {\n    let line = 1;\n    let column = index + 1;\n    for (let i = this.newlines.length - 1; i >= 0; i--) {\n      const newlineIndex = this.newlines[i];\n      if (index > newlineIndex) {\n        line = i + 2;\n        column = index - newlineIndex;\n        break;\n      }\n    }\n    return {\n      column,\n      line,\n      offset: index\n    };\n  }\n  peek() {\n    return this.buffer.charCodeAt(this.index + 1);\n  }\n  stateText(c) {\n    if (c === 60) {\n      if (this.index > this.sectionStart) {\n        this.cbs.ontext(this.sectionStart, this.index);\n      }\n      this.state = 5;\n      this.sectionStart = this.index;\n    } else if (!this.inVPre && c === this.delimiterOpen[0]) {\n      this.state = 2;\n      this.delimiterIndex = 0;\n      this.stateInterpolationOpen(c);\n    }\n  }\n  stateInterpolationOpen(c) {\n    if (c === this.delimiterOpen[this.delimiterIndex]) {\n      if (this.delimiterIndex === this.delimiterOpen.length - 1) {\n        const start = this.index + 1 - this.delimiterOpen.length;\n        if (start > this.sectionStart) {\n          this.cbs.ontext(this.sectionStart, start);\n        }\n        this.state = 3;\n        this.sectionStart = start;\n      } else {\n        this.delimiterIndex++;\n      }\n    } else if (this.inRCDATA) {\n      this.state = 32;\n      this.stateInRCDATA(c);\n    } else {\n      this.state = 1;\n      this.stateText(c);\n    }\n  }\n  stateInterpolation(c) {\n    if (c === this.delimiterClose[0]) {\n      this.state = 4;\n      this.delimiterIndex = 0;\n      this.stateInterpolationClose(c);\n    }\n  }\n  stateInterpolationClose(c) {\n    if (c === this.delimiterClose[this.delimiterIndex]) {\n      if (this.delimiterIndex === this.delimiterClose.length - 1) {\n        this.cbs.oninterpolation(this.sectionStart, this.index + 1);\n        if (this.inRCDATA) {\n          this.state = 32;\n        } else {\n          this.state = 1;\n        }\n        this.sectionStart = this.index + 1;\n      } else {\n        this.delimiterIndex++;\n      }\n    } else {\n      this.state = 3;\n      this.stateInterpolation(c);\n    }\n  }\n  stateSpecialStartSequence(c) {\n    const isEnd = this.sequenceIndex === this.currentSequence.length;\n    const isMatch = isEnd ? (\n      // If we are at the end of the sequence, make sure the tag name has ended\n      isEndOfTagSection(c)\n    ) : (\n      // Otherwise, do a case-insensitive comparison\n      (c | 32) === this.currentSequence[this.sequenceIndex]\n    );\n    if (!isMatch) {\n      this.inRCDATA = false;\n    } else if (!isEnd) {\n      this.sequenceIndex++;\n      return;\n    }\n    this.sequenceIndex = 0;\n    this.state = 6;\n    this.stateInTagName(c);\n  }\n  /** Look for an end tag. For <title> and <textarea>, also decode entities. */\n  stateInRCDATA(c) {\n    if (this.sequenceIndex === this.currentSequence.length) {\n      if (c === 62 || isWhitespace(c)) {\n        const endOfText = this.index - this.currentSequence.length;\n        if (this.sectionStart < endOfText) {\n          const actualIndex = this.index;\n          this.index = endOfText;\n          this.cbs.ontext(this.sectionStart, endOfText);\n          this.index = actualIndex;\n        }\n        this.sectionStart = endOfText + 2;\n        this.stateInClosingTagName(c);\n        this.inRCDATA = false;\n        return;\n      }\n      this.sequenceIndex = 0;\n    }\n    if ((c | 32) === this.currentSequence[this.sequenceIndex]) {\n      this.sequenceIndex += 1;\n    } else if (this.sequenceIndex === 0) {\n      if (this.currentSequence === Sequences.TitleEnd || this.currentSequence === Sequences.TextareaEnd && !this.inSFCRoot) {\n        if (!this.inVPre && c === this.delimiterOpen[0]) {\n          this.state = 2;\n          this.delimiterIndex = 0;\n          this.stateInterpolationOpen(c);\n        }\n      } else if (this.fastForwardTo(60)) {\n        this.sequenceIndex = 1;\n      }\n    } else {\n      this.sequenceIndex = Number(c === 60);\n    }\n  }\n  stateCDATASequence(c) {\n    if (c === Sequences.Cdata[this.sequenceIndex]) {\n      if (++this.sequenceIndex === Sequences.Cdata.length) {\n        this.state = 28;\n        this.currentSequence = Sequences.CdataEnd;\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n      }\n    } else {\n      this.sequenceIndex = 0;\n      this.state = 23;\n      this.stateInDeclaration(c);\n    }\n  }\n  /**\n   * When we wait for one specific character, we can speed things up\n   * by skipping through the buffer until we find it.\n   *\n   * @returns Whether the character was found.\n   */\n  fastForwardTo(c) {\n    while (++this.index < this.buffer.length) {\n      const cc = this.buffer.charCodeAt(this.index);\n      if (cc === 10) {\n        this.newlines.push(this.index);\n      }\n      if (cc === c) {\n        return true;\n      }\n    }\n    this.index = this.buffer.length - 1;\n    return false;\n  }\n  /**\n   * Comments and CDATA end with `-->` and `]]>`.\n   *\n   * Their common qualities are:\n   * - Their end sequences have a distinct character they start with.\n   * - That character is then repeated, so we have to check multiple repeats.\n   * - All characters but the start character of the sequence can be skipped.\n   */\n  stateInCommentLike(c) {\n    if (c === this.currentSequence[this.sequenceIndex]) {\n      if (++this.sequenceIndex === this.currentSequence.length) {\n        if (this.currentSequence === Sequences.CdataEnd) {\n          this.cbs.oncdata(this.sectionStart, this.index - 2);\n        } else {\n          this.cbs.oncomment(this.sectionStart, this.index - 2);\n        }\n        this.sequenceIndex = 0;\n        this.sectionStart = this.index + 1;\n        this.state = 1;\n      }\n    } else if (this.sequenceIndex === 0) {\n      if (this.fastForwardTo(this.currentSequence[0])) {\n        this.sequenceIndex = 1;\n      }\n    } else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n      this.sequenceIndex = 0;\n    }\n  }\n  startSpecial(sequence, offset) {\n    this.enterRCDATA(sequence, offset);\n    this.state = 31;\n  }\n  enterRCDATA(sequence, offset) {\n    this.inRCDATA = true;\n    this.currentSequence = sequence;\n    this.sequenceIndex = offset;\n  }\n  stateBeforeTagName(c) {\n    if (c === 33) {\n      this.state = 22;\n      this.sectionStart = this.index + 1;\n    } else if (c === 63) {\n      this.state = 24;\n      this.sectionStart = this.index + 1;\n    } else if (isTagStartChar(c)) {\n      this.sectionStart = this.index;\n      if (this.mode === 0) {\n        this.state = 6;\n      } else if (this.inSFCRoot) {\n        this.state = 34;\n      } else if (!this.inXML) {\n        if (c === 116) {\n          this.state = 30;\n        } else {\n          this.state = c === 115 ? 29 : 6;\n        }\n      } else {\n        this.state = 6;\n      }\n    } else if (c === 47) {\n      this.state = 8;\n    } else {\n      this.state = 1;\n      this.stateText(c);\n    }\n  }\n  stateInTagName(c) {\n    if (isEndOfTagSection(c)) {\n      this.handleTagName(c);\n    }\n  }\n  stateInSFCRootTagName(c) {\n    if (isEndOfTagSection(c)) {\n      const tag = this.buffer.slice(this.sectionStart, this.index);\n      if (tag !== \"template\") {\n        this.enterRCDATA(toCharCodes(`</` + tag), 0);\n      }\n      this.handleTagName(c);\n    }\n  }\n  handleTagName(c) {\n    this.cbs.onopentagname(this.sectionStart, this.index);\n    this.sectionStart = -1;\n    this.state = 11;\n    this.stateBeforeAttrName(c);\n  }\n  stateBeforeClosingTagName(c) {\n    if (isWhitespace(c)) ; else if (c === 62) {\n      if (!!(process.env.NODE_ENV !== \"production\") || false) {\n        this.cbs.onerr(14, this.index);\n      }\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = isTagStartChar(c) ? 9 : 27;\n      this.sectionStart = this.index;\n    }\n  }\n  stateInClosingTagName(c) {\n    if (c === 62 || isWhitespace(c)) {\n      this.cbs.onclosetag(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.state = 10;\n      this.stateAfterClosingTagName(c);\n    }\n  }\n  stateAfterClosingTagName(c) {\n    if (c === 62) {\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeAttrName(c) {\n    if (c === 62) {\n      this.cbs.onopentagend(this.index);\n      if (this.inRCDATA) {\n        this.state = 32;\n      } else {\n        this.state = 1;\n      }\n      this.sectionStart = this.index + 1;\n    } else if (c === 47) {\n      this.state = 7;\n      if ((!!(process.env.NODE_ENV !== \"production\") || false) && this.peek() !== 62) {\n        this.cbs.onerr(22, this.index);\n      }\n    } else if (c === 60 && this.peek() === 47) {\n      this.cbs.onopentagend(this.index);\n      this.state = 5;\n      this.sectionStart = this.index;\n    } else if (!isWhitespace(c)) {\n      if ((!!(process.env.NODE_ENV !== \"production\") || false) && c === 61) {\n        this.cbs.onerr(\n          19,\n          this.index\n        );\n      }\n      this.handleAttrStart(c);\n    }\n  }\n  handleAttrStart(c) {\n    if (c === 118 && this.peek() === 45) {\n      this.state = 13;\n      this.sectionStart = this.index;\n    } else if (c === 46 || c === 58 || c === 64 || c === 35) {\n      this.cbs.ondirname(this.index, this.index + 1);\n      this.state = 14;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = 12;\n      this.sectionStart = this.index;\n    }\n  }\n  stateInSelfClosingTag(c) {\n    if (c === 62) {\n      this.cbs.onselfclosingtag(this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n      this.inRCDATA = false;\n    } else if (!isWhitespace(c)) {\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    }\n  }\n  stateInAttrName(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.onattribname(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if ((!!(process.env.NODE_ENV !== \"production\") || false) && (c === 34 || c === 39 || c === 60)) {\n      this.cbs.onerr(\n        17,\n        this.index\n      );\n    }\n  }\n  stateInDirName(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 58) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.state = 14;\n      this.sectionStart = this.index + 1;\n    } else if (c === 46) {\n      this.cbs.ondirname(this.sectionStart, this.index);\n      this.state = 16;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInDirArg(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirarg(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 91) {\n      this.state = 15;\n    } else if (c === 46) {\n      this.cbs.ondirarg(this.sectionStart, this.index);\n      this.state = 16;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInDynamicDirArg(c) {\n    if (c === 93) {\n      this.state = 14;\n    } else if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirarg(this.sectionStart, this.index + 1);\n      this.handleAttrNameEnd(c);\n      if (!!(process.env.NODE_ENV !== \"production\") || false) {\n        this.cbs.onerr(\n          27,\n          this.index\n        );\n      }\n    }\n  }\n  stateInDirModifier(c) {\n    if (c === 61 || isEndOfTagSection(c)) {\n      this.cbs.ondirmodifier(this.sectionStart, this.index);\n      this.handleAttrNameEnd(c);\n    } else if (c === 46) {\n      this.cbs.ondirmodifier(this.sectionStart, this.index);\n      this.sectionStart = this.index + 1;\n    }\n  }\n  handleAttrNameEnd(c) {\n    this.sectionStart = this.index;\n    this.state = 17;\n    this.cbs.onattribnameend(this.index);\n    this.stateAfterAttrName(c);\n  }\n  stateAfterAttrName(c) {\n    if (c === 61) {\n      this.state = 18;\n    } else if (c === 47 || c === 62) {\n      this.cbs.onattribend(0, this.sectionStart);\n      this.sectionStart = -1;\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    } else if (!isWhitespace(c)) {\n      this.cbs.onattribend(0, this.sectionStart);\n      this.handleAttrStart(c);\n    }\n  }\n  stateBeforeAttrValue(c) {\n    if (c === 34) {\n      this.state = 19;\n      this.sectionStart = this.index + 1;\n    } else if (c === 39) {\n      this.state = 20;\n      this.sectionStart = this.index + 1;\n    } else if (!isWhitespace(c)) {\n      this.sectionStart = this.index;\n      this.state = 21;\n      this.stateInAttrValueNoQuotes(c);\n    }\n  }\n  handleInAttrValue(c, quote) {\n    if (c === quote || this.fastForwardTo(quote)) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(\n        quote === 34 ? 3 : 2,\n        this.index + 1\n      );\n      this.state = 11;\n    }\n  }\n  stateInAttrValueDoubleQuotes(c) {\n    this.handleInAttrValue(c, 34);\n  }\n  stateInAttrValueSingleQuotes(c) {\n    this.handleInAttrValue(c, 39);\n  }\n  stateInAttrValueNoQuotes(c) {\n    if (isWhitespace(c) || c === 62) {\n      this.cbs.onattribdata(this.sectionStart, this.index);\n      this.sectionStart = -1;\n      this.cbs.onattribend(1, this.index);\n      this.state = 11;\n      this.stateBeforeAttrName(c);\n    } else if ((!!(process.env.NODE_ENV !== \"production\") || false) && c === 34 || c === 39 || c === 60 || c === 61 || c === 96) {\n      this.cbs.onerr(\n        18,\n        this.index\n      );\n    } else ;\n  }\n  stateBeforeDeclaration(c) {\n    if (c === 91) {\n      this.state = 26;\n      this.sequenceIndex = 0;\n    } else {\n      this.state = c === 45 ? 25 : 23;\n    }\n  }\n  stateInDeclaration(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateInProcessingInstruction(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeComment(c) {\n    if (c === 45) {\n      this.state = 28;\n      this.currentSequence = Sequences.CommentEnd;\n      this.sequenceIndex = 2;\n      this.sectionStart = this.index + 1;\n    } else {\n      this.state = 23;\n    }\n  }\n  stateInSpecialComment(c) {\n    if (c === 62 || this.fastForwardTo(62)) {\n      this.cbs.oncomment(this.sectionStart, this.index);\n      this.state = 1;\n      this.sectionStart = this.index + 1;\n    }\n  }\n  stateBeforeSpecialS(c) {\n    if (c === Sequences.ScriptEnd[3]) {\n      this.startSpecial(Sequences.ScriptEnd, 4);\n    } else if (c === Sequences.StyleEnd[3]) {\n      this.startSpecial(Sequences.StyleEnd, 4);\n    } else {\n      this.state = 6;\n      this.stateInTagName(c);\n    }\n  }\n  stateBeforeSpecialT(c) {\n    if (c === Sequences.TitleEnd[3]) {\n      this.startSpecial(Sequences.TitleEnd, 4);\n    } else if (c === Sequences.TextareaEnd[3]) {\n      this.startSpecial(Sequences.TextareaEnd, 4);\n    } else {\n      this.state = 6;\n      this.stateInTagName(c);\n    }\n  }\n  startEntity() {\n  }\n  stateInEntity() {\n  }\n  /**\n   * Iterates through the buffer, calling the function corresponding to the current state.\n   *\n   * States that are more likely to be hit are higher up, as a performance improvement.\n   */\n  parse(input) {\n    this.buffer = input;\n    while (this.index < this.buffer.length) {\n      const c = this.buffer.charCodeAt(this.index);\n      if (c === 10) {\n        this.newlines.push(this.index);\n      }\n      switch (this.state) {\n        case 1: {\n          this.stateText(c);\n          break;\n        }\n        case 2: {\n          this.stateInterpolationOpen(c);\n          break;\n        }\n        case 3: {\n          this.stateInterpolation(c);\n          break;\n        }\n        case 4: {\n          this.stateInterpolationClose(c);\n          break;\n        }\n        case 31: {\n          this.stateSpecialStartSequence(c);\n          break;\n        }\n        case 32: {\n          this.stateInRCDATA(c);\n          break;\n        }\n        case 26: {\n          this.stateCDATASequence(c);\n          break;\n        }\n        case 19: {\n          this.stateInAttrValueDoubleQuotes(c);\n          break;\n        }\n        case 12: {\n          this.stateInAttrName(c);\n          break;\n        }\n        case 13: {\n          this.stateInDirName(c);\n          break;\n        }\n        case 14: {\n          this.stateInDirArg(c);\n          break;\n        }\n        case 15: {\n          this.stateInDynamicDirArg(c);\n          break;\n        }\n        case 16: {\n          this.stateInDirModifier(c);\n          break;\n        }\n        case 28: {\n          this.stateInCommentLike(c);\n          break;\n        }\n        case 27: {\n          this.stateInSpecialComment(c);\n          break;\n        }\n        case 11: {\n          this.stateBeforeAttrName(c);\n          break;\n        }\n        case 6: {\n          this.stateInTagName(c);\n          break;\n        }\n        case 34: {\n          this.stateInSFCRootTagName(c);\n          break;\n        }\n        case 9: {\n          this.stateInClosingTagName(c);\n          break;\n        }\n        case 5: {\n          this.stateBeforeTagName(c);\n          break;\n        }\n        case 17: {\n          this.stateAfterAttrName(c);\n          break;\n        }\n        case 20: {\n          this.stateInAttrValueSingleQuotes(c);\n          break;\n        }\n        case 18: {\n          this.stateBeforeAttrValue(c);\n          break;\n        }\n        case 8: {\n          this.stateBeforeClosingTagName(c);\n          break;\n        }\n        case 10: {\n          this.stateAfterClosingTagName(c);\n          break;\n        }\n        case 29: {\n          this.stateBeforeSpecialS(c);\n          break;\n        }\n        case 30: {\n          this.stateBeforeSpecialT(c);\n          break;\n        }\n        case 21: {\n          this.stateInAttrValueNoQuotes(c);\n          break;\n        }\n        case 7: {\n          this.stateInSelfClosingTag(c);\n          break;\n        }\n        case 23: {\n          this.stateInDeclaration(c);\n          break;\n        }\n        case 22: {\n          this.stateBeforeDeclaration(c);\n          break;\n        }\n        case 25: {\n          this.stateBeforeComment(c);\n          break;\n        }\n        case 24: {\n          this.stateInProcessingInstruction(c);\n          break;\n        }\n        case 33: {\n          this.stateInEntity();\n          break;\n        }\n      }\n      this.index++;\n    }\n    this.cleanup();\n    this.finish();\n  }\n  /**\n   * Remove data that has already been consumed from the buffer.\n   */\n  cleanup() {\n    if (this.sectionStart !== this.index) {\n      if (this.state === 1 || this.state === 32 && this.sequenceIndex === 0) {\n        this.cbs.ontext(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      } else if (this.state === 19 || this.state === 20 || this.state === 21) {\n        this.cbs.onattribdata(this.sectionStart, this.index);\n        this.sectionStart = this.index;\n      }\n    }\n  }\n  finish() {\n    this.handleTrailingData();\n    this.cbs.onend();\n  }\n  /** Handle any trailing data. */\n  handleTrailingData() {\n    const endIndex = this.buffer.length;\n    if (this.sectionStart >= endIndex) {\n      return;\n    }\n    if (this.state === 28) {\n      if (this.currentSequence === Sequences.CdataEnd) {\n        this.cbs.oncdata(this.sectionStart, endIndex);\n      } else {\n        this.cbs.oncomment(this.sectionStart, endIndex);\n      }\n    } else if (this.state === 6 || this.state === 11 || this.state === 18 || this.state === 17 || this.state === 12 || this.state === 13 || this.state === 14 || this.state === 15 || this.state === 16 || this.state === 20 || this.state === 19 || this.state === 21 || this.state === 9) ; else {\n      this.cbs.ontext(this.sectionStart, endIndex);\n    }\n  }\n  emitCodePoint(cp, consumed) {\n  }\n}\n\nconst CompilerDeprecationTypes = {\n  \"COMPILER_IS_ON_ELEMENT\": \"COMPILER_IS_ON_ELEMENT\",\n  \"COMPILER_V_BIND_SYNC\": \"COMPILER_V_BIND_SYNC\",\n  \"COMPILER_V_BIND_OBJECT_ORDER\": \"COMPILER_V_BIND_OBJECT_ORDER\",\n  \"COMPILER_V_ON_NATIVE\": \"COMPILER_V_ON_NATIVE\",\n  \"COMPILER_V_IF_V_FOR_PRECEDENCE\": \"COMPILER_V_IF_V_FOR_PRECEDENCE\",\n  \"COMPILER_NATIVE_TEMPLATE\": \"COMPILER_NATIVE_TEMPLATE\",\n  \"COMPILER_INLINE_TEMPLATE\": \"COMPILER_INLINE_TEMPLATE\",\n  \"COMPILER_FILTERS\": \"COMPILER_FILTERS\"\n};\nconst deprecationData = {\n  [\"COMPILER_IS_ON_ELEMENT\"]: {\n    message: `Platform-native elements with \"is\" prop will no longer be treated as components in Vue 3 unless the \"is\" value is explicitly prefixed with \"vue:\".`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\n  },\n  [\"COMPILER_V_BIND_SYNC\"]: {\n    message: (key) => `.sync modifier for v-bind has been removed. Use v-model with argument instead. \\`v-bind:${key}.sync\\` should be changed to \\`v-model:${key}\\`.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\n  },\n  [\"COMPILER_V_BIND_OBJECT_ORDER\"]: {\n    message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript object spread: it will now overwrite an existing non-mergeable attribute that appears before v-bind in the case of conflict. To retain 2.x behavior, move v-bind to make it the first attribute. You can also suppress this warning if the usage is intended.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\n  },\n  [\"COMPILER_V_ON_NATIVE\"]: {\n    message: `.native modifier for v-on has been removed as is no longer necessary.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\n  },\n  [\"COMPILER_V_IF_V_FOR_PRECEDENCE\"]: {\n    message: `v-if / v-for precedence when used on the same element has changed in Vue 3: v-if now takes higher precedence and will no longer have access to v-for scope variables. It is best to avoid the ambiguity with <template> tags or use a computed property that filters v-for data source.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\n  },\n  [\"COMPILER_NATIVE_TEMPLATE\"]: {\n    message: `<template> with no special directives will render as a native template element instead of its inner content in Vue 3.`\n  },\n  [\"COMPILER_INLINE_TEMPLATE\"]: {\n    message: `\"inline-template\" has been removed in Vue 3.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\n  },\n  [\"COMPILER_FILTERS\"]: {\n    message: `filters have been removed in Vue 3. The \"|\" symbol will be treated as native JavaScript bitwise OR operator. Use method calls or computed properties instead.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\n  }\n};\nfunction getCompatValue(key, { compatConfig }) {\n  const value = compatConfig && compatConfig[key];\n  if (key === \"MODE\") {\n    return value || 3;\n  } else {\n    return value;\n  }\n}\nfunction isCompatEnabled(key, context) {\n  const mode = getCompatValue(\"MODE\", context);\n  const value = getCompatValue(key, context);\n  return mode === 3 ? value === true : value !== false;\n}\nfunction checkCompatEnabled(key, context, loc, ...args) {\n  const enabled = isCompatEnabled(key, context);\n  if (!!(process.env.NODE_ENV !== \"production\") && enabled) {\n    warnDeprecation(key, context, loc, ...args);\n  }\n  return enabled;\n}\nfunction warnDeprecation(key, context, loc, ...args) {\n  const val = getCompatValue(key, context);\n  if (val === \"suppress-warning\") {\n    return;\n  }\n  const { message, link } = deprecationData[key];\n  const msg = `(deprecation ${key}) ${typeof message === \"function\" ? message(...args) : message}${link ? `\n  Details: ${link}` : ``}`;\n  const err = new SyntaxError(msg);\n  err.code = key;\n  if (loc) err.loc = loc;\n  context.onWarn(err);\n}\n\nfunction defaultOnError(error) {\n  throw error;\n}\nfunction defaultOnWarn(msg) {\n  !!(process.env.NODE_ENV !== \"production\") && console.warn(`[Vue warn] ${msg.message}`);\n}\nfunction createCompilerError(code, loc, messages, additionalMessage) {\n  const msg = !!(process.env.NODE_ENV !== \"production\") || false ? (messages || errorMessages)[code] + (additionalMessage || ``) : `https://vuejs.org/error-reference/#compiler-${code}`;\n  const error = new SyntaxError(String(msg));\n  error.code = code;\n  error.loc = loc;\n  return error;\n}\nconst ErrorCodes = {\n  \"ABRUPT_CLOSING_OF_EMPTY_COMMENT\": 0,\n  \"0\": \"ABRUPT_CLOSING_OF_EMPTY_COMMENT\",\n  \"CDATA_IN_HTML_CONTENT\": 1,\n  \"1\": \"CDATA_IN_HTML_CONTENT\",\n  \"DUPLICATE_ATTRIBUTE\": 2,\n  \"2\": \"DUPLICATE_ATTRIBUTE\",\n  \"END_TAG_WITH_ATTRIBUTES\": 3,\n  \"3\": \"END_TAG_WITH_ATTRIBUTES\",\n  \"END_TAG_WITH_TRAILING_SOLIDUS\": 4,\n  \"4\": \"END_TAG_WITH_TRAILING_SOLIDUS\",\n  \"EOF_BEFORE_TAG_NAME\": 5,\n  \"5\": \"EOF_BEFORE_TAG_NAME\",\n  \"EOF_IN_CDATA\": 6,\n  \"6\": \"EOF_IN_CDATA\",\n  \"EOF_IN_COMMENT\": 7,\n  \"7\": \"EOF_IN_COMMENT\",\n  \"EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT\": 8,\n  \"8\": \"EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT\",\n  \"EOF_IN_TAG\": 9,\n  \"9\": \"EOF_IN_TAG\",\n  \"INCORRECTLY_CLOSED_COMMENT\": 10,\n  \"10\": \"INCORRECTLY_CLOSED_COMMENT\",\n  \"INCORRECTLY_OPENED_COMMENT\": 11,\n  \"11\": \"INCORRECTLY_OPENED_COMMENT\",\n  \"INVALID_FIRST_CHARACTER_OF_TAG_NAME\": 12,\n  \"12\": \"INVALID_FIRST_CHARACTER_OF_TAG_NAME\",\n  \"MISSING_ATTRIBUTE_VALUE\": 13,\n  \"13\": \"MISSING_ATTRIBUTE_VALUE\",\n  \"MISSING_END_TAG_NAME\": 14,\n  \"14\": \"MISSING_END_TAG_NAME\",\n  \"MISSING_WHITESPACE_BETWEEN_ATTRIBUTES\": 15,\n  \"15\": \"MISSING_WHITESPACE_BETWEEN_ATTRIBUTES\",\n  \"NESTED_COMMENT\": 16,\n  \"16\": \"NESTED_COMMENT\",\n  \"UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME\": 17,\n  \"17\": \"UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME\",\n  \"UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE\": 18,\n  \"18\": \"UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE\",\n  \"UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME\": 19,\n  \"19\": \"UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME\",\n  \"UNEXPECTED_NULL_CHARACTER\": 20,\n  \"20\": \"UNEXPECTED_NULL_CHARACTER\",\n  \"UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME\": 21,\n  \"21\": \"UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME\",\n  \"UNEXPECTED_SOLIDUS_IN_TAG\": 22,\n  \"22\": \"UNEXPECTED_SOLIDUS_IN_TAG\",\n  \"X_INVALID_END_TAG\": 23,\n  \"23\": \"X_INVALID_END_TAG\",\n  \"X_MISSING_END_TAG\": 24,\n  \"24\": \"X_MISSING_END_TAG\",\n  \"X_MISSING_INTERPOLATION_END\": 25,\n  \"25\": \"X_MISSING_INTERPOLATION_END\",\n  \"X_MISSING_DIRECTIVE_NAME\": 26,\n  \"26\": \"X_MISSING_DIRECTIVE_NAME\",\n  \"X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\": 27,\n  \"27\": \"X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END\",\n  \"X_V_IF_NO_EXPRESSION\": 28,\n  \"28\": \"X_V_IF_NO_EXPRESSION\",\n  \"X_V_IF_SAME_KEY\": 29,\n  \"29\": \"X_V_IF_SAME_KEY\",\n  \"X_V_ELSE_NO_ADJACENT_IF\": 30,\n  \"30\": \"X_V_ELSE_NO_ADJACENT_IF\",\n  \"X_V_FOR_NO_EXPRESSION\": 31,\n  \"31\": \"X_V_FOR_NO_EXPRESSION\",\n  \"X_V_FOR_MALFORMED_EXPRESSION\": 32,\n  \"32\": \"X_V_FOR_MALFORMED_EXPRESSION\",\n  \"X_V_FOR_TEMPLATE_KEY_PLACEMENT\": 33,\n  \"33\": \"X_V_FOR_TEMPLATE_KEY_PLACEMENT\",\n  \"X_V_BIND_NO_EXPRESSION\": 34,\n  \"34\": \"X_V_BIND_NO_EXPRESSION\",\n  \"X_V_ON_NO_EXPRESSION\": 35,\n  \"35\": \"X_V_ON_NO_EXPRESSION\",\n  \"X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET\": 36,\n  \"36\": \"X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET\",\n  \"X_V_SLOT_MIXED_SLOT_USAGE\": 37,\n  \"37\": \"X_V_SLOT_MIXED_SLOT_USAGE\",\n  \"X_V_SLOT_DUPLICATE_SLOT_NAMES\": 38,\n  \"38\": \"X_V_SLOT_DUPLICATE_SLOT_NAMES\",\n  \"X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN\": 39,\n  \"39\": \"X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN\",\n  \"X_V_SLOT_MISPLACED\": 40,\n  \"40\": \"X_V_SLOT_MISPLACED\",\n  \"X_V_MODEL_NO_EXPRESSION\": 41,\n  \"41\": \"X_V_MODEL_NO_EXPRESSION\",\n  \"X_V_MODEL_MALFORMED_EXPRESSION\": 42,\n  \"42\": \"X_V_MODEL_MALFORMED_EXPRESSION\",\n  \"X_V_MODEL_ON_SCOPE_VARIABLE\": 43,\n  \"43\": \"X_V_MODEL_ON_SCOPE_VARIABLE\",\n  \"X_V_MODEL_ON_PROPS\": 44,\n  \"44\": \"X_V_MODEL_ON_PROPS\",\n  \"X_INVALID_EXPRESSION\": 45,\n  \"45\": \"X_INVALID_EXPRESSION\",\n  \"X_KEEP_ALIVE_INVALID_CHILDREN\": 46,\n  \"46\": \"X_KEEP_ALIVE_INVALID_CHILDREN\",\n  \"X_PREFIX_ID_NOT_SUPPORTED\": 47,\n  \"47\": \"X_PREFIX_ID_NOT_SUPPORTED\",\n  \"X_MODULE_MODE_NOT_SUPPORTED\": 48,\n  \"48\": \"X_MODULE_MODE_NOT_SUPPORTED\",\n  \"X_CACHE_HANDLER_NOT_SUPPORTED\": 49,\n  \"49\": \"X_CACHE_HANDLER_NOT_SUPPORTED\",\n  \"X_SCOPE_ID_NOT_SUPPORTED\": 50,\n  \"50\": \"X_SCOPE_ID_NOT_SUPPORTED\",\n  \"X_VNODE_HOOKS\": 51,\n  \"51\": \"X_VNODE_HOOKS\",\n  \"X_V_BIND_INVALID_SAME_NAME_ARGUMENT\": 52,\n  \"52\": \"X_V_BIND_INVALID_SAME_NAME_ARGUMENT\",\n  \"__EXTEND_POINT__\": 53,\n  \"53\": \"__EXTEND_POINT__\"\n};\nconst errorMessages = {\n  // parse errors\n  [0]: \"Illegal comment.\",\n  [1]: \"CDATA section is allowed only in XML context.\",\n  [2]: \"Duplicate attribute.\",\n  [3]: \"End tag cannot have attributes.\",\n  [4]: \"Illegal '/' in tags.\",\n  [5]: \"Unexpected EOF in tag.\",\n  [6]: \"Unexpected EOF in CDATA section.\",\n  [7]: \"Unexpected EOF in comment.\",\n  [8]: \"Unexpected EOF in script.\",\n  [9]: \"Unexpected EOF in tag.\",\n  [10]: \"Incorrectly closed comment.\",\n  [11]: \"Incorrectly opened comment.\",\n  [12]: \"Illegal tag name. Use '&lt;' to print '<'.\",\n  [13]: \"Attribute value was expected.\",\n  [14]: \"End tag name was expected.\",\n  [15]: \"Whitespace was expected.\",\n  [16]: \"Unexpected '<!--' in comment.\",\n  [17]: `Attribute name cannot contain U+0022 (\"), U+0027 ('), and U+003C (<).`,\n  [18]: \"Unquoted attribute value cannot contain U+0022 (\\\"), U+0027 ('), U+003C (<), U+003D (=), and U+0060 (`).\",\n  [19]: \"Attribute name cannot start with '='.\",\n  [21]: \"'<?' is allowed only in XML context.\",\n  [20]: `Unexpected null character.`,\n  [22]: \"Illegal '/' in tags.\",\n  // Vue-specific parse errors\n  [23]: \"Invalid end tag.\",\n  [24]: \"Element is missing end tag.\",\n  [25]: \"Interpolation end sign was not found.\",\n  [27]: \"End bracket for dynamic directive argument was not found. Note that dynamic directive argument cannot contain spaces.\",\n  [26]: \"Legal directive name was expected.\",\n  // transform errors\n  [28]: `v-if/v-else-if is missing expression.`,\n  [29]: `v-if/else branches must use unique keys.`,\n  [30]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\n  [31]: `v-for is missing expression.`,\n  [32]: `v-for has invalid expression.`,\n  [33]: `<template v-for> key should be placed on the <template> tag.`,\n  [34]: `v-bind is missing expression.`,\n  [52]: `v-bind with same-name shorthand only allows static argument.`,\n  [35]: `v-on is missing expression.`,\n  [36]: `Unexpected custom directive on <slot> outlet.`,\n  [37]: `Mixed v-slot usage on both the component and nested <template>. When there are multiple named slots, all slots should use <template> syntax to avoid scope ambiguity.`,\n  [38]: `Duplicate slot names found. `,\n  [39]: `Extraneous children found when component already has explicitly named default slot. These children will be ignored.`,\n  [40]: `v-slot can only be used on components or <template> tags.`,\n  [41]: `v-model is missing expression.`,\n  [42]: `v-model value must be a valid JavaScript member expression.`,\n  [43]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\n  [44]: `v-model cannot be used on a prop, because local prop bindings are not writable.\nUse a v-bind binding combined with a v-on listener that emits update:x event instead.`,\n  [45]: `Error parsing JavaScript expression: `,\n  [46]: `<KeepAlive> expects exactly one child component.`,\n  [51]: `@vnode-* hooks in templates are no longer supported. Use the vue: prefix instead. For example, @vnode-mounted should be changed to @vue:mounted. @vnode-* hooks support has been removed in 3.4.`,\n  // generic errors\n  [47]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\n  [48]: `ES module mode is not supported in this build of compiler.`,\n  [49]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\n  [50]: `\"scopeId\" option is only supported in module mode.`,\n  // just to fulfill types\n  [53]: ``\n};\n\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = /* @__PURE__ */ Object.create(null)) {\n  {\n    return;\n  }\n}\nfunction isReferencedIdentifier(id, parent, parentStack) {\n  {\n    return false;\n  }\n}\nfunction isInDestructureAssignment(parent, parentStack) {\n  if (parent && (parent.type === \"ObjectProperty\" || parent.type === \"ArrayPattern\")) {\n    let i = parentStack.length;\n    while (i--) {\n      const p = parentStack[i];\n      if (p.type === \"AssignmentExpression\") {\n        return true;\n      } else if (p.type !== \"ObjectProperty\" && !p.type.endsWith(\"Pattern\")) {\n        break;\n      }\n    }\n  }\n  return false;\n}\nfunction isInNewExpression(parentStack) {\n  let i = parentStack.length;\n  while (i--) {\n    const p = parentStack[i];\n    if (p.type === \"NewExpression\") {\n      return true;\n    } else if (p.type !== \"MemberExpression\") {\n      break;\n    }\n  }\n  return false;\n}\nfunction walkFunctionParams(node, onIdent) {\n  for (const p of node.params) {\n    for (const id of extractIdentifiers(p)) {\n      onIdent(id);\n    }\n  }\n}\nfunction walkBlockDeclarations(block, onIdent) {\n  for (const stmt of block.body) {\n    if (stmt.type === \"VariableDeclaration\") {\n      if (stmt.declare) continue;\n      for (const decl of stmt.declarations) {\n        for (const id of extractIdentifiers(decl.id)) {\n          onIdent(id);\n        }\n      }\n    } else if (stmt.type === \"FunctionDeclaration\" || stmt.type === \"ClassDeclaration\") {\n      if (stmt.declare || !stmt.id) continue;\n      onIdent(stmt.id);\n    } else if (isForStatement(stmt)) {\n      walkForStatement(stmt, true, onIdent);\n    }\n  }\n}\nfunction isForStatement(stmt) {\n  return stmt.type === \"ForOfStatement\" || stmt.type === \"ForInStatement\" || stmt.type === \"ForStatement\";\n}\nfunction walkForStatement(stmt, isVar, onIdent) {\n  const variable = stmt.type === \"ForStatement\" ? stmt.init : stmt.left;\n  if (variable && variable.type === \"VariableDeclaration\" && (variable.kind === \"var\" ? isVar : !isVar)) {\n    for (const decl of variable.declarations) {\n      for (const id of extractIdentifiers(decl.id)) {\n        onIdent(id);\n      }\n    }\n  }\n}\nfunction extractIdentifiers(param, nodes = []) {\n  switch (param.type) {\n    case \"Identifier\":\n      nodes.push(param);\n      break;\n    case \"MemberExpression\":\n      let object = param;\n      while (object.type === \"MemberExpression\") {\n        object = object.object;\n      }\n      nodes.push(object);\n      break;\n    case \"ObjectPattern\":\n      for (const prop of param.properties) {\n        if (prop.type === \"RestElement\") {\n          extractIdentifiers(prop.argument, nodes);\n        } else {\n          extractIdentifiers(prop.value, nodes);\n        }\n      }\n      break;\n    case \"ArrayPattern\":\n      param.elements.forEach((element) => {\n        if (element) extractIdentifiers(element, nodes);\n      });\n      break;\n    case \"RestElement\":\n      extractIdentifiers(param.argument, nodes);\n      break;\n    case \"AssignmentPattern\":\n      extractIdentifiers(param.left, nodes);\n      break;\n  }\n  return nodes;\n}\nconst isFunctionType = (node) => {\n  return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\n};\nconst isStaticProperty = (node) => node && (node.type === \"ObjectProperty\" || node.type === \"ObjectMethod\") && !node.computed;\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\nconst TS_NODE_TYPES = [\n  \"TSAsExpression\",\n  // foo as number\n  \"TSTypeAssertion\",\n  // (<number>foo)\n  \"TSNonNullExpression\",\n  // foo!\n  \"TSInstantiationExpression\",\n  // foo<string>\n  \"TSSatisfiesExpression\"\n  // foo satisfies T\n];\nfunction unwrapTSNode(node) {\n  if (TS_NODE_TYPES.includes(node.type)) {\n    return unwrapTSNode(node.expression);\n  } else {\n    return node;\n  }\n}\n\nconst isStaticExp = (p) => p.type === 4 && p.isStatic;\nfunction isCoreComponent(tag) {\n  switch (tag) {\n    case \"Teleport\":\n    case \"teleport\":\n      return TELEPORT;\n    case \"Suspense\":\n    case \"suspense\":\n      return SUSPENSE;\n    case \"KeepAlive\":\n    case \"keep-alive\":\n      return KEEP_ALIVE;\n    case \"BaseTransition\":\n    case \"base-transition\":\n      return BASE_TRANSITION;\n  }\n}\nconst nonIdentifierRE = /^\\d|[^\\$\\w\\xA0-\\uFFFF]/;\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\nconst getExpSource = (exp) => exp.type === 4 ? exp.content : exp.loc.source;\nconst isMemberExpressionBrowser = (exp) => {\n  const path = getExpSource(exp).trim().replace(whitespaceRE, (s) => s.trim());\n  let state = 0 /* inMemberExp */;\n  let stateStack = [];\n  let currentOpenBracketCount = 0;\n  let currentOpenParensCount = 0;\n  let currentStringType = null;\n  for (let i = 0; i < path.length; i++) {\n    const char = path.charAt(i);\n    switch (state) {\n      case 0 /* inMemberExp */:\n        if (char === \"[\") {\n          stateStack.push(state);\n          state = 1 /* inBrackets */;\n          currentOpenBracketCount++;\n        } else if (char === \"(\") {\n          stateStack.push(state);\n          state = 2 /* inParens */;\n          currentOpenParensCount++;\n        } else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\n          return false;\n        }\n        break;\n      case 1 /* inBrackets */:\n        if (char === `'` || char === `\"` || char === \"`\") {\n          stateStack.push(state);\n          state = 3 /* inString */;\n          currentStringType = char;\n        } else if (char === `[`) {\n          currentOpenBracketCount++;\n        } else if (char === `]`) {\n          if (!--currentOpenBracketCount) {\n            state = stateStack.pop();\n          }\n        }\n        break;\n      case 2 /* inParens */:\n        if (char === `'` || char === `\"` || char === \"`\") {\n          stateStack.push(state);\n          state = 3 /* inString */;\n          currentStringType = char;\n        } else if (char === `(`) {\n          currentOpenParensCount++;\n        } else if (char === `)`) {\n          if (i === path.length - 1) {\n            return false;\n          }\n          if (!--currentOpenParensCount) {\n            state = stateStack.pop();\n          }\n        }\n        break;\n      case 3 /* inString */:\n        if (char === currentStringType) {\n          state = stateStack.pop();\n          currentStringType = null;\n        }\n        break;\n    }\n  }\n  return !currentOpenBracketCount && !currentOpenParensCount;\n};\nconst isMemberExpressionNode = NOOP ;\nconst isMemberExpression = isMemberExpressionBrowser ;\nconst fnExpRE = /^\\s*(async\\s*)?(\\([^)]*?\\)|[\\w$_]+)\\s*(:[^=]+)?=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\nconst isFnExpressionBrowser = (exp) => fnExpRE.test(getExpSource(exp));\nconst isFnExpressionNode = NOOP ;\nconst isFnExpression = isFnExpressionBrowser ;\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\n  return advancePositionWithMutation(\n    {\n      offset: pos.offset,\n      line: pos.line,\n      column: pos.column\n    },\n    source,\n    numberOfCharacters\n  );\n}\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\n  let linesCount = 0;\n  let lastNewLinePos = -1;\n  for (let i = 0; i < numberOfCharacters; i++) {\n    if (source.charCodeAt(i) === 10) {\n      linesCount++;\n      lastNewLinePos = i;\n    }\n  }\n  pos.offset += numberOfCharacters;\n  pos.line += linesCount;\n  pos.column = lastNewLinePos === -1 ? pos.column + numberOfCharacters : numberOfCharacters - lastNewLinePos;\n  return pos;\n}\nfunction assert(condition, msg) {\n  if (!condition) {\n    throw new Error(msg || `unexpected compiler condition`);\n  }\n}\nfunction findDir(node, name, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 7 && (allowEmpty || p.exp) && (isString(name) ? p.name === name : name.test(p.name))) {\n      return p;\n    }\n  }\n}\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6) {\n      if (dynamicOnly) continue;\n      if (p.name === name && (p.value || allowEmpty)) {\n        return p;\n      }\n    } else if (p.name === \"bind\" && (p.exp || allowEmpty) && isStaticArgOf(p.arg, name)) {\n      return p;\n    }\n  }\n}\nfunction isStaticArgOf(arg, name) {\n  return !!(arg && isStaticExp(arg) && arg.content === name);\n}\nfunction hasDynamicKeyVBind(node) {\n  return node.props.some(\n    (p) => p.type === 7 && p.name === \"bind\" && (!p.arg || // v-bind=\"obj\"\n    p.arg.type !== 4 || // v-bind:[_ctx.foo]\n    !p.arg.isStatic)\n    // v-bind:[foo]\n  );\n}\nfunction isText$1(node) {\n  return node.type === 5 || node.type === 2;\n}\nfunction isVSlot(p) {\n  return p.type === 7 && p.name === \"slot\";\n}\nfunction isTemplateNode(node) {\n  return node.type === 1 && node.tagType === 3;\n}\nfunction isSlotOutlet(node) {\n  return node.type === 1 && node.tagType === 2;\n}\nconst propsHelperSet = /* @__PURE__ */ new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\nfunction getUnnormalizedProps(props, callPath = []) {\n  if (props && !isString(props) && props.type === 14) {\n    const callee = props.callee;\n    if (!isString(callee) && propsHelperSet.has(callee)) {\n      return getUnnormalizedProps(\n        props.arguments[0],\n        callPath.concat(props)\n      );\n    }\n  }\n  return [props, callPath];\n}\nfunction injectProp(node, prop, context) {\n  let propsWithInjection;\n  let props = node.type === 13 ? node.props : node.arguments[2];\n  let callPath = [];\n  let parentCall;\n  if (props && !isString(props) && props.type === 14) {\n    const ret = getUnnormalizedProps(props);\n    props = ret[0];\n    callPath = ret[1];\n    parentCall = callPath[callPath.length - 1];\n  }\n  if (props == null || isString(props)) {\n    propsWithInjection = createObjectExpression([prop]);\n  } else if (props.type === 14) {\n    const first = props.arguments[0];\n    if (!isString(first) && first.type === 15) {\n      if (!hasProp(prop, first)) {\n        first.properties.unshift(prop);\n      }\n    } else {\n      if (props.callee === TO_HANDLERS) {\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n          createObjectExpression([prop]),\n          props\n        ]);\n      } else {\n        props.arguments.unshift(createObjectExpression([prop]));\n      }\n    }\n    !propsWithInjection && (propsWithInjection = props);\n  } else if (props.type === 15) {\n    if (!hasProp(prop, props)) {\n      props.properties.unshift(prop);\n    }\n    propsWithInjection = props;\n  } else {\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\n      createObjectExpression([prop]),\n      props\n    ]);\n    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\n      parentCall = callPath[callPath.length - 2];\n    }\n  }\n  if (node.type === 13) {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.props = propsWithInjection;\n    }\n  } else {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.arguments[2] = propsWithInjection;\n    }\n  }\n}\nfunction hasProp(prop, props) {\n  let result = false;\n  if (prop.key.type === 4) {\n    const propKeyName = prop.key.content;\n    result = props.properties.some(\n      (p) => p.key.type === 4 && p.key.content === propKeyName\n    );\n  }\n  return result;\n}\nfunction toValidAssetId(name, type) {\n  return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\n    return searchValue === \"-\" ? \"_\" : name.charCodeAt(replaceValue).toString();\n  })}`;\n}\nfunction hasScopeRef(node, ids) {\n  if (!node || Object.keys(ids).length === 0) {\n    return false;\n  }\n  switch (node.type) {\n    case 1:\n      for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i];\n        if (p.type === 7 && (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\n          return true;\n        }\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 11:\n      if (hasScopeRef(node.source, ids)) {\n        return true;\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 9:\n      return node.branches.some((b) => hasScopeRef(b, ids));\n    case 10:\n      if (hasScopeRef(node.condition, ids)) {\n        return true;\n      }\n      return node.children.some((c) => hasScopeRef(c, ids));\n    case 4:\n      return !node.isStatic && isSimpleIdentifier(node.content) && !!ids[node.content];\n    case 8:\n      return node.children.some((c) => isObject(c) && hasScopeRef(c, ids));\n    case 5:\n    case 12:\n      return hasScopeRef(node.content, ids);\n    case 2:\n    case 3:\n    case 20:\n      return false;\n    default:\n      if (!!(process.env.NODE_ENV !== \"production\")) ;\n      return false;\n  }\n}\nfunction getMemoedVNodeCall(node) {\n  if (node.type === 14 && node.callee === WITH_MEMO) {\n    return node.arguments[1].returns;\n  } else {\n    return node;\n  }\n}\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+(\\S[\\s\\S]*)/;\n\nconst defaultParserOptions = {\n  parseMode: \"base\",\n  ns: 0,\n  delimiters: [`{{`, `}}`],\n  getNamespace: () => 0,\n  isVoidTag: NO,\n  isPreTag: NO,\n  isIgnoreNewlineTag: NO,\n  isCustomElement: NO,\n  onError: defaultOnError,\n  onWarn: defaultOnWarn,\n  comments: !!(process.env.NODE_ENV !== \"production\"),\n  prefixIdentifiers: false\n};\nlet currentOptions = defaultParserOptions;\nlet currentRoot = null;\nlet currentInput = \"\";\nlet currentOpenTag = null;\nlet currentProp = null;\nlet currentAttrValue = \"\";\nlet currentAttrStartIndex = -1;\nlet currentAttrEndIndex = -1;\nlet inPre = 0;\nlet inVPre = false;\nlet currentVPreBoundary = null;\nconst stack = [];\nconst tokenizer = new Tokenizer(stack, {\n  onerr: emitError,\n  ontext(start, end) {\n    onText(getSlice(start, end), start, end);\n  },\n  ontextentity(char, start, end) {\n    onText(char, start, end);\n  },\n  oninterpolation(start, end) {\n    if (inVPre) {\n      return onText(getSlice(start, end), start, end);\n    }\n    let innerStart = start + tokenizer.delimiterOpen.length;\n    let innerEnd = end - tokenizer.delimiterClose.length;\n    while (isWhitespace(currentInput.charCodeAt(innerStart))) {\n      innerStart++;\n    }\n    while (isWhitespace(currentInput.charCodeAt(innerEnd - 1))) {\n      innerEnd--;\n    }\n    let exp = getSlice(innerStart, innerEnd);\n    if (exp.includes(\"&\")) {\n      {\n        exp = currentOptions.decodeEntities(exp, false);\n      }\n    }\n    addNode({\n      type: 5,\n      content: createExp(exp, false, getLoc(innerStart, innerEnd)),\n      loc: getLoc(start, end)\n    });\n  },\n  onopentagname(start, end) {\n    const name = getSlice(start, end);\n    currentOpenTag = {\n      type: 1,\n      tag: name,\n      ns: currentOptions.getNamespace(name, stack[0], currentOptions.ns),\n      tagType: 0,\n      // will be refined on tag close\n      props: [],\n      children: [],\n      loc: getLoc(start - 1, end),\n      codegenNode: void 0\n    };\n  },\n  onopentagend(end) {\n    endOpenTag(end);\n  },\n  onclosetag(start, end) {\n    const name = getSlice(start, end);\n    if (!currentOptions.isVoidTag(name)) {\n      let found = false;\n      for (let i = 0; i < stack.length; i++) {\n        const e = stack[i];\n        if (e.tag.toLowerCase() === name.toLowerCase()) {\n          found = true;\n          if (i > 0) {\n            emitError(24, stack[0].loc.start.offset);\n          }\n          for (let j = 0; j <= i; j++) {\n            const el = stack.shift();\n            onCloseTag(el, end, j < i);\n          }\n          break;\n        }\n      }\n      if (!found) {\n        emitError(23, backTrack(start, 60));\n      }\n    }\n  },\n  onselfclosingtag(end) {\n    const name = currentOpenTag.tag;\n    currentOpenTag.isSelfClosing = true;\n    endOpenTag(end);\n    if (stack[0] && stack[0].tag === name) {\n      onCloseTag(stack.shift(), end);\n    }\n  },\n  onattribname(start, end) {\n    currentProp = {\n      type: 6,\n      name: getSlice(start, end),\n      nameLoc: getLoc(start, end),\n      value: void 0,\n      loc: getLoc(start)\n    };\n  },\n  ondirname(start, end) {\n    const raw = getSlice(start, end);\n    const name = raw === \".\" || raw === \":\" ? \"bind\" : raw === \"@\" ? \"on\" : raw === \"#\" ? \"slot\" : raw.slice(2);\n    if (!inVPre && name === \"\") {\n      emitError(26, start);\n    }\n    if (inVPre || name === \"\") {\n      currentProp = {\n        type: 6,\n        name: raw,\n        nameLoc: getLoc(start, end),\n        value: void 0,\n        loc: getLoc(start)\n      };\n    } else {\n      currentProp = {\n        type: 7,\n        name,\n        rawName: raw,\n        exp: void 0,\n        arg: void 0,\n        modifiers: raw === \".\" ? [createSimpleExpression(\"prop\")] : [],\n        loc: getLoc(start)\n      };\n      if (name === \"pre\") {\n        inVPre = tokenizer.inVPre = true;\n        currentVPreBoundary = currentOpenTag;\n        const props = currentOpenTag.props;\n        for (let i = 0; i < props.length; i++) {\n          if (props[i].type === 7) {\n            props[i] = dirToAttr(props[i]);\n          }\n        }\n      }\n    }\n  },\n  ondirarg(start, end) {\n    if (start === end) return;\n    const arg = getSlice(start, end);\n    if (inVPre) {\n      currentProp.name += arg;\n      setLocEnd(currentProp.nameLoc, end);\n    } else {\n      const isStatic = arg[0] !== `[`;\n      currentProp.arg = createExp(\n        isStatic ? arg : arg.slice(1, -1),\n        isStatic,\n        getLoc(start, end),\n        isStatic ? 3 : 0\n      );\n    }\n  },\n  ondirmodifier(start, end) {\n    const mod = getSlice(start, end);\n    if (inVPre) {\n      currentProp.name += \".\" + mod;\n      setLocEnd(currentProp.nameLoc, end);\n    } else if (currentProp.name === \"slot\") {\n      const arg = currentProp.arg;\n      if (arg) {\n        arg.content += \".\" + mod;\n        setLocEnd(arg.loc, end);\n      }\n    } else {\n      const exp = createSimpleExpression(mod, true, getLoc(start, end));\n      currentProp.modifiers.push(exp);\n    }\n  },\n  onattribdata(start, end) {\n    currentAttrValue += getSlice(start, end);\n    if (currentAttrStartIndex < 0) currentAttrStartIndex = start;\n    currentAttrEndIndex = end;\n  },\n  onattribentity(char, start, end) {\n    currentAttrValue += char;\n    if (currentAttrStartIndex < 0) currentAttrStartIndex = start;\n    currentAttrEndIndex = end;\n  },\n  onattribnameend(end) {\n    const start = currentProp.loc.start.offset;\n    const name = getSlice(start, end);\n    if (currentProp.type === 7) {\n      currentProp.rawName = name;\n    }\n    if (currentOpenTag.props.some(\n      (p) => (p.type === 7 ? p.rawName : p.name) === name\n    )) {\n      emitError(2, start);\n    }\n  },\n  onattribend(quote, end) {\n    if (currentOpenTag && currentProp) {\n      setLocEnd(currentProp.loc, end);\n      if (quote !== 0) {\n        if (currentAttrValue.includes(\"&\")) {\n          currentAttrValue = currentOptions.decodeEntities(\n            currentAttrValue,\n            true\n          );\n        }\n        if (currentProp.type === 6) {\n          if (currentProp.name === \"class\") {\n            currentAttrValue = condense(currentAttrValue).trim();\n          }\n          if (quote === 1 && !currentAttrValue) {\n            emitError(13, end);\n          }\n          currentProp.value = {\n            type: 2,\n            content: currentAttrValue,\n            loc: quote === 1 ? getLoc(currentAttrStartIndex, currentAttrEndIndex) : getLoc(currentAttrStartIndex - 1, currentAttrEndIndex + 1)\n          };\n          if (tokenizer.inSFCRoot && currentOpenTag.tag === \"template\" && currentProp.name === \"lang\" && currentAttrValue && currentAttrValue !== \"html\") {\n            tokenizer.enterRCDATA(toCharCodes(`</template`), 0);\n          }\n        } else {\n          let expParseMode = 0 /* Normal */;\n          currentProp.exp = createExp(\n            currentAttrValue,\n            false,\n            getLoc(currentAttrStartIndex, currentAttrEndIndex),\n            0,\n            expParseMode\n          );\n          if (currentProp.name === \"for\") {\n            currentProp.forParseResult = parseForExpression(currentProp.exp);\n          }\n          let syncIndex = -1;\n          if (currentProp.name === \"bind\" && (syncIndex = currentProp.modifiers.findIndex(\n            (mod) => mod.content === \"sync\"\n          )) > -1 && checkCompatEnabled(\n            \"COMPILER_V_BIND_SYNC\",\n            currentOptions,\n            currentProp.loc,\n            currentProp.rawName\n          )) {\n            currentProp.name = \"model\";\n            currentProp.modifiers.splice(syncIndex, 1);\n          }\n        }\n      }\n      if (currentProp.type !== 7 || currentProp.name !== \"pre\") {\n        currentOpenTag.props.push(currentProp);\n      }\n    }\n    currentAttrValue = \"\";\n    currentAttrStartIndex = currentAttrEndIndex = -1;\n  },\n  oncomment(start, end) {\n    if (currentOptions.comments) {\n      addNode({\n        type: 3,\n        content: getSlice(start, end),\n        loc: getLoc(start - 4, end + 3)\n      });\n    }\n  },\n  onend() {\n    const end = currentInput.length;\n    if ((!!(process.env.NODE_ENV !== \"production\") || false) && tokenizer.state !== 1) {\n      switch (tokenizer.state) {\n        case 5:\n        case 8:\n          emitError(5, end);\n          break;\n        case 3:\n        case 4:\n          emitError(\n            25,\n            tokenizer.sectionStart\n          );\n          break;\n        case 28:\n          if (tokenizer.currentSequence === Sequences.CdataEnd) {\n            emitError(6, end);\n          } else {\n            emitError(7, end);\n          }\n          break;\n        case 6:\n        case 7:\n        case 9:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        // \"\n        case 20:\n        // '\n        case 21:\n          emitError(9, end);\n          break;\n      }\n    }\n    for (let index = 0; index < stack.length; index++) {\n      onCloseTag(stack[index], end - 1);\n      emitError(24, stack[index].loc.start.offset);\n    }\n  },\n  oncdata(start, end) {\n    if (stack[0].ns !== 0) {\n      onText(getSlice(start, end), start, end);\n    } else {\n      emitError(1, start - 9);\n    }\n  },\n  onprocessinginstruction(start) {\n    if ((stack[0] ? stack[0].ns : currentOptions.ns) === 0) {\n      emitError(\n        21,\n        start - 1\n      );\n    }\n  }\n});\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nconst stripParensRE = /^\\(|\\)$/g;\nfunction parseForExpression(input) {\n  const loc = input.loc;\n  const exp = input.content;\n  const inMatch = exp.match(forAliasRE);\n  if (!inMatch) return;\n  const [, LHS, RHS] = inMatch;\n  const createAliasExpression = (content, offset, asParam = false) => {\n    const start = loc.start.offset + offset;\n    const end = start + content.length;\n    return createExp(\n      content,\n      false,\n      getLoc(start, end),\n      0,\n      asParam ? 1 /* Params */ : 0 /* Normal */\n    );\n  };\n  const result = {\n    source: createAliasExpression(RHS.trim(), exp.indexOf(RHS, LHS.length)),\n    value: void 0,\n    key: void 0,\n    index: void 0,\n    finalized: false\n  };\n  let valueContent = LHS.trim().replace(stripParensRE, \"\").trim();\n  const trimmedOffset = LHS.indexOf(valueContent);\n  const iteratorMatch = valueContent.match(forIteratorRE);\n  if (iteratorMatch) {\n    valueContent = valueContent.replace(forIteratorRE, \"\").trim();\n    const keyContent = iteratorMatch[1].trim();\n    let keyOffset;\n    if (keyContent) {\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\n      result.key = createAliasExpression(keyContent, keyOffset, true);\n    }\n    if (iteratorMatch[2]) {\n      const indexContent = iteratorMatch[2].trim();\n      if (indexContent) {\n        result.index = createAliasExpression(\n          indexContent,\n          exp.indexOf(\n            indexContent,\n            result.key ? keyOffset + keyContent.length : trimmedOffset + valueContent.length\n          ),\n          true\n        );\n      }\n    }\n  }\n  if (valueContent) {\n    result.value = createAliasExpression(valueContent, trimmedOffset, true);\n  }\n  return result;\n}\nfunction getSlice(start, end) {\n  return currentInput.slice(start, end);\n}\nfunction endOpenTag(end) {\n  if (tokenizer.inSFCRoot) {\n    currentOpenTag.innerLoc = getLoc(end + 1, end + 1);\n  }\n  addNode(currentOpenTag);\n  const { tag, ns } = currentOpenTag;\n  if (ns === 0 && currentOptions.isPreTag(tag)) {\n    inPre++;\n  }\n  if (currentOptions.isVoidTag(tag)) {\n    onCloseTag(currentOpenTag, end);\n  } else {\n    stack.unshift(currentOpenTag);\n    if (ns === 1 || ns === 2) {\n      tokenizer.inXML = true;\n    }\n  }\n  currentOpenTag = null;\n}\nfunction onText(content, start, end) {\n  {\n    const tag = stack[0] && stack[0].tag;\n    if (tag !== \"script\" && tag !== \"style\" && content.includes(\"&\")) {\n      content = currentOptions.decodeEntities(content, false);\n    }\n  }\n  const parent = stack[0] || currentRoot;\n  const lastNode = parent.children[parent.children.length - 1];\n  if (lastNode && lastNode.type === 2) {\n    lastNode.content += content;\n    setLocEnd(lastNode.loc, end);\n  } else {\n    parent.children.push({\n      type: 2,\n      content,\n      loc: getLoc(start, end)\n    });\n  }\n}\nfunction onCloseTag(el, end, isImplied = false) {\n  if (isImplied) {\n    setLocEnd(el.loc, backTrack(end, 60));\n  } else {\n    setLocEnd(el.loc, lookAhead(end, 62) + 1);\n  }\n  if (tokenizer.inSFCRoot) {\n    if (el.children.length) {\n      el.innerLoc.end = extend({}, el.children[el.children.length - 1].loc.end);\n    } else {\n      el.innerLoc.end = extend({}, el.innerLoc.start);\n    }\n    el.innerLoc.source = getSlice(\n      el.innerLoc.start.offset,\n      el.innerLoc.end.offset\n    );\n  }\n  const { tag, ns, children } = el;\n  if (!inVPre) {\n    if (tag === \"slot\") {\n      el.tagType = 2;\n    } else if (isFragmentTemplate(el)) {\n      el.tagType = 3;\n    } else if (isComponent(el)) {\n      el.tagType = 1;\n    }\n  }\n  if (!tokenizer.inRCDATA) {\n    el.children = condenseWhitespace(children);\n  }\n  if (ns === 0 && currentOptions.isIgnoreNewlineTag(tag)) {\n    const first = children[0];\n    if (first && first.type === 2) {\n      first.content = first.content.replace(/^\\r?\\n/, \"\");\n    }\n  }\n  if (ns === 0 && currentOptions.isPreTag(tag)) {\n    inPre--;\n  }\n  if (currentVPreBoundary === el) {\n    inVPre = tokenizer.inVPre = false;\n    currentVPreBoundary = null;\n  }\n  if (tokenizer.inXML && (stack[0] ? stack[0].ns : currentOptions.ns) === 0) {\n    tokenizer.inXML = false;\n  }\n  {\n    const props = el.props;\n    if (!!(process.env.NODE_ENV !== \"production\") && isCompatEnabled(\n      \"COMPILER_V_IF_V_FOR_PRECEDENCE\",\n      currentOptions\n    )) {\n      let hasIf = false;\n      let hasFor = false;\n      for (let i = 0; i < props.length; i++) {\n        const p = props[i];\n        if (p.type === 7) {\n          if (p.name === \"if\") {\n            hasIf = true;\n          } else if (p.name === \"for\") {\n            hasFor = true;\n          }\n        }\n        if (hasIf && hasFor) {\n          warnDeprecation(\n            \"COMPILER_V_IF_V_FOR_PRECEDENCE\",\n            currentOptions,\n            el.loc\n          );\n          break;\n        }\n      }\n    }\n    if (!tokenizer.inSFCRoot && isCompatEnabled(\n      \"COMPILER_NATIVE_TEMPLATE\",\n      currentOptions\n    ) && el.tag === \"template\" && !isFragmentTemplate(el)) {\n      !!(process.env.NODE_ENV !== \"production\") && warnDeprecation(\n        \"COMPILER_NATIVE_TEMPLATE\",\n        currentOptions,\n        el.loc\n      );\n      const parent = stack[0] || currentRoot;\n      const index = parent.children.indexOf(el);\n      parent.children.splice(index, 1, ...el.children);\n    }\n    const inlineTemplateProp = props.find(\n      (p) => p.type === 6 && p.name === \"inline-template\"\n    );\n    if (inlineTemplateProp && checkCompatEnabled(\n      \"COMPILER_INLINE_TEMPLATE\",\n      currentOptions,\n      inlineTemplateProp.loc\n    ) && el.children.length) {\n      inlineTemplateProp.value = {\n        type: 2,\n        content: getSlice(\n          el.children[0].loc.start.offset,\n          el.children[el.children.length - 1].loc.end.offset\n        ),\n        loc: inlineTemplateProp.loc\n      };\n    }\n  }\n}\nfunction lookAhead(index, c) {\n  let i = index;\n  while (currentInput.charCodeAt(i) !== c && i < currentInput.length - 1) i++;\n  return i;\n}\nfunction backTrack(index, c) {\n  let i = index;\n  while (currentInput.charCodeAt(i) !== c && i >= 0) i--;\n  return i;\n}\nconst specialTemplateDir = /* @__PURE__ */ new Set([\"if\", \"else\", \"else-if\", \"for\", \"slot\"]);\nfunction isFragmentTemplate({ tag, props }) {\n  if (tag === \"template\") {\n    for (let i = 0; i < props.length; i++) {\n      if (props[i].type === 7 && specialTemplateDir.has(props[i].name)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\nfunction isComponent({ tag, props }) {\n  if (currentOptions.isCustomElement(tag)) {\n    return false;\n  }\n  if (tag === \"component\" || isUpperCase(tag.charCodeAt(0)) || isCoreComponent(tag) || currentOptions.isBuiltInComponent && currentOptions.isBuiltInComponent(tag) || currentOptions.isNativeTag && !currentOptions.isNativeTag(tag)) {\n    return true;\n  }\n  for (let i = 0; i < props.length; i++) {\n    const p = props[i];\n    if (p.type === 6) {\n      if (p.name === \"is\" && p.value) {\n        if (p.value.content.startsWith(\"vue:\")) {\n          return true;\n        } else if (checkCompatEnabled(\n          \"COMPILER_IS_ON_ELEMENT\",\n          currentOptions,\n          p.loc\n        )) {\n          return true;\n        }\n      }\n    } else if (// :is on plain element - only treat as component in compat mode\n    p.name === \"bind\" && isStaticArgOf(p.arg, \"is\") && checkCompatEnabled(\n      \"COMPILER_IS_ON_ELEMENT\",\n      currentOptions,\n      p.loc\n    )) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isUpperCase(c) {\n  return c > 64 && c < 91;\n}\nconst windowsNewlineRE = /\\r\\n/g;\nfunction condenseWhitespace(nodes, tag) {\n  const shouldCondense = currentOptions.whitespace !== \"preserve\";\n  let removedWhitespace = false;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (node.type === 2) {\n      if (!inPre) {\n        if (isAllWhitespace(node.content)) {\n          const prev = nodes[i - 1] && nodes[i - 1].type;\n          const next = nodes[i + 1] && nodes[i + 1].type;\n          if (!prev || !next || shouldCondense && (prev === 3 && (next === 3 || next === 1) || prev === 1 && (next === 3 || next === 1 && hasNewlineChar(node.content)))) {\n            removedWhitespace = true;\n            nodes[i] = null;\n          } else {\n            node.content = \" \";\n          }\n        } else if (shouldCondense) {\n          node.content = condense(node.content);\n        }\n      } else {\n        node.content = node.content.replace(windowsNewlineRE, \"\\n\");\n      }\n    }\n  }\n  return removedWhitespace ? nodes.filter(Boolean) : nodes;\n}\nfunction isAllWhitespace(str) {\n  for (let i = 0; i < str.length; i++) {\n    if (!isWhitespace(str.charCodeAt(i))) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction hasNewlineChar(str) {\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c === 10 || c === 13) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction condense(str) {\n  let ret = \"\";\n  let prevCharIsWhitespace = false;\n  for (let i = 0; i < str.length; i++) {\n    if (isWhitespace(str.charCodeAt(i))) {\n      if (!prevCharIsWhitespace) {\n        ret += \" \";\n        prevCharIsWhitespace = true;\n      }\n    } else {\n      ret += str[i];\n      prevCharIsWhitespace = false;\n    }\n  }\n  return ret;\n}\nfunction addNode(node) {\n  (stack[0] || currentRoot).children.push(node);\n}\nfunction getLoc(start, end) {\n  return {\n    start: tokenizer.getPos(start),\n    // @ts-expect-error allow late attachment\n    end: end == null ? end : tokenizer.getPos(end),\n    // @ts-expect-error allow late attachment\n    source: end == null ? end : getSlice(start, end)\n  };\n}\nfunction setLocEnd(loc, end) {\n  loc.end = tokenizer.getPos(end);\n  loc.source = getSlice(loc.start.offset, end);\n}\nfunction dirToAttr(dir) {\n  const attr = {\n    type: 6,\n    name: dir.rawName,\n    nameLoc: getLoc(\n      dir.loc.start.offset,\n      dir.loc.start.offset + dir.rawName.length\n    ),\n    value: void 0,\n    loc: dir.loc\n  };\n  if (dir.exp) {\n    const loc = dir.exp.loc;\n    if (loc.end.offset < dir.loc.end.offset) {\n      loc.start.offset--;\n      loc.start.column--;\n      loc.end.offset++;\n      loc.end.column++;\n    }\n    attr.value = {\n      type: 2,\n      content: dir.exp.content,\n      loc\n    };\n  }\n  return attr;\n}\nfunction createExp(content, isStatic = false, loc, constType = 0, parseMode = 0 /* Normal */) {\n  const exp = createSimpleExpression(content, isStatic, loc, constType);\n  return exp;\n}\nfunction emitError(code, index, message) {\n  currentOptions.onError(\n    createCompilerError(code, getLoc(index, index), void 0, message)\n  );\n}\nfunction reset() {\n  tokenizer.reset();\n  currentOpenTag = null;\n  currentProp = null;\n  currentAttrValue = \"\";\n  currentAttrStartIndex = -1;\n  currentAttrEndIndex = -1;\n  stack.length = 0;\n}\nfunction baseParse(input, options) {\n  reset();\n  currentInput = input;\n  currentOptions = extend({}, defaultParserOptions);\n  if (options) {\n    let key;\n    for (key in options) {\n      if (options[key] != null) {\n        currentOptions[key] = options[key];\n      }\n    }\n  }\n  if (!!(process.env.NODE_ENV !== \"production\")) {\n    if (!currentOptions.decodeEntities) {\n      throw new Error(\n        `[@vue/compiler-core] decodeEntities option is required in browser builds.`\n      );\n    }\n  }\n  tokenizer.mode = currentOptions.parseMode === \"html\" ? 1 : currentOptions.parseMode === \"sfc\" ? 2 : 0;\n  tokenizer.inXML = currentOptions.ns === 1 || currentOptions.ns === 2;\n  const delimiters = options && options.delimiters;\n  if (delimiters) {\n    tokenizer.delimiterOpen = toCharCodes(delimiters[0]);\n    tokenizer.delimiterClose = toCharCodes(delimiters[1]);\n  }\n  const root = currentRoot = createRoot([], input);\n  tokenizer.parse(currentInput);\n  root.loc = getLoc(0, input.length);\n  root.children = condenseWhitespace(root.children);\n  currentRoot = null;\n  return root;\n}\n\nfunction cacheStatic(root, context) {\n  walk(\n    root,\n    void 0,\n    context,\n    // Root node is unfortunately non-hoistable due to potential parent\n    // fallthrough attributes.\n    isSingleElementRoot(root, root.children[0])\n  );\n}\nfunction isSingleElementRoot(root, child) {\n  const { children } = root;\n  return children.length === 1 && child.type === 1 && !isSlotOutlet(child);\n}\nfunction walk(node, parent, context, doNotHoistNode = false, inFor = false) {\n  const { children } = node;\n  const toCache = [];\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    if (child.type === 1 && child.tagType === 0) {\n      const constantType = doNotHoistNode ? 0 : getConstantType(child, context);\n      if (constantType > 0) {\n        if (constantType >= 2) {\n          child.codegenNode.patchFlag = -1;\n          toCache.push(child);\n          continue;\n        }\n      } else {\n        const codegenNode = child.codegenNode;\n        if (codegenNode.type === 13) {\n          const flag = codegenNode.patchFlag;\n          if ((flag === void 0 || flag === 512 || flag === 1) && getGeneratedPropsConstantType(child, context) >= 2) {\n            const props = getNodeProps(child);\n            if (props) {\n              codegenNode.props = context.hoist(props);\n            }\n          }\n          if (codegenNode.dynamicProps) {\n            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\n          }\n        }\n      }\n    } else if (child.type === 12) {\n      const constantType = doNotHoistNode ? 0 : getConstantType(child, context);\n      if (constantType >= 2) {\n        toCache.push(child);\n        continue;\n      }\n    }\n    if (child.type === 1) {\n      const isComponent = child.tagType === 1;\n      if (isComponent) {\n        context.scopes.vSlot++;\n      }\n      walk(child, node, context, false, inFor);\n      if (isComponent) {\n        context.scopes.vSlot--;\n      }\n    } else if (child.type === 11) {\n      walk(child, node, context, child.children.length === 1, true);\n    } else if (child.type === 9) {\n      for (let i2 = 0; i2 < child.branches.length; i2++) {\n        walk(\n          child.branches[i2],\n          node,\n          context,\n          child.branches[i2].children.length === 1,\n          inFor\n        );\n      }\n    }\n  }\n  let cachedAsArray = false;\n  if (toCache.length === children.length && node.type === 1) {\n    if (node.tagType === 0 && node.codegenNode && node.codegenNode.type === 13 && isArray(node.codegenNode.children)) {\n      node.codegenNode.children = getCacheExpression(\n        createArrayExpression(node.codegenNode.children)\n      );\n      cachedAsArray = true;\n    } else if (node.tagType === 1 && node.codegenNode && node.codegenNode.type === 13 && node.codegenNode.children && !isArray(node.codegenNode.children) && node.codegenNode.children.type === 15) {\n      const slot = getSlotNode(node.codegenNode, \"default\");\n      if (slot) {\n        slot.returns = getCacheExpression(\n          createArrayExpression(slot.returns)\n        );\n        cachedAsArray = true;\n      }\n    } else if (node.tagType === 3 && parent && parent.type === 1 && parent.tagType === 1 && parent.codegenNode && parent.codegenNode.type === 13 && parent.codegenNode.children && !isArray(parent.codegenNode.children) && parent.codegenNode.children.type === 15) {\n      const slotName = findDir(node, \"slot\", true);\n      const slot = slotName && slotName.arg && getSlotNode(parent.codegenNode, slotName.arg);\n      if (slot) {\n        slot.returns = getCacheExpression(\n          createArrayExpression(slot.returns)\n        );\n        cachedAsArray = true;\n      }\n    }\n  }\n  if (!cachedAsArray) {\n    for (const child of toCache) {\n      child.codegenNode = context.cache(child.codegenNode);\n    }\n  }\n  function getCacheExpression(value) {\n    const exp = context.cache(value);\n    if (inFor && context.hmr) {\n      exp.needArraySpread = true;\n    }\n    return exp;\n  }\n  function getSlotNode(node2, name) {\n    if (node2.children && !isArray(node2.children) && node2.children.type === 15) {\n      const slot = node2.children.properties.find(\n        (p) => p.key === name || p.key.content === name\n      );\n      return slot && slot.value;\n    }\n  }\n  if (toCache.length && context.transformHoist) {\n    context.transformHoist(children, context, node);\n  }\n}\nfunction getConstantType(node, context) {\n  const { constantCache } = context;\n  switch (node.type) {\n    case 1:\n      if (node.tagType !== 0) {\n        return 0;\n      }\n      const cached = constantCache.get(node);\n      if (cached !== void 0) {\n        return cached;\n      }\n      const codegenNode = node.codegenNode;\n      if (codegenNode.type !== 13) {\n        return 0;\n      }\n      if (codegenNode.isBlock && node.tag !== \"svg\" && node.tag !== \"foreignObject\" && node.tag !== \"math\") {\n        return 0;\n      }\n      if (codegenNode.patchFlag === void 0) {\n        let returnType2 = 3;\n        const generatedPropsType = getGeneratedPropsConstantType(node, context);\n        if (generatedPropsType === 0) {\n          constantCache.set(node, 0);\n          return 0;\n        }\n        if (generatedPropsType < returnType2) {\n          returnType2 = generatedPropsType;\n        }\n        for (let i = 0; i < node.children.length; i++) {\n          const childType = getConstantType(node.children[i], context);\n          if (childType === 0) {\n            constantCache.set(node, 0);\n            return 0;\n          }\n          if (childType < returnType2) {\n            returnType2 = childType;\n          }\n        }\n        if (returnType2 > 1) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i];\n            if (p.type === 7 && p.name === \"bind\" && p.exp) {\n              const expType = getConstantType(p.exp, context);\n              if (expType === 0) {\n                constantCache.set(node, 0);\n                return 0;\n              }\n              if (expType < returnType2) {\n                returnType2 = expType;\n              }\n            }\n          }\n        }\n        if (codegenNode.isBlock) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i];\n            if (p.type === 7) {\n              constantCache.set(node, 0);\n              return 0;\n            }\n          }\n          context.removeHelper(OPEN_BLOCK);\n          context.removeHelper(\n            getVNodeBlockHelper(context.inSSR, codegenNode.isComponent)\n          );\n          codegenNode.isBlock = false;\n          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\n        }\n        constantCache.set(node, returnType2);\n        return returnType2;\n      } else {\n        constantCache.set(node, 0);\n        return 0;\n      }\n    case 2:\n    case 3:\n      return 3;\n    case 9:\n    case 11:\n    case 10:\n      return 0;\n    case 5:\n    case 12:\n      return getConstantType(node.content, context);\n    case 4:\n      return node.constType;\n    case 8:\n      let returnType = 3;\n      for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i];\n        if (isString(child) || isSymbol(child)) {\n          continue;\n        }\n        const childType = getConstantType(child, context);\n        if (childType === 0) {\n          return 0;\n        } else if (childType < returnType) {\n          returnType = childType;\n        }\n      }\n      return returnType;\n    case 20:\n      return 2;\n    default:\n      if (!!(process.env.NODE_ENV !== \"production\")) ;\n      return 0;\n  }\n}\nconst allowHoistedHelperSet = /* @__PURE__ */ new Set([\n  NORMALIZE_CLASS,\n  NORMALIZE_STYLE,\n  NORMALIZE_PROPS,\n  GUARD_REACTIVE_PROPS\n]);\nfunction getConstantTypeOfHelperCall(value, context) {\n  if (value.type === 14 && !isString(value.callee) && allowHoistedHelperSet.has(value.callee)) {\n    const arg = value.arguments[0];\n    if (arg.type === 4) {\n      return getConstantType(arg, context);\n    } else if (arg.type === 14) {\n      return getConstantTypeOfHelperCall(arg, context);\n    }\n  }\n  return 0;\n}\nfunction getGeneratedPropsConstantType(node, context) {\n  let returnType = 3;\n  const props = getNodeProps(node);\n  if (props && props.type === 15) {\n    const { properties } = props;\n    for (let i = 0; i < properties.length; i++) {\n      const { key, value } = properties[i];\n      const keyType = getConstantType(key, context);\n      if (keyType === 0) {\n        return keyType;\n      }\n      if (keyType < returnType) {\n        returnType = keyType;\n      }\n      let valueType;\n      if (value.type === 4) {\n        valueType = getConstantType(value, context);\n      } else if (value.type === 14) {\n        valueType = getConstantTypeOfHelperCall(value, context);\n      } else {\n        valueType = 0;\n      }\n      if (valueType === 0) {\n        return valueType;\n      }\n      if (valueType < returnType) {\n        returnType = valueType;\n      }\n    }\n  }\n  return returnType;\n}\nfunction getNodeProps(node) {\n  const codegenNode = node.codegenNode;\n  if (codegenNode.type === 13) {\n    return codegenNode.props;\n  }\n}\n\nfunction createTransformContext(root, {\n  filename = \"\",\n  prefixIdentifiers = false,\n  hoistStatic = false,\n  hmr = false,\n  cacheHandlers = false,\n  nodeTransforms = [],\n  directiveTransforms = {},\n  transformHoist = null,\n  isBuiltInComponent = NOOP,\n  isCustomElement = NOOP,\n  expressionPlugins = [],\n  scopeId = null,\n  slotted = true,\n  ssr = false,\n  inSSR = false,\n  ssrCssVars = ``,\n  bindingMetadata = EMPTY_OBJ,\n  inline = false,\n  isTS = false,\n  onError = defaultOnError,\n  onWarn = defaultOnWarn,\n  compatConfig\n}) {\n  const nameMatch = filename.replace(/\\?.*$/, \"\").match(/([^/\\\\]+)\\.\\w+$/);\n  const context = {\n    // options\n    filename,\n    selfName: nameMatch && capitalize(camelize(nameMatch[1])),\n    prefixIdentifiers,\n    hoistStatic,\n    hmr,\n    cacheHandlers,\n    nodeTransforms,\n    directiveTransforms,\n    transformHoist,\n    isBuiltInComponent,\n    isCustomElement,\n    expressionPlugins,\n    scopeId,\n    slotted,\n    ssr,\n    inSSR,\n    ssrCssVars,\n    bindingMetadata,\n    inline,\n    isTS,\n    onError,\n    onWarn,\n    compatConfig,\n    // state\n    root,\n    helpers: /* @__PURE__ */ new Map(),\n    components: /* @__PURE__ */ new Set(),\n    directives: /* @__PURE__ */ new Set(),\n    hoists: [],\n    imports: [],\n    cached: [],\n    constantCache: /* @__PURE__ */ new WeakMap(),\n    temps: 0,\n    identifiers: /* @__PURE__ */ Object.create(null),\n    scopes: {\n      vFor: 0,\n      vSlot: 0,\n      vPre: 0,\n      vOnce: 0\n    },\n    parent: null,\n    grandParent: null,\n    currentNode: root,\n    childIndex: 0,\n    inVOnce: false,\n    // methods\n    helper(name) {\n      const count = context.helpers.get(name) || 0;\n      context.helpers.set(name, count + 1);\n      return name;\n    },\n    removeHelper(name) {\n      const count = context.helpers.get(name);\n      if (count) {\n        const currentCount = count - 1;\n        if (!currentCount) {\n          context.helpers.delete(name);\n        } else {\n          context.helpers.set(name, currentCount);\n        }\n      }\n    },\n    helperString(name) {\n      return `_${helperNameMap[context.helper(name)]}`;\n    },\n    replaceNode(node) {\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        if (!context.currentNode) {\n          throw new Error(`Node being replaced is already removed.`);\n        }\n        if (!context.parent) {\n          throw new Error(`Cannot replace root node.`);\n        }\n      }\n      context.parent.children[context.childIndex] = context.currentNode = node;\n    },\n    removeNode(node) {\n      if (!!(process.env.NODE_ENV !== \"production\") && !context.parent) {\n        throw new Error(`Cannot remove root node.`);\n      }\n      const list = context.parent.children;\n      const removalIndex = node ? list.indexOf(node) : context.currentNode ? context.childIndex : -1;\n      if (!!(process.env.NODE_ENV !== \"production\") && removalIndex < 0) {\n        throw new Error(`node being removed is not a child of current parent`);\n      }\n      if (!node || node === context.currentNode) {\n        context.currentNode = null;\n        context.onNodeRemoved();\n      } else {\n        if (context.childIndex > removalIndex) {\n          context.childIndex--;\n          context.onNodeRemoved();\n        }\n      }\n      context.parent.children.splice(removalIndex, 1);\n    },\n    onNodeRemoved: NOOP,\n    addIdentifiers(exp) {\n    },\n    removeIdentifiers(exp) {\n    },\n    hoist(exp) {\n      if (isString(exp)) exp = createSimpleExpression(exp);\n      context.hoists.push(exp);\n      const identifier = createSimpleExpression(\n        `_hoisted_${context.hoists.length}`,\n        false,\n        exp.loc,\n        2\n      );\n      identifier.hoisted = exp;\n      return identifier;\n    },\n    cache(exp, isVNode = false) {\n      const cacheExp = createCacheExpression(\n        context.cached.length,\n        exp,\n        isVNode\n      );\n      context.cached.push(cacheExp);\n      return cacheExp;\n    }\n  };\n  {\n    context.filters = /* @__PURE__ */ new Set();\n  }\n  return context;\n}\nfunction transform(root, options) {\n  const context = createTransformContext(root, options);\n  traverseNode(root, context);\n  if (options.hoistStatic) {\n    cacheStatic(root, context);\n  }\n  if (!options.ssr) {\n    createRootCodegen(root, context);\n  }\n  root.helpers = /* @__PURE__ */ new Set([...context.helpers.keys()]);\n  root.components = [...context.components];\n  root.directives = [...context.directives];\n  root.imports = context.imports;\n  root.hoists = context.hoists;\n  root.temps = context.temps;\n  root.cached = context.cached;\n  root.transformed = true;\n  {\n    root.filters = [...context.filters];\n  }\n}\nfunction createRootCodegen(root, context) {\n  const { helper } = context;\n  const { children } = root;\n  if (children.length === 1) {\n    const child = children[0];\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\n      const codegenNode = child.codegenNode;\n      if (codegenNode.type === 13) {\n        convertToBlock(codegenNode, context);\n      }\n      root.codegenNode = codegenNode;\n    } else {\n      root.codegenNode = child;\n    }\n  } else if (children.length > 1) {\n    let patchFlag = 64;\n    if (!!(process.env.NODE_ENV !== \"production\") && children.filter((c) => c.type !== 3).length === 1) {\n      patchFlag |= 2048;\n    }\n    root.codegenNode = createVNodeCall(\n      context,\n      helper(FRAGMENT),\n      void 0,\n      root.children,\n      patchFlag,\n      void 0,\n      void 0,\n      true,\n      void 0,\n      false\n    );\n  } else ;\n}\nfunction traverseChildren(parent, context) {\n  let i = 0;\n  const nodeRemoved = () => {\n    i--;\n  };\n  for (; i < parent.children.length; i++) {\n    const child = parent.children[i];\n    if (isString(child)) continue;\n    context.grandParent = context.parent;\n    context.parent = parent;\n    context.childIndex = i;\n    context.onNodeRemoved = nodeRemoved;\n    traverseNode(child, context);\n  }\n}\nfunction traverseNode(node, context) {\n  context.currentNode = node;\n  const { nodeTransforms } = context;\n  const exitFns = [];\n  for (let i2 = 0; i2 < nodeTransforms.length; i2++) {\n    const onExit = nodeTransforms[i2](node, context);\n    if (onExit) {\n      if (isArray(onExit)) {\n        exitFns.push(...onExit);\n      } else {\n        exitFns.push(onExit);\n      }\n    }\n    if (!context.currentNode) {\n      return;\n    } else {\n      node = context.currentNode;\n    }\n  }\n  switch (node.type) {\n    case 3:\n      if (!context.ssr) {\n        context.helper(CREATE_COMMENT);\n      }\n      break;\n    case 5:\n      if (!context.ssr) {\n        context.helper(TO_DISPLAY_STRING);\n      }\n      break;\n    // for container types, further traverse downwards\n    case 9:\n      for (let i2 = 0; i2 < node.branches.length; i2++) {\n        traverseNode(node.branches[i2], context);\n      }\n      break;\n    case 10:\n    case 11:\n    case 1:\n    case 0:\n      traverseChildren(node, context);\n      break;\n  }\n  context.currentNode = node;\n  let i = exitFns.length;\n  while (i--) {\n    exitFns[i]();\n  }\n}\nfunction createStructuralDirectiveTransform(name, fn) {\n  const matches = isString(name) ? (n) => n === name : (n) => name.test(n);\n  return (node, context) => {\n    if (node.type === 1) {\n      const { props } = node;\n      if (node.tagType === 3 && props.some(isVSlot)) {\n        return;\n      }\n      const exitFns = [];\n      for (let i = 0; i < props.length; i++) {\n        const prop = props[i];\n        if (prop.type === 7 && matches(prop.name)) {\n          props.splice(i, 1);\n          i--;\n          const onExit = fn(node, prop, context);\n          if (onExit) exitFns.push(onExit);\n        }\n      }\n      return exitFns;\n    }\n  };\n}\n\nconst PURE_ANNOTATION = `/*@__PURE__*/`;\nconst aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\nfunction createCodegenContext(ast, {\n  mode = \"function\",\n  prefixIdentifiers = mode === \"module\",\n  sourceMap = false,\n  filename = `template.vue.html`,\n  scopeId = null,\n  optimizeImports = false,\n  runtimeGlobalName = `Vue`,\n  runtimeModuleName = `vue`,\n  ssrRuntimeModuleName = \"vue/server-renderer\",\n  ssr = false,\n  isTS = false,\n  inSSR = false\n}) {\n  const context = {\n    mode,\n    prefixIdentifiers,\n    sourceMap,\n    filename,\n    scopeId,\n    optimizeImports,\n    runtimeGlobalName,\n    runtimeModuleName,\n    ssrRuntimeModuleName,\n    ssr,\n    isTS,\n    inSSR,\n    source: ast.source,\n    code: ``,\n    column: 1,\n    line: 1,\n    offset: 0,\n    indentLevel: 0,\n    pure: false,\n    map: void 0,\n    helper(key) {\n      return `_${helperNameMap[key]}`;\n    },\n    push(code, newlineIndex = -2 /* None */, node) {\n      context.code += code;\n    },\n    indent() {\n      newline(++context.indentLevel);\n    },\n    deindent(withoutNewLine = false) {\n      if (withoutNewLine) {\n        --context.indentLevel;\n      } else {\n        newline(--context.indentLevel);\n      }\n    },\n    newline() {\n      newline(context.indentLevel);\n    }\n  };\n  function newline(n) {\n    context.push(\"\\n\" + `  `.repeat(n), 0 /* Start */);\n  }\n  return context;\n}\nfunction generate(ast, options = {}) {\n  const context = createCodegenContext(ast, options);\n  if (options.onContextCreated) options.onContextCreated(context);\n  const {\n    mode,\n    push,\n    prefixIdentifiers,\n    indent,\n    deindent,\n    newline,\n    scopeId,\n    ssr\n  } = context;\n  const helpers = Array.from(ast.helpers);\n  const hasHelpers = helpers.length > 0;\n  const useWithBlock = !prefixIdentifiers && mode !== \"module\";\n  const preambleContext = context;\n  {\n    genFunctionPreamble(ast, preambleContext);\n  }\n  const functionName = ssr ? `ssrRender` : `render`;\n  const args = ssr ? [\"_ctx\", \"_push\", \"_parent\", \"_attrs\"] : [\"_ctx\", \"_cache\"];\n  const signature = args.join(\", \");\n  {\n    push(`function ${functionName}(${signature}) {`);\n  }\n  indent();\n  if (useWithBlock) {\n    push(`with (_ctx) {`);\n    indent();\n    if (hasHelpers) {\n      push(\n        `const { ${helpers.map(aliasHelper).join(\", \")} } = _Vue\n`,\n        -1 /* End */\n      );\n      newline();\n    }\n  }\n  if (ast.components.length) {\n    genAssets(ast.components, \"component\", context);\n    if (ast.directives.length || ast.temps > 0) {\n      newline();\n    }\n  }\n  if (ast.directives.length) {\n    genAssets(ast.directives, \"directive\", context);\n    if (ast.temps > 0) {\n      newline();\n    }\n  }\n  if (ast.filters && ast.filters.length) {\n    newline();\n    genAssets(ast.filters, \"filter\", context);\n    newline();\n  }\n  if (ast.temps > 0) {\n    push(`let `);\n    for (let i = 0; i < ast.temps; i++) {\n      push(`${i > 0 ? `, ` : ``}_temp${i}`);\n    }\n  }\n  if (ast.components.length || ast.directives.length || ast.temps) {\n    push(`\n`, 0 /* Start */);\n    newline();\n  }\n  if (!ssr) {\n    push(`return `);\n  }\n  if (ast.codegenNode) {\n    genNode(ast.codegenNode, context);\n  } else {\n    push(`null`);\n  }\n  if (useWithBlock) {\n    deindent();\n    push(`}`);\n  }\n  deindent();\n  push(`}`);\n  return {\n    ast,\n    code: context.code,\n    preamble: ``,\n    map: context.map ? context.map.toJSON() : void 0\n  };\n}\nfunction genFunctionPreamble(ast, context) {\n  const {\n    ssr,\n    prefixIdentifiers,\n    push,\n    newline,\n    runtimeModuleName,\n    runtimeGlobalName,\n    ssrRuntimeModuleName\n  } = context;\n  const VueBinding = runtimeGlobalName;\n  const helpers = Array.from(ast.helpers);\n  if (helpers.length > 0) {\n    {\n      push(`const _Vue = ${VueBinding}\n`, -1 /* End */);\n      if (ast.hoists.length) {\n        const staticHelpers = [\n          CREATE_VNODE,\n          CREATE_ELEMENT_VNODE,\n          CREATE_COMMENT,\n          CREATE_TEXT,\n          CREATE_STATIC\n        ].filter((helper) => helpers.includes(helper)).map(aliasHelper).join(\", \");\n        push(`const { ${staticHelpers} } = _Vue\n`, -1 /* End */);\n      }\n    }\n  }\n  genHoists(ast.hoists, context);\n  newline();\n  push(`return `);\n}\nfunction genAssets(assets, type, { helper, push, newline, isTS }) {\n  const resolver = helper(\n    type === \"filter\" ? RESOLVE_FILTER : type === \"component\" ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE\n  );\n  for (let i = 0; i < assets.length; i++) {\n    let id = assets[i];\n    const maybeSelfReference = id.endsWith(\"__self\");\n    if (maybeSelfReference) {\n      id = id.slice(0, -6);\n    }\n    push(\n      `const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`\n    );\n    if (i < assets.length - 1) {\n      newline();\n    }\n  }\n}\nfunction genHoists(hoists, context) {\n  if (!hoists.length) {\n    return;\n  }\n  context.pure = true;\n  const { push, newline } = context;\n  newline();\n  for (let i = 0; i < hoists.length; i++) {\n    const exp = hoists[i];\n    if (exp) {\n      push(`const _hoisted_${i + 1} = `);\n      genNode(exp, context);\n      newline();\n    }\n  }\n  context.pure = false;\n}\nfunction isText(n) {\n  return isString(n) || n.type === 4 || n.type === 2 || n.type === 5 || n.type === 8;\n}\nfunction genNodeListAsArray(nodes, context) {\n  const multilines = nodes.length > 3 || !!(process.env.NODE_ENV !== \"production\") && nodes.some((n) => isArray(n) || !isText(n));\n  context.push(`[`);\n  multilines && context.indent();\n  genNodeList(nodes, context, multilines);\n  multilines && context.deindent();\n  context.push(`]`);\n}\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\n  const { push, newline } = context;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    if (isString(node)) {\n      push(node, -3 /* Unknown */);\n    } else if (isArray(node)) {\n      genNodeListAsArray(node, context);\n    } else {\n      genNode(node, context);\n    }\n    if (i < nodes.length - 1) {\n      if (multilines) {\n        comma && push(\",\");\n        newline();\n      } else {\n        comma && push(\", \");\n      }\n    }\n  }\n}\nfunction genNode(node, context) {\n  if (isString(node)) {\n    context.push(node, -3 /* Unknown */);\n    return;\n  }\n  if (isSymbol(node)) {\n    context.push(context.helper(node));\n    return;\n  }\n  switch (node.type) {\n    case 1:\n    case 9:\n    case 11:\n      !!(process.env.NODE_ENV !== \"production\") && assert(\n        node.codegenNode != null,\n        `Codegen node is missing for element/if/for node. Apply appropriate transforms first.`\n      );\n      genNode(node.codegenNode, context);\n      break;\n    case 2:\n      genText(node, context);\n      break;\n    case 4:\n      genExpression(node, context);\n      break;\n    case 5:\n      genInterpolation(node, context);\n      break;\n    case 12:\n      genNode(node.codegenNode, context);\n      break;\n    case 8:\n      genCompoundExpression(node, context);\n      break;\n    case 3:\n      genComment(node, context);\n      break;\n    case 13:\n      genVNodeCall(node, context);\n      break;\n    case 14:\n      genCallExpression(node, context);\n      break;\n    case 15:\n      genObjectExpression(node, context);\n      break;\n    case 17:\n      genArrayExpression(node, context);\n      break;\n    case 18:\n      genFunctionExpression(node, context);\n      break;\n    case 19:\n      genConditionalExpression(node, context);\n      break;\n    case 20:\n      genCacheExpression(node, context);\n      break;\n    case 21:\n      genNodeList(node.body, context, true, false);\n      break;\n    // SSR only types\n    case 22:\n      break;\n    case 23:\n      break;\n    case 24:\n      break;\n    case 25:\n      break;\n    case 26:\n      break;\n    /* v8 ignore start */\n    case 10:\n      break;\n    default:\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        assert(false, `unhandled codegen node type: ${node.type}`);\n        const exhaustiveCheck = node;\n        return exhaustiveCheck;\n      }\n  }\n}\nfunction genText(node, context) {\n  context.push(JSON.stringify(node.content), -3 /* Unknown */, node);\n}\nfunction genExpression(node, context) {\n  const { content, isStatic } = node;\n  context.push(\n    isStatic ? JSON.stringify(content) : content,\n    -3 /* Unknown */,\n    node\n  );\n}\nfunction genInterpolation(node, context) {\n  const { push, helper, pure } = context;\n  if (pure) push(PURE_ANNOTATION);\n  push(`${helper(TO_DISPLAY_STRING)}(`);\n  genNode(node.content, context);\n  push(`)`);\n}\nfunction genCompoundExpression(node, context) {\n  for (let i = 0; i < node.children.length; i++) {\n    const child = node.children[i];\n    if (isString(child)) {\n      context.push(child, -3 /* Unknown */);\n    } else {\n      genNode(child, context);\n    }\n  }\n}\nfunction genExpressionAsPropertyKey(node, context) {\n  const { push } = context;\n  if (node.type === 8) {\n    push(`[`);\n    genCompoundExpression(node, context);\n    push(`]`);\n  } else if (node.isStatic) {\n    const text = isSimpleIdentifier(node.content) ? node.content : JSON.stringify(node.content);\n    push(text, -2 /* None */, node);\n  } else {\n    push(`[${node.content}]`, -3 /* Unknown */, node);\n  }\n}\nfunction genComment(node, context) {\n  const { push, helper, pure } = context;\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  push(\n    `${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`,\n    -3 /* Unknown */,\n    node\n  );\n}\nfunction genVNodeCall(node, context) {\n  const { push, helper, pure } = context;\n  const {\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent\n  } = node;\n  let patchFlagString;\n  if (patchFlag) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      if (patchFlag < 0) {\n        patchFlagString = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`;\n      } else {\n        const flagNames = Object.keys(PatchFlagNames).map(Number).filter((n) => n > 0 && patchFlag & n).map((n) => PatchFlagNames[n]).join(`, `);\n        patchFlagString = patchFlag + ` /* ${flagNames} */`;\n      }\n    } else {\n      patchFlagString = String(patchFlag);\n    }\n  }\n  if (directives) {\n    push(helper(WITH_DIRECTIVES) + `(`);\n  }\n  if (isBlock) {\n    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\n  }\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  const callHelper = isBlock ? getVNodeBlockHelper(context.inSSR, isComponent) : getVNodeHelper(context.inSSR, isComponent);\n  push(helper(callHelper) + `(`, -2 /* None */, node);\n  genNodeList(\n    genNullableArgs([tag, props, children, patchFlagString, dynamicProps]),\n    context\n  );\n  push(`)`);\n  if (isBlock) {\n    push(`)`);\n  }\n  if (directives) {\n    push(`, `);\n    genNode(directives, context);\n    push(`)`);\n  }\n}\nfunction genNullableArgs(args) {\n  let i = args.length;\n  while (i--) {\n    if (args[i] != null) break;\n  }\n  return args.slice(0, i + 1).map((arg) => arg || `null`);\n}\nfunction genCallExpression(node, context) {\n  const { push, helper, pure } = context;\n  const callee = isString(node.callee) ? node.callee : helper(node.callee);\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n  push(callee + `(`, -2 /* None */, node);\n  genNodeList(node.arguments, context);\n  push(`)`);\n}\nfunction genObjectExpression(node, context) {\n  const { push, indent, deindent, newline } = context;\n  const { properties } = node;\n  if (!properties.length) {\n    push(`{}`, -2 /* None */, node);\n    return;\n  }\n  const multilines = properties.length > 1 || !!(process.env.NODE_ENV !== \"production\") && properties.some((p) => p.value.type !== 4);\n  push(multilines ? `{` : `{ `);\n  multilines && indent();\n  for (let i = 0; i < properties.length; i++) {\n    const { key, value } = properties[i];\n    genExpressionAsPropertyKey(key, context);\n    push(`: `);\n    genNode(value, context);\n    if (i < properties.length - 1) {\n      push(`,`);\n      newline();\n    }\n  }\n  multilines && deindent();\n  push(multilines ? `}` : ` }`);\n}\nfunction genArrayExpression(node, context) {\n  genNodeListAsArray(node.elements, context);\n}\nfunction genFunctionExpression(node, context) {\n  const { push, indent, deindent } = context;\n  const { params, returns, body, newline, isSlot } = node;\n  if (isSlot) {\n    push(`_${helperNameMap[WITH_CTX]}(`);\n  }\n  push(`(`, -2 /* None */, node);\n  if (isArray(params)) {\n    genNodeList(params, context);\n  } else if (params) {\n    genNode(params, context);\n  }\n  push(`) => `);\n  if (newline || body) {\n    push(`{`);\n    indent();\n  }\n  if (returns) {\n    if (newline) {\n      push(`return `);\n    }\n    if (isArray(returns)) {\n      genNodeListAsArray(returns, context);\n    } else {\n      genNode(returns, context);\n    }\n  } else if (body) {\n    genNode(body, context);\n  }\n  if (newline || body) {\n    deindent();\n    push(`}`);\n  }\n  if (isSlot) {\n    if (node.isNonScopedSlot) {\n      push(`, undefined, true`);\n    }\n    push(`)`);\n  }\n}\nfunction genConditionalExpression(node, context) {\n  const { test, consequent, alternate, newline: needNewline } = node;\n  const { push, indent, deindent, newline } = context;\n  if (test.type === 4) {\n    const needsParens = !isSimpleIdentifier(test.content);\n    needsParens && push(`(`);\n    genExpression(test, context);\n    needsParens && push(`)`);\n  } else {\n    push(`(`);\n    genNode(test, context);\n    push(`)`);\n  }\n  needNewline && indent();\n  context.indentLevel++;\n  needNewline || push(` `);\n  push(`? `);\n  genNode(consequent, context);\n  context.indentLevel--;\n  needNewline && newline();\n  needNewline || push(` `);\n  push(`: `);\n  const isNested = alternate.type === 19;\n  if (!isNested) {\n    context.indentLevel++;\n  }\n  genNode(alternate, context);\n  if (!isNested) {\n    context.indentLevel--;\n  }\n  needNewline && deindent(\n    true\n    /* without newline */\n  );\n}\nfunction genCacheExpression(node, context) {\n  const { push, helper, indent, deindent, newline } = context;\n  const { needPauseTracking, needArraySpread } = node;\n  if (needArraySpread) {\n    push(`[...(`);\n  }\n  push(`_cache[${node.index}] || (`);\n  if (needPauseTracking) {\n    indent();\n    push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\n    newline();\n    push(`(`);\n  }\n  push(`_cache[${node.index}] = `);\n  genNode(node.value, context);\n  if (needPauseTracking) {\n    push(`).cacheIndex = ${node.index},`);\n    newline();\n    push(`${helper(SET_BLOCK_TRACKING)}(1),`);\n    newline();\n    push(`_cache[${node.index}]`);\n    deindent();\n  }\n  push(`)`);\n  if (needArraySpread) {\n    push(`)]`);\n  }\n}\n\nconst prohibitedKeywordRE = new RegExp(\n  \"\\\\b\" + \"arguments,await,break,case,catch,class,const,continue,debugger,default,delete,do,else,export,extends,finally,for,function,if,import,let,new,return,super,switch,throw,try,var,void,while,with,yield\".split(\",\").join(\"\\\\b|\\\\b\") + \"\\\\b\"\n);\nconst stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\nfunction validateBrowserExpression(node, context, asParams = false, asRawStatements = false) {\n  const exp = node.content;\n  if (!exp.trim()) {\n    return;\n  }\n  try {\n    new Function(\n      asRawStatements ? ` ${exp} ` : `return ${asParams ? `(${exp}) => {}` : `(${exp})`}`\n    );\n  } catch (e) {\n    let message = e.message;\n    const keywordMatch = exp.replace(stripStringRE, \"\").match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      message = `avoid using JavaScript keyword as property name: \"${keywordMatch[0]}\"`;\n    }\n    context.onError(\n      createCompilerError(\n        45,\n        node.loc,\n        void 0,\n        message\n      )\n    );\n  }\n}\n\nconst transformExpression = (node, context) => {\n  if (node.type === 5) {\n    node.content = processExpression(\n      node.content,\n      context\n    );\n  } else if (node.type === 1) {\n    for (let i = 0; i < node.props.length; i++) {\n      const dir = node.props[i];\n      if (dir.type === 7 && dir.name !== \"for\") {\n        const exp = dir.exp;\n        const arg = dir.arg;\n        if (exp && exp.type === 4 && !(dir.name === \"on\" && arg)) {\n          dir.exp = processExpression(\n            exp,\n            context,\n            // slot args must be processed as function params\n            dir.name === \"slot\"\n          );\n        }\n        if (arg && arg.type === 4 && !arg.isStatic) {\n          dir.arg = processExpression(arg, context);\n        }\n      }\n    }\n  }\n};\nfunction processExpression(node, context, asParams = false, asRawStatements = false, localVars = Object.create(context.identifiers)) {\n  {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      validateBrowserExpression(node, context, asParams, asRawStatements);\n    }\n    return node;\n  }\n}\nfunction stringifyExpression(exp) {\n  if (isString(exp)) {\n    return exp;\n  } else if (exp.type === 4) {\n    return exp.content;\n  } else {\n    return exp.children.map(stringifyExpression).join(\"\");\n  }\n}\n\nconst transformIf = createStructuralDirectiveTransform(\n  /^(if|else|else-if)$/,\n  (node, dir, context) => {\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\n      const siblings = context.parent.children;\n      let i = siblings.indexOf(ifNode);\n      let key = 0;\n      while (i-- >= 0) {\n        const sibling = siblings[i];\n        if (sibling && sibling.type === 9) {\n          key += sibling.branches.length;\n        }\n      }\n      return () => {\n        if (isRoot) {\n          ifNode.codegenNode = createCodegenNodeForBranch(\n            branch,\n            key,\n            context\n          );\n        } else {\n          const parentCondition = getParentCondition(ifNode.codegenNode);\n          parentCondition.alternate = createCodegenNodeForBranch(\n            branch,\n            key + ifNode.branches.length - 1,\n            context\n          );\n        }\n      };\n    });\n  }\n);\nfunction processIf(node, dir, context, processCodegen) {\n  if (dir.name !== \"else\" && (!dir.exp || !dir.exp.content.trim())) {\n    const loc = dir.exp ? dir.exp.loc : node.loc;\n    context.onError(\n      createCompilerError(28, dir.loc)\n    );\n    dir.exp = createSimpleExpression(`true`, false, loc);\n  }\n  if (!!(process.env.NODE_ENV !== \"production\") && true && dir.exp) {\n    validateBrowserExpression(dir.exp, context);\n  }\n  if (dir.name === \"if\") {\n    const branch = createIfBranch(node, dir);\n    const ifNode = {\n      type: 9,\n      loc: node.loc,\n      branches: [branch]\n    };\n    context.replaceNode(ifNode);\n    if (processCodegen) {\n      return processCodegen(ifNode, branch, true);\n    }\n  } else {\n    const siblings = context.parent.children;\n    const comments = [];\n    let i = siblings.indexOf(node);\n    while (i-- >= -1) {\n      const sibling = siblings[i];\n      if (sibling && sibling.type === 3) {\n        context.removeNode(sibling);\n        !!(process.env.NODE_ENV !== \"production\") && comments.unshift(sibling);\n        continue;\n      }\n      if (sibling && sibling.type === 2 && !sibling.content.trim().length) {\n        context.removeNode(sibling);\n        continue;\n      }\n      if (sibling && sibling.type === 9) {\n        if (dir.name === \"else-if\" && sibling.branches[sibling.branches.length - 1].condition === void 0) {\n          context.onError(\n            createCompilerError(30, node.loc)\n          );\n        }\n        context.removeNode();\n        const branch = createIfBranch(node, dir);\n        if (!!(process.env.NODE_ENV !== \"production\") && comments.length && // #3619 ignore comments if the v-if is direct child of <transition>\n        !(context.parent && context.parent.type === 1 && (context.parent.tag === \"transition\" || context.parent.tag === \"Transition\"))) {\n          branch.children = [...comments, ...branch.children];\n        }\n        if (!!(process.env.NODE_ENV !== \"production\") || false) {\n          const key = branch.userKey;\n          if (key) {\n            sibling.branches.forEach(({ userKey }) => {\n              if (isSameKey(userKey, key)) {\n                context.onError(\n                  createCompilerError(\n                    29,\n                    branch.userKey.loc\n                  )\n                );\n              }\n            });\n          }\n        }\n        sibling.branches.push(branch);\n        const onExit = processCodegen && processCodegen(sibling, branch, false);\n        traverseNode(branch, context);\n        if (onExit) onExit();\n        context.currentNode = null;\n      } else {\n        context.onError(\n          createCompilerError(30, node.loc)\n        );\n      }\n      break;\n    }\n  }\n}\nfunction createIfBranch(node, dir) {\n  const isTemplateIf = node.tagType === 3;\n  return {\n    type: 10,\n    loc: node.loc,\n    condition: dir.name === \"else\" ? void 0 : dir.exp,\n    children: isTemplateIf && !findDir(node, \"for\") ? node.children : [node],\n    userKey: findProp(node, `key`),\n    isTemplateIf\n  };\n}\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\n  if (branch.condition) {\n    return createConditionalExpression(\n      branch.condition,\n      createChildrenCodegenNode(branch, keyIndex, context),\n      // make sure to pass in asBlock: true so that the comment node call\n      // closes the current block.\n      createCallExpression(context.helper(CREATE_COMMENT), [\n        !!(process.env.NODE_ENV !== \"production\") ? '\"v-if\"' : '\"\"',\n        \"true\"\n      ])\n    );\n  } else {\n    return createChildrenCodegenNode(branch, keyIndex, context);\n  }\n}\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\n  const { helper } = context;\n  const keyProperty = createObjectProperty(\n    `key`,\n    createSimpleExpression(\n      `${keyIndex}`,\n      false,\n      locStub,\n      2\n    )\n  );\n  const { children } = branch;\n  const firstChild = children[0];\n  const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1;\n  if (needFragmentWrapper) {\n    if (children.length === 1 && firstChild.type === 11) {\n      const vnodeCall = firstChild.codegenNode;\n      injectProp(vnodeCall, keyProperty, context);\n      return vnodeCall;\n    } else {\n      let patchFlag = 64;\n      if (!!(process.env.NODE_ENV !== \"production\") && !branch.isTemplateIf && children.filter((c) => c.type !== 3).length === 1) {\n        patchFlag |= 2048;\n      }\n      return createVNodeCall(\n        context,\n        helper(FRAGMENT),\n        createObjectExpression([keyProperty]),\n        children,\n        patchFlag,\n        void 0,\n        void 0,\n        true,\n        false,\n        false,\n        branch.loc\n      );\n    }\n  } else {\n    const ret = firstChild.codegenNode;\n    const vnodeCall = getMemoedVNodeCall(ret);\n    if (vnodeCall.type === 13) {\n      convertToBlock(vnodeCall, context);\n    }\n    injectProp(vnodeCall, keyProperty, context);\n    return ret;\n  }\n}\nfunction isSameKey(a, b) {\n  if (!a || a.type !== b.type) {\n    return false;\n  }\n  if (a.type === 6) {\n    if (a.value.content !== b.value.content) {\n      return false;\n    }\n  } else {\n    const exp = a.exp;\n    const branchExp = b.exp;\n    if (exp.type !== branchExp.type) {\n      return false;\n    }\n    if (exp.type !== 4 || exp.isStatic !== branchExp.isStatic || exp.content !== branchExp.content) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction getParentCondition(node) {\n  while (true) {\n    if (node.type === 19) {\n      if (node.alternate.type === 19) {\n        node = node.alternate;\n      } else {\n        return node;\n      }\n    } else if (node.type === 20) {\n      node = node.value;\n    }\n  }\n}\n\nconst transformBind = (dir, _node, context) => {\n  const { modifiers, loc } = dir;\n  const arg = dir.arg;\n  let { exp } = dir;\n  if (exp && exp.type === 4 && !exp.content.trim()) {\n    {\n      exp = void 0;\n    }\n  }\n  if (!exp) {\n    if (arg.type !== 4 || !arg.isStatic) {\n      context.onError(\n        createCompilerError(\n          52,\n          arg.loc\n        )\n      );\n      return {\n        props: [\n          createObjectProperty(arg, createSimpleExpression(\"\", true, loc))\n        ]\n      };\n    }\n    transformBindShorthand(dir);\n    exp = dir.exp;\n  }\n  if (arg.type !== 4) {\n    arg.children.unshift(`(`);\n    arg.children.push(`) || \"\"`);\n  } else if (!arg.isStatic) {\n    arg.content = `${arg.content} || \"\"`;\n  }\n  if (modifiers.some((mod) => mod.content === \"camel\")) {\n    if (arg.type === 4) {\n      if (arg.isStatic) {\n        arg.content = camelize(arg.content);\n      } else {\n        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\n      }\n    } else {\n      arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\n      arg.children.push(`)`);\n    }\n  }\n  if (!context.inSSR) {\n    if (modifiers.some((mod) => mod.content === \"prop\")) {\n      injectPrefix(arg, \".\");\n    }\n    if (modifiers.some((mod) => mod.content === \"attr\")) {\n      injectPrefix(arg, \"^\");\n    }\n  }\n  return {\n    props: [createObjectProperty(arg, exp)]\n  };\n};\nconst transformBindShorthand = (dir, context) => {\n  const arg = dir.arg;\n  const propName = camelize(arg.content);\n  dir.exp = createSimpleExpression(propName, false, arg.loc);\n};\nconst injectPrefix = (arg, prefix) => {\n  if (arg.type === 4) {\n    if (arg.isStatic) {\n      arg.content = prefix + arg.content;\n    } else {\n      arg.content = `\\`${prefix}\\${${arg.content}}\\``;\n    }\n  } else {\n    arg.children.unshift(`'${prefix}' + (`);\n    arg.children.push(`)`);\n  }\n};\n\nconst transformFor = createStructuralDirectiveTransform(\n  \"for\",\n  (node, dir, context) => {\n    const { helper, removeHelper } = context;\n    return processFor(node, dir, context, (forNode) => {\n      const renderExp = createCallExpression(helper(RENDER_LIST), [\n        forNode.source\n      ]);\n      const isTemplate = isTemplateNode(node);\n      const memo = findDir(node, \"memo\");\n      const keyProp = findProp(node, `key`, false, true);\n      if (keyProp && keyProp.type === 7 && !keyProp.exp) {\n        transformBindShorthand(keyProp);\n      }\n      const keyExp = keyProp && (keyProp.type === 6 ? keyProp.value ? createSimpleExpression(keyProp.value.content, true) : void 0 : keyProp.exp);\n      const keyProperty = keyProp && keyExp ? createObjectProperty(`key`, keyExp) : null;\n      const isStableFragment = forNode.source.type === 4 && forNode.source.constType > 0;\n      const fragmentFlag = isStableFragment ? 64 : keyProp ? 128 : 256;\n      forNode.codegenNode = createVNodeCall(\n        context,\n        helper(FRAGMENT),\n        void 0,\n        renderExp,\n        fragmentFlag,\n        void 0,\n        void 0,\n        true,\n        !isStableFragment,\n        false,\n        node.loc\n      );\n      return () => {\n        let childBlock;\n        const { children } = forNode;\n        if ((!!(process.env.NODE_ENV !== \"production\") || false) && isTemplate) {\n          node.children.some((c) => {\n            if (c.type === 1) {\n              const key = findProp(c, \"key\");\n              if (key) {\n                context.onError(\n                  createCompilerError(\n                    33,\n                    key.loc\n                  )\n                );\n                return true;\n              }\n            }\n          });\n        }\n        const needFragmentWrapper = children.length !== 1 || children[0].type !== 1;\n        const slotOutlet = isSlotOutlet(node) ? node : isTemplate && node.children.length === 1 && isSlotOutlet(node.children[0]) ? node.children[0] : null;\n        if (slotOutlet) {\n          childBlock = slotOutlet.codegenNode;\n          if (isTemplate && keyProperty) {\n            injectProp(childBlock, keyProperty, context);\n          }\n        } else if (needFragmentWrapper) {\n          childBlock = createVNodeCall(\n            context,\n            helper(FRAGMENT),\n            keyProperty ? createObjectExpression([keyProperty]) : void 0,\n            node.children,\n            64,\n            void 0,\n            void 0,\n            true,\n            void 0,\n            false\n          );\n        } else {\n          childBlock = children[0].codegenNode;\n          if (isTemplate && keyProperty) {\n            injectProp(childBlock, keyProperty, context);\n          }\n          if (childBlock.isBlock !== !isStableFragment) {\n            if (childBlock.isBlock) {\n              removeHelper(OPEN_BLOCK);\n              removeHelper(\n                getVNodeBlockHelper(context.inSSR, childBlock.isComponent)\n              );\n            } else {\n              removeHelper(\n                getVNodeHelper(context.inSSR, childBlock.isComponent)\n              );\n            }\n          }\n          childBlock.isBlock = !isStableFragment;\n          if (childBlock.isBlock) {\n            helper(OPEN_BLOCK);\n            helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n          } else {\n            helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n          }\n        }\n        if (memo) {\n          const loop = createFunctionExpression(\n            createForLoopParams(forNode.parseResult, [\n              createSimpleExpression(`_cached`)\n            ])\n          );\n          loop.body = createBlockStatement([\n            createCompoundExpression([`const _memo = (`, memo.exp, `)`]),\n            createCompoundExpression([\n              `if (_cached`,\n              ...keyExp ? [` && _cached.key === `, keyExp] : [],\n              ` && ${context.helperString(\n                IS_MEMO_SAME\n              )}(_cached, _memo)) return _cached`\n            ]),\n            createCompoundExpression([`const _item = `, childBlock]),\n            createSimpleExpression(`_item.memo = _memo`),\n            createSimpleExpression(`return _item`)\n          ]);\n          renderExp.arguments.push(\n            loop,\n            createSimpleExpression(`_cache`),\n            createSimpleExpression(String(context.cached.length))\n          );\n          context.cached.push(null);\n        } else {\n          renderExp.arguments.push(\n            createFunctionExpression(\n              createForLoopParams(forNode.parseResult),\n              childBlock,\n              true\n            )\n          );\n        }\n      };\n    });\n  }\n);\nfunction processFor(node, dir, context, processCodegen) {\n  if (!dir.exp) {\n    context.onError(\n      createCompilerError(31, dir.loc)\n    );\n    return;\n  }\n  const parseResult = dir.forParseResult;\n  if (!parseResult) {\n    context.onError(\n      createCompilerError(32, dir.loc)\n    );\n    return;\n  }\n  finalizeForParseResult(parseResult, context);\n  const { addIdentifiers, removeIdentifiers, scopes } = context;\n  const { source, value, key, index } = parseResult;\n  const forNode = {\n    type: 11,\n    loc: dir.loc,\n    source,\n    valueAlias: value,\n    keyAlias: key,\n    objectIndexAlias: index,\n    parseResult,\n    children: isTemplateNode(node) ? node.children : [node]\n  };\n  context.replaceNode(forNode);\n  scopes.vFor++;\n  const onExit = processCodegen && processCodegen(forNode);\n  return () => {\n    scopes.vFor--;\n    if (onExit) onExit();\n  };\n}\nfunction finalizeForParseResult(result, context) {\n  if (result.finalized) return;\n  if (!!(process.env.NODE_ENV !== \"production\") && true) {\n    validateBrowserExpression(result.source, context);\n    if (result.key) {\n      validateBrowserExpression(\n        result.key,\n        context,\n        true\n      );\n    }\n    if (result.index) {\n      validateBrowserExpression(\n        result.index,\n        context,\n        true\n      );\n    }\n    if (result.value) {\n      validateBrowserExpression(\n        result.value,\n        context,\n        true\n      );\n    }\n  }\n  result.finalized = true;\n}\nfunction createForLoopParams({ value, key, index }, memoArgs = []) {\n  return createParamsList([value, key, index, ...memoArgs]);\n}\nfunction createParamsList(args) {\n  let i = args.length;\n  while (i--) {\n    if (args[i]) break;\n  }\n  return args.slice(0, i + 1).map((arg, i2) => arg || createSimpleExpression(`_`.repeat(i2 + 1), false));\n}\n\nconst defaultFallback = createSimpleExpression(`undefined`, false);\nconst trackSlotScopes = (node, context) => {\n  if (node.type === 1 && (node.tagType === 1 || node.tagType === 3)) {\n    const vSlot = findDir(node, \"slot\");\n    if (vSlot) {\n      vSlot.exp;\n      context.scopes.vSlot++;\n      return () => {\n        context.scopes.vSlot--;\n      };\n    }\n  }\n};\nconst trackVForSlotScopes = (node, context) => {\n  let vFor;\n  if (isTemplateNode(node) && node.props.some(isVSlot) && (vFor = findDir(node, \"for\"))) {\n    const result = vFor.forParseResult;\n    if (result) {\n      finalizeForParseResult(result, context);\n      const { value, key, index } = result;\n      const { addIdentifiers, removeIdentifiers } = context;\n      value && addIdentifiers(value);\n      key && addIdentifiers(key);\n      index && addIdentifiers(index);\n      return () => {\n        value && removeIdentifiers(value);\n        key && removeIdentifiers(key);\n        index && removeIdentifiers(index);\n      };\n    }\n  }\n};\nconst buildClientSlotFn = (props, _vForExp, children, loc) => createFunctionExpression(\n  props,\n  children,\n  false,\n  true,\n  children.length ? children[0].loc : loc\n);\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\n  context.helper(WITH_CTX);\n  const { children, loc } = node;\n  const slotsProperties = [];\n  const dynamicSlots = [];\n  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\n  const onComponentSlot = findDir(node, \"slot\", true);\n  if (onComponentSlot) {\n    const { arg, exp } = onComponentSlot;\n    if (arg && !isStaticExp(arg)) {\n      hasDynamicSlots = true;\n    }\n    slotsProperties.push(\n      createObjectProperty(\n        arg || createSimpleExpression(\"default\", true),\n        buildSlotFn(exp, void 0, children, loc)\n      )\n    );\n  }\n  let hasTemplateSlots = false;\n  let hasNamedDefaultSlot = false;\n  const implicitDefaultChildren = [];\n  const seenSlotNames = /* @__PURE__ */ new Set();\n  let conditionalBranchIndex = 0;\n  for (let i = 0; i < children.length; i++) {\n    const slotElement = children[i];\n    let slotDir;\n    if (!isTemplateNode(slotElement) || !(slotDir = findDir(slotElement, \"slot\", true))) {\n      if (slotElement.type !== 3) {\n        implicitDefaultChildren.push(slotElement);\n      }\n      continue;\n    }\n    if (onComponentSlot) {\n      context.onError(\n        createCompilerError(37, slotDir.loc)\n      );\n      break;\n    }\n    hasTemplateSlots = true;\n    const { children: slotChildren, loc: slotLoc } = slotElement;\n    const {\n      arg: slotName = createSimpleExpression(`default`, true),\n      exp: slotProps,\n      loc: dirLoc\n    } = slotDir;\n    let staticSlotName;\n    if (isStaticExp(slotName)) {\n      staticSlotName = slotName ? slotName.content : `default`;\n    } else {\n      hasDynamicSlots = true;\n    }\n    const vFor = findDir(slotElement, \"for\");\n    const slotFunction = buildSlotFn(slotProps, vFor, slotChildren, slotLoc);\n    let vIf;\n    let vElse;\n    if (vIf = findDir(slotElement, \"if\")) {\n      hasDynamicSlots = true;\n      dynamicSlots.push(\n        createConditionalExpression(\n          vIf.exp,\n          buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++),\n          defaultFallback\n        )\n      );\n    } else if (vElse = findDir(\n      slotElement,\n      /^else(-if)?$/,\n      true\n      /* allowEmpty */\n    )) {\n      let j = i;\n      let prev;\n      while (j--) {\n        prev = children[j];\n        if (prev.type !== 3) {\n          break;\n        }\n      }\n      if (prev && isTemplateNode(prev) && findDir(prev, /^(else-)?if$/)) {\n        let conditional = dynamicSlots[dynamicSlots.length - 1];\n        while (conditional.alternate.type === 19) {\n          conditional = conditional.alternate;\n        }\n        conditional.alternate = vElse.exp ? createConditionalExpression(\n          vElse.exp,\n          buildDynamicSlot(\n            slotName,\n            slotFunction,\n            conditionalBranchIndex++\n          ),\n          defaultFallback\n        ) : buildDynamicSlot(slotName, slotFunction, conditionalBranchIndex++);\n      } else {\n        context.onError(\n          createCompilerError(30, vElse.loc)\n        );\n      }\n    } else if (vFor) {\n      hasDynamicSlots = true;\n      const parseResult = vFor.forParseResult;\n      if (parseResult) {\n        finalizeForParseResult(parseResult, context);\n        dynamicSlots.push(\n          createCallExpression(context.helper(RENDER_LIST), [\n            parseResult.source,\n            createFunctionExpression(\n              createForLoopParams(parseResult),\n              buildDynamicSlot(slotName, slotFunction),\n              true\n            )\n          ])\n        );\n      } else {\n        context.onError(\n          createCompilerError(\n            32,\n            vFor.loc\n          )\n        );\n      }\n    } else {\n      if (staticSlotName) {\n        if (seenSlotNames.has(staticSlotName)) {\n          context.onError(\n            createCompilerError(\n              38,\n              dirLoc\n            )\n          );\n          continue;\n        }\n        seenSlotNames.add(staticSlotName);\n        if (staticSlotName === \"default\") {\n          hasNamedDefaultSlot = true;\n        }\n      }\n      slotsProperties.push(createObjectProperty(slotName, slotFunction));\n    }\n  }\n  if (!onComponentSlot) {\n    const buildDefaultSlotProperty = (props, children2) => {\n      const fn = buildSlotFn(props, void 0, children2, loc);\n      if (context.compatConfig) {\n        fn.isNonScopedSlot = true;\n      }\n      return createObjectProperty(`default`, fn);\n    };\n    if (!hasTemplateSlots) {\n      slotsProperties.push(buildDefaultSlotProperty(void 0, children));\n    } else if (implicitDefaultChildren.length && // #3766\n    // with whitespace: 'preserve', whitespaces between slots will end up in\n    // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\n    implicitDefaultChildren.some((node2) => isNonWhitespaceContent(node2))) {\n      if (hasNamedDefaultSlot) {\n        context.onError(\n          createCompilerError(\n            39,\n            implicitDefaultChildren[0].loc\n          )\n        );\n      } else {\n        slotsProperties.push(\n          buildDefaultSlotProperty(void 0, implicitDefaultChildren)\n        );\n      }\n    }\n  }\n  const slotFlag = hasDynamicSlots ? 2 : hasForwardedSlots(node.children) ? 3 : 1;\n  let slots = createObjectExpression(\n    slotsProperties.concat(\n      createObjectProperty(\n        `_`,\n        // 2 = compiled but dynamic = can skip normalization, but must run diff\n        // 1 = compiled and static = can skip normalization AND diff as optimized\n        createSimpleExpression(\n          slotFlag + (!!(process.env.NODE_ENV !== \"production\") ? ` /* ${slotFlagsText[slotFlag]} */` : ``),\n          false\n        )\n      )\n    ),\n    loc\n  );\n  if (dynamicSlots.length) {\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [\n      slots,\n      createArrayExpression(dynamicSlots)\n    ]);\n  }\n  return {\n    slots,\n    hasDynamicSlots\n  };\n}\nfunction buildDynamicSlot(name, fn, index) {\n  const props = [\n    createObjectProperty(`name`, name),\n    createObjectProperty(`fn`, fn)\n  ];\n  if (index != null) {\n    props.push(\n      createObjectProperty(`key`, createSimpleExpression(String(index), true))\n    );\n  }\n  return createObjectExpression(props);\n}\nfunction hasForwardedSlots(children) {\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    switch (child.type) {\n      case 1:\n        if (child.tagType === 2 || hasForwardedSlots(child.children)) {\n          return true;\n        }\n        break;\n      case 9:\n        if (hasForwardedSlots(child.branches)) return true;\n        break;\n      case 10:\n      case 11:\n        if (hasForwardedSlots(child.children)) return true;\n        break;\n    }\n  }\n  return false;\n}\nfunction isNonWhitespaceContent(node) {\n  if (node.type !== 2 && node.type !== 12)\n    return true;\n  return node.type === 2 ? !!node.content.trim() : isNonWhitespaceContent(node.content);\n}\n\nconst directiveImportMap = /* @__PURE__ */ new WeakMap();\nconst transformElement = (node, context) => {\n  return function postTransformElement() {\n    node = context.currentNode;\n    if (!(node.type === 1 && (node.tagType === 0 || node.tagType === 1))) {\n      return;\n    }\n    const { tag, props } = node;\n    const isComponent = node.tagType === 1;\n    let vnodeTag = isComponent ? resolveComponentType(node, context) : `\"${tag}\"`;\n    const isDynamicComponent = isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\n    let vnodeProps;\n    let vnodeChildren;\n    let patchFlag = 0;\n    let vnodeDynamicProps;\n    let dynamicPropNames;\n    let vnodeDirectives;\n    let shouldUseBlock = (\n      // dynamic component may resolve to plain elements\n      isDynamicComponent || vnodeTag === TELEPORT || vnodeTag === SUSPENSE || !isComponent && // <svg> and <foreignObject> must be forced into blocks so that block\n      // updates inside get proper isSVG flag at runtime. (#639, #643)\n      // This is technically web-specific, but splitting the logic out of core\n      // leads to too much unnecessary complexity.\n      (tag === \"svg\" || tag === \"foreignObject\" || tag === \"math\")\n    );\n    if (props.length > 0) {\n      const propsBuildResult = buildProps(\n        node,\n        context,\n        void 0,\n        isComponent,\n        isDynamicComponent\n      );\n      vnodeProps = propsBuildResult.props;\n      patchFlag = propsBuildResult.patchFlag;\n      dynamicPropNames = propsBuildResult.dynamicPropNames;\n      const directives = propsBuildResult.directives;\n      vnodeDirectives = directives && directives.length ? createArrayExpression(\n        directives.map((dir) => buildDirectiveArgs(dir, context))\n      ) : void 0;\n      if (propsBuildResult.shouldUseBlock) {\n        shouldUseBlock = true;\n      }\n    }\n    if (node.children.length > 0) {\n      if (vnodeTag === KEEP_ALIVE) {\n        shouldUseBlock = true;\n        patchFlag |= 1024;\n        if (!!(process.env.NODE_ENV !== \"production\") && node.children.length > 1) {\n          context.onError(\n            createCompilerError(46, {\n              start: node.children[0].loc.start,\n              end: node.children[node.children.length - 1].loc.end,\n              source: \"\"\n            })\n          );\n        }\n      }\n      const shouldBuildAsSlots = isComponent && // Teleport is not a real component and has dedicated runtime handling\n      vnodeTag !== TELEPORT && // explained above.\n      vnodeTag !== KEEP_ALIVE;\n      if (shouldBuildAsSlots) {\n        const { slots, hasDynamicSlots } = buildSlots(node, context);\n        vnodeChildren = slots;\n        if (hasDynamicSlots) {\n          patchFlag |= 1024;\n        }\n      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\n        const child = node.children[0];\n        const type = child.type;\n        const hasDynamicTextChild = type === 5 || type === 8;\n        if (hasDynamicTextChild && getConstantType(child, context) === 0) {\n          patchFlag |= 1;\n        }\n        if (hasDynamicTextChild || type === 2) {\n          vnodeChildren = child;\n        } else {\n          vnodeChildren = node.children;\n        }\n      } else {\n        vnodeChildren = node.children;\n      }\n    }\n    if (dynamicPropNames && dynamicPropNames.length) {\n      vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\n    }\n    node.codegenNode = createVNodeCall(\n      context,\n      vnodeTag,\n      vnodeProps,\n      vnodeChildren,\n      patchFlag === 0 ? void 0 : patchFlag,\n      vnodeDynamicProps,\n      vnodeDirectives,\n      !!shouldUseBlock,\n      false,\n      isComponent,\n      node.loc\n    );\n  };\n};\nfunction resolveComponentType(node, context, ssr = false) {\n  let { tag } = node;\n  const isExplicitDynamic = isComponentTag(tag);\n  const isProp = findProp(\n    node,\n    \"is\",\n    false,\n    true\n    /* allow empty */\n  );\n  if (isProp) {\n    if (isExplicitDynamic || isCompatEnabled(\n      \"COMPILER_IS_ON_ELEMENT\",\n      context\n    )) {\n      let exp;\n      if (isProp.type === 6) {\n        exp = isProp.value && createSimpleExpression(isProp.value.content, true);\n      } else {\n        exp = isProp.exp;\n        if (!exp) {\n          exp = createSimpleExpression(`is`, false, isProp.arg.loc);\n        }\n      }\n      if (exp) {\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\n          exp\n        ]);\n      }\n    } else if (isProp.type === 6 && isProp.value.content.startsWith(\"vue:\")) {\n      tag = isProp.value.content.slice(4);\n    }\n  }\n  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\n  if (builtIn) {\n    if (!ssr) context.helper(builtIn);\n    return builtIn;\n  }\n  context.helper(RESOLVE_COMPONENT);\n  context.components.add(tag);\n  return toValidAssetId(tag, `component`);\n}\nfunction buildProps(node, context, props = node.props, isComponent, isDynamicComponent, ssr = false) {\n  const { tag, loc: elementLoc, children } = node;\n  let properties = [];\n  const mergeArgs = [];\n  const runtimeDirectives = [];\n  const hasChildren = children.length > 0;\n  let shouldUseBlock = false;\n  let patchFlag = 0;\n  let hasRef = false;\n  let hasClassBinding = false;\n  let hasStyleBinding = false;\n  let hasHydrationEventBinding = false;\n  let hasDynamicKeys = false;\n  let hasVnodeHook = false;\n  const dynamicPropNames = [];\n  const pushMergeArg = (arg) => {\n    if (properties.length) {\n      mergeArgs.push(\n        createObjectExpression(dedupeProperties(properties), elementLoc)\n      );\n      properties = [];\n    }\n    if (arg) mergeArgs.push(arg);\n  };\n  const pushRefVForMarker = () => {\n    if (context.scopes.vFor > 0) {\n      properties.push(\n        createObjectProperty(\n          createSimpleExpression(\"ref_for\", true),\n          createSimpleExpression(\"true\")\n        )\n      );\n    }\n  };\n  const analyzePatchFlag = ({ key, value }) => {\n    if (isStaticExp(key)) {\n      const name = key.content;\n      const isEventHandler = isOn(name);\n      if (isEventHandler && (!isComponent || isDynamicComponent) && // omit the flag for click handlers because hydration gives click\n      // dedicated fast path.\n      name.toLowerCase() !== \"onclick\" && // omit v-model handlers\n      name !== \"onUpdate:modelValue\" && // omit onVnodeXXX hooks\n      !isReservedProp(name)) {\n        hasHydrationEventBinding = true;\n      }\n      if (isEventHandler && isReservedProp(name)) {\n        hasVnodeHook = true;\n      }\n      if (isEventHandler && value.type === 14) {\n        value = value.arguments[0];\n      }\n      if (value.type === 20 || (value.type === 4 || value.type === 8) && getConstantType(value, context) > 0) {\n        return;\n      }\n      if (name === \"ref\") {\n        hasRef = true;\n      } else if (name === \"class\") {\n        hasClassBinding = true;\n      } else if (name === \"style\") {\n        hasStyleBinding = true;\n      } else if (name !== \"key\" && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n      if (isComponent && (name === \"class\" || name === \"style\") && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n    } else {\n      hasDynamicKeys = true;\n    }\n  };\n  for (let i = 0; i < props.length; i++) {\n    const prop = props[i];\n    if (prop.type === 6) {\n      const { loc, name, nameLoc, value } = prop;\n      let isStatic = true;\n      if (name === \"ref\") {\n        hasRef = true;\n        pushRefVForMarker();\n      }\n      if (name === \"is\" && (isComponentTag(tag) || value && value.content.startsWith(\"vue:\") || isCompatEnabled(\n        \"COMPILER_IS_ON_ELEMENT\",\n        context\n      ))) {\n        continue;\n      }\n      properties.push(\n        createObjectProperty(\n          createSimpleExpression(name, true, nameLoc),\n          createSimpleExpression(\n            value ? value.content : \"\",\n            isStatic,\n            value ? value.loc : loc\n          )\n        )\n      );\n    } else {\n      const { name, arg, exp, loc, modifiers } = prop;\n      const isVBind = name === \"bind\";\n      const isVOn = name === \"on\";\n      if (name === \"slot\") {\n        if (!isComponent) {\n          context.onError(\n            createCompilerError(40, loc)\n          );\n        }\n        continue;\n      }\n      if (name === \"once\" || name === \"memo\") {\n        continue;\n      }\n      if (name === \"is\" || isVBind && isStaticArgOf(arg, \"is\") && (isComponentTag(tag) || isCompatEnabled(\n        \"COMPILER_IS_ON_ELEMENT\",\n        context\n      ))) {\n        continue;\n      }\n      if (isVOn && ssr) {\n        continue;\n      }\n      if (\n        // #938: elements with dynamic keys should be forced into blocks\n        isVBind && isStaticArgOf(arg, \"key\") || // inline before-update hooks need to force block so that it is invoked\n        // before children\n        isVOn && hasChildren && isStaticArgOf(arg, \"vue:before-update\")\n      ) {\n        shouldUseBlock = true;\n      }\n      if (isVBind && isStaticArgOf(arg, \"ref\")) {\n        pushRefVForMarker();\n      }\n      if (!arg && (isVBind || isVOn)) {\n        hasDynamicKeys = true;\n        if (exp) {\n          if (isVBind) {\n            pushRefVForMarker();\n            pushMergeArg();\n            {\n              if (!!(process.env.NODE_ENV !== \"production\")) {\n                const hasOverridableKeys = mergeArgs.some((arg2) => {\n                  if (arg2.type === 15) {\n                    return arg2.properties.some(({ key }) => {\n                      if (key.type !== 4 || !key.isStatic) {\n                        return true;\n                      }\n                      return key.content !== \"class\" && key.content !== \"style\" && !isOn(key.content);\n                    });\n                  } else {\n                    return true;\n                  }\n                });\n                if (hasOverridableKeys) {\n                  checkCompatEnabled(\n                    \"COMPILER_V_BIND_OBJECT_ORDER\",\n                    context,\n                    loc\n                  );\n                }\n              }\n              if (isCompatEnabled(\n                \"COMPILER_V_BIND_OBJECT_ORDER\",\n                context\n              )) {\n                mergeArgs.unshift(exp);\n                continue;\n              }\n            }\n            mergeArgs.push(exp);\n          } else {\n            pushMergeArg({\n              type: 14,\n              loc,\n              callee: context.helper(TO_HANDLERS),\n              arguments: isComponent ? [exp] : [exp, `true`]\n            });\n          }\n        } else {\n          context.onError(\n            createCompilerError(\n              isVBind ? 34 : 35,\n              loc\n            )\n          );\n        }\n        continue;\n      }\n      if (isVBind && modifiers.some((mod) => mod.content === \"prop\")) {\n        patchFlag |= 32;\n      }\n      const directiveTransform = context.directiveTransforms[name];\n      if (directiveTransform) {\n        const { props: props2, needRuntime } = directiveTransform(prop, node, context);\n        !ssr && props2.forEach(analyzePatchFlag);\n        if (isVOn && arg && !isStaticExp(arg)) {\n          pushMergeArg(createObjectExpression(props2, elementLoc));\n        } else {\n          properties.push(...props2);\n        }\n        if (needRuntime) {\n          runtimeDirectives.push(prop);\n          if (isSymbol(needRuntime)) {\n            directiveImportMap.set(prop, needRuntime);\n          }\n        }\n      } else if (!isBuiltInDirective(name)) {\n        runtimeDirectives.push(prop);\n        if (hasChildren) {\n          shouldUseBlock = true;\n        }\n      }\n    }\n  }\n  let propsExpression = void 0;\n  if (mergeArgs.length) {\n    pushMergeArg();\n    if (mergeArgs.length > 1) {\n      propsExpression = createCallExpression(\n        context.helper(MERGE_PROPS),\n        mergeArgs,\n        elementLoc\n      );\n    } else {\n      propsExpression = mergeArgs[0];\n    }\n  } else if (properties.length) {\n    propsExpression = createObjectExpression(\n      dedupeProperties(properties),\n      elementLoc\n    );\n  }\n  if (hasDynamicKeys) {\n    patchFlag |= 16;\n  } else {\n    if (hasClassBinding && !isComponent) {\n      patchFlag |= 2;\n    }\n    if (hasStyleBinding && !isComponent) {\n      patchFlag |= 4;\n    }\n    if (dynamicPropNames.length) {\n      patchFlag |= 8;\n    }\n    if (hasHydrationEventBinding) {\n      patchFlag |= 32;\n    }\n  }\n  if (!shouldUseBlock && (patchFlag === 0 || patchFlag === 32) && (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\n    patchFlag |= 512;\n  }\n  if (!context.inSSR && propsExpression) {\n    switch (propsExpression.type) {\n      case 15:\n        let classKeyIndex = -1;\n        let styleKeyIndex = -1;\n        let hasDynamicKey = false;\n        for (let i = 0; i < propsExpression.properties.length; i++) {\n          const key = propsExpression.properties[i].key;\n          if (isStaticExp(key)) {\n            if (key.content === \"class\") {\n              classKeyIndex = i;\n            } else if (key.content === \"style\") {\n              styleKeyIndex = i;\n            }\n          } else if (!key.isHandlerKey) {\n            hasDynamicKey = true;\n          }\n        }\n        const classProp = propsExpression.properties[classKeyIndex];\n        const styleProp = propsExpression.properties[styleKeyIndex];\n        if (!hasDynamicKey) {\n          if (classProp && !isStaticExp(classProp.value)) {\n            classProp.value = createCallExpression(\n              context.helper(NORMALIZE_CLASS),\n              [classProp.value]\n            );\n          }\n          if (styleProp && // the static style is compiled into an object,\n          // so use `hasStyleBinding` to ensure that it is a dynamic style binding\n          (hasStyleBinding || styleProp.value.type === 4 && styleProp.value.content.trim()[0] === `[` || // v-bind:style and style both exist,\n          // v-bind:style with static literal object\n          styleProp.value.type === 17)) {\n            styleProp.value = createCallExpression(\n              context.helper(NORMALIZE_STYLE),\n              [styleProp.value]\n            );\n          }\n        } else {\n          propsExpression = createCallExpression(\n            context.helper(NORMALIZE_PROPS),\n            [propsExpression]\n          );\n        }\n        break;\n      case 14:\n        break;\n      default:\n        propsExpression = createCallExpression(\n          context.helper(NORMALIZE_PROPS),\n          [\n            createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\n              propsExpression\n            ])\n          ]\n        );\n        break;\n    }\n  }\n  return {\n    props: propsExpression,\n    directives: runtimeDirectives,\n    patchFlag,\n    dynamicPropNames,\n    shouldUseBlock\n  };\n}\nfunction dedupeProperties(properties) {\n  const knownProps = /* @__PURE__ */ new Map();\n  const deduped = [];\n  for (let i = 0; i < properties.length; i++) {\n    const prop = properties[i];\n    if (prop.key.type === 8 || !prop.key.isStatic) {\n      deduped.push(prop);\n      continue;\n    }\n    const name = prop.key.content;\n    const existing = knownProps.get(name);\n    if (existing) {\n      if (name === \"style\" || name === \"class\" || isOn(name)) {\n        mergeAsArray(existing, prop);\n      }\n    } else {\n      knownProps.set(name, prop);\n      deduped.push(prop);\n    }\n  }\n  return deduped;\n}\nfunction mergeAsArray(existing, incoming) {\n  if (existing.value.type === 17) {\n    existing.value.elements.push(incoming.value);\n  } else {\n    existing.value = createArrayExpression(\n      [existing.value, incoming.value],\n      existing.loc\n    );\n  }\n}\nfunction buildDirectiveArgs(dir, context) {\n  const dirArgs = [];\n  const runtime = directiveImportMap.get(dir);\n  if (runtime) {\n    dirArgs.push(context.helperString(runtime));\n  } else {\n    {\n      context.helper(RESOLVE_DIRECTIVE);\n      context.directives.add(dir.name);\n      dirArgs.push(toValidAssetId(dir.name, `directive`));\n    }\n  }\n  const { loc } = dir;\n  if (dir.exp) dirArgs.push(dir.exp);\n  if (dir.arg) {\n    if (!dir.exp) {\n      dirArgs.push(`void 0`);\n    }\n    dirArgs.push(dir.arg);\n  }\n  if (Object.keys(dir.modifiers).length) {\n    if (!dir.arg) {\n      if (!dir.exp) {\n        dirArgs.push(`void 0`);\n      }\n      dirArgs.push(`void 0`);\n    }\n    const trueExpression = createSimpleExpression(`true`, false, loc);\n    dirArgs.push(\n      createObjectExpression(\n        dir.modifiers.map(\n          (modifier) => createObjectProperty(modifier, trueExpression)\n        ),\n        loc\n      )\n    );\n  }\n  return createArrayExpression(dirArgs, dir.loc);\n}\nfunction stringifyDynamicPropNames(props) {\n  let propsNamesString = `[`;\n  for (let i = 0, l = props.length; i < l; i++) {\n    propsNamesString += JSON.stringify(props[i]);\n    if (i < l - 1) propsNamesString += \", \";\n  }\n  return propsNamesString + `]`;\n}\nfunction isComponentTag(tag) {\n  return tag === \"component\" || tag === \"Component\";\n}\n\nconst transformSlotOutlet = (node, context) => {\n  if (isSlotOutlet(node)) {\n    const { children, loc } = node;\n    const { slotName, slotProps } = processSlotOutlet(node, context);\n    const slotArgs = [\n      context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\n      slotName,\n      \"{}\",\n      \"undefined\",\n      \"true\"\n    ];\n    let expectedLen = 2;\n    if (slotProps) {\n      slotArgs[2] = slotProps;\n      expectedLen = 3;\n    }\n    if (children.length) {\n      slotArgs[3] = createFunctionExpression([], children, false, false, loc);\n      expectedLen = 4;\n    }\n    if (context.scopeId && !context.slotted) {\n      expectedLen = 5;\n    }\n    slotArgs.splice(expectedLen);\n    node.codegenNode = createCallExpression(\n      context.helper(RENDER_SLOT),\n      slotArgs,\n      loc\n    );\n  }\n};\nfunction processSlotOutlet(node, context) {\n  let slotName = `\"default\"`;\n  let slotProps = void 0;\n  const nonNameProps = [];\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n    if (p.type === 6) {\n      if (p.value) {\n        if (p.name === \"name\") {\n          slotName = JSON.stringify(p.value.content);\n        } else {\n          p.name = camelize(p.name);\n          nonNameProps.push(p);\n        }\n      }\n    } else {\n      if (p.name === \"bind\" && isStaticArgOf(p.arg, \"name\")) {\n        if (p.exp) {\n          slotName = p.exp;\n        } else if (p.arg && p.arg.type === 4) {\n          const name = camelize(p.arg.content);\n          slotName = p.exp = createSimpleExpression(name, false, p.arg.loc);\n        }\n      } else {\n        if (p.name === \"bind\" && p.arg && isStaticExp(p.arg)) {\n          p.arg.content = camelize(p.arg.content);\n        }\n        nonNameProps.push(p);\n      }\n    }\n  }\n  if (nonNameProps.length > 0) {\n    const { props, directives } = buildProps(\n      node,\n      context,\n      nonNameProps,\n      false,\n      false\n    );\n    slotProps = props;\n    if (directives.length) {\n      context.onError(\n        createCompilerError(\n          36,\n          directives[0].loc\n        )\n      );\n    }\n  }\n  return {\n    slotName,\n    slotProps\n  };\n}\n\nconst transformOn = (dir, node, context, augmentor) => {\n  const { loc, modifiers, arg } = dir;\n  if (!dir.exp && !modifiers.length) {\n    context.onError(createCompilerError(35, loc));\n  }\n  let eventName;\n  if (arg.type === 4) {\n    if (arg.isStatic) {\n      let rawName = arg.content;\n      if (!!(process.env.NODE_ENV !== \"production\") && rawName.startsWith(\"vnode\")) {\n        context.onError(createCompilerError(51, arg.loc));\n      }\n      if (rawName.startsWith(\"vue:\")) {\n        rawName = `vnode-${rawName.slice(4)}`;\n      }\n      const eventString = node.tagType !== 0 || rawName.startsWith(\"vnode\") || !/[A-Z]/.test(rawName) ? (\n        // for non-element and vnode lifecycle event listeners, auto convert\n        // it to camelCase. See issue #2249\n        toHandlerKey(camelize(rawName))\n      ) : (\n        // preserve case for plain element listeners that have uppercase\n        // letters, as these may be custom elements' custom events\n        `on:${rawName}`\n      );\n      eventName = createSimpleExpression(eventString, true, arg.loc);\n    } else {\n      eventName = createCompoundExpression([\n        `${context.helperString(TO_HANDLER_KEY)}(`,\n        arg,\n        `)`\n      ]);\n    }\n  } else {\n    eventName = arg;\n    eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\n    eventName.children.push(`)`);\n  }\n  let exp = dir.exp;\n  if (exp && !exp.content.trim()) {\n    exp = void 0;\n  }\n  let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\n  if (exp) {\n    const isMemberExp = isMemberExpression(exp);\n    const isInlineStatement = !(isMemberExp || isFnExpression(exp));\n    const hasMultipleStatements = exp.content.includes(`;`);\n    if (!!(process.env.NODE_ENV !== \"production\") && true) {\n      validateBrowserExpression(\n        exp,\n        context,\n        false,\n        hasMultipleStatements\n      );\n    }\n    if (isInlineStatement || shouldCache && isMemberExp) {\n      exp = createCompoundExpression([\n        `${isInlineStatement ? `$event` : `${``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\n        exp,\n        hasMultipleStatements ? `}` : `)`\n      ]);\n    }\n  }\n  let ret = {\n    props: [\n      createObjectProperty(\n        eventName,\n        exp || createSimpleExpression(`() => {}`, false, loc)\n      )\n    ]\n  };\n  if (augmentor) {\n    ret = augmentor(ret);\n  }\n  if (shouldCache) {\n    ret.props[0].value = context.cache(ret.props[0].value);\n  }\n  ret.props.forEach((p) => p.key.isHandlerKey = true);\n  return ret;\n};\n\nconst transformText = (node, context) => {\n  if (node.type === 0 || node.type === 1 || node.type === 11 || node.type === 10) {\n    return () => {\n      const children = node.children;\n      let currentContainer = void 0;\n      let hasText = false;\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isText$1(child)) {\n          hasText = true;\n          for (let j = i + 1; j < children.length; j++) {\n            const next = children[j];\n            if (isText$1(next)) {\n              if (!currentContainer) {\n                currentContainer = children[i] = createCompoundExpression(\n                  [child],\n                  child.loc\n                );\n              }\n              currentContainer.children.push(` + `, next);\n              children.splice(j, 1);\n              j--;\n            } else {\n              currentContainer = void 0;\n              break;\n            }\n          }\n        }\n      }\n      if (!hasText || // if this is a plain element with a single text child, leave it\n      // as-is since the runtime has dedicated fast path for this by directly\n      // setting textContent of the element.\n      // for component root it's always normalized anyway.\n      children.length === 1 && (node.type === 0 || node.type === 1 && node.tagType === 0 && // #3756\n      // custom directives can potentially add DOM elements arbitrarily,\n      // we need to avoid setting textContent of the element at runtime\n      // to avoid accidentally overwriting the DOM elements added\n      // by the user through custom directives.\n      !node.props.find(\n        (p) => p.type === 7 && !context.directiveTransforms[p.name]\n      ) && // in compat mode, <template> tags with no special directives\n      // will be rendered as a fragment so its children must be\n      // converted into vnodes.\n      !(node.tag === \"template\"))) {\n        return;\n      }\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        if (isText$1(child) || child.type === 8) {\n          const callArgs = [];\n          if (child.type !== 2 || child.content !== \" \") {\n            callArgs.push(child);\n          }\n          if (!context.ssr && getConstantType(child, context) === 0) {\n            callArgs.push(\n              1 + (!!(process.env.NODE_ENV !== \"production\") ? ` /* ${PatchFlagNames[1]} */` : ``)\n            );\n          }\n          children[i] = {\n            type: 12,\n            content: child,\n            loc: child.loc,\n            codegenNode: createCallExpression(\n              context.helper(CREATE_TEXT),\n              callArgs\n            )\n          };\n        }\n      }\n    };\n  }\n};\n\nconst seen$1 = /* @__PURE__ */ new WeakSet();\nconst transformOnce = (node, context) => {\n  if (node.type === 1 && findDir(node, \"once\", true)) {\n    if (seen$1.has(node) || context.inVOnce || context.inSSR) {\n      return;\n    }\n    seen$1.add(node);\n    context.inVOnce = true;\n    context.helper(SET_BLOCK_TRACKING);\n    return () => {\n      context.inVOnce = false;\n      const cur = context.currentNode;\n      if (cur.codegenNode) {\n        cur.codegenNode = context.cache(\n          cur.codegenNode,\n          true\n          /* isVNode */\n        );\n      }\n    };\n  }\n};\n\nconst transformModel = (dir, node, context) => {\n  const { exp, arg } = dir;\n  if (!exp) {\n    context.onError(\n      createCompilerError(41, dir.loc)\n    );\n    return createTransformProps();\n  }\n  const rawExp = exp.loc.source.trim();\n  const expString = exp.type === 4 ? exp.content : rawExp;\n  const bindingType = context.bindingMetadata[rawExp];\n  if (bindingType === \"props\" || bindingType === \"props-aliased\") {\n    context.onError(createCompilerError(44, exp.loc));\n    return createTransformProps();\n  }\n  const maybeRef = false;\n  if (!expString.trim() || !isMemberExpression(exp) && !maybeRef) {\n    context.onError(\n      createCompilerError(42, exp.loc)\n    );\n    return createTransformProps();\n  }\n  const propName = arg ? arg : createSimpleExpression(\"modelValue\", true);\n  const eventName = arg ? isStaticExp(arg) ? `onUpdate:${camelize(arg.content)}` : createCompoundExpression(['\"onUpdate:\" + ', arg]) : `onUpdate:modelValue`;\n  let assignmentExp;\n  const eventArg = context.isTS ? `($event: any)` : `$event`;\n  {\n    assignmentExp = createCompoundExpression([\n      `${eventArg} => ((`,\n      exp,\n      `) = $event)`\n    ]);\n  }\n  const props = [\n    // modelValue: foo\n    createObjectProperty(propName, dir.exp),\n    // \"onUpdate:modelValue\": $event => (foo = $event)\n    createObjectProperty(eventName, assignmentExp)\n  ];\n  if (dir.modifiers.length && node.tagType === 1) {\n    const modifiers = dir.modifiers.map((m) => m.content).map((m) => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`).join(`, `);\n    const modifiersKey = arg ? isStaticExp(arg) ? `${arg.content}Modifiers` : createCompoundExpression([arg, ' + \"Modifiers\"']) : `modelModifiers`;\n    props.push(\n      createObjectProperty(\n        modifiersKey,\n        createSimpleExpression(\n          `{ ${modifiers} }`,\n          false,\n          dir.loc,\n          2\n        )\n      )\n    );\n  }\n  return createTransformProps(props);\n};\nfunction createTransformProps(props = []) {\n  return { props };\n}\n\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/;\nconst transformFilter = (node, context) => {\n  if (!isCompatEnabled(\"COMPILER_FILTERS\", context)) {\n    return;\n  }\n  if (node.type === 5) {\n    rewriteFilter(node.content, context);\n  } else if (node.type === 1) {\n    node.props.forEach((prop) => {\n      if (prop.type === 7 && prop.name !== \"for\" && prop.exp) {\n        rewriteFilter(prop.exp, context);\n      }\n    });\n  }\n};\nfunction rewriteFilter(node, context) {\n  if (node.type === 4) {\n    parseFilter(node, context);\n  } else {\n    for (let i = 0; i < node.children.length; i++) {\n      const child = node.children[i];\n      if (typeof child !== \"object\") continue;\n      if (child.type === 4) {\n        parseFilter(child, context);\n      } else if (child.type === 8) {\n        rewriteFilter(node, context);\n      } else if (child.type === 5) {\n        rewriteFilter(child.content, context);\n      }\n    }\n  }\n}\nfunction parseFilter(node, context) {\n  const exp = node.content;\n  let inSingle = false;\n  let inDouble = false;\n  let inTemplateString = false;\n  let inRegex = false;\n  let curly = 0;\n  let square = 0;\n  let paren = 0;\n  let lastFilterIndex = 0;\n  let c, prev, i, expression, filters = [];\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 39 && prev !== 92) inSingle = false;\n    } else if (inDouble) {\n      if (c === 34 && prev !== 92) inDouble = false;\n    } else if (inTemplateString) {\n      if (c === 96 && prev !== 92) inTemplateString = false;\n    } else if (inRegex) {\n      if (c === 47 && prev !== 92) inRegex = false;\n    } else if (c === 124 && // pipe\n    exp.charCodeAt(i + 1) !== 124 && exp.charCodeAt(i - 1) !== 124 && !curly && !square && !paren) {\n      if (expression === void 0) {\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 34:\n          inDouble = true;\n          break;\n        // \"\n        case 39:\n          inSingle = true;\n          break;\n        // '\n        case 96:\n          inTemplateString = true;\n          break;\n        // `\n        case 40:\n          paren++;\n          break;\n        // (\n        case 41:\n          paren--;\n          break;\n        // )\n        case 91:\n          square++;\n          break;\n        // [\n        case 93:\n          square--;\n          break;\n        // ]\n        case 123:\n          curly++;\n          break;\n        // {\n        case 125:\n          curly--;\n          break;\n      }\n      if (c === 47) {\n        let j = i - 1;\n        let p;\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== \" \") break;\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n  if (expression === void 0) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n  function pushFilter() {\n    filters.push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n  if (filters.length) {\n    !!(process.env.NODE_ENV !== \"production\") && warnDeprecation(\n      \"COMPILER_FILTERS\",\n      context,\n      node.loc\n    );\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i], context);\n    }\n    node.content = expression;\n    node.ast = void 0;\n  }\n}\nfunction wrapFilter(exp, filter, context) {\n  context.helper(RESOLVE_FILTER);\n  const i = filter.indexOf(\"(\");\n  if (i < 0) {\n    context.filters.add(filter);\n    return `${toValidAssetId(filter, \"filter\")}(${exp})`;\n  } else {\n    const name = filter.slice(0, i);\n    const args = filter.slice(i + 1);\n    context.filters.add(name);\n    return `${toValidAssetId(name, \"filter\")}(${exp}${args !== \")\" ? \",\" + args : args}`;\n  }\n}\n\nconst seen = /* @__PURE__ */ new WeakSet();\nconst transformMemo = (node, context) => {\n  if (node.type === 1) {\n    const dir = findDir(node, \"memo\");\n    if (!dir || seen.has(node)) {\n      return;\n    }\n    seen.add(node);\n    return () => {\n      const codegenNode = node.codegenNode || context.currentNode.codegenNode;\n      if (codegenNode && codegenNode.type === 13) {\n        if (node.tagType !== 1) {\n          convertToBlock(codegenNode, context);\n        }\n        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\n          dir.exp,\n          createFunctionExpression(void 0, codegenNode),\n          `_cache`,\n          String(context.cached.length)\n        ]);\n        context.cached.push(null);\n      }\n    };\n  }\n};\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\n  return [\n    [\n      transformOnce,\n      transformIf,\n      transformMemo,\n      transformFor,\n      ...[transformFilter] ,\n      ...!!(process.env.NODE_ENV !== \"production\") ? [transformExpression] : [],\n      transformSlotOutlet,\n      transformElement,\n      trackSlotScopes,\n      transformText\n    ],\n    {\n      on: transformOn,\n      bind: transformBind,\n      model: transformModel\n    }\n  ];\n}\nfunction baseCompile(source, options = {}) {\n  const onError = options.onError || defaultOnError;\n  const isModuleMode = options.mode === \"module\";\n  {\n    if (options.prefixIdentifiers === true) {\n      onError(createCompilerError(47));\n    } else if (isModuleMode) {\n      onError(createCompilerError(48));\n    }\n  }\n  const prefixIdentifiers = false;\n  if (options.cacheHandlers) {\n    onError(createCompilerError(49));\n  }\n  if (options.scopeId && !isModuleMode) {\n    onError(createCompilerError(50));\n  }\n  const resolvedOptions = extend({}, options, {\n    prefixIdentifiers\n  });\n  const ast = isString(source) ? baseParse(source, resolvedOptions) : source;\n  const [nodeTransforms, directiveTransforms] = getBaseTransformPreset();\n  transform(\n    ast,\n    extend({}, resolvedOptions, {\n      nodeTransforms: [\n        ...nodeTransforms,\n        ...options.nodeTransforms || []\n        // user transforms\n      ],\n      directiveTransforms: extend(\n        {},\n        directiveTransforms,\n        options.directiveTransforms || {}\n        // user transforms\n      )\n    })\n  );\n  return generate(ast, resolvedOptions);\n}\n\nconst BindingTypes = {\n  \"DATA\": \"data\",\n  \"PROPS\": \"props\",\n  \"PROPS_ALIASED\": \"props-aliased\",\n  \"SETUP_LET\": \"setup-let\",\n  \"SETUP_CONST\": \"setup-const\",\n  \"SETUP_REACTIVE_CONST\": \"setup-reactive-const\",\n  \"SETUP_MAYBE_REF\": \"setup-maybe-ref\",\n  \"SETUP_REF\": \"setup-ref\",\n  \"OPTIONS\": \"options\",\n  \"LITERAL_CONST\": \"literal-const\"\n};\n\nconst noopDirectiveTransform = () => ({ props: [] });\n\nexport { BASE_TRANSITION, BindingTypes, CAMELIZE, CAPITALIZE, CREATE_BLOCK, CREATE_COMMENT, CREATE_ELEMENT_BLOCK, CREATE_ELEMENT_VNODE, CREATE_SLOTS, CREATE_STATIC, CREATE_TEXT, CREATE_VNODE, CompilerDeprecationTypes, ConstantTypes, ElementTypes, ErrorCodes, FRAGMENT, GUARD_REACTIVE_PROPS, IS_MEMO_SAME, IS_REF, KEEP_ALIVE, MERGE_PROPS, NORMALIZE_CLASS, NORMALIZE_PROPS, NORMALIZE_STYLE, Namespaces, NodeTypes, OPEN_BLOCK, POP_SCOPE_ID, PUSH_SCOPE_ID, RENDER_LIST, RENDER_SLOT, RESOLVE_COMPONENT, RESOLVE_DIRECTIVE, RESOLVE_DYNAMIC_COMPONENT, RESOLVE_FILTER, SET_BLOCK_TRACKING, SUSPENSE, TELEPORT, TO_DISPLAY_STRING, TO_HANDLERS, TO_HANDLER_KEY, TS_NODE_TYPES, UNREF, WITH_CTX, WITH_DIRECTIVES, WITH_MEMO, advancePositionWithClone, advancePositionWithMutation, assert, baseCompile, baseParse, buildDirectiveArgs, buildProps, buildSlots, checkCompatEnabled, convertToBlock, createArrayExpression, createAssignmentExpression, createBlockStatement, createCacheExpression, createCallExpression, createCompilerError, createCompoundExpression, createConditionalExpression, createForLoopParams, createFunctionExpression, createIfStatement, createInterpolation, createObjectExpression, createObjectProperty, createReturnStatement, createRoot, createSequenceExpression, createSimpleExpression, createStructuralDirectiveTransform, createTemplateLiteral, createTransformContext, createVNodeCall, errorMessages, extractIdentifiers, findDir, findProp, forAliasRE, generate, getBaseTransformPreset, getConstantType, getMemoedVNodeCall, getVNodeBlockHelper, getVNodeHelper, hasDynamicKeyVBind, hasScopeRef, helperNameMap, injectProp, isCoreComponent, isFnExpression, isFnExpressionBrowser, isFnExpressionNode, isFunctionType, isInDestructureAssignment, isInNewExpression, isMemberExpression, isMemberExpressionBrowser, isMemberExpressionNode, isReferencedIdentifier, isSimpleIdentifier, isSlotOutlet, isStaticArgOf, isStaticExp, isStaticProperty, isStaticPropertyKey, isTemplateNode, isText$1 as isText, isVSlot, locStub, noopDirectiveTransform, processExpression, processFor, processIf, processSlotOutlet, registerRuntimeHelpers, resolveComponentType, stringifyExpression, toValidAssetId, trackSlotScopes, trackVForSlotScopes, transform, transformBind, transformElement, transformExpression, transformModel, transformOn, traverseNode, unwrapTSNode, walkBlockDeclarations, walkFunctionParams, walkIdentifiers, warnDeprecation };\n","/**\n* @vue/compiler-dom v3.5.9\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\nimport { registerRuntimeHelpers, createSimpleExpression, createCompilerError, createObjectProperty, getConstantType, createCallExpression, TO_DISPLAY_STRING, transformModel as transformModel$1, findProp, hasDynamicKeyVBind, findDir, isStaticArgOf, transformOn as transformOn$1, isStaticExp, createCompoundExpression, checkCompatEnabled, noopDirectiveTransform, baseCompile, baseParse } from '@vue/compiler-core';\nexport * from '@vue/compiler-core';\nimport { isVoidTag, isHTMLTag, isSVGTag, isMathMLTag, parseStringStyle, capitalize, makeMap, extend } from '@vue/shared';\n\nconst V_MODEL_RADIO = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `vModelRadio` : ``);\nconst V_MODEL_CHECKBOX = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? `vModelCheckbox` : ``\n);\nconst V_MODEL_TEXT = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `vModelText` : ``);\nconst V_MODEL_SELECT = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? `vModelSelect` : ``\n);\nconst V_MODEL_DYNAMIC = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? `vModelDynamic` : ``\n);\nconst V_ON_WITH_MODIFIERS = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? `vOnModifiersGuard` : ``\n);\nconst V_ON_WITH_KEYS = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? `vOnKeysGuard` : ``\n);\nconst V_SHOW = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `vShow` : ``);\nconst TRANSITION = Symbol(!!(process.env.NODE_ENV !== \"production\") ? `Transition` : ``);\nconst TRANSITION_GROUP = Symbol(\n  !!(process.env.NODE_ENV !== \"production\") ? `TransitionGroup` : ``\n);\nregisterRuntimeHelpers({\n  [V_MODEL_RADIO]: `vModelRadio`,\n  [V_MODEL_CHECKBOX]: `vModelCheckbox`,\n  [V_MODEL_TEXT]: `vModelText`,\n  [V_MODEL_SELECT]: `vModelSelect`,\n  [V_MODEL_DYNAMIC]: `vModelDynamic`,\n  [V_ON_WITH_MODIFIERS]: `withModifiers`,\n  [V_ON_WITH_KEYS]: `withKeys`,\n  [V_SHOW]: `vShow`,\n  [TRANSITION]: `Transition`,\n  [TRANSITION_GROUP]: `TransitionGroup`\n});\n\nlet decoder;\nfunction decodeHtmlBrowser(raw, asAttr = false) {\n  if (!decoder) {\n    decoder = document.createElement(\"div\");\n  }\n  if (asAttr) {\n    decoder.innerHTML = `<div foo=\"${raw.replace(/\"/g, \"&quot;\")}\">`;\n    return decoder.children[0].getAttribute(\"foo\");\n  } else {\n    decoder.innerHTML = raw;\n    return decoder.textContent;\n  }\n}\n\nconst parserOptions = {\n  parseMode: \"html\",\n  isVoidTag,\n  isNativeTag: (tag) => isHTMLTag(tag) || isSVGTag(tag) || isMathMLTag(tag),\n  isPreTag: (tag) => tag === \"pre\",\n  isIgnoreNewlineTag: (tag) => tag === \"pre\" || tag === \"textarea\",\n  decodeEntities: decodeHtmlBrowser ,\n  isBuiltInComponent: (tag) => {\n    if (tag === \"Transition\" || tag === \"transition\") {\n      return TRANSITION;\n    } else if (tag === \"TransitionGroup\" || tag === \"transition-group\") {\n      return TRANSITION_GROUP;\n    }\n  },\n  // https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\n  getNamespace(tag, parent, rootNamespace) {\n    let ns = parent ? parent.ns : rootNamespace;\n    if (parent && ns === 2) {\n      if (parent.tag === \"annotation-xml\") {\n        if (tag === \"svg\") {\n          return 1;\n        }\n        if (parent.props.some(\n          (a) => a.type === 6 && a.name === \"encoding\" && a.value != null && (a.value.content === \"text/html\" || a.value.content === \"application/xhtml+xml\")\n        )) {\n          ns = 0;\n        }\n      } else if (/^m(?:[ions]|text)$/.test(parent.tag) && tag !== \"mglyph\" && tag !== \"malignmark\") {\n        ns = 0;\n      }\n    } else if (parent && ns === 1) {\n      if (parent.tag === \"foreignObject\" || parent.tag === \"desc\" || parent.tag === \"title\") {\n        ns = 0;\n      }\n    }\n    if (ns === 0) {\n      if (tag === \"svg\") {\n        return 1;\n      }\n      if (tag === \"math\") {\n        return 2;\n      }\n    }\n    return ns;\n  }\n};\n\nconst transformStyle = (node) => {\n  if (node.type === 1) {\n    node.props.forEach((p, i) => {\n      if (p.type === 6 && p.name === \"style\" && p.value) {\n        node.props[i] = {\n          type: 7,\n          name: `bind`,\n          arg: createSimpleExpression(`style`, true, p.loc),\n          exp: parseInlineCSS(p.value.content, p.loc),\n          modifiers: [],\n          loc: p.loc\n        };\n      }\n    });\n  }\n};\nconst parseInlineCSS = (cssText, loc) => {\n  const normalized = parseStringStyle(cssText);\n  return createSimpleExpression(\n    JSON.stringify(normalized),\n    false,\n    loc,\n    3\n  );\n};\n\nfunction createDOMCompilerError(code, loc) {\n  return createCompilerError(\n    code,\n    loc,\n    !!(process.env.NODE_ENV !== \"production\") || false ? DOMErrorMessages : void 0\n  );\n}\nconst DOMErrorCodes = {\n  \"X_V_HTML_NO_EXPRESSION\": 53,\n  \"53\": \"X_V_HTML_NO_EXPRESSION\",\n  \"X_V_HTML_WITH_CHILDREN\": 54,\n  \"54\": \"X_V_HTML_WITH_CHILDREN\",\n  \"X_V_TEXT_NO_EXPRESSION\": 55,\n  \"55\": \"X_V_TEXT_NO_EXPRESSION\",\n  \"X_V_TEXT_WITH_CHILDREN\": 56,\n  \"56\": \"X_V_TEXT_WITH_CHILDREN\",\n  \"X_V_MODEL_ON_INVALID_ELEMENT\": 57,\n  \"57\": \"X_V_MODEL_ON_INVALID_ELEMENT\",\n  \"X_V_MODEL_ARG_ON_ELEMENT\": 58,\n  \"58\": \"X_V_MODEL_ARG_ON_ELEMENT\",\n  \"X_V_MODEL_ON_FILE_INPUT_ELEMENT\": 59,\n  \"59\": \"X_V_MODEL_ON_FILE_INPUT_ELEMENT\",\n  \"X_V_MODEL_UNNECESSARY_VALUE\": 60,\n  \"60\": \"X_V_MODEL_UNNECESSARY_VALUE\",\n  \"X_V_SHOW_NO_EXPRESSION\": 61,\n  \"61\": \"X_V_SHOW_NO_EXPRESSION\",\n  \"X_TRANSITION_INVALID_CHILDREN\": 62,\n  \"62\": \"X_TRANSITION_INVALID_CHILDREN\",\n  \"X_IGNORED_SIDE_EFFECT_TAG\": 63,\n  \"63\": \"X_IGNORED_SIDE_EFFECT_TAG\",\n  \"__EXTEND_POINT__\": 64,\n  \"64\": \"__EXTEND_POINT__\"\n};\nconst DOMErrorMessages = {\n  [53]: `v-html is missing expression.`,\n  [54]: `v-html will override element children.`,\n  [55]: `v-text is missing expression.`,\n  [56]: `v-text will override element children.`,\n  [57]: `v-model can only be used on <input>, <textarea> and <select> elements.`,\n  [58]: `v-model argument is not supported on plain elements.`,\n  [59]: `v-model cannot be used on file inputs since they are read-only. Use a v-on:change listener instead.`,\n  [60]: `Unnecessary value binding used alongside v-model. It will interfere with v-model's behavior.`,\n  [61]: `v-show is missing expression.`,\n  [62]: `<Transition> expects exactly one child element or component.`,\n  [63]: `Tags with side effect (<script> and <style>) are ignored in client component templates.`\n};\n\nconst transformVHtml = (dir, node, context) => {\n  const { exp, loc } = dir;\n  if (!exp) {\n    context.onError(\n      createDOMCompilerError(53, loc)\n    );\n  }\n  if (node.children.length) {\n    context.onError(\n      createDOMCompilerError(54, loc)\n    );\n    node.children.length = 0;\n  }\n  return {\n    props: [\n      createObjectProperty(\n        createSimpleExpression(`innerHTML`, true, loc),\n        exp || createSimpleExpression(\"\", true)\n      )\n    ]\n  };\n};\n\nconst transformVText = (dir, node, context) => {\n  const { exp, loc } = dir;\n  if (!exp) {\n    context.onError(\n      createDOMCompilerError(55, loc)\n    );\n  }\n  if (node.children.length) {\n    context.onError(\n      createDOMCompilerError(56, loc)\n    );\n    node.children.length = 0;\n  }\n  return {\n    props: [\n      createObjectProperty(\n        createSimpleExpression(`textContent`, true),\n        exp ? getConstantType(exp, context) > 0 ? exp : createCallExpression(\n          context.helperString(TO_DISPLAY_STRING),\n          [exp],\n          loc\n        ) : createSimpleExpression(\"\", true)\n      )\n    ]\n  };\n};\n\nconst transformModel = (dir, node, context) => {\n  const baseResult = transformModel$1(dir, node, context);\n  if (!baseResult.props.length || node.tagType === 1) {\n    return baseResult;\n  }\n  if (dir.arg) {\n    context.onError(\n      createDOMCompilerError(\n        58,\n        dir.arg.loc\n      )\n    );\n  }\n  function checkDuplicatedValue() {\n    const value = findDir(node, \"bind\");\n    if (value && isStaticArgOf(value.arg, \"value\")) {\n      context.onError(\n        createDOMCompilerError(\n          60,\n          value.loc\n        )\n      );\n    }\n  }\n  const { tag } = node;\n  const isCustomElement = context.isCustomElement(tag);\n  if (tag === \"input\" || tag === \"textarea\" || tag === \"select\" || isCustomElement) {\n    let directiveToUse = V_MODEL_TEXT;\n    let isInvalidType = false;\n    if (tag === \"input\" || isCustomElement) {\n      const type = findProp(node, `type`);\n      if (type) {\n        if (type.type === 7) {\n          directiveToUse = V_MODEL_DYNAMIC;\n        } else if (type.value) {\n          switch (type.value.content) {\n            case \"radio\":\n              directiveToUse = V_MODEL_RADIO;\n              break;\n            case \"checkbox\":\n              directiveToUse = V_MODEL_CHECKBOX;\n              break;\n            case \"file\":\n              isInvalidType = true;\n              context.onError(\n                createDOMCompilerError(\n                  59,\n                  dir.loc\n                )\n              );\n              break;\n            default:\n              !!(process.env.NODE_ENV !== \"production\") && checkDuplicatedValue();\n              break;\n          }\n        }\n      } else if (hasDynamicKeyVBind(node)) {\n        directiveToUse = V_MODEL_DYNAMIC;\n      } else {\n        !!(process.env.NODE_ENV !== \"production\") && checkDuplicatedValue();\n      }\n    } else if (tag === \"select\") {\n      directiveToUse = V_MODEL_SELECT;\n    } else {\n      !!(process.env.NODE_ENV !== \"production\") && checkDuplicatedValue();\n    }\n    if (!isInvalidType) {\n      baseResult.needRuntime = context.helper(directiveToUse);\n    }\n  } else {\n    context.onError(\n      createDOMCompilerError(\n        57,\n        dir.loc\n      )\n    );\n  }\n  baseResult.props = baseResult.props.filter(\n    (p) => !(p.key.type === 4 && p.key.content === \"modelValue\")\n  );\n  return baseResult;\n};\n\nconst isEventOptionModifier = /* @__PURE__ */ makeMap(`passive,once,capture`);\nconst isNonKeyModifier = /* @__PURE__ */ makeMap(\n  // event propagation management\n  `stop,prevent,self,ctrl,shift,alt,meta,exact,middle`\n);\nconst maybeKeyModifier = /* @__PURE__ */ makeMap(\"left,right\");\nconst isKeyboardEvent = /* @__PURE__ */ makeMap(`onkeyup,onkeydown,onkeypress`);\nconst resolveModifiers = (key, modifiers, context, loc) => {\n  const keyModifiers = [];\n  const nonKeyModifiers = [];\n  const eventOptionModifiers = [];\n  for (let i = 0; i < modifiers.length; i++) {\n    const modifier = modifiers[i].content;\n    if (modifier === \"native\" && checkCompatEnabled(\n      \"COMPILER_V_ON_NATIVE\",\n      context,\n      loc\n    )) {\n      eventOptionModifiers.push(modifier);\n    } else if (isEventOptionModifier(modifier)) {\n      eventOptionModifiers.push(modifier);\n    } else {\n      if (maybeKeyModifier(modifier)) {\n        if (isStaticExp(key)) {\n          if (isKeyboardEvent(key.content.toLowerCase())) {\n            keyModifiers.push(modifier);\n          } else {\n            nonKeyModifiers.push(modifier);\n          }\n        } else {\n          keyModifiers.push(modifier);\n          nonKeyModifiers.push(modifier);\n        }\n      } else {\n        if (isNonKeyModifier(modifier)) {\n          nonKeyModifiers.push(modifier);\n        } else {\n          keyModifiers.push(modifier);\n        }\n      }\n    }\n  }\n  return {\n    keyModifiers,\n    nonKeyModifiers,\n    eventOptionModifiers\n  };\n};\nconst transformClick = (key, event) => {\n  const isStaticClick = isStaticExp(key) && key.content.toLowerCase() === \"onclick\";\n  return isStaticClick ? createSimpleExpression(event, true) : key.type !== 4 ? createCompoundExpression([\n    `(`,\n    key,\n    `) === \"onClick\" ? \"${event}\" : (`,\n    key,\n    `)`\n  ]) : key;\n};\nconst transformOn = (dir, node, context) => {\n  return transformOn$1(dir, node, context, (baseResult) => {\n    const { modifiers } = dir;\n    if (!modifiers.length) return baseResult;\n    let { key, value: handlerExp } = baseResult.props[0];\n    const { keyModifiers, nonKeyModifiers, eventOptionModifiers } = resolveModifiers(key, modifiers, context, dir.loc);\n    if (nonKeyModifiers.includes(\"right\")) {\n      key = transformClick(key, `onContextmenu`);\n    }\n    if (nonKeyModifiers.includes(\"middle\")) {\n      key = transformClick(key, `onMouseup`);\n    }\n    if (nonKeyModifiers.length) {\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_MODIFIERS), [\n        handlerExp,\n        JSON.stringify(nonKeyModifiers)\n      ]);\n    }\n    if (keyModifiers.length && // if event name is dynamic, always wrap with keys guard\n    (!isStaticExp(key) || isKeyboardEvent(key.content.toLowerCase()))) {\n      handlerExp = createCallExpression(context.helper(V_ON_WITH_KEYS), [\n        handlerExp,\n        JSON.stringify(keyModifiers)\n      ]);\n    }\n    if (eventOptionModifiers.length) {\n      const modifierPostfix = eventOptionModifiers.map(capitalize).join(\"\");\n      key = isStaticExp(key) ? createSimpleExpression(`${key.content}${modifierPostfix}`, true) : createCompoundExpression([`(`, key, `) + \"${modifierPostfix}\"`]);\n    }\n    return {\n      props: [createObjectProperty(key, handlerExp)]\n    };\n  });\n};\n\nconst transformShow = (dir, node, context) => {\n  const { exp, loc } = dir;\n  if (!exp) {\n    context.onError(\n      createDOMCompilerError(61, loc)\n    );\n  }\n  return {\n    props: [],\n    needRuntime: context.helper(V_SHOW)\n  };\n};\n\nconst transformTransition = (node, context) => {\n  if (node.type === 1 && node.tagType === 1) {\n    const component = context.isBuiltInComponent(node.tag);\n    if (component === TRANSITION) {\n      return () => {\n        if (!node.children.length) {\n          return;\n        }\n        if (hasMultipleChildren(node)) {\n          context.onError(\n            createDOMCompilerError(\n              62,\n              {\n                start: node.children[0].loc.start,\n                end: node.children[node.children.length - 1].loc.end,\n                source: \"\"\n              }\n            )\n          );\n        }\n        const child = node.children[0];\n        if (child.type === 1) {\n          for (const p of child.props) {\n            if (p.type === 7 && p.name === \"show\") {\n              node.props.push({\n                type: 6,\n                name: \"persisted\",\n                nameLoc: node.loc,\n                value: void 0,\n                loc: node.loc\n              });\n            }\n          }\n        }\n      };\n    }\n  }\n};\nfunction hasMultipleChildren(node) {\n  const children = node.children = node.children.filter(\n    (c) => c.type !== 3 && !(c.type === 2 && !c.content.trim())\n  );\n  const child = children[0];\n  return children.length !== 1 || child.type === 11 || child.type === 9 && child.branches.some(hasMultipleChildren);\n}\n\nconst ignoreSideEffectTags = (node, context) => {\n  if (node.type === 1 && node.tagType === 0 && (node.tag === \"script\" || node.tag === \"style\")) {\n    !!(process.env.NODE_ENV !== \"production\") && context.onError(\n      createDOMCompilerError(\n        63,\n        node.loc\n      )\n    );\n    context.removeNode();\n  }\n};\n\nfunction isValidHTMLNesting(parent, child) {\n  if (parent in onlyValidChildren) {\n    return onlyValidChildren[parent].has(child);\n  }\n  if (child in onlyValidParents) {\n    return onlyValidParents[child].has(parent);\n  }\n  if (parent in knownInvalidChildren) {\n    if (knownInvalidChildren[parent].has(child)) return false;\n  }\n  if (child in knownInvalidParents) {\n    if (knownInvalidParents[child].has(parent)) return false;\n  }\n  return true;\n}\nconst headings = /* @__PURE__ */ new Set([\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"]);\nconst emptySet = /* @__PURE__ */ new Set([]);\nconst onlyValidChildren = {\n  head: /* @__PURE__ */ new Set([\n    \"base\",\n    \"basefront\",\n    \"bgsound\",\n    \"link\",\n    \"meta\",\n    \"title\",\n    \"noscript\",\n    \"noframes\",\n    \"style\",\n    \"script\",\n    \"template\"\n  ]),\n  optgroup: /* @__PURE__ */ new Set([\"option\"]),\n  select: /* @__PURE__ */ new Set([\"optgroup\", \"option\", \"hr\"]),\n  // table\n  table: /* @__PURE__ */ new Set([\"caption\", \"colgroup\", \"tbody\", \"tfoot\", \"thead\"]),\n  tr: /* @__PURE__ */ new Set([\"td\", \"th\"]),\n  colgroup: /* @__PURE__ */ new Set([\"col\"]),\n  tbody: /* @__PURE__ */ new Set([\"tr\"]),\n  thead: /* @__PURE__ */ new Set([\"tr\"]),\n  tfoot: /* @__PURE__ */ new Set([\"tr\"]),\n  // these elements can not have any children elements\n  script: emptySet,\n  iframe: emptySet,\n  option: emptySet,\n  textarea: emptySet,\n  style: emptySet,\n  title: emptySet\n};\nconst onlyValidParents = {\n  // sections\n  html: emptySet,\n  body: /* @__PURE__ */ new Set([\"html\"]),\n  head: /* @__PURE__ */ new Set([\"html\"]),\n  // table\n  td: /* @__PURE__ */ new Set([\"tr\"]),\n  colgroup: /* @__PURE__ */ new Set([\"table\"]),\n  caption: /* @__PURE__ */ new Set([\"table\"]),\n  tbody: /* @__PURE__ */ new Set([\"table\"]),\n  tfoot: /* @__PURE__ */ new Set([\"table\"]),\n  col: /* @__PURE__ */ new Set([\"colgroup\"]),\n  th: /* @__PURE__ */ new Set([\"tr\"]),\n  thead: /* @__PURE__ */ new Set([\"table\"]),\n  tr: /* @__PURE__ */ new Set([\"tbody\", \"thead\", \"tfoot\"]),\n  // data list\n  dd: /* @__PURE__ */ new Set([\"dl\", \"div\"]),\n  dt: /* @__PURE__ */ new Set([\"dl\", \"div\"]),\n  // other\n  figcaption: /* @__PURE__ */ new Set([\"figure\"]),\n  // li: new Set([\"ul\", \"ol\"]),\n  summary: /* @__PURE__ */ new Set([\"details\"]),\n  area: /* @__PURE__ */ new Set([\"map\"])\n};\nconst knownInvalidChildren = {\n  p: /* @__PURE__ */ new Set([\n    \"address\",\n    \"article\",\n    \"aside\",\n    \"blockquote\",\n    \"center\",\n    \"details\",\n    \"dialog\",\n    \"dir\",\n    \"div\",\n    \"dl\",\n    \"fieldset\",\n    \"figure\",\n    \"footer\",\n    \"form\",\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\",\n    \"header\",\n    \"hgroup\",\n    \"hr\",\n    \"li\",\n    \"main\",\n    \"nav\",\n    \"menu\",\n    \"ol\",\n    \"p\",\n    \"pre\",\n    \"section\",\n    \"table\",\n    \"ul\"\n  ]),\n  svg: /* @__PURE__ */ new Set([\n    \"b\",\n    \"blockquote\",\n    \"br\",\n    \"code\",\n    \"dd\",\n    \"div\",\n    \"dl\",\n    \"dt\",\n    \"em\",\n    \"embed\",\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\",\n    \"hr\",\n    \"i\",\n    \"img\",\n    \"li\",\n    \"menu\",\n    \"meta\",\n    \"ol\",\n    \"p\",\n    \"pre\",\n    \"ruby\",\n    \"s\",\n    \"small\",\n    \"span\",\n    \"strong\",\n    \"sub\",\n    \"sup\",\n    \"table\",\n    \"u\",\n    \"ul\",\n    \"var\"\n  ])\n};\nconst knownInvalidParents = {\n  a: /* @__PURE__ */ new Set([\"a\"]),\n  button: /* @__PURE__ */ new Set([\"button\"]),\n  dd: /* @__PURE__ */ new Set([\"dd\", \"dt\"]),\n  dt: /* @__PURE__ */ new Set([\"dd\", \"dt\"]),\n  form: /* @__PURE__ */ new Set([\"form\"]),\n  li: /* @__PURE__ */ new Set([\"li\"]),\n  h1: headings,\n  h2: headings,\n  h3: headings,\n  h4: headings,\n  h5: headings,\n  h6: headings\n};\n\nconst validateHtmlNesting = (node, context) => {\n  if (node.type === 1 && node.tagType === 0 && context.parent && context.parent.type === 1 && context.parent.tagType === 0 && !isValidHTMLNesting(context.parent.tag, node.tag)) {\n    const error = new SyntaxError(\n      `<${node.tag}> cannot be child of <${context.parent.tag}>, according to HTML specifications. This can cause hydration errors or potentially disrupt future functionality.`\n    );\n    error.loc = node.loc;\n    context.onWarn(error);\n  }\n};\n\nconst DOMNodeTransforms = [\n  transformStyle,\n  ...!!(process.env.NODE_ENV !== \"production\") ? [transformTransition, validateHtmlNesting] : []\n];\nconst DOMDirectiveTransforms = {\n  cloak: noopDirectiveTransform,\n  html: transformVHtml,\n  text: transformVText,\n  model: transformModel,\n  // override compiler-core\n  on: transformOn,\n  // override compiler-core\n  show: transformShow\n};\nfunction compile(src, options = {}) {\n  return baseCompile(\n    src,\n    extend({}, parserOptions, options, {\n      nodeTransforms: [\n        // ignore <script> and <tag>\n        // this is not put inside DOMNodeTransforms because that list is used\n        // by compiler-ssr to generate vnode fallback branches\n        ignoreSideEffectTags,\n        ...DOMNodeTransforms,\n        ...options.nodeTransforms || []\n      ],\n      directiveTransforms: extend(\n        {},\n        DOMDirectiveTransforms,\n        options.directiveTransforms || {}\n      ),\n      transformHoist: null \n    })\n  );\n}\nfunction parse(template, options = {}) {\n  return baseParse(template, extend({}, parserOptions, options));\n}\n\nexport { DOMDirectiveTransforms, DOMErrorCodes, DOMErrorMessages, DOMNodeTransforms, TRANSITION, TRANSITION_GROUP, V_MODEL_CHECKBOX, V_MODEL_DYNAMIC, V_MODEL_RADIO, V_MODEL_SELECT, V_MODEL_TEXT, V_ON_WITH_KEYS, V_ON_WITH_MODIFIERS, V_SHOW, compile, createDOMCompilerError, parse, parserOptions, transformStyle };\n","/**\n* vue v3.5.9\n* (c) 2018-present Yuxi (Evan) You and Vue contributors\n* @license MIT\n**/\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar compilerDom = require('@vue/compiler-dom');\nvar runtimeDom = require('@vue/runtime-dom');\nvar shared = require('@vue/shared');\n\nfunction _interopNamespaceDefault(e) {\n  var n = Object.create(null);\n  if (e) {\n    for (var k in e) {\n      n[k] = e[k];\n    }\n  }\n  n.default = e;\n  return Object.freeze(n);\n}\n\nvar runtimeDom__namespace = /*#__PURE__*/_interopNamespaceDefault(runtimeDom);\n\nconst compileCache = /* @__PURE__ */ Object.create(null);\nfunction compileToFunction(template, options) {\n  if (!shared.isString(template)) {\n    if (template.nodeType) {\n      template = template.innerHTML;\n    } else {\n      return shared.NOOP;\n    }\n  }\n  const key = shared.genCacheKey(template, options);\n  const cached = compileCache[key];\n  if (cached) {\n    return cached;\n  }\n  if (template[0] === \"#\") {\n    const el = document.querySelector(template);\n    template = el ? el.innerHTML : ``;\n  }\n  const opts = shared.extend(\n    {\n      hoistStatic: true,\n      onError: void 0,\n      onWarn: shared.NOOP\n    },\n    options\n  );\n  if (!opts.isCustomElement && typeof customElements !== \"undefined\") {\n    opts.isCustomElement = (tag) => !!customElements.get(tag);\n  }\n  const { code } = compilerDom.compile(template, opts);\n  const render = new Function(\"Vue\", code)(runtimeDom__namespace);\n  render._rc = true;\n  return compileCache[key] = render;\n}\nruntimeDom.registerRuntimeCompiler(compileToFunction);\n\nexports.compile = compileToFunction;\nObject.keys(runtimeDom).forEach(function (k) {\n  if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) exports[k] = runtimeDom[k];\n});\n","'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/vue.cjs.prod.js')\n} else {\n  module.exports = require('./dist/vue.cjs.js')\n}\n"],"names":["FRAGMENT","TELEPORT","SUSPENSE","KEEP_ALIVE","BASE_TRANSITION","OPEN_BLOCK","CREATE_BLOCK","CREATE_ELEMENT_BLOCK","CREATE_VNODE","CREATE_ELEMENT_VNODE","CREATE_COMMENT","CREATE_TEXT","CREATE_STATIC","RESOLVE_COMPONENT","RESOLVE_DYNAMIC_COMPONENT","RESOLVE_DIRECTIVE","RESOLVE_FILTER","WITH_DIRECTIVES","RENDER_LIST","RENDER_SLOT","CREATE_SLOTS","TO_DISPLAY_STRING","MERGE_PROPS","NORMALIZE_CLASS","NORMALIZE_STYLE","NORMALIZE_PROPS","GUARD_REACTIVE_PROPS","TO_HANDLERS","CAMELIZE","CAPITALIZE","TO_HANDLER_KEY","SET_BLOCK_TRACKING","PUSH_SCOPE_ID","POP_SCOPE_ID","WITH_CTX","UNREF","IS_REF","WITH_MEMO","IS_MEMO_SAME","helperNameMap","registerRuntimeHelpers","helpers","s","Namespaces","NodeTypes","ElementTypes","ConstantTypes","locStub","createRoot","children","source","createVNodeCall","context","tag","props","patchFlag","dynamicProps","directives","isBlock","disableTracking","isComponent","loc","getVNodeBlockHelper","getVNodeHelper","createArrayExpression","elements","createObjectExpression","properties","createObjectProperty","key","value","isString","createSimpleExpression","content","isStatic","constType","createInterpolation","createCompoundExpression","createCallExpression","callee","args","createFunctionExpression","params","returns","newline","isSlot","createConditionalExpression","test","consequent","alternate","createCacheExpression","index","needPauseTracking","createBlockStatement","body","createTemplateLiteral","createIfStatement","createAssignmentExpression","left","right","createSequenceExpression","expressions","createReturnStatement","ssr","convertToBlock","node","helper","removeHelper","inSSR","defaultDelimitersOpen","defaultDelimitersClose","isTagStartChar","c","isWhitespace","isEndOfTagSection","toCharCodes","str","ret","i","Sequences","Tokenizer","stack","cbs","line","column","newlineIndex","start","isEnd","endOfText","actualIndex","cc","sequence","offset","quote","input","endIndex","cp","consumed","CompilerDeprecationTypes","deprecationData","getCompatValue","compatConfig","isCompatEnabled","mode","checkCompatEnabled","warnDeprecation","message","link","msg","err","defaultOnError","error","defaultOnWarn","createCompilerError","code","messages","additionalMessage","ErrorCodes","errorMessages","walkIdentifiers","root","onIdentifier","includeAll","parentStack","knownIds","isReferencedIdentifier","id","parent","isInDestructureAssignment","p","isInNewExpression","walkFunctionParams","onIdent","extractIdentifiers","walkBlockDeclarations","block","stmt","decl","isForStatement","walkForStatement","isVar","variable","param","nodes","object","prop","element","isFunctionType","isStaticProperty","isStaticPropertyKey","TS_NODE_TYPES","unwrapTSNode","isStaticExp","isCoreComponent","nonIdentifierRE","isSimpleIdentifier","name","validFirstIdentCharRE","validIdentCharRE","whitespaceRE","getExpSource","exp","isMemberExpressionBrowser","path","state","stateStack","currentOpenBracketCount","currentOpenParensCount","currentStringType","char","isMemberExpressionNode","NOOP","isMemberExpression","fnExpRE","isFnExpressionBrowser","isFnExpressionNode","isFnExpression","advancePositionWithClone","pos","numberOfCharacters","advancePositionWithMutation","linesCount","lastNewLinePos","assert","condition","findDir","allowEmpty","findProp","dynamicOnly","isStaticArgOf","arg","hasDynamicKeyVBind","isText$1","isVSlot","isTemplateNode","isSlotOutlet","propsHelperSet","getUnnormalizedProps","callPath","injectProp","propsWithInjection","parentCall","first","hasProp","result","propKeyName","toValidAssetId","type","searchValue","replaceValue","hasScopeRef","ids","b","isObject","getMemoedVNodeCall","forAliasRE","defaultParserOptions","NO","define_process_env_default","currentOptions","currentRoot","currentInput","currentOpenTag","currentProp","currentAttrValue","currentAttrStartIndex","currentAttrEndIndex","inPre","inVPre","currentVPreBoundary","tokenizer","emitError","end","onText","getSlice","innerStart","innerEnd","addNode","createExp","getLoc","endOpenTag","found","j","el","onCloseTag","backTrack","raw","dirToAttr","setLocEnd","mod","condense","expParseMode","parseForExpression","syncIndex","forIteratorRE","stripParensRE","inMatch","LHS","RHS","createAliasExpression","asParam","valueContent","trimmedOffset","iteratorMatch","keyContent","keyOffset","indexContent","ns","lastNode","isImplied","lookAhead","extend","isFragmentTemplate","condenseWhitespace","inlineTemplateProp","specialTemplateDir","isUpperCase","windowsNewlineRE","shouldCondense","removedWhitespace","isAllWhitespace","prev","next","hasNewlineChar","prevCharIsWhitespace","dir","attr","parseMode","reset","baseParse","options","delimiters","cacheStatic","walk","isSingleElementRoot","child","doNotHoistNode","inFor","toCache","constantType","getConstantType","codegenNode","flag","getGeneratedPropsConstantType","getNodeProps","i2","cachedAsArray","isArray","getCacheExpression","slot","getSlotNode","slotName","node2","constantCache","cached","returnType2","generatedPropsType","childType","expType","returnType","isSymbol","allowHoistedHelperSet","getConstantTypeOfHelperCall","keyType","valueType","createTransformContext","filename","prefixIdentifiers","hoistStatic","hmr","cacheHandlers","nodeTransforms","directiveTransforms","transformHoist","isBuiltInComponent","isCustomElement","expressionPlugins","scopeId","slotted","ssrCssVars","bindingMetadata","EMPTY_OBJ","inline","isTS","onError","onWarn","nameMatch","capitalize","camelize","count","currentCount","list","removalIndex","identifier","isVNode","cacheExp","transform","traverseNode","createRootCodegen","traverseChildren","nodeRemoved","exitFns","onExit","createStructuralDirectiveTransform","fn","matches","n","PURE_ANNOTATION","aliasHelper","createCodegenContext","ast","sourceMap","optimizeImports","runtimeGlobalName","runtimeModuleName","ssrRuntimeModuleName","withoutNewLine","generate","push","indent","deindent","hasHelpers","useWithBlock","genFunctionPreamble","functionName","signature","genAssets","genNode","VueBinding","staticHelpers","genHoists","assets","resolver","maybeSelfReference","hoists","genNodeListAsArray","multilines","genNodeList","comma","genText","genExpression","genInterpolation","genCompoundExpression","genComment","genVNodeCall","genCallExpression","genObjectExpression","genArrayExpression","genFunctionExpression","genConditionalExpression","genCacheExpression","pure","genExpressionAsPropertyKey","text","patchFlagString","callHelper","genNullableArgs","needNewline","needsParens","isNested","needArraySpread","transformExpression","processExpression","asParams","asRawStatements","localVars","stringifyExpression","transformIf","processIf","ifNode","branch","isRoot","siblings","sibling","createCodegenNodeForBranch","parentCondition","getParentCondition","processCodegen","createIfBranch","isTemplateIf","keyIndex","createChildrenCodegenNode","keyProperty","firstChild","vnodeCall","transformBind","_node","modifiers","transformBindShorthand","injectPrefix","propName","prefix","transformFor","processFor","forNode","renderExp","isTemplate","memo","keyProp","keyExp","isStableFragment","fragmentFlag","childBlock","needFragmentWrapper","slotOutlet","loop","createForLoopParams","parseResult","finalizeForParseResult","addIdentifiers","removeIdentifiers","scopes","memoArgs","createParamsList","defaultFallback","trackSlotScopes","vSlot","trackVForSlotScopes","vFor","buildClientSlotFn","_vForExp","buildSlots","buildSlotFn","slotsProperties","dynamicSlots","hasDynamicSlots","onComponentSlot","hasTemplateSlots","hasNamedDefaultSlot","implicitDefaultChildren","seenSlotNames","conditionalBranchIndex","slotElement","slotDir","slotChildren","slotLoc","slotProps","dirLoc","staticSlotName","slotFunction","vIf","vElse","buildDynamicSlot","conditional","buildDefaultSlotProperty","children2","isNonWhitespaceContent","slotFlag","hasForwardedSlots","slots","directiveImportMap","transformElement","vnodeTag","resolveComponentType","isDynamicComponent","vnodeProps","vnodeChildren","vnodeDynamicProps","dynamicPropNames","vnodeDirectives","shouldUseBlock","propsBuildResult","buildProps","buildDirectiveArgs","hasDynamicTextChild","stringifyDynamicPropNames","isExplicitDynamic","isComponentTag","isProp","builtIn","elementLoc","mergeArgs","runtimeDirectives","hasChildren","hasRef","hasClassBinding","hasStyleBinding","hasHydrationEventBinding","hasDynamicKeys","hasVnodeHook","pushMergeArg","dedupeProperties","pushRefVForMarker","analyzePatchFlag","isEventHandler","isOn","isReservedProp","nameLoc","isVBind","isVOn","directiveTransform","props2","needRuntime","isBuiltInDirective","propsExpression","classKeyIndex","styleKeyIndex","hasDynamicKey","classProp","styleProp","knownProps","deduped","existing","mergeAsArray","incoming","dirArgs","runtime","trueExpression","modifier","propsNamesString","l","transformSlotOutlet","processSlotOutlet","slotArgs","expectedLen","nonNameProps","transformOn","augmentor","eventName","rawName","eventString","toHandlerKey","shouldCache","isMemberExp","isInlineStatement","hasMultipleStatements","transformText","currentContainer","hasText","callArgs","seen$1","transformOnce","cur","transformModel","createTransformProps","rawExp","expString","bindingType","assignmentExp","eventArg","m","modifiersKey","validDivisionCharRE","transformFilter","rewriteFilter","parseFilter","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","lastFilterIndex","expression","filters","pushFilter","wrapFilter","filter","seen","transformMemo","getBaseTransformPreset","baseCompile","isModuleMode","resolvedOptions","BindingTypes","noopDirectiveTransform","V_MODEL_RADIO","V_MODEL_CHECKBOX","V_MODEL_TEXT","V_MODEL_SELECT","V_MODEL_DYNAMIC","V_ON_WITH_MODIFIERS","V_ON_WITH_KEYS","V_SHOW","TRANSITION","TRANSITION_GROUP","decoder","decodeHtmlBrowser","asAttr","parserOptions","isVoidTag","isHTMLTag","isSVGTag","isMathMLTag","rootNamespace","a","transformStyle","parseInlineCSS","cssText","normalized","parseStringStyle","createDOMCompilerError","DOMErrorCodes","DOMErrorMessages","transformVHtml","transformVText","baseResult","transformModel$1","directiveToUse","isInvalidType","isEventOptionModifier","isNonKeyModifier","makeMap","maybeKeyModifier","isKeyboardEvent","resolveModifiers","keyModifiers","nonKeyModifiers","eventOptionModifiers","transformClick","event","transformOn$1","handlerExp","modifierPostfix","transformShow","ignoreSideEffectTags","DOMNodeTransforms","DOMDirectiveTransforms","compile","src","parse","template","exports","compilerDom","require$$0","runtimeDom","require$$1","shared","require$$2","_interopNamespaceDefault","e","k","runtimeDom__namespace","compileCache","compileToFunction","opts","render","vueModule"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}