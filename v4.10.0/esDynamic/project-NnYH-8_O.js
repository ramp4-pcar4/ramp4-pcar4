import{bt as s,bu as i,bv as d,bw as S,bT as n,bS as m,ha as g,bq as y,br as b,U as R,hb as w}from"./main-DCIX61zy.js";let e=class extends S{constructor(o){super(o),this.geometries=[],this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const o=this.geometries.map(a=>a.toJSON()),t=this.geometries[0],r={};return r.outSR=n(this.outSpatialReference),r.inSR=n(t.spatialReference),r.geometries=JSON.stringify({geometryType:m(t),geometries:o}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),this.transformForward!=null&&(r.transformForward=this.transformForward),r}};s([i()],e.prototype,"geometries",void 0),s([i({json:{read:{source:"outSR"}}})],e.prototype,"outSpatialReference",void 0),s([i()],e.prototype,"transformation",void 0),s([i()],e.prototype,"transformForward",void 0),e=s([d("esri.rest.support.ProjectParameters")],e);const p=e,F=g(p);async function j(o,t,r){t=F(t);const a=y(o),f={...a.query,f:"json",...t.toJSON()},u=t.outSpatialReference,c=m(t.geometries[0]),h=b(f,r);return R(a.path+"/project",h).then(({data:{geometries:l}})=>w(l,c,u))}export{j as n,p};
