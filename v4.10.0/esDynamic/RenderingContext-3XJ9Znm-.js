import{d as W}from"./WGLContainer-whJgsi2t.js";import{glslifyDefineMap as et,ProgramCache as st}from"./webglDeps-Dw9YmB8n.js";import{aQ as R,aT as v,aR as p,aS as V,id as A,ie as B,ou as g,aA as m,az as x,ay as a,hW as d,aC as C,Q as w,ct as M,cx as U,cw as S,cA as z,cv as N,aI as D,aq as q,cu as it,cy as rt,gN as I,lm as b,ov as y,h_ as F,aB as k,ow as at,lk as E,ox as nt,oy as Y,ft as lt,bj as ot,ll as O}from"./main-DCIX61zy.js";import{B as ht,a as ft,Q as ut}from"./renderState-CRtOsw3X.js";import{o as K}from"./interfaces-DN2-jsJC.js";import{E as P}from"./BufferObject-DqJSjWFs.js";import{x as G}from"./Program-1XjJitsM.js";import{t as L,f as _t,a as ct}from"./testSVGPremultipliedAlpha-DmWsO1ZL.js";import{r as dt}from"./floatRGBA-CNeCgBBY.js";import{t as H}from"./doublePrecisionUtils-BJbYwoii.js";import{o as j}from"./VertexArrayObject-C4kjI814.js";import{t as $}from"./VertexElementDescriptor-BAy1DPb3.js";const Et=t=>{let s="";s+=t[0].toUpperCase();for(let e=1;e<t.length;e++){const i=t[e];i===i.toUpperCase()?(s+="_",s+=i):s+=i.toUpperCase()}return s},gt=t=>{const s={};for(const e in t)s[Et(e)]=t[e];return et(s)},pt=(t,s,e,i)=>{const r=t+t.slice(Math.max(0,t.lastIndexOf("/"))),n=s+s.slice(Math.max(0,s.lastIndexOf("/"))),l=gt(i);return{attributes:e,shaders:{vertexShader:l+W(`${r}.vert`),fragmentShader:l+W(`${n}.frag`)}}};class Q{constructor(){this.blend=!1,this.blendColor={r:0,g:0,b:0,a:0},this.blendFunction={srcRGB:R.ONE,dstRGB:R.ZERO,srcAlpha:R.ONE,dstAlpha:R.ZERO},this.blendEquation={mode:v.ADD,modeAlpha:v.ADD},this.colorMask={r:!0,g:!0,b:!0,a:!0},this.faceCulling=!1,this.cullFace=p.BACK,this.frontFace=V.CCW,this.scissorTest=!1,this.scissorRect={x:0,y:0,width:0,height:0},this.depthTest=!1,this.depthFunction=A.LESS,this.clearDepth=1,this.depthWrite=!0,this.depthRange={zNear:0,zFar:1},this.viewport=null,this.stencilTest=!1,this.polygonOffsetFill=!1,this.polygonOffset=[0,0],this.stencilFunction={face:p.FRONT_AND_BACK,func:A.ALWAYS,ref:0,mask:1},this.clearStencil=0,this.stencilWriteMask=1,this.stencilOperation={face:p.FRONT_AND_BACK,fail:B.KEEP,zFail:B.KEEP,zPass:B.KEEP},this.clearColor={r:0,g:0,b:0,a:0},this.program=null,this.vertexBuffer=null,this.indexBuffer=null,this.uniformBuffer=null,this.pixelPackBuffer=null,this.pixelUnpackBuffer=null,this.copyReadBuffer=null,this.copyWriteBuffer=null,this.transformFeedbackBuffer=null,this.uniformBufferBindingPoints=new Array,this.transformBufferBindingPoints=new Array,this.readFramebuffer=null,this.drawFramebuffer=null,this.drawBuffers={defaultFramebuffer:[g.BACK],fbos:new WeakMap},this.renderbuffer=null,this.activeTexture=0,this.textureUnitMap=new Array,this.vertexArrayObject=null}}let bt=class{constructor(){for(this._current=new Array,this._allocations=null;this._current.length<m.COUNT;)this._current.push(0)}increment(t,s,e=1){this._current[t]+=e,this._allocations?.add(s)}decrement(t,s,e=1){this._current[t]-=e,this._allocations?.remove(s)}get current(){return this._current}get total(){return this.current.reduce((t,s,e)=>t+(e<m.UNCOUNTED?s:0),0)}get resourceInformation(){let t="";if(this.total>0){t+=`Live objects:
`;for(let s=0;s<m.COUNT;++s){const e=this._current[s];e>0&&(t+=`${m[s]}: ${e}
`)}}return t+=this._allocations?.resetLog(),t}},Ft=class{constructor(t,s,e){const i=s.textureFilterAnisotropic,r=e.maxAnisotropy??1/0;this.versionString=t.getParameter(t.VERSION),this.maxVertexTextureImageUnits=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxVertexAttributes=t.getParameter(t.MAX_VERTEX_ATTRIBS),this.maxMaxAnisotropy=i?Math.min(t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY),r):1,this.maxTextureImageUnits=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=t.getParameter(t.MAX_TEXTURE_SIZE),this.maxRenderbufferSize=t.getParameter(t.MAX_RENDERBUFFER_SIZE),this.maxViewportDims=t.getParameter(t.MAX_VIEWPORT_DIMS),this.maxUniformBufferBindings=t.getParameter(t.MAX_UNIFORM_BUFFER_BINDINGS),this.maxVertexUniformBlocks=t.getParameter(t.MAX_VERTEX_UNIFORM_BLOCKS),this.maxFragmentUniformBlocks=t.getParameter(t.MAX_FRAGMENT_UNIFORM_BLOCKS),this.maxUniformBlockSize=t.getParameter(t.MAX_UNIFORM_BLOCK_SIZE),this.uniformBufferOffsetAlignment=t.getParameter(t.UNIFORM_BUFFER_OFFSET_ALIGNMENT),this.maxArrayTextureLayers=t.getParameter(t.MAX_ARRAY_TEXTURE_LAYERS),this.maxSamples=t.getParameter(t.MAX_SAMPLES),this.maxDrawBuffers=t.getParameter(t.MAX_DRAW_BUFFERS)}};class X{constructor(s){this._rctx=s,this._indexBuffer=this._createIndexbuffer(),this._program=this._createHelperProgram()}static getShaderSources(){return{vertex:`#version 300 es
    precision highp float;

    void main(void) {
      gl_Position = vec4(0.0, 0.0, float(gl_VertexID)-2.0, 1.0);
    }`,fragment:`#version 300 es
    precision highp float;

    out vec4 fragColor;

    void main(void) {
      fragColor = vec4(0.0, 0.0, 0.0, 1.0);
    }`}}_createHelperProgram(){const s=X.getShaderSources();return this._rctx.programCache.acquire(s.vertex,s.fragment,new Map([]))}_createIndexbuffer(){return P.createIndex(this._rctx,x.STATIC_DRAW,new Uint32Array([0]))}run(){this._program.compiled&&this._indexBuffer&&(this._rctx.bindVAO(null),this._rctx.useProgram(this._program),this._rctx.bindBuffer(this._indexBuffer,a.ELEMENT_ARRAY_BUFFER),this._rctx.drawElements(d.POINTS,1,C.UNSIGNED_INT,0))}dispose(){this._program.dispose(),this._indexBuffer.dispose()}get test(){}}class Rt extends L{constructor(s){super(),this._rctx=s,this._helperProgram=null,w("mac")&&w("chrome")&&(this._program=this._prepareProgram(),this._helperProgram=this._prepareHelperProgram())}dispose(){super.dispose(),this._helperProgram?.dispose(),this._helperProgram=null}_test(s){const e=this._rctx,i=e.getBoundFramebufferObject(),{x:r,y:n,width:l,height:u}=e.getViewport();e.resetState();const o=new M(1);o.wrapMode=U.CLAMP_TO_EDGE,o.samplingMode=S.NEAREST;const h=new G(e,o),_=P.createIndex(this._rctx,x.STATIC_DRAW,new Uint8Array([0]));e.bindFramebuffer(h),e.setViewport(0,0,1,1),e.useProgram(this._helperProgram),e.bindBuffer(_,a.ELEMENT_ARRAY_BUFFER),e.drawElements(d.POINTS,1,C.UNSIGNED_BYTE,0),e.useProgram(s),e.bindVAO(null),e.drawArrays(d.TRIANGLES,0,258);const c=new Uint8Array(4);return h.readPixels(0,0,1,1,z.RGBA,N.UNSIGNED_BYTE,c),e.setViewport(r,n,l,u),e.bindFramebuffer(i),h.dispose(),_.dispose(),c[0]===255}_prepareProgram(){const s=`#version 300 es
    precision highp float;

    out float triangleId;

    const vec3 triangleVertices[3] = vec3[3](vec3(-0.5, -0.5, 0.0), vec3(0.5, -0.5, 0.0), vec3(0.0, 0.5, 0.0));

    void main(void) {
      triangleId = floor(float(gl_VertexID)/3.0);

      vec3 position = triangleVertices[gl_VertexID % 3];
      float offset = triangleId / ${K.float(85)};
      position.z = 0.5 - offset;

      gl_Position = vec4(position, 1.0);
    }
    `,e=`#version 300 es
    precision highp float;

    in float triangleId;

    out vec4 fragColor;

    void main(void) {
      fragColor = triangleId == ${K.float(85)} ? vec4(0.0, 1.0, 0.0, 1.0) : vec4(1.0, 0.0, 0.0, 1.0);
    }
    `;return this._rctx.programCache.acquire(s,e,new Map([]))}_prepareHelperProgram(){const s=X.getShaderSources();return this._rctx.programCache.acquire(s.vertex,s.fragment,new Map([]))}}let Bt=class extends L{constructor(t){super(),this._rctx=t,this._program=Z(this._rctx,!1),this._obfuscated=Z(this._rctx,!0)}dispose(){super.dispose(),this._obfuscated=D(this._obfuscated)}_test(t){if(w("force-double-precision-obfuscation"))return!0;if(this._obfuscated==null)return!1;const s=this._rctx,e=s.getBoundFramebufferObject(),{x:i,y:r,width:n,height:l}=s.getViewport(),u=this._runProgram(t),o=this._runProgram(this._obfuscated);return s.setViewport(i,r,n,l),s.bindFramebuffer(e),u!==0&&(o===0||u/o>5)}_runProgram(t){const s=this._rctx;s.resetState();const e=new M(1);e.wrapMode=U.CLAMP_TO_EDGE,e.samplingMode=S.NEAREST;const i=new G(s,e),r=P.createVertex(s,x.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),n=new j(s,new Map([["position",0]]),new Map([["geometry",[new $("position",2,C.UNSIGNED_SHORT,0,4)]]]),new Map([["geometry",r]])),l=q(5633261287538229e-9,2626832878767164e-9,1.4349880495278358e6),u=q(563327146742708e-8,2.6268736381334523e6,1434963231608387e-9),o=new Float32Array(6);H(l,o,3);const h=new Float32Array(6);H(u,h,3),s.useProgram(t),t.setUniform3f("u_highA",o[0],o[2],o[4]),t.setUniform3f("u_lowA",o[1],o[3],o[5]),t.setUniform3f("u_highB",h[0],h[2],h[4]),t.setUniform3f("u_lowB",h[1],h[3],h[5]),s.bindFramebuffer(i),s.setViewport(0,0,1,1),s.bindVAO(n),s.drawArrays(d.TRIANGLE_STRIP,0,4);const _=new Uint8Array(4);i.readPixels(0,0,1,1,z.RGBA,N.UNSIGNED_BYTE,_),n.dispose(),i.dispose();const c=(l[2]-u[2])/25,T=dt(_);return Math.abs(c-T)}};function Z(t,s){const e=`

  precision highp float;

  attribute vec2 position;

  uniform vec3 u_highA;
  uniform vec3 u_lowA;
  uniform vec3 u_highB;
  uniform vec3 u_lowB;

  varying vec4 v_color;

  ${s?"#define DOUBLE_PRECISION_REQUIRES_OBFUSCATION":""}

  #ifdef DOUBLE_PRECISION_REQUIRES_OBFUSCATION

  vec3 dpPlusFrc(vec3 a, vec3 b) {
    return mix(a, a + b, vec3(notEqual(b, vec3(0))));
  }

  vec3 dpMinusFrc(vec3 a, vec3 b) {
    return mix(vec3(0), a - b, vec3(notEqual(a, b)));
  }

  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {
    vec3 t1 = dpPlusFrc(hiA, hiB);
    vec3 e = dpMinusFrc(t1, hiA);
    vec3 t2 = dpMinusFrc(hiB, e) + dpMinusFrc(hiA, dpMinusFrc(t1, e)) + loA + loB;
    return t1 + t2;
  }

  #else

  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {
    vec3 t1 = hiA + hiB;
    vec3 e = t1 - hiA;
    vec3 t2 = ((hiB - e) + (hiA - (t1 - e))) + loA + loB;
    return t1 + t2;
  }

  #endif

  const float MAX_RGBA_FLOAT =
    255.0 / 256.0 +
    255.0 / 256.0 / 256.0 +
    255.0 / 256.0 / 256.0 / 256.0 +
    255.0 / 256.0 / 256.0 / 256.0 / 256.0;

  const vec4 FIXED_POINT_FACTORS = vec4(1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0);

  vec4 float2rgba(const float value) {
    // Make sure value is in the domain we can represent
    float valueInValidDomain = clamp(value, 0.0, MAX_RGBA_FLOAT);

    // Decompose value in 32bit fixed point parts represented as
    // uint8 rgba components. Decomposition uses the fractional part after multiplying
    // by a power of 256 (this removes the bits that are represented in the previous
    // component) and then converts the fractional part to 8bits.
    vec4 fixedPointU8 = floor(fract(valueInValidDomain * FIXED_POINT_FACTORS) * 256.0);

    // Convert uint8 values (from 0 to 255) to floating point representation for
    // the shader
    const float toU8AsFloat = 1.0 / 255.0;

    return fixedPointU8 * toU8AsFloat;
  }

  void main() {
    vec3 val = dpAdd(u_highA, u_lowA, -u_highB, -u_lowB);

    v_color = float2rgba(val.z / 25.0);

    gl_Position = vec4(position * 2.0 - 1.0, 0.0, 1.0);
  }
  `;return t.programCache.acquire(e,`
  precision highp float;

  varying vec4 v_color;

  void main() {
    gl_FragColor = v_color;
  }
  `,new Map([["position",0]]))}class mt extends L{constructor(s){if(super(),this._rctx=s,!s.gl||!(s.capabilities.colorBufferFloat?.textureFloat&&s.capabilities.colorBufferFloat?.floatBlend))return;const e=`
    precision highp float;
    attribute vec2 a_pos;

    void main() {
      gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);
    }
    `,i=`
     precision highp float;

     void main() {
      gl_FragColor = vec4(0.5, 0.5, 0.5, 0.5);
     }
    `;this._program=s.programCache.acquire(e,i,new Map([["a_pos",0]]))}_test(s){const e=this._rctx,i=new M(1);i.wrapMode=U.CLAMP_TO_EDGE,i.dataType=N.FLOAT,i.internalFormat=it.RGBA32F,i.samplingMode=S.NEAREST;const r=new G(e,i),n=P.createVertex(e,x.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),l=new j(e,new Map([["a_pos",0]]),new Map([["geometry",[new $("a_pos",2,C.UNSIGNED_SHORT,0,4)]]]),new Map([["geometry",n]]));e.gl.getError(),e.useProgram(s);const u=e.getBoundFramebufferObject(),{x:o,y:h,width:_,height:c}=e.getViewport();e.bindFramebuffer(r),e.setViewport(0,0,1,1),e.bindVAO(l),e.drawArrays(d.TRIANGLE_STRIP,0,4);const T=ht({blending:ft});e.setPipelineState(T),e.drawArrays(d.TRIANGLE_STRIP,0,4);const tt=e.gl.getError();return e.setViewport(o,h,_,c),e.bindFramebuffer(u),l.dispose(),r.dispose(),tt!==e.gl.INVALID_OPERATION||(console.warn("Device claims support for WebGL extension EXT_float_blend but does not support it. Using fall back."),!1)}}class Tt{constructor(s){this.rctx=s,this.floatBufferBlend=new mt(s),this.svgPremultipliesAlpha=new _t(s),this.doublePrecisionRequiresObfuscation=new Bt(s),this.drawArraysRequiresIndicesTypeReset=new Rt(s)}dispose(){this.doublePrecisionRequiresObfuscation.dispose(),this.svgPremultipliesAlpha.dispose(),this.floatBufferBlend.dispose(),this.drawArraysRequiresIndicesTypeReset.dispose()}}function At(t,s){if(s.compressedTextureETC)return null;const e=t.getExtension("WEBGL_compressed_texture_etc");return e?{COMPRESSED_R11_EAC:e.COMPRESSED_R11_EAC,COMPRESSED_SIGNED_R11_EAC:e.COMPRESSED_SIGNED_R11_EAC,COMPRESSED_RG11_EAC:e.COMPRESSED_RG11_EAC,COMPRESSED_SIGNED_RG11_EAC:e.COMPRESSED_SIGNED_RG11_EAC,COMPRESSED_RGB8_ETC2:e.COMPRESSED_RGB8_ETC2,COMPRESSED_SRGB8_ETC2:e.COMPRESSED_SRGB8_ETC2,COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:e.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:e.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,COMPRESSED_RGBA8_ETC2_EAC:e.COMPRESSED_RGBA8_ETC2_EAC,COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:e.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC}:null}function xt(t,s){if(s.compressedTextureS3TC)return null;const e=t.getExtension("WEBGL_compressed_texture_s3tc");return e?{COMPRESSED_RGB_S3TC_DXT1:e.COMPRESSED_RGB_S3TC_DXT1_EXT,COMPRESSED_RGBA_S3TC_DXT1:e.COMPRESSED_RGBA_S3TC_DXT1_EXT,COMPRESSED_RGBA_S3TC_DXT3:e.COMPRESSED_RGBA_S3TC_DXT3_EXT,COMPRESSED_RGBA_S3TC_DXT5:e.COMPRESSED_RGBA_S3TC_DXT5_EXT}:null}function Ct(t,s){if(s.textureFilterAnisotropic)return null;const e=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");return e?{MAX_TEXTURE_MAX_ANISOTROPY:e.MAX_TEXTURE_MAX_ANISOTROPY_EXT,TEXTURE_MAX_ANISOTROPY:e.TEXTURE_MAX_ANISOTROPY_EXT}:null}function St(t,s){const e=!s.colorBufferHalfFloat&&t.getExtension("EXT_color_buffer_half_float")||!s.colorBufferFloat&&t.getExtension("EXT_color_buffer_float"),i=!s.colorBufferFloat&&t.getExtension("EXT_color_buffer_float"),r=!s.floatBlend&&!s.colorBufferFloat&&t.getExtension("EXT_float_blend");return e||i||r?{textureFloat:!!i,textureHalfFloat:!!e,floatBlend:!!r,R16F:t.R16F,RG16F:t.RG16F,RGBA16F:t.RGBA16F,R32F:t.R32F,RG32F:t.RG32F,RGBA32F:t.RGBA32F,R11F_G11F_B10F:t.R11F_G11F_B10F,RGB16F:t.RGB16F}:null}function Ot(t,s,e,i,r){if(s[e])return!1;for(const n of r)if(t.getExtension(n))return!0;return!1}function Pt(t,s){if(s.textureNorm16)return null;const e=t.getExtension("EXT_texture_norm16");return e?{R16:e.R16_EXT,RG16:e.RG16_EXT,RGB16:e.RGB16_EXT,RGBA16:e.RGBA16_EXT,R16_SNORM:e.R16_SNORM_EXT,RG16_SNORM:e.RG16_SNORM_EXT,RGB16_SNORM:e.RGB16_SNORM_EXT,RGBA16_SNORM:e.RGBA16_SNORM_EXT}:null}function vt(t,s){const e=s.loseContext&&t.getExtension("WEBGL_lose_context");return e?{loseRenderingContext:()=>e.loseContext()}:null}class wt{constructor(s,e){this._gl=s,this._compressedTextureETC=null,this._compressedTextureS3TC=null,this._textureFilterAnisotropic=null,this._colorBufferFloat=null,this._loseContext=null,this._textureNorm16=null,this._textureFloatLinear=null,this._disabledExtensions=e.disabledExtensions||{},this._debugWebGLExtensions=e.debugWebGLExtensions||{}}get compressedTextureETC(){return this._compressedTextureETC??=At(this._gl,this._disabledExtensions),this._compressedTextureETC}get compressedTextureS3TC(){return this._compressedTextureS3TC??=xt(this._gl,this._disabledExtensions),this._compressedTextureS3TC}get textureFilterAnisotropic(){return this._textureFilterAnisotropic??=Ct(this._gl,this._disabledExtensions),this._textureFilterAnisotropic}get disjointTimerQuery(){return this._disjointTimerQuery??=ct(this._gl,this._disabledExtensions),this._disjointTimerQuery}get colorBufferFloat(){return this._colorBufferFloat??=St(this._gl,this._disabledExtensions),this._colorBufferFloat}get loseContext(){return this._loseContext??=vt(this._gl,this._debugWebGLExtensions),this._loseContext}get textureNorm16(){return this._textureNorm16??=Pt(this._gl,this._disabledExtensions),this._textureNorm16}get textureFloatLinear(){return this._textureFloatLinear??=Ot(this._gl,this._disabledExtensions,"textureFloatLinear",!1,["OES_texture_float_linear"]),this._textureFloatLinear}enable(s){return this[s]}}let Mt=class{constructor(t,s){this.gl=t,this.instanceCounter=new bt,this.programCache=new st(this),this._transformFeedbackRequestInfo=null,this._state=new Q,this._numOfDrawCalls=0,this._numOfTriangles=0,this._loadExtensions(),this.configure(s)}configure(t){this._capabilities=new wt(this.gl,t),this._parameters=new Ft(this.gl,this._capabilities,t),rt.TEXTURE_UNIT_FOR_UPDATES=this._parameters.maxTextureImageUnits-1;const s=this.gl.getParameter(this.gl.VIEWPORT);this._state=new Q,this._state.viewport={x:s[0],y:s[1],width:s[2],height:s[3]},this._stateTracker=new ut({setBlending:e=>{if(e){this.setBlendingEnabled(!0),this.setBlendEquationSeparate(e.opRgb,e.opAlpha),this.setBlendFunctionSeparate(e.srcRgb,e.dstRgb,e.srcAlpha,e.dstAlpha);const i=e.color;this.setBlendColor(i.r,i.g,i.b,i.a)}else this.setBlendingEnabled(!1)},setCulling:e=>{e?(this.setFaceCullingEnabled(!0),this.setCullFace(e.face),this.setFrontFace(e.mode)):this.setFaceCullingEnabled(!1)},setPolygonOffset:e=>{e?(this.setPolygonOffsetFillEnabled(!0),this.setPolygonOffset(e.factor,e.units)):this.setPolygonOffsetFillEnabled(!1)},setDepthTest:e=>{e?(this.setDepthTestEnabled(!0),this.setDepthFunction(e.func)):this.setDepthTestEnabled(!1)},setStencilTest:e=>{if(e){this.setStencilTestEnabled(!0);const i=e.function;this.setStencilFunction(i.func,i.ref,i.mask);const r=e.operation;this.setStencilOp(r.fail,r.zFail,r.zPass)}else this.setStencilTestEnabled(!1)},setDepthWrite:e=>{e?(this.setDepthWriteEnabled(!0),this.setDepthRange(e.zNear,e.zFar)):this.setDepthWriteEnabled(!1)},setColorWrite:e=>{e?this.setColorMask(e.r,e.g,e.b,e.a):this.setColorMask(!1,!1,!1,!1)},setStencilWrite:e=>{e?this.setStencilWriteMask(e.mask):this.setStencilWriteMask(0)},setDrawBuffers:e=>{if(e)this.setDrawBuffers(e.buffers);else{const{drawFramebuffer:i}=this._state;i===null?this.setDrawBuffers([g.BACK]):i.colorAttachments.length===0?this.setDrawBuffers([g.NONE]):this.setDrawBuffers([I.COLOR_ATTACHMENT0])}}}),this.enforceState(),D(this._driverTest),this._driverTest=new Tt(this)}dispose(){D(this._driverTest),this.programCache.dispose(),this.bindVAO(null),this.unbindBuffer(a.ARRAY_BUFFER),this.unbindBuffer(a.ELEMENT_ARRAY_BUFFER),this.unbindBuffer(a.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(a.PIXEL_PACK_BUFFER),this.unbindBuffer(a.PIXEL_UNPACK_BUFFER),this.unbindBuffer(a.COPY_READ_BUFFER),this.unbindBuffer(a.COPY_WRITE_BUFFER),this._state.textureUnitMap.length=0,b()&&console.log(this.instanceCounter.resourceInformation)}get driverTest(){return this._driverTest}get contextAttributes(){return this.gl.getContextAttributes()}get parameters(){return this._parameters}setPipelineState(t){this._stateTracker.setPipeline(t)}setBlendingEnabled(t){this._state.blend!==t&&(t===!0?this.gl.enable(this.gl.BLEND):this.gl.disable(this.gl.BLEND),this._state.blend=t,this._stateTracker.invalidateBlending())}externalProgramUpdate(){this._state.program?.stop(),this._state.program=null}externalTextureUnitUpdate(t,s){for(let e=0;e<t.length;++e)this._state.textureUnitMap[t[e]]=null;s>=0&&(this._state.activeTexture=s)}externalVertexArrayObjectUpdate(){this.gl.bindVertexArray(null),this._state.vertexArrayObject=null,this._state.vertexBuffer=null,this._state.indexBuffer=null}externalVertexBufferUpdate(){this._state.vertexBuffer=null}externalIndexBufferUpdate(){this._state.indexBuffer=null}setBlendColor(t,s,e,i){t===this._state.blendColor.r&&s===this._state.blendColor.g&&e===this._state.blendColor.b&&i===this._state.blendColor.a||(this.gl.blendColor(t,s,e,i),this._state.blendColor.r=t,this._state.blendColor.g=s,this._state.blendColor.b=e,this._state.blendColor.a=i,this._stateTracker.invalidateBlending())}setBlendFunction(t,s){t===this._state.blendFunction.srcRGB&&s===this._state.blendFunction.dstRGB||(this.gl.blendFunc(t,s),this._state.blendFunction.srcRGB=t,this._state.blendFunction.srcAlpha=t,this._state.blendFunction.dstRGB=s,this._state.blendFunction.dstAlpha=s,this._stateTracker.invalidateBlending())}setBlendFunctionSeparate(t,s,e,i){this._state.blendFunction.srcRGB===t&&this._state.blendFunction.srcAlpha===e&&this._state.blendFunction.dstRGB===s&&this._state.blendFunction.dstAlpha===i||(this.gl.blendFuncSeparate(t,s,e,i),this._state.blendFunction.srcRGB=t,this._state.blendFunction.srcAlpha=e,this._state.blendFunction.dstRGB=s,this._state.blendFunction.dstAlpha=i,this._stateTracker.invalidateBlending())}setBlendEquation(t){this._state.blendEquation.mode!==t&&(this.gl.blendEquation(t),this._state.blendEquation.mode=t,this._state.blendEquation.modeAlpha=t,this._stateTracker.invalidateBlending())}setBlendEquationSeparate(t,s){this._state.blendEquation.mode===t&&this._state.blendEquation.modeAlpha===s||(this.gl.blendEquationSeparate(t,s),this._state.blendEquation.mode=t,this._state.blendEquation.modeAlpha=s,this._stateTracker.invalidateBlending())}setColorMask(t,s,e,i){this._state.colorMask.r===t&&this._state.colorMask.g===s&&this._state.colorMask.b===e&&this._state.colorMask.a===i||(this.gl.colorMask(t,s,e,i),this._state.colorMask.r=t,this._state.colorMask.g=s,this._state.colorMask.b=e,this._state.colorMask.a=i,this._stateTracker.invalidateColorWrite())}setClearColor(t,s,e,i){this._state.clearColor.r===t&&this._state.clearColor.g===s&&this._state.clearColor.b===e&&this._state.clearColor.a===i||(this.gl.clearColor(t,s,e,i),this._state.clearColor.r=t,this._state.clearColor.g=s,this._state.clearColor.b=e,this._state.clearColor.a=i)}setFaceCullingEnabled(t){this._state.faceCulling!==t&&(t===!0?this.gl.enable(this.gl.CULL_FACE):this.gl.disable(this.gl.CULL_FACE),this._state.faceCulling=t,this._stateTracker.invalidateCulling())}setPolygonOffsetFillEnabled(t){this._state.polygonOffsetFill!==t&&(t===!0?this.gl.enable(this.gl.POLYGON_OFFSET_FILL):this.gl.disable(this.gl.POLYGON_OFFSET_FILL),this._state.polygonOffsetFill=t,this._stateTracker.invalidatePolygonOffset())}setPolygonOffset(t,s){this._state.polygonOffset[0]===t&&this._state.polygonOffset[1]===s||(this._state.polygonOffset[0]=t,this._state.polygonOffset[1]=s,this.gl.polygonOffset(t,s),this._stateTracker.invalidatePolygonOffset())}setCullFace(t){this._state.cullFace!==t&&(this.gl.cullFace(t),this._state.cullFace=t,this._stateTracker.invalidateCulling())}setFrontFace(t){this._state.frontFace!==t&&(this.gl.frontFace(t),this._state.frontFace=t,this._stateTracker.invalidateCulling())}setScissorTestEnabled(t){this._state.scissorTest!==t&&(t===!0?this.gl.enable(this.gl.SCISSOR_TEST):this.gl.disable(this.gl.SCISSOR_TEST),this._state.scissorTest=t)}setScissorRect(t,s,e,i){this._state.scissorRect.x===t&&this._state.scissorRect.y===s&&this._state.scissorRect.width===e&&this._state.scissorRect.height===i||(this.gl.scissor(t,s,e,i),this._state.scissorRect.x=t,this._state.scissorRect.y=s,this._state.scissorRect.width=e,this._state.scissorRect.height=i)}setDepthTestEnabled(t){this._state.depthTest!==t&&(t===!0?this.gl.enable(this.gl.DEPTH_TEST):this.gl.disable(this.gl.DEPTH_TEST),this._state.depthTest=t,this._stateTracker.invalidateDepthTest())}setClearDepth(t){this._state.clearDepth!==t&&(this.gl.clearDepth(t),this._state.clearDepth=t)}setDepthFunction(t){this._state.depthFunction!==t&&(this.gl.depthFunc(t),this._state.depthFunction=t,this._stateTracker.invalidateDepthTest())}setDepthWriteEnabled(t){this._state.depthWrite!==t&&(this.gl.depthMask(t),this._state.depthWrite=t,this._stateTracker.invalidateDepthWrite())}setDepthRange(t,s){this._state.depthRange.zNear===t&&this._state.depthRange.zFar===s||(this.gl.depthRange(t,s),this._state.depthRange.zNear=t,this._state.depthRange.zFar=s,this._stateTracker.invalidateDepthWrite())}setStencilTestEnabled(t){this._state.stencilTest!==t&&(t===!0?this.gl.enable(this.gl.STENCIL_TEST):this.gl.disable(this.gl.STENCIL_TEST),this._state.stencilTest=t,this._stateTracker.invalidateStencilTest())}setClearStencil(t){t!==this._state.clearStencil&&(this.gl.clearStencil(t),this._state.clearStencil=t)}setStencilFunction(t,s,e){this._state.stencilFunction.func===t&&this._state.stencilFunction.ref===s&&this._state.stencilFunction.mask===e||(this.gl.stencilFunc(t,s,e),this._state.stencilFunction.face=p.FRONT_AND_BACK,this._state.stencilFunction.func=t,this._state.stencilFunction.ref=s,this._state.stencilFunction.mask=e,this._stateTracker.invalidateStencilTest())}setStencilFunctionSeparate(t,s,e,i){this._state.stencilFunction.face===t&&this._state.stencilFunction.func===s&&this._state.stencilFunction.ref===e&&this._state.stencilFunction.mask===i||(this.gl.stencilFuncSeparate(t,s,e,i),this._state.stencilFunction.face=t,this._state.stencilFunction.func=s,this._state.stencilFunction.ref=e,this._state.stencilFunction.mask=i,this._stateTracker.invalidateStencilTest())}setStencilWriteMask(t){this._state.stencilWriteMask!==t&&(this.gl.stencilMask(t),this._state.stencilWriteMask=t,this._stateTracker.invalidateStencilWrite())}setStencilOp(t,s,e){this._state.stencilOperation.face===p.FRONT_AND_BACK&&this._state.stencilOperation.fail===t&&this._state.stencilOperation.zFail===s&&this._state.stencilOperation.zPass===e||(this.gl.stencilOp(t,s,e),this._state.stencilOperation.face=p.FRONT_AND_BACK,this._state.stencilOperation.fail=t,this._state.stencilOperation.zFail=s,this._state.stencilOperation.zPass=e,this._stateTracker.invalidateStencilTest())}setStencilOpSeparate(t,s,e,i){this._state.stencilOperation.face===t&&this._state.stencilOperation.fail===s&&this._state.stencilOperation.zFail===e&&this._state.stencilOperation.zPass===i||(this.gl.stencilOpSeparate(t,s,e,i),this._state.stencilOperation.face=t,this._state.stencilOperation.fail=s,this._state.stencilOperation.zFail=e,this._state.stencilOperation.zPass=i,this._stateTracker.invalidateStencilTest())}setActiveTexture(t,s=!1){const e=this._state.activeTexture;return t>=0&&(s||t!==this._state.activeTexture)&&(this.gl.activeTexture(y+t),this._state.activeTexture=t),e}setDrawBuffers(t){const{drawFramebuffer:s}=this._state,e=s===null,i=e?this._state.drawBuffers.defaultFramebuffer:this._state.drawBuffers.fbos.get(s);if(i?.length!==t.length||!i.every((r,n)=>r===t[n]))if(t.length>this.parameters.maxDrawBuffers)console.error("Setting more active draw buffers than GL.MAX_DRAW_BUFFERS allows.");else{if(e){if(t.length>1)return void console.error("The default framebuffer can only have one active draw buffer.");if(t[0]!==g.BACK&&t[0]!==g.NONE)return void console.error("The default framebuffer can only use the constants GL.BACK or GL.NONE as draw buffers.")}e||!t.includes(g.BACK)?(this.gl.drawBuffers(t),e?this._state.drawBuffers.defaultFramebuffer=t:this._state.drawBuffers.fbos.set(s,t),this._stateTracker.invalidateDrawBuffers()):console.error("A framebuffer object can only use the constants GL.COLOR_ATTACHMENTi or GL.NONE as draw buffers.")}}clear(t,s=255){if(t){if(t&F.COLOR){const e=this._state.drawFramebuffer?.colorAttachments;e&&this.setDrawBuffers(e),this.setColorMask(!0,!0,!0,!0)}t&F.DEPTH&&this.setDepthWriteEnabled(!0),t&F.STENCIL&&this.setStencilWriteMask(s),this.gl.clear(t)}}clearFramebuffer(t,s=!1,e=!1){let i=0;if(t){const r=Math.max(1e-13,t[3]);this.setClearColor(t[0],t[1],t[2],r),i|=F.COLOR}s&&(i|=F.DEPTH),e===!1?e=0:(e===!0&&(e=255),i|=F.STENCIL),i&&this.clear(i,e)}drawArrays(t,s,e){if(this._transformFeedbackRequestInfo){if(t!==this._transformFeedbackRequestInfo.primitiveType)throw new Error("DrawArrays called during transform feedback, but primitiveType does not match that of the current transform feedback request");if(this._state.program?.hasTransformFeedbackVaryings==null)throw new Error("DrawArrays called during transform feedback, but the shader program was not linked with a transform feedback varying")}if(b()){this._numOfDrawCalls++,this._numOfTriangles+=J(t,e);const i=this._state.textureUnitMap;for(let r=0;r<i.length;r++){const n=i[r];if(n!=null&&n===this._state.drawFramebuffer?.colorTexture)throw new Error(`Detected readWrite. Texture already bound at index ${r}`)}}this.gl.drawArrays(t,s,e),k(this.gl)}drawArraysInstanced(t,s,e,i){this.gl.drawArraysInstanced(t,s,e,i),k(this.gl)}drawElements(t,s,e,i){if(this._transformFeedbackRequestInfo)throw new Error("Cannot called drawElements during a transform feedback request");if(b()&&(this._numOfDrawCalls++,this._numOfTriangles+=J(t,s)),this.gl.drawElements(t,s,e,i),b()){const r=at(this);if(r){const n=this.getBoundVAO(),l=n?.indexBuffer,u=n?.vertexBuffers,o={indexBuffer:l,vertexBuffers:u},h={mode:t,count:s,type:e,offset:i},_=l?.size??0,c=i+s,T=_<c?`. Buffer is too small. Attempted to draw index ${c} of ${_}`:"";console.error(`drawElements: ${r}${T}`,{args:h,vao:o})}}}drawElementsInstanced(t,s,e,i,r){this.gl.drawElementsInstanced(t,s,e,i,r),k(this.gl)}logInfo(){b()&&console.log(`DrawCalls: ${this._numOfDrawCalls}, Triangles: ${this._numOfTriangles}`)}resetInfo(){b()&&(this._numOfDrawCalls=0,this._numOfTriangles=0)}get capabilities(){return this._capabilities}setViewport(t,s,e,i){e=Math.max(Math.round(e),1),i=Math.max(Math.round(i),1);const r=this._state.viewport;r.x===t&&r.y===s&&r.width===e&&r.height===i||(r.x=t,r.y=s,r.width=e,r.height=i,this.gl.viewport(t,s,e,i))}setViewport4fv(t){this.setViewport(t[0],t[1],t[2],t[3])}restoreViewport({x:t,y:s,width:e,height:i}){this.setViewport(t,s,e,i)}getViewport(){const t=this._state.viewport;return{x:t.x,y:t.y,width:t.width,height:t.height}}useProgram(t){this._state.program!==t&&(this._state.program?.stop(),this._state.program=t,this.gl.useProgram(t?.glName??null))}bindTexture(t,s,e=!1){(s>=this.parameters.maxTextureImageUnits||s<0)&&console.error("Input texture unit is out of range of available units!");const i=this._state.textureUnitMap[s];return t?.glName==null?(i!=null&&(this.setActiveTexture(s,e),this.gl.bindTexture(i.descriptor.target,null)),this._state.textureUnitMap[s]=null,i):e||i!==t?(this.setActiveTexture(s,e),this.gl.bindTexture(t.descriptor.target,t.glName),t.applyChanges(),this._state.textureUnitMap[s]=t,i):(t.isDirty&&(this.setActiveTexture(s,e),t.applyChanges()),i)}unbindTexture(t){if(t!=null)for(let s=0;s<this.parameters.maxTextureImageUnits;s++)this._state.textureUnitMap[s]===t&&(this.bindTexture(null,s),this._state.textureUnitMap[s]=null)}bindFramebuffer(t,s=!1){if(s||this._state.readFramebuffer!==t||this._state.drawFramebuffer!==t){if(this._stateTracker.invalidateDrawBuffers(),t==null)return this.gl.bindFramebuffer(E.FRAMEBUFFER,null),void(this._state.readFramebuffer=this._state.drawFramebuffer=null);t.initializeAndBind(E.FRAMEBUFFER),this._state.readFramebuffer=t,this._state.drawFramebuffer=t}}bindFramebufferSeparate(t,s,e=!1){const i=s===E.READ_FRAMEBUFFER,r=i?this._state.readFramebuffer:this._state.drawFramebuffer;(e||r!==t)&&(t==null?this.gl.bindFramebuffer(s,null):t.initializeAndBind(s),i?this._state.readFramebuffer=t??null:(this._stateTracker.invalidateDrawBuffers(),this._state.drawFramebuffer=t??null))}blitFramebuffer(t,s,e=0,i=0,r=t.width,n=t.height,l=0,u=0,o=s.width,h=s.height,_=F.COLOR,c=S.NEAREST){this.bindFramebufferSeparate(t,E.READ_FRAMEBUFFER),this.bindFramebufferSeparate(s,E.DRAW_FRAMEBUFFER),this.gl.blitFramebuffer(e,i,r,n,l,u,o,h,_,c)}bindBuffer(t,s){if(t)switch(s??=t.bufferType,s){case a.ARRAY_BUFFER:this._state.vertexBuffer=f(this.gl,t,s,this._state.vertexBuffer);break;case a.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=f(this.gl,t,s,this._state.indexBuffer);break;case a.UNIFORM_BUFFER:this._state.uniformBuffer=f(this.gl,t,s,this._state.uniformBuffer);break;case a.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=f(this.gl,t,s,this._state.pixelPackBuffer);break;case a.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=f(this.gl,t,s,this._state.pixelUnpackBuffer);break;case a.COPY_READ_BUFFER:this._state.copyReadBuffer=f(this.gl,t,s,this._state.copyReadBuffer);break;case a.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=f(this.gl,t,s,this._state.copyWriteBuffer);break;case a.TRANSFORM_FEEDBACK_BUFFER:this._state.transformFeedbackBuffer=f(this.gl,t,s,this._state.transformFeedbackBuffer)}}bindRenderbuffer(t){const s=this.gl;t||(s.bindRenderbuffer(s.RENDERBUFFER,null),this._state.renderbuffer=null),this._state.renderbuffer!==t&&(s.bindRenderbuffer(s.RENDERBUFFER,t.glName),this._state.renderbuffer=t)}_getBufferBinding(t,s){if(s>=this.parameters.maxUniformBufferBindings||s<0)return console.error("Uniform buffer binding point is out of range!"),null;const e=t===a.UNIFORM_BUFFER?this._state.uniformBufferBindingPoints:this._state.transformBufferBindingPoints;let i=e[s];return i==null&&(i={buffer:null,offset:0,size:0},e[s]=i),i}bindBufferBase(t,s,e){const i=this._getBufferBinding(t,s);i!=null&&(i.buffer===e&&i.offset===0&&i.size===0||(this.gl.bindBufferBase(t,s,e?e.glName:null),i.buffer=e,i.offset=0,i.size=0))}bindBufferRange(t,s,e,i,r){const n=this._getBufferBinding(t,s);n!=null&&(n.buffer===e&&n.offset===i&&n.size===r||(i%this._parameters.uniformBufferOffsetAlignment==0?(this.gl.bindBufferRange(t,s,e.glName,i,r),n.buffer=e,n.offset=i,n.size=r):console.error("Uniform buffer binding offset is not a multiple of the context offset alignment")))}bindUBO(t,s,e,i){s!=null?(b()&&(i??s.byteLength)>this._parameters.maxUniformBlockSize&&console.error("Attempting to bind more data than the maximum uniform block size"),s.initialize(),e!==void 0&&i!==void 0?this.bindBufferRange(a.UNIFORM_BUFFER,t,s.buffer,e,i):this.bindBufferBase(a.UNIFORM_BUFFER,t,s.buffer)):this.bindBufferBase(a.UNIFORM_BUFFER,t,null)}unbindUBO(t){for(let s=0,e=this._state.uniformBufferBindingPoints.length;s<e;s++){const i=this._state.uniformBufferBindingPoints[s];i!=null&&i.buffer===t.buffer&&this.bindBufferBase(a.UNIFORM_BUFFER,s,null)}}unbindBuffer(t){switch(t){case a.ARRAY_BUFFER:this._state.vertexBuffer=f(this.gl,null,t,this._state.vertexBuffer);break;case a.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=f(this.gl,null,t,this._state.indexBuffer);break;case a.UNIFORM_BUFFER:this._state.uniformBuffer=f(this.gl,null,t,this._state.uniformBuffer);break;case a.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=f(this.gl,null,t,this._state.pixelPackBuffer);break;case a.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=f(this.gl,null,t,this._state.pixelUnpackBuffer);break;case a.COPY_READ_BUFFER:this._state.copyReadBuffer=f(this.gl,null,t,this._state.copyReadBuffer);break;case a.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=f(this.gl,null,t,this._state.copyWriteBuffer)}}bindVAO(t=null){t!=null?this._state.vertexArrayObject!==t&&(t.bind(),this._state.vertexArrayObject=t):this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null)}bindTransformFeedback(t){const{gl:s}=this;s.bindTransformFeedback(s.TRANSFORM_FEEDBACK,t.glName)}beginTransformFeedback(t,s){if(this._transformFeedbackRequestInfo)throw new Error("Already in a transform feedback request");const{gl:e}=this;e.bindTransformFeedback(e.TRANSFORM_FEEDBACK,t.glName),e.beginTransformFeedback(s),this._transformFeedbackRequestInfo={primitiveType:s}}endTransformFeedback(){if(!this._transformFeedbackRequestInfo)throw new Error("Not in a transform feedback request");const{gl:t}=this;t.endTransformFeedback(),t.bindTransformFeedback(t.TRANSFORM_FEEDBACK,null),this._transformFeedbackRequestInfo=null}async clientWaitAsync(t=ot(10)){const{gl:s}=this,e=s.fenceSync(nt.SYNC_GPU_COMMANDS_COMPLETE,0);if(!e)throw new Error("Client wait failed, could not create sync object");let i;this.instanceCounter.increment(m.Sync,e),s.flush();do await lt(t),i=s.clientWaitSync(e,0,0);while(i===Y.TIMEOUT_EXPIRED);if(this.instanceCounter.decrement(m.Sync,e),s.deleteSync(e),i===Y.WAIT_FAILED)throw new Error("Client wait failed")}getBoundFramebufferObject(t=E.FRAMEBUFFER){return t===E.READ_FRAMEBUFFER?this._state.readFramebuffer:this._state.drawFramebuffer}getBoundVAO(){return this._state.vertexArrayObject}resetState(){this.useProgram(null),this.bindVAO(null),this.bindFramebuffer(null,!0),this.unbindBuffer(a.ARRAY_BUFFER),this.unbindBuffer(a.ELEMENT_ARRAY_BUFFER),this.unbindBuffer(a.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(a.PIXEL_PACK_BUFFER),this.unbindBuffer(a.PIXEL_UNPACK_BUFFER),this.unbindBuffer(a.COPY_READ_BUFFER),this.unbindBuffer(a.COPY_WRITE_BUFFER);for(let t=0;t<this.parameters.maxTextureImageUnits;++t)this.bindTexture(null,t);this.setBlendingEnabled(!1),this.setBlendFunction(R.ONE,R.ZERO),this.setBlendEquation(v.ADD),this.setBlendColor(0,0,0,0),this.setFaceCullingEnabled(!1),this.setCullFace(p.BACK),this.setFrontFace(V.CCW),this.setPolygonOffsetFillEnabled(!1),this.setPolygonOffset(0,0),this.setScissorTestEnabled(!1),this.setScissorRect(0,0,this.gl.canvas.width,this.gl.canvas.height),this.setDepthTestEnabled(!1),this.setDepthFunction(A.LESS),this.setDepthRange(0,1),this.setStencilTestEnabled(!1),this.setStencilFunction(A.ALWAYS,0,0),this.setStencilOp(B.KEEP,B.KEEP,B.KEEP),this.setClearColor(0,0,0,0),this.setClearDepth(1),this.setClearStencil(0),this.setColorMask(!0,!0,!0,!0),this.setStencilWriteMask(4294967295),this.setDepthWriteEnabled(!0),this.setDrawBuffers([g.BACK]),this.setViewport(0,0,this.gl.canvas.width,this.gl.canvas.height)}enforceState(){const{gl:t}=this;t.bindVertexArray(null);for(let e=0;e<this.parameters.maxVertexAttributes;e++)t.disableVertexAttribArray(e);this._state.vertexBuffer?t.bindBuffer(this._state.vertexBuffer.bufferType,this._state.vertexBuffer.glName):t.bindBuffer(a.ARRAY_BUFFER,null),this._state.indexBuffer?t.bindBuffer(this._state.indexBuffer.bufferType,this._state.indexBuffer.glName):t.bindBuffer(a.ELEMENT_ARRAY_BUFFER,null),this._state.uniformBuffer?t.bindBuffer(this._state.uniformBuffer.bufferType,this._state.uniformBuffer.glName):t.bindBuffer(a.UNIFORM_BUFFER,null);for(let e=0;e<this._parameters.maxUniformBufferBindings;e++){const i=this._state.uniformBufferBindingPoints[e];if(i!=null){const{buffer:r,offset:n,size:l}=i;r!==null?n===0&&l===0?t.bindBufferBase(a.UNIFORM_BUFFER,e,r.glName):t.bindBufferRange(a.UNIFORM_BUFFER,e,r.glName,n,l):t.bindBufferBase(a.UNIFORM_BUFFER,e,null)}}if(this._state.pixelPackBuffer?t.bindBuffer(this._state.pixelPackBuffer.bufferType,this._state.pixelPackBuffer.glName):t.bindBuffer(a.PIXEL_PACK_BUFFER,null),this._state.pixelUnpackBuffer?t.bindBuffer(this._state.pixelUnpackBuffer.bufferType,this._state.pixelUnpackBuffer.glName):t.bindBuffer(a.PIXEL_UNPACK_BUFFER,null),this._state.copyReadBuffer?t.bindBuffer(this._state.copyReadBuffer.bufferType,this._state.copyReadBuffer.glName):t.bindBuffer(a.COPY_READ_BUFFER,null),this._state.copyWriteBuffer?t.bindBuffer(this._state.copyWriteBuffer.bufferType,this._state.copyWriteBuffer.glName):t.bindBuffer(a.COPY_WRITE_BUFFER,null),t.bindFramebuffer(E.READ_FRAMEBUFFER,null),t.readBuffer(t.BACK),this._state.readFramebuffer&&(t.bindFramebuffer(E.READ_FRAMEBUFFER,this._state.readFramebuffer.glName),t.readBuffer(I.COLOR_ATTACHMENT0)),t.bindFramebuffer(E.DRAW_FRAMEBUFFER,this._state.drawFramebuffer?.glName??null),this._state.drawFramebuffer===null){const e=this._state.drawBuffers.defaultFramebuffer;t.drawBuffers(e??[g.BACK])}else{const e=this._state.drawBuffers.fbos.get(this._state.drawFramebuffer);t.drawBuffers(e??[I.COLOR_ATTACHMENT0])}if(this._state.vertexArrayObject){const e=this._state.vertexArrayObject;this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null),this.bindVAO(e)}t.useProgram(this._state.program?.glName??null),t.blendColor(this._state.blendColor.r,this._state.blendColor.g,this._state.blendColor.b,this._state.blendColor.a),t.bindRenderbuffer(t.RENDERBUFFER,this._state.renderbuffer?.glName??null),this._state.blend===!0?t.enable(this.gl.BLEND):t.disable(this.gl.BLEND),t.blendEquationSeparate(this._state.blendEquation.mode,this._state.blendEquation.modeAlpha),t.blendFuncSeparate(this._state.blendFunction.srcRGB,this._state.blendFunction.dstRGB,this._state.blendFunction.srcAlpha,this._state.blendFunction.dstAlpha),t.clearColor(this._state.clearColor.r,this._state.clearColor.g,this._state.clearColor.b,this._state.clearColor.a),t.clearDepth(this._state.clearDepth),t.clearStencil(this._state.clearStencil),t.colorMask(this._state.colorMask.r,this._state.colorMask.g,this._state.colorMask.b,this._state.colorMask.a),t.cullFace(this._state.cullFace),t.depthFunc(this._state.depthFunction),t.depthRange(this._state.depthRange.zNear,this._state.depthRange.zFar),this._state.depthTest===!0?t.enable(t.DEPTH_TEST):t.disable(t.DEPTH_TEST),t.depthMask(this._state.depthWrite),t.frontFace(this._state.frontFace),t.lineWidth(1),this._state.faceCulling===!0?t.enable(t.CULL_FACE):t.disable(t.CULL_FACE),t.polygonOffset(this._state.polygonOffset[0],this._state.polygonOffset[1]),this._state.polygonOffsetFill===!0?t.enable(t.POLYGON_OFFSET_FILL):t.disable(t.POLYGON_OFFSET_FILL),t.scissor(this._state.scissorRect.x,this._state.scissorRect.y,this._state.scissorRect.width,this._state.scissorRect.height),this._state.scissorTest===!0?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST),t.stencilFunc(this._state.stencilFunction.func,this._state.stencilFunction.ref,this._state.stencilFunction.mask),t.stencilOpSeparate(this._state.stencilOperation.face,this._state.stencilOperation.fail,this._state.stencilOperation.zFail,this._state.stencilOperation.zPass),this._state.stencilTest===!0?t.enable(t.STENCIL_TEST):t.disable(t.STENCIL_TEST),t.stencilMask(this._state.stencilWriteMask);for(let e=0;e<this.parameters.maxTextureImageUnits;e++){t.activeTexture(y+e),t.bindTexture(O.TEXTURE_2D,null),t.bindTexture(O.TEXTURE_CUBE_MAP,null),t.bindTexture(O.TEXTURE_3D,null),t.bindTexture(O.TEXTURE_2D_ARRAY,null);const i=this._state.textureUnitMap[e];i!=null&&t.bindTexture(i.descriptor.target,i.glName)}t.activeTexture(y+this._state.activeTexture);const s=this._state.viewport;t.viewport(s.x,s.y,s.width,s.height),this.resetInfo()}_loadExtensions(){this.gl.getExtension("KHR_parallel_shader_compile")}};function f(t,s,e,i){return s?i!==s&&t.bindBuffer(e,s.glName):t.bindBuffer(e,null),s}function J(t,s){switch(t){case d.POINTS:return 2*s;case d.TRIANGLES:return s/3;case d.TRIANGLE_STRIP:case d.TRIANGLE_FAN:return s-2;default:return 0}}export{pt as o,Mt as y};
