import{r as o}from"./Program-1XjJitsM.js";let c=class{constructor(e){this._readFile=e}resolveIncludes(e){return this._resolve(e)}_resolve(e,t=new Map){if(t.has(e))return t.get(e);const r=this._read(e);if(!r)throw new Error(`cannot find shader file ${e}`);const l=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm;let s=l.exec(r);const i=[];for(;s!=null;)i.push({path:s[1],start:s.index,length:s[0].length}),s=l.exec(r);let h=0,n="";return i.forEach(a=>{n+=r.slice(h,a.start),n+=t.has(a.path)?"":this._resolve(a.path,t),h=a.start+a.length}),n+=r.slice(h),t.set(e,n),n}_read(e){return this._readFile(e)}};function d(e,t,r=""){return new o(e,r+t.shaders.vertexShader,r+t.shaders.fragmentShader,t.attributes)}export{d as a,c as e};
