import{F as R,kk as w,fI as T,kl as q,f_ as z,f$ as s,fM as b,km as N,g4 as S,g9 as W,g1 as Y,g5 as B,bk as G,kn as O,kj as X,ko as j,kp as V,fU as D,fT as F,kq as K,fQ as Q}from"./main-DCIX61zy.js";class U extends R{_parseConfig(t){const a=w(this.$vApp.$pinia);t&&(a.arrowIcon=t.arrowIcon,a.poleIcon=t.poleIcon)}get config(){return super.config}}const J="path",Z=12,ee="M14.4 6L14 4H5v17h2v-7h5.6l.4 2h7V6z",te="#ff0000ff",ae=5,se=6,ie={style:J,size:Z,path:ee,colour:te,xOffset:ae,yOffset:se},oe=["innerHTML"],re=T({__name:"northarrow",setup(k){const t=q(),a=w(),e=z("iApi"),n=s(),y=b(()=>a.arrowIcon),M=b(()=>a.poleIcon),h=s(0),r=s(0),p=s(!1),$=s(`<svg xmlns="http://www.w3.org/2000/svg" fit=""  width="25" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24" focusable="false">
                <g id="northarrow" transform="translate(-285.24 -142.234)">
                    <path id="path3770-7" d="M305.91 156.648a8.652 8.652 0 0 1-8.654 8.653 8.652 8.652 0 0 1-8.653-8.653 8.653 8.653 0 0 1 8.653-8.653 8.653 8.653 0 0 1 8.653 8.653z" fill="#fff" stroke="#fff" stroke-width=".895"/>
                    <path id="path3770" d="M304.982 156.648a7.725 7.725 0 0 1-7.726 7.726 7.725 7.725 0 0 1-7.726-7.726 7.725 7.725 0 0 1 7.726-7.726 7.725 7.725 0 0 1 7.726 7.726z" fill="none" stroke="#6d6d6d" stroke-width=".799"/>
                    <path id="path3774" d="M297.256 156.648v-8.525" fill="none" stroke="#000" stroke-width=".067"/>
                    <path d="M297.258 143.48l8.793 22.432-8.811-8.812-8.812 8.812z" id="path3778" fill="#fff" stroke="#fff" stroke-width=".912"/>
                    <path d="M297.256 144.805l7.726 19.568-7.726-7.726-7.726 7.726z" id="path3780" fill="#d6d6d6" stroke="#000" stroke-width=".266" stroke-linecap="square"/>
                    <path id="path6038" d="M297.256 144.666l-7.726 19.568 7.726-7.726" fill="#6d6d6d" stroke-width=".296" stroke-linecap="square"/>
                </g>
            </svg>`),A=s(!1),I=N([]),x=s([]);let P;S(()=>{const i=t.config.map;x.value=i.tileSchemas,y?.value&&($.value=`<img width='25' src='${y.value}'>`),e.geo.map.esriView?.ready&&_(e.geo.map.getExtent()),I.push(e.event.on(W.MAP_EXTENTCHANGE,Y(300,_)))}),B(()=>{I.forEach(i=>e.event.off(i))});const _=async i=>{P=t.activeBasemapConfig;let c;for(const f of x.value)if(P?.tileSchemaId===f.id){c=f?.hasNorthPole;break}const l=e.$vApp.$el.querySelector(".inner-shell"),d=n.value.querySelector(".northarrow").getBoundingClientRect().width,u=e.$vApp.$el.querySelector(".appbar")?.clientWidth||0,C=i.sr;if(c||typeof c>"u"&&!C.isWebMercator()){const f=new G("pole",{x:-96,y:90}),E=await e.geo.proj.projectGeometry(C,f),g=e.geo.map.mapPointToScreenPoint(E);if(g.screenY<0){p.value=!0;const o={screenX:l.clientWidth/2,screenY:l.clientHeight};h.value=Math.atan((g.screenX-o.screenX)/(o.screenY-g.screenY))*180/Math.PI,r.value=l.clientWidth/2+l.clientHeight*Math.tan(h.value*Math.PI/180)-d/2,r.value=Math.max(u-d/2,Math.min(e.geo.map.getPixelWidth()-d/2,r.value))}else if(p.value=!1,!A.value){A.value=!0;let o;M.value?o={style:O.ICON,icon:M.value,height:16.5,width:16.5}:o=ie;const m=e.geo.layer.createLayer({id:v,layerType:X.GRAPHIC,url:"",cosmetic:!0});e.geo.map.addLayer(m),m.loadPromise().then(()=>{const L=new j(E,"northpole"),H=new V(o);L.style=H,m.addGraphic(L)})}}else p.value=!0,h.value=0,r.value=u+(l.clientWidth-u-d)/2};return(i,c)=>(Q(),D("div",{class:"absolute transition-all duration-300 ease-out",style:K({"transform-origin":"top center",transform:`rotate(${h.value}deg)`,left:`${r.value}px`,visibility:p.value?"visible":"hidden"}),ref_key:"el",ref:n},[F("span",{class:"northarrow",innerHTML:$.value},null,8,oe)],4))}}),v="RampPoleMarker";class le extends U{async added(){this._parseConfig(this.config);const t=this.$vApp.$watch(()=>this.config,n=>this._parseConfig(n)),{destroy:a,el:e}=this.mount(re,{app:this.$element});this.$vApp.$el.getElementsByClassName("inner-shell")[0].appendChild(e.childNodes[0]),this.removed=()=>{t(),this.$iApi.geo.layer.getLayer(v)&&this.$iApi.geo.map.removeLayer(v),w(this.$vApp.$pinia).$reset(),a()}}}export{v as POLE_MARKER_LAYER_ID,le as default};
