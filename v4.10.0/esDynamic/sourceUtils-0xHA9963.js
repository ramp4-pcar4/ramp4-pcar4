import{n as d}from"./date-Cqvy-TgA.js";import{dq as h,dr as p,dp as m,ds as g,bV as y,dt as w,du as c}from"./main-DCIX61zy.js";class b{constructor(){this.code=null,this.description=null}}class I{constructor(s){this.error=new b,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=s}}function u(n){return new I(n)}class q{constructor(s){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=s}}function j(n){return new q(n)}const l=new Set;function F(n,s,t,f=!1){l.clear();for(const e in t){const r=n.get(e);if(!r)continue;const o=S(r,t[e]);if(l.add(r.name),r&&(f||r.editable)){const a=h(r,o);if(a)return u(p(a,r,o));s[r.name]=o}}for(const e of n.requiredFields??[])if(!l.has(e.name))return u(`missing required field "${e.name}"`);return null}function S(n,s){let t=s;return m(n)&&typeof s=="string"?t=parseFloat(s):g(n)&&s!=null&&typeof s!="string"?t=String(s):y(n)&&typeof s=="string"&&(t=d(s)),w(t)}let i;function x(n,s){if(!n||!c(s))return n;if("rings"in n||"paths"in n){if(i==null)throw new TypeError("geometry engine not loaded");return i.simplify(s,n)}return n}async function E(){return i==null&&(i=await import("./geometryEngineJSON-cnFh4oQ2.js").then(n=>n.g)),i}async function G(n,s){!c(n)||s!=="esriGeometryPolygon"&&s!=="esriGeometryPolyline"||await E()}export{j as d,u as f,G as j,F as p,x as y};
