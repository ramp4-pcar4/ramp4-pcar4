import{dF as q,fx as z,fy as I,fz as k,fA as B,fB as C,et as b,bt as a,bu as i,bw as D,ap as E,fC as F,aq as T,dA as l,fD as V,dV as G,fE as H,bv as P}from"./main-DCIX61zy.js";import{e as y}from"./mat4f64-Dn1WEGBx.js";import{v as m,b as f,x as Q}from"./quat-Xt9oEsiT.js";import{e as h}from"./quatf64-C16JxGFv.js";function s(t=N){return[t[0],t[1],t[2],t[3]]}function u(t,o,r=s()){return q(r,t),r[3]=o,r}function R(t,o=s()){const r=C(e,t);return d(o,b(m(o,r))),o}function g(t,o,r=s()){return f(e,t,c(t)),f(v,o,c(o)),Q(e,v,e),d(r,b(m(r,e)))}function S(t,o,r,A=s()){return u(z,t,p),u(I,o,M),u(k,r,w),g(p,M,p),g(p,w,A),A}function U(t){return t}function W(t){return t[3]}function c(t){return B(t[3])}function d(t,o){return t[3]=o,t}const N=[0,0,1,0],e=h(),v=h();s();const p=s(),M=s(),w=s();var x;let n=x=class extends D{constructor(t){super(t),this.translation=E(),this.rotationAxis=F(N),this.rotationAngle=0,this.scale=T(1,1,1)}get rotation(){return u(this.rotationAxis,this.rotationAngle)}set rotation(t){this.rotationAxis=l(t),this.rotationAngle=W(t)}get localMatrix(){const t=y();return f(j,this.rotation,c(this.rotation)),V(t,j,this.translation,this.scale),t}get localMatrixInverse(){return G(y(),this.localMatrix)}equals(t){return this===t||t!=null&&H(this.localMatrix,t.localMatrix)}clone(){const t={translation:l(this.translation),rotationAxis:l(this.rotationAxis),rotationAngle:this.rotationAngle,scale:l(this.scale)};return new x(t)}};a([i({type:[Number],nonNullable:!0,json:{write:!0}})],n.prototype,"translation",void 0),a([i({type:[Number],nonNullable:!0,json:{write:!0}})],n.prototype,"rotationAxis",void 0),a([i({type:Number,nonNullable:!0,json:{write:!0}})],n.prototype,"rotationAngle",void 0),a([i({type:[Number],nonNullable:!0,json:{write:!0}})],n.prototype,"scale",void 0),a([i()],n.prototype,"rotation",null),a([i()],n.prototype,"localMatrix",null),a([i()],n.prototype,"localMatrixInverse",null),n=x=a([P("esri.geometry.support.MeshTransform")],n);const j=h(),$=n;export{$ as N,S as d,s as j,R as k,U as w,c as z};
