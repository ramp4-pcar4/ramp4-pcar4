import{o as E,n as ve,p as Me,q as Pe,f as te,s as A,e as M}from"./UpdateTracking2D-swFQJIjy.js";import{aC as S,na as N,d2 as D,lq as be,dj as se,nb as we,nc as q,gC as re,nd as ie,gV as k,ne,nf as Z,ng as Ie,nh as oe,ni as Se,d9 as Y,g_ as L,h2 as ke,ci as R,T as Ae,s as Le,G as ze}from"./main-DCIX61zy.js";import{c as Ee,f as T,m as ae,N as ce,P as X,g as De,i as Te,l as Be,T as Re,s as Fe,_ as Ce,a as Ge,b as Oe,h as We,o as Ve,d as je,e as Ne,j as qe}from"./PieChartMeshWriter-DYJnKx_X.js";import{r as le,t as Ze}from"./LabelMetric-DpMX58iW.js";import{e as F}from"./constants-Bqe1QJ4u.js";import{o as he,e as Ye}from"./grouping-Bl3jGfSC.js";import{c as Xe}from"./AttributeStore-BysBgiw_.js";let He=class extends Ee{};function Qe(i){const{sprite:e,isMapAligned:t,colorLocked:r,scaleSymbolsProportionally:s,isStroke:n}=i;let o=0;return t&&(o|=T(E.bitset.isMapAligned)),r&&(o|=T(E.bitset.colorLocked)),e.sdf&&(o|=T(E.bitset.isSDF)),s&&(o|=T(E.bitset.scaleSymbolsProportionally)),n&&(o|=T(E.bitset.isStroke)),o}let Ue=class extends He{get vertexSpec(){return{createComputedParams:i=>{let{pixelDimensions:e,texelDimensions:t,baseSize:r,referenceSize:s,strokeWidth:n,sizeRatio:o}=i;e||(e=i.sprite.sdf?[0,0]:[i.sprite.width,i.sprite.height]),t||(t=i.sprite.sdf?[0,0]:e),r=D(r),s=D(s),n=D(n);const a=(i.sprite.sdfDecodeCoeff??1)*o;return{...i,pixelDimensions:e,texelDimensions:t,baseSize:r,referenceSize:s,strokeWidth:n,sdfDecodeCoeff:a}},optionalAttributes:{zoomRange:{type:S.SHORT,count:2,packPrecisionFactor:N,pack:({scaleInfo:i},{tileInfo:e})=>ae(i,e)}},attributes:{id:{type:S.UNSIGNED_BYTE,count:3,pack:"id"},bitset:{type:S.UNSIGNED_BYTE,count:1,pack:Qe},pos:{type:S.SHORT,count:2,pack:"position",packPrecisionFactor:1},offset:{type:S.FLOAT,count:2,packAlternating:{count:4,pack:i=>{const e=i.texelDimensions;return[[-.5*e[0],-.5*e[1]],[.5*e[0],-.5*e[1]],[-.5*e[0],.5*e[1]],[.5*e[0],.5*e[1]]]}}},uv:{type:S.SHORT,count:2,packPrecisionFactor:1,packAlternating:{count:4,packTessellation:({texXmax:i,texXmin:e,texYmax:t,texYmin:r})=>[[e,r],[i,r],[e,t],[i,t]]}},animationPointerAndBaseSizeAndReferenceSize:{type:S.UNSIGNED_SHORT,count:4,packPrecisionFactor:1,pack:({animations:i,baseSize:e,referenceSize:t})=>[i.dataColumn,i.dataRow,e,t]},sizing:{type:S.UNSIGNED_SHORT,count:4,packPrecisionFactor:8,pack:({strokeWidth:i,pixelDimensions:e,baseSize:t,sprite:r,sizeRatio:s})=>{const n=Math.max(t*r.width/r.height,t),o=r.sdfDecodeCoeff*n*s;return[e[0],e[1],i,o]}},angle:{type:S.BYTE,count:1,packTessellation:({angle:i})=>i}}}}_write(i,e){const t=this.evaluatedMeshParams.sprite,{textureBinding:r}=t;i.recordStart(this.instanceId,this.attributeLayout,r);const s=e.getDisplayId();if(e.geometryType==="esriGeometryPolygon"){const n=e.readCentroidForDisplay();if(!n)return;const[o,a]=n.coords;this._writeQuad(i,s,o,a)}else if(e.geometryType==="esriGeometryPoint"){const n=e.readXForDisplay(),o=e.readYForDisplay();this._writeQuad(i,s,n,o)}else{const n=e.readGeometryForDisplay();if(n){const{angleToLine:o}=this.evaluatedMeshParams;if(o){let a=!0,c=null,d=null;n.forEachVertex((l,u)=>{if(c!=null&&d!=null){const h=Math.atan2(u-d,l-c)/ve;a&&(this._writeQuad(i,s,c,d,h),a=!1),this._writeQuad(i,s,l,u,h)}c=l,d=u})}else n.forEachVertex((a,c)=>{this._writeQuad(i,s,a,c)})}}i.recordEnd()}_writeQuad(i,e,t,r,s=0){const n=this.evaluatedMeshParams.sprite,{rect:o}=n,a=o.x+2,c=o.y+2,d=o.x+o.width-2,l=o.y+o.height-2,u=i.vertexCount();i.recordBounds(t,r,64,64);const h={texXmin:a,texYmin:c,texXmax:d,texYmax:l,angle:s};for(let g=0;g<4;g++)this._writeVertex(i,e,t,r,h);i.indexEnsureSize(6),i.indexWrite(u),i.indexWrite(u+1),i.indexWrite(u+2),i.indexWrite(u+1),i.indexWrite(u+3),i.indexWrite(u+2)}};function ue(i,e,t){return i[0]=e[0]-t[0],i[1]=e[1]-t[1],i}function de(i,e){return Math.sqrt(i*i+e*e)}function fe(i){const e=de(i[0],i[1]);i[0]/=e,i[1]/=e}function $e(i,e){return de(i[0]-e[0],i[1]-e[1])}function Je(i,e){return i[e+1]}function me(i){return i.length-1}function Ke(i){let e=0;for(let t=0;t<me(i);t++)e+=et(i,t);return e}function et(i,e,t=1){let[r,s]=Je(i,e);return[r,s]=[Math.round(r),Math.round(s)],Math.sqrt(r*r+s*s)*t}let tt=class ${constructor(e,t,r,s,n){this._segments=e,this._index=t,this._distance=r,this._xStart=s,this._yStart=n,this._done=!1}static create(e){return new $(e,0,0,e[0][0],e[0][1])}clone(){return new $(this._segments,this._index,this._distance,this.xStart,this.yStart)}equals(e){return this._index===e._index||e._index===this._index-1&&(this._distance===0||e._distance===1)||e._index===this._index+1&&(this._distance===1||e._distance===0)}leq(e){return this._index<e._index||this._index===e._index&&this._distance<=e._distance}geq(e){return this._index>e._index||this._index===e._index&&this._distance>=e._distance}get _segment(){return this._segments[this._index+1]}get angle(){const e=this.dy,t=(0*e+-1*-this.dx)/(1*this.length);let r=Math.acos(t);return e>0&&(r=2*Math.PI-r),r}get xStart(){return this._xStart}get yStart(){return this._yStart}get x(){return this.xStart+this.distance*this.dx}get y(){return this.yStart+this.distance*this.dy}get dx(){return this._segment[0]}get dy(){return this._segment[1]}get xMidpoint(){return this.xStart+.5*this.dx}get yMidpoint(){return this.yStart+.5*this.dy}get xEnd(){return this.xStart+this.dx}get yEnd(){return this.yStart+this.dy}get length(){const{dx:e,dy:t}=this;return Math.sqrt(e*e+t*t)}get remainingLength(){return this.length*(1-this._distance)}get backwardLength(){return this.length*this._distance}get distance(){return this._distance}get done(){return this._done}hasPrev(){return this._index-1>=0}hasNext(){return this._index+1<me(this._segments)}next(){return this.hasNext()?(this._xStart+=this.dx,this._yStart+=this.dy,this._distance=0,this._index+=1,this):null}prev(){return this.hasPrev()?(this._index-=1,this._xStart-=this.dx,this._yStart-=this.dy,this._distance=1,this):(this._done=!0,null)}_seekBackwards(e,t){const r=this.backwardLength;if(e<=r)return this._distance=(r-e)/this.length,this;let s=this.backwardLength;for(;this.prev();){if(s+this.length>e)return this._seekBackwards(e-s);s+=this.length}return this._distance=0,t?this:null}seek(e,t=!1){if(e<0)return this._seekBackwards(Math.abs(e),t);if(e<=this.remainingLength)return this._distance=(this.backwardLength+e)/this.length,this;let r=this.remainingLength;for(;this.next();){if(r+this.length>e)return this.seek(e-r,t);r+=this.length}return this._distance=1,t?this:null}};function H(i,e,t,r=!0){const s=Ke(i),n=tt.create(i),o=s/2;if(!r)return n.seek(o),void(Math.abs(n.x)<F&&Math.abs(n.y)<F&&t(n.clone(),0,o+0*e,s));const a=Math.max((s-e)/2,0),c=Math.floor(a/e),d=o-c*e;n.seek(d);for(let l=-c;l<=c;l++)Math.abs(n.x)<F&&Math.abs(n.y)<F&&t(n.clone(),l,o+l*e,s),n.seek(e)}function Q(i,e){const t=e;for(let r=0;r<i.length;r++){let s=i[r];st(s,t);const n=[];n.push(s[0]);for(let o=1;o<s.length;o++){const[a,c]=s[o-1],[d,l]=s[o],u=d-a,h=l-c;n.push([u,h])}i[r]=n,s=n}return i}function st(i,e){if(e<=0)return;const t=i.length;if(t<3)return;const r=[];let s=0;r.push(0);for(let l=1;l<t;l++)s+=$e(i[l],i[l-1]),r.push(s);e=Math.min(e,.2*s);const n=[];n.push(i[0][0]),n.push(i[0][1]);const o=i[t-1][0],a=i[t-1][1],c=ue([0,0],i[0],i[1]);fe(c),i[0][0]+=e*c[0],i[0][1]+=e*c[1],ue(c,i[t-1],i[t-2]),fe(c),i[t-1][0]+=e*c[0],i[t-1][1]+=e*c[1];for(let l=1;l<t;l++)r[l]+=e;r[t-1]+=e;const d=.5*e;for(let l=1;l<t-1;l++){let u=0,h=0,g=0;for(let m=l-1;m>=0&&!(r[m+1]<r[l]-d);m--){const f=d+r[m+1]-r[l],p=r[m+1]-r[m],_=r[l]-r[m]<d?1:f/p;if(Math.abs(_)<1e-6)break;const y=_*_,v=_*f-.5*y*p,P=_*p/e,x=i[m+1],I=i[m][0]-x[0],b=i[m][1]-x[1];u+=P/v*(x[0]*_*f+.5*y*(f*I-p*x[0])-y*_*p*I/3),h+=P/v*(x[1]*_*f+.5*y*(f*b-p*x[1])-y*_*p*b/3),g+=P}for(let m=l+1;m<t&&!(r[m-1]>r[l]+d);m++){const f=d-r[m-1]+r[l],p=r[m]-r[m-1],_=r[m]-r[l]<d?1:f/p;if(Math.abs(_)<1e-6)break;const y=_*_,v=_*f-.5*y*p,P=_*p/e,x=i[m-1],I=i[m][0]-x[0],b=i[m][1]-x[1];u+=P/v*(x[0]*_*f+.5*y*(f*I-p*x[0])-y*_*p*I/3),h+=P/v*(x[1]*_*f+.5*y*(f*b-p*x[1])-y*_*p*b/3),g+=P}n.push(u/g),n.push(h/g)}n.push(o),n.push(a);for(let l=0,u=0;l<t;l++)i[l][0]=n[u++],i[l][1]=n[u++]}const C=1,z=0,rt=128,it=Se(i=>{let e=0;if(i===0)return 1/0;for(;!(i%2);)e++,i/=2;return e});class nt extends ce{constructor(){super(...arguments),this._zoomLevel=0}_write(e,t,r,s){if(this._zoomLevel=s||0,r!=null)throw new Error("InternalError: EffectGeometry not support for LabelMeshWriter");switch(t.geometryType){case"esriGeometryPoint":{const n=t.readXForDisplay(),o=t.readYForDisplay();this._writePoint(e,n,o,t);break}case"esriGeometryEnvelope":case"esriGeometryPolygon":case"esriGeometryMultipoint":{const n=t.readCentroidForDisplay();if(!n)return;const[o,a]=n.coords;this._writePoint(e,o,a,t);break}case"esriGeometryPolyline":this._writeLines(e,t)}}_createLineLabelMetric(e,t,r,s){const n=te(e),o=this.evaluatedMeshParams.horizontalAlignment==="right"?-1:1,a=this.evaluatedMeshParams.verticalAlignment==="bottom"?-1:1,c=this.evaluatedMeshParams.scaleInfo?.maxScale??0,d=this.evaluatedMeshParams.scaleInfo?.minScale??0;return new le(n,t,r,o,a,c,d,s??null)}_writePoint(e,t,r,s){const n=this._getShaping();if(!n)return;const o=s.getDisplayId(),a=Me(this.evaluatedMeshParams.horizontalAlignment),c=Pe(this.evaluatedMeshParams.verticalAlignment),d=this.evaluatedMeshParams.scaleInfo?.maxScale??0,l=this.evaluatedMeshParams.scaleInfo?.minScale??0,u=te(s.getDisplayId()),h=this._getPointReferenceBounds()||{offsetX:0,offsetY:0,size:0};e.metricStart(new le(u,t,r,a,c,d,l,h)),this._writeGlyphs(e,o,t,r,n,0,h),e.metricBoxWrite(n.boundsT),e.metricEnd()}_getPointReferenceBounds(){if(!this._references)return null;for(const e of this._references){const t=e.getBoundsInfo();if(t)return t}return null}_writeLines(e,t){const{scaleInfo:r,verticalAlignment:s}=this.evaluatedMeshParams,n=this.evaluatedMeshParams.repeatLabelDistance||128,o=this._getShaping("middle");if(!o)return;const a=(d,l,u,h)=>this._placeSubdivGlyphs(d,l,u,h),c=(o.bounds.width+n)/(1<<C);this._current={out:e,id:t.getDisplayId(),shaping:o,zoomRange:ae(r,this.getTileInfo()),referenceBounds:this._getPointReferenceBounds()||{offsetX:0,offsetY:0,size:0},offsetDirection:null},this._verticalPlacement=s==="bottom"?"above":s==="top"?"below":null,this._verticalPlacement?this._writeAboveAndBelowAlong(t,a,c):this._writeCenterAlong(t,a,c)}_writeAboveAndBelowAlong(e,t,r){const{repeatLabel:s}=this.evaluatedMeshParams,{shaping:n}=this._current,o=n.bounds.halfHeight,a=e.readGeometryForDisplay();if(!a)return;const c=new Y;be(c,a,!1,!1,"esriGeometryPolyline",1);const d=pe(new Y,c,o),l=pe(new Y,c,-o),u=se(l,"esriGeometryPolyline",!1,!1),h=se(d,"esriGeometryPolyline",!1,!1),g=Q(h.paths,n.bounds.width),m=Q(u.paths,n.bounds.width);this._current.offsetDirection="above";for(const f of g)H(f,r,t,!!s);this._current.offsetDirection="below";for(const f of m)H(f,r,t,!!s)}_writeCenterAlong(e,t,r){const{repeatLabel:s}=this.evaluatedMeshParams,{shaping:n}=this._current,o=Q(e.readLegacyGeometryForDisplay().paths,n.bounds.width);for(const a of o)H(a,r,t,!!s)}_placeSubdivGlyphs(e,t,r,s){const{allowOverrun:n,labelPosition:o,repeatLabelDistance:a}=this.evaluatedMeshParams,c=this._current.zoomRange[0],d=it(t),l=this._current.shaping.bounds.width/(1<<C),u=Math.sqrt(a||rt)/(1<<C),h=Math.min(r,s-r),g=this._current.shaping.isMultiline?X:Math.log2(h/(u+l/2)),m=t===0?g:Math.min(d,g),f=Math.max(c,this._zoomLevel+C-m),p=this._zoomLevel-f,_=this._current.shaping.bounds.width/2*2**p;this._current.shaping.isMultiline?t===0&&this._placeStraight(e,f):n&&p<0?this._placeStraightAlong(e,c):o==="parallel"?this._placeStraightAlong(e,f):o==="curved"&&this._placeCurved(e,f,_)}_placeStraight(e,t){const{out:r,id:s,shaping:n,referenceBounds:o}=this._current,{x:a,y:c}=e;r.metricStart(this._createLineLabelMetric(s,a,c)),r.metricBoxWrite(n.boundsT);const d=e.angle*(180/Math.PI)%360,l=(e.angle*(180/Math.PI)+180)%360;this._writeGlyphs(r,s,a,c,n,0,o,{clipAngle:d,mapAligned:!0,isLineLabel:!0,minZoom:t}),this._writeGlyphs(r,s,a,c,n,0,o,{clipAngle:l,mapAligned:!0,isLineLabel:!0,minZoom:t}),r.metricEnd()}_placeCurved(e,t,r){const{out:s,id:n}=this._current;s.metricStart(this._createLineLabelMetric(n,e.x,e.y));const o=e.clone(),a=e.angle*(180/Math.PI)%360,c=(e.angle*(180/Math.PI)+180)%360;this._verticalPlacement&&this._verticalPlacement!==this._current.offsetDirection||(this._placeFirst(o,t,1,a),this._placeBack(e,o,t,r,1,a),this._placeForward(e,o,t,r,1,a)),this._verticalPlacement&&this._verticalPlacement===this._current.offsetDirection||(this._placeFirst(o,t,0,c),this._placeBack(e,o,t,r,0,c),this._placeForward(e,o,t,r,0,c)),s.metricEnd()}_placeStraightAlong(e,t){const{out:r,id:s,shaping:n,zoomRange:o,referenceBounds:a}=this._current,{boxBorderLineColor:c,boxBackgroundColor:d}=this.evaluatedMeshParams,l=e.clone(),u=e.angle*(180/Math.PI)%360,h=(e.angle*(180/Math.PI)+180)%360,g=n.glyphs.length>0&&!(!c&&!d);if(r.metricStart(this._createLineLabelMetric(s,e.x,e.y)),g){const m=Math.max(t,o[0],0),f=Math.min(X,o[1]),p=we(q(),-e.angle),_={minZoom:m,maxZoom:f,clipAngle:u,mapAligned:!0,isLineLabel:!0},y=D(this.evaluatedMeshParams.offsetX),v=D(this.evaluatedMeshParams.offsetY);if(!this._verticalPlacement||this._verticalPlacement===this._current.offsetDirection){const P=re(y,-1*v),[x,I]=n.shapeBackground(ie(q(),p,P));r.recordStart(this.instanceId,this.attributeLayout,n.glyphs[0].textureBinding);const b=2*Math.max(x.width,x.height);r.recordBounds(e.x+x.x,e.y+x.y,b,b),this._writeTextBox(r,s,e.x,e.y,I,a,_),r.recordEnd()}if(!this._verticalPlacement||this._verticalPlacement!==this._current.offsetDirection){const P=re(y,v),[x,I]=n.shapeBackground(ie(q(),p,P));_.clipAngle=h,r.recordStart(this.instanceId,this.attributeLayout,n.glyphs[0].textureBinding);const b=2*Math.max(x.width,x.height);r.recordBounds(e.x+x.x,e.y+x.y,b,b),this._writeTextBox(r,s,e.x,e.y,I,a,_),r.recordEnd()}}this._verticalPlacement&&this._verticalPlacement!==this._current.offsetDirection||this._placeFirst(l,t,1,u,!0),this._verticalPlacement&&this._verticalPlacement===this._current.offsetDirection||this._placeFirst(l,t,0,h,!0),r.metricEnd()}_placeBack(e,t,r,s,n,o){const a=e.clone();let c=e.backwardLength+z;for(;a.prev()&&!(c>=s);)this._placeOnSegment(a,t,c,r,-1,n,o),c+=a.length+z}_placeForward(e,t,r,s,n,o){const a=e.clone();let c=e.remainingLength+z;for(;a.next()&&!(c>=s);)this._placeOnSegment(a,t,c,r,1,n,o),c+=a.length+z}_placeFirst(e,t,r,s,n=!1){const{out:o,id:a,shaping:c,zoomRange:d,referenceBounds:l}=this._current,u=c.glyphs;for(const h of u){const g=h.x>c.bounds.x?r:1-r,m=g*e.remainingLength+(1-g)*e.backwardLength,f=Math.abs(h.x+h.width/2-c.bounds.x),p=Math.max(0,this._zoomLevel+Math.log2(f/(m+z))),_=Math.max(t,n?0:p);h.maxZoom=Math.min(d[1],X),h.angle=e.angle+(1-r)*Math.PI,h.minZoom=Math.max(d[0],_),this._writeLineGlyph(o,a,e.x,e.y,c.bounds,h,s,l,!0),(r||this._current.offsetDirection)&&this._isVisible(h.minZoom,h.maxZoom)&&o.metricBoxWrite(h.bounds)}}_placeOnSegment(e,t,r,s,n,o,a){const{out:c,id:d,shaping:l,referenceBounds:u}=this._current,h=l.glyphs,g=e.dx/e.length,m=e.dy/e.length,f={x:e.x+r*-n*g,y:e.y+r*-n*m};for(const p of h){const _=p.x>l.bounds.x?o:1-o;if(!(_&&n===1||!_&&n===-1))continue;const y=Math.abs(p.x+p.width/2-l.bounds.x),v=Math.max(0,this._zoomLevel+Math.log2(y/r)-.1),P=Math.max(s,this._zoomLevel+Math.log2(y/(r+e.length+z)));v!==0&&(p.angle=e.angle+(1-o)*Math.PI,p.minZoom=P,p.maxZoom=v,this._writeLineGlyph(c,d,f.x,f.y,l.bounds,p,a,u,!0),(o||this._current.offsetDirection)&&this._isVisible(p.minZoom,p.maxZoom)&&c.metricBoxWrite(p.bounds))}}_writeLineGlyph(e,t,r,s,n,o,a,c,d){const l=r+n.x,u=s+n.y,h=2*(this.evaluatedMeshParams.minPixelBuffer?this.evaluatedMeshParams.minPixelBuffer/this._textMeshTransformProps.fontSize:1),g=Math.max(n.width,n.height)*h;e.recordStart(this.instanceId,this.attributeLayout,o.textureBinding),e.recordBounds(l,u,g,g);const{texcoords:m,offsets:f}=o,{fontSize:p,haloSize:_,outlineSize:y}=this._textMeshTransformProps;this._writeQuad(e,t,r,s,{texcoords:m,offsets:f,fontSize:p,haloSize:_,outlineSize:y,color:De(this.evaluatedMeshParams.color),isBackground:!1,referenceBounds:c,minZoom:Math.max(this._current.zoomRange[0],o.minZoom),maxZoom:Math.min(this._current.zoomRange[1],o.maxZoom),clipAngle:a,mapAligned:d,isLineLabel:!0}),e.recordEnd()}_isVisible(e,t){const r=Math.floor(this._zoomLevel*N)/N;return e<=r&&r<=t}}function pe(i,e,t){const{coords:r,lengths:s}=e,n=L(),o=L(),a=L(),c=L(),d=L(),l=L(),u=2;let h=0;for(let g=0;g<s.length;g++){const m=s[g];for(let f=0;f<m;f++){const p=u*(f+h-1),_=u*(f+h),y=u*(f+h+1);f>0?k(n,r[p],r[p+1]):k(n,0,0),k(o,r[_],r[_+1]),f<m-1?k(a,r[y],r[y+1]):k(a,0,0),f===0?k(c,0,0):(ne(c,o,n),Z(c,c),k(c,c[1],-c[0])),f===m-1?k(d,0,0):(ne(d,a,o),Z(d,d),k(d,d[1],-d[0])),Ie(l,c,d),Z(l,l);const v=l[0]*d[0]+l[1]*d[1];v!==0&&oe(l,l,v),oe(l,l,t),i.coords.push(o[0]+l[0],o[1]+l[1])}i.lengths.push(m),h+=m}return i}function G(i){return i instanceof O?i:typeof i=="object"&&"type"in i?ct[i.type].hydrate(i):new B(i)}class O{constructor(e){this.inputs=e}encode(){const e=[];for(const t of this.inputs)e.push(...t.encode());return e.push(...this.instructions),e}}let B=class extends O{constructor(i){super([]),this.value=i}simplify(){return this}get instructions(){if(Array.isArray(this.value)){const[i,e,t,r]=this.value;return r!=null?A.vector4.encode([i,e||0,t||0,r]):A.vector3.encode([i,e||0,t||0])}return A.scalar.encode(this.value)}},ot=class J extends O{constructor(e,t){super([t]),this._config=e,this._parent=t}static hydrate(e){return new J(e,G(e.parent))}simplify(){if(this._config.relativeTranslation||this._config.absoluteScale)return this;const e=this._parent.simplify();if(!(e instanceof B))return this;const[t,r,s,n]=e.value,o=this._config.translation.from[0],a=this._config.translation.from[1],c=this._config.rotation.from,d=this._config.scale.from;if(o===this._config.translation.to[0]&&a===this._config.translation.to[1]&&c===this._config.rotation.to&&d===this._config.scale.to){const l=s+c,u=n*d,h=Math.sin(s),g=Math.cos(s);return new B([g*n*o-h*n*a+t,h*n*o+g*n*a+r,l,u])}return new J(this._config,e)}get instructions(){return A.animatedTransform.encode(this._config)}},at=class K extends O{constructor(e,t){super([t]),this._config=e,this._parent=t}static hydrate(e){return new K(e,G(e.parent))}simplify(){const e=this._parent.simplify();if(!(e instanceof B))return this;const[t,r,s,n]=e.value,o=this._config.color.from[0],a=this._config.color.from[1],c=this._config.color.from[2];let d=this._config.color.from[3];const l=this._config.opacity.from;return o===this._config.color.to[0]&&a===this._config.color.to[1]&&c===this._config.color.to[2]&&d===this._config.color.to[3]&&l===this._config.opacity.to?(d*=l,new B([t*o,r*a,s*c,n*d])):new K(this._config,e)}get instructions(){return A.animatedColor.encode(this._config)}};const ct={AnimatedTransform:ot,AnimatedColor:at};function lt(i){return ge(i.map(e=>w(e)).map(e=>G(e).simplify()))}function ht(i){const e=[];return e.push(i.transform),e.push(i.fromColor),e.push(i.toColor),e.push(i.colorMix),e.push(i.toOpacity),e.push(i.opacityMix),e}function ge(i){const e=[],t=[];let r=0;for(const s of i){const n=[...s.encode(),...A.ret.encode()];e.push([r+i.length,0,0,0]),t.push(...n),r+=n.length}return[...e,...t]}async function U(i,e){const t=i;let r;if(typeof t=="number"||typeof t=="string"||typeof t=="boolean")r=t;else if(Array.isArray(t))r=await Promise.all(t.map(s=>U(s,e)));else if(typeof t=="object")if("valueExpressionInfo"in t){const{valueExpressionInfo:s}=t,{expression:n}=s;r={...t,computed:await e.createComputedField({expression:n})}}else{r={};for(const s in t)r[s]=await U(t[s],e)}return r}function w(i,e,t){function r(o){if(!("computed"in o))return o;let a=o.computed.readWithDefault(e,t,[255*o.defaultValue[0],255*o.defaultValue[1],255*o.defaultValue[2],o.defaultValue[3]]);if(typeof a=="string"){const c=ke.fromString(a);c&&(a=[c.r,c.g,c.b,c.a])}return a}const s=i;let n;if(typeof s=="number"||typeof s=="string"||typeof s=="boolean")n=s;else if(Array.isArray(s))n=s.map(o=>w(o,e,t));else if(typeof s=="object")if("type"in s&&s.type!=null&&s.type==="Process")switch(s.op){case"ArcadeColor":{const o=w(s.value,e,t);W(Array.isArray(o)&&o.length===4),n=[o[0]/255,o[1]/255,o[2]/255,o[3]]}break;case"Transparency":{const o=w(s.value,e,t);W(typeof o=="number"),n=1-o/100}break;case"Divide":{const o=w(s.left,e,t);W(typeof o=="number");const a=w(s.right,e,t);W(typeof a=="number"),n=o/a}break;case"Random":{const o=w(s.seed,e,t),a=w(s.min,e,t),c=w(s.max,e,t),d=e.getObjectId(),l=he(d||0);n=a+Ye(l,o)*(c-a)}}else if("computed"in s)n=r(s);else{n={};for(const o in s)n[o]=w(s[o],e,t)}return n}function W(i){if(!i)throw new Error("Assertion failed.")}class _e extends Xe{constructor(e){super(),this._value=e}resize(e){}read(e,t){return this._value}readWithDefault(e,t,r){return this._value}referencesScale(){return!1}referencesGeometry(){return!1}}const ut=()=>ze.getLogger("esri.views.2d.engine.webgl.shaderGraph.techniques.mesh.MeshWriterInputEvaluator");async function V(i,e,t=!1){const{defaultValue:r,valueExpressionInfo:s,value:n}=e;if(s){const{expression:o}=s,a=await i.createComputedField({expression:o},t);return a?{...e,computed:a,defaultValue:r}:null}return{...e,computed:new _e(n),defaultValue:r}}async function ye(i,e){const{valueExpressionInfo:t}=e,{expression:r}=t,s=await i.createComputedField({expression:r});return s?{...e,computed:s}:null}function xe(i){return typeof i=="object"&&i!=null&&(!(!("valueExpressionInfo"in i)||!i.valueExpressionInfo)||"type"in i&&i.type==="Process"&&"op"in i&&i.op==="Random")}function j(i){if(Array.isArray(i)){for(const e of i)if(j(e))return!0}if(typeof i=="object"){if(xe(i))return!0;for(const e in i)if(j(i[e]))return!0}return!1}class ee{static async create(e,t,r){const s={},n=new Map,o=new Map,a=new Map,c=new Map,d=new Map,l=new Map;for(const u in r){const h=r[u];if(h!=null&&typeof h=="object")if(Array.isArray(h)){if(typeof h[0]=="object")throw new Error(`InternalError: Cannot handle ${u}. Nested array params are not supported`);s[u]=h}else if("valueExpressionInfo"in h){if(h.value){s[u]=h.value;continue}const g=await ye(e,h);if(!g){s[u]=h.defaultValue;continue}n.set(u,g),s[u]=null}else switch(h.type){case"cim-effect-infos":if(h.effectInfos.some(g=>g.overrides.length)){o.set(u,{effects:await Promise.all(h.effectInfos.map(async g=>{const m=g.overrides.map(f=>V(e,f));return{effect:g.effect,compiledOverrides:(await Promise.all(m)).filter(R)}}))});break}s[u]=h.effectInfos.map(g=>g.effect);break;case"cim-marker-placement-param":h.overrides.length&&a.set(u,{placementInfo:h,compiledOverrides:(await Promise.all(h.overrides.map(g=>V(e,g)))).filter(R)}),s[u]=h.placement;break;case"text-rasterization-param":{if(h.overrides.length){const m=h.overrides.map(f=>V(e,f,h.useLegacyLabelEvaluationRules));c.set(u,{compiledOverrides:(await Promise.all(m)).filter(R),rasterizationParam:h,objectIdToResourceId:new Map});continue}const g={type:"cim-rasterization-info",resource:h.resource};s[u]=await t.fetchResourceImmediate(g)??null;break}case"sprite-rasterization-param":{if(h.overrides.length){const m=h.overrides.map(f=>V(e,f));c.set(u,{compiledOverrides:(await Promise.all(m)).filter(R),rasterizationParam:h,objectIdToResourceId:new Map});continue}if(h.resource.type==="animated"){c.set(u,{compiledOverrides:[],rasterizationParam:h,objectIdToResourceId:new Map});continue}const g={type:"cim-rasterization-info",resource:h.resource};s[u]=await t.fetchResourceImmediate(g)??null;break}case"cim-marker-transform-param":{const{params:g}=h;if(j(g)){const m={compiledMarkerInfos:[]};await Promise.all(g.map(async f=>{const p={props:{}};for(const _ in f)if(xe(f[_])){const y=await ye(e,f[_]);p.compiledExpressionMap||(p.compiledExpressionMap=new Map);const v=p.compiledExpressionMap;y&&v.set(_,y)}else p.props[_]=f[_];m.compiledMarkerInfos.push(p)})),d.set(u,m)}else s[u]={type:"cim-marker-transform-info",infos:g};break}case"animation-params":{const{params:g}=h,m=ht(g);if(j(m)){const f=await Promise.all(m.map(p=>U(p,e)));l.set(u,{params:f,propertyIdToResourceId:new Map,key:u})}else{const f=lt(m),p=await t.fetchResourceImmediate({type:"animation-info",resource:f});p!=null&&p.type==="sprite"&&(s[u]={dataRow:p.rect.y,dataColumn:p.rect.x})}break}default:s[u]=h}else s[u]=h}return new ee(r,s,n,o,a,c,d,l)}constructor(e,t,r,s,n,o,a,c){this.inputMeshParams=e,this._resolvedMeshParams=t,this._dynamicProperties=r,this._dynamicEffectProperties=s,this._dynamicPlacementProperties=n,this._dynamicAsyncProperties=o,this._dynamicTransformProperties=a,this._dynamicAsyncAnimations=c,this.evaluator=d=>d}get hasDynamicProperties(){return!!(this._dynamicProperties.size||this._dynamicAsyncProperties.size||this._dynamicEffectProperties.size||this._dynamicTransformProperties.size||this._dynamicPlacementProperties.size||this._dynamicAsyncAnimations.size)}get evaluatedMeshParams(){return this._evaluatedMeshParams||(this._evaluatedMeshParams=this.evaluator(this._resolvedMeshParams)),this._evaluatedMeshParams}enqueueRequest(e,t,r){for(const s of this._dynamicAsyncProperties.values()){const n=Ae(s.rasterizationParam.resource);s.rasterizationParam.resource.type==="animated"&&s.rasterizationParam.resource.randomizeStartTime&&(n.primitiveName="__RESERVED__PRIMITIVE__NAME__",n.startGroup=he(t.getObjectId()||0));for(const{primitiveName:a,propertyName:c,computed:d,defaultValue:l,valueExpressionInfo:u}of s.compiledOverrides)try{const h=s.rasterizationParam.resource.type==="animated"?n.primitiveName:a;Ze(n,h,c,d,t,r,l)}catch(h){ut().errorOnce(new Le("invalid-arcade-expression",`Encountered an error when evaluating the arcade expression '${u?.expression}' (primitive: '${a}', property: '${c}')`,h))}const o=e.enqueueRequest({type:"cim-rasterization-info",resource:n});s.objectIdToResourceId.set(t.getObjectId(),o)}for(const s of this._dynamicAsyncAnimations.values()){const n=s.params.map(c=>w(c,t,r)).map(G).map(c=>c.simplify()),o=ge(n),a=e.enqueueRequest({type:"animation-info",resource:o});s.propertyIdToResourceId.set(t.getObjectId()+"."+s.key,a)}}evaluateMeshParams(e,t,r){for(const[s,n]of this._dynamicProperties.entries())this._resolvedMeshParams[s]=n.computed.readWithDefault(t,r,n.defaultValue);for(const[s,n]of this._dynamicPlacementProperties.entries())for(const{computed:o,defaultValue:a,propertyName:c}of n.compiledOverrides){const d=o.readWithDefault(t,r,a);n.placementInfo.placement[c]=d,this._resolvedMeshParams[s]=n.placementInfo.placement}for(const[s,n]of this._dynamicEffectProperties.entries())for(const o of n.effects){for(const{computed:a,defaultValue:c,propertyName:d}of o.compiledOverrides){const l=a.readWithDefault(t,r,c);o.effect[d]=l}this._resolvedMeshParams[s]=n.effects.map(a=>a.effect)}for(const[s,n]of this._dynamicTransformProperties.entries()){const o={type:"cim-marker-transform-info",infos:[]};for(const a of n.compiledMarkerInfos){const c={...a.props};if(a.compiledExpressionMap)for(const[d,l]of a.compiledExpressionMap){const u=l.computed.readWithDefault(t,r,l.defaultValue);c[d]=typeof u=="number"||typeof u=="boolean"?u:l.defaultValue}o.infos.push(c)}this._resolvedMeshParams[s]=o}for(const[s,n]of this._dynamicAsyncProperties.entries()){const o=n.objectIdToResourceId.get(t.getObjectId());if(o==null)continue;const a=e.getResource(o);this._resolvedMeshParams[s]=a}for(const[s,n]of this._dynamicAsyncAnimations.entries()){const o=n.propertyIdToResourceId.get(t.getObjectId()+"."+s);if(o==null)continue;const a=e.getResource(o);this._resolvedMeshParams[s]={dataRow:a.rect.y,dataColumn:a.rect.x}}return this._evaluatedMeshParams=this.evaluator(this._resolvedMeshParams),this.evaluatedMeshParams}}class dt{async createMeshWriter(e,t,r,s){const n=this._getMeshWriter(s.techniqueType),o=await ee.create(e,t,s.inputParams),a=new n(s.id,o,s.optionalAttributes,r);return await a.loadDependencies(),a}_getMeshWriter(e){switch(e){case M.Fill:return qe;case M.DotDensity:return Ne;case M.ComplexFill:return je;case M.PatternFill:return Ve;case M.OutlineFill:return We;case M.PatternOutlineFill:return Oe;case M.ComplexOutlineFill:return Ge;case M.Marker:return Ce;case M.PieChart:return Fe;case M.Text:return ce;case M.Line:return Re;case M.TexturedLine:return Be;case M.Heatmap:return Te;case M.Label:return nt;case M.AnimatedMarker:return Ue;default:throw new Error("Internal Error: Mesh writer not in the registry")}}}export{dt as j,_e as r};
