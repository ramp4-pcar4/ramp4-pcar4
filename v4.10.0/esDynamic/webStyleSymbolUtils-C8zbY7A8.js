import{s as f,b as $,e as g,I as c,p as h,R as d,g as S,m as w,j as N,x as k,k as D,n as U,o as v,y as x}from"./main-DCIX61zy.js";import{c as A,a as P}from"./devEnvironmentUtils-CxrVv3RG.js";function E(e,t,l,a){const n=e.name;return n==null?Promise.reject(new f("symbolstyleutils:style-symbol-reference-name-missing","Missing name in style symbol reference")):e.styleName==="Esri2DPointSymbolsStyle"?W(n,t,a):$(e,t,a).then(r=>F(r,n,t,l,x,a))}function j(e,t){return t.items.find(l=>l.name===e)}function F(e,t,l,a,n,r){const o=l?.portal!=null?l.portal:g.getDefault(),b={portal:o,url:c(e.baseUrl),origin:"portal-item"},m=j(t,e.data);if(!m){const y=`The symbol name '${t}' could not be found`;return Promise.reject(new f("symbolstyleutils:symbol-name-not-found",y,{symbolName:t}))}let i=h(n(m,a),b),u=m.thumbnail?.href??null;const p=m.thumbnail?.imageData;A()&&(i=P(i)??"",u=P(u));const I={portal:o,url:c(d(i)),origin:"portal-item"};return S(i,r).then(y=>{const O=a==="cimRef"?w(y.data):y.data,s=N(O,I);if(s&&k(s)){if(u){const R=h(u,b);s.thumbnail=new D({url:R})}else p&&(s.thumbnail=new D({url:`data:image/png;base64,${p}`}));e.styleUrl?s.styleOrigin=new U({portal:l.portal,styleUrl:e.styleUrl,name:t}):e.styleName&&(s.styleOrigin=new U({portal:l.portal,styleName:e.styleName,name:t}))}return s})}function W(e,t,l){const a=v.replaceAll(/\{SymbolName\}/gi,e),n=t.portal!=null?t.portal:g.getDefault();return S(a,l).then(r=>{const o=w(r.data);return N(o,{portal:n,url:c(d(a)),origin:"portal-item"})})}export{F as fetchSymbolFromStyle,j as getStyleItemFromStyle,E as resolveWebStyleSymbol};
