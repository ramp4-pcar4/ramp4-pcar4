import{ch as p,a1 as l,a8 as o,ci as c,bh as r,bt as g,bu as n,bv as d}from"./main-DCIX61zy.js";import{j as u,y as w}from"./LayerView-DONYuvqR.js";import{t as m}from"./GraphicContainer-DPQzFmqj.js";import{F as y}from"./GraphicsView2D-DGP_h330.js";import{e as V}from"./HighlightCounter-DFWq7PnG.js";let a=class extends u(w){constructor(){super(...arguments),this._highlightCounter=new V}attach(){this.graphicsView=new y({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new m(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),this.watch("layer.visible",i=>{i&&(this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate())})]),this._updateHighlights()}detach(){this.container.removeAllChildren(),this.graphicsView=p(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t="default"){let h;typeof i=="number"?h=[i]:i instanceof l?h=[i.uid]:Array.isArray(i)&&i.length>0?h=typeof i[0]=="number"?i:i.map(s=>s&&s.uid):o.isCollection(i)&&i.length>0&&(h=i.map(s=>s&&s.uid).toArray());const e=h?.filter(c);return e?.length?(this._addHighlight(e,t),r(()=>this._removeHighlight(e,t))):r()}_addHighlight(i,t){this._highlightCounter.addGroup(i,t),this._updateHighlights()}_removeHighlight(i,t){this._highlightCounter.deleteGroup(i,t),this._updateHighlights()}_updateHighlights(){const i=[];for(const t of this._highlightCounter.ids()){const h=this._highlightCounter.getHighlightGroups(t),e=this._getHighlightBits(h);i.push({objectId:t,highlightFlags:e})}this.graphicsView?.setHighlight(i)}};g([n()],a.prototype,"graphicsView",void 0),a=g([d("esri.views.2d.layers.GraphicsLayerView2D")],a);const v=a;export{v as default};
