import{bM as p,bN as f,bO as b,bP as i,U as h}from"./main-DCIX61zy.js";function l(o){const t=o.toJSON();return t.attachmentTypes&&(t.attachmentTypes=t.attachmentTypes.join(",")),t.keywords&&(t.keywords=t.keywords.join(",")),t.globalIds&&(t.globalIds=t.globalIds.join(",")),t.objectIds&&(t.objectIds=t.objectIds.join(",")),t.size&&(t.size=t.size.join(",")),t}function I(o,t){const e={};for(const a of t){const{parentObjectId:n,parentGlobalId:s,attachmentInfos:r}=a;for(const c of r){const{id:d}=c,m=p(f(`${o.path}/${n}/attachments/${d}`)),u=b.fromJSON(c);u.set({url:m,parentObjectId:n,parentGlobalId:s}),e[n]?e[n].push(u):e[n]=[u]}}return e}function y(o,t,e){let a={query:i({...o.query,f:"json",...l(t)})};return e&&(a={...e,...a,query:{...e.query,...a.query}}),h(o.path+"/queryAttachments",a).then(n=>n.data.attachmentGroups)}async function j(o,t,e){const{objectIds:a}=t,n=[];for(const s of a)n.push(h(o.path+"/"+s+"/attachments",e));return Promise.all(n).then(s=>a.map((r,c)=>({parentObjectId:r,attachmentInfos:s[c].data.attachmentInfos})))}export{y as executeAttachmentQuery,j as fetchAttachments,I as processAttachmentQueryResult};
