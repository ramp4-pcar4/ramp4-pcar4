import{bP as d,bQ as f,bR as i,bS as b,U as u}from"./main-CzbArNue.js";import"./preload-helper-ExcqyqRp.js";function l(s){const t=s.toJSON();return t.attachmentTypes&&(t.attachmentTypes=t.attachmentTypes.join(",")),t.keywords&&(t.keywords=t.keywords.join(",")),t.globalIds&&(t.globalIds=t.globalIds.join(",")),t.objectIds&&(t.objectIds=t.objectIds.join(",")),t.size&&(t.size=t.size.join(",")),t}function j(s,t){const e={};for(const n of t){const{parentObjectId:a,parentGlobalId:o,attachmentInfos:r}=n;for(const c of r){const{id:h}=c,p=d(f(`${s.path}/${a}/attachments/${h}`)),m=i.fromJSON(c);m.set({url:p,parentObjectId:a,parentGlobalId:o}),e[a]?e[a].push(m):e[a]=[m]}}return e}function q(s,t,e){let n={query:b({...s.query,f:"json",...l(t)})};return e&&(n={...e,...n,query:{...e.query,...n.query}}),u(s.path+"/queryAttachments",n).then(a=>a.data.attachmentGroups)}async function O(s,t,e){const{objectIds:n}=t,a=[];for(const o of n)a.push(u(s.path+"/"+o+"/attachments",e));return Promise.all(a).then(o=>n.map((r,c)=>({parentObjectId:r,attachmentInfos:o[c].data.attachmentInfos})))}export{q as executeAttachmentQuery,O as fetchAttachments,j as processAttachmentQueryResult};
