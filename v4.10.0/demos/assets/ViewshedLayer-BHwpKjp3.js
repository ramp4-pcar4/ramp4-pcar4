import{ea as C,jL as H,bw as t,bx as s,D as G,ge as U,i6 as x,jM as X,by as z,jN as k,a1 as L,cM as B,cf as A,hJ as P,cL as I,jO as K,bq as Q,fD as F,b1 as q,ef as W,ei as Y,eR as Z,es as ee}from"./main-CzbArNue.js";import{c as te,b as ie}from"./featureReferenceUtils-LVeahBXZ.js";import{c as se}from"./Analysis-CUkY1cMr.js";import"./preload-helper-ExcqyqRp.js";import"./sphere-B159EIxN.js";import"./mat3f64-q3fE-ZOt.js";import"./plane-D5IY0WGh.js";import"./mat4f64-CSKppSlJ.js";import"./quatf64-aQ5IuZRd.js";import"./IntersectorInterfaces-dI_rFEZm.js";import"./boundedPlane-CJ9Hcn7s.js";import"./lineSegment-BfWBezZn.js";let a=class extends C(k){constructor(e){super(e),this.observer=null,this.farDistance=1e3,this.heading=0,this.tilt=90,this.horizontalFieldOfView=45,this.verticalFieldOfView=45,this.feature=null}isValid(){return this.observer!=null&&this.farDistance>0}equals(e){return H(this.observer,e.observer)&&this.farDistance===e.farDistance&&this.heading===e.heading&&this.tilt===e.tilt&&this.horizontalFieldOfView===e.horizontalFieldOfView&&this.verticalFieldOfView===e.verticalFieldOfView&&te(this.feature,e.feature)}};t([s({type:G,json:{write:!0}})],a.prototype,"observer",void 0),t([s({type:Number,nonNullable:!0,range:{min:0},json:{write:{isRequired:!0}}})],a.prototype,"farDistance",void 0),t([s({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}}),U(i=>x.normalize(X(i),void 0,!0))],a.prototype,"heading",void 0),t([s({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],a.prototype,"tilt",void 0),t([s({type:Number,nonNullable:!0,range:{min:0,max:360},json:{write:{isRequired:!0}}})],a.prototype,"horizontalFieldOfView",void 0),t([s({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],a.prototype,"verticalFieldOfView",void 0),t([s(ie)],a.prototype,"feature",void 0),t([s({json:{read:!1}})],a.prototype,"isValid",null),a=t([z("esri.analysis.Viewshed")],a);const T=a,R=L.ofType(T);let p=class extends se{constructor(e){super(e),this.type="viewshed",this._extent=null}initialize(){this.addHandles(A(()=>this._computeExtent(),e=>{e.pending==null&&(this._extent=e.extent)},P))}get viewsheds(){return this._get("viewsheds")||new R}set viewsheds(e){this._set("viewsheds",I(e,this.viewsheds,R))}get spatialReference(){for(const e of this.viewsheds)if(e.observer!=null)return e.observer.spatialReference;return null}get extent(){return this._extent}get requiredPropertiesForEditing(){return this.viewsheds.items.map(({observer:e})=>e)}async waitComputeExtent(){const e=this._computeExtent();e.pending!=null&&await e.pending}_computeExtent(){const{spatialReference:e}=this;if(e==null)return{pending:null,extent:null};const u=this.viewsheds.filter(r=>r.observer!=null),y=u.map(r=>r.observer).toArray(),o=K(y,e);return o.pending!=null?{pending:o.pending,extent:null}:{pending:null,extent:o.geometries.map((r,d)=>{const b=u.at(d);return r!=null&&b!=null?this._computeViewshedExtent(this.viewsheds.at(d),r):null}).filter(r=>r!=null).reduce((r,d)=>re(r,d),null)}}_computeViewshedExtent(e,u){const{farDistance:y,heading:o,tilt:r,horizontalFieldOfView:d,verticalFieldOfView:b}=e,{spatialReference:E}=u,V=d/2,O=b/2,$=y/E.metersPerUnit,J=[x.normalize(o-V),o,x.normalize(o+V)],h=Q.fromPoint(u),v=f=>{const c=J.map(l=>x.normalize(l-f));if(c[0]>c[2]||d===360)return $;const w=c.map(l=>Math.abs(l>180?360-l:l)).reduce((l,g)=>l>g?g:l);return w>90?0:$*Math.cos(F(w))};h.xmax+=v(90),h.xmin-=v(-90),h.ymax+=v(0),h.ymin-=v(180);const m=u.z;if(m!=null){let f=m,c=m;const w=r-90,l=q(w+O,-90,90),g=q(w-O,-90,90),j=E?.isGeographic?y:$;f+=j*N(l),c+=j*N(g);const S=M(O)*j,_=N(w)*S*(1-M(V));r<90&&(f-=_),r>90&&(c-=_),h.zmax=Math.max(f,m),h.zmin=Math.min(c,m)}return h}clear(){this.viewsheds.removeAll()}};function re(i,e){return i==null?e:e==null?i:i.union(e)}function M(i){return Math.cos(F(i))}function N(i){return Math.sin(F(i))}t([s({type:["viewshed"]})],p.prototype,"type",void 0),t([s({cast:B,type:R,nonNullable:!0})],p.prototype,"viewsheds",null),t([s({readOnly:!0})],p.prototype,"spatialReference",null),t([s()],p.prototype,"_extent",void 0),t([s({readOnly:!0})],p.prototype,"extent",null),t([s({readOnly:!0})],p.prototype,"requiredPropertiesForEditing",null),p=t([z("esri.analysis.ViewshedAnalysis")],p);const D=p;let n=class extends W(Y(ee)){constructor(i){super(i),this.type="viewshed",this.operationalLayerType="ViewshedLayer",this.source=new D,this.opacity=1}initialize(){this.addHandles(A(()=>this.source,(i,e)=>{e!=null&&e.parent===this&&(e.parent=null),i!=null&&(i.parent=this)},P))}async load(){return this.addResolvingPromise(this.source.waitComputeExtent()),this}get spatialReference(){return this.source.spatialReference}get fullExtent(){return this.source.extent}releaseAnalysis(i){this.source===i&&(this.source=new D)}get analysis(){return this.source}set analysis(i){this.source=i}get viewsheds(){return this.source.viewsheds}set viewsheds(i){this.source.viewsheds=i}writeViewsheds(i,e,u,y){e.viewsheds=i.filter(o=>o.isValid()).map(o=>o.toJSON(y)).toJSON()}};t([s({json:{read:!1},readOnly:!0})],n.prototype,"type",void 0),t([s({type:["ViewshedLayer"]})],n.prototype,"operationalLayerType",void 0),t([s({nonNullable:!0})],n.prototype,"source",void 0),t([s({readOnly:!0})],n.prototype,"spatialReference",null),t([s({readOnly:!0})],n.prototype,"fullExtent",null),t([s({readOnly:!0,json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],n.prototype,"opacity",void 0),t([s({type:["show","hide"]})],n.prototype,"listMode",void 0),t([s({type:L.ofType(T),json:{write:{ignoreOrigin:!0},origins:{"web-scene":{write:{ignoreOrigin:!0}}}}})],n.prototype,"viewsheds",null),t([Z("web-scene","viewsheds")],n.prototype,"writeViewsheds",null),n=t([z("esri.layers.ViewshedLayer")],n);const ge=n;export{ge as default};
