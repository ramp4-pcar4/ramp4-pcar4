import{V as p,cZ as m,q as o,u as e,c_ as s,C as a}from"./main-B5_XOOwi.js";import{j as n,y as l}from"./LayerView-D5ric1Fk.js";import"./preload-helper-ExcqyqRp.js";import"./Container-BkgZTubD.js";import"./MapView-D3j_x9y3.js";import"./Cyclical-Q67pgA4o.js";import"./CollectionFlattener-B3O4Qmeo.js";import"./workers-CLEUx-4i.js";import"./projection-DwpqUf7U.js";import"./projectBuffer-D86redIv.js";import"./TileInfo-StdZn4ln.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-DFZ_kfB7.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-BdIrwhdI.js";import"./signal-BmShen8Z.js";import"./Map-Dzxs0_tk.js";import"./Basemap-cLJEzEdH.js";import"./loadAll-BQJvdbTr.js";import"./PortalItem-CktkXSu9.js";import"./writeUtils-CxoVKn6O.js";import"./compilerUtils-B8Oqdvs0.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-CUdVSMyt.js";import"./common-DQOJ18NT.js";import"./TablesMixin--edRJQOH.js";import"./Layer-nl2KuhhW.js";import"./TimeExtent-ClRYiBYy.js";import"./GraphicsCollection-C_v3VqdJ.js";import"./HeightModelInfo-Dpjf8T_K.js";import"./ReactiveMap-BpK7xt0I.js";import"./Query-De_HsvnG.js";import"./Field-q5OmBPu1.js";import"./fieldType-DlCBsK54.js";import"./arcgisLayerUrl-ByaroTWn.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-B7N_6o8F.js";import"./vec2-DGVIkCvT.js";import"./Tile-Jg2vjQ2s.js";import"./TileKey-CenpbqtG.js";import"./QueueProcessor-P1Cs6Xv8.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-CPO1YcIx.js";import"./normalizeUtilsCommon-HtTsMmEj.js";import"./utils-DSGzLx6N.js";import"./utils-WXIwzruR.js";import"./mat3-XZDRtl20.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-BjkYeJa9.js";import"./vec32-DACfXE6P.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-BcRrejO3.js";import"./imageUtils-D9b4JOJn.js";import"./capabilities-A2uoe7dc.js";import"./Version-CcbNCCmU.js";import"./ColorBackground-CA8v27Dq.js";import"./parser-CAHBIv-f.js";import"./layerViewUtils-BkodGkFg.js";let r=class extends n(l){constructor(t){super(t),this.layerViews=new p}set layerViews(t){this._set("layerViews",m(t,this._get("layerViews")))}get updatingProgress(){return this.layerViews.length===0?1:this.layerViews.reduce((t,i)=>t+i.updatingProgress,0)/this.layerViews.length}attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",()=>this._updateStageChildren()))}detach(){this.container.removeAllChildren()}update(t){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((t,i)=>this.container.addChildAt(t.container,i))}};o([e({cast:s})],r.prototype,"layerViews",null),o([e({readOnly:!0})],r.prototype,"updatingProgress",null),r=o([a("esri.views.2d.layers.KnowledgeGraphLayerView2D")],r);const wt=r;export{wt as default};
