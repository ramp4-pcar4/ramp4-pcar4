let o;function n(){return o||(o=u()),o}class a{constructor(){this.available=!1,this.majorPerformanceCaveat=!1,this.maxTextureSize=0,this.supportsVertexShaderSamplers=!1,this.supportsHighPrecisionFragment=!1,this.supportsColorBufferFloat=!1,this.supportsColorBufferFloatBlend=!1,this.supportsColorBufferHalfFloat=!1}}function s(t){if(typeof WebGL2RenderingContext>"u")return null;const r=document.createElement("canvas");if(!r)return null;let e=r.getContext("webgl2",{failIfMajorPerformanceCaveat:!0});if(e==null&&(e=r.getContext("webgl2"),e!=null&&(t.majorPerformanceCaveat=!0)),e==null)return e;t.available=!0,t.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),t.supportsVertexShaderSamplers=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0;const l=e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT);return l&&(t.supportsHighPrecisionFragment=l.precision>0),e}function u(){const t=new a,r=s(t);return r==null||(t.supportsColorBufferFloat=r.getExtension("EXT_color_buffer_float")!==null,t.supportsColorBufferFloatBlend=r.getExtension("EXT_float_blend")!==null,t.supportsColorBufferHalfFloat=t.supportsColorBufferFloat||r.getExtension("EXT_color_buffer_half_float")!==null),t}export{n as t};
