import{n as d}from"./date-Cqvy-TgA.js";import{cc as h,cd as g,ah as m,ce as p,ag as y,cf as w,cg as a}from"./main-kpG51UWM.js";class I{constructor(){this.code=null,this.description=null}}class b{constructor(e){this.error=new I,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=e}}function c(n){return new b(n)}class q{constructor(e){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=e}}function j(n){return new q(n)}const l=new Set;function F(n,e,r,f=!1){l.clear();for(const t in r){const s=n.get(t);if(!s)continue;const o=S(s,r[t]);if(l.add(s.name),s&&(f||s.editable)){const u=h(s,o);if(u)return c(g(u,s,o));e[s.name]=o}}for(const t of n.requiredFields??[])if(!l.has(t.name))return c(`missing required field "${t.name}"`);return null}function S(n,e){let r=e;return m(n)&&typeof e=="string"?r=parseFloat(e):p(n)&&e!=null&&typeof e!="string"?r=String(e):y(n)&&typeof e=="string"&&(r=d(e)),w(r)}let i;function x(n,e){if(!n||!a(e))return n;if("rings"in n||"paths"in n){if(i==null)throw new TypeError("geometry engine not loaded");return i.simplify(e,n)}return n}async function E(){return i==null&&(i=await import("./geometryEngineJSON-CGn_tfx8.js").then(n=>n.g)),i}async function G(n,e){!a(n)||e!=="esriGeometryPolygon"&&e!=="esriGeometryPolyline"||await E()}export{j as d,c as f,G as j,F as p,x as y};
