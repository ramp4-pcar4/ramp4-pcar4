import{k as j,o as q,by as Rt,A as Nt,v as Et,s as Ot,f as Wt,n as Q,ax as jt,a$ as et,D as Gt,h4 as kt,bF as qt,au as $t,eI as Xt}from"./main-kpG51UWM.js";let ct=class{constructor(t=null,e=null,n=null){this.minValue=t,this.maxValue=e,this.noDataValue=n}};const zt=9999999e31,Ht=2e-7,Jt={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE],unknown:void 0,c64:void 0,c128:void 0};function nt(t){return Jt[t]??[-34028234663852886e22,34028234663852886e22]}function Kt(t,e){return t==null||e==null?"s32":t<0?t>=-128&&e<128?"s8":t>=-32768&&e<32768?"s16":"s32":e<256?"u8":e<65536?"u16":"u32"}function Mt(t){return(t?.startsWith("s")||t?.startsWith("u"))??!1}function Qt(t,e,n,o){let[r,s]=nt(n);const i=Mt(n);return i&&(r-=1e-5,s+=1e-5),i?n.startsWith("u")?Zt(t,e,o,[r,s]):te(t,e,o,[r,s]):ee(t,e,o,[r,s])}function Yt(t,e){for(let n=0;n<e.length;n++)e[n]&&isNaN(t[n])&&(e[n]=0,t[n]=0)}function Zt(t,e,n,o){const[r,s]=o;for(let i=0;i<e.length;i++)if(e[i]){const c=t[i];c<r||c>s?e[i]=0:n[i]=c+.5|0}}function te(t,e,n,o){const[r,s]=o;for(let i=0;i<e.length;i++)if(e[i]){const c=t[i];c<r||c>s?e[i]=0:n[i]=c+(c>0?.5:-.5)|0}}function ee(t,e,n,o){const[r,s]=o;for(let i=0;i<e.length;i++)if(e[i]){const c=t[i];c<r||c>s?e[i]=0:n[i]=c}}function ne(t,e,n){if(t.depthCount&&t.depthCount>1)return;const{pixels:o,statistics:r,pixelType:s}=t,i=o[0].length,c=t.bandMasks??[],a=t.mask??new Uint8Array(i).fill(255),h=s==="f32"||s==="f64",l=nt(s);let f=!1;for(let p=0;p<o.length;p++){const u=typeof e=="number"?e:e[p];if(u==null)continue;const m=r?.[p]?.minValue??l[0],d=r?.[p]?.maxValue??l[1];if(m>u+Number.EPSILON||d<u-Number.EPSILON)continue;const g=c[p]||a.slice(),k=o[p],M=n?.customFloatTolerance;if(h&&M!==0){let y=M;y||(y=Math.abs(u)>=zt?Ht*Math.abs(u):s==="f32"?2**-23:Number.EPSILON);for(let w=0;w<k.length;w++)g[w]&&Math.abs(k[w]-u)<y&&(k[w]=0,g[w]=0,a[w]=0,f=!0)}else for(let y=0;y<k.length;y++)g[y]&&k[y]===u&&(k[y]=0,g[y]=0,a[y]=0,f=!0);c[p]=g}f&&(t.bandMasks=t.bandMasks||t.pixels.length>1?c:null,t.mask=a),f&&"updateStatistics"in t&&t.updateStatistics()}var J;let W=J=class extends Et{static createEmptyBand(t,e){return new(J.getPixelArrayConstructor(t))(e)}static combineBandMasks(t){if(t.length<2)return t[0];const e=t[0].length,n=new Uint8Array(e).fill(255);for(let o=0;o<t.length;o++){const r=t[o];for(let s=0;s<e;s++)r[s]||(n[s]=0)}return n}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){return this.pixels?.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new Ot("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics??new ct)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map(n=>ie(n,this.mask));const t=this.mask;let e=0;if(t!=null)for(let n=0;n<t.length;n++)t[n]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||t==="f64"||t==="f32"||!this.pixels)return;const[e,n]=nt(t),o=this.pixels,r=this.width*this.height,s=o.length;let i,c,a;const h=[];for(let l=0;l<s;l++){a=J.createEmptyBand(t,r),i=o[l];for(let f=0;f<r;f++)c=i[f],a[f]=c>n?n:c<e?e:c;h.push(a)}this.pixels=h,this.pixelType=t}extractBands(t){const{pixels:e,statistics:n}=this;if(t==null||t.length===0||!e||e.length===0)return this;const o=e.length,r=t.some(f=>f>=e.length),s=o===t.length&&!t.some((f,p)=>f!==p);if(r||s)return this;const i=this.bandMasks?.length===o?t.map(f=>this.bandMasks[f]):void 0;let{mask:c,validPixelCount:a}=this;const{width:h,height:l}=this;return i?.length&&(c=J.combineBandMasks(i),a=c.filter(f=>!!f).length),new J({pixelType:this.pixelType,width:h,height:l,mask:c,bandMasks:i,validPixelCount:a,maskIsAlpha:this.maskIsAlpha,pixels:t.map(f=>e[f]),statistics:n&&t.map(f=>n[f])})}clone(){const t=new J({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;this.mask!=null&&(t.mask=new Uint8Array(this.mask)),this.bandMasks&&(t.bandMasks=this.bandMasks.map(o=>new Uint8Array(o)));const n=J.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const o=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=o?this.pixels[e].slice():new n(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=Wt(this.statistics[e]);return t.premultiplyAlpha=this.premultiplyAlpha,t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:n,premultiplyAlpha:o,pixels:r}=this;if(!t||!r?.length)return void Q.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let s,i,c,a;s=i=c=r[0],r.length>=3?(i=r[1],c=r[2]):r.length===2&&(i=r[1]);const h=new Uint32Array(t),l=this.width*this.height;if(s.length===l)if(e!=null&&e.length===l)if(n)for(a=0;a<l;a++){const f=e[a];if(f){const p=f/255;h[a]=o?f<<24|c[a]*p<<16|i[a]*p<<8|s[a]*p:f<<24|c[a]<<16|i[a]<<8|s[a]}}else for(a=0;a<l;a++)e[a]&&(h[a]=255<<24|c[a]<<16|i[a]<<8|s[a]);else for(a=0;a<l;a++)h[a]=255<<24|c[a]<<16|i[a]<<8|s[a];else Q.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:n,statistics:o}=this;if(!t||!e?.length)return void Q.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const r=this.pixelType;let s=1,i=0,c=1;if(o&&o.length>0){for(const d of o)if(d.minValue!=null&&(i=Math.min(i,d.minValue)),d.maxValue!=null&&d.minValue!=null){const g=d.maxValue-d.minValue;c=Math.max(c,g)}s=255/c}else{let d=255;r==="s8"?(i=-128,d=127):r==="u16"?d=65535:r==="s16"?(i=-32768,d=32767):r==="u32"?d=4294967295:r==="s32"?(i=-2147483648,d=2147483647):r==="f32"?(i=-34e38,d=34e38):r==="f64"&&(i=-Number.MAX_VALUE,d=Number.MAX_VALUE),s=255/(d-i)}const a=new Uint32Array(t),h=this.width*this.height;let l,f,p,u,m;if(l=f=p=e[0],l.length!==h)return Q.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(f=e[1],e.length>=3&&(p=e[2]),n!=null&&n.length===h)for(u=0;u<h;u++)n[u]&&(a[u]=255<<24|(p[u]-i)*s<<16|(f[u]-i)*s<<8|(l[u]-i)*s);else for(u=0;u<h;u++)a[u]=255<<24|(p[u]-i)*s<<16|(f[u]-i)*s<<8|(l[u]-i)*s;else if(n!=null&&n.length===h)for(u=0;u<h;u++)m=(l[u]-i)*s,n[u]&&(a[u]=255<<24|m<<16|m<<8|m);else for(u=0;u<h;u++)m=(l[u]-i)*s,a[u]=255<<24|m<<16|m<<8|m}_fillFrom32Bit(t){const{pixels:e,mask:n}=this;if(!t||!e?.length)return Q.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let o,r,s,i;o=r=s=e[0],e.length>=3?(r=e[1],s=e[2]):e.length===2&&(r=e[1]);const c=this.width*this.height;if(o.length!==c)return Q.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let a=0;if(n!=null&&n.length===c)for(i=0;i<c;i++)t[a++]=o[i],t[a++]=r[i],t[a++]=s[i],t[a++]=1&n[i];else for(i=0;i<c;i++)t[a++]=o[i],t[a++]=r[i],t[a++]=s[i],t[a++]=1}};function ie(t,e){let n=1/0,o=-1/0;const r=t.length;let s,i=0;if(e!=null)for(s=0;s<r;s++)e[s]&&(i=t[s],n=i<n?i:n,o=i>o?i:o);else for(s=0;s<r;s++)i=t[s],n=i<n?i:n,o=i>o?i:o;return new ct(n,o)}j([q({json:{write:!0}})],W.prototype,"width",void 0),j([q({json:{write:!0}})],W.prototype,"height",void 0),j([q({json:{write:!0}})],W.prototype,"pixelType",void 0),j([Rt("pixelType")],W.prototype,"castPixelType",null),j([q({json:{write:!0}})],W.prototype,"validPixelCount",void 0),j([q({json:{write:!0}})],W.prototype,"mask",void 0),j([q({json:{write:!0}})],W.prototype,"maskIsAlpha",void 0),j([q({json:{write:!0}})],W.prototype,"pixels",void 0),j([q()],W.prototype,"premultiplyAlpha",void 0),j([q({json:{write:!0}})],W.prototype,"statistics",void 0),j([q({json:{write:!0}})],W.prototype,"depthCount",void 0),j([q({json:{write:!0}})],W.prototype,"noDataValues",void 0),j([q({json:{write:!0}})],W.prototype,"bandMasks",void 0),W=J=j([Nt("esri.layers.support.PixelBlock")],W);const D=W;var ft,ut;(function(t){t[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll"})(ft||(ft={})),function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(ut||(ut={}));const se=6;function L(t){return t!=null&&t.declaredClass==="esri.layers.support.PixelBlock"&&t.pixels&&t.pixels.length>0}function le(t){if(!t?.length||t.some(l=>!L(l)))return null;if(t.length===1)return t[0]?.clone()??null;const e=t,{width:n,height:o,pixelType:r}=e[0];if(e.some(l=>l.width!==n||l.height!==o))return null;const s=e.map(({mask:l})=>l).filter(l=>l!=null);let i=null;s.length&&(i=new Uint8Array(n*o),i.set(s[0]),s.length>1&&vt(s.slice(1),i));const c=[];e.forEach(({pixels:l})=>c.push(...l));const a=e.map(({statistics:l})=>l).filter(l=>l?.length),h=[];return a.forEach(l=>h.push(...l)),new D({pixelType:r,width:n,height:o,mask:i,pixels:c,statistics:h.length?h:null})}function oe(t){if(!t)return;const e=t.colormap;if(!e||e.length===0)return;const n=e.sort((f,p)=>f[0]-p[0]);let o=0;n[0][0]<0&&(o=n[0][0]);const r=Math.max(256,n[n.length-1][0]-o+1),s=new Uint8Array(4*r),i=[];let c,a=0,h=0;const l=n[0].length===5;if(r>65536)return n.forEach(f=>{i[f[0]-o]=l?f.slice(1):f.slice(1).concat([255])}),{indexed2DColormap:i,offset:o,alphaSpecified:l};if(t.fillUnspecified)for(c=n[h],a=c[0]-o;a<r;a++)s[4*a]=c[1],s[4*a+1]=c[2],s[4*a+2]=c[3],s[4*a+3]=l?c[4]:255,a===c[0]-o&&(c=h===n.length-1?c:n[++h]);else for(a=0;a<n.length;a++)c=n[a],h=4*(c[0]-o),s[h]=c[1],s[h+1]=c[2],s[h+2]=c[3],s[h+3]=l?c[4]:255;return{indexedColormap:s,offset:o,alphaSpecified:l}}function re(t,e){if(!L(t)||!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),o=n.pixels;let r=n.mask;const s=n.width*n.height;if(o.length!==1)return t;const{indexedColormap:i,indexed2DColormap:c,offset:a,alphaSpecified:h}=e;let l=0;const f=o[0],p=new Uint8Array(f.length),u=new Uint8Array(f.length),m=new Uint8Array(f.length);let d,g=0;if(i){const k=i.length-1;if(r!=null)for(l=0;l<s;l++)r[l]&&(g=4*(f[l]-a),g<a||g>k?r[l]=0:(p[l]=i[g],u[l]=i[g+1],m[l]=i[g+2],r[l]=i[g+3]));else{for(r=new Uint8Array(s),l=0;l<s;l++)g=4*(f[l]-a),g<a||g>k?r[l]=0:(p[l]=i[g],u[l]=i[g+1],m[l]=i[g+2],r[l]=i[g+3]);n.mask=r}}else if(c)if(r!=null)for(l=0;l<s;l++)r[l]&&(d=c[f[l]],p[l]=d[0],u[l]=d[1],m[l]=d[2],r[l]=d[3]);else{for(r=new Uint8Array(s),l=0;l<s;l++)d=c[f[l]],p[l]=d[0],u[l]=d[1],m[l]=d[2],r[l]=d[3];n.mask=r}return n.pixels=[p,u,m],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=h,n}function ae(t,e){if(!L(t))return null;const{pixels:n,mask:o}=t,r=n.length;let s=e.lut;const{offset:i}=e;s&&s[0].length===1&&(s=n.map(()=>s));const c=[],a=e.outputPixelType||"u8";for(let l=0;l<r;l++){const f=pt(n[l],o,s[l],i||0,a);c.push(f)}const h=new D({width:t.width,height:t.height,pixels:c,mask:o,pixelType:a});return h.updateStatistics(),h}function pt(t,e,n,o,r){const s=t.length,i=D.createEmptyBand(r,s);if(e)for(let c=0;c<s;c++)e[c]&&(i[c]=n[t[c]-o]);else for(let c=0;c<s;c++)i[c]=n[t[c]-o];return i}function he(t,e){if(!L(t))return null;const n=t.clone(),{pixels:o}=n,r=n.width*n.height,s=e.length,i=Math.floor(s/2),c=e[Math.floor(i)],a=o[0];let h,l,f,p,u,m,d=!1;const g=new Uint8Array(r),k=new Uint8Array(r),M=new Uint8Array(r);let y=n.mask;const w=e[0].mappedColor.length===4;for(y||(y=new Uint8Array(r),y.fill(w?255:1),n.mask=y),u=0;u<r;u++)if(y[u]){for(h=a[u],d=!1,m=i,l=c,f=0,p=s-1;p-f>1;){if(h===l.value){d=!0;break}h>l.value?f=m:p=m,m=Math.floor((f+p)/2),l=e[Math.floor(m)]}d||(h===e[f].value?(l=e[f],d=!0):h===e[p].value?(l=e[p],d=!0):h<e[f].value?(d=!1,l=null):h>e[f].value&&(h<e[p].value?(l=e[f],d=!0):p===s-1?(d=!1,l=null):(l=e[p],d=!0))),d?(g[u]=l.mappedColor[0],k[u]=l.mappedColor[1],M[u]=l.mappedColor[2],y[u]=l.mappedColor[3]):g[u]=k[u]=M[u]=y[u]=0}return n.pixels=[g,k,M],n.mask=y,n.pixelType="u8",n.maskIsAlpha=w,n}function ce(t,e){if(!L(t))return null;const{width:n,height:o}=t,{inputRanges:r,outputValues:s,outputPixelType:i,noDataRanges:c,allowUnmatched:a,isLastInputRangeInclusive:h}=e,l=t.pixels[0],f=D.createEmptyBand(i,l.length),p=t.mask,u=new Uint8Array(n*o);p?u.set(p):u.fill(255);const m=t.pixelType.startsWith("f")?1e-6:0,d=r.map(w=>w-m);d[0]=r[0],d[d.length-1]=r[r.length-1]+(h?1e-6:0);const g=r.length/2,[k,M]=nt(i);for(let w=0;w<o;w++)for(let x=0;x<n;x++){const b=w*n+x;if(u[b]){const U=l[b];let P=!1;for(let B=g-1;B>=0;B--)if(U===d[2*B]||U>d[2*B]&&U<d[2*B+1]){f[b]=s[B],P=!0;break}P||(a?f[b]=U>M?M:U<k?k:U:u[b]=0)}}const y=c?.length;if(y)for(let w=0;w<o;w++)for(let x=0;x<n;x++){const b=w*n+x;if(!p||p[b]){const U=l[b];for(let P=0;P<y;P+=2)if(U>=c[P]&&U<=c[P+1]){f[b]=0,u[b]=0;break}}}return new D({width:n,height:o,pixelType:i,pixels:[f],mask:u})}function At(t,e,n,o){const r=n!=null&&n.length>=2?new Set(n):null,s=n?.length===1?n[0]:null,i=!!e?.length;for(let c=0;c<t.length;c++)if(o[c]){const a=t[c];if(i){let h=!1;for(let l=0;l<e.length;l+=2)if(a>=e[l]&&a<=e[l+1]){h=!0;break}h||(o[c]=0)}o[c]&&(a===s||r?.has(a))&&(o[c]=0)}}function bt(t,e){const n=t[0].length;for(let o=0;o<n;o++)if(e[o]){let r=!1;for(let s=0;s<t.length;s++)if(t[s][o]){r=!0;break}r||(e[o]=0)}}function vt(t,e){const n=t[0].length;for(let o=0;o<n;o++)if(e[o]){let r=!1;for(let s=0;s<t.length;s++)if(t[s][o]===0){r=!0;break}r&&(e[o]=0)}}function fe(t,e){if(!L(t))return null;const{width:n,height:o,pixels:r}=t,s=n*o,i=new Uint8Array(s);t.mask?i.set(t.mask):i.fill(255);const c=r.length,{includedRanges:a,noDataValues:h,outputPixelType:l,matchAll:f,lookups:p}=e;if(p){const u=[];for(let m=0;m<c;m++){const d=p[m],g=pt(r[m],i,d.lut,d.offset||0,"u8");u.push(g)}u.length===1?i.set(u[0]):f?bt(u,i):vt(u,i)}else if(f){const u=[];for(let m=0;m<c;m++){const d=new Uint8Array(s);d.set(i),At(r[m],a?.slice(2*m,2*m+2),h?.[m],d),u.push(d)}u.length===1?i.set(u[0]):bt(u,i)}else for(let u=0;u<c;u++)At(r[u],a?.slice(2*u,2*u+2),h?.[u],i);return new D({width:n,height:o,pixelType:l,pixels:r,mask:i})}function ue(t){const{srcPixelType:e,inputRanges:n,outputValues:o,allowUnmatched:r,noDataRanges:s,isLastInputRangeInclusive:i,outputPixelType:c}=t;if(e!=="u8"&&e!=="s8"&&e!=="u16"&&e!=="s16")return null;const a=e.includes("16")?65536:256,h=e.includes("s")?-a/2:0,l=D.createEmptyBand(c,a),f=new Uint8Array(a);r&&f.fill(255);const[p,u]=nt(c);if(n?.length&&o?.length){const m=n.map(d=>d-1e-6);m[0]=n[0],i&&(m[m.length-1]=n[n.length-1]);for(let d=0;d<m.length;d++){const g=o[d]>u?u:o[d]<p?p:o[d],k=Math.ceil(m[2*d]-h),M=Math.floor(m[2*d+1]-h);for(let y=k;y<=M;y++)l[y]=g,f[y]=255}}if(s?.length)for(let m=0;m<s.length;m++){const d=Math.ceil(s[2*m]-h),g=Math.floor(s[2*m+1]-h);for(let k=d;k<=g;k++)f[k]=0}return{lut:l,offset:h,mask:f}}function pe(t,e,n){if(t!=="u8"&&t!=="s8"&&t!=="u16"&&t!=="s16")return null;const o=t.includes("16")?65536:256,r=t.includes("s")?-o/2:0,s=new Uint8Array(o);if(e)for(let i=0;i<e.length;i++){const c=Math.ceil(e[2*i]-r),a=Math.floor(e[2*i+1]-r);for(let h=c;h<=a;h++)s[h]=255}else s.fill(255);if(n)for(let i=0;i<n.length;i++)s[n[i]-r]=0;return{lut:s,offset:r}}function de(t,e,n,o,r,s,i,c){return{xmin:r<=n*t?0:r<n*t+t?r-n*t:t,ymin:s<=o*e?0:s<o*e+e?s-o*e:e,xmax:r+i<=n*t?0:r+i<n*t+t?r+i-n*t:t,ymax:s+c<=o*e?0:s+c<o*e+e?s+c-o*e:e}}function me(t,e){if(!t||t.length===0)return null;const n=t.find(m=>m.pixelBlock);if(n?.pixelBlock==null)return null;const o=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,r=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,s=.01*Math.min(o,r),i=t.sort((m,d)=>Math.abs(m.extent.ymax-d.extent.ymax)>s?d.extent.ymax-m.extent.ymax:Math.abs(m.extent.xmin-d.extent.xmin)>s?m.extent.xmin-d.extent.xmin:0),c=Math.min.apply(null,i.map(m=>m.extent.xmin)),a=Math.min.apply(null,i.map(m=>m.extent.ymin)),h=Math.max.apply(null,i.map(m=>m.extent.xmax)),l=Math.max.apply(null,i.map(m=>m.extent.ymax)),f={x:Math.round((e.xmin-c)/o),y:Math.round((l-e.ymax)/r)},p={width:Math.round((h-c)/o),height:Math.round((l-a)/r)},u={width:Math.round((e.xmax-e.xmin)/o),height:Math.round((e.ymax-e.ymin)/r)};return Math.round(p.width/n.pixelBlock.width)*Math.round(p.height/n.pixelBlock.height)!==i.length||f.x<0||f.y<0||p.width<u.width||p.height<u.height?null:{extent:e,pixelBlock:Ut(i.map(m=>m.pixelBlock),p,{clipOffset:f,clipSize:u})}}function dt(t,e,n,o,r,s){const{width:i,height:c}=n.block,{x:a,y:h}=n.offset,{width:l,height:f}=n.mosaic,p=de(i,c,o,r,a,h,l,f);let u=0,m=0;if(s){const d=s.hasGCSSShiftTransform?360:s.halfWorldWidth??0,g=i*s.resolutionX,k=s.startX+o*g;k<d&&k+g>d?m=s.rightPadding:k>=d&&(u=s.leftMargin-s.rightPadding,m=0)}if(p.xmax-=m,typeof e!="number")for(let d=p.ymin;d<p.ymax;d++){const g=(r*c+d-h)*l+(o*i-a)+u,k=d*i;for(let M=p.xmin;M<p.xmax;M++)t[g+M]=e[k+M]}else for(let d=p.ymin;d<p.ymax;d++){const g=(r*c+d-h)*l+(o*i-a)+u;for(let k=p.xmin;k<p.xmax;k++)t[g+k]=e}}function Ut(t,e,n={}){const{clipOffset:o,clipSize:r,alignmentInfo:s,blockWidths:i}=n;if(i)return ge(t,e,{blockWidths:i});const c=t.find(v=>L(v));if(c==null)return null;const a=r?r.width:e.width,h=r?r.height:e.height,l=c.width,f=c.height,p=e.width/l,u=e.height/f,m={offset:o||{x:0,y:0},mosaic:r||e,block:{width:l,height:f}},d=c.pixelType,g=D.getPixelArrayConstructor(d),k=c.pixels.length,M=[];let y,w;for(let v=0;v<k;v++){w=new g(a*h);for(let I=0;I<u;I++)for(let A=0;A<p;A++){const T=t[I*p+A];L(T)&&(y=T.pixels[v],dt(w,y,m,A,I,s))}M.push(w)}const x=t.some(v=>v==null||v.mask!=null&&v.mask.length>0),b=t.some(v=>v?.bandMasks&&v.bandMasks.length>1),U=x?new Uint8Array(a*h):void 0,P=b?[]:void 0;if(U){for(let v=0;v<u;v++)for(let I=0;I<p;I++){const A=t[v*p+I],T=A!=null?A.mask:null;dt(U,T??(A?255:0),m,I,v,s)}if(P)for(let v=0;v<k;v++){const I=new Uint8Array(a*h);for(let A=0;A<u;A++)for(let T=0;T<p;T++){const C=t[A*p+T],S=C?.bandMasks?.[v]??C?.mask;dt(I,S??(C?255:0),m,T,A,s)}P.push(I)}}const B=new D({width:a,height:h,pixels:M,pixelType:d,bandMasks:P,mask:U});return B.updateStatistics(),B}function ge(t,e,n){const o=t.find(g=>g!=null);if(o==null)return null;const r=t.some(g=>g==null||!!g.mask),{width:s,height:i}=e,c=r?new Uint8Array(s*i):null,{blockWidths:a}=n,h=[],l=o.getPlaneCount(),f=D.getPixelArrayConstructor(o.pixelType);if(r)for(let g=0,k=0;g<t.length;k+=a[g],g++){const M=t[g];if(!L(M))continue;const y=M.mask;for(let w=0;w<i;w++)for(let x=0;x<a[g];x++)c[w*s+x+k]=y==null?255:y[w*M.width+x]}const p=t.some(g=>g?.bandMasks&&g.bandMasks.length>1),u=p?[]:void 0,m=s*i;for(let g=0;g<l;g++){const k=new f(m),M=p?new Uint8Array(m):void 0;for(let y=0,w=0;y<t.length;w+=a[y],y++){const x=t[y];if(!L(x))continue;const b=x.pixels[g];if(b!=null){for(let U=0;U<i;U++)for(let P=0;P<a[y];P++)k[U*s+P+w]=b[U*x.width+P];if(M){const U=x.bandMasks?.[g]??x.mask;for(let P=0;P<i;P++)for(let B=0;B<a[y];B++)M[P*s+B+w]=U?U[P*x.width+B]:255}}}h.push(k),u&&M&&u.push(M)}const d=new D({width:s,height:i,mask:c,bandMasks:u,pixels:h,pixelType:o.pixelType});return d.updateStatistics(),d}function xe(t,e,n){if(!L(t))return null;const{width:o,height:r}=t,s=e.x,i=e.y,c=n.width+s,a=n.height+i;if(s<0||i<0||c>o||a>r||s===0&&i===0&&c===o&&a===r)return t;t.mask||(t.mask=new Uint8Array(o*r));const h=t.mask;for(let l=0;l<r;l++){const f=l*o;for(let p=0;p<o;p++)h[f+p]=l<i||l>=a||p<s||p>=c?0:1}return t.updateStatistics(),t}function we(t){if(!L(t))return null;const e=t.clone(),{width:n,height:o,pixels:r}=t,s=r[0],i=e.pixels[0],c=t.mask;for(let a=2;a<o-1;a++){const h=new Map;for(let f=a-2;f<a+2;f++)for(let p=0;p<4;p++){const u=f*n+p;lt(h,s[u],c?c[u]:1)}i[a*n]=Pt(h),i[a*n+1]=i[a*n+2]=i[a*n];let l=3;for(;l<n-1;l++){let f=(a-2)*n+l+1;lt(h,s[f],c?c[f]:1),f=(a-1)*n+l+1,lt(h,s[f],c?c[f]:1),f=a*n+l+1,lt(h,s[f],c?c[f]:1),f=(a+1)*n+l+1,lt(h,s[f],c?c[f]:1),f=(a-2)*n+l-3,rt(h,s[f],c?c[f]:1),f=(a-1)*n+l-3,rt(h,s[f],c?c[f]:1),f=a*n+l-3,rt(h,s[f],c?c[f]:1),f=(a+1)*n+l-3,rt(h,s[f],c?c[f]:1),i[a*n+l]=Pt(h)}i[a*n+l+1]=i[a*n+l]}for(let a=0;a<n;a++)i[a]=i[n+a]=i[2*n+a],i[(o-1)*n+a]=i[(o-2)*n+a];return e.updateStatistics(),e}function Pt(t){if(t.size===0)return 0;let e=0,n=-1,o=0;const r=t.keys();let s=r.next();for(;!s.done;)o=t.get(s.value),o>e&&(n=s.value,e=o),s=r.next();return n}function rt(t,e,n){if(n===0)return;const o=t.get(e);o===1?t.delete(e):t.set(e,o-1)}function lt(t,e,n){n!==0&&t.set(e,t.has(e)?t.get(e)+1:1)}function Tt(t,e,n){let{x:o,y:r}=e;const{width:s,height:i}=n;if(o===0&&r===0&&i===t.height&&s===t.width)return t;const{width:c,height:a}=t,h=Math.max(0,r),l=Math.max(0,o),f=Math.min(o+s,c),p=Math.min(r+i,a);if(f<0||p<0||!L(t))return null;o=Math.max(0,-o),r=Math.max(0,-r);const{pixels:u}=t,m=s*i,d=u.length,g=[];for(let w=0;w<d;w++){const x=u[w],b=D.createEmptyBand(t.pixelType,m);for(let U=h;U<p;U++){const P=U*c;let B=(U+r-h)*s+o;for(let v=l;v<f;v++)b[B++]=x[P+v]}g.push(b)}const k=new Uint8Array(m),M=t.mask;for(let w=h;w<p;w++){const x=w*c;let b=(w+r-h)*s+o;for(let U=l;U<f;U++)k[b++]=M?M[x+U]:1}const y=new D({width:n.width,height:n.height,pixelType:t.pixelType,pixels:g,mask:k});return y.updateStatistics(),y}function It(t,e=!0){if(!L(t))return null;const{pixels:n,width:o,height:r,mask:s,pixelType:i}=t,c=[],a=Math.round(o/2),h=Math.round(r/2),l=r-1,f=o-1;for(let u=0;u<n.length;u++){const m=n[u],d=D.createEmptyBand(i,a*h);let g=0;for(let k=0;k<r;k+=2)for(let M=0;M<o;M+=2){const y=m[k*o+M];if(e){const w=M===f?y:m[k*o+M+1],x=k===l?y:m[k*o+M+o],b=M===f?x:k===l?w:m[k*o+M+o+1];d[g++]=(y+w+x+b)/4}else d[g++]=y}c.push(d)}let p=null;if(s!=null){p=new Uint8Array(a*h);let u=0;for(let m=0;m<r;m+=2)for(let d=0;d<o;d+=2){const g=s[m*o+d];if(e){const k=d===f?g:s[m*o+d+1],M=m===l?g:s[m*o+d+o],y=d===f?M:m===l?k:s[m*o+d+o+1];p[u++]=g*k*M*y?1:0}else p[u++]=g}}return new D({width:a,height:h,pixelType:i,pixels:c,mask:p})}function ye(t,e,n=0,o=!0){if(!L(t))return null;const{width:r,height:s}=e;let{width:i,height:c}=t;const a=new Map,h={x:0,y:0},l=1+n;let f=t;for(let p=0;p<l;p++){const u=Math.ceil(i/r),m=Math.ceil(c/s);for(let d=0;d<m;d++){h.y=d*s;for(let g=0;g<u;g++){h.x=g*r;const k=Tt(f,h,e);a.set(`${p}/${d}/${g}`,k)}}p<l-1&&(f=It(f,o)),i=Math.round(i/2),c=Math.round(c/2)}return a}function ke(t){const{pixelBlock:e,tileSize:n,level:o,row:r,col:s,useBilinear:i}=t;if(!L(e))return null;const{width:c,height:a}=n,h=2**o,l=h*c,f=h*a;let p=Tt(e,{y:r*f,x:s*l},{width:l,height:f});if(!p)return null;for(let u=o;u>0;u--)p=It(p,i);return p}function Bt(t,e,n,o,r=0){const{width:s,height:i}=t,{width:c,height:a}=e,h=o.cols,l=o.rows,f=Math.ceil(c/h-.1/h),p=Math.ceil(a/l-.1/l);let u,m,d,g,k,M,y;const w=f*h,x=w*p*l,b=new Float32Array(x),U=new Float32Array(x),P=new Uint32Array(x),B=new Uint32Array(x);let v,I,A=0;for(let T=0;T<p;T++)for(let C=0;C<f;C++){u=12*(T*f+C),m=n[u],d=n[u+1],g=n[u+2],k=n[u+3],M=n[u+4],y=n[u+5];for(let S=0;S<l;S++){A=(T*l+S)*w+C*h,I=(S+.5)/l;for(let F=0;F<S;F++)v=(F+.5)/h,b[A+F]=(m*v+d*I+g)*s+r,U[A+F]=(k*v+M*I+y)*i+r,P[A+F]=Math.floor(b[A+F]),B[A+F]=Math.floor(U[A+F])}u+=6,m=n[u],d=n[u+1],g=n[u+2],k=n[u+3],M=n[u+4],y=n[u+5];for(let S=0;S<l;S++){A=(T*l+S)*w+C*h,I=(S+.5)/l;for(let F=S;F<h;F++)v=(F+.5)/h,b[A+F]=(m*v+d*I+g)*s+r,U[A+F]=(k*v+M*I+y)*i+r,P[A+F]=Math.floor(b[A+F]),B[A+F]=Math.floor(U[A+F])}}return{offsets_x:b,offsets_y:U,offsets_xi:P,offsets_yi:B,gridWidth:w}}function Me(t,e){const{coefficients:n,spacing:o}=e,{offsets_x:r,offsets_y:s,gridWidth:i}=Bt(t,t,n,{rows:o[0],cols:o[1]}),{width:c,height:a}=t,h=new Float32Array(c*a),l=180/Math.PI;for(let f=0;f<a;f++)for(let p=0;p<c;p++){const u=f*i+p,m=f===0?u:u-i,d=f===a-1?u:u+i,g=r[m]-r[d],k=s[d]-s[m];if(isNaN(g)||isNaN(k))h[f*c+p]=90;else{let M=Math.atan2(k,g)*l;M=(360+M)%360,h[f*c+p]=M}}return h}function Ae(t,e,n,o,r="nearest"){if(!L(t))return null;r==="majority"&&(t=we(t));const{pixels:s,mask:i,bandMasks:c,pixelType:a}=t,h=t.width,l=t.height,f=D.getPixelArrayConstructor(a),p=s.length,{width:u,height:m}=e;let d=!1;for(let A=0;A<n.length;A+=3)n[A]===-1&&n[A+1]===-1&&n[A+2]===-1&&(d=!0);const{offsets_x:g,offsets_y:k,offsets_xi:M,offsets_yi:y,gridWidth:w}=Bt({width:h,height:l},e,n,o,r==="majority"?.5:0);let x;const b=(A,T,C,S)=>{const F=A instanceof Float32Array||A instanceof Float64Array?0:.5;for(let N=0;N<m;N++){x=N*w;for(let V=0;V<u;V++){if(g[x]<0||k[x]<0)A[N*u+V]=0;else if(S)A[N*u+V]=T[M[x]+y[x]*h];else{const O=Math.floor(g[x]),G=Math.floor(k[x]),$=Math.ceil(g[x]),H=Math.ceil(k[x]),z=g[x]-O,K=k[x]-G;if(!C||C[O+G*h]&&C[$+G*h]&&C[O+H*h]&&C[$+H*h]){const tt=(1-z)*T[O+G*h]+z*T[$+G*h],_=(1-z)*T[O+H*h]+z*T[$+H*h];A[N*u+V]=(1-K)*tt+K*_+F}else A[N*u+V]=T[M[x]+y[x]*h]}x++}}},U=[];let P;const B=c?.length===p,v=[];for(let A=0;A<p;A++){if(B){const T=new Uint8Array(u*m);b(T,c[A],c[A],!0),v.push(T)}P=new f(u*m),b(P,s[A],B?c[A]:i,r==="nearest"||r==="majority"),U.push(P)}const I=new D({width:u,height:m,pixelType:a,pixels:U,bandMasks:B?v:void 0});if(i!=null)I.mask=new Uint8Array(u*m),b(I.mask,i,i,!0);else if(d){I.mask=new Uint8Array(u*m);for(let A=0;A<u*m;A++)I.mask[A]=g[A]<0||k[A]<0?0:1}return I.updateStatistics(),I}const Y=new Map;Y.set("meter-per-second",1),Y.set("kilometer-per-hour",.277778),Y.set("knots",.514444),Y.set("feet-per-second",.3048),Y.set("mile-per-hour",.44704);const mt=180/Math.PI,gt=5,ot=new jt({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function at(t,e){return Y.get(t)/Y.get(e)||1}function St(t){return(450-t)%360}function xt(t,e="geographic"){const[n,o]=t,r=Math.sqrt(n*n+o*o);let s=Math.atan2(o,n)*mt;return s=(360+s)%360,e==="geographic"&&(s=St(s)),[r,s]}function be(t,e="geographic"){let n=t[1];e==="geographic"&&(n=St(n)),n%=360;const o=t[0];return[o*Math.cos(n/mt),o*Math.sin(n/mt)]}function ve(t,e,n,o="geographic"){if(!L(t)||n==null)return t;const r=e==="vector-magdir"?t.clone():wt(t,e),s=r.pixels[1];for(let i=0;i<s.length;i++)s[i]=o==="geographic"?(s[i]+n[i]+270)%360:(s[i]+360-n[i])%360;return e==="vector-magdir"?r:wt(r,"vector-magdir")}function wt(t,e,n="geographic",o=1){if(!L(t))return t;const{pixels:r,width:s,height:i}=t,c=s*i,a=r[0],h=r[1],l=t.pixelType.startsWith("f")?t.pixelType:"f32",f=D.createEmptyBand(l,c),p=D.createEmptyBand(l,c);let u=0;for(let d=0;d<i;d++)for(let g=0;g<s;g++)e==="vector-uv"?([f[u],p[u]]=xt([a[u],h[u]],n),f[u]*=o):([f[u],p[u]]=be([a[u],h[u]],n),f[u]*=o,p[u]*=o),u++;const m=new D({pixelType:l,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[f,p]});return m.updateStatistics(),m}function Ue(t,e,n=1){if(n===1||!L(t))return t;const o=t.clone(),{pixels:r,width:s,height:i}=o,c=r[0];r[1];let a=0;for(let h=0;h<i;h++)for(let l=0;l<s;l++)c[a]*=n,a++;return o.updateStatistics(),o}function Pe(t,e,n,o,r){if(r==null||!r.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/o),height:Math.round(n/o),resolution:t.width/e};const s=r.xmin,i=r.ymax,c=(t.xmax-t.xmin)/e*o,a=(t.ymax-t.ymin)/n*o,h=(c+a)/2;return t.xmin=s+Math.floor((t.xmin-s)/c)*c,t.xmax=s+Math.ceil((t.xmax-s)/c)*c,t.ymin=i+Math.floor((t.ymin-i)/a)*a,t.ymax=i+Math.ceil((t.ymax-i)/a)*a,{extent:t,width:Math.round(t.width/c),height:Math.round(t.height/a),resolution:h}}const Te=Ft(0,0,0);function Ft(t=0,e=0,n=Math.PI,o=!0){o&&(n=(2*Math.PI-n)%(2*Math.PI));const r=o?-1:1,s=13*r,i=-7*r,c=-2*r,a=-16*r,h=21.75,[l,f]=E(0,e+s,n,h),[p,u]=E(t-5.5,e+i,n,h),[m,d]=E(t+5.5,e+i,n,h),[g,k]=E(t-1.5,e+c,n,h),[M,y]=E(t+1.5,e+c,n,h),[w,x]=E(t-1.5,e+a,n,h),[b,U]=E(t+1.5,e+a,n,h);return[l,f,p,u,g,k,M,y,m,d,w,x,b,U]}function Ie(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const o=10,r=n?-1:1,s=5*r,i=20*r,c=25*r,a=45,h=0,l=0,f=2,p=0,u=f*r,m=n?1:-1,d=o/2*m;let[g,k]=[h+d,l-i],[M,y]=[g+f*m,k],[w,x]=[M-p*m,y+u],[b,U]=[h-d,l-c],[P,B]=[b+p*m,U-u],v=Math.ceil(t/gt),I=Math.floor(v/10);v-=8*I;const A=[],T=[];for(let z=0;z<v/2;z++,I--){I<=0&&v%2==1&&z===(v-1)/2&&(b=h,P=b+p*m,U=(U+k)/2,B=U-u);const[K,tt]=E(b,U,e,a);if(I>0){const[_,R]=E(M,U,e,a),[it,st]=E(g,k,e,a);A.push(_),A.push(R),A.push(K),A.push(tt),A.push(it),A.push(st)}else{const[_,R]=E(M,y,e,a),[it,st]=E(w,x,e,a),[Dt,Lt]=E(P,B,e,a);T.push(K),T.push(tt),T.push(Dt),T.push(Lt),T.push(it),T.push(st),T.push(_),T.push(R)}U+=s,k+=s,y+=s,x+=s,B+=s}const[C,S]=E(h+d,l+i,e,a),F=(o/2+f)*m,[N,V]=E(h+F,l+i,e,a),[O,G]=E(h+d,l-c,e,a),[$,H]=E(h+F,l-c,e,a);return{pennants:A,barbs:T,shaft:[C,S,N,V,O,G,$,H]}}function E(t,e,n,o=1){const r=Math.sqrt(t*t+e*e)/o,s=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[r,(2*Math.PI+s-n)%(2*Math.PI)]}const ht=[0,1,3,6,10,16,21,27,33,40,47,55,63],Be=[0,.5,1,1.5,2],Se=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function Z(t,e,n,o){const r=at(o||"knots",n);let s;for(s=1;s<e.length;s++)if(s===e.length-1){if(t<e[s]*r)break}else if(t<=e[s]*r)break;return Math.min(s-1,e.length-2)}function Fe(t,e,n,o,r){let s=0;switch(e){case"beaufort_kn":s=Z(t,ht,"knots",n);break;case"beaufort_km":s=Z(t,ht,"kilometer-per-hour",n);break;case"beaufort_ft":s=Z(t,ht,"feet-per-second",n);break;case"beaufort_m":s=Z(t,ht,"meter-per-second",n);break;case"classified_arrow":s=Z(t,r??[],o,n);break;case"ocean_current_m":s=Z(t,Be,"meter-per-second",n);break;case"ocean_current_kn":s=Z(t,Se,"knots",n)}return s}function Ce(t,e){const{style:n,inputUnit:o,outputUnit:r,breakValues:s}=e,i=ot.fromJSON(o),c=ot.fromJSON(r),a=7*6,h=15;let l=0,f=0;const{width:p,height:u,mask:m}=t,d=t.pixels[0],g=t.pixels[1],k=m!=null?m.filter(x=>x>0).length:p*u,M=new Float32Array(k*a),y=new Uint32Array(h*k),w=e.invertDirection?Ft(0,0,0,!1):Te;for(let x=0;x<u;x++)for(let b=0;b<p;b++){const U=x*p+b;if(!m||m[x*p+b]){const P=(g[U]+360)%360/180*Math.PI,B=Fe(d[U],n,i,c,s);for(let I=0;I<w.length;I+=2)M[l++]=(b+.5)/p,M[l++]=(x+.5)/u,M[l++]=w[I],M[l++]=w[I+1]+P,M[l++]=B,M[l++]=d[U];const v=7*(l/a-1);y[f++]=v,y[f++]=v+1,y[f++]=v+2,y[f++]=v+0,y[f++]=v+4,y[f++]=v+3,y[f++]=v+0,y[f++]=v+2,y[f++]=v+3,y[f++]=v+2,y[f++]=v+5,y[f++]=v+3,y[f++]=v+5,y[f++]=v+6,y[f++]=v+3}}return{vertexData:M,indexData:y}}const yt=[];function Ve(t,e){if(yt.length===0)for(let u=0;u<30;u++)yt.push(Ie(5*u,0,!e.invertDirection));const n=at(ot.fromJSON(e.inputUnit),"knots"),{width:o,height:r,mask:s}=t,i=t.pixels[0],c=t.pixels[1],a=6,h=[],l=[];let f=0,p=0;for(let u=0;u<r;u++)for(let m=0;m<o;m++){const d=u*o+m,g=i[d]*n;if((!s||s[u*o+m])&&g>=gt){const k=(c[d]+360)%360/180*Math.PI,{pennants:M,barbs:y,shaft:w}=yt[Math.min(Math.floor(g/5),29)];if(M.length+y.length===0)continue;let x=h.length/a;const b=(m+.5)/o,U=(u+.5)/r;for(let P=0;P<M.length;P+=2)h[f++]=b,h[f++]=U,h[f++]=M[P],h[f++]=M[P+1]+k,h[f++]=0,h[f++]=g;for(let P=0;P<y.length;P+=2)h[f++]=b,h[f++]=U,h[f++]=y[P],h[f++]=y[P+1]+k,h[f++]=0,h[f++]=g;for(let P=0;P<w.length;P+=2)h[f++]=b,h[f++]=U,h[f++]=w[P],h[f++]=w[P+1]+k,h[f++]=0,h[f++]=g;for(let P=0;P<M.length/6;P++)l[p++]=x,l[p++]=x+1,l[p++]=x+2,x+=3;for(let P=0;P<y.length/8;P++)l[p++]=x,l[p++]=x+1,l[p++]=x+2,l[p++]=x+1,l[p++]=x+2,l[p++]=x+3,x+=4;l[p++]=x+0,l[p++]=x+1,l[p++]=x+2,l[p++]=x+1,l[p++]=x+3,l[p++]=x+2,x+=4}}return{vertexData:new Float32Array(h),indexData:new Uint32Array(l)}}function Ct(t,e){let n=0,o=0;const{width:r,height:s,mask:i}=t,c=t.pixels[0],a=[],h=[],l=at(ot.fromJSON(e.inputUnit),"knots"),f=e.style==="wind_speed"?gt:Number.MAX_VALUE;for(let p=0;p<s;p++)for(let u=0;u<r;u++){const m=c[p*r+u]*l;if((!i||i[p*r+u])&&m<f){for(let g=0;g<4;g++)a[n++]=(u+.5)/r,a[n++]=(p+.5)/s,a[n++]=g<2?-.5:.5,a[n++]=g%2==0?-.5:.5,a[n++]=0,a[n++]=m;const d=4*(n/24-1);h[o++]=d,h[o++]=d+1,h[o++]=d+2,h[o++]=d+1,h[o++]=d+2,h[o++]=d+3}}return{vertexData:new Float32Array(a),indexData:new Uint32Array(h)}}function _e(t,e){return e.style==="simple_scalar"?Ct(t,e):e.style==="wind_speed"?Ve(t,e):Ce(t,e)}function De(t,e,n,o=[0,0],r=.5){const{width:s,height:i,mask:c}=t,[a,h]=t.pixels,[l,f]=o,p=Math.round((s-l)/n),u=Math.round((i-f)/n),m=p*u,d=new Float32Array(m),g=new Float32Array(m),k=new Uint8Array(m);for(let y=0;y<u;y++)for(let w=0;w<p;w++){let x=0;const b=y*p+w,U=Math.max(0,y*n+f),P=Math.max(0,w*n+l),B=Math.min(i,U+n),v=Math.min(s,P+n);for(let I=U;I<B;I++)for(let A=P;A<v;A++){const T=I*s+A;if(!c||c[T]){x++;const C=[a[T],h[T]],[S,F]=C;d[b]+=S,g[b]+=F}}if(x>=(B-U)*(v-P)*(1-r)){k[b]=1;const[I,A]=xt([d[b]/x,g[b]/x]);d[b]=I,g[b]=A}else k[b]=0,d[b]=0,g[b]=0}const M=new D({width:p,height:u,pixels:[d,g],mask:k});return M.updateStatistics(),M}const X=()=>Q.getLogger("esri.views.2d.engine.flow.dataUtils"),Le=10;async function Re(t,e,n,o){const r=performance.now(),s=Ne(e,n),i=performance.now(),c=Oe(e,s,n.width,n.height),a=performance.now(),h=je(c),l=performance.now(),f=t==="Streamlines"?Ge(h,Le):qe(h),p=performance.now();return et("esri-2d-profiler")&&(X().info("I.1","_createFlowFieldFromData (ms)",Math.round(i-r)),X().info("I.2","_getStreamlines (ms)",Math.round(a-i)),X().info("I.3","createAnimatedLinesData (ms)",Math.round(l-a)),X().info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(p-l)),X().info("I.5","createFlowMesh (ms)",Math.round(p-r)),X().info("I.6","Mesh size (bytes)",f.vertexData.buffer.byteLength+f.indexData.buffer.byteLength)),await Promise.resolve(),Gt(o),f}function Ne(t,e){const n=We(e.data,e.width,e.height,t.smoothing);return t.interpolate?(o,r)=>{const s=Math.floor(o),i=Math.floor(r);if(s<0||s>=e.width)return[0,0];if(i<0||i>=e.height)return[0,0];const c=o-s,a=r-i,h=s,l=i,f=s<e.width-1?s+1:s,p=i<e.height-1?i+1:i,u=n[2*(l*e.width+h)],m=n[2*(l*e.width+f)],d=n[2*(p*e.width+h)],g=n[2*(p*e.width+f)],k=n[2*(l*e.width+h)+1],M=n[2*(l*e.width+f)+1];return[(u*(1-a)+d*a)*(1-c)+(m*(1-a)+g*a)*c,(k*(1-a)+n[2*(p*e.width+h)+1]*a)*(1-c)+(M*(1-a)+n[2*(p*e.width+f)+1]*a)*c]}:(o,r)=>{const s=Math.round(o),i=Math.round(r);return s<0||s>=e.width||i<0||i>=e.height?[0,0]:[n[2*(i*e.width+s)],n[2*(i*e.width+s)+1]]}}function Ee(t,e,n,o,r,s,i,c,a){const h=[];let l=n,f=o,p=0,[u,m]=e(l,f);u*=t.velocityScale,m*=t.velocityScale;const d=Math.sqrt(u*u+m*m);let g,k;h.push({x:l,y:f,t:p,speed:d});for(let M=0;M<t.verticesPerLine;M++){let[y,w]=e(l,f);y*=t.velocityScale,w*=t.velocityScale;const x=Math.sqrt(y*y+w*w);if(x<t.minSpeedThreshold)return h;const b=y/x,U=w/x;if(l+=b*t.segmentLength,f+=U*t.segmentLength,p+=t.segmentLength/x,Math.acos(b*g+U*k)>t.maxTurnAngle)return h;if(t.collisions){const P=Math.round(l*a),B=Math.round(f*a);if(P<0||P>i-1||B<0||B>c-1)return h;const v=s[B*i+P];if(v!==-1&&v!==r)return h;s[B*i+P]=r}h.push({x:l,y:f,t:p,speed:x}),g=b,k=U}return h}function Oe(t,e,n,o){const r=[],s=new kt,i=1/Math.max(t.lineCollisionWidth,1),c=Math.round(n*i),a=Math.round(o*i),h=new Int32Array(c*a);for(let f=0;f<h.length;f++)h[f]=-1;const l=[];for(let f=0;f<o;f+=t.lineSpacing)for(let p=0;p<n;p+=t.lineSpacing)l.push({x:p,y:f,sort:s.getFloat()});l.sort((f,p)=>f.sort-p.sort);for(const{x:f,y:p}of l)if(s.getFloat()<t.density){const u=Ee(t,e,f,p,r.length,h,c,a,i);if(u.length<2)continue;r.push(u)}return r}function We(t,e,n,o){if(o===0)return t;const r=Math.round(3*o),s=new Array(2*r+1);let i=0;for(let h=-r;h<=r;h++){const l=Math.exp(-h*h/(o*o));s[h+r]=l,i+=l}for(let h=-r;h<=r;h++)s[h+r]/=i;const c=new Float32Array(t.length);for(let h=0;h<n;h++)for(let l=0;l<e;l++){let f=0,p=0;for(let u=-r;u<=r;u++){if(l+u<0||l+u>=e)continue;const m=s[u+r];f+=m*t[2*(h*e+(l+u))],p+=m*t[2*(h*e+(l+u))+1]}c[2*(h*e+l)]=f,c[2*(h*e+l)+1]=p}const a=new Float32Array(t.length);for(let h=0;h<e;h++)for(let l=0;l<n;l++){let f=0,p=0;for(let u=-r;u<=r;u++){if(l+u<0||l+u>=n)continue;const m=s[u+r];f+=m*c[2*((l+u)*e+h)],p+=m*c[2*((l+u)*e+h)+1]}a[2*(l*e+h)]=f,a[2*(l*e+h)+1]=p}return a}function je(t,e){const n=new kt,o=t.reduce((a,h)=>a+h.length,0),r=new Float32Array(4*o),s=new Array(t.length);let i=0,c=0;for(const a of t){const h=i;for(const l of a)r[4*i]=l.x,r[4*i+1]=l.y,r[4*i+2]=l.t,r[4*i+3]=l.speed,i++;s[c++]={startVertex:h,numberOfVertices:a.length,totalTime:a[a.length-1].t,timeSeed:n.getFloat()}}return{lineVertices:r,lineDescriptors:s}}function Ge(t,e){const{lineVertices:n,lineDescriptors:o}=t;let r=0,s=0;for(const p of o)r+=2*p.numberOfVertices,s+=6*(p.numberOfVertices-1);const i=new Float32Array(r*9),c=new Uint32Array(s);let a=0,h=0;function l(){c[h++]=a-2,c[h++]=a,c[h++]=a-1,c[h++]=a,c[h++]=a+1,c[h++]=a-1}function f(p,u,m,d,g,k,M,y){const w=a*9;let x=0;i[w+x++]=p,i[w+x++]=u,i[w+x++]=1,i[w+x++]=m,i[w+x++]=k,i[w+x++]=M,i[w+x++]=d/2,i[w+x++]=g/2,i[w+x++]=y,a++,i[w+x++]=p,i[w+x++]=u,i[w+x++]=-1,i[w+x++]=m,i[w+x++]=k,i[w+x++]=M,i[w+x++]=-d/2,i[w+x++]=-g/2,i[w+x++]=y,a++}for(const p of o){const{totalTime:u,timeSeed:m}=p;let d=null,g=null,k=null,M=null,y=null,w=null;for(let x=0;x<p.numberOfVertices;x++){const b=n[4*(p.startVertex+x)],U=n[4*(p.startVertex+x)+1],P=n[4*(p.startVertex+x)+2],B=n[4*(p.startVertex+x)+3];let v=null,I=null,A=null,T=null;if(x>0){v=b-d,I=U-g;const C=Math.sqrt(v*v+I*I);if(v/=C,I/=C,x>1){let S=v+y,F=I+w;const N=Math.sqrt(S*S+F*F);S/=N,F/=N;const V=Math.min(1/(S*v+F*I),e);S*=V,F*=V,A=-F,T=S}else A=-I,T=v;A!==null&&T!==null&&(f(d,g,k,A,T,u,m,B),l())}d=b,g=U,k=P,y=v,w=I,M=B}f(d,g,k,-w,y,u,m,M)}return{vertexData:i,indexData:c}}function qe(t){const{lineVertices:e,lineDescriptors:n}=t;let o=0,r=0;for(const A of n){const T=A.numberOfVertices-1;o+=4*T*2,r+=6*T*2}const s=new Float32Array(o*16),i=new Uint32Array(r);let c,a,h,l,f,p,u,m,d,g,k,M,y,w,x=0,b=0;function U(){i[b++]=x-8,i[b++]=x-7,i[b++]=x-6,i[b++]=x-7,i[b++]=x-5,i[b++]=x-6,i[b++]=x-4,i[b++]=x-3,i[b++]=x-2,i[b++]=x-3,i[b++]=x-1,i[b++]=x-2}function P(A,T,C,S,F,N,V,O,G,$,H,z,K,tt){const _=x*16;let R=0;for(const it of[1,2])for(const st of[1,2,3,4])s[_+R++]=A,s[_+R++]=T,s[_+R++]=C,s[_+R++]=S,s[_+R++]=V,s[_+R++]=O,s[_+R++]=G,s[_+R++]=$,s[_+R++]=it,s[_+R++]=st,s[_+R++]=K,s[_+R++]=tt,s[_+R++]=F/2,s[_+R++]=N/2,s[_+R++]=H/2,s[_+R++]=z/2,x++}function B(A,T){let C=d+k,S=g+M;const F=Math.sqrt(C*C+S*S);C/=F,S/=F;const N=d*C+g*S;C/=N,S/=N;let V=k+y,O=M+w;const G=Math.sqrt(V*V+O*O);V/=G,O/=G;const $=k*V+M*O;V/=$,O/=$,P(c,a,h,l,-S,C,f,p,u,m,-O,V,A,T),U()}function v(A,T,C,S,F,N){if(d=k,g=M,k=y,M=w,d==null&&g==null&&(d=k,g=M),f!=null&&p!=null){y=A-f,w=T-p;const V=Math.sqrt(y*y+w*w);y/=V,w/=V}d!=null&&g!=null&&B(F,N),c=f,a=p,h=u,l=m,f=A,p=T,u=C,m=S}function I(A,T){d=k,g=M,k=y,M=w,d==null&&g==null&&(d=k,g=M),d!=null&&g!=null&&B(A,T)}for(const A of n){c=null,a=null,h=null,l=null,f=null,p=null,u=null,m=null,d=null,g=null,k=null,M=null,y=null,w=null;const{totalTime:T,timeSeed:C}=A;for(let S=0;S<A.numberOfVertices;S++)v(e[4*(A.startVertex+S)],e[4*(A.startVertex+S)+1],e[4*(A.startVertex+S)+2],e[4*(A.startVertex+S)+3],T,C);I(T,C)}return{vertexData:s,indexData:i}}function Vt(t,e){const n=e.pixels,{width:o,height:r}=e,s=new Float32Array(o*r*2),i=e.mask||new Uint8Array(o*r*2);if(e.mask||i.fill(255),t==="vector-uv")for(let c=0;c<o*r;c++)s[2*c]=n[0][c],s[2*c+1]=-n[1][c];else if(t==="vector-magdir")for(let c=0;c<o*r;c++){const a=n[0][c],h=Xt(n[1][c]),l=Math.cos(h-Math.PI/2),f=Math.sin(h-Math.PI/2);s[2*c]=l*a,s[2*c+1]=f*a}return{data:s,mask:i,width:o,height:r}}async function $e(t,e,n,o,r,s){const i=performance.now(),c=qt(e.spatialReference);if(!c){const w=await _t(t,e,n,o,r,s);return et("esri-2d-profiler")&&X().info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-i)),et("esri-2d-profiler")&&X().info("I.9","Number of parts",1),w}const[a,h]=c.valid,l=h-a,f=Math.ceil(e.width/l),p=e.width/f,u=Math.round(n/f);let m=e.xmin;const d=[],g=performance.now();for(let w=0;w<f;w++){const x=new $t({xmin:m,xmax:m+p,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});d.push(_t(t,x,u,o,r,s)),m+=p}const k=await Promise.all(d);et("esri-2d-profiler")&&X().info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-g)),et("esri-2d-profiler")&&X().info("I.9","Number of parts",k.length);const M={data:new Float32Array(n*o*2),mask:new Uint8Array(n*o),width:n,height:o};let y=0;for(const w of k){for(let x=0;x<w.height;x++)for(let b=0;b<w.width;b++)y+b>=n||(M.data[2*(x*n+y+b)]=w.data[2*(x*w.width+b)],M.data[2*(x*n+y+b)+1]=w.data[2*(x*w.width+b)+1],M.mask[x*n+y+b]=w.mask[x*w.width+b]);y+=w.width}return et("esri-2d-profiler")&&X().info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-i)),M}async function _t(t,e,n,o,r,s){const i={requestProjectedLocalDirections:!0,signal:s};if(r!=null&&(i.timeExtent=r),t.type==="imagery"){await t.load({signal:s});const h=t.rasterInfo.dataType,l=await t.fetchImage(e,n,o,i);return l?.pixelData?.pixelBlock==null?{data:new Float32Array(n*o*2),mask:new Uint8Array(n*o),width:n,height:o}:Vt(h,l.pixelData.pixelBlock)}await t.load({signal:s});const c=t.serviceRasterInfo.dataType,a=await t.fetchPixels(e,n,o,i);return a?.pixelBlock==null?{data:new Float32Array(n*o*2),mask:new Uint8Array(n*o),width:n,height:o}:Vt(c,a.pixelBlock)}export{pe as A,se as B,fe as C,Ae as D,ke as E,ue as F,pt as G,ce as H,me as M,Me as R,De as S,xe as T,Ut as U,ye as W,Ct as _,$e as a,_e as b,ne as c,Kt as d,ot as e,wt as f,D as g,at as h,ct as i,nt as j,re as k,xt as l,Pe as m,he as n,L as o,Ue as p,ae as q,oe as r,Re as s,Yt as t,ve as u,Qt as v,Mt as w,le as x,ut as y,ft as z};
