{"version":3,"file":"openCloseComponent-BGQ6h7vg.js","sources":["../../node_modules/@esri/calcite-components/dist/components/openCloseComponent.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.13.2\n */\nimport { readTask } from '@stencil/core/internal/client';\nimport { w as whenTransitionDone } from './dom.js';\n\n/**\n * Exported for testing purposes only\n */\nconst internalReadTask = readTask;\nfunction isOpen(component) {\n    return \"opened\" in component ? component.opened : component.open;\n}\n/**\n * Helper to determine globally set transition duration on the given openTransitionProp, which is imported and set in the @Watch(\"open\").\n * Used to emit (before)open/close events both for when the opacity transition is present and when there is none (transition-duration is set to 0).\n *\n * @example\n * import { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\n *\n * async componentWillLoad() {\n * // When component initially renders, if `open` was set we need to trigger on load as watcher doesn't fire.\n * if (this.open) {\n *    onToggleOpenCloseComponent(this);\n * }\n * @Watch(\"open\")\n * async toggleModal(value: boolean): Promise<void> {\n *    onToggleOpenCloseComponent(this);\n * }\n *\n * @param component - OpenCloseComponent uses `open` prop to emit (before)open/close.\n */\nfunction onToggleOpenCloseComponent(component) {\n    internalReadTask(() => {\n        if (!component.transitionEl) {\n            return;\n        }\n        whenTransitionDone(component.transitionEl, component.openTransitionProp, () => {\n            if (isOpen(component)) {\n                component.onBeforeOpen();\n            }\n            else {\n                component.onBeforeClose();\n            }\n        }, () => {\n            if (isOpen(component)) {\n                component.onOpen();\n            }\n            else {\n                component.onClose();\n            }\n        });\n    });\n}\n\nexport { onToggleOpenCloseComponent as o };\n\n//# sourceMappingURL=openCloseComponent.js.map"],"names":["internalReadTask","readTask","isOpen","component","onToggleOpenCloseComponent","whenTransitionDone"],"mappings":";;AAWA,MAAMA,IAAmBC;AACzB,SAASC,EAAOC,GAAW;AACvB,SAAO,YAAYA,IAAYA,EAAU,SAASA,EAAU;AAChE;AAoBA,SAASC,EAA2BD,GAAW;AAC3C,EAAAH,EAAiB,MAAM;AACnB,IAAKG,EAAU,gBAGfE,EAAmBF,EAAU,cAAcA,EAAU,oBAAoB,MAAM;AAC3E,MAAID,EAAOC,CAAS,IAChBA,EAAU,aAAc,IAGxBA,EAAU,cAAe;AAAA,IAEzC,GAAW,MAAM;AACL,MAAID,EAAOC,CAAS,IAChBA,EAAU,OAAQ,IAGlBA,EAAU,QAAS;AAAA,IAEnC,CAAS;AAAA,EACT,CAAK;AACL;","x_google_ignoreList":[0]}